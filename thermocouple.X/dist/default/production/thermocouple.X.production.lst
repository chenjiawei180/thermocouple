

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Jul 07 16:55:16 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020D                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0FE4                     	;# 
   185  0FE5                     	;# 
   186  0FE6                     	;# 
   187  0FE7                     	;# 
   188  0FE8                     	;# 
   189  0FE9                     	;# 
   190  0FEA                     	;# 
   191  0FEB                     	;# 
   192  0FED                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020D                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020D                     	;# 
   379  0210                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0095                     	;# 
   673  0096                     	;# 
   674  0097                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0291                     	;# 
   729  0291                     	;# 
   730  0292                     	;# 
   731  0293                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  008C                     	;# 
   778  008D                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020D                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0298                     	;# 
   844  0298                     	;# 
   845  0299                     	;# 
   846  029A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  008E                     	;# 
   891  0090                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009B                     	;# 
   901  009C                     	;# 
   902  009D                     	;# 
   903  009E                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0194                     	;# 
   919  0195                     	;# 
   920  0196                     	;# 
   921  0197                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0090                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018E                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0197                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  0394                     	;# 
  1070  0395                     	;# 
  1071  0396                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0090                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019C                     	;# 
  1151  019C                     	;# 
  1152  019D                     	;# 
  1153  019E                     	;# 
  1154  019F                     	;# 
  1155  020D                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0298                     	;# 
  1177  0298                     	;# 
  1178  0299                     	;# 
  1179  029A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  011D                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  018E                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019C                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020D                     	;# 
  1267  0210                     	;# 
  1268  0211                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0212                     	;# 
  1272  0213                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  0394                     	;# 
  1292  0395                     	;# 
  1293  0396                     	;# 
  1294  0FE4                     	;# 
  1295  0FE5                     	;# 
  1296  0FE6                     	;# 
  1297  0FE7                     	;# 
  1298  0FE8                     	;# 
  1299  0FE9                     	;# 
  1300  0FEA                     	;# 
  1301  0FEB                     	;# 
  1302  0FED                     	;# 
  1303  0FEE                     	;# 
  1304  0FEF                     	;# 
  1305  0000                     	;# 
  1306  0001                     	;# 
  1307  0002                     	;# 
  1308  0003                     	;# 
  1309  0004                     	;# 
  1310  0005                     	;# 
  1311  0006                     	;# 
  1312  0007                     	;# 
  1313  0008                     	;# 
  1314  0009                     	;# 
  1315  000A                     	;# 
  1316  000B                     	;# 
  1317  000C                     	;# 
  1318  000D                     	;# 
  1319  000E                     	;# 
  1320  0010                     	;# 
  1321  0011                     	;# 
  1322  0012                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0016                     	;# 
  1326  0017                     	;# 
  1327  0018                     	;# 
  1328  0019                     	;# 
  1329  001A                     	;# 
  1330  001B                     	;# 
  1331  001C                     	;# 
  1332  008C                     	;# 
  1333  008D                     	;# 
  1334  008E                     	;# 
  1335  0090                     	;# 
  1336  0091                     	;# 
  1337  0092                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0099                     	;# 
  1342  009A                     	;# 
  1343  009B                     	;# 
  1344  009B                     	;# 
  1345  009C                     	;# 
  1346  009D                     	;# 
  1347  009E                     	;# 
  1348  010C                     	;# 
  1349  010D                     	;# 
  1350  010E                     	;# 
  1351  0116                     	;# 
  1352  0117                     	;# 
  1353  011D                     	;# 
  1354  018C                     	;# 
  1355  018D                     	;# 
  1356  018E                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0194                     	;# 
  1363  0195                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0214                     	;# 
  1387  0215                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0216                     	;# 
  1391  0216                     	;# 
  1392  0217                     	;# 
  1393  0217                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  0394                     	;# 
  1403  0395                     	;# 
  1404  0396                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0095                     	;# 
  1450  0096                     	;# 
  1451  0097                     	;# 
  1452  0099                     	;# 
  1453  009A                     	;# 
  1454  009B                     	;# 
  1455  009B                     	;# 
  1456  009C                     	;# 
  1457  009D                     	;# 
  1458  009E                     	;# 
  1459  010C                     	;# 
  1460  010D                     	;# 
  1461  010E                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  011D                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0194                     	;# 
  1474  0195                     	;# 
  1475  0196                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019C                     	;# 
  1484  019C                     	;# 
  1485  019D                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  020D                     	;# 
  1489  0210                     	;# 
  1490  0211                     	;# 
  1491  0211                     	;# 
  1492  0212                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0214                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0216                     	;# 
  1502  0216                     	;# 
  1503  0217                     	;# 
  1504  0217                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  0394                     	;# 
  1514  0395                     	;# 
  1515  0396                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  008C                     	;# 
  1555  008D                     	;# 
  1556  008E                     	;# 
  1557  0090                     	;# 
  1558  0091                     	;# 
  1559  0092                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0099                     	;# 
  1564  009A                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020D                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0015                     	;# 
  1657  0016                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  0019                     	;# 
  1662  001A                     	;# 
  1663  001B                     	;# 
  1664  001C                     	;# 
  1665  008C                     	;# 
  1666  008D                     	;# 
  1667  008E                     	;# 
  1668  0090                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  010C                     	;# 
  1682  010D                     	;# 
  1683  010E                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  011D                     	;# 
  1687  018C                     	;# 
  1688  018D                     	;# 
  1689  018E                     	;# 
  1690  0191                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  019C                     	;# 
  1707  019D                     	;# 
  1708  019E                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0214                     	;# 
  1720  0215                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0291                     	;# 
  1728  0291                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  029A                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0015                     	;# 
  1768  0016                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001B                     	;# 
  1775  001C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  0090                     	;# 
  1780  0091                     	;# 
  1781  0092                     	;# 
  1782  0095                     	;# 
  1783  0096                     	;# 
  1784  0097                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0116                     	;# 
  1796  0117                     	;# 
  1797  011D                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  0191                     	;# 
  1802  0191                     	;# 
  1803  0192                     	;# 
  1804  0193                     	;# 
  1805  0193                     	;# 
  1806  0194                     	;# 
  1807  0195                     	;# 
  1808  0196                     	;# 
  1809  0197                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019D                     	;# 
  1819  019E                     	;# 
  1820  019F                     	;# 
  1821  020D                     	;# 
  1822  0210                     	;# 
  1823  0211                     	;# 
  1824  0211                     	;# 
  1825  0212                     	;# 
  1826  0212                     	;# 
  1827  0213                     	;# 
  1828  0213                     	;# 
  1829  0214                     	;# 
  1830  0214                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0216                     	;# 
  1835  0216                     	;# 
  1836  0217                     	;# 
  1837  0217                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0298                     	;# 
  1843  0298                     	;# 
  1844  0299                     	;# 
  1845  029A                     	;# 
  1846  0394                     	;# 
  1847  0395                     	;# 
  1848  0396                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0015                     	;# 
  1879  0016                     	;# 
  1880  0016                     	;# 
  1881  0017                     	;# 
  1882  0018                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  008E                     	;# 
  1890  0090                     	;# 
  1891  0091                     	;# 
  1892  0092                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0099                     	;# 
  1897  009A                     	;# 
  1898  009B                     	;# 
  1899  009B                     	;# 
  1900  009C                     	;# 
  1901  009D                     	;# 
  1902  009E                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  020D                     	;# 
  1933  0210                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0291                     	;# 
  1950  0291                     	;# 
  1951  0292                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  0394                     	;# 
  1958  0395                     	;# 
  1959  0396                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971                           
  1972                           	psect	idataBANK1
  1973  08F5                     __pidataBANK1:	
  1974                           
  1975                           ;initializer for Bq32k_Time_Init@F2018
  1976  08F5  3401               	retlw	1
  1977  08F6  3440               	retlw	64
  1978  08F7  3414               	retlw	20
  1979  08F8  3402               	retlw	2
  1980  08F9  3404               	retlw	4
  1981  08FA  3407               	retlw	7
  1982  08FB  3416               	retlw	22
  1983  08FC  3400               	retlw	0
  1984  08FD  3400               	retlw	0
  1985  08FE  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _Dis_TAB:	
  1990  1000  34D7               	retlw	215
  1991  1001  3450               	retlw	80
  1992  1002  34B5               	retlw	181
  1993  1003  34F1               	retlw	241
  1994  1004  3472               	retlw	114
  1995  1005  34E3               	retlw	227
  1996  1006  34E7               	retlw	231
  1997  1007  3451               	retlw	81
  1998  1008  34F7               	retlw	247
  1999  1009  34F3               	retlw	243
  2000  100A  3477               	retlw	119
  2001  100B  34E6               	retlw	230
  2002  100C  3487               	retlw	135
  2003  100D  34F4               	retlw	244
  2004  100E  34A7               	retlw	167
  2005  100F  3427               	retlw	39
  2006  1010  3457               	retlw	87
  2007  1011  3420               	retlw	32
  2008  1012  3420               	retlw	32
  2009  1013  3420               	retlw	32
  2010  1014  3420               	retlw	32
  2011  1015                     __end_of_Dis_TAB:	
  2012                           
  2013                           	psect	nvBANK1
  2014  00E9                     __pnvBANK1:	
  2015  00E9                     _timer0ReloadVal:	
  2016  00E9                     	ds	1
  2017  000B                     _INTCONbits	set	11
  2018  0011                     _PIR1bits	set	17
  2019  0015                     _TMR0	set	21
  2020  0067                     _RA7	set	103
  2021  0069                     _RB1	set	105
  2022  006B                     _RB3	set	107
  2023  006D                     _RB5	set	109
  2024  009D                     _ADCON0	set	157
  2025  009D                     _ADCON0bits	set	157
  2026  009E                     _ADCON1	set	158
  2027  009C                     _ADRESH	set	156
  2028  009B                     _ADRESL	set	155
  2029  0095                     _OPTION_REG	set	149
  2030  0095                     _OPTION_REGbits	set	149
  2031  0099                     _OSCCON	set	153
  2032  009A                     _OSCSTAT	set	154
  2033  008C                     _TRISA	set	140
  2034  008D                     _TRISB	set	141
  2035  008E                     _TRISC	set	142
  2036  0469                     _TRISB1	set	1129
  2037  046B                     _TRISB3	set	1131
  2038  011D                     _APFCON	set	285
  2039  0117                     _FVRCON	set	279
  2040  0117                     _FVRCONbits	set	279
  2041  010C                     _LATA	set	268
  2042  010D                     _LATB	set	269
  2043  010E                     _LATC	set	270
  2044  0860                     _LATA0	set	2144
  2045  0861                     _LATA1	set	2145
  2046  0862                     _LATA2	set	2146
  2047  0863                     _LATA3	set	2147
  2048  0864                     _LATA4	set	2148
  2049  0865                     _LATA5	set	2149
  2050  0868                     _LATB0	set	2152
  2051  0869                     _LATB1	set	2153
  2052  0870                     _LATC0	set	2160
  2053  0871                     _LATC1	set	2161
  2054  0872                     _LATC2	set	2162
  2055  018C                     _ANSELA	set	396
  2056  018D                     _ANSELB	set	397
  2057  018E                     _ANSELC	set	398
  2058  019F                     _BAUDCON	set	415
  2059  0192                     _PMADRH	set	402
  2060  0191                     _PMADRL	set	401
  2061  0195                     _PMCON1bits	set	405
  2062  0196                     _PMCON2	set	406
  2063  0194                     _PMDATH	set	404
  2064  0193                     _PMDATL	set	403
  2065  0199                     _RCREG	set	409
  2066  019D                     _RCSTA	set	413
  2067  019D                     _RCSTAbits	set	413
  2068  019C                     _SPBRGH	set	412
  2069  019B                     _SPBRGL	set	411
  2070  019A                     _TXREG	set	410
  2071  019E                     _TXSTA	set	414
  2072  0212                     _SSP1ADD	set	530
  2073  0215                     _SSP1CON1	set	533
  2074  0215                     _SSP1CON1bits	set	533
  2075  0214                     _SSP1STAT	set	532
  2076  0214                     _SSP1STATbits	set	532
  2077  0211                     _SSPBUF	set	529
  2078  020D                     _WPUB	set	525
  2079  0210                     _WPUE	set	528
  2080                           
  2081                           ; #config settings
  2082  0000                     
  2083                           	psect	cinit
  2084  0015                     start_initialization:	
  2085  0015                     __initialization:	
  2086                           
  2087                           ; Clear objects allocated to COMMON
  2088  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2089  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2090  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2091                           
  2092                           ; Clear objects allocated to BANK0
  2093  0018  305A               	movlw	low __pbssBANK0
  2094  0019  0084               	movwf	4
  2095  001A  3000               	movlw	high __pbssBANK0
  2096  001B  0085               	movwf	5
  2097  001C  3014               	movlw	20
  2098  001D  3188  20D6  3180   	fcall	clear_ram0
  2099                           
  2100                           ; Clear objects allocated to BANK1
  2101  0020  30A0               	movlw	low __pbssBANK1
  2102  0021  0084               	movwf	4
  2103  0022  3000               	movlw	high __pbssBANK1
  2104  0023  0085               	movwf	5
  2105  0024  303A               	movlw	58
  2106  0025  3188  20D6  3180   	fcall	clear_ram0
  2107                           
  2108                           ; Clear objects allocated to BANK2
  2109  0028  3020               	movlw	low __pbssBANK2
  2110  0029  0084               	movwf	4
  2111  002A  3001               	movlw	high __pbssBANK2
  2112  002B  0085               	movwf	5
  2113  002C  3040               	movlw	64
  2114  002D  3188  20D6  3180   	fcall	clear_ram0
  2115                           
  2116                           ; Initialize objects allocated to BANK1
  2117  0030  30F5               	movlw	low __pidataBANK1
  2118  0031  0084               	movwf	4
  2119  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2120  0033  0085               	movwf	5
  2121  0034  30DA               	movlw	low __pdataBANK1
  2122  0035  0086               	movwf	6
  2123  0036  3000               	movlw	high __pdataBANK1
  2124  0037  0087               	movwf	7
  2125  0038  300A               	movlw	10
  2126  0039  3188  20D0         	fcall	init_ram
  2127  003B                     end_of_initialization:	
  2128                           ;End of C runtime variable initialization code
  2129                           
  2130  003B                     __end_of__initialization:	
  2131  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2132  003C  0020               	movlb	0
  2133  003D  3183  2B6A         	ljmp	_main	;jump to C main() function
  2134                           
  2135                           	psect	bssCOMMON
  2136  0078                     __pbssCOMMON:	
  2137  0078                     _Cur_temperature_time_ch2:	
  2138  0078                     	ds	1
  2139  0079                     _MAX31856Sec:	
  2140  0079                     	ds	1
  2141  007A                     _uch_cr0:	
  2142  007A                     	ds	1
  2143                           
  2144                           	psect	bssBANK0
  2145  005A                     __pbssBANK0:	
  2146  005A                     _temperature_value:	
  2147  005A                     	ds	4
  2148  005E                     _CH1_temperature:	
  2149  005E                     	ds	2
  2150  0060                     _CH2_temperature:	
  2151  0060                     	ds	2
  2152  0062                     _Cur_Save_Index:	
  2153  0062                     	ds	2
  2154  0064                     _temperature_int:	
  2155  0064                     	ds	2
  2156  0066                     _CH1_state:	
  2157  0066                     	ds	1
  2158  0067                     _CH2_state:	
  2159  0067                     	ds	1
  2160  0068                     _Cur_temperature_time_ch1:	
  2161  0068                     	ds	1
  2162  0069                     _LongPressSec:	
  2163  0069                     	ds	1
  2164  006A                     _Record_flag:	
  2165  006A                     	ds	1
  2166  006B                     _temperature_decimal:	
  2167  006B                     	ds	1
  2168  006C                     _time_count:	
  2169  006C                     	ds	1
  2170  006D                     _uch_ltcbh:	
  2171  006D                     	ds	1
  2172                           
  2173                           	psect	bssBANK1
  2174  00A0                     __pbssBANK1:	
  2175  00A0                     Two_Display@F2123:	
  2176  00A0                     	ds	4
  2177  00A4                     err_Display@F2126:	
  2178  00A4                     	ds	4
  2179  00A8                     time_Display@F2129:	
  2180  00A8                     	ds	4
  2181  00AC                     TMR0_ISR@CountCallBack:	
  2182  00AC                     	ds	2
  2183  00AE                     _Cur_temperature:	
  2184  00AE                     	ds	2
  2185  00B0                     _temperature_sign:	
  2186  00B0                     	ds	1
  2187  00B1                     _tmr_flag:	
  2188  00B1                     	ds	1
  2189  00B2                     _uch_cjth:	
  2190  00B2                     	ds	1
  2191  00B3                     _uch_cjtl:	
  2192  00B3                     	ds	1
  2193  00B4                     _uch_cr1:	
  2194  00B4                     	ds	1
  2195  00B5                     _uch_ltcbl:	
  2196  00B5                     	ds	1
  2197  00B6                     _uch_ltcbm:	
  2198  00B6                     	ds	1
  2199  00B7                     _uch_mask:	
  2200  00B7                     	ds	1
  2201  00B8                     _uch_sr:	
  2202  00B8                     	ds	1
  2203  00B9                     _uch_reg:	
  2204  00B9                     	ds	8
  2205  00C1                     _rtc_save_ch1:	
  2206  00C1                     	ds	7
  2207  00C8                     _rtc_save_ch2:	
  2208  00C8                     	ds	7
  2209  00CF                     _rtc_tm:	
  2210  00CF                     	ds	7
  2211  00D6                     _display_buff:	
  2212  00D6                     	ds	4
  2213                           
  2214                           	psect	dataBANK1
  2215  00DA                     __pdataBANK1:	
  2216  00DA                     Bq32k_Time_Init@F2018:	
  2217  00DA                     	ds	10
  2218                           
  2219                           	psect	bssBANK2
  2220  0120                     __pbssBANK2:	
  2221  0120                     _Flash_buff:	
  2222  0120                     	ds	64
  2223                           
  2224                           	psect	clrtext
  2225  08D6                     clear_ram0:	
  2226                           ;	Called with FSR0 containing the base address, and
  2227                           ;	WREG with the size to clear
  2228                           
  2229  08D6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2230  08D7                     clrloop0:	
  2231  08D7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2232  08D8  3101               	addfsr 0,1
  2233  08D9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2234  08DA  28D7               	goto	clrloop0	;have we reached the end yet?
  2235  08DB  3400               	retlw	0	;all done for this memory range, return
  2236                           
  2237                           	psect	inittext
  2238  08D0                     init_ram:	
  2239  08D0  00FE               	movwf	126
  2240  08D1                     initloop:	
  2241  08D1  0012               	moviw fsr0++
  2242  08D2  001E               	movwi fsr1++
  2243  08D3  0BFE               	decfsz	126,f
  2244  08D4  28D1               	goto	initloop
  2245  08D5  3400               	retlw	0
  2246                           
  2247                           	psect	cstackBANK1
  2248  00E4                     __pcstackBANK1:	
  2249  00E4                     main@data_temp:	
  2250                           
  2251                           ; 2 bytes @ 0x0
  2252  00E4                     	ds	2
  2253  00E6                     main@i:	
  2254                           
  2255                           ; 1 bytes @ 0x2
  2256  00E6                     	ds	1
  2257  00E7                     main@bat_data:	
  2258                           
  2259                           ; 2 bytes @ 0x3
  2260  00E7                     	ds	2
  2261                           
  2262                           	psect	cstackCOMMON
  2263  0070                     __pcstackCOMMON:	
  2264  0070                     ?_OSCILLATOR_Initialize:	
  2265  0070                     ?_SPI_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_EUSART_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_ADC_Initialize:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_TMR0_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_FVR_Initialize:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_TMR0_CallBack:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_TMR0_CallBack:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_maxim_31856_init:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Bq32k_Time_Init:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_SendCmd_1621:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Serach_Flash_Head:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_temperature_process:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_Save_process:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_Calculate_Time:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_Tc_Display:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_err_Display:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_Two_Display:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_time_Display:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_Bq32k_Rtc_Read_Time:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_Set_start_flag:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_Write_Flash_head:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_Save_Write_time:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_Set_finish_flag:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_Write_Flash_finish:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_bcd2bin:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_PIN_MANAGER_Initialize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_SYSTEM_Initialize:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_SPI_Exchange8bit:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_EUSART_Write:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_TMR0_ISR:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_INTERRUPT_InterruptManager:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_maxim_31856_read_register:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_maxim_start_conversion:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_maxim_clear_fault_status:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_tc_temperature_trans:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_one_temperature_trans:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_temperature_display:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_I2C_Start:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_Send_Byte:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_I2C_Receive_Byte:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_I2C_Stop:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_Key_Scan:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_Key_Process:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397                           
  2398                           ; 2 bytes @ 0x0
  2399  0070                     	ds	1
  2400  0071                     ??_TMR0_ISR:	
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_INTERRUPT_InterruptManager:	
  2405                           
  2406                           ; 1 bytes @ 0x2
  2407  0072                     	ds	1
  2408  0073                     ??_OSCILLATOR_Initialize:	
  2409  0073                     ??_SPI_Initialize:	
  2410                           ; 1 bytes @ 0x3
  2411                           
  2412  0073                     ??_EUSART_Initialize:	
  2413                           ; 1 bytes @ 0x3
  2414                           
  2415  0073                     ??_ADC_Initialize:	
  2416                           ; 1 bytes @ 0x3
  2417                           
  2418  0073                     ??_TMR0_Initialize:	
  2419                           ; 1 bytes @ 0x3
  2420                           
  2421  0073                     ??_FVR_Initialize:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0073                     ?_FLASH_EraseBlock:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0073                     ?_memset:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0073                     ??_Set_start_flag:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0073                     ??_Set_finish_flag:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436  0073                     ??_PIN_MANAGER_Initialize:	
  2437                           ; 1 bytes @ 0x3
  2438                           
  2439  0073                     ??_SPI_Exchange8bit:	
  2440                           ; 1 bytes @ 0x3
  2441                           
  2442  0073                     ??_EUSART_Write:	
  2443                           ; 1 bytes @ 0x3
  2444                           
  2445  0073                     ?_SendBit_1621:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ?_SendDataBit_1621:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ??_I2C_Start:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ??_I2C_Send_Byte:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_I2C_Receive_Byte:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??_I2C_Stop:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     ??_Key_Scan:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     ?___bmul:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     ?_FLASH_ReadWord:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     ?_ADC_GetConversion:	
  2473                           ; 2 bytes @ 0x3
  2474                           
  2475  0073                     ?___wmul:	
  2476                           ; 2 bytes @ 0x3
  2477                           
  2478  0073                     ?___awdiv:	
  2479                           ; 2 bytes @ 0x3
  2480                           
  2481  0073                     ?___awmod:	
  2482                           ; 2 bytes @ 0x3
  2483                           
  2484  0073                     ?___lwmod:	
  2485                           ; 2 bytes @ 0x3
  2486                           
  2487  0073                     SPI_Exchange8bit@data:	
  2488                           ; 2 bytes @ 0x3
  2489                           
  2490  0073                     EUSART_Write@txData:	
  2491                           ; 1 bytes @ 0x3
  2492                           
  2493  0073                     SendBit_1621@cnt:	
  2494                           ; 1 bytes @ 0x3
  2495                           
  2496  0073                     SendDataBit_1621@cnt:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0073                     ___bmul@multiplicand:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0073                     FLASH_ReadWord@flashAddr:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0073                     FLASH_EraseBlock@startAddr:	
  2506                           ; 2 bytes @ 0x3
  2507                           
  2508  0073                     ___wmul@multiplier:	
  2509                           ; 2 bytes @ 0x3
  2510                           
  2511  0073                     ___awdiv@divisor:	
  2512                           ; 2 bytes @ 0x3
  2513                           
  2514  0073                     ___awmod@divisor:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0073                     ___lwmod@divisor:	
  2518                           ; 2 bytes @ 0x3
  2519                           
  2520  0073                     memset@c:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x3
  2525  0073                     	ds	1
  2526  0074                     ??_SYSTEM_Initialize:	
  2527  0074                     ?_SPI_Exchange8bitBuffer:	
  2528                           ; 1 bytes @ 0x4
  2529                           
  2530  0074                     ?_maxim_31856_write_register:	
  2531                           ; 1 bytes @ 0x4
  2532                           
  2533  0074                     ??_maxim_31856_read_register:	
  2534                           ; 1 bytes @ 0x4
  2535                           
  2536  0074                     ??_SendBit_1621:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  0074                     ??_SendDataBit_1621:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  0074                     ??___bmul:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2546                           ; 1 bytes @ 0x4
  2547                           
  2548  0074                     maxim_31856_write_register@uch_register_value:	
  2549                           ; 1 bytes @ 0x4
  2550                           
  2551  0074                     I2C_Send_Byte@Data:	
  2552                           ; 1 bytes @ 0x4
  2553                           
  2554  0074                     I2C_Receive_Byte@Data:	
  2555                           ; 1 bytes @ 0x4
  2556                           
  2557                           
  2558                           ; 1 bytes @ 0x4
  2559  0074                     	ds	1
  2560  0075                     ??_FLASH_EraseBlock:	
  2561  0075                     ??_FLASH_ReadWord:	
  2562                           ; 1 bytes @ 0x5
  2563                           
  2564  0075                     ??_ADC_GetConversion:	
  2565                           ; 1 bytes @ 0x5
  2566                           
  2567  0075                     ??_maxim_31856_write_register:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  0075                     FLASH_ReadWord@GIEBitValue:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     FLASH_EraseBlock@GIEBitValue:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579  0075                     maxim_31856_write_register@uch_register_address:	
  2580                           ; 1 bytes @ 0x5
  2581                           
  2582  0075                     maxim_31856_read_register@uch_register_address:	
  2583                           ; 1 bytes @ 0x5
  2584                           
  2585  0075                     I2C_Send_Byte@i:	
  2586                           ; 1 bytes @ 0x5
  2587                           
  2588  0075                     I2C_Receive_Byte@i:	
  2589                           ; 1 bytes @ 0x5
  2590                           
  2591  0075                     Key_Scan@Key_val:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0075                     ___bmul@product:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597  0075                     ___wmul@multiplicand:	
  2598                           ; 1 bytes @ 0x5
  2599                           
  2600  0075                     ___awdiv@dividend:	
  2601                           ; 2 bytes @ 0x5
  2602                           
  2603  0075                     ___awmod@dividend:	
  2604                           ; 2 bytes @ 0x5
  2605                           
  2606  0075                     ___lwmod@dividend:	
  2607                           ; 2 bytes @ 0x5
  2608                           
  2609  0075                     memset@n:	
  2610                           ; 2 bytes @ 0x5
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x5
  2614  0075                     	ds	1
  2615  0076                     ??_maxim_31856_init:	
  2616  0076                     ??_Serach_Flash_Head:	
  2617                           ; 1 bytes @ 0x6
  2618                           
  2619  0076                     ??_FLASH_WriteWord:	
  2620                           ; 1 bytes @ 0x6
  2621                           
  2622  0076                     ?_I2C_Read_Buffer:	
  2623                           ; 1 bytes @ 0x6
  2624                           
  2625  0076                     ?_I2C_Send_Buffer:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     ADC_GetConversion@channel:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     maxim_31856_read_register@uch_register_data:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     SendBit_1621@data:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640  0076                     SendDataBit_1621@data:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  0076                     I2C_Read_Buffer@buff:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0076                     I2C_Send_Buffer@buff:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649  0076                     ___bmul@multiplier:	
  2650                           ; 1 bytes @ 0x6
  2651                           
  2652                           
  2653                           ; 1 bytes @ 0x6
  2654  0076                     	ds	1
  2655  0077                     ??_Save_Write_word:	
  2656  0077                     ??_memset:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659  0077                     ??_Write_Flash_head:	
  2660                           ; 1 bytes @ 0x7
  2661                           
  2662  0077                     ??_Write_Flash_finish:	
  2663                           ; 1 bytes @ 0x7
  2664                           
  2665  0077                     ??_maxim_start_conversion:	
  2666                           ; 1 bytes @ 0x7
  2667                           
  2668  0077                     ??_maxim_clear_fault_status:	
  2669                           ; 1 bytes @ 0x7
  2670                           
  2671  0077                     ??___wmul:	
  2672                           ; 1 bytes @ 0x7
  2673                           
  2674  0077                     ??___awdiv:	
  2675                           ; 1 bytes @ 0x7
  2676                           
  2677  0077                     ??___awmod:	
  2678                           ; 1 bytes @ 0x7
  2679                           
  2680  0077                     ??___lwmod:	
  2681                           ; 1 bytes @ 0x7
  2682                           
  2683  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2684                           ; 1 bytes @ 0x7
  2685                           
  2686  0077                     SendBit_1621@i:	
  2687                           ; 1 bytes @ 0x7
  2688                           
  2689  0077                     SendDataBit_1621@i:	
  2690                           ; 1 bytes @ 0x7
  2691                           
  2692  0077                     I2C_Read_Buffer@Length:	
  2693                           ; 1 bytes @ 0x7
  2694                           
  2695  0077                     I2C_Send_Buffer@Length:	
  2696                           ; 1 bytes @ 0x7
  2697                           
  2698  0077                     bcd2bin@val:	
  2699                           ; 1 bytes @ 0x7
  2700                           
  2701                           
  2702                           ; 1 bytes @ 0x7
  2703  0077                     	ds	1
  2704  0078                     ??_temperature_process:	
  2705                           
  2706                           	psect	cstackBANK0
  2707  0020                     __pcstackBANK0:	
  2708                           ; 1 bytes @ 0x8
  2709                           
  2710  0020                     ?_FLASH_WriteBlock:	
  2711  0020                     ??_SendCmd_1621:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0020                     ?_WriteAll_1621:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0020                     ??_bcd2bin:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0020                     ??_SPI_Exchange8bitBuffer:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0020                     ??_I2C_Read_Buffer:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0020                     ??_I2C_Send_Buffer:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0020                     maxim_start_conversion@uch_conversion_mode:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0020                     ___awdiv@counter:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0020                     ___awmod@counter:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0020                     ___lwmod@counter:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0020                     memset@p1:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0020                     FLASH_WriteBlock@writeAddr:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0020                     WriteAll_1621@p:	
  2748                           ; 2 bytes @ 0x0
  2749                           
  2750  0020                     Serach_Flash_Head@data:	
  2751                           ; 2 bytes @ 0x0
  2752                           
  2753  0020                     ___wmul@product:	
  2754                           ; 2 bytes @ 0x0
  2755                           
  2756                           
  2757                           ; 2 bytes @ 0x0
  2758  0020                     	ds	1
  2759  0021                     ?___lwdiv:	
  2760  0021                     SendCmd_1621@command:	
  2761                           ; 2 bytes @ 0x1
  2762                           
  2763  0021                     I2C_Read_Buffer@ADD:	
  2764                           ; 1 bytes @ 0x1
  2765                           
  2766  0021                     ___awdiv@sign:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769  0021                     ___awmod@sign:	
  2770                           ; 1 bytes @ 0x1
  2771                           
  2772  0021                     memset@p:	
  2773                           ; 1 bytes @ 0x1
  2774                           
  2775  0021                     ___lwdiv@divisor:	
  2776                           ; 1 bytes @ 0x1
  2777                           
  2778                           
  2779                           ; 2 bytes @ 0x1
  2780  0021                     	ds	1
  2781  0022                     FLASH_WriteBlock@flashWordArray:	
  2782  0022                     WriteAll_1621@cnt:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     I2C_Read_Buffer@Flag:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     I2C_Send_Buffer@ADD:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     Serach_Flash_Head@i:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794  0022                     ___awdiv@quotient:	
  2795                           ; 2 bytes @ 0x2
  2796                           
  2797                           
  2798                           ; 2 bytes @ 0x2
  2799  0022                     	ds	1
  2800  0023                     ??_FLASH_WriteBlock:	
  2801  0023                     ??_WriteAll_1621:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     ??_Bq32k_Rtc_Read_Time:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     ?_maxim_31856_read_nregisters:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810  0023                     maxim_31856_read_nregisters@uch_buff:	
  2811                           ; 1 bytes @ 0x3
  2812                           
  2813  0023                     I2C_Send_Buffer@i:	
  2814                           ; 1 bytes @ 0x3
  2815                           
  2816  0023                     ___lwdiv@dividend:	
  2817                           ; 1 bytes @ 0x3
  2818                           
  2819                           
  2820                           ; 2 bytes @ 0x3
  2821  0023                     	ds	1
  2822  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2823  0024                     WriteAll_1621@addr:	
  2824                           ; 1 bytes @ 0x4
  2825                           
  2826  0024                     I2C_Send_Buffer@Flag:	
  2827                           ; 1 bytes @ 0x4
  2828                           
  2829                           
  2830                           ; 1 bytes @ 0x4
  2831  0024                     	ds	1
  2832  0025                     ??_Bq32k_Time_Init:	
  2833  0025                     ??_maxim_31856_read_nregisters:	
  2834                           ; 1 bytes @ 0x5
  2835                           
  2836  0025                     ??___lwdiv:	
  2837                           ; 1 bytes @ 0x5
  2838                           
  2839  0025                     WriteAll_1621@i:	
  2840                           ; 1 bytes @ 0x5
  2841                           
  2842  0025                     Bq32k_Rtc_Read_Time@temp:	
  2843                           ; 1 bytes @ 0x5
  2844                           
  2845                           
  2846                           ; 10 bytes @ 0x5
  2847  0025                     	ds	1
  2848  0026                     ??_err_Display:	
  2849  0026                     ??_Two_Display:	
  2850                           ; 1 bytes @ 0x6
  2851                           
  2852  0026                     ___lwdiv@counter:	
  2853                           ; 1 bytes @ 0x6
  2854                           
  2855  0026                     FLASH_WriteBlock@blockStartAddr:	
  2856                           ; 1 bytes @ 0x6
  2857                           
  2858                           
  2859                           ; 2 bytes @ 0x6
  2860  0026                     	ds	1
  2861  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2862  0027                     ___lwdiv@quotient:	
  2863                           ; 1 bytes @ 0x7
  2864                           
  2865  0027                     Two_Display@num:	
  2866                           ; 2 bytes @ 0x7
  2867                           
  2868  0027                     err_Display@num:	
  2869                           ; 4 bytes @ 0x7
  2870                           
  2871  0027                     Bq32k_Time_Init@temp:	
  2872                           ; 4 bytes @ 0x7
  2873                           
  2874                           
  2875                           ; 10 bytes @ 0x7
  2876  0027                     	ds	1
  2877  0028                     ??_one_temperature_trans:	
  2878  0028                     FLASH_WriteBlock@GIEBitValue:	
  2879                           ; 1 bytes @ 0x8
  2880                           
  2881                           
  2882                           ; 1 bytes @ 0x8
  2883  0028                     	ds	1
  2884  0029                     ??_Tc_Display:	
  2885  0029                     FLASH_WriteBlock@i:	
  2886                           ; 1 bytes @ 0x9
  2887                           
  2888                           
  2889                           ; 1 bytes @ 0x9
  2890  0029                     	ds	1
  2891  002A                     ?_FLASH_WriteWord:	
  2892  002A                     Tc_Display@count:	
  2893                           ; 1 bytes @ 0xA
  2894                           
  2895  002A                     FLASH_WriteWord@flashAddr:	
  2896                           ; 1 bytes @ 0xA
  2897                           
  2898                           
  2899                           ; 2 bytes @ 0xA
  2900  002A                     	ds	1
  2901  002B                     Two_Display@number:	
  2902  002B                     Tc_Display@data:	
  2903                           ; 1 bytes @ 0xB
  2904                           
  2905                           
  2906                           ; 2 bytes @ 0xB
  2907  002B                     	ds	1
  2908  002C                     FLASH_WriteWord@ramBuf:	
  2909                           
  2910                           ; 1 bytes @ 0xC
  2911  002C                     	ds	1
  2912  002D                     FLASH_WriteWord@word:	
  2913                           
  2914                           ; 2 bytes @ 0xD
  2915  002D                     	ds	2
  2916  002F                     FLASH_WriteWord@offset:	
  2917  002F                     Bq32k_Rtc_Read_Time@p:	
  2918                           ; 1 bytes @ 0xF
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0xF
  2922  002F                     	ds	1
  2923  0030                     ??_Calculate_Time:	
  2924  0030                     ??_time_Display:	
  2925                           ; 1 bytes @ 0x10
  2926                           
  2927  0030                     FLASH_WriteWord@blockStartAddr:	
  2928                           ; 1 bytes @ 0x10
  2929                           
  2930                           
  2931                           ; 2 bytes @ 0x10
  2932  0030                     	ds	2
  2933  0032                     FLASH_WriteWord@i:	
  2934                           
  2935                           ; 1 bytes @ 0x12
  2936  0032                     	ds	1
  2937  0033                     ?_Save_Write_word:	
  2938  0033                     Save_Write_word@data:	
  2939                           ; 1 bytes @ 0x13
  2940                           
  2941  0033                     time_Display@num:	
  2942                           ; 2 bytes @ 0x13
  2943                           
  2944                           
  2945                           ; 4 bytes @ 0x13
  2946  0033                     	ds	2
  2947  0035                     ??_Save_Write_time:	
  2948                           
  2949                           ; 1 bytes @ 0x15
  2950  0035                     	ds	5
  2951  003A                     Calculate_Time@temp:	
  2952                           
  2953                           ; 4 bytes @ 0x1A
  2954  003A                     	ds	4
  2955  003E                     Calculate_Time@temp1:	
  2956                           
  2957                           ; 4 bytes @ 0x1E
  2958  003E                     	ds	4
  2959  0042                     Calculate_Time@temp2:	
  2960                           
  2961                           ; 4 bytes @ 0x22
  2962  0042                     	ds	4
  2963  0046                     ??_Save_process:	
  2964  0046                     ??_tc_temperature_trans:	
  2965                           ; 1 bytes @ 0x26
  2966                           
  2967                           
  2968                           ; 1 bytes @ 0x26
  2969  0046                     	ds	2
  2970  0048                     Save_process@var_time:	
  2971                           
  2972                           ; 2 bytes @ 0x28
  2973  0048                     	ds	2
  2974  004A                     tc_temperature_trans@temperature_absolute:	
  2975                           
  2976                           ; 2 bytes @ 0x2A
  2977  004A                     	ds	2
  2978  004C                     tc_temperature_trans@var_time:	
  2979                           
  2980                           ; 2 bytes @ 0x2C
  2981  004C                     	ds	2
  2982  004E                     tc_temperature_trans@temperature_temp:	
  2983                           
  2984                           ; 2 bytes @ 0x2E
  2985  004E                     	ds	2
  2986  0050                     ??_temperature_display:	
  2987                           
  2988                           ; 1 bytes @ 0x30
  2989  0050                     	ds	1
  2990  0051                     ??_Key_Process:	
  2991                           
  2992                           ; 1 bytes @ 0x31
  2993  0051                     	ds	1
  2994  0052                     Key_Process@data_temp:	
  2995                           
  2996                           ; 2 bytes @ 0x32
  2997  0052                     	ds	2
  2998  0054                     Key_Process@gKeyValue:	
  2999                           
  3000                           ; 1 bytes @ 0x34
  3001  0054                     	ds	1
  3002  0055                     Key_Process@i:	
  3003                           
  3004                           ; 2 bytes @ 0x35
  3005  0055                     	ds	2
  3006  0057                     ??_main:	
  3007                           
  3008                           ; 1 bytes @ 0x37
  3009  0057                     	ds	3
  3010                           
  3011                           	psect	maintext
  3012  036A                     __pmaintext:	
  3013 ;;
  3014 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3015 ;;
  3016 ;; *************** function _main *****************
  3017 ;; Defined at:
  3018 ;;		line 65 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  bat_data        2    3[BANK1 ] unsigned int 
  3023 ;;  data_temp       2    0[BANK1 ] unsigned int 
  3024 ;;  i               1    2[BANK1 ] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : B1F/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels required when called:   11
  3040 ;; This function calls:
  3041 ;;		_ADC_GetConversion
  3042 ;;		_Bq32k_Time_Init
  3043 ;;		_Key_Process
  3044 ;;		_SYSTEM_Initialize
  3045 ;;		_Save_process
  3046 ;;		_SendCmd_1621
  3047 ;;		_Serach_Flash_Head
  3048 ;;		_WriteAll_1621
  3049 ;;		_maxim_31856_init
  3050 ;;		_temperature_process
  3051 ;; This function is called by:
  3052 ;;		Startup code after reset
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _main
  3058  036A                     _main:	
  3059                           
  3060                           ;main.c: 67: unsigned char i=0;
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3064  036A  0021               	movlb	1	; select bank1
  3065  036B  01E6               	clrf	main@i^(0+128)
  3066                           
  3067                           ;main.c: 69: unsigned int bat_data = 0;
  3068  036C  01E7               	clrf	main@bat_data^(0+128)
  3069  036D  01E8               	clrf	(main@bat_data+1)^(0+128)
  3070                           
  3071                           ;main.c: 70: unsigned int data_temp = 0;
  3072  036E  01E4               	clrf	main@data_temp^(0+128)
  3073  036F  01E5               	clrf	(main@data_temp+1)^(0+128)
  3074                           
  3075                           ;main.c: 72: SYSTEM_Initialize();
  3076  0370  3189  2184  3183   	fcall	_SYSTEM_Initialize
  3077                           
  3078                           ;main.c: 73: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3079  0373  303D               	movlw	61
  3080  0374  0020               	movlb	0	; select bank0
  3081  0375  00D9               	movwf	??_main+2
  3082  0376  30E1               	movlw	225
  3083  0377  00D8               	movwf	??_main+1
  3084  0378  307A               	movlw	122
  3085  0379  00D7               	movwf	??_main
  3086  037A                     u5067:	
  3087  037A  0BD7               	decfsz	??_main,f
  3088  037B  2B7A               	goto	u5067
  3089  037C  0BD8               	decfsz	??_main+1,f
  3090  037D  2B7A               	goto	u5067
  3091  037E  0BD9               	decfsz	??_main+2,f
  3092  037F  2B7A               	goto	u5067
  3093  0380  3200               	nop2
  3094                           
  3095                           ;main.c: 74: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3096  0381  0020               	movlb	0	; select bank0
  3097  0382  1A8D               	btfsc	13,5	;volatile
  3098  0383  2B87               	goto	l370
  3099  0384  0022               	movlb	2	; select bank2
  3100  0385  150C               	bsf	12,2	;volatile
  3101  0386  2B89               	goto	l372
  3102  0387                     l370:	
  3103                           ;main.c: 75: else do { LATA2 = 0; } while(0);
  3104                           
  3105  0387  0022               	movlb	2	; select bank2
  3106  0388  110C               	bcf	12,2	;volatile
  3107  0389                     l372:	
  3108                           ;main.c: 76: do { LATA3 = 0; } while(0);
  3109                           
  3110  0389  118C               	bcf	12,3	;volatile
  3111                           
  3112                           ;main.c: 79: bat_data = 0;
  3113  038A  0021               	movlb	1	; select bank1
  3114  038B  01E7               	clrf	main@bat_data^(0+128)
  3115  038C  01E8               	clrf	(main@bat_data+1)^(0+128)
  3116                           
  3117                           ;main.c: 80: for(i=0;i<16;i++)
  3118  038D  01E6               	clrf	main@i^(0+128)
  3119  038E  3010               	movlw	16
  3120  038F  0266               	subwf	main@i^(0+128),w
  3121  0390  1803               	btfsc	3,0
  3122  0391  2BA7               	goto	l5204
  3123  0392                     l5198:	
  3124                           
  3125                           ;main.c: 81: {
  3126                           ;main.c: 82: bat_data = bat_data + ADC_GetConversion(ADC);
  3127  0392  300B               	movlw	11
  3128  0393  318A  2214  3183   	fcall	_ADC_GetConversion
  3129  0396  0021               	movlb	1	; select bank1
  3130  0397  0867               	movf	main@bat_data^(0+128),w
  3131  0398  0773               	addwf	?_ADC_GetConversion,w
  3132  0399  00E7               	movwf	main@bat_data^(0+128)
  3133  039A  0868               	movf	(main@bat_data+1)^(0+128),w
  3134  039B  3D74               	addwfc	?_ADC_GetConversion+1,w
  3135  039C  00E8               	movwf	(main@bat_data+1)^(0+128)
  3136  039D  3001               	movlw	1
  3137  039E  0020               	movlb	0	; select bank0
  3138  039F  00D7               	movwf	??_main
  3139  03A0  0857               	movf	??_main,w
  3140  03A1  0021               	movlb	1	; select bank1
  3141  03A2  07E6               	addwf	main@i^(0+128),f
  3142  03A3  3010               	movlw	16
  3143  03A4  0266               	subwf	main@i^(0+128),w
  3144  03A5  1C03               	skipc
  3145  03A6  2B92               	goto	l5198
  3146  03A7                     l5204:	
  3147                           
  3148                           ;main.c: 83: }
  3149                           ;main.c: 84: bat_data = bat_data>>4;
  3150  03A7  0E67               	swapf	main@bat_data^(0+128),w
  3151  03A8  390F               	andlw	15
  3152  03A9  00E7               	movwf	main@bat_data^(0+128)
  3153  03AA  0E68               	swapf	(main@bat_data+1)^(0+128),w
  3154  03AB  39F0               	andlw	240
  3155  03AC  04E7               	iorwf	main@bat_data^(0+128),f
  3156  03AD  0E68               	swapf	(main@bat_data+1)^(0+128),w
  3157  03AE  390F               	andlw	15
  3158  03AF  00E8               	movwf	(main@bat_data^(0+128)+1)
  3159                           
  3160                           ;main.c: 85: if( bat_data < 800)
  3161  03B0  3003               	movlw	3
  3162  03B1  0268               	subwf	(main@bat_data+1)^(0+128),w
  3163  03B2  3020               	movlw	32
  3164  03B3  1903               	skipnz
  3165  03B4  0267               	subwf	main@bat_data^(0+128),w
  3166  03B5  1803               	skipnc
  3167  03B6  2BBA               	goto	l5208
  3168                           
  3169                           ;main.c: 86: {
  3170                           ;main.c: 87: do { LATA2 = 0; } while(0);
  3171  03B7  0022               	movlb	2	; select bank2
  3172  03B8  110C               	bcf	12,2	;volatile
  3173  03B9                     l379:	
  3174                           ;main.c: 88: while(1);
  3175                           
  3176  03B9  2BB9               	goto	l379
  3177  03BA                     l5208:	
  3178                           
  3179                           ;main.c: 89: }
  3180                           ;main.c: 90: i = 0 ;
  3181  03BA  0021               	movlb	1	; select bank1
  3182  03BB  01E6               	clrf	main@i^(0+128)
  3183                           
  3184                           ;main.c: 91: bat_data = 0 ;
  3185  03BC  01E7               	clrf	main@bat_data^(0+128)
  3186  03BD  01E8               	clrf	(main@bat_data+1)^(0+128)
  3187                           
  3188                           ;main.c: 94: maxim_31856_init();
  3189  03BE  3187  2762  3183   	fcall	_maxim_31856_init
  3190                           
  3191                           ;main.c: 95: do { TRISB3 = 1; } while(0);
  3192  03C1  0021               	movlb	1	; select bank1
  3193  03C2  158D               	bsf	13,3	;volatile
  3194                           
  3195                           ;main.c: 96: Bq32k_Time_Init();
  3196  03C3  318A  2263  3183   	fcall	_Bq32k_Time_Init
  3197                           
  3198                           ;main.c: 97: SendCmd_1621(0x52);
  3199  03C6  3052               	movlw	82
  3200  03C7  3189  2199  3183   	fcall	_SendCmd_1621
  3201                           
  3202                           ;main.c: 98: SendCmd_1621(0X28);
  3203  03CA  3028               	movlw	40
  3204  03CB  3189  2199  3183   	fcall	_SendCmd_1621
  3205                           
  3206                           ;main.c: 99: SendCmd_1621(0x02);
  3207  03CE  3002               	movlw	2
  3208  03CF  3189  2199  3183   	fcall	_SendCmd_1621
  3209                           
  3210                           ;main.c: 100: SendCmd_1621(0x06);
  3211  03D2  3006               	movlw	6
  3212  03D3  3189  2199  3183   	fcall	_SendCmd_1621
  3213                           
  3214                           ;main.c: 102: WriteAll_1621(0,Dis_TAB+17,4);
  3215  03D6  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3216  03D7  0020               	movlb	0	; select bank0
  3217  03D8  00A0               	movwf	WriteAll_1621@p
  3218  03D9  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3219  03DA  00A1               	movwf	WriteAll_1621@p+1
  3220  03DB  3004               	movlw	4
  3221  03DC  00D7               	movwf	??_main
  3222  03DD  0857               	movf	??_main,w
  3223  03DE  00A2               	movwf	WriteAll_1621@cnt
  3224  03DF  3000               	movlw	0
  3225  03E0  318C  24E5  3183   	fcall	_WriteAll_1621
  3226                           
  3227                           ;main.c: 104: time_count = 0;
  3228  03E3  0020               	movlb	0	; select bank0
  3229  03E4  01EC               	clrf	_time_count
  3230                           
  3231                           ;main.c: 105: Record_flag = 0;
  3232  03E5  01EA               	clrf	_Record_flag
  3233                           
  3234                           ;main.c: 106: Cur_temperature_time_ch1 = 0;
  3235  03E6  01E8               	clrf	_Cur_temperature_time_ch1
  3236                           
  3237                           ;main.c: 107: Cur_temperature_time_ch2 = 0;
  3238  03E7  01F8               	clrf	_Cur_temperature_time_ch2
  3239                           
  3240                           ;main.c: 108: CH1_temperature = 0;
  3241  03E8  01DE               	clrf	_CH1_temperature
  3242  03E9  01DF               	clrf	_CH1_temperature+1
  3243                           
  3244                           ;main.c: 109: CH2_temperature = 0;
  3245  03EA  01E0               	clrf	_CH2_temperature
  3246  03EB  01E1               	clrf	_CH2_temperature+1
  3247                           
  3248                           ;main.c: 110: CH1_state = 0;
  3249  03EC  01E6               	clrf	_CH1_state
  3250                           
  3251                           ;main.c: 111: CH2_state = 0;
  3252  03ED  01E7               	clrf	_CH2_state
  3253                           
  3254                           ;main.c: 112: bat_data = 0;
  3255  03EE  0021               	movlb	1	; select bank1
  3256  03EF  01E7               	clrf	main@bat_data^(0+128)
  3257  03F0  01E8               	clrf	(main@bat_data+1)^(0+128)
  3258                           
  3259                           ;main.c: 113: Cur_Save_Index = 0x2000;
  3260  03F1  3000               	movlw	0
  3261  03F2  0020               	movlb	0	; select bank0
  3262  03F3  00E2               	movwf	_Cur_Save_Index
  3263  03F4  3020               	movlw	32
  3264  03F5  00E3               	movwf	_Cur_Save_Index+1
  3265                           
  3266                           ;main.c: 114: Serach_Flash_Head();
  3267  03F6  318C  2451  3183   	fcall	_Serach_Flash_Head
  3268                           
  3269                           ;main.c: 140: (INTCONbits.GIE = 1);
  3270  03F9  178B               	bsf	11,7	;volatile
  3271                           
  3272                           ;main.c: 143: (INTCONbits.PEIE = 1);
  3273  03FA  170B               	bsf	11,6	;volatile
  3274  03FB                     l5252:	
  3275                           ;main.c: 151: while (1)
  3276                           
  3277                           
  3278                           ;main.c: 152: {
  3279                           ;main.c: 157: bat_data = bat_data + ADC_GetConversion(ADC);
  3280  03FB  300B               	movlw	11
  3281  03FC  318A  2214  3183   	fcall	_ADC_GetConversion
  3282  03FF  0021               	movlb	1	; select bank1
  3283  0400  0867               	movf	main@bat_data^(0+128),w
  3284  0401  0773               	addwf	?_ADC_GetConversion,w
  3285  0402  00E7               	movwf	main@bat_data^(0+128)
  3286  0403  0868               	movf	(main@bat_data+1)^(0+128),w
  3287  0404  3D74               	addwfc	?_ADC_GetConversion+1,w
  3288  0405  00E8               	movwf	(main@bat_data+1)^(0+128)
  3289                           
  3290                           ;main.c: 158: i++;
  3291  0406  3001               	movlw	1
  3292  0407  0020               	movlb	0	; select bank0
  3293  0408  00D7               	movwf	??_main
  3294  0409  0857               	movf	??_main,w
  3295  040A  0021               	movlb	1	; select bank1
  3296  040B  07E6               	addwf	main@i^(0+128),f
  3297                           
  3298                           ;main.c: 159: if(i == 16)
  3299  040C  3010               	movlw	16
  3300  040D  0666               	xorwf	main@i^(0+128),w
  3301  040E  1D03               	btfss	3,2
  3302  040F  2C27               	goto	l5266
  3303                           
  3304                           ;main.c: 160: {
  3305                           ;main.c: 161: i = 0;
  3306  0410  01E6               	clrf	main@i^(0+128)
  3307                           
  3308                           ;main.c: 162: bat_data = bat_data>>4;
  3309  0411  0E67               	swapf	main@bat_data^(0+128),w
  3310  0412  390F               	andlw	15
  3311  0413  00E7               	movwf	main@bat_data^(0+128)
  3312  0414  0E68               	swapf	(main@bat_data+1)^(0+128),w
  3313  0415  39F0               	andlw	240
  3314  0416  04E7               	iorwf	main@bat_data^(0+128),f
  3315  0417  0E68               	swapf	(main@bat_data+1)^(0+128),w
  3316  0418  390F               	andlw	15
  3317  0419  00E8               	movwf	(main@bat_data^(0+128)+1)
  3318                           
  3319                           ;main.c: 163: if( bat_data < 800)
  3320  041A  3003               	movlw	3
  3321  041B  0268               	subwf	(main@bat_data+1)^(0+128),w
  3322  041C  3020               	movlw	32
  3323  041D  1903               	skipnz
  3324  041E  0267               	subwf	main@bat_data^(0+128),w
  3325  041F  1803               	skipnc
  3326  0420  2C24               	goto	l5264
  3327                           
  3328                           ;main.c: 164: {
  3329                           ;main.c: 165: do { LATA2 = 0; } while(0);
  3330  0421  0022               	movlb	2	; select bank2
  3331  0422  110C               	bcf	12,2	;volatile
  3332  0423                     l389:	
  3333                           ;main.c: 166: while(1);
  3334                           
  3335  0423  2C23               	goto	l389
  3336  0424                     l5264:	
  3337                           
  3338                           ;main.c: 167: }
  3339                           ;main.c: 168: bat_data = 0;
  3340  0424  0021               	movlb	1	; select bank1
  3341  0425  01E7               	clrf	main@bat_data^(0+128)
  3342  0426  01E8               	clrf	(main@bat_data+1)^(0+128)
  3343  0427                     l5266:	
  3344                           
  3345                           ;main.c: 169: }
  3346                           ;main.c: 174: temperature_process();
  3347  0427  318C  24B2  3183   	fcall	_temperature_process
  3348                           
  3349                           ;main.c: 175: Key_Process();
  3350  042A  3185  2585  3183   	fcall	_Key_Process
  3351                           
  3352                           ;main.c: 176: Save_process();
  3353  042D  318F  2745  3183   	fcall	_Save_process
  3354  0430  2BFB               	goto	l5252
  3355  0431                     __end_of_main:	
  3356                           
  3357                           	psect	text1
  3358  0762                     __ptext1:	
  3359 ;; *************** function _maxim_31856_init *****************
  3360 ;; Defined at:
  3361 ;;		line 64 in file "mcc_generated_files/max31856.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    5
  3382 ;; This function calls:
  3383 ;;		_maxim_31856_write_register
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _maxim_31856_init
  3391  0762                     _maxim_31856_init:	
  3392                           
  3393                           ;max31856.c: 67: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3397  0762  3015               	movlw	21
  3398  0763  00F6               	movwf	??_maxim_31856_init
  3399  0764  0876               	movf	??_maxim_31856_init,w
  3400  0765  00FA               	movwf	_uch_cr0
  3401                           
  3402                           ;max31856.c: 69: uch_cr1&= (uint8_t) 0x0F ;
  3403  0766  300F               	movlw	15
  3404  0767  00F6               	movwf	??_maxim_31856_init
  3405  0768  0876               	movf	??_maxim_31856_init,w
  3406  0769  0021               	movlb	1	; select bank1
  3407  076A  05B4               	andwf	_uch_cr1^(0+128),f
  3408                           
  3409                           ;max31856.c: 70: uch_cr1|=(uint8_t) 0x07;
  3410  076B  3007               	movlw	7
  3411  076C  00F6               	movwf	??_maxim_31856_init
  3412  076D  0876               	movf	??_maxim_31856_init,w
  3413  076E  04B4               	iorwf	_uch_cr1^(0+128),f
  3414                           
  3415                           ;max31856.c: 72: uch_mask=(uint8_t)0x00 ;
  3416  076F  01B7               	clrf	_uch_mask^(0+128)
  3417                           
  3418                           ;max31856.c: 74: maxim_31856_write_register(0x80, uch_cr0);
  3419  0770  087A               	movf	_uch_cr0,w
  3420  0771  00F6               	movwf	??_maxim_31856_init
  3421  0772  0876               	movf	??_maxim_31856_init,w
  3422  0773  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3423  0774  3080               	movlw	128
  3424  0775  3189  210B  3187   	fcall	_maxim_31856_write_register
  3425                           
  3426                           ;max31856.c: 75: maxim_31856_write_register(0x81, uch_cr1);
  3427  0778  0021               	movlb	1	; select bank1
  3428  0779  0834               	movf	_uch_cr1^(0+128),w
  3429  077A  00F6               	movwf	??_maxim_31856_init
  3430  077B  0876               	movf	??_maxim_31856_init,w
  3431  077C  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3432  077D  3081               	movlw	129
  3433  077E  3189  210B  3187   	fcall	_maxim_31856_write_register
  3434                           
  3435                           ;max31856.c: 76: maxim_31856_write_register(0x82,uch_mask);
  3436  0781  0021               	movlb	1	; select bank1
  3437  0782  0837               	movf	_uch_mask^(0+128),w
  3438  0783  00F6               	movwf	??_maxim_31856_init
  3439  0784  0876               	movf	??_maxim_31856_init,w
  3440  0785  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3441  0786  3082               	movlw	130
  3442  0787  3189  210B  3187   	fcall	_maxim_31856_write_register
  3443                           
  3444                           ;max31856.c: 79: maxim_31856_write_register(0x83,0x7F);
  3445  078A  307F               	movlw	127
  3446  078B  00F6               	movwf	??_maxim_31856_init
  3447  078C  0876               	movf	??_maxim_31856_init,w
  3448  078D  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3449  078E  3083               	movlw	131
  3450  078F  3189  210B  3187   	fcall	_maxim_31856_write_register
  3451                           
  3452                           ;max31856.c: 80: maxim_31856_write_register(0x84,0xC0);
  3453  0792  30C0               	movlw	192
  3454  0793  00F6               	movwf	??_maxim_31856_init
  3455  0794  0876               	movf	??_maxim_31856_init,w
  3456  0795  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3457  0796  3084               	movlw	132
  3458  0797  3189  210B  3187   	fcall	_maxim_31856_write_register
  3459                           
  3460                           ;max31856.c: 82: maxim_31856_write_register(0x85,0x7F);
  3461  079A  307F               	movlw	127
  3462  079B  00F6               	movwf	??_maxim_31856_init
  3463  079C  0876               	movf	??_maxim_31856_init,w
  3464  079D  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3465  079E  3085               	movlw	133
  3466  079F  3189  210B  3187   	fcall	_maxim_31856_write_register
  3467                           
  3468                           ;max31856.c: 83: maxim_31856_write_register(0x86,0xFF);
  3469  07A2  30FF               	movlw	255
  3470  07A3  00F6               	movwf	??_maxim_31856_init
  3471  07A4  0876               	movf	??_maxim_31856_init,w
  3472  07A5  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3473  07A6  3086               	movlw	134
  3474  07A7  3189  210B  3187   	fcall	_maxim_31856_write_register
  3475                           
  3476                           ;max31856.c: 84: maxim_31856_write_register(0x87,0x80);
  3477  07AA  3080               	movlw	128
  3478  07AB  00F6               	movwf	??_maxim_31856_init
  3479  07AC  0876               	movf	??_maxim_31856_init,w
  3480  07AD  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3481  07AE  3087               	movlw	135
  3482  07AF  3189  210B  3187   	fcall	_maxim_31856_write_register
  3483                           
  3484                           ;max31856.c: 85: maxim_31856_write_register(0x88,0x00);
  3485  07B2  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3486  07B3  3088               	movlw	136
  3487  07B4  3189  210B  3187   	fcall	_maxim_31856_write_register
  3488                           
  3489                           ;max31856.c: 87: maxim_31856_write_register(0x89,0x00);
  3490  07B7  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3491  07B8  3089               	movlw	137
  3492  07B9  3189  210B  3187   	fcall	_maxim_31856_write_register
  3493                           
  3494                           ;max31856.c: 91: maxim_31856_write_register(0x8A,0x00);
  3495  07BC  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3496  07BD  308A               	movlw	138
  3497  07BE  3189  210B  3187   	fcall	_maxim_31856_write_register
  3498                           
  3499                           ;max31856.c: 92: maxim_31856_write_register(0x8B,0x00);
  3500  07C1  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3501  07C2  308B               	movlw	139
  3502  07C3  3189  210B         	fcall	_maxim_31856_write_register
  3503  07C5  0008               	return
  3504  07C6                     __end_of_maxim_31856_init:	
  3505                           
  3506                           	psect	text2
  3507  0C51                     __ptext2:	
  3508 ;; *************** function _Serach_Flash_Head *****************
  3509 ;; Defined at:
  3510 ;;		line 42 in file "mcc_generated_files/save.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  i               2    2[BANK0 ] unsigned int 
  3515 ;;  data            2    0[BANK0 ] unsigned int 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;Total ram usage:        4 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    4
  3532 ;; This function calls:
  3533 ;;		_FLASH_ReadWord
  3534 ;; This function is called by:
  3535 ;;		_main
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _Serach_Flash_Head
  3541  0C51                     _Serach_Flash_Head:	
  3542                           
  3543                           ;save.c: 44: unsigned int i=0;
  3544                           
  3545                           ;incstack = 0
  3546                           ; Regs used in _Serach_Flash_Head: [wreg+status,2+status,0+pclath+cstack]
  3547  0C51  0020               	movlb	0	; select bank0
  3548  0C52  01A2               	clrf	Serach_Flash_Head@i
  3549  0C53  01A3               	clrf	Serach_Flash_Head@i+1
  3550                           
  3551                           ;save.c: 45: unsigned int data=0;
  3552  0C54  01A0               	clrf	Serach_Flash_Head@data
  3553  0C55  01A1               	clrf	Serach_Flash_Head@data+1
  3554                           
  3555                           ;save.c: 46: for(i = 0x2000; i<16384;i++ )
  3556  0C56  3000               	movlw	0
  3557  0C57  00A2               	movwf	Serach_Flash_Head@i
  3558  0C58  3020               	movlw	32
  3559  0C59  00A3               	movwf	Serach_Flash_Head@i+1
  3560  0C5A                     L1:	
  3561  0C5A  3040               	movlw	64
  3562  0C5B  0223               	subwf	Serach_Flash_Head@i+1,w
  3563  0C5C  3000               	movlw	0
  3564  0C5D  1903               	skipnz
  3565  0C5E  0222               	subwf	Serach_Flash_Head@i,w
  3566  0C5F  1803               	btfsc	3,0
  3567  0C60  0008               	return
  3568                           
  3569                           ;save.c: 47: {
  3570                           ;save.c: 48: data = FLASH_ReadWord(i);
  3571  0C61  0823               	movf	Serach_Flash_Head@i+1,w
  3572  0C62  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3573  0C63  0822               	movf	Serach_Flash_Head@i,w
  3574  0C64  00F3               	movwf	FLASH_ReadWord@flashAddr
  3575  0C65  3189  21FB  318C   	fcall	_FLASH_ReadWord
  3576  0C68  0874               	movf	?_FLASH_ReadWord+1,w
  3577  0C69  0020               	movlb	0	; select bank0
  3578  0C6A  00A1               	movwf	Serach_Flash_Head@data+1
  3579  0C6B  0873               	movf	?_FLASH_ReadWord,w
  3580  0C6C  00A0               	movwf	Serach_Flash_Head@data
  3581                           
  3582                           ;save.c: 49: if( data == 0x3fff)
  3583  0C6D  0A20               	incf	Serach_Flash_Head@data,w
  3584  0C6E  303F               	movlw	63
  3585  0C6F  1903               	skipnz
  3586  0C70  0621               	xorwf	Serach_Flash_Head@data+1,w
  3587  0C71  1D03               	btfss	3,2
  3588  0C72  2C7C               	goto	l5088
  3589                           
  3590                           ;save.c: 50: {
  3591                           ;save.c: 51: i++;
  3592  0C73  3001               	movlw	1
  3593  0C74  07A2               	addwf	Serach_Flash_Head@i,f
  3594  0C75  3000               	movlw	0
  3595  0C76  3DA3               	addwfc	Serach_Flash_Head@i+1,f
  3596                           
  3597                           ;save.c: 52: Cur_Save_Index = i;
  3598  0C77  0823               	movf	Serach_Flash_Head@i+1,w
  3599  0C78  00E3               	movwf	_Cur_Save_Index+1
  3600  0C79  0822               	movf	Serach_Flash_Head@i,w
  3601  0C7A  00E2               	movwf	_Cur_Save_Index
  3602                           
  3603                           ;save.c: 53: break;
  3604  0C7B  0008               	return
  3605  0C7C                     l5088:	
  3606  0C7C  3001               	movlw	1
  3607  0C7D  07A2               	addwf	Serach_Flash_Head@i,f
  3608  0C7E  3000               	movlw	0
  3609  0C7F  3DA3               	addwfc	Serach_Flash_Head@i+1,f
  3610  0C80  2C5A               	goto	L1
  3611  0C81                     __end_of_Serach_Flash_Head:	
  3612                           
  3613                           	psect	text3
  3614  0F45                     __ptext3:	
  3615 ;; *************** function _Save_process *****************
  3616 ;; Defined at:
  3617 ;;		line 92 in file "mcc_generated_files/save.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  var_time        2   40[BANK0 ] unsigned int 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;Total ram usage:        4 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    7
  3638 ;; This function calls:
  3639 ;;		_Calculate_Time
  3640 ;;		_Save_Write_word
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _Save_process
  3648  0F45                     _Save_process:	
  3649                           
  3650                           ;save.c: 94: unsigned int var_time=0;
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3654  0F45  0020               	movlb	0	; select bank0
  3655  0F46  01C8               	clrf	Save_process@var_time
  3656  0F47  01C9               	clrf	Save_process@var_time+1
  3657                           
  3658                           ;save.c: 95: if( time_count == 1 && Record_flag == 1 )
  3659  0F48  036C               	decf	_time_count,w
  3660  0F49  1D03               	btfss	3,2
  3661  0F4A  2F72               	goto	l5166
  3662  0F4B  036A               	decf	_Record_flag,w
  3663  0F4C  1D03               	btfss	3,2
  3664  0F4D  2F72               	goto	l5166
  3665                           
  3666                           ;save.c: 96: {
  3667                           ;save.c: 97: if(Cur_temperature_time_ch1 > 60)
  3668  0F4E  303D               	movlw	61
  3669  0F4F  0268               	subwf	_Cur_temperature_time_ch1,w
  3670  0F50  1C03               	skipc
  3671  0F51  0008               	return
  3672                           
  3673                           ;save.c: 98: {
  3674                           ;save.c: 99: var_time = Calculate_Time();
  3675  0F52  3181  21DD  318F   	fcall	_Calculate_Time
  3676  0F55  0020               	movlb	0	; select bank0
  3677  0F56  00C6               	movwf	??_Save_process
  3678  0F57  01C7               	clrf	??_Save_process+1
  3679  0F58  0846               	movf	??_Save_process,w
  3680  0F59  00C8               	movwf	Save_process@var_time
  3681  0F5A  0847               	movf	??_Save_process+1,w
  3682  0F5B  00C9               	movwf	Save_process@var_time+1
  3683                           
  3684                           ;save.c: 100: var_time |= 0x100;
  3685  0F5C  1449               	bsf	Save_process@var_time+1,0
  3686                           
  3687                           ;save.c: 101: if(CH1_state == 1) var_time |= 0x400;
  3688  0F5D  0366               	decf	_CH1_state,w
  3689  0F5E  1903               	btfsc	3,2
  3690  0F5F  1549               	bsf	Save_process@var_time+1,2
  3691                           
  3692                           ;save.c: 103: var_time |= 0x1000;
  3693  0F60  1649               	bsf	Save_process@var_time+1,4
  3694                           
  3695                           ;save.c: 105: Save_Write_word(var_time);
  3696  0F61  0849               	movf	Save_process@var_time+1,w
  3697  0F62  00B4               	movwf	Save_Write_word@data+1
  3698  0F63  0848               	movf	Save_process@var_time,w
  3699  0F64  00B3               	movwf	Save_Write_word@data
  3700  0F65  3189  216F  318F   	fcall	_Save_Write_word
  3701                           
  3702                           ;save.c: 106: Save_Write_word(temperature_value);
  3703  0F68  0020               	movlb	0	; select bank0
  3704  0F69  085B               	movf	_temperature_value+1,w
  3705  0F6A  00B4               	movwf	Save_Write_word@data+1
  3706  0F6B  085A               	movf	_temperature_value,w
  3707  0F6C  00B3               	movwf	Save_Write_word@data
  3708  0F6D  3189  216F         	fcall	_Save_Write_word
  3709                           
  3710                           ;save.c: 108: Cur_temperature_time_ch1 = 0;
  3711  0F6F  0020               	movlb	0	; select bank0
  3712  0F70  01E8               	clrf	_Cur_temperature_time_ch1
  3713                           
  3714                           ;save.c: 109: }
  3715                           ;save.c: 111: }
  3716  0F71  0008               	return
  3717  0F72                     l5166:	
  3718                           
  3719                           ;save.c: 112: else if(time_count == 3 && Record_flag == 1)
  3720  0F72  3003               	movlw	3
  3721  0F73  066C               	xorwf	_time_count,w
  3722  0F74  1D03               	btfss	3,2
  3723  0F75  0008               	return
  3724  0F76  036A               	decf	_Record_flag,w
  3725  0F77  1D03               	btfss	3,2
  3726  0F78  0008               	return
  3727                           
  3728                           ;save.c: 113: {
  3729                           ;save.c: 114: if(Cur_temperature_time_ch2 > 60)
  3730  0F79  303D               	movlw	61
  3731  0F7A  0278               	subwf	_Cur_temperature_time_ch2,w
  3732  0F7B  1C03               	skipc
  3733  0F7C  0008               	return
  3734                           
  3735                           ;save.c: 115: {
  3736                           ;save.c: 116: var_time = Calculate_Time();
  3737  0F7D  3181  21DD  318F   	fcall	_Calculate_Time
  3738  0F80  0020               	movlb	0	; select bank0
  3739  0F81  00C6               	movwf	??_Save_process
  3740  0F82  01C7               	clrf	??_Save_process+1
  3741  0F83  0846               	movf	??_Save_process,w
  3742  0F84  00C8               	movwf	Save_process@var_time
  3743  0F85  0847               	movf	??_Save_process+1,w
  3744  0F86  00C9               	movwf	Save_process@var_time+1
  3745                           
  3746                           ;save.c: 117: var_time |= 0x200;
  3747  0F87  14C9               	bsf	Save_process@var_time+1,1
  3748                           
  3749                           ;save.c: 118: if(CH2_state == 1) var_time |= 0x800;
  3750  0F88  0367               	decf	_CH2_state,w
  3751  0F89  1903               	btfsc	3,2
  3752  0F8A  15C9               	bsf	Save_process@var_time+1,3
  3753                           
  3754                           ;save.c: 120: var_time |= 0x1000;
  3755  0F8B  1649               	bsf	Save_process@var_time+1,4
  3756                           
  3757                           ;save.c: 122: Save_Write_word(var_time);
  3758  0F8C  0849               	movf	Save_process@var_time+1,w
  3759  0F8D  00B4               	movwf	Save_Write_word@data+1
  3760  0F8E  0848               	movf	Save_process@var_time,w
  3761  0F8F  00B3               	movwf	Save_Write_word@data
  3762  0F90  3189  216F  318F   	fcall	_Save_Write_word
  3763                           
  3764                           ;save.c: 123: Save_Write_word(temperature_value);
  3765  0F93  0020               	movlb	0	; select bank0
  3766  0F94  085B               	movf	_temperature_value+1,w
  3767  0F95  00B4               	movwf	Save_Write_word@data+1
  3768  0F96  085A               	movf	_temperature_value,w
  3769  0F97  00B3               	movwf	Save_Write_word@data
  3770  0F98  3189  216F         	fcall	_Save_Write_word
  3771                           
  3772                           ;save.c: 125: Cur_temperature_time_ch2 = 0;
  3773  0F9A  01F8               	clrf	_Cur_temperature_time_ch2
  3774  0F9B  0008               	return
  3775  0F9C                     __end_of_Save_process:	
  3776                           
  3777                           	psect	text4
  3778  0984                     __ptext4:	
  3779 ;; *************** function _SYSTEM_Initialize *****************
  3780 ;; Defined at:
  3781 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    4
  3802 ;; This function calls:
  3803 ;;		_ADC_Initialize
  3804 ;;		_EUSART_Initialize
  3805 ;;		_FVR_Initialize
  3806 ;;		_OSCILLATOR_Initialize
  3807 ;;		_PIN_MANAGER_Initialize
  3808 ;;		_SPI_Initialize
  3809 ;;		_TMR0_Initialize
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _SYSTEM_Initialize
  3817  0984                     _SYSTEM_Initialize:	
  3818                           
  3819                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3823  0984  3188  20BF  3189   	fcall	_OSCILLATOR_Initialize
  3824                           
  3825                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3826  0987  318B  2313  3189   	fcall	_PIN_MANAGER_Initialize
  3827                           
  3828                           ;mcc.c: 73: SPI_Initialize();
  3829  098A  3188  20CA  3189   	fcall	_SPI_Initialize
  3830                           
  3831                           ;mcc.c: 74: EUSART_Initialize();
  3832  098D  3188  20FF  3189   	fcall	_EUSART_Initialize
  3833                           
  3834                           ;mcc.c: 75: ADC_Initialize();
  3835  0990  3188  20E4  3189   	fcall	_ADC_Initialize
  3836                           
  3837                           ;mcc.c: 76: TMR0_Initialize();
  3838  0993  3189  2128  3189   	fcall	_TMR0_Initialize
  3839                           
  3840                           ;mcc.c: 77: FVR_Initialize();
  3841  0996  3188  20B6         	fcall	_FVR_Initialize
  3842  0998  0008               	return
  3843  0999                     __end_of_SYSTEM_Initialize:	
  3844                           
  3845                           	psect	text5
  3846  0928                     __ptext5:	
  3847 ;; *************** function _TMR0_Initialize *****************
  3848 ;; Defined at:
  3849 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;Total ram usage:        1 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    3
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_SYSTEM_Initialize
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           
  3878                           ;psect for function _TMR0_Initialize
  3879  0928                     _TMR0_Initialize:	
  3880                           
  3881                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3885  0928  0021               	movlb	1	; select bank1
  3886  0929  0815               	movf	21,w	;volatile
  3887  092A  39C0               	andlw	192
  3888  092B  3817               	iorlw	23
  3889  092C  0095               	movwf	21	;volatile
  3890                           
  3891                           ;tmr0.c: 73: TMR0 = 0x64;
  3892  092D  3064               	movlw	100
  3893  092E  0020               	movlb	0	; select bank0
  3894  092F  0095               	movwf	21	;volatile
  3895                           
  3896                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3897  0930  3064               	movlw	100
  3898  0931  00F3               	movwf	??_TMR0_Initialize
  3899  0932  0873               	movf	??_TMR0_Initialize,w
  3900  0933  0021               	movlb	1	; select bank1
  3901  0934  00E9               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3902                           
  3903                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3904  0935  110B               	bcf	11,2	;volatile
  3905                           
  3906                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3907  0936  168B               	bsf	11,5	;volatile
  3908  0937  0008               	return
  3909  0938                     __end_of_TMR0_Initialize:	
  3910                           
  3911                           	psect	text6
  3912  08CA                     __ptext6:	
  3913 ;; *************** function _SPI_Initialize *****************
  3914 ;; Defined at:
  3915 ;;		line 64 in file "mcc_generated_files/spi.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_SYSTEM_Initialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _SPI_Initialize
  3945  08CA                     _SPI_Initialize:	
  3946                           
  3947                           ;spi.c: 68: SSP1STAT = 0x00;
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3951  08CA  0024               	movlb	4	; select bank4
  3952  08CB  0194               	clrf	20	;volatile
  3953                           
  3954                           ;spi.c: 71: SSP1CON1 = 0x30;
  3955  08CC  3030               	movlw	48
  3956  08CD  0095               	movwf	21	;volatile
  3957                           
  3958                           ;spi.c: 74: SSP1ADD = 0x00;
  3959  08CE  0192               	clrf	18	;volatile
  3960  08CF  0008               	return
  3961  08D0                     __end_of_SPI_Initialize:	
  3962                           
  3963                           	psect	text7
  3964  0B13                     __ptext7:	
  3965 ;; *************** function _PIN_MANAGER_Initialize *****************
  3966 ;; Defined at:
  3967 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_SYSTEM_Initialize
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _PIN_MANAGER_Initialize
  3997  0B13                     _PIN_MANAGER_Initialize:	
  3998                           
  3999                           ;pin_manager.c: 51: LATA = 0x7B;
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4003  0B13  307B               	movlw	123
  4004  0B14  0022               	movlb	2	; select bank2
  4005  0B15  008C               	movwf	12	;volatile
  4006                           
  4007                           ;pin_manager.c: 52: TRISA = 0x80;
  4008  0B16  3080               	movlw	128
  4009  0B17  0021               	movlb	1	; select bank1
  4010  0B18  008C               	movwf	12	;volatile
  4011                           
  4012                           ;pin_manager.c: 53: ANSELA = 0x00;
  4013  0B19  0023               	movlb	3	; select bank3
  4014  0B1A  018C               	clrf	12	;volatile
  4015                           
  4016                           ;pin_manager.c: 55: LATB = 0x00;
  4017  0B1B  0022               	movlb	2	; select bank2
  4018  0B1C  018D               	clrf	13	;volatile
  4019                           
  4020                           ;pin_manager.c: 56: TRISB = 0xFC;
  4021  0B1D  30FC               	movlw	252
  4022  0B1E  0021               	movlb	1	; select bank1
  4023  0B1F  008D               	movwf	13	;volatile
  4024                           
  4025                           ;pin_manager.c: 57: ANSELB = 0x10;
  4026  0B20  3010               	movlw	16
  4027  0B21  0023               	movlb	3	; select bank3
  4028  0B22  008D               	movwf	13	;volatile
  4029                           
  4030                           ;pin_manager.c: 58: WPUB = 0x2C;
  4031  0B23  302C               	movlw	44
  4032  0B24  0024               	movlb	4	; select bank4
  4033  0B25  008D               	movwf	13	;volatile
  4034                           
  4035                           ;pin_manager.c: 60: LATC = 0x07;
  4036  0B26  3007               	movlw	7
  4037  0B27  0022               	movlb	2	; select bank2
  4038  0B28  008E               	movwf	14	;volatile
  4039                           
  4040                           ;pin_manager.c: 61: TRISC = 0xD0;
  4041  0B29  30D0               	movlw	208
  4042  0B2A  0021               	movlb	1	; select bank1
  4043  0B2B  008E               	movwf	14	;volatile
  4044                           
  4045                           ;pin_manager.c: 62: ANSELC = 0x00;
  4046  0B2C  0023               	movlb	3	; select bank3
  4047  0B2D  018E               	clrf	14	;volatile
  4048                           
  4049                           ;pin_manager.c: 64: WPUE = 0x00;
  4050  0B2E  0024               	movlb	4	; select bank4
  4051  0B2F  0190               	clrf	16	;volatile
  4052                           
  4053                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4054  0B30  0021               	movlb	1	; select bank1
  4055  0B31  1395               	bcf	21,7	;volatile
  4056                           
  4057                           ;pin_manager.c: 68: APFCON = 0x00;
  4058  0B32  0022               	movlb	2	; select bank2
  4059  0B33  019D               	clrf	29	;volatile
  4060  0B34  0008               	return
  4061  0B35                     __end_of_PIN_MANAGER_Initialize:	
  4062                           
  4063                           	psect	text8
  4064  08BF                     __ptext8:	
  4065 ;; *************** function _OSCILLATOR_Initialize *****************
  4066 ;; Defined at:
  4067 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    3
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_SYSTEM_Initialize
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _OSCILLATOR_Initialize
  4097  08BF                     _OSCILLATOR_Initialize:	
  4098                           
  4099                           ;mcc.c: 82: OSCCON = 0x78;
  4100                           
  4101                           ;incstack = 0
  4102                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4103  08BF  3078               	movlw	120
  4104  08C0  0021               	movlb	1	; select bank1
  4105  08C1  0099               	movwf	25	;volatile
  4106                           
  4107                           ;mcc.c: 84: OSCSTAT = 0x00;
  4108  08C2  019A               	clrf	26	;volatile
  4109  08C3  0008               	return
  4110  08C4                     __end_of_OSCILLATOR_Initialize:	
  4111                           
  4112                           	psect	text9
  4113  08B6                     __ptext9:	
  4114 ;; *************** function _FVR_Initialize *****************
  4115 ;; Defined at:
  4116 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_SYSTEM_Initialize
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _FVR_Initialize
  4146  08B6                     _FVR_Initialize:	
  4147                           
  4148                           ;fvr.c: 60: FVRCON = 0x82;
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _FVR_Initialize: [wreg]
  4152  08B6  3082               	movlw	130
  4153  08B7  0022               	movlb	2	; select bank2
  4154  08B8  0097               	movwf	23	;volatile
  4155  08B9  0008               	return
  4156  08BA                     __end_of_FVR_Initialize:	
  4157                           
  4158                           	psect	text10
  4159  08FF                     __ptext10:	
  4160 ;; *************** function _EUSART_Initialize *****************
  4161 ;; Defined at:
  4162 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    3
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_SYSTEM_Initialize
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _EUSART_Initialize
  4192  08FF                     _EUSART_Initialize:	
  4193                           
  4194                           ;eusart.c: 60: BAUDCON = 0x48;
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _EUSART_Initialize: [wreg]
  4198  08FF  3048               	movlw	72
  4199  0900  0023               	movlb	3	; select bank3
  4200  0901  009F               	movwf	31	;volatile
  4201                           
  4202                           ;eusart.c: 63: RCSTA = 0x80;
  4203  0902  3080               	movlw	128
  4204  0903  009D               	movwf	29	;volatile
  4205                           
  4206                           ;eusart.c: 66: TXSTA = 0x26;
  4207  0904  3026               	movlw	38
  4208  0905  009E               	movwf	30	;volatile
  4209                           
  4210                           ;eusart.c: 69: SPBRGL = 0xA0;
  4211  0906  30A0               	movlw	160
  4212  0907  009B               	movwf	27	;volatile
  4213                           
  4214                           ;eusart.c: 72: SPBRGH = 0x01;
  4215  0908  3001               	movlw	1
  4216  0909  009C               	movwf	28	;volatile
  4217  090A  0008               	return
  4218  090B                     __end_of_EUSART_Initialize:	
  4219                           
  4220                           	psect	text11
  4221  08E4                     __ptext11:	
  4222 ;; *************** function _ADC_Initialize *****************
  4223 ;; Defined at:
  4224 ;;		line 65 in file "mcc_generated_files/adc.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;Total ram usage:        0 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    3
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_SYSTEM_Initialize
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _ADC_Initialize
  4254  08E4                     _ADC_Initialize:	
  4255                           
  4256                           ;adc.c: 69: ADCON0 = 0x01;
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4260  08E4  3001               	movlw	1
  4261  08E5  0021               	movlb	1	; select bank1
  4262  08E6  009D               	movwf	29	;volatile
  4263                           
  4264                           ;adc.c: 72: ADCON1 = 0xE3;
  4265  08E7  30E3               	movlw	227
  4266  08E8  009E               	movwf	30	;volatile
  4267                           
  4268                           ;adc.c: 75: ADRESL = 0x00;
  4269  08E9  019B               	clrf	27	;volatile
  4270                           
  4271                           ;adc.c: 78: ADRESH = 0x00;
  4272  08EA  019C               	clrf	28	;volatile
  4273  08EB  0008               	return
  4274  08EC                     __end_of_ADC_Initialize:	
  4275                           
  4276                           	psect	text12
  4277  0585                     __ptext12:	
  4278 ;; *************** function _Key_Process *****************
  4279 ;; Defined at:
  4280 ;;		line 42 in file "mcc_generated_files/key.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  i               2   53[BANK0 ] unsigned int 
  4285 ;;  data_temp       2   50[BANK0 ] unsigned int 
  4286 ;;  gKeyValue       1   52[BANK0 ] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2  297[None  ] int 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;Total ram usage:        6 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:   10
  4303 ;; This function calls:
  4304 ;;		_EUSART_Write
  4305 ;;		_FLASH_ReadWord
  4306 ;;		_Key_Scan
  4307 ;;		_Save_Write_time
  4308 ;;		_SendCmd_1621
  4309 ;;		_Set_finish_flag
  4310 ;;		_Set_start_flag
  4311 ;;		_Write_Flash_finish
  4312 ;;		_Write_Flash_head
  4313 ;;		_temperature_process
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _Key_Process
  4321  0585                     _Key_Process:	
  4322                           
  4323                           ;key.c: 44: unsigned char gKeyValue=0;
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4327  0585  0020               	movlb	0	; select bank0
  4328  0586  01D4               	clrf	Key_Process@gKeyValue
  4329                           
  4330                           ;key.c: 46: unsigned int i;
  4331                           ;key.c: 47: unsigned int data_temp;
  4332                           ;key.c: 49: LongPressSec = 0;
  4333  0587  01E9               	clrf	_LongPressSec
  4334                           
  4335                           ;key.c: 50: gKeyValue=Key_Scan();
  4336  0588  318B  2335  3185   	fcall	_Key_Scan
  4337  058B  0020               	movlb	0	; select bank0
  4338  058C  00D1               	movwf	??_Key_Process
  4339  058D  0851               	movf	??_Key_Process,w
  4340  058E  00D4               	movwf	Key_Process@gKeyValue
  4341                           
  4342                           ;key.c: 51: if(gKeyValue)
  4343  058F  0854               	movf	Key_Process@gKeyValue,w
  4344  0590  1903               	btfsc	3,2
  4345  0591  0008               	return
  4346  0592  2E03               	goto	l5144
  4347  0593                     l5098:	
  4348                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) );
  4349                           
  4350                           ;key.c: 54: {
  4351                           ;key.c: 55: case 0x01:
  4352                           
  4353                           ;key.c: 52: {
  4354                           ;key.c: 53: switch(gKeyValue)
  4355                           
  4356  0593  3003               	movlw	3
  4357  0594  0269               	subwf	_LongPressSec,w
  4358  0595  1803               	skipnc
  4359  0596  2D99               	goto	l5102
  4360  0597  1E8D               	btfss	13,5	;volatile
  4361  0598  2D93               	goto	l5098
  4362  0599                     l5102:	
  4363                           
  4364                           ;key.c: 57: if(LongPressSec > 2)
  4365  0599  3003               	movlw	3
  4366  059A  0269               	subwf	_LongPressSec,w
  4367  059B  1C03               	skipc
  4368  059C  2DA5               	goto	l5106
  4369                           
  4370                           ;key.c: 58: {
  4371                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4372  059D  0022               	movlb	2	; select bank2
  4373  059E  110C               	bcf	12,2	;volatile
  4374                           
  4375                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4376  059F  158C               	bsf	12,3	;volatile
  4377                           
  4378                           ;key.c: 61: SendCmd_1621(0x04);
  4379  05A0  3004               	movlw	4
  4380  05A1  3189  2199  3185   	fcall	_SendCmd_1621
  4381                           
  4382                           ;key.c: 62: }
  4383  05A4  2DD2               	goto	l879
  4384  05A5                     l5106:	
  4385                           
  4386                           ;key.c: 64: else
  4387                           ;key.c: 65: {
  4388                           ;key.c: 66: for(i=0x2000;i<0x2000+1000;i++)
  4389  05A5  3000               	movlw	0
  4390  05A6  0020               	movlb	0	; select bank0
  4391  05A7  00D5               	movwf	Key_Process@i
  4392  05A8  3020               	movlw	32
  4393  05A9  00D6               	movwf	Key_Process@i+1
  4394  05AA  3023               	movlw	35
  4395  05AB  0256               	subwf	Key_Process@i+1,w
  4396  05AC  30E8               	movlw	232
  4397  05AD  1903               	skipnz
  4398  05AE  0255               	subwf	Key_Process@i,w
  4399  05AF  1803               	btfsc	3,0
  4400  05B0  2DD2               	goto	l879
  4401  05B1                     l5110:	
  4402                           
  4403                           ;key.c: 67: {
  4404                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4405  05B1  0856               	movf	Key_Process@i+1,w
  4406  05B2  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4407  05B3  0855               	movf	Key_Process@i,w
  4408  05B4  00F3               	movwf	FLASH_ReadWord@flashAddr
  4409  05B5  3189  21FB  3185   	fcall	_FLASH_ReadWord
  4410  05B8  0874               	movf	?_FLASH_ReadWord+1,w
  4411  05B9  0020               	movlb	0	; select bank0
  4412  05BA  00D3               	movwf	Key_Process@data_temp+1
  4413  05BB  0873               	movf	?_FLASH_ReadWord,w
  4414  05BC  00D2               	movwf	Key_Process@data_temp
  4415                           
  4416                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4417  05BD  0853               	movf	Key_Process@data_temp+1,w
  4418  05BE  3188  20DC  3185   	fcall	_EUSART_Write
  4419                           
  4420                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4421  05C1  0020               	movlb	0	; select bank0
  4422  05C2  0852               	movf	Key_Process@data_temp,w
  4423  05C3  3188  20DC  3185   	fcall	_EUSART_Write
  4424  05C6  3001               	movlw	1
  4425  05C7  0020               	movlb	0	; select bank0
  4426  05C8  07D5               	addwf	Key_Process@i,f
  4427  05C9  3000               	movlw	0
  4428  05CA  3DD6               	addwfc	Key_Process@i+1,f
  4429  05CB  3023               	movlw	35
  4430  05CC  0256               	subwf	Key_Process@i+1,w
  4431  05CD  30E8               	movlw	232
  4432  05CE  1903               	skipnz
  4433  05CF  0255               	subwf	Key_Process@i,w
  4434  05D0  1C03               	skipc
  4435  05D1  2DB1               	goto	l5110
  4436  05D2                     l879:	
  4437                           ;key.c: 71: }
  4438                           ;key.c: 72: }
  4439                           ;key.c: 74: while(RB5 == 0);
  4440                           
  4441  05D2  0020               	movlb	0	; select bank0
  4442  05D3  1A8D               	btfsc	13,5	;volatile
  4443  05D4  0008               	return
  4444  05D5  2DD2               	goto	l879
  4445  05D6                     l5116:	
  4446                           ;key.c: 77: while( !(LongPressSec > 2 || RA7 == 1) );
  4447                           
  4448                           ;key.c: 76: case 0x02:
  4449                           
  4450                           ;key.c: 75: break;
  4451                           
  4452  05D6  3003               	movlw	3
  4453  05D7  0269               	subwf	_LongPressSec,w
  4454  05D8  1803               	skipnc
  4455  05D9  2DDC               	goto	l5120
  4456  05DA  1F8C               	btfss	12,7	;volatile
  4457  05DB  2DD6               	goto	l5116
  4458  05DC                     l5120:	
  4459                           
  4460                           ;key.c: 78: if(LongPressSec > 2)
  4461  05DC  3003               	movlw	3
  4462  05DD  0269               	subwf	_LongPressSec,w
  4463  05DE  1C03               	skipc
  4464  05DF  2DF7               	goto	l5138
  4465                           
  4466                           ;key.c: 79: {
  4467                           ;key.c: 80: if(Record_flag == 0)
  4468  05E0  086A               	movf	_Record_flag,w
  4469  05E1  1D03               	btfss	3,2
  4470  05E2  2DF0               	goto	l5134
  4471                           
  4472                           ;key.c: 81: {
  4473                           ;key.c: 82: Set_start_flag();
  4474  05E3  3188  20C4  3185   	fcall	_Set_start_flag
  4475                           
  4476                           ;key.c: 83: Write_Flash_head();
  4477  05E6  318B  23A5  3185   	fcall	_Write_Flash_head
  4478                           
  4479                           ;key.c: 84: Save_Write_time();
  4480  05E9  3186  2685  3185   	fcall	_Save_Write_time
  4481                           
  4482                           ;key.c: 85: Cur_temperature_time_ch1 = 0;
  4483  05EC  0020               	movlb	0	; select bank0
  4484  05ED  01E8               	clrf	_Cur_temperature_time_ch1
  4485                           
  4486                           ;key.c: 86: Cur_temperature_time_ch2 = 0;
  4487  05EE  01F8               	clrf	_Cur_temperature_time_ch2
  4488                           
  4489                           ;key.c: 87: }
  4490  05EF  2DFF               	goto	l893
  4491  05F0                     l5134:	
  4492                           
  4493                           ;key.c: 88: else
  4494                           ;key.c: 89: {
  4495                           ;key.c: 90: Set_finish_flag();
  4496  05F0  3188  20BA  3185   	fcall	_Set_finish_flag
  4497                           
  4498                           ;key.c: 91: Write_Flash_finish();
  4499  05F3  318B  237C  3185   	fcall	_Write_Flash_finish
  4500                           
  4501                           ;key.c: 92: }
  4502                           ;key.c: 93: }
  4503  05F6  2DFF               	goto	l893
  4504  05F7                     l5138:	
  4505                           
  4506                           ;key.c: 94: else
  4507                           ;key.c: 95: {
  4508                           ;key.c: 96: time_count = 5;
  4509  05F7  3005               	movlw	5
  4510  05F8  0020               	movlb	0	; select bank0
  4511  05F9  00D1               	movwf	??_Key_Process
  4512  05FA  0851               	movf	??_Key_Process,w
  4513  05FB  00EC               	movwf	_time_count
  4514                           
  4515                           ;key.c: 97: temperature_process();
  4516  05FC  318C  24B2  3185   	fcall	_temperature_process
  4517  05FF                     l893:	
  4518                           ;key.c: 98: }
  4519                           ;key.c: 99: while(RA7 == 0);
  4520                           
  4521  05FF  0020               	movlb	0	; select bank0
  4522  0600  1B8C               	btfsc	12,7	;volatile
  4523  0601  0008               	return
  4524  0602  2DFF               	goto	l893
  4525  0603                     l5144:	
  4526                           ;key.c: 102: }
  4527                           
  4528                           ;key.c: 101: default:break;
  4529                           
  4530                           ;key.c: 100: break;
  4531                           
  4532  0603  0854               	movf	Key_Process@gKeyValue,w
  4533                           
  4534                           ; Switch size 1, requested type "space"
  4535                           ; Number of cases is 2, Range of values is 1 to 2
  4536                           ; switch strategies available:
  4537                           ; Name         Instructions Cycles
  4538                           ; simple_byte            7     4 (average)
  4539                           ; direct_byte           13     9 (fixed)
  4540                           ; jumptable            263     9 (fixed)
  4541                           ;	Chosen strategy is simple_byte
  4542  0604  3A01               	xorlw	1	; case 1
  4543  0605  1903               	skipnz
  4544  0606  2D93               	goto	l5098
  4545  0607  3A03               	xorlw	3	; case 2
  4546  0608  1903               	skipnz
  4547  0609  2DD6               	goto	l5116
  4548  060A  2E0C               	goto	l897
  4549  060B  0008               	return
  4550  060C                     l897:	
  4551  060C  0008               	return
  4552  060D                     __end_of_Key_Process:	
  4553                           
  4554                           	psect	text13
  4555  0CB2                     __ptext13:	
  4556 ;; *************** function _temperature_process *****************
  4557 ;; Defined at:
  4558 ;;		line 342 in file "mcc_generated_files/max31856.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    9
  4579 ;; This function calls:
  4580 ;;		_Two_Display
  4581 ;;		_one_temperature_trans
  4582 ;;		_temperature_display
  4583 ;;		_time_Display
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;;		_Key_Process
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _temperature_process
  4592  0CB2                     _temperature_process:	
  4593                           
  4594                           ;max31856.c: 344: switch(time_count)
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4598  0CB2  2CD2               	goto	l4950
  4599  0CB3                     l4922:	
  4600                           ;max31856.c: 345: {
  4601                           ;max31856.c: 346: case 0: Two_Display(1);
  4602                           
  4603  0CB3  3001               	movlw	1
  4604  0CB4  318C  2481  318C   	fcall	_Two_Display
  4605                           
  4606                           ;max31856.c: 347: do { LATA1 = 1; } while(0);
  4607  0CB7  0022               	movlb	2	; select bank2
  4608  0CB8  148C               	bsf	12,1	;volatile
  4609                           
  4610                           ;max31856.c: 348: do { LATA0 = 1; } while(0);
  4611  0CB9  140C               	bsf	12,0	;volatile
  4612                           
  4613                           ;max31856.c: 349: do { LATA0 = 0; } while(0);
  4614  0CBA  100C               	bcf	12,0	;volatile
  4615                           
  4616                           ;max31856.c: 350: one_temperature_trans();
  4617  0CBB  318D  258A         	fcall	_one_temperature_trans
  4618                           
  4619                           ;max31856.c: 351: break;
  4620  0CBD  0008               	return
  4621  0CBE                     l4932:	
  4622                           ;max31856.c: 352: case 1:
  4623                           
  4624                           
  4625                           ;max31856.c: 353: temperature_display();break;
  4626  0CBE  3187  27C6         	fcall	_temperature_display
  4627  0CC0  0008               	return
  4628  0CC1                     l4934:	
  4629                           ;max31856.c: 354: case 2: Two_Display(2);
  4630                           
  4631  0CC1  3002               	movlw	2
  4632  0CC2  318C  2481  318C   	fcall	_Two_Display
  4633                           
  4634                           ;max31856.c: 355: do { LATA0 = 1; } while(0);
  4635  0CC5  0022               	movlb	2	; select bank2
  4636  0CC6  140C               	bsf	12,0	;volatile
  4637                           
  4638                           ;max31856.c: 356: do { LATA1 = 1; } while(0);
  4639  0CC7  148C               	bsf	12,1	;volatile
  4640                           
  4641                           ;max31856.c: 357: do { LATA1 = 0; } while(0);
  4642  0CC8  108C               	bcf	12,1	;volatile
  4643                           
  4644                           ;max31856.c: 358: one_temperature_trans();
  4645  0CC9  318D  258A         	fcall	_one_temperature_trans
  4646                           
  4647                           ;max31856.c: 359: break;
  4648  0CCB  0008               	return
  4649  0CCC                     l4944:	
  4650                           ;max31856.c: 360: case 3:
  4651                           
  4652                           
  4653                           ;max31856.c: 361: temperature_display();break;
  4654  0CCC  3187  27C6         	fcall	_temperature_display
  4655  0CCE  0008               	return
  4656  0CCF                     l4946:	
  4657                           ;max31856.c: 362: case 5: time_Display();break;
  4658                           
  4659  0CCF  3184  24F0         	fcall	_time_Display
  4660                           
  4661                           ;max31856.c: 364: }
  4662                           
  4663                           ;max31856.c: 363: default:break;
  4664  0CD1  0008               	return
  4665  0CD2                     l4950:	
  4666  0CD2  0020               	movlb	0	; select bank0
  4667  0CD3  086C               	movf	_time_count,w
  4668                           
  4669                           ; Switch size 1, requested type "space"
  4670                           ; Number of cases is 5, Range of values is 0 to 5
  4671                           ; switch strategies available:
  4672                           ; Name         Instructions Cycles
  4673                           ; simple_byte           16     9 (average)
  4674                           ; direct_byte           18     6 (fixed)
  4675                           ; jumptable            260     6 (fixed)
  4676                           ;	Chosen strategy is simple_byte
  4677  0CD4  3A00               	xorlw	0	; case 0
  4678  0CD5  1903               	skipnz
  4679  0CD6  2CB3               	goto	l4922
  4680  0CD7  3A01               	xorlw	1	; case 1
  4681  0CD8  1903               	skipnz
  4682  0CD9  2CBE               	goto	l4932
  4683  0CDA  3A03               	xorlw	3	; case 2
  4684  0CDB  1903               	skipnz
  4685  0CDC  2CC1               	goto	l4934
  4686  0CDD  3A01               	xorlw	1	; case 3
  4687  0CDE  1903               	skipnz
  4688  0CDF  2CCC               	goto	l4944
  4689  0CE0  3A06               	xorlw	6	; case 5
  4690  0CE1  1903               	skipnz
  4691  0CE2  2CCF               	goto	l4946
  4692  0CE3  2CE4               	goto	l582
  4693  0CE4                     l582:	
  4694  0CE4  0008               	return
  4695  0CE5                     __end_of_temperature_process:	
  4696                           
  4697                           	psect	text14
  4698  04F0                     __ptext14:	
  4699 ;; *************** function _time_Display *****************
  4700 ;; Defined at:
  4701 ;;		line 166 in file "mcc_generated_files/ht1621.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  num             4   19[BANK0 ] unsigned char [4]
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;Total ram usage:        7 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    6
  4722 ;; This function calls:
  4723 ;;		_Bq32k_Rtc_Read_Time
  4724 ;;		_WriteAll_1621
  4725 ;;		___awdiv
  4726 ;;		___awmod
  4727 ;; This function is called by:
  4728 ;;		_temperature_process
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _time_Display
  4734  04F0                     _time_Display:	
  4735                           
  4736                           ;ht1621.c: 168: unsigned char num[4]={0};
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4740  04F0  0021               	movlb	1	; select bank1
  4741  04F1  082B               	movf	(time_Display@F2129+3)^(0+128),w
  4742  04F2  0020               	movlb	0	; select bank0
  4743  04F3  00B6               	movwf	time_Display@num+3
  4744  04F4  0021               	movlb	1	; select bank1
  4745  04F5  082A               	movf	(time_Display@F2129+2)^(0+128),w
  4746  04F6  0020               	movlb	0	; select bank0
  4747  04F7  00B5               	movwf	time_Display@num+2
  4748  04F8  0021               	movlb	1	; select bank1
  4749  04F9  0829               	movf	(time_Display@F2129+1)^(0+128),w
  4750  04FA  0020               	movlb	0	; select bank0
  4751  04FB  00B4               	movwf	time_Display@num+1
  4752  04FC  0021               	movlb	1	; select bank1
  4753  04FD  0828               	movf	time_Display@F2129^(0+128),w
  4754  04FE  0020               	movlb	0	; select bank0
  4755  04FF  00B3               	movwf	time_Display@num
  4756                           
  4757                           ;ht1621.c: 169: Bq32k_Rtc_Read_Time(&rtc_tm);
  4758  0500  30CF               	movlw	(low (_rtc_tm| 0))& (0+255)
  4759  0501  318F  279C  3184   	fcall	_Bq32k_Rtc_Read_Time
  4760                           
  4761                           ;ht1621.c: 170: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4762  0504  300A               	movlw	10
  4763  0505  00F3               	movwf	___awdiv@divisor
  4764  0506  3000               	movlw	0
  4765  0507  00F4               	movwf	___awdiv@divisor+1
  4766  0508  0021               	movlb	1	; select bank1
  4767  0509  0851               	movf	(_rtc_tm^(0+128)+2),w
  4768  050A  0020               	movlb	0	; select bank0
  4769  050B  00B0               	movwf	??_time_Display
  4770  050C  01B1               	clrf	??_time_Display+1
  4771  050D  0830               	movf	??_time_Display,w
  4772  050E  00F5               	movwf	___awdiv@dividend
  4773  050F  0831               	movf	??_time_Display+1,w
  4774  0510  00F6               	movwf	___awdiv@dividend+1
  4775  0511  318E  26F3  3184   	fcall	___awdiv
  4776  0514  0874               	movf	?___awdiv+1,w
  4777  0515  0085               	movwf	5
  4778  0516  0873               	movf	?___awdiv,w
  4779  0517  0084               	movwf	4
  4780  0518  3000               	movlw	low (_Dis_TAB| (0+32768))
  4781  0519  0784               	addwf	4,f
  4782  051A  3090               	movlw	high (_Dis_TAB| (0+32768))
  4783  051B  3D85               	addwfc	5,f
  4784  051C  0800               	movf	0,w	;code access
  4785  051D  0020               	movlb	0	; select bank0
  4786  051E  00B2               	movwf	??_time_Display+2
  4787  051F  0832               	movf	??_time_Display+2,w
  4788  0520  00B3               	movwf	time_Display@num
  4789                           
  4790                           ;ht1621.c: 171: num[0] |= 0x08;
  4791  0521  15B3               	bsf	time_Display@num,3
  4792                           
  4793                           ;ht1621.c: 172: num[1] = Dis_TAB[rtc_tm.hours % 10];
  4794  0522  300A               	movlw	10
  4795  0523  00F3               	movwf	___awmod@divisor
  4796  0524  3000               	movlw	0
  4797  0525  00F4               	movwf	___awmod@divisor+1
  4798  0526  0021               	movlb	1	; select bank1
  4799  0527  0851               	movf	(_rtc_tm^(0+128)+2),w
  4800  0528  0020               	movlb	0	; select bank0
  4801  0529  00B0               	movwf	??_time_Display
  4802  052A  01B1               	clrf	??_time_Display+1
  4803  052B  0830               	movf	??_time_Display,w
  4804  052C  00F5               	movwf	___awmod@dividend
  4805  052D  0831               	movf	??_time_Display+1,w
  4806  052E  00F6               	movwf	___awmod@dividend+1
  4807  052F  318E  2610  3184   	fcall	___awmod
  4808  0532  0874               	movf	?___awmod+1,w
  4809  0533  0085               	movwf	5
  4810  0534  0873               	movf	?___awmod,w
  4811  0535  0084               	movwf	4
  4812  0536  3000               	movlw	low (_Dis_TAB| (0+32768))
  4813  0537  0784               	addwf	4,f
  4814  0538  3090               	movlw	high (_Dis_TAB| (0+32768))
  4815  0539  3D85               	addwfc	5,f
  4816  053A  0800               	movf	0,w	;code access
  4817  053B  0020               	movlb	0	; select bank0
  4818  053C  00B2               	movwf	??_time_Display+2
  4819  053D  0832               	movf	??_time_Display+2,w
  4820  053E  00B4               	movwf	time_Display@num+1
  4821                           
  4822                           ;ht1621.c: 173: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  4823  053F  300A               	movlw	10
  4824  0540  00F3               	movwf	___awdiv@divisor
  4825  0541  3000               	movlw	0
  4826  0542  00F4               	movwf	___awdiv@divisor+1
  4827  0543  0021               	movlb	1	; select bank1
  4828  0544  0850               	movf	(_rtc_tm^(0+128)+1),w
  4829  0545  0020               	movlb	0	; select bank0
  4830  0546  00B0               	movwf	??_time_Display
  4831  0547  01B1               	clrf	??_time_Display+1
  4832  0548  0830               	movf	??_time_Display,w
  4833  0549  00F5               	movwf	___awdiv@dividend
  4834  054A  0831               	movf	??_time_Display+1,w
  4835  054B  00F6               	movwf	___awdiv@dividend+1
  4836  054C  318E  26F3  3184   	fcall	___awdiv
  4837  054F  0874               	movf	?___awdiv+1,w
  4838  0550  0085               	movwf	5
  4839  0551  0873               	movf	?___awdiv,w
  4840  0552  0084               	movwf	4
  4841  0553  3000               	movlw	low (_Dis_TAB| (0+32768))
  4842  0554  0784               	addwf	4,f
  4843  0555  3090               	movlw	high (_Dis_TAB| (0+32768))
  4844  0556  3D85               	addwfc	5,f
  4845  0557  0800               	movf	0,w	;code access
  4846  0558  0020               	movlb	0	; select bank0
  4847  0559  00B2               	movwf	??_time_Display+2
  4848  055A  0832               	movf	??_time_Display+2,w
  4849  055B  00B5               	movwf	time_Display@num+2
  4850                           
  4851                           ;ht1621.c: 174: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  4852  055C  300A               	movlw	10
  4853  055D  00F3               	movwf	___awmod@divisor
  4854  055E  3000               	movlw	0
  4855  055F  00F4               	movwf	___awmod@divisor+1
  4856  0560  0021               	movlb	1	; select bank1
  4857  0561  0850               	movf	(_rtc_tm^(0+128)+1),w
  4858  0562  0020               	movlb	0	; select bank0
  4859  0563  00B0               	movwf	??_time_Display
  4860  0564  01B1               	clrf	??_time_Display+1
  4861  0565  0830               	movf	??_time_Display,w
  4862  0566  00F5               	movwf	___awmod@dividend
  4863  0567  0831               	movf	??_time_Display+1,w
  4864  0568  00F6               	movwf	___awmod@dividend+1
  4865  0569  318E  2610  3184   	fcall	___awmod
  4866  056C  0874               	movf	?___awmod+1,w
  4867  056D  0085               	movwf	5
  4868  056E  0873               	movf	?___awmod,w
  4869  056F  0084               	movwf	4
  4870  0570  3000               	movlw	low (_Dis_TAB| (0+32768))
  4871  0571  0784               	addwf	4,f
  4872  0572  3090               	movlw	high (_Dis_TAB| (0+32768))
  4873  0573  3D85               	addwfc	5,f
  4874  0574  0800               	movf	0,w	;code access
  4875  0575  0020               	movlb	0	; select bank0
  4876  0576  00B2               	movwf	??_time_Display+2
  4877  0577  0832               	movf	??_time_Display+2,w
  4878  0578  00B6               	movwf	time_Display@num+3
  4879                           
  4880                           ;ht1621.c: 175: WriteAll_1621(0, num, 4);
  4881  0579  3033               	movlw	low time_Display@num
  4882  057A  00A0               	movwf	WriteAll_1621@p
  4883  057B  3000               	movlw	high time_Display@num
  4884  057C  00A1               	movwf	WriteAll_1621@p+1
  4885  057D  3004               	movlw	4
  4886  057E  00B0               	movwf	??_time_Display
  4887  057F  0830               	movf	??_time_Display,w
  4888  0580  00A2               	movwf	WriteAll_1621@cnt
  4889  0581  3000               	movlw	0
  4890  0582  318C  24E5         	fcall	_WriteAll_1621
  4891  0584  0008               	return
  4892  0585                     __end_of_time_Display:	
  4893                           
  4894                           	psect	text15
  4895  0E10                     __ptext15:	
  4896 ;; *************** function ___awmod *****************
  4897 ;; Defined at:
  4898 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  divisor         2    3[COMMON] int 
  4901 ;;  dividend        2    5[COMMON] int 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  sign            1    1[BANK0 ] unsigned char 
  4904 ;;  counter         1    0[BANK0 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  2    3[COMMON] int 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;Total ram usage:        7 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    3
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_time_Display
  4925 ;;		_bin2bcd
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function ___awmod
  4931  0E10                     ___awmod:	
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4935  0E10  0020               	movlb	0	; select bank0
  4936  0E11  01A1               	clrf	___awmod@sign
  4937  0E12  1FF6               	btfss	___awmod@dividend+1,7
  4938  0E13  2E1B               	goto	l4762
  4939  0E14  09F5               	comf	___awmod@dividend,f
  4940  0E15  09F6               	comf	___awmod@dividend+1,f
  4941  0E16  0AF5               	incf	___awmod@dividend,f
  4942  0E17  1903               	skipnz
  4943  0E18  0AF6               	incf	___awmod@dividend+1,f
  4944  0E19  01A1               	clrf	___awmod@sign
  4945  0E1A  0AA1               	incf	___awmod@sign,f
  4946  0E1B                     l4762:	
  4947  0E1B  1FF4               	btfss	___awmod@divisor+1,7
  4948  0E1C  2E22               	goto	l4766
  4949  0E1D  09F3               	comf	___awmod@divisor,f
  4950  0E1E  09F4               	comf	___awmod@divisor+1,f
  4951  0E1F  0AF3               	incf	___awmod@divisor,f
  4952  0E20  1903               	skipnz
  4953  0E21  0AF4               	incf	___awmod@divisor+1,f
  4954  0E22                     l4766:	
  4955  0E22  0873               	movf	___awmod@divisor,w
  4956  0E23  0474               	iorwf	___awmod@divisor+1,w
  4957  0E24  1903               	btfsc	3,2
  4958  0E25  2E49               	goto	l4784
  4959  0E26  01A0               	clrf	___awmod@counter
  4960  0E27  0AA0               	incf	___awmod@counter,f
  4961  0E28                     l4774:	
  4962  0E28  1BF4               	btfsc	___awmod@divisor+1,7
  4963  0E29  2E34               	goto	l4776
  4964  0E2A  3001               	movlw	1
  4965  0E2B                     u4465:	
  4966  0E2B  35F3               	lslf	___awmod@divisor,f
  4967  0E2C  0DF4               	rlf	___awmod@divisor+1,f
  4968  0E2D  0B89               	decfsz	9,f
  4969  0E2E  2E2B               	goto	u4465
  4970  0E2F  3001               	movlw	1
  4971  0E30  00F7               	movwf	??___awmod
  4972  0E31  0877               	movf	??___awmod,w
  4973  0E32  07A0               	addwf	___awmod@counter,f
  4974  0E33  2E28               	goto	l4774
  4975  0E34                     l4776:	
  4976  0E34  0874               	movf	___awmod@divisor+1,w
  4977  0E35  0276               	subwf	___awmod@dividend+1,w
  4978  0E36  1D03               	skipz
  4979  0E37  2E3A               	goto	u4485
  4980  0E38  0873               	movf	___awmod@divisor,w
  4981  0E39  0275               	subwf	___awmod@dividend,w
  4982  0E3A                     u4485:	
  4983  0E3A  1C03               	skipc
  4984  0E3B  2E40               	goto	l4780
  4985  0E3C  0873               	movf	___awmod@divisor,w
  4986  0E3D  02F5               	subwf	___awmod@dividend,f
  4987  0E3E  0874               	movf	___awmod@divisor+1,w
  4988  0E3F  3BF6               	subwfb	___awmod@dividend+1,f
  4989  0E40                     l4780:	
  4990  0E40  3001               	movlw	1
  4991  0E41                     u4495:	
  4992  0E41  36F4               	lsrf	___awmod@divisor+1,f
  4993  0E42  0CF3               	rrf	___awmod@divisor,f
  4994  0E43  0B89               	decfsz	9,f
  4995  0E44  2E41               	goto	u4495
  4996  0E45  3001               	movlw	1
  4997  0E46  02A0               	subwf	___awmod@counter,f
  4998  0E47  1D03               	btfss	3,2
  4999  0E48  2E34               	goto	l4776
  5000  0E49                     l4784:	
  5001  0E49  0821               	movf	___awmod@sign,w
  5002  0E4A  1903               	btfsc	3,2
  5003  0E4B  2E51               	goto	l4788
  5004  0E4C  09F5               	comf	___awmod@dividend,f
  5005  0E4D  09F6               	comf	___awmod@dividend+1,f
  5006  0E4E  0AF5               	incf	___awmod@dividend,f
  5007  0E4F  1903               	skipnz
  5008  0E50  0AF6               	incf	___awmod@dividend+1,f
  5009  0E51                     l4788:	
  5010  0E51  0876               	movf	___awmod@dividend+1,w
  5011  0E52  00F4               	movwf	?___awmod+1
  5012  0E53  0875               	movf	___awmod@dividend,w
  5013  0E54  00F3               	movwf	?___awmod
  5014  0E55  0008               	return
  5015  0E56                     __end_of___awmod:	
  5016                           
  5017                           	psect	text16
  5018  0EF3                     __ptext16:	
  5019 ;; *************** function ___awdiv *****************
  5020 ;; Defined at:
  5021 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  divisor         2    3[COMMON] int 
  5024 ;;  dividend        2    5[COMMON] int 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  quotient        2    2[BANK0 ] int 
  5027 ;;  sign            1    1[BANK0 ] unsigned char 
  5028 ;;  counter         1    0[BANK0 ] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2    3[COMMON] int 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;Total ram usage:        9 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    3
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_time_Display
  5049 ;;		_bin2bcd
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function ___awdiv
  5055  0EF3                     ___awdiv:	
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5059  0EF3  0020               	movlb	0	; select bank0
  5060  0EF4  01A1               	clrf	___awdiv@sign
  5061  0EF5  1FF4               	btfss	___awdiv@divisor+1,7
  5062  0EF6  2EFE               	goto	l4718
  5063  0EF7  09F3               	comf	___awdiv@divisor,f
  5064  0EF8  09F4               	comf	___awdiv@divisor+1,f
  5065  0EF9  0AF3               	incf	___awdiv@divisor,f
  5066  0EFA  1903               	skipnz
  5067  0EFB  0AF4               	incf	___awdiv@divisor+1,f
  5068  0EFC  01A1               	clrf	___awdiv@sign
  5069  0EFD  0AA1               	incf	___awdiv@sign,f
  5070  0EFE                     l4718:	
  5071  0EFE  1FF6               	btfss	___awdiv@dividend+1,7
  5072  0EFF  2F09               	goto	l4724
  5073  0F00  09F5               	comf	___awdiv@dividend,f
  5074  0F01  09F6               	comf	___awdiv@dividend+1,f
  5075  0F02  0AF5               	incf	___awdiv@dividend,f
  5076  0F03  1903               	skipnz
  5077  0F04  0AF6               	incf	___awdiv@dividend+1,f
  5078  0F05  3001               	movlw	1
  5079  0F06  00F7               	movwf	??___awdiv
  5080  0F07  0877               	movf	??___awdiv,w
  5081  0F08  06A1               	xorwf	___awdiv@sign,f
  5082  0F09                     l4724:	
  5083  0F09  01A2               	clrf	___awdiv@quotient
  5084  0F0A  01A3               	clrf	___awdiv@quotient+1
  5085  0F0B  0873               	movf	___awdiv@divisor,w
  5086  0F0C  0474               	iorwf	___awdiv@divisor+1,w
  5087  0F0D  1903               	btfsc	3,2
  5088  0F0E  2F38               	goto	l4746
  5089  0F0F  01A0               	clrf	___awdiv@counter
  5090  0F10  0AA0               	incf	___awdiv@counter,f
  5091  0F11                     l4734:	
  5092  0F11  1BF4               	btfsc	___awdiv@divisor+1,7
  5093  0F12  2F1D               	goto	l4736
  5094  0F13  3001               	movlw	1
  5095  0F14                     u4365:	
  5096  0F14  35F3               	lslf	___awdiv@divisor,f
  5097  0F15  0DF4               	rlf	___awdiv@divisor+1,f
  5098  0F16  0B89               	decfsz	9,f
  5099  0F17  2F14               	goto	u4365
  5100  0F18  3001               	movlw	1
  5101  0F19  00F7               	movwf	??___awdiv
  5102  0F1A  0877               	movf	??___awdiv,w
  5103  0F1B  07A0               	addwf	___awdiv@counter,f
  5104  0F1C  2F11               	goto	l4734
  5105  0F1D                     l4736:	
  5106  0F1D  3001               	movlw	1
  5107  0F1E                     u4385:	
  5108  0F1E  35A2               	lslf	___awdiv@quotient,f
  5109  0F1F  0DA3               	rlf	___awdiv@quotient+1,f
  5110  0F20  0B89               	decfsz	9,f
  5111  0F21  2F1E               	goto	u4385
  5112  0F22  0874               	movf	___awdiv@divisor+1,w
  5113  0F23  0276               	subwf	___awdiv@dividend+1,w
  5114  0F24  1D03               	skipz
  5115  0F25  2F28               	goto	u4395
  5116  0F26  0873               	movf	___awdiv@divisor,w
  5117  0F27  0275               	subwf	___awdiv@dividend,w
  5118  0F28                     u4395:	
  5119  0F28  1C03               	skipc
  5120  0F29  2F2F               	goto	l4742
  5121  0F2A  0873               	movf	___awdiv@divisor,w
  5122  0F2B  02F5               	subwf	___awdiv@dividend,f
  5123  0F2C  0874               	movf	___awdiv@divisor+1,w
  5124  0F2D  3BF6               	subwfb	___awdiv@dividend+1,f
  5125  0F2E  1422               	bsf	___awdiv@quotient,0
  5126  0F2F                     l4742:	
  5127  0F2F  3001               	movlw	1
  5128  0F30                     u4405:	
  5129  0F30  36F4               	lsrf	___awdiv@divisor+1,f
  5130  0F31  0CF3               	rrf	___awdiv@divisor,f
  5131  0F32  0B89               	decfsz	9,f
  5132  0F33  2F30               	goto	u4405
  5133  0F34  3001               	movlw	1
  5134  0F35  02A0               	subwf	___awdiv@counter,f
  5135  0F36  1D03               	btfss	3,2
  5136  0F37  2F1D               	goto	l4736
  5137  0F38                     l4746:	
  5138  0F38  0821               	movf	___awdiv@sign,w
  5139  0F39  1903               	btfsc	3,2
  5140  0F3A  2F40               	goto	l4750
  5141  0F3B  09A2               	comf	___awdiv@quotient,f
  5142  0F3C  09A3               	comf	___awdiv@quotient+1,f
  5143  0F3D  0AA2               	incf	___awdiv@quotient,f
  5144  0F3E  1903               	skipnz
  5145  0F3F  0AA3               	incf	___awdiv@quotient+1,f
  5146  0F40                     l4750:	
  5147  0F40  0823               	movf	___awdiv@quotient+1,w
  5148  0F41  00F4               	movwf	?___awdiv+1
  5149  0F42  0822               	movf	___awdiv@quotient,w
  5150  0F43  00F3               	movwf	?___awdiv
  5151  0F44  0008               	return
  5152  0F45                     __end_of___awdiv:	
  5153                           
  5154                           	psect	text17
  5155  07C6                     __ptext17:	
  5156 ;; *************** function _temperature_display *****************
  5157 ;; Defined at:
  5158 ;;		line 304 in file "mcc_generated_files/max31856.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;Total ram usage:        1 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    8
  5179 ;; This function calls:
  5180 ;;		_Tc_Display
  5181 ;;		_err_Display
  5182 ;;		_maxim_31856_write_register
  5183 ;;		_maxim_clear_fault_status
  5184 ;;		_tc_temperature_trans
  5185 ;; This function is called by:
  5186 ;;		_temperature_process
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _temperature_display
  5192  07C6                     _temperature_display:	
  5193                           
  5194                           ;max31856.c: 306: if(uch_sr==(uint8_t)0x00)
  5195                           
  5196                           ;incstack = 0
  5197                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5198  07C6  0021               	movlb	1	; select bank1
  5199  07C7  0838               	movf	_uch_sr^(0+128),w
  5200  07C8  1D03               	btfss	3,2
  5201  07C9  2FDC               	goto	l4828
  5202                           
  5203                           ;max31856.c: 307: {
  5204                           ;max31856.c: 308: tc_temperature_trans();
  5205  07CA  3180  203F  3187   	fcall	_tc_temperature_trans
  5206                           
  5207                           ;max31856.c: 309: Tc_Display();
  5208  07CD  3184  2431  3187   	fcall	_Tc_Display
  5209                           
  5210                           ;max31856.c: 310: if(time_count == 1)
  5211  07D0  0020               	movlb	0	; select bank0
  5212  07D1  036C               	decf	_time_count,w
  5213  07D2  1D03               	btfss	3,2
  5214  07D3  2FD6               	goto	l4824
  5215                           
  5216                           ;max31856.c: 311: {
  5217                           ;max31856.c: 312: CH1_state = 0;
  5218  07D4  01E6               	clrf	_CH1_state
  5219                           
  5220                           ;max31856.c: 313: }
  5221  07D5  0008               	return
  5222  07D6                     l4824:	
  5223                           
  5224                           ;max31856.c: 314: else if(time_count == 3)
  5225  07D6  3003               	movlw	3
  5226  07D7  066C               	xorwf	_time_count,w
  5227  07D8  1D03               	btfss	3,2
  5228  07D9  0008               	return
  5229                           
  5230                           ;max31856.c: 315: {
  5231                           ;max31856.c: 316: CH2_state = 0;
  5232  07DA  01E7               	clrf	_CH2_state
  5233                           
  5234                           ;max31856.c: 317: }
  5235                           ;max31856.c: 318: }
  5236  07DB  0008               	return
  5237  07DC                     l4828:	
  5238                           
  5239                           ;max31856.c: 319: else
  5240                           ;max31856.c: 320: {
  5241                           ;max31856.c: 321: if(time_count == 1)
  5242  07DC  0020               	movlb	0	; select bank0
  5243  07DD  036C               	decf	_time_count,w
  5244  07DE  1D03               	btfss	3,2
  5245  07DF  2FE3               	goto	l4832
  5246                           
  5247                           ;max31856.c: 322: {
  5248                           ;max31856.c: 323: CH1_state = 1;
  5249  07E0  01E6               	clrf	_CH1_state
  5250  07E1  0AE6               	incf	_CH1_state,f
  5251                           
  5252                           ;max31856.c: 324: }
  5253  07E2  2FE9               	goto	l4836
  5254  07E3                     l4832:	
  5255                           
  5256                           ;max31856.c: 325: else if(time_count == 3)
  5257  07E3  3003               	movlw	3
  5258  07E4  066C               	xorwf	_time_count,w
  5259  07E5  1D03               	btfss	3,2
  5260  07E6  2FE9               	goto	l4836
  5261                           
  5262                           ;max31856.c: 326: {
  5263                           ;max31856.c: 327: CH2_state = 1;
  5264  07E7  01E7               	clrf	_CH2_state
  5265  07E8  0AE7               	incf	_CH2_state,f
  5266  07E9                     l4836:	
  5267                           
  5268                           ;max31856.c: 328: }
  5269                           ;max31856.c: 329: err_Display();
  5270  07E9  318B  23F8  3187   	fcall	_err_Display
  5271                           
  5272                           ;max31856.c: 330: maxim_31856_write_register(0x82, 0xFF);
  5273  07EC  30FF               	movlw	255
  5274  07ED  0020               	movlb	0	; select bank0
  5275  07EE  00D0               	movwf	??_temperature_display
  5276  07EF  0850               	movf	??_temperature_display,w
  5277  07F0  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5278  07F1  3082               	movlw	130
  5279  07F2  3189  210B  3187   	fcall	_maxim_31856_write_register
  5280                           
  5281                           ;max31856.c: 331: maxim_clear_fault_status();
  5282  07F5  3189  2118  3187   	fcall	_maxim_clear_fault_status
  5283                           
  5284                           ;max31856.c: 332: maxim_31856_write_register(0x82, 0x00);
  5285  07F8  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5286  07F9  3082               	movlw	130
  5287  07FA  3189  210B         	fcall	_maxim_31856_write_register
  5288  07FC  0008               	return
  5289  07FD                     __end_of_temperature_display:	
  5290                           
  5291                           	psect	text18
  5292  003F                     __ptext18:	
  5293 ;; *************** function _tc_temperature_trans *****************
  5294 ;; Defined at:
  5295 ;;		line 169 in file "mcc_generated_files/max31856.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  temperature_    2   46[BANK0 ] unsigned int 
  5300 ;;  var_time        2   44[BANK0 ] unsigned int 
  5301 ;;  temperature_    2   42[BANK0 ] unsigned int 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;Total ram usage:       10 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    7
  5318 ;; This function calls:
  5319 ;;		_Calculate_Time
  5320 ;;		_Save_Write_word
  5321 ;; This function is called by:
  5322 ;;		_temperature_display
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _tc_temperature_trans
  5328  003F                     _tc_temperature_trans:	
  5329                           
  5330                           ;max31856.c: 171: unsigned int temperature_absolute = 0;
  5331                           
  5332                           ;incstack = 0
  5333                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5334  003F  0020               	movlb	0	; select bank0
  5335  0040  01CA               	clrf	tc_temperature_trans@temperature_absolute
  5336  0041  01CB               	clrf	tc_temperature_trans@temperature_absolute+1
  5337                           
  5338                           ;max31856.c: 172: unsigned int temperature_temp = 0;
  5339  0042  01CE               	clrf	tc_temperature_trans@temperature_temp
  5340  0043  01CF               	clrf	tc_temperature_trans@temperature_temp+1
  5341                           
  5342                           ;max31856.c: 173: unsigned int var_time=0;
  5343  0044  01CC               	clrf	tc_temperature_trans@var_time
  5344  0045  01CD               	clrf	tc_temperature_trans@var_time+1
  5345                           
  5346                           ;max31856.c: 174: temperature_value = 0;
  5347  0046  3000               	movlw	0
  5348  0047  00DD               	movwf	_temperature_value+3
  5349  0048  3000               	movlw	0
  5350  0049  00DC               	movwf	_temperature_value+2
  5351  004A  3000               	movlw	0
  5352  004B  00DB               	movwf	_temperature_value+1
  5353  004C  3000               	movlw	0
  5354  004D  00DA               	movwf	_temperature_value
  5355                           
  5356                           ;max31856.c: 175: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5357  004E  303F               	movlw	63
  5358  004F  056D               	andwf	_uch_ltcbh,w
  5359  0050  00C6               	movwf	??_tc_temperature_trans
  5360  0051  0846               	movf	??_tc_temperature_trans,w
  5361  0052  00C8               	movwf	??_tc_temperature_trans+2
  5362  0053  0021               	movlb	1	; select bank1
  5363  0054  0836               	movf	_uch_ltcbm^(0+128),w
  5364  0055  0020               	movlb	0	; select bank0
  5365  0056  00C7               	movwf	??_tc_temperature_trans+1
  5366  0057  0D48               	rlf	??_tc_temperature_trans+2,w
  5367  0058  0CC8               	rrf	??_tc_temperature_trans+2,f
  5368  0059  0CC7               	rrf	??_tc_temperature_trans+1,f
  5369  005A  0847               	movf	??_tc_temperature_trans+1,w
  5370  005B  00DA               	movwf	_temperature_value
  5371  005C  0848               	movf	??_tc_temperature_trans+2,w
  5372  005D  00DB               	movwf	_temperature_value+1
  5373  005E  0D89               	rlf	9,f
  5374  005F  3B89               	subwfb	9,f
  5375  0060  0989               	comf	9,f
  5376  0061  00DC               	movwf	_temperature_value+2
  5377  0062  00DD               	movwf	_temperature_value+3
  5378                           
  5379                           ;max31856.c: 176: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5380  0063  1BED               	btfsc	_uch_ltcbh,7
  5381  0064  16DB               	bsf	_temperature_value+1,5
  5382                           
  5383                           ;max31856.c: 177: temperature_temp = temperature_value;
  5384  0065  085B               	movf	_temperature_value+1,w
  5385  0066  00CF               	movwf	tc_temperature_trans@temperature_temp+1
  5386  0067  085A               	movf	_temperature_value,w
  5387  0068  00CE               	movwf	tc_temperature_trans@temperature_temp
  5388                           
  5389                           ;max31856.c: 180: if(time_count == 1 && Record_flag == 1)
  5390  0069  036C               	decf	_time_count,w
  5391  006A  1D03               	btfss	3,2
  5392  006B  28EC               	goto	l4596
  5393  006C  036A               	decf	_Record_flag,w
  5394  006D  1D03               	btfss	3,2
  5395  006E  28EC               	goto	l4596
  5396                           
  5397                           ;max31856.c: 181: {
  5398                           ;max31856.c: 182: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5399  006F  3020               	movlw	32
  5400  0070  064F               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5401  0071  044E               	iorwf	tc_temperature_trans@temperature_temp,w
  5402  0072  1903               	btfsc	3,2
  5403  0073  2876               	goto	u4020
  5404  0074  3001               	movlw	1
  5405  0075  2877               	goto	u4030
  5406  0076                     u4020:	
  5407  0076  3000               	movlw	0
  5408  0077                     u4030:	
  5409  0077  00C6               	movwf	??_tc_temperature_trans
  5410  0078  01C7               	clrf	??_tc_temperature_trans+1
  5411  0079  085E               	movf	_CH1_temperature,w
  5412  007A  0546               	andwf	??_tc_temperature_trans,w
  5413  007B  00C8               	movwf	??_tc_temperature_trans+2
  5414  007C  085F               	movf	_CH1_temperature+1,w
  5415  007D  0547               	andwf	??_tc_temperature_trans+1,w
  5416  007E  00C9               	movwf	??_tc_temperature_trans+3
  5417  007F  1AC9               	btfsc	??_tc_temperature_trans+3,5
  5418  0080  28C7               	goto	L4
  5419                           
  5420                           ;max31856.c: 194: else
  5421                           ;max31856.c: 195: {
  5422                           ;max31856.c: 196: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5423                           
  5424                           ;max31856.c: 193: }
  5425                           
  5426                           ;max31856.c: 192: Cur_temperature_time_ch1 = 0;
  5427                           
  5428                           ;max31856.c: 191: Save_Write_word(temperature_value);
  5429                           
  5430                           ;max31856.c: 190: Save_Write_word(var_time);
  5431                           
  5432                           ;max31856.c: 188: var_time |= 0x2000;
  5433                           
  5434                           ;max31856.c: 186: if(CH1_state == 1) var_time |= 0x400;
  5435                           
  5436                           ;max31856.c: 185: var_time |= 0x100;
  5437                           
  5438                           ;max31856.c: 183: {
  5439                           ;max31856.c: 184: var_time = Calculate_Time();
  5440  0081  1EDF               	btfss	_CH1_temperature+1,5
  5441  0082  2890               	goto	l4570
  5442  0083  095E               	comf	_CH1_temperature,w
  5443  0084  00C6               	movwf	??_tc_temperature_trans
  5444  0085  095F               	comf	_CH1_temperature+1,w
  5445  0086  00C7               	movwf	??_tc_temperature_trans+1
  5446  0087  0AC6               	incf	??_tc_temperature_trans,f
  5447  0088  1903               	skipnz
  5448  0089  0AC7               	incf	??_tc_temperature_trans+1,f
  5449  008A  0846               	movf	??_tc_temperature_trans,w
  5450  008B  3E00               	addlw	0
  5451  008C  00DE               	movwf	_CH1_temperature
  5452  008D  3040               	movlw	64
  5453  008E  3D47               	addwfc	??_tc_temperature_trans+1,w
  5454  008F  00DF               	movwf	_CH1_temperature+1
  5455  0090                     l4570:	
  5456                           
  5457                           ;max31856.c: 197: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5458  0090  1ECF               	btfss	tc_temperature_trans@temperature_temp+1,5
  5459  0091  289F               	goto	l4574
  5460  0092  094E               	comf	tc_temperature_trans@temperature_temp,w
  5461  0093  00C6               	movwf	??_tc_temperature_trans
  5462  0094  094F               	comf	tc_temperature_trans@temperature_temp+1,w
  5463  0095  00C7               	movwf	??_tc_temperature_trans+1
  5464  0096  0AC6               	incf	??_tc_temperature_trans,f
  5465  0097  1903               	skipnz
  5466  0098  0AC7               	incf	??_tc_temperature_trans+1,f
  5467  0099  0846               	movf	??_tc_temperature_trans,w
  5468  009A  3E00               	addlw	0
  5469  009B  00CE               	movwf	tc_temperature_trans@temperature_temp
  5470  009C  3040               	movlw	64
  5471  009D  3D47               	addwfc	??_tc_temperature_trans+1,w
  5472  009E  00CF               	movwf	tc_temperature_trans@temperature_temp+1
  5473  009F                     l4574:	
  5474                           
  5475                           ;max31856.c: 198: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5476  009F  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5477  00A0  025F               	subwf	_CH1_temperature+1,w
  5478  00A1  1D03               	skipz
  5479  00A2  28A5               	goto	u4085
  5480  00A3  084E               	movf	tc_temperature_trans@temperature_temp,w
  5481  00A4  025E               	subwf	_CH1_temperature,w
  5482  00A5                     u4085:	
  5483  00A5  1803               	skipnc
  5484  00A6  28B3               	goto	l4578
  5485  00A7  095E               	comf	_CH1_temperature,w
  5486  00A8  00C6               	movwf	??_tc_temperature_trans
  5487  00A9  095F               	comf	_CH1_temperature+1,w
  5488  00AA  00C7               	movwf	??_tc_temperature_trans+1
  5489  00AB  0AC6               	incf	??_tc_temperature_trans,f
  5490  00AC  1903               	skipnz
  5491  00AD  0AC7               	incf	??_tc_temperature_trans+1,f
  5492  00AE  084E               	movf	tc_temperature_trans@temperature_temp,w
  5493  00AF  0746               	addwf	??_tc_temperature_trans,w
  5494  00B0  00CA               	movwf	tc_temperature_trans@temperature_absolute
  5495  00B1  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5496  00B2  28BE               	goto	L2
  5497  00B3                     l4578:	
  5498                           
  5499                           ;max31856.c: 199: else temperature_absolute = CH1_temperature - temperature_temp;
  5500  00B3  094E               	comf	tc_temperature_trans@temperature_temp,w
  5501  00B4  00C6               	movwf	??_tc_temperature_trans
  5502  00B5  094F               	comf	tc_temperature_trans@temperature_temp+1,w
  5503  00B6  00C7               	movwf	??_tc_temperature_trans+1
  5504  00B7  0AC6               	incf	??_tc_temperature_trans,f
  5505  00B8  1903               	skipnz
  5506  00B9  0AC7               	incf	??_tc_temperature_trans+1,f
  5507  00BA  085E               	movf	_CH1_temperature,w
  5508  00BB  0746               	addwf	??_tc_temperature_trans,w
  5509  00BC  00CA               	movwf	tc_temperature_trans@temperature_absolute
  5510  00BD  085F               	movf	_CH1_temperature+1,w
  5511  00BE                     L2:	
  5512  00BE  3D47               	addwfc	??_tc_temperature_trans+1,w
  5513  00BF  00CB               	movwf	tc_temperature_trans@temperature_absolute+1
  5514                           
  5515                           ;max31856.c: 200: if( temperature_absolute > 4)
  5516  00C0  3000               	movlw	0
  5517  00C1  024B               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5518  00C2  3005               	movlw	5
  5519  00C3  1903               	skipnz
  5520  00C4  024A               	subwf	tc_temperature_trans@temperature_absolute,w
  5521  00C5  1C03               	skipc
  5522  00C6  28E7               	goto	l4594
  5523  00C7                     L4:	
  5524                           
  5525                           ;max31856.c: 201: {
  5526                           ;max31856.c: 202: var_time = Calculate_Time();
  5527  00C7  3181  21DD  3180   	fcall	_Calculate_Time
  5528  00CA  0020               	movlb	0	; select bank0
  5529  00CB  00C6               	movwf	??_tc_temperature_trans
  5530  00CC  01C7               	clrf	??_tc_temperature_trans+1
  5531  00CD  0846               	movf	??_tc_temperature_trans,w
  5532  00CE  00CC               	movwf	tc_temperature_trans@var_time
  5533  00CF  0847               	movf	??_tc_temperature_trans+1,w
  5534  00D0  00CD               	movwf	tc_temperature_trans@var_time+1
  5535                           
  5536                           ;max31856.c: 203: var_time |= 0x100;
  5537  00D1  144D               	bsf	tc_temperature_trans@var_time+1,0
  5538                           
  5539                           ;max31856.c: 204: if(CH1_state == 1) var_time |= 0x400;
  5540  00D2  0366               	decf	_CH1_state,w
  5541  00D3  1903               	btfsc	3,2
  5542  00D4  154D               	bsf	tc_temperature_trans@var_time+1,2
  5543                           
  5544                           ;max31856.c: 206: var_time |= 0x2000;
  5545  00D5  16CD               	bsf	tc_temperature_trans@var_time+1,5
  5546                           
  5547                           ;max31856.c: 208: Save_Write_word(var_time);
  5548  00D6  084D               	movf	tc_temperature_trans@var_time+1,w
  5549  00D7  00B4               	movwf	Save_Write_word@data+1
  5550  00D8  084C               	movf	tc_temperature_trans@var_time,w
  5551  00D9  00B3               	movwf	Save_Write_word@data
  5552  00DA  3189  216F  3180   	fcall	_Save_Write_word
  5553                           
  5554                           ;max31856.c: 209: Save_Write_word(temperature_value);
  5555  00DD  0020               	movlb	0	; select bank0
  5556  00DE  085B               	movf	_temperature_value+1,w
  5557  00DF  00B4               	movwf	Save_Write_word@data+1
  5558  00E0  085A               	movf	_temperature_value,w
  5559  00E1  00B3               	movwf	Save_Write_word@data
  5560  00E2  3189  216F  3180   	fcall	_Save_Write_word
  5561                           
  5562                           ;max31856.c: 210: Cur_temperature_time_ch1 = 0;
  5563  00E5  0020               	movlb	0	; select bank0
  5564  00E6  01E8               	clrf	_Cur_temperature_time_ch1
  5565  00E7                     l4594:	
  5566                           
  5567                           ;max31856.c: 211: }
  5568                           ;max31856.c: 212: }
  5569                           ;max31856.c: 213: CH1_temperature = temperature_value;
  5570  00E7  085B               	movf	_temperature_value+1,w
  5571  00E8  00DF               	movwf	_CH1_temperature+1
  5572  00E9  085A               	movf	_temperature_value,w
  5573  00EA  00DE               	movwf	_CH1_temperature
  5574                           
  5575                           ;max31856.c: 214: }
  5576  00EB  296F               	goto	l4642
  5577  00EC                     l4596:	
  5578                           
  5579                           ;max31856.c: 215: else if( time_count == 3 && Record_flag == 1)
  5580  00EC  3003               	movlw	3
  5581  00ED  066C               	xorwf	_time_count,w
  5582  00EE  1D03               	btfss	3,2
  5583  00EF  296F               	goto	l4642
  5584  00F0  036A               	decf	_Record_flag,w
  5585  00F1  1D03               	btfss	3,2
  5586  00F2  296F               	goto	l4642
  5587                           
  5588                           ;max31856.c: 216: {
  5589                           ;max31856.c: 217: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5590  00F3  3020               	movlw	32
  5591  00F4  064F               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5592  00F5  044E               	iorwf	tc_temperature_trans@temperature_temp,w
  5593  00F6  1903               	btfsc	3,2
  5594  00F7  28FA               	goto	u4130
  5595  00F8  3001               	movlw	1
  5596  00F9  28FB               	goto	u4140
  5597  00FA                     u4130:	
  5598  00FA  3000               	movlw	0
  5599  00FB                     u4140:	
  5600  00FB  00C6               	movwf	??_tc_temperature_trans
  5601  00FC  01C7               	clrf	??_tc_temperature_trans+1
  5602  00FD  0860               	movf	_CH2_temperature,w
  5603  00FE  0546               	andwf	??_tc_temperature_trans,w
  5604  00FF  00C8               	movwf	??_tc_temperature_trans+2
  5605  0100  0861               	movf	_CH2_temperature+1,w
  5606  0101  0547               	andwf	??_tc_temperature_trans+1,w
  5607  0102  00C9               	movwf	??_tc_temperature_trans+3
  5608  0103  1AC9               	btfsc	??_tc_temperature_trans+3,5
  5609  0104  294B               	goto	L5
  5610                           
  5611                           ;max31856.c: 229: else
  5612                           ;max31856.c: 230: {
  5613                           ;max31856.c: 231: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5614                           
  5615                           ;max31856.c: 228: }
  5616                           
  5617                           ;max31856.c: 227: Cur_temperature_time_ch2 = 0;
  5618                           
  5619                           ;max31856.c: 226: Save_Write_word(temperature_value);
  5620                           
  5621                           ;max31856.c: 225: Save_Write_word(var_time);
  5622                           
  5623                           ;max31856.c: 223: var_time |= 0x2000;
  5624                           
  5625                           ;max31856.c: 221: if(CH2_state == 1) var_time |= 0x800;
  5626                           
  5627                           ;max31856.c: 220: var_time |= 0x200;
  5628                           
  5629                           ;max31856.c: 218: {
  5630                           ;max31856.c: 219: var_time = Calculate_Time();
  5631  0105  1EE1               	btfss	_CH2_temperature+1,5
  5632  0106  2914               	goto	l4616
  5633  0107  0960               	comf	_CH2_temperature,w
  5634  0108  00C6               	movwf	??_tc_temperature_trans
  5635  0109  0961               	comf	_CH2_temperature+1,w
  5636  010A  00C7               	movwf	??_tc_temperature_trans+1
  5637  010B  0AC6               	incf	??_tc_temperature_trans,f
  5638  010C  1903               	skipnz
  5639  010D  0AC7               	incf	??_tc_temperature_trans+1,f
  5640  010E  0846               	movf	??_tc_temperature_trans,w
  5641  010F  3E00               	addlw	0
  5642  0110  00E0               	movwf	_CH2_temperature
  5643  0111  3040               	movlw	64
  5644  0112  3D47               	addwfc	??_tc_temperature_trans+1,w
  5645  0113  00E1               	movwf	_CH2_temperature+1
  5646  0114                     l4616:	
  5647                           
  5648                           ;max31856.c: 232: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5649  0114  1ECF               	btfss	tc_temperature_trans@temperature_temp+1,5
  5650  0115  2923               	goto	l4620
  5651  0116  094E               	comf	tc_temperature_trans@temperature_temp,w
  5652  0117  00C6               	movwf	??_tc_temperature_trans
  5653  0118  094F               	comf	tc_temperature_trans@temperature_temp+1,w
  5654  0119  00C7               	movwf	??_tc_temperature_trans+1
  5655  011A  0AC6               	incf	??_tc_temperature_trans,f
  5656  011B  1903               	skipnz
  5657  011C  0AC7               	incf	??_tc_temperature_trans+1,f
  5658  011D  0846               	movf	??_tc_temperature_trans,w
  5659  011E  3E00               	addlw	0
  5660  011F  00CE               	movwf	tc_temperature_trans@temperature_temp
  5661  0120  3040               	movlw	64
  5662  0121  3D47               	addwfc	??_tc_temperature_trans+1,w
  5663  0122  00CF               	movwf	tc_temperature_trans@temperature_temp+1
  5664  0123                     l4620:	
  5665                           
  5666                           ;max31856.c: 233: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  5667  0123  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5668  0124  0261               	subwf	_CH2_temperature+1,w
  5669  0125  1D03               	skipz
  5670  0126  2929               	goto	u4195
  5671  0127  084E               	movf	tc_temperature_trans@temperature_temp,w
  5672  0128  0260               	subwf	_CH2_temperature,w
  5673  0129                     u4195:	
  5674  0129  1803               	skipnc
  5675  012A  2937               	goto	l4624
  5676  012B  0960               	comf	_CH2_temperature,w
  5677  012C  00C6               	movwf	??_tc_temperature_trans
  5678  012D  0961               	comf	_CH2_temperature+1,w
  5679  012E  00C7               	movwf	??_tc_temperature_trans+1
  5680  012F  0AC6               	incf	??_tc_temperature_trans,f
  5681  0130  1903               	skipnz
  5682  0131  0AC7               	incf	??_tc_temperature_trans+1,f
  5683  0132  084E               	movf	tc_temperature_trans@temperature_temp,w
  5684  0133  0746               	addwf	??_tc_temperature_trans,w
  5685  0134  00CA               	movwf	tc_temperature_trans@temperature_absolute
  5686  0135  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5687  0136  2942               	goto	L3
  5688  0137                     l4624:	
  5689                           
  5690                           ;max31856.c: 234: else temperature_absolute = CH2_temperature - temperature_temp;
  5691  0137  094E               	comf	tc_temperature_trans@temperature_temp,w
  5692  0138  00C6               	movwf	??_tc_temperature_trans
  5693  0139  094F               	comf	tc_temperature_trans@temperature_temp+1,w
  5694  013A  00C7               	movwf	??_tc_temperature_trans+1
  5695  013B  0AC6               	incf	??_tc_temperature_trans,f
  5696  013C  1903               	skipnz
  5697  013D  0AC7               	incf	??_tc_temperature_trans+1,f
  5698  013E  0860               	movf	_CH2_temperature,w
  5699  013F  0746               	addwf	??_tc_temperature_trans,w
  5700  0140  00CA               	movwf	tc_temperature_trans@temperature_absolute
  5701  0141  0861               	movf	_CH2_temperature+1,w
  5702  0142                     L3:	
  5703  0142  3D47               	addwfc	??_tc_temperature_trans+1,w
  5704  0143  00CB               	movwf	tc_temperature_trans@temperature_absolute+1
  5705                           
  5706                           ;max31856.c: 235: if( temperature_absolute > 4)
  5707  0144  3000               	movlw	0
  5708  0145  024B               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5709  0146  3005               	movlw	5
  5710  0147  1903               	skipnz
  5711  0148  024A               	subwf	tc_temperature_trans@temperature_absolute,w
  5712  0149  1C03               	skipc
  5713  014A  296A               	goto	l4640
  5714  014B                     L5:	
  5715                           
  5716                           ;max31856.c: 236: {
  5717                           ;max31856.c: 237: var_time = Calculate_Time();
  5718  014B  3181  21DD  3180   	fcall	_Calculate_Time
  5719  014E  0020               	movlb	0	; select bank0
  5720  014F  00C6               	movwf	??_tc_temperature_trans
  5721  0150  01C7               	clrf	??_tc_temperature_trans+1
  5722  0151  0846               	movf	??_tc_temperature_trans,w
  5723  0152  00CC               	movwf	tc_temperature_trans@var_time
  5724  0153  0847               	movf	??_tc_temperature_trans+1,w
  5725  0154  00CD               	movwf	tc_temperature_trans@var_time+1
  5726                           
  5727                           ;max31856.c: 238: var_time |= 0x200;
  5728  0155  14CD               	bsf	tc_temperature_trans@var_time+1,1
  5729                           
  5730                           ;max31856.c: 239: if(CH2_state == 1) var_time |= 0x800;
  5731  0156  0367               	decf	_CH2_state,w
  5732  0157  1903               	btfsc	3,2
  5733  0158  15CD               	bsf	tc_temperature_trans@var_time+1,3
  5734                           
  5735                           ;max31856.c: 241: var_time |= 0x2000;
  5736  0159  16CD               	bsf	tc_temperature_trans@var_time+1,5
  5737                           
  5738                           ;max31856.c: 243: Save_Write_word(var_time);
  5739  015A  084D               	movf	tc_temperature_trans@var_time+1,w
  5740  015B  00B4               	movwf	Save_Write_word@data+1
  5741  015C  084C               	movf	tc_temperature_trans@var_time,w
  5742  015D  00B3               	movwf	Save_Write_word@data
  5743  015E  3189  216F  3180   	fcall	_Save_Write_word
  5744                           
  5745                           ;max31856.c: 244: Save_Write_word(temperature_value);
  5746  0161  0020               	movlb	0	; select bank0
  5747  0162  085B               	movf	_temperature_value+1,w
  5748  0163  00B4               	movwf	Save_Write_word@data+1
  5749  0164  085A               	movf	_temperature_value,w
  5750  0165  00B3               	movwf	Save_Write_word@data
  5751  0166  3189  216F  3180   	fcall	_Save_Write_word
  5752                           
  5753                           ;max31856.c: 245: Cur_temperature_time_ch2 = 0;
  5754  0169  01F8               	clrf	_Cur_temperature_time_ch2
  5755  016A                     l4640:	
  5756                           
  5757                           ;max31856.c: 246: }
  5758                           ;max31856.c: 247: }
  5759                           ;max31856.c: 248: CH2_temperature = temperature_value;
  5760  016A  0020               	movlb	0	; select bank0
  5761  016B  085B               	movf	_temperature_value+1,w
  5762  016C  00E1               	movwf	_CH2_temperature+1
  5763  016D  085A               	movf	_temperature_value,w
  5764  016E  00E0               	movwf	_CH2_temperature
  5765  016F                     l4642:	
  5766                           
  5767                           ;max31856.c: 249: }
  5768                           ;max31856.c: 251: temperature_temp = temperature_value;
  5769  016F  085B               	movf	_temperature_value+1,w
  5770  0170  00CF               	movwf	tc_temperature_trans@temperature_temp+1
  5771  0171  085A               	movf	_temperature_value,w
  5772  0172  00CE               	movwf	tc_temperature_trans@temperature_temp
  5773                           
  5774                           ;max31856.c: 252: if((uch_ltcbh&0x80)==0x80)
  5775  0173  1FED               	btfss	_uch_ltcbh,7
  5776  0174  29B0               	goto	l4660
  5777                           
  5778                           ;max31856.c: 253: {
  5779                           ;max31856.c: 254: temperature_sign = 1;
  5780  0175  0021               	movlb	1	; select bank1
  5781  0176  01B0               	clrf	_temperature_sign^(0+128)
  5782  0177  0AB0               	incf	_temperature_sign^(0+128),f
  5783                           
  5784                           ;max31856.c: 255: temperature_temp=0x3FFF-temperature_temp + 1 ;
  5785  0178  0020               	movlb	0	; select bank0
  5786  0179  094E               	comf	tc_temperature_trans@temperature_temp,w
  5787  017A  00C6               	movwf	??_tc_temperature_trans
  5788  017B  094F               	comf	tc_temperature_trans@temperature_temp+1,w
  5789  017C  00C7               	movwf	??_tc_temperature_trans+1
  5790  017D  0AC6               	incf	??_tc_temperature_trans,f
  5791  017E  1903               	skipnz
  5792  017F  0AC7               	incf	??_tc_temperature_trans+1,f
  5793  0180  0846               	movf	??_tc_temperature_trans,w
  5794  0181  3E00               	addlw	0
  5795  0182  00CE               	movwf	tc_temperature_trans@temperature_temp
  5796  0183  3040               	movlw	64
  5797  0184  3D47               	addwfc	??_tc_temperature_trans+1,w
  5798  0185  00CF               	movwf	tc_temperature_trans@temperature_temp+1
  5799                           
  5800                           ;max31856.c: 257: temperature_int = temperature_temp>>3;
  5801  0186  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5802  0187  00C7               	movwf	??_tc_temperature_trans+1
  5803  0188  084E               	movf	tc_temperature_trans@temperature_temp,w
  5804  0189  00C6               	movwf	??_tc_temperature_trans
  5805  018A  36C7               	lsrf	??_tc_temperature_trans+1,f
  5806  018B  0CC6               	rrf	??_tc_temperature_trans,f
  5807  018C  36C7               	lsrf	??_tc_temperature_trans+1,f
  5808  018D  0CC6               	rrf	??_tc_temperature_trans,f
  5809  018E  36C7               	lsrf	??_tc_temperature_trans+1,f
  5810  018F  0CC6               	rrf	??_tc_temperature_trans,f
  5811  0190  0846               	movf	??_tc_temperature_trans,w
  5812  0191  00E4               	movwf	_temperature_int
  5813  0192  0847               	movf	??_tc_temperature_trans+1,w
  5814  0193  00E5               	movwf	_temperature_int+1
  5815                           
  5816                           ;max31856.c: 258: temperature_decimal = temperature_temp & 0x07;
  5817  0194  084E               	movf	tc_temperature_trans@temperature_temp,w
  5818  0195  3907               	andlw	7
  5819  0196  00C6               	movwf	??_tc_temperature_trans
  5820  0197  0846               	movf	??_tc_temperature_trans,w
  5821  0198  00EB               	movwf	_temperature_decimal
  5822                           
  5823                           ;max31856.c: 259: if(temperature_decimal > 3) temperature_decimal++;
  5824  0199  3004               	movlw	4
  5825  019A  026B               	subwf	_temperature_decimal,w
  5826  019B  1C03               	skipc
  5827  019C  29A1               	goto	l529
  5828  019D  3001               	movlw	1
  5829  019E  00C6               	movwf	??_tc_temperature_trans
  5830  019F  0846               	movf	??_tc_temperature_trans,w
  5831  01A0  07EB               	addwf	_temperature_decimal,f
  5832  01A1                     l529:	
  5833                           
  5834                           ;max31856.c: 260: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5835  01A1  3003               	movlw	3
  5836  01A2  066B               	xorwf	_temperature_decimal,w
  5837  01A3  1903               	btfsc	3,2
  5838  01A4  29A9               	goto	l532
  5839  01A5  3008               	movlw	8
  5840  01A6  066B               	xorwf	_temperature_decimal,w
  5841  01A7  1D03               	btfss	3,2
  5842  01A8  0008               	return
  5843  01A9                     l532:	
  5844  01A9  1C64               	btfss	_temperature_int,0
  5845  01AA  0008               	return
  5846  01AB  3001               	movlw	1
  5847  01AC  00C6               	movwf	??_tc_temperature_trans
  5848  01AD  0846               	movf	??_tc_temperature_trans,w
  5849  01AE  07EB               	addwf	_temperature_decimal,f
  5850                           
  5851                           ;max31856.c: 261: }
  5852  01AF  0008               	return
  5853  01B0                     l4660:	
  5854                           
  5855                           ;max31856.c: 262: else
  5856                           ;max31856.c: 263: {
  5857                           ;max31856.c: 264: temperature_sign = 0;
  5858  01B0  0021               	movlb	1	; select bank1
  5859  01B1  01B0               	clrf	_temperature_sign^(0+128)
  5860                           
  5861                           ;max31856.c: 265: temperature_int = temperature_temp>>3;
  5862  01B2  0020               	movlb	0	; select bank0
  5863  01B3  084F               	movf	tc_temperature_trans@temperature_temp+1,w
  5864  01B4  00C7               	movwf	??_tc_temperature_trans+1
  5865  01B5  084E               	movf	tc_temperature_trans@temperature_temp,w
  5866  01B6  00C6               	movwf	??_tc_temperature_trans
  5867  01B7  36C7               	lsrf	??_tc_temperature_trans+1,f
  5868  01B8  0CC6               	rrf	??_tc_temperature_trans,f
  5869  01B9  36C7               	lsrf	??_tc_temperature_trans+1,f
  5870  01BA  0CC6               	rrf	??_tc_temperature_trans,f
  5871  01BB  36C7               	lsrf	??_tc_temperature_trans+1,f
  5872  01BC  0CC6               	rrf	??_tc_temperature_trans,f
  5873  01BD  0846               	movf	??_tc_temperature_trans,w
  5874  01BE  00E4               	movwf	_temperature_int
  5875  01BF  0847               	movf	??_tc_temperature_trans+1,w
  5876  01C0  00E5               	movwf	_temperature_int+1
  5877                           
  5878                           ;max31856.c: 266: temperature_decimal = temperature_temp & 0x07;
  5879  01C1  084E               	movf	tc_temperature_trans@temperature_temp,w
  5880  01C2  3907               	andlw	7
  5881  01C3  00C6               	movwf	??_tc_temperature_trans
  5882  01C4  0846               	movf	??_tc_temperature_trans,w
  5883  01C5  00EB               	movwf	_temperature_decimal
  5884                           
  5885                           ;max31856.c: 267: if(temperature_decimal > 3) temperature_decimal++;
  5886  01C6  3004               	movlw	4
  5887  01C7  026B               	subwf	_temperature_decimal,w
  5888  01C8  1C03               	skipc
  5889  01C9  29CE               	goto	l534
  5890  01CA  3001               	movlw	1
  5891  01CB  00C6               	movwf	??_tc_temperature_trans
  5892  01CC  0846               	movf	??_tc_temperature_trans,w
  5893  01CD  07EB               	addwf	_temperature_decimal,f
  5894  01CE                     l534:	
  5895                           
  5896                           ;max31856.c: 268: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5897  01CE  3004               	movlw	4
  5898  01CF  066B               	xorwf	_temperature_decimal,w
  5899  01D0  1903               	btfsc	3,2
  5900  01D1  29D6               	goto	l537
  5901  01D2  3008               	movlw	8
  5902  01D3  066B               	xorwf	_temperature_decimal,w
  5903  01D4  1D03               	btfss	3,2
  5904  01D5  0008               	return
  5905  01D6                     l537:	
  5906  01D6  1C64               	btfss	_temperature_int,0
  5907  01D7  0008               	return
  5908  01D8  3001               	movlw	1
  5909  01D9  00C6               	movwf	??_tc_temperature_trans
  5910  01DA  0846               	movf	??_tc_temperature_trans,w
  5911  01DB  07EB               	addwf	_temperature_decimal,f
  5912  01DC  0008               	return
  5913  01DD                     __end_of_tc_temperature_trans:	
  5914                           
  5915                           	psect	text19
  5916  01DD                     __ptext19:	
  5917 ;; *************** function _Calculate_Time *****************
  5918 ;; Defined at:
  5919 ;;		line 136 in file "mcc_generated_files/save.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  temp2           4   34[BANK0 ] unsigned long 
  5924 ;;  temp1           4   30[BANK0 ] unsigned long 
  5925 ;;  temp            4   26[BANK0 ] unsigned long 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      unsigned char 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;Total ram usage:       22 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    6
  5942 ;; This function calls:
  5943 ;;		_Bq32k_Rtc_Read_Time
  5944 ;;		___wmul
  5945 ;; This function is called by:
  5946 ;;		_tc_temperature_trans
  5947 ;;		_Save_process
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function _Calculate_Time
  5953  01DD                     _Calculate_Time:	
  5954                           
  5955                           ;save.c: 138: unsigned long temp = 0 ;
  5956                           
  5957                           ;incstack = 0
  5958                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5959  01DD  3000               	movlw	0
  5960  01DE  0020               	movlb	0	; select bank0
  5961  01DF  00BD               	movwf	Calculate_Time@temp+3
  5962  01E0  3000               	movlw	0
  5963  01E1  00BC               	movwf	Calculate_Time@temp+2
  5964  01E2  3000               	movlw	0
  5965  01E3  00BB               	movwf	Calculate_Time@temp+1
  5966  01E4  3000               	movlw	0
  5967  01E5  00BA               	movwf	Calculate_Time@temp
  5968                           
  5969                           ;save.c: 139: unsigned long temp1 = 0 ;
  5970  01E6  3000               	movlw	0
  5971  01E7  00C1               	movwf	Calculate_Time@temp1+3
  5972  01E8  3000               	movlw	0
  5973  01E9  00C0               	movwf	Calculate_Time@temp1+2
  5974  01EA  3000               	movlw	0
  5975  01EB  00BF               	movwf	Calculate_Time@temp1+1
  5976  01EC  3000               	movlw	0
  5977  01ED  00BE               	movwf	Calculate_Time@temp1
  5978                           
  5979                           ;save.c: 140: unsigned long temp2 = 0 ;
  5980  01EE  3000               	movlw	0
  5981  01EF  00C5               	movwf	Calculate_Time@temp2+3
  5982  01F0  3000               	movlw	0
  5983  01F1  00C4               	movwf	Calculate_Time@temp2+2
  5984  01F2  3000               	movlw	0
  5985  01F3  00C3               	movwf	Calculate_Time@temp2+1
  5986  01F4  3000               	movlw	0
  5987  01F5  00C2               	movwf	Calculate_Time@temp2
  5988                           
  5989                           ;save.c: 141: Bq32k_Rtc_Read_Time(&rtc_tm);
  5990  01F6  30CF               	movlw	(low (_rtc_tm| 0))& (0+255)
  5991  01F7  318F  279C  3181   	fcall	_Bq32k_Rtc_Read_Time
  5992                           
  5993                           ;save.c: 142: if( time_count == 1 )
  5994  01FA  0020               	movlb	0	; select bank0
  5995  01FB  036C               	decf	_time_count,w
  5996  01FC  1D03               	btfss	3,2
  5997  01FD  2AB1               	goto	l4442
  5998                           
  5999                           ;save.c: 143: {
  6000                           ;save.c: 144: if(rtc_tm.date != rtc_save_ch1.date)
  6001  01FE  0021               	movlb	1	; select bank1
  6002  01FF  0853               	movf	(_rtc_tm^(0+128)+4),w
  6003  0200  0645               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6004  0201  1D03               	btfss	3,2
  6005  0202  2B68               	goto	l4458
  6006                           
  6007                           ;save.c: 148: else
  6008                           ;save.c: 149: {
  6009                           ;save.c: 150: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6010                           
  6011                           ;save.c: 145: {
  6012                           ;save.c: 147: }
  6013  0203  084F               	movf	_rtc_tm^(0+128),w
  6014  0204  0020               	movlb	0	; select bank0
  6015  0205  00B0               	movwf	??_Calculate_Time
  6016  0206  01B1               	clrf	??_Calculate_Time+1
  6017  0207  0021               	movlb	1	; select bank1
  6018  0208  0851               	movf	(_rtc_tm^(0+128)+2),w
  6019  0209  0020               	movlb	0	; select bank0
  6020  020A  00B2               	movwf	??_Calculate_Time+2
  6021  020B  01B3               	clrf	??_Calculate_Time+3
  6022  020C  0832               	movf	??_Calculate_Time+2,w
  6023  020D  00F3               	movwf	___wmul@multiplier
  6024  020E  0833               	movf	??_Calculate_Time+3,w
  6025  020F  00F4               	movwf	___wmul@multiplier+1
  6026  0210  3010               	movlw	16
  6027  0211  00F5               	movwf	___wmul@multiplicand
  6028  0212  300E               	movlw	14
  6029  0213  00F6               	movwf	___wmul@multiplicand+1
  6030  0214  318A  22B5  3181   	fcall	___wmul
  6031  0217  0873               	movf	?___wmul,w
  6032  0218  0020               	movlb	0	; select bank0
  6033  0219  00B4               	movwf	??_Calculate_Time+4
  6034  021A  0874               	movf	?___wmul+1,w
  6035  021B  00B5               	movwf	??_Calculate_Time+5
  6036  021C  0021               	movlb	1	; select bank1
  6037  021D  0850               	movf	(_rtc_tm^(0+128)+1),w
  6038  021E  0020               	movlb	0	; select bank0
  6039  021F  00B6               	movwf	??_Calculate_Time+6
  6040  0220  01B7               	clrf	??_Calculate_Time+7
  6041  0221  0836               	movf	??_Calculate_Time+6,w
  6042  0222  00F3               	movwf	___wmul@multiplier
  6043  0223  0837               	movf	??_Calculate_Time+7,w
  6044  0224  00F4               	movwf	___wmul@multiplier+1
  6045  0225  303C               	movlw	60
  6046  0226  00F5               	movwf	___wmul@multiplicand
  6047  0227  3000               	movlw	0
  6048  0228  00F6               	movwf	___wmul@multiplicand+1
  6049  0229  318A  22B5  3181   	fcall	___wmul
  6050  022C  0873               	movf	?___wmul,w
  6051  022D  0020               	movlb	0	; select bank0
  6052  022E  0734               	addwf	??_Calculate_Time+4,w
  6053  022F  00B8               	movwf	??_Calculate_Time+8
  6054  0230  0874               	movf	?___wmul+1,w
  6055  0231  3D35               	addwfc	??_Calculate_Time+5,w
  6056  0232  00B9               	movwf	??_Calculate_Time+9
  6057  0233  0830               	movf	??_Calculate_Time,w
  6058  0234  0738               	addwf	??_Calculate_Time+8,w
  6059  0235  00BE               	movwf	Calculate_Time@temp1
  6060  0236  0831               	movf	??_Calculate_Time+1,w
  6061  0237  3D39               	addwfc	??_Calculate_Time+9,w
  6062  0238  00BF               	movwf	Calculate_Time@temp1+1
  6063  0239  01C0               	clrf	Calculate_Time@temp1+2
  6064  023A  1BBF               	btfsc	Calculate_Time@temp1+1,7
  6065  023B  03C0               	decf	Calculate_Time@temp1+2,f
  6066  023C  0840               	movf	Calculate_Time@temp1+2,w
  6067  023D  00C1               	movwf	Calculate_Time@temp1+3
  6068                           
  6069                           ;save.c: 151: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6070  023E  0021               	movlb	1	; select bank1
  6071  023F  0841               	movf	_rtc_save_ch1^(0+128),w
  6072  0240  0020               	movlb	0	; select bank0
  6073  0241  00B0               	movwf	??_Calculate_Time
  6074  0242  01B1               	clrf	??_Calculate_Time+1
  6075  0243  0021               	movlb	1	; select bank1
  6076  0244  0843               	movf	(_rtc_save_ch1^(0+128)+2),w
  6077  0245  0020               	movlb	0	; select bank0
  6078  0246  00B2               	movwf	??_Calculate_Time+2
  6079  0247  01B3               	clrf	??_Calculate_Time+3
  6080  0248  0832               	movf	??_Calculate_Time+2,w
  6081  0249  00F3               	movwf	___wmul@multiplier
  6082  024A  0833               	movf	??_Calculate_Time+3,w
  6083  024B  00F4               	movwf	___wmul@multiplier+1
  6084  024C  3010               	movlw	16
  6085  024D  00F5               	movwf	___wmul@multiplicand
  6086  024E  300E               	movlw	14
  6087  024F  00F6               	movwf	___wmul@multiplicand+1
  6088  0250  318A  22B5  3181   	fcall	___wmul
  6089  0253  0873               	movf	?___wmul,w
  6090  0254  0020               	movlb	0	; select bank0
  6091  0255  00B4               	movwf	??_Calculate_Time+4
  6092  0256  0874               	movf	?___wmul+1,w
  6093  0257  00B5               	movwf	??_Calculate_Time+5
  6094  0258  0021               	movlb	1	; select bank1
  6095  0259  0842               	movf	(_rtc_save_ch1^(0+128)+1),w
  6096  025A  0020               	movlb	0	; select bank0
  6097  025B  00B6               	movwf	??_Calculate_Time+6
  6098  025C  01B7               	clrf	??_Calculate_Time+7
  6099  025D  0836               	movf	??_Calculate_Time+6,w
  6100  025E  00F3               	movwf	___wmul@multiplier
  6101  025F  0837               	movf	??_Calculate_Time+7,w
  6102  0260  00F4               	movwf	___wmul@multiplier+1
  6103  0261  303C               	movlw	60
  6104  0262  00F5               	movwf	___wmul@multiplicand
  6105  0263  3000               	movlw	0
  6106  0264  00F6               	movwf	___wmul@multiplicand+1
  6107  0265  318A  22B5  3181   	fcall	___wmul
  6108  0268  0873               	movf	?___wmul,w
  6109  0269  0020               	movlb	0	; select bank0
  6110  026A  0734               	addwf	??_Calculate_Time+4,w
  6111  026B  00B8               	movwf	??_Calculate_Time+8
  6112  026C  0874               	movf	?___wmul+1,w
  6113  026D  3D35               	addwfc	??_Calculate_Time+5,w
  6114  026E  00B9               	movwf	??_Calculate_Time+9
  6115  026F  0830               	movf	??_Calculate_Time,w
  6116  0270  0738               	addwf	??_Calculate_Time+8,w
  6117  0271  00C2               	movwf	Calculate_Time@temp2
  6118  0272  0831               	movf	??_Calculate_Time+1,w
  6119  0273  3D39               	addwfc	??_Calculate_Time+9,w
  6120  0274  00C3               	movwf	Calculate_Time@temp2+1
  6121  0275  01C4               	clrf	Calculate_Time@temp2+2
  6122  0276  1BC3               	btfsc	Calculate_Time@temp2+1,7
  6123  0277  03C4               	decf	Calculate_Time@temp2+2,f
  6124  0278  0844               	movf	Calculate_Time@temp2+2,w
  6125  0279  00C5               	movwf	Calculate_Time@temp2+3
  6126                           
  6127                           ;save.c: 152: temp = temp1 - temp2;
  6128  027A  083E               	movf	Calculate_Time@temp1,w
  6129  027B  00B0               	movwf	??_Calculate_Time
  6130  027C  083F               	movf	Calculate_Time@temp1+1,w
  6131  027D  00B1               	movwf	??_Calculate_Time+1
  6132  027E  0840               	movf	Calculate_Time@temp1+2,w
  6133  027F  00B2               	movwf	??_Calculate_Time+2
  6134  0280  0841               	movf	Calculate_Time@temp1+3,w
  6135  0281  00B3               	movwf	??_Calculate_Time+3
  6136  0282  0942               	comf	Calculate_Time@temp2,w
  6137  0283  00B4               	movwf	??_Calculate_Time+4
  6138  0284  0943               	comf	Calculate_Time@temp2+1,w
  6139  0285  00B5               	movwf	??_Calculate_Time+5
  6140  0286  0944               	comf	Calculate_Time@temp2+2,w
  6141  0287  00B6               	movwf	??_Calculate_Time+6
  6142  0288  0945               	comf	Calculate_Time@temp2+3,w
  6143  0289  00B7               	movwf	??_Calculate_Time+7
  6144  028A  0AB4               	incf	??_Calculate_Time+4,f
  6145  028B  1903               	skipnz
  6146  028C  0AB5               	incf	??_Calculate_Time+5,f
  6147  028D  1903               	skipnz
  6148  028E  0AB6               	incf	??_Calculate_Time+6,f
  6149  028F  1903               	skipnz
  6150  0290  0AB7               	incf	??_Calculate_Time+7,f
  6151  0291  0834               	movf	??_Calculate_Time+4,w
  6152  0292  07B0               	addwf	??_Calculate_Time,f
  6153  0293  0835               	movf	??_Calculate_Time+5,w
  6154  0294  3DB1               	addwfc	??_Calculate_Time+1,f
  6155  0295  0836               	movf	??_Calculate_Time+6,w
  6156  0296  3DB2               	addwfc	??_Calculate_Time+2,f
  6157  0297  0837               	movf	??_Calculate_Time+7,w
  6158  0298  3DB3               	addwfc	??_Calculate_Time+3,f
  6159  0299  0833               	movf	??_Calculate_Time+3,w
  6160  029A  00BD               	movwf	Calculate_Time@temp+3
  6161  029B  0832               	movf	??_Calculate_Time+2,w
  6162  029C  00BC               	movwf	Calculate_Time@temp+2
  6163  029D  0831               	movf	??_Calculate_Time+1,w
  6164  029E  00BB               	movwf	Calculate_Time@temp+1
  6165  029F  0830               	movf	??_Calculate_Time,w
  6166  02A0  00BA               	movwf	Calculate_Time@temp
  6167                           
  6168                           ;save.c: 153: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6169  02A1  30C1               	movlw	low (_rtc_save_ch1| 0)
  6170  02A2  0086               	movwf	6
  6171  02A3  0187               	clrf	7
  6172  02A4  30CF               	movlw	low (_rtc_tm| 0)
  6173  02A5  0084               	movwf	4
  6174  02A6  0185               	clrf	5
  6175  02A7  3007               	movlw	7
  6176  02A8  0020               	movlb	0	; select bank0
  6177  02A9  00B0               	movwf	??_Calculate_Time
  6178  02AA                     u381m0:	
  6179  02AA  0012               	moviw fsr0++
  6180  02AB  001E               	movwi fsr1++
  6181  02AC  0BB0               	decfsz	??_Calculate_Time,f
  6182  02AD  2AAA               	goto	u381m0
  6183                           
  6184                           ;save.c: 154: return temp;
  6185  02AE  0020               	movlb	0	; select bank0
  6186  02AF  083A               	movf	Calculate_Time@temp,w
  6187  02B0  0008               	return
  6188  02B1                     l4442:	
  6189                           ;save.c: 155: }
  6190                           ;save.c: 156: }
  6191                           
  6192                           
  6193                           ;save.c: 157: else if( time_count == 3 )
  6194  02B1  3003               	movlw	3
  6195  02B2  066C               	xorwf	_time_count,w
  6196  02B3  1D03               	btfss	3,2
  6197  02B4  2B68               	goto	l4458
  6198                           
  6199                           ;save.c: 158: {
  6200                           ;save.c: 159: if(rtc_tm.date != rtc_save_ch2.date)
  6201  02B5  0021               	movlb	1	; select bank1
  6202  02B6  0853               	movf	(_rtc_tm^(0+128)+4),w
  6203  02B7  064C               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6204  02B8  1D03               	btfss	3,2
  6205  02B9  2B68               	goto	l4458
  6206                           
  6207                           ;save.c: 163: else
  6208                           ;save.c: 164: {
  6209                           ;save.c: 165: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6210                           
  6211                           ;save.c: 160: {
  6212                           ;save.c: 162: }
  6213  02BA  084F               	movf	_rtc_tm^(0+128),w
  6214  02BB  0020               	movlb	0	; select bank0
  6215  02BC  00B0               	movwf	??_Calculate_Time
  6216  02BD  01B1               	clrf	??_Calculate_Time+1
  6217  02BE  0021               	movlb	1	; select bank1
  6218  02BF  0851               	movf	(_rtc_tm^(0+128)+2),w
  6219  02C0  0020               	movlb	0	; select bank0
  6220  02C1  00B2               	movwf	??_Calculate_Time+2
  6221  02C2  01B3               	clrf	??_Calculate_Time+3
  6222  02C3  0832               	movf	??_Calculate_Time+2,w
  6223  02C4  00F3               	movwf	___wmul@multiplier
  6224  02C5  0833               	movf	??_Calculate_Time+3,w
  6225  02C6  00F4               	movwf	___wmul@multiplier+1
  6226  02C7  3010               	movlw	16
  6227  02C8  00F5               	movwf	___wmul@multiplicand
  6228  02C9  300E               	movlw	14
  6229  02CA  00F6               	movwf	___wmul@multiplicand+1
  6230  02CB  318A  22B5  3181   	fcall	___wmul
  6231  02CE  0873               	movf	?___wmul,w
  6232  02CF  0020               	movlb	0	; select bank0
  6233  02D0  00B4               	movwf	??_Calculate_Time+4
  6234  02D1  0874               	movf	?___wmul+1,w
  6235  02D2  00B5               	movwf	??_Calculate_Time+5
  6236  02D3  0021               	movlb	1	; select bank1
  6237  02D4  0850               	movf	(_rtc_tm^(0+128)+1),w
  6238  02D5  0020               	movlb	0	; select bank0
  6239  02D6  00B6               	movwf	??_Calculate_Time+6
  6240  02D7  01B7               	clrf	??_Calculate_Time+7
  6241  02D8  0836               	movf	??_Calculate_Time+6,w
  6242  02D9  00F3               	movwf	___wmul@multiplier
  6243  02DA  0837               	movf	??_Calculate_Time+7,w
  6244  02DB  00F4               	movwf	___wmul@multiplier+1
  6245  02DC  303C               	movlw	60
  6246  02DD  00F5               	movwf	___wmul@multiplicand
  6247  02DE  3000               	movlw	0
  6248  02DF  00F6               	movwf	___wmul@multiplicand+1
  6249  02E0  318A  22B5  3181   	fcall	___wmul
  6250  02E3  0873               	movf	?___wmul,w
  6251  02E4  0020               	movlb	0	; select bank0
  6252  02E5  0734               	addwf	??_Calculate_Time+4,w
  6253  02E6  00B8               	movwf	??_Calculate_Time+8
  6254  02E7  0874               	movf	?___wmul+1,w
  6255  02E8  3D35               	addwfc	??_Calculate_Time+5,w
  6256  02E9  00B9               	movwf	??_Calculate_Time+9
  6257  02EA  0830               	movf	??_Calculate_Time,w
  6258  02EB  0738               	addwf	??_Calculate_Time+8,w
  6259  02EC  00BE               	movwf	Calculate_Time@temp1
  6260  02ED  0831               	movf	??_Calculate_Time+1,w
  6261  02EE  3D39               	addwfc	??_Calculate_Time+9,w
  6262  02EF  00BF               	movwf	Calculate_Time@temp1+1
  6263  02F0  01C0               	clrf	Calculate_Time@temp1+2
  6264  02F1  1BBF               	btfsc	Calculate_Time@temp1+1,7
  6265  02F2  03C0               	decf	Calculate_Time@temp1+2,f
  6266  02F3  0840               	movf	Calculate_Time@temp1+2,w
  6267  02F4  00C1               	movwf	Calculate_Time@temp1+3
  6268                           
  6269                           ;save.c: 166: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6270  02F5  0021               	movlb	1	; select bank1
  6271  02F6  0848               	movf	_rtc_save_ch2^(0+128),w
  6272  02F7  0020               	movlb	0	; select bank0
  6273  02F8  00B0               	movwf	??_Calculate_Time
  6274  02F9  01B1               	clrf	??_Calculate_Time+1
  6275  02FA  0021               	movlb	1	; select bank1
  6276  02FB  084A               	movf	(_rtc_save_ch2^(0+128)+2),w
  6277  02FC  0020               	movlb	0	; select bank0
  6278  02FD  00B2               	movwf	??_Calculate_Time+2
  6279  02FE  01B3               	clrf	??_Calculate_Time+3
  6280  02FF  0832               	movf	??_Calculate_Time+2,w
  6281  0300  00F3               	movwf	___wmul@multiplier
  6282  0301  0833               	movf	??_Calculate_Time+3,w
  6283  0302  00F4               	movwf	___wmul@multiplier+1
  6284  0303  3010               	movlw	16
  6285  0304  00F5               	movwf	___wmul@multiplicand
  6286  0305  300E               	movlw	14
  6287  0306  00F6               	movwf	___wmul@multiplicand+1
  6288  0307  318A  22B5  3181   	fcall	___wmul
  6289  030A  0873               	movf	?___wmul,w
  6290  030B  0020               	movlb	0	; select bank0
  6291  030C  00B4               	movwf	??_Calculate_Time+4
  6292  030D  0874               	movf	?___wmul+1,w
  6293  030E  00B5               	movwf	??_Calculate_Time+5
  6294  030F  0021               	movlb	1	; select bank1
  6295  0310  0849               	movf	(_rtc_save_ch2^(0+128)+1),w
  6296  0311  0020               	movlb	0	; select bank0
  6297  0312  00B6               	movwf	??_Calculate_Time+6
  6298  0313  01B7               	clrf	??_Calculate_Time+7
  6299  0314  0836               	movf	??_Calculate_Time+6,w
  6300  0315  00F3               	movwf	___wmul@multiplier
  6301  0316  0837               	movf	??_Calculate_Time+7,w
  6302  0317  00F4               	movwf	___wmul@multiplier+1
  6303  0318  303C               	movlw	60
  6304  0319  00F5               	movwf	___wmul@multiplicand
  6305  031A  3000               	movlw	0
  6306  031B  00F6               	movwf	___wmul@multiplicand+1
  6307  031C  318A  22B5  3181   	fcall	___wmul
  6308  031F  0873               	movf	?___wmul,w
  6309  0320  0020               	movlb	0	; select bank0
  6310  0321  0734               	addwf	??_Calculate_Time+4,w
  6311  0322  00B8               	movwf	??_Calculate_Time+8
  6312  0323  0874               	movf	?___wmul+1,w
  6313  0324  3D35               	addwfc	??_Calculate_Time+5,w
  6314  0325  00B9               	movwf	??_Calculate_Time+9
  6315  0326  0830               	movf	??_Calculate_Time,w
  6316  0327  0738               	addwf	??_Calculate_Time+8,w
  6317  0328  00C2               	movwf	Calculate_Time@temp2
  6318  0329  0831               	movf	??_Calculate_Time+1,w
  6319  032A  3D39               	addwfc	??_Calculate_Time+9,w
  6320  032B  00C3               	movwf	Calculate_Time@temp2+1
  6321  032C  01C4               	clrf	Calculate_Time@temp2+2
  6322  032D  1BC3               	btfsc	Calculate_Time@temp2+1,7
  6323  032E  03C4               	decf	Calculate_Time@temp2+2,f
  6324  032F  0844               	movf	Calculate_Time@temp2+2,w
  6325  0330  00C5               	movwf	Calculate_Time@temp2+3
  6326                           
  6327                           ;save.c: 167: temp = temp1 - temp2;
  6328  0331  083E               	movf	Calculate_Time@temp1,w
  6329  0332  00B0               	movwf	??_Calculate_Time
  6330  0333  083F               	movf	Calculate_Time@temp1+1,w
  6331  0334  00B1               	movwf	??_Calculate_Time+1
  6332  0335  0840               	movf	Calculate_Time@temp1+2,w
  6333  0336  00B2               	movwf	??_Calculate_Time+2
  6334  0337  0841               	movf	Calculate_Time@temp1+3,w
  6335  0338  00B3               	movwf	??_Calculate_Time+3
  6336  0339  0942               	comf	Calculate_Time@temp2,w
  6337  033A  00B4               	movwf	??_Calculate_Time+4
  6338  033B  0943               	comf	Calculate_Time@temp2+1,w
  6339  033C  00B5               	movwf	??_Calculate_Time+5
  6340  033D  0944               	comf	Calculate_Time@temp2+2,w
  6341  033E  00B6               	movwf	??_Calculate_Time+6
  6342  033F  0945               	comf	Calculate_Time@temp2+3,w
  6343  0340  00B7               	movwf	??_Calculate_Time+7
  6344  0341  0AB4               	incf	??_Calculate_Time+4,f
  6345  0342  1903               	skipnz
  6346  0343  0AB5               	incf	??_Calculate_Time+5,f
  6347  0344  1903               	skipnz
  6348  0345  0AB6               	incf	??_Calculate_Time+6,f
  6349  0346  1903               	skipnz
  6350  0347  0AB7               	incf	??_Calculate_Time+7,f
  6351  0348  0834               	movf	??_Calculate_Time+4,w
  6352  0349  07B0               	addwf	??_Calculate_Time,f
  6353  034A  0835               	movf	??_Calculate_Time+5,w
  6354  034B  3DB1               	addwfc	??_Calculate_Time+1,f
  6355  034C  0836               	movf	??_Calculate_Time+6,w
  6356  034D  3DB2               	addwfc	??_Calculate_Time+2,f
  6357  034E  0837               	movf	??_Calculate_Time+7,w
  6358  034F  3DB3               	addwfc	??_Calculate_Time+3,f
  6359  0350  0833               	movf	??_Calculate_Time+3,w
  6360  0351  00BD               	movwf	Calculate_Time@temp+3
  6361  0352  0832               	movf	??_Calculate_Time+2,w
  6362  0353  00BC               	movwf	Calculate_Time@temp+2
  6363  0354  0831               	movf	??_Calculate_Time+1,w
  6364  0355  00BB               	movwf	Calculate_Time@temp+1
  6365  0356  0830               	movf	??_Calculate_Time,w
  6366  0357  00BA               	movwf	Calculate_Time@temp
  6367                           
  6368                           ;save.c: 168: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6369  0358  30C8               	movlw	low (_rtc_save_ch2| 0)
  6370  0359  0086               	movwf	6
  6371  035A  0187               	clrf	7
  6372  035B  30CF               	movlw	low (_rtc_tm| 0)
  6373  035C  0084               	movwf	4
  6374  035D  0185               	clrf	5
  6375  035E  3007               	movlw	7
  6376  035F  0020               	movlb	0	; select bank0
  6377  0360  00B0               	movwf	??_Calculate_Time
  6378  0361                     u384m0:	
  6379  0361  0012               	moviw fsr0++
  6380  0362  001E               	movwi fsr1++
  6381  0363  0BB0               	decfsz	??_Calculate_Time,f
  6382  0364  2B61               	goto	u384m0
  6383                           
  6384                           ;save.c: 169: return temp;
  6385  0365  0020               	movlb	0	; select bank0
  6386  0366  083A               	movf	Calculate_Time@temp,w
  6387  0367  0008               	return
  6388  0368                     l4458:	
  6389                           
  6390                           ;save.c: 170: }
  6391                           ;save.c: 171: }
  6392                           ;save.c: 172: return 0;
  6393  0368  3000               	movlw	0
  6394  0369  0008               	return
  6395  036A                     __end_of_Calculate_Time:	
  6396                           
  6397                           	psect	text20
  6398  0AB5                     __ptext20:	
  6399 ;; *************** function ___wmul *****************
  6400 ;; Defined at:
  6401 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  multiplier      2    3[COMMON] unsigned int 
  6404 ;;  multiplicand    2    5[COMMON] unsigned int 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  product         2    0[BANK0 ] unsigned int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2    3[COMMON] unsigned int 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;Total ram usage:        6 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    3
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_Calculate_Time
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           
  6431                           ;psect for function ___wmul
  6432  0AB5                     ___wmul:	
  6433                           
  6434                           ;incstack = 0
  6435                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6436  0AB5  0020               	movlb	0	; select bank0
  6437  0AB6  01A0               	clrf	___wmul@product
  6438  0AB7  01A1               	clrf	___wmul@product+1
  6439  0AB8                     l4356:	
  6440  0AB8  1C73               	btfss	___wmul@multiplier,0
  6441  0AB9  2ABF               	goto	l1012
  6442  0ABA  0875               	movf	___wmul@multiplicand,w
  6443  0ABB  0020               	movlb	0	; select bank0
  6444  0ABC  07A0               	addwf	___wmul@product,f
  6445  0ABD  0876               	movf	___wmul@multiplicand+1,w
  6446  0ABE  3DA1               	addwfc	___wmul@product+1,f
  6447  0ABF                     l1012:	
  6448  0ABF  3001               	movlw	1
  6449  0AC0                     u3695:	
  6450  0AC0  35F5               	lslf	___wmul@multiplicand,f
  6451  0AC1  0DF6               	rlf	___wmul@multiplicand+1,f
  6452  0AC2  0B89               	decfsz	9,f
  6453  0AC3  2AC0               	goto	u3695
  6454  0AC4  3001               	movlw	1
  6455  0AC5                     u3705:	
  6456  0AC5  36F4               	lsrf	___wmul@multiplier+1,f
  6457  0AC6  0CF3               	rrf	___wmul@multiplier,f
  6458  0AC7  0B89               	decfsz	9,f
  6459  0AC8  2AC5               	goto	u3705
  6460  0AC9  0873               	movf	___wmul@multiplier,w
  6461  0ACA  0474               	iorwf	___wmul@multiplier+1,w
  6462  0ACB  1D03               	btfss	3,2
  6463  0ACC  2AB8               	goto	l4356
  6464  0ACD  0020               	movlb	0	; select bank0
  6465  0ACE  0821               	movf	___wmul@product+1,w
  6466  0ACF  00F4               	movwf	?___wmul+1
  6467  0AD0  0820               	movf	___wmul@product,w
  6468  0AD1  00F3               	movwf	?___wmul
  6469  0AD2  0008               	return
  6470  0AD3                     __end_of___wmul:	
  6471                           
  6472                           	psect	text21
  6473  0918                     __ptext21:	
  6474 ;; *************** function _maxim_clear_fault_status *****************
  6475 ;; Defined at:
  6476 ;;		line 156 in file "mcc_generated_files/max31856.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;Total ram usage:        1 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    5
  6497 ;; This function calls:
  6498 ;;		_maxim_31856_read_register
  6499 ;;		_maxim_31856_write_register
  6500 ;; This function is called by:
  6501 ;;		_temperature_display
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _maxim_clear_fault_status
  6507  0918                     _maxim_clear_fault_status:	
  6508                           
  6509                           ;max31856.c: 158: uch_cr0= maxim_31856_read_register(0x00);
  6510                           
  6511                           ;incstack = 0
  6512                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  6513  0918  3000               	movlw	0
  6514  0919  3189  2149  3189   	fcall	_maxim_31856_read_register
  6515  091C  00F7               	movwf	??_maxim_clear_fault_status
  6516  091D  0877               	movf	??_maxim_clear_fault_status,w
  6517  091E  00FA               	movwf	_uch_cr0
  6518                           
  6519                           ;max31856.c: 159: uch_cr0|= (uint8_t) 0x02 ;
  6520  091F  14FA               	bsf	_uch_cr0,1
  6521                           
  6522                           ;max31856.c: 160: maxim_31856_write_register(0x80, uch_cr0);
  6523  0920  087A               	movf	_uch_cr0,w
  6524  0921  00F7               	movwf	??_maxim_clear_fault_status
  6525  0922  0877               	movf	??_maxim_clear_fault_status,w
  6526  0923  00F4               	movwf	maxim_31856_write_register@uch_register_value
  6527  0924  3080               	movlw	128
  6528  0925  3189  210B         	fcall	_maxim_31856_write_register
  6529  0927  0008               	return
  6530  0928                     __end_of_maxim_clear_fault_status:	
  6531                           
  6532                           	psect	text22
  6533  0BF8                     __ptext22:	
  6534 ;; *************** function _err_Display *****************
  6535 ;; Defined at:
  6536 ;;		line 152 in file "mcc_generated_files/ht1621.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  num             4    7[BANK0 ] unsigned char [4]
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      void 
  6543 ;; Registers used:
  6544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;Total ram usage:        5 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    5
  6557 ;; This function calls:
  6558 ;;		_WriteAll_1621
  6559 ;; This function is called by:
  6560 ;;		_temperature_display
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           
  6565                           ;psect for function _err_Display
  6566  0BF8                     _err_Display:	
  6567                           
  6568                           ;ht1621.c: 154: unsigned char num[4]={0};
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6572  0BF8  0021               	movlb	1	; select bank1
  6573  0BF9  0827               	movf	(err_Display@F2126+3)^(0+128),w
  6574  0BFA  0020               	movlb	0	; select bank0
  6575  0BFB  00AA               	movwf	err_Display@num+3
  6576  0BFC  0021               	movlb	1	; select bank1
  6577  0BFD  0826               	movf	(err_Display@F2126+2)^(0+128),w
  6578  0BFE  0020               	movlb	0	; select bank0
  6579  0BFF  00A9               	movwf	err_Display@num+2
  6580  0C00  0021               	movlb	1	; select bank1
  6581  0C01  0825               	movf	(err_Display@F2126+1)^(0+128),w
  6582  0C02  0020               	movlb	0	; select bank0
  6583  0C03  00A8               	movwf	err_Display@num+1
  6584  0C04  0021               	movlb	1	; select bank1
  6585  0C05  0824               	movf	err_Display@F2126^(0+128),w
  6586  0C06  0020               	movlb	0	; select bank0
  6587  0C07  00A7               	movwf	err_Display@num
  6588                           
  6589                           ;ht1621.c: 155: num[1] = Dis_TAB[0x10];
  6590  0C08  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  6591  0C09  0084               	movwf	4
  6592  0C0A  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  6593  0C0B  0085               	movwf	5
  6594  0C0C  0800               	movf	0,w	;code access
  6595  0C0D  00A6               	movwf	??_err_Display
  6596  0C0E  0826               	movf	??_err_Display,w
  6597  0C0F  00A8               	movwf	err_Display@num+1
  6598                           
  6599                           ;ht1621.c: 156: num[2] = Dis_TAB[0x0c];
  6600  0C10  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  6601  0C11  0084               	movwf	4
  6602  0C12  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  6603  0C13  0085               	movwf	5
  6604  0C14  0800               	movf	0,w	;code access
  6605  0C15  00A6               	movwf	??_err_Display
  6606  0C16  0826               	movf	??_err_Display,w
  6607  0C17  00A9               	movwf	err_Display@num+2
  6608                           
  6609                           ;ht1621.c: 157: WriteAll_1621(0, num, 4);
  6610  0C18  3027               	movlw	low err_Display@num
  6611  0C19  00A0               	movwf	WriteAll_1621@p
  6612  0C1A  3000               	movlw	high err_Display@num
  6613  0C1B  00A1               	movwf	WriteAll_1621@p+1
  6614  0C1C  3004               	movlw	4
  6615  0C1D  00A6               	movwf	??_err_Display
  6616  0C1E  0826               	movf	??_err_Display,w
  6617  0C1F  00A2               	movwf	WriteAll_1621@cnt
  6618  0C20  3000               	movlw	0
  6619  0C21  318C  24E5         	fcall	_WriteAll_1621
  6620  0C23  0008               	return
  6621  0C24                     __end_of_err_Display:	
  6622                           
  6623                           	psect	text23
  6624  0431                     __ptext23:	
  6625 ;; *************** function _Tc_Display *****************
  6626 ;; Defined at:
  6627 ;;		line 109 in file "mcc_generated_files/ht1621.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  data            2   11[BANK0 ] unsigned int 
  6632 ;;  count           1   10[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;Total ram usage:        4 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    5
  6649 ;; This function calls:
  6650 ;;		_WriteAll_1621
  6651 ;;		___lwdiv
  6652 ;;		___lwmod
  6653 ;;		_memset
  6654 ;; This function is called by:
  6655 ;;		_temperature_display
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function _Tc_Display
  6661  0431                     _Tc_Display:	
  6662                           
  6663                           ;ht1621.c: 111: unsigned char count = 0;
  6664                           
  6665                           ;incstack = 0
  6666                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6667  0431  0020               	movlb	0	; select bank0
  6668  0432  01AA               	clrf	Tc_Display@count
  6669                           
  6670                           ;ht1621.c: 112: unsigned int data = temperature_int;
  6671  0433  0865               	movf	_temperature_int+1,w
  6672  0434  00AC               	movwf	Tc_Display@data+1
  6673  0435  0864               	movf	_temperature_int,w
  6674  0436  00AB               	movwf	Tc_Display@data
  6675                           
  6676                           ;ht1621.c: 113: memset(display_buff,0,4);
  6677  0437  3000               	movlw	0
  6678  0438  00F3               	movwf	memset@c
  6679  0439  00F4               	movwf	memset@c+1
  6680  043A  3004               	movlw	4
  6681  043B  00F5               	movwf	memset@n
  6682  043C  3000               	movlw	0
  6683  043D  00F6               	movwf	memset@n+1
  6684  043E  30D6               	movlw	(low (_display_buff| 0))& (0+255)
  6685  043F  318A  227E  3184   	fcall	_memset
  6686  0442                     l4684:	
  6687                           ;ht1621.c: 114: while(data)
  6688                           
  6689  0442  0020               	movlb	0	; select bank0
  6690  0443  082B               	movf	Tc_Display@data,w
  6691  0444  042C               	iorwf	Tc_Display@data+1,w
  6692  0445  1903               	btfsc	3,2
  6693  0446  2CBC               	goto	l4692
  6694                           
  6695                           ;ht1621.c: 115: {
  6696                           ;ht1621.c: 116: count++;
  6697  0447  3001               	movlw	1
  6698  0448  0020               	movlb	0	; select bank0
  6699  0449  00A9               	movwf	??_Tc_Display
  6700  044A  0829               	movf	??_Tc_Display,w
  6701  044B  07AA               	addwf	Tc_Display@count,f
  6702                           
  6703                           ;ht1621.c: 117: data /=10;
  6704  044C  300A               	movlw	10
  6705  044D  00A1               	movwf	___lwdiv@divisor
  6706  044E  3000               	movlw	0
  6707  044F  00A2               	movwf	___lwdiv@divisor+1
  6708  0450  082C               	movf	Tc_Display@data+1,w
  6709  0451  00A4               	movwf	___lwdiv@dividend+1
  6710  0452  082B               	movf	Tc_Display@data,w
  6711  0453  00A3               	movwf	___lwdiv@dividend
  6712  0454  318D  251A  3184   	fcall	___lwdiv
  6713  0457  0020               	movlb	0	; select bank0
  6714  0458  0822               	movf	?___lwdiv+1,w
  6715  0459  00AC               	movwf	Tc_Display@data+1
  6716  045A  0821               	movf	?___lwdiv,w
  6717  045B  00AB               	movwf	Tc_Display@data
  6718  045C  2C42               	goto	l4684
  6719  045D                     l4686:	
  6720                           ;ht1621.c: 120: {
  6721                           ;ht1621.c: 121: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  6722                           
  6723                           ;ht1621.c: 118: }
  6724                           ;ht1621.c: 119: switch(count)
  6725                           
  6726  045D  3064               	movlw	100
  6727  045E  00A1               	movwf	___lwdiv@divisor
  6728  045F  3000               	movlw	0
  6729  0460  00A2               	movwf	___lwdiv@divisor+1
  6730  0461  0865               	movf	_temperature_int+1,w
  6731  0462  00A4               	movwf	___lwdiv@dividend+1
  6732  0463  0864               	movf	_temperature_int,w
  6733  0464  00A3               	movwf	___lwdiv@dividend
  6734  0465  318D  251A  3184   	fcall	___lwdiv
  6735  0468  0020               	movlb	0	; select bank0
  6736  0469  0822               	movf	?___lwdiv+1,w
  6737  046A  0085               	movwf	5
  6738  046B  0821               	movf	?___lwdiv,w
  6739  046C  0084               	movwf	4
  6740  046D  3000               	movlw	low (_Dis_TAB| (0+32768))
  6741  046E  0784               	addwf	4,f
  6742  046F  3090               	movlw	high (_Dis_TAB| (0+32768))
  6743  0470  3D85               	addwfc	5,f
  6744  0471  0800               	movf	0,w	;code access
  6745  0472  00A9               	movwf	??_Tc_Display
  6746  0473  0829               	movf	??_Tc_Display,w
  6747  0474  0021               	movlb	1	; select bank1
  6748  0475  00D6               	movwf	_display_buff^(0+128)
  6749  0476                     l680:	
  6750                           ;ht1621.c: 122: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  6751                           
  6752  0476  300A               	movlw	10
  6753  0477  0020               	movlb	0	; select bank0
  6754  0478  00A1               	movwf	___lwdiv@divisor
  6755  0479  3000               	movlw	0
  6756  047A  00A2               	movwf	___lwdiv@divisor+1
  6757  047B  0865               	movf	_temperature_int+1,w
  6758  047C  00F6               	movwf	___lwmod@dividend+1
  6759  047D  0864               	movf	_temperature_int,w
  6760  047E  00F5               	movwf	___lwmod@dividend
  6761  047F  3064               	movlw	100
  6762  0480  00F3               	movwf	___lwmod@divisor
  6763  0481  3000               	movlw	0
  6764  0482  00F4               	movwf	___lwmod@divisor+1
  6765  0483  318C  2424  3184   	fcall	___lwmod
  6766  0486  0874               	movf	?___lwmod+1,w
  6767  0487  0020               	movlb	0	; select bank0
  6768  0488  00A4               	movwf	___lwdiv@dividend+1
  6769  0489  0873               	movf	?___lwmod,w
  6770  048A  00A3               	movwf	___lwdiv@dividend
  6771  048B  318D  251A  3184   	fcall	___lwdiv
  6772  048E  0020               	movlb	0	; select bank0
  6773  048F  0822               	movf	?___lwdiv+1,w
  6774  0490  0085               	movwf	5
  6775  0491  0821               	movf	?___lwdiv,w
  6776  0492  0084               	movwf	4
  6777  0493  3000               	movlw	low (_Dis_TAB| (0+32768))
  6778  0494  0784               	addwf	4,f
  6779  0495  3090               	movlw	high (_Dis_TAB| (0+32768))
  6780  0496  3D85               	addwfc	5,f
  6781  0497  0800               	movf	0,w	;code access
  6782  0498  00A9               	movwf	??_Tc_Display
  6783  0499  0829               	movf	??_Tc_Display,w
  6784  049A  0021               	movlb	1	; select bank1
  6785  049B  00D7               	movwf	(_display_buff^(0+128)+1)
  6786  049C                     l681:	
  6787                           ;ht1621.c: 123: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  6788                           
  6789  049C  300A               	movlw	10
  6790  049D  00F3               	movwf	___lwmod@divisor
  6791  049E  3000               	movlw	0
  6792  049F  00F4               	movwf	___lwmod@divisor+1
  6793  04A0  0020               	movlb	0	; select bank0
  6794  04A1  0865               	movf	_temperature_int+1,w
  6795  04A2  00F6               	movwf	___lwmod@dividend+1
  6796  04A3  0864               	movf	_temperature_int,w
  6797  04A4  00F5               	movwf	___lwmod@dividend
  6798  04A5  318C  2424  3184   	fcall	___lwmod
  6799  04A8  0874               	movf	?___lwmod+1,w
  6800  04A9  0085               	movwf	5
  6801  04AA  0873               	movf	?___lwmod,w
  6802  04AB  0084               	movwf	4
  6803  04AC  3000               	movlw	low (_Dis_TAB| (0+32768))
  6804  04AD  0784               	addwf	4,f
  6805  04AE  3090               	movlw	high (_Dis_TAB| (0+32768))
  6806  04AF  3D85               	addwfc	5,f
  6807  04B0  2CB5               	goto	L6
  6808  04B1                     l4688:	
  6809                           ;ht1621.c: 124: case 0:display_buff[2] = Dis_TAB[0];
  6810                           
  6811  04B1  3000               	movlw	low (_Dis_TAB| (0+32768))
  6812  04B2  0084               	movwf	4
  6813  04B3  3090               	movlw	high (_Dis_TAB| (0+32768))
  6814  04B4  0085               	movwf	5
  6815  04B5                     L6:	
  6816  04B5  0800               	movf	0,w	;code access
  6817  04B6  0020               	movlb	0	; select bank0
  6818  04B7  00A9               	movwf	??_Tc_Display
  6819  04B8  0829               	movf	??_Tc_Display,w
  6820  04B9  0021               	movlb	1	; select bank1
  6821  04BA  00D8               	movwf	(_display_buff^(0+128)+2)
  6822                           
  6823                           ;ht1621.c: 126: }
  6824                           
  6825                           ;ht1621.c: 125: default:break;
  6826  04BB  2CCB               	goto	l4694
  6827  04BC                     l4692:	
  6828  04BC  0020               	movlb	0	; select bank0
  6829  04BD  082A               	movf	Tc_Display@count,w
  6830                           
  6831                           ; Switch size 1, requested type "space"
  6832                           ; Number of cases is 4, Range of values is 0 to 3
  6833                           ; switch strategies available:
  6834                           ; Name         Instructions Cycles
  6835                           ; simple_byte           13     7 (average)
  6836                           ; direct_byte           14     6 (fixed)
  6837                           ; jumptable            260     6 (fixed)
  6838                           ;	Chosen strategy is simple_byte
  6839  04BE  3A00               	xorlw	0	; case 0
  6840  04BF  1903               	skipnz
  6841  04C0  2CB1               	goto	l4688
  6842  04C1  3A01               	xorlw	1	; case 1
  6843  04C2  1903               	skipnz
  6844  04C3  2C9C               	goto	l681
  6845  04C4  3A03               	xorlw	3	; case 2
  6846  04C5  1903               	skipnz
  6847  04C6  2C76               	goto	l680
  6848  04C7  3A01               	xorlw	1	; case 3
  6849  04C8  1903               	skipnz
  6850  04C9  2C5D               	goto	l4686
  6851  04CA  2CCB               	goto	l4694
  6852  04CB                     l4694:	
  6853                           
  6854                           ;ht1621.c: 127: if(temperature_sign == 1) display_buff[0]=0x20;
  6855  04CB  0021               	movlb	1	; select bank1
  6856  04CC  0330               	decf	_temperature_sign^(0+128),w
  6857  04CD  1D03               	btfss	3,2
  6858  04CE  2CD5               	goto	l4698
  6859  04CF  3020               	movlw	32
  6860  04D0  0020               	movlb	0	; select bank0
  6861  04D1  00A9               	movwf	??_Tc_Display
  6862  04D2  0829               	movf	??_Tc_Display,w
  6863  04D3  0021               	movlb	1	; select bank1
  6864  04D4  00D6               	movwf	_display_buff^(0+128)
  6865  04D5                     l4698:	
  6866                           
  6867                           ;ht1621.c: 128: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  6868  04D5  0020               	movlb	0	; select bank0
  6869  04D6  086B               	movf	_temperature_decimal,w
  6870  04D7  3E00               	addlw	low (_Dis_TAB| (0+32768))
  6871  04D8  0084               	movwf	4
  6872  04D9  3090               	movlw	high (_Dis_TAB| (0+32768))
  6873  04DA  1803               	skipnc
  6874  04DB  3E01               	addlw	1
  6875  04DC  0085               	movwf	5
  6876  04DD  0800               	movf	0,w	;code access
  6877  04DE  3808               	iorlw	8
  6878  04DF  00A9               	movwf	??_Tc_Display
  6879  04E0  0829               	movf	??_Tc_Display,w
  6880  04E1  0021               	movlb	1	; select bank1
  6881  04E2  00D9               	movwf	(_display_buff^(0+128)+3)
  6882                           
  6883                           ;ht1621.c: 129: WriteAll_1621(0,display_buff,4);
  6884  04E3  30D6               	movlw	low _display_buff
  6885  04E4  0020               	movlb	0	; select bank0
  6886  04E5  00A0               	movwf	WriteAll_1621@p
  6887  04E6  3000               	movlw	high _display_buff
  6888  04E7  00A1               	movwf	WriteAll_1621@p+1
  6889  04E8  3004               	movlw	4
  6890  04E9  00A9               	movwf	??_Tc_Display
  6891  04EA  0829               	movf	??_Tc_Display,w
  6892  04EB  00A2               	movwf	WriteAll_1621@cnt
  6893  04EC  3000               	movlw	0
  6894  04ED  318C  24E5         	fcall	_WriteAll_1621
  6895  04EF  0008               	return
  6896  04F0                     __end_of_Tc_Display:	
  6897                           
  6898                           	psect	text24
  6899  0A7E                     __ptext24:	
  6900 ;; *************** function _memset *****************
  6901 ;; Defined at:
  6902 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  p1              1    wreg     PTR void 
  6905 ;;		 -> display_buff(4), 
  6906 ;;  c               2    3[COMMON] int 
  6907 ;;  n               2    5[COMMON] unsigned int 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  p1              1    0[BANK0 ] PTR void 
  6910 ;;		 -> display_buff(4), 
  6911 ;;  p               1    1[BANK0 ] PTR unsigned char 
  6912 ;;		 -> display_buff(4), 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      PTR void 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:        7 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    3
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_Tc_Display
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function _memset
  6938  0A7E                     _memset:	
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6942                           ;memset@p1 stored from wreg
  6943  0A7E  0020               	movlb	0	; select bank0
  6944  0A7F  00A0               	movwf	memset@p1
  6945  0A80  0820               	movf	memset@p1,w
  6946  0A81  00F7               	movwf	??_memset
  6947  0A82  0877               	movf	??_memset,w
  6948  0A83  00A1               	movwf	memset@p
  6949  0A84                     l4472:	
  6950  0A84  3001               	movlw	1
  6951  0A85  02F5               	subwf	memset@n,f
  6952  0A86  3000               	movlw	0
  6953  0A87  3BF6               	subwfb	memset@n+1,f
  6954  0A88  0A75               	incf	memset@n,w
  6955  0A89  1903               	btfsc	3,2
  6956  0A8A  0A76               	incf	memset@n+1,w
  6957  0A8B  1903               	btfsc	3,2
  6958  0A8C  0008               	return
  6959  0A8D  0873               	movf	memset@c,w
  6960  0A8E  00F7               	movwf	??_memset
  6961  0A8F  0821               	movf	memset@p,w
  6962  0A90  0086               	movwf	6
  6963  0A91  0187               	clrf	7
  6964  0A92  0877               	movf	??_memset,w
  6965  0A93  0081               	movwf	1
  6966  0A94  3001               	movlw	1
  6967  0A95  00F7               	movwf	??_memset
  6968  0A96  0877               	movf	??_memset,w
  6969  0A97  07A1               	addwf	memset@p,f
  6970  0A98  2A84               	goto	l4472
  6971  0A99                     __end_of_memset:	
  6972                           ;	Return value of _memset is never used
  6973                           
  6974                           
  6975                           	psect	text25
  6976  0C24                     __ptext25:	
  6977 ;; *************** function ___lwmod *****************
  6978 ;; Defined at:
  6979 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  divisor         2    3[COMMON] unsigned int 
  6982 ;;  dividend        2    5[COMMON] unsigned int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  counter         1    0[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  2    3[COMMON] unsigned int 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        6 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_Tc_Display
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function ___lwmod
  7010  0C24                     ___lwmod:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7014  0C24  0873               	movf	___lwmod@divisor,w
  7015  0C25  0474               	iorwf	___lwmod@divisor+1,w
  7016  0C26  1903               	btfsc	3,2
  7017  0C27  2C4C               	goto	l4518
  7018  0C28  0020               	movlb	0	; select bank0
  7019  0C29  01A0               	clrf	___lwmod@counter
  7020  0C2A  0AA0               	incf	___lwmod@counter,f
  7021  0C2B                     l4508:	
  7022  0C2B  1BF4               	btfsc	___lwmod@divisor+1,7
  7023  0C2C  2C37               	goto	l4510
  7024  0C2D  3001               	movlw	1
  7025  0C2E                     u3945:	
  7026  0C2E  35F3               	lslf	___lwmod@divisor,f
  7027  0C2F  0DF4               	rlf	___lwmod@divisor+1,f
  7028  0C30  0B89               	decfsz	9,f
  7029  0C31  2C2E               	goto	u3945
  7030  0C32  3001               	movlw	1
  7031  0C33  00F7               	movwf	??___lwmod
  7032  0C34  0877               	movf	??___lwmod,w
  7033  0C35  07A0               	addwf	___lwmod@counter,f
  7034  0C36  2C2B               	goto	l4508
  7035  0C37                     l4510:	
  7036  0C37  0874               	movf	___lwmod@divisor+1,w
  7037  0C38  0276               	subwf	___lwmod@dividend+1,w
  7038  0C39  1D03               	skipz
  7039  0C3A  2C3D               	goto	u3965
  7040  0C3B  0873               	movf	___lwmod@divisor,w
  7041  0C3C  0275               	subwf	___lwmod@dividend,w
  7042  0C3D                     u3965:	
  7043  0C3D  1C03               	skipc
  7044  0C3E  2C43               	goto	l4514
  7045  0C3F  0873               	movf	___lwmod@divisor,w
  7046  0C40  02F5               	subwf	___lwmod@dividend,f
  7047  0C41  0874               	movf	___lwmod@divisor+1,w
  7048  0C42  3BF6               	subwfb	___lwmod@dividend+1,f
  7049  0C43                     l4514:	
  7050  0C43  3001               	movlw	1
  7051  0C44                     u3975:	
  7052  0C44  36F4               	lsrf	___lwmod@divisor+1,f
  7053  0C45  0CF3               	rrf	___lwmod@divisor,f
  7054  0C46  0B89               	decfsz	9,f
  7055  0C47  2C44               	goto	u3975
  7056  0C48  3001               	movlw	1
  7057  0C49  02A0               	subwf	___lwmod@counter,f
  7058  0C4A  1D03               	btfss	3,2
  7059  0C4B  2C37               	goto	l4510
  7060  0C4C                     l4518:	
  7061  0C4C  0876               	movf	___lwmod@dividend+1,w
  7062  0C4D  00F4               	movwf	?___lwmod+1
  7063  0C4E  0875               	movf	___lwmod@dividend,w
  7064  0C4F  00F3               	movwf	?___lwmod
  7065  0C50  0008               	return
  7066  0C51                     __end_of___lwmod:	
  7067                           
  7068                           	psect	text26
  7069  0D1A                     __ptext26:	
  7070 ;; *************** function ___lwdiv *****************
  7071 ;; Defined at:
  7072 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  divisor         2    1[BANK0 ] unsigned int 
  7075 ;;  dividend        2    3[BANK0 ] unsigned int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  quotient        2    7[BANK0 ] unsigned int 
  7078 ;;  counter         1    6[BANK0 ] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    1[BANK0 ] unsigned int 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:        8 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    3
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_Tc_Display
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function ___lwdiv
  7104  0D1A                     ___lwdiv:	
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7108  0D1A  0020               	movlb	0	; select bank0
  7109  0D1B  01A7               	clrf	___lwdiv@quotient
  7110  0D1C  01A8               	clrf	___lwdiv@quotient+1
  7111  0D1D  0821               	movf	___lwdiv@divisor,w
  7112  0D1E  0422               	iorwf	___lwdiv@divisor+1,w
  7113  0D1F  1903               	btfsc	3,2
  7114  0D20  2D4A               	goto	l4496
  7115  0D21  01A6               	clrf	___lwdiv@counter
  7116  0D22  0AA6               	incf	___lwdiv@counter,f
  7117  0D23                     l4484:	
  7118  0D23  1BA2               	btfsc	___lwdiv@divisor+1,7
  7119  0D24  2D2F               	goto	l4486
  7120  0D25  3001               	movlw	1
  7121  0D26                     u3875:	
  7122  0D26  35A1               	lslf	___lwdiv@divisor,f
  7123  0D27  0DA2               	rlf	___lwdiv@divisor+1,f
  7124  0D28  0B89               	decfsz	9,f
  7125  0D29  2D26               	goto	u3875
  7126  0D2A  3001               	movlw	1
  7127  0D2B  00A5               	movwf	??___lwdiv
  7128  0D2C  0825               	movf	??___lwdiv,w
  7129  0D2D  07A6               	addwf	___lwdiv@counter,f
  7130  0D2E  2D23               	goto	l4484
  7131  0D2F                     l4486:	
  7132  0D2F  3001               	movlw	1
  7133  0D30                     u3895:	
  7134  0D30  35A7               	lslf	___lwdiv@quotient,f
  7135  0D31  0DA8               	rlf	___lwdiv@quotient+1,f
  7136  0D32  0B89               	decfsz	9,f
  7137  0D33  2D30               	goto	u3895
  7138  0D34  0822               	movf	___lwdiv@divisor+1,w
  7139  0D35  0224               	subwf	___lwdiv@dividend+1,w
  7140  0D36  1D03               	skipz
  7141  0D37  2D3A               	goto	u3905
  7142  0D38  0821               	movf	___lwdiv@divisor,w
  7143  0D39  0223               	subwf	___lwdiv@dividend,w
  7144  0D3A                     u3905:	
  7145  0D3A  1C03               	skipc
  7146  0D3B  2D41               	goto	l4492
  7147  0D3C  0821               	movf	___lwdiv@divisor,w
  7148  0D3D  02A3               	subwf	___lwdiv@dividend,f
  7149  0D3E  0822               	movf	___lwdiv@divisor+1,w
  7150  0D3F  3BA4               	subwfb	___lwdiv@dividend+1,f
  7151  0D40  1427               	bsf	___lwdiv@quotient,0
  7152  0D41                     l4492:	
  7153  0D41  3001               	movlw	1
  7154  0D42                     u3915:	
  7155  0D42  36A2               	lsrf	___lwdiv@divisor+1,f
  7156  0D43  0CA1               	rrf	___lwdiv@divisor,f
  7157  0D44  0B89               	decfsz	9,f
  7158  0D45  2D42               	goto	u3915
  7159  0D46  3001               	movlw	1
  7160  0D47  02A6               	subwf	___lwdiv@counter,f
  7161  0D48  1D03               	btfss	3,2
  7162  0D49  2D2F               	goto	l4486
  7163  0D4A                     l4496:	
  7164  0D4A  0828               	movf	___lwdiv@quotient+1,w
  7165  0D4B  00A2               	movwf	?___lwdiv+1
  7166  0D4C  0827               	movf	___lwdiv@quotient,w
  7167  0D4D  00A1               	movwf	?___lwdiv
  7168  0D4E  0008               	return
  7169  0D4F                     __end_of___lwdiv:	
  7170                           
  7171                           	psect	text27
  7172  0D8A                     __ptext27:	
  7173 ;; *************** function _one_temperature_trans *****************
  7174 ;; Defined at:
  7175 ;;		line 279 in file "mcc_generated_files/max31856.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;Total ram usage:        2 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    6
  7196 ;; This function calls:
  7197 ;;		_maxim_31856_read_nregisters
  7198 ;;		_maxim_start_conversion
  7199 ;; This function is called by:
  7200 ;;		_temperature_process
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           
  7205                           ;psect for function _one_temperature_trans
  7206  0D8A                     _one_temperature_trans:	
  7207                           
  7208                           ;max31856.c: 281: maxim_start_conversion((uint8_t) 0x40);
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7212  0D8A  3040               	movlw	64
  7213  0D8B  318A  222E  318D   	fcall	_maxim_start_conversion
  7214                           
  7215                           ;max31856.c: 282: MAX31856Sec = 0;
  7216  0D8E  01F9               	clrf	_MAX31856Sec
  7217  0D8F                     l541:	
  7218                           ;max31856.c: 283: while( !(RB3 == 0 || MAX31856Sec > 2) ) ;
  7219                           
  7220  0D8F  0020               	movlb	0	; select bank0
  7221  0D90  1D8D               	btfss	13,3	;volatile
  7222  0D91  2D96               	goto	l4798
  7223  0D92  3003               	movlw	3
  7224  0D93  0279               	subwf	_MAX31856Sec,w
  7225  0D94  1C03               	skipc
  7226  0D95  2D8F               	goto	l541
  7227  0D96                     l4798:	
  7228                           
  7229                           ;max31856.c: 284: if( MAX31856Sec > 2)
  7230  0D96  3003               	movlw	3
  7231  0D97  0279               	subwf	_MAX31856Sec,w
  7232  0D98  1803               	btfsc	3,0
  7233  0D99  0008               	return
  7234                           
  7235                           ;max31856.c: 288: else
  7236                           ;max31856.c: 289: {
  7237                           ;max31856.c: 290: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  7238                           
  7239                           ;max31856.c: 285: {
  7240                           ;max31856.c: 287: }
  7241  0D9A  30B9               	movlw	(low (_uch_reg| 0))& (0+255)
  7242  0D9B  00A8               	movwf	??_one_temperature_trans
  7243  0D9C  0828               	movf	??_one_temperature_trans,w
  7244  0D9D  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  7245  0D9E  3006               	movlw	6
  7246  0D9F  00A9               	movwf	??_one_temperature_trans+1
  7247  0DA0  0829               	movf	??_one_temperature_trans+1,w
  7248  0DA1  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  7249  0DA2  300A               	movlw	10
  7250  0DA3  3189  21B1         	fcall	_maxim_31856_read_nregisters
  7251                           
  7252                           ;max31856.c: 291: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  7253  0DA5  0021               	movlb	1	; select bank1
  7254  0DA6  0839               	movf	_uch_reg^(0+128),w
  7255  0DA7  0020               	movlb	0	; select bank0
  7256  0DA8  00A8               	movwf	??_one_temperature_trans
  7257  0DA9  0828               	movf	??_one_temperature_trans,w
  7258  0DAA  0021               	movlb	1	; select bank1
  7259  0DAB  00B2               	movwf	_uch_cjth^(0+128)
  7260  0DAC  083A               	movf	(_uch_reg^(0+128)+1),w
  7261  0DAD  0020               	movlb	0	; select bank0
  7262  0DAE  00A8               	movwf	??_one_temperature_trans
  7263  0DAF  0828               	movf	??_one_temperature_trans,w
  7264  0DB0  0021               	movlb	1	; select bank1
  7265  0DB1  00B3               	movwf	_uch_cjtl^(0+128)
  7266                           
  7267                           ;max31856.c: 292: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  7268  0DB2  083B               	movf	(_uch_reg^(0+128)+2),w
  7269  0DB3  0020               	movlb	0	; select bank0
  7270  0DB4  00A8               	movwf	??_one_temperature_trans
  7271  0DB5  0828               	movf	??_one_temperature_trans,w
  7272  0DB6  00ED               	movwf	_uch_ltcbh
  7273  0DB7  0021               	movlb	1	; select bank1
  7274  0DB8  083C               	movf	(_uch_reg^(0+128)+3),w
  7275  0DB9  0020               	movlb	0	; select bank0
  7276  0DBA  00A8               	movwf	??_one_temperature_trans
  7277  0DBB  0828               	movf	??_one_temperature_trans,w
  7278  0DBC  0021               	movlb	1	; select bank1
  7279  0DBD  00B6               	movwf	_uch_ltcbm^(0+128)
  7280  0DBE  083D               	movf	(_uch_reg^(0+128)+4),w
  7281  0DBF  0020               	movlb	0	; select bank0
  7282  0DC0  00A8               	movwf	??_one_temperature_trans
  7283  0DC1  0828               	movf	??_one_temperature_trans,w
  7284  0DC2  0021               	movlb	1	; select bank1
  7285  0DC3  00B5               	movwf	_uch_ltcbl^(0+128)
  7286                           
  7287                           ;max31856.c: 293: uch_sr=uch_reg[5];
  7288  0DC4  083E               	movf	(_uch_reg^(0+128)+5),w
  7289  0DC5  0020               	movlb	0	; select bank0
  7290  0DC6  00A8               	movwf	??_one_temperature_trans
  7291  0DC7  0828               	movf	??_one_temperature_trans,w
  7292  0DC8  0021               	movlb	1	; select bank1
  7293  0DC9  00B8               	movwf	_uch_sr^(0+128)
  7294  0DCA  0008               	return
  7295  0DCB                     __end_of_one_temperature_trans:	
  7296                           
  7297                           	psect	text28
  7298  0A2E                     __ptext28:	
  7299 ;; *************** function _maxim_start_conversion *****************
  7300 ;; Defined at:
  7301 ;;		line 115 in file "mcc_generated_files/max31856.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  uch_conversi    1    wreg     unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;Total ram usage:        2 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    5
  7322 ;; This function calls:
  7323 ;;		_maxim_31856_read_register
  7324 ;;		_maxim_31856_write_register
  7325 ;; This function is called by:
  7326 ;;		_one_temperature_trans
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _maxim_start_conversion
  7332  0A2E                     _maxim_start_conversion:	
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  7336                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  7337  0A2E  0020               	movlb	0	; select bank0
  7338  0A2F  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  7339                           
  7340                           ;max31856.c: 117: uch_cr0=maxim_31856_read_register(0x00);
  7341  0A30  3000               	movlw	0
  7342  0A31  3189  2149  318A   	fcall	_maxim_31856_read_register
  7343  0A34  00F7               	movwf	??_maxim_start_conversion
  7344  0A35  0877               	movf	??_maxim_start_conversion,w
  7345  0A36  00FA               	movwf	_uch_cr0
  7346                           
  7347                           ;max31856.c: 118: uch_cr0&=(uint8_t) 0x3F;
  7348  0A37  303F               	movlw	63
  7349  0A38  00F7               	movwf	??_maxim_start_conversion
  7350  0A39  0877               	movf	??_maxim_start_conversion,w
  7351  0A3A  05FA               	andwf	_uch_cr0,f
  7352                           
  7353                           ;max31856.c: 119: uch_cr0|=uch_conversion_mode;
  7354  0A3B  0020               	movlb	0	; select bank0
  7355  0A3C  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  7356  0A3D  00F7               	movwf	??_maxim_start_conversion
  7357  0A3E  0877               	movf	??_maxim_start_conversion,w
  7358  0A3F  04FA               	iorwf	_uch_cr0,f
  7359                           
  7360                           ;max31856.c: 120: maxim_31856_write_register(0x80, uch_cr0);
  7361  0A40  087A               	movf	_uch_cr0,w
  7362  0A41  00F7               	movwf	??_maxim_start_conversion
  7363  0A42  0877               	movf	??_maxim_start_conversion,w
  7364  0A43  00F4               	movwf	maxim_31856_write_register@uch_register_value
  7365  0A44  3080               	movlw	128
  7366  0A45  3189  210B         	fcall	_maxim_31856_write_register
  7367  0A47  0008               	return
  7368  0A48                     __end_of_maxim_start_conversion:	
  7369                           
  7370                           	psect	text29
  7371  090B                     __ptext29:	
  7372 ;; *************** function _maxim_31856_write_register *****************
  7373 ;; Defined at:
  7374 ;;		line 20 in file "mcc_generated_files/max31856.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  uch_register    1    wreg     unsigned char 
  7377 ;;  uch_register    1    4[COMMON] unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  uch_register    1    5[COMMON] unsigned char 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        2 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    4
  7396 ;; This function calls:
  7397 ;;		_SPI_Exchange8bit
  7398 ;; This function is called by:
  7399 ;;		_maxim_31856_init
  7400 ;;		_maxim_start_conversion
  7401 ;;		_maxim_clear_fault_status
  7402 ;;		_temperature_display
  7403 ;;		_maxim_stop_conversion
  7404 ;;		_maxim_disable_oc_fault_detection
  7405 ;;		_maxim_set_oc_fault_detection
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function _maxim_31856_write_register
  7411  090B                     _maxim_31856_write_register:	
  7412                           
  7413                           ;incstack = 0
  7414                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  7415                           ;maxim_31856_write_register@uch_register_address stored from wreg
  7416  090B  00F5               	movwf	maxim_31856_write_register@uch_register_address
  7417                           
  7418                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  7419  090C  0022               	movlb	2	; select bank2
  7420  090D  128C               	bcf	12,5	;volatile
  7421                           
  7422                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  7423  090E  0875               	movf	maxim_31856_write_register@uch_register_address,w
  7424  090F  3188  20EC  3189   	fcall	_SPI_Exchange8bit
  7425                           
  7426                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  7427  0912  0874               	movf	maxim_31856_write_register@uch_register_value,w
  7428  0913  3188  20EC         	fcall	_SPI_Exchange8bit
  7429                           
  7430                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  7431  0915  0022               	movlb	2	; select bank2
  7432  0916  168C               	bsf	12,5	;volatile
  7433  0917  0008               	return
  7434  0918                     __end_of_maxim_31856_write_register:	
  7435                           
  7436                           	psect	text30
  7437  0949                     __ptext30:	
  7438 ;; *************** function _maxim_31856_read_register *****************
  7439 ;; Defined at:
  7440 ;;		line 34 in file "mcc_generated_files/max31856.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  uch_register    1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  uch_register    1    5[COMMON] unsigned char 
  7445 ;;  uch_register    1    6[COMMON] unsigned char 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      unsigned char 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, pclath, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;Total ram usage:        3 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    4
  7462 ;; This function calls:
  7463 ;;		_SPI_Exchange8bit
  7464 ;; This function is called by:
  7465 ;;		_maxim_start_conversion
  7466 ;;		_maxim_clear_fault_status
  7467 ;;		_maxim_stop_conversion
  7468 ;;		_maxim_disable_oc_fault_detection
  7469 ;;		_maxim_set_oc_fault_detection
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function _maxim_31856_read_register
  7475  0949                     _maxim_31856_read_register:	
  7476                           
  7477                           ;incstack = 0
  7478                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  7479                           ;maxim_31856_read_register@uch_register_address stored from wreg
  7480  0949  00F5               	movwf	maxim_31856_read_register@uch_register_address
  7481                           
  7482                           ;max31856.c: 36: uint8_t uch_register_data;
  7483                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  7484  094A  0022               	movlb	2	; select bank2
  7485  094B  128C               	bcf	12,5	;volatile
  7486                           
  7487                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  7488  094C  0875               	movf	maxim_31856_read_register@uch_register_address,w
  7489  094D  3188  20EC  3189   	fcall	_SPI_Exchange8bit
  7490                           
  7491                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  7492  0950  30FF               	movlw	255
  7493  0951  3188  20EC         	fcall	_SPI_Exchange8bit
  7494  0953  00F4               	movwf	??_maxim_31856_read_register
  7495  0954  0874               	movf	??_maxim_31856_read_register,w
  7496  0955  00F6               	movwf	maxim_31856_read_register@uch_register_data
  7497                           
  7498                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  7499  0956  0022               	movlb	2	; select bank2
  7500  0957  168C               	bsf	12,5	;volatile
  7501                           
  7502                           ;max31856.c: 41: return (uch_register_data);
  7503  0958  0876               	movf	maxim_31856_read_register@uch_register_data,w
  7504  0959  0008               	return
  7505  095A                     __end_of_maxim_31856_read_register:	
  7506                           
  7507                           	psect	text31
  7508  09B1                     __ptext31:	
  7509 ;; *************** function _maxim_31856_read_nregisters *****************
  7510 ;; Defined at:
  7511 ;;		line 50 in file "mcc_generated_files/max31856.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  uch_register    1    wreg     unsigned char 
  7514 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  7515 ;;		 -> uch_reg(8), 
  7516 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  uch_register    1    7[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;Total ram usage:        5 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    5
  7535 ;; This function calls:
  7536 ;;		_SPI_Exchange8bit
  7537 ;;		_SPI_Exchange8bitBuffer
  7538 ;; This function is called by:
  7539 ;;		_one_temperature_trans
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           
  7544                           ;psect for function _maxim_31856_read_nregisters
  7545  09B1                     _maxim_31856_read_nregisters:	
  7546                           
  7547                           ;incstack = 0
  7548                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7549                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  7550  09B1  0020               	movlb	0	; select bank0
  7551  09B2  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  7552                           
  7553                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  7554  09B3  0022               	movlb	2	; select bank2
  7555  09B4  128C               	bcf	12,5	;volatile
  7556                           
  7557                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  7558  09B5  0020               	movlb	0	; select bank0
  7559  09B6  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  7560  09B7  3188  20EC  3189   	fcall	_SPI_Exchange8bit
  7561                           
  7562                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  7563  09BA  0020               	movlb	0	; select bank0
  7564  09BB  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  7565  09BC  00A5               	movwf	??_maxim_31856_read_nregisters
  7566  09BD  0825               	movf	??_maxim_31856_read_nregisters,w
  7567  09BE  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  7568  09BF  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  7569  09C0  00A6               	movwf	??_maxim_31856_read_nregisters+1
  7570  09C1  0826               	movf	??_maxim_31856_read_nregisters+1,w
  7571  09C2  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  7572  09C3  3000               	movlw	0
  7573  09C4  318E  26A2         	fcall	_SPI_Exchange8bitBuffer
  7574                           
  7575                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  7576  09C6  0022               	movlb	2	; select bank2
  7577  09C7  168C               	bsf	12,5	;volatile
  7578  09C8  0008               	return
  7579  09C9                     __end_of_maxim_31856_read_nregisters:	
  7580                           
  7581                           	psect	text32
  7582  0EA2                     __ptext32:	
  7583 ;; *************** function _SPI_Exchange8bitBuffer *****************
  7584 ;; Defined at:
  7585 ;;		line 89 in file "mcc_generated_files/spi.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  dataIn          1    wreg     PTR unsigned char 
  7588 ;;		 -> NULL(0), 
  7589 ;;  bufLen          1    4[COMMON] unsigned char 
  7590 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  7591 ;;		 -> uch_reg(8), 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  7594 ;;		 -> NULL(0), 
  7595 ;;  bytesWritten    1    7[COMMON] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      unsigned char 
  7598 ;; Registers used:
  7599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;Total ram usage:        7 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:    4
  7612 ;; This function calls:
  7613 ;;		_SPI_Exchange8bit
  7614 ;; This function is called by:
  7615 ;;		_maxim_31856_read_nregisters
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function _SPI_Exchange8bitBuffer
  7621  0EA2                     _SPI_Exchange8bitBuffer:	
  7622                           
  7623                           ;incstack = 0
  7624                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7625                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  7626  0EA2  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  7627                           
  7628                           ;spi.c: 90: uint8_t bytesWritten = 0;
  7629  0EA3  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  7630                           
  7631                           ;spi.c: 92: if (bufLen != 0) {
  7632  0EA4  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  7633  0EA5  1903               	btfsc	3,2
  7634  0EA6  0008               	return
  7635                           
  7636                           ;spi.c: 93: if (dataIn != (0)) {
  7637  0EA7  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  7638  0EA8  1D03               	btfss	3,2
  7639  0EA9  2ED4               	goto	l4384
  7640  0EAA  2ED9               	goto	l4386
  7641  0EAB                     l4376:	
  7642                           ;spi.c: 94: while (bytesWritten < bufLen) {
  7643                           
  7644                           
  7645                           ;spi.c: 95: if (dataOut == (0)) {
  7646  0EAB  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  7647  0EAC  1D03               	btfss	3,2
  7648  0EAD  2EBA               	goto	l4380
  7649                           
  7650                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  7651  0EAE  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7652  0EAF  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  7653  0EB0  0020               	movlb	0	; select bank0
  7654  0EB1  00A0               	movwf	??_SPI_Exchange8bitBuffer
  7655  0EB2  0820               	movf	??_SPI_Exchange8bitBuffer,w
  7656  0EB3  0086               	movwf	6
  7657  0EB4  0187               	clrf	7
  7658  0EB5  0801               	movf	1,w
  7659  0EB6  3188  20EC  318E   	fcall	_SPI_Exchange8bit
  7660                           
  7661                           ;spi.c: 97: } else {
  7662  0EB9  2ECF               	goto	l4382
  7663  0EBA                     l4380:	
  7664                           
  7665                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  7666  0EBA  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7667  0EBB  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  7668  0EBC  0020               	movlb	0	; select bank0
  7669  0EBD  00A0               	movwf	??_SPI_Exchange8bitBuffer
  7670  0EBE  0820               	movf	??_SPI_Exchange8bitBuffer,w
  7671  0EBF  0086               	movwf	6
  7672  0EC0  0187               	clrf	7
  7673  0EC1  0801               	movf	1,w
  7674  0EC2  3188  20EC  318E   	fcall	_SPI_Exchange8bit
  7675  0EC5  0020               	movlb	0	; select bank0
  7676  0EC6  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  7677  0EC7  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7678  0EC8  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  7679  0EC9  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  7680  0ECA  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  7681  0ECB  0086               	movwf	6
  7682  0ECC  0187               	clrf	7
  7683  0ECD  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  7684  0ECE  0081               	movwf	1
  7685  0ECF                     l4382:	
  7686                           
  7687                           ;spi.c: 99: }
  7688                           ;spi.c: 101: bytesWritten++;
  7689  0ECF  3001               	movlw	1
  7690  0ED0  0020               	movlb	0	; select bank0
  7691  0ED1  00A0               	movwf	??_SPI_Exchange8bitBuffer
  7692  0ED2  0820               	movf	??_SPI_Exchange8bitBuffer,w
  7693  0ED3  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  7694  0ED4                     l4384:	
  7695  0ED4  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  7696  0ED5  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  7697  0ED6  1803               	btfsc	3,0
  7698  0ED7  0008               	return
  7699  0ED8  2EAB               	goto	l4376
  7700  0ED9                     l4386:	
  7701                           ;spi.c: 102: }
  7702                           ;spi.c: 103: } else {
  7703                           
  7704                           
  7705                           ;spi.c: 104: if (dataOut != (0)) {
  7706  0ED9  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  7707  0EDA  1903               	btfsc	3,2
  7708  0EDB  0008               	return
  7709  0EDC                     l4394:	
  7710  0EDC  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  7711  0EDD  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  7712  0EDE  1803               	btfsc	3,0
  7713  0EDF  0008               	return
  7714                           
  7715                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  7716                           
  7717                           ;spi.c: 105: while (bytesWritten < bufLen) {
  7718  0EE0  3000               	movlw	0
  7719  0EE1  3188  20EC  318E   	fcall	_SPI_Exchange8bit
  7720  0EE4  0020               	movlb	0	; select bank0
  7721  0EE5  00A0               	movwf	??_SPI_Exchange8bitBuffer
  7722  0EE6  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7723  0EE7  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  7724  0EE8  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  7725  0EE9  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  7726  0EEA  0086               	movwf	6
  7727  0EEB  0187               	clrf	7
  7728  0EEC  0820               	movf	??_SPI_Exchange8bitBuffer,w
  7729  0EED  0081               	movwf	1
  7730                           
  7731                           ;spi.c: 108: bytesWritten++;
  7732  0EEE  3001               	movlw	1
  7733  0EEF  00A0               	movwf	??_SPI_Exchange8bitBuffer
  7734  0EF0  0820               	movf	??_SPI_Exchange8bitBuffer,w
  7735  0EF1  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  7736  0EF2  2EDC               	goto	l4394
  7737  0EF3                     __end_of_SPI_Exchange8bitBuffer:	
  7738                           ;spi.c: 109: }
  7739                           ;spi.c: 110: }
  7740                           ;spi.c: 111: }
  7741                           ;spi.c: 112: }
  7742                           ;spi.c: 114: return bytesWritten;
  7743                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  7744                           
  7745                           
  7746                           	psect	text33
  7747  08EC                     __ptext33:	
  7748 ;; *************** function _SPI_Exchange8bit *****************
  7749 ;; Defined at:
  7750 ;;		line 77 in file "mcc_generated_files/spi.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  data            1    wreg     unsigned char 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  data            1    3[COMMON] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      unsigned char 
  7757 ;; Registers used:
  7758 ;;		wreg
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;Total ram usage:        1 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    3
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_SPI_Exchange8bitBuffer
  7775 ;;		_maxim_31856_write_register
  7776 ;;		_maxim_31856_read_register
  7777 ;;		_maxim_31856_read_nregisters
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           
  7782                           ;psect for function _SPI_Exchange8bit
  7783  08EC                     _SPI_Exchange8bit:	
  7784                           
  7785                           ;incstack = 0
  7786                           ; Regs used in _SPI_Exchange8bit: [wreg]
  7787                           ;SPI_Exchange8bit@data stored from wreg
  7788  08EC  00F3               	movwf	SPI_Exchange8bit@data
  7789                           
  7790                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  7791  08ED  0024               	movlb	4	; select bank4
  7792  08EE  1395               	bcf	21,7	;volatile
  7793                           
  7794                           ;spi.c: 81: SSPBUF = data;
  7795  08EF  0873               	movf	SPI_Exchange8bit@data,w
  7796  08F0  0091               	movwf	17	;volatile
  7797  08F1                     l71:	
  7798                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  7799                           
  7800  08F1  1C14               	btfss	20,0	;volatile
  7801  08F2  28F1               	goto	l71
  7802                           
  7803                           ;spi.c: 84: }
  7804                           ;spi.c: 86: return (SSPBUF);
  7805  08F3  0811               	movf	17,w	;volatile
  7806  08F4  0008               	return
  7807  08F5                     __end_of_SPI_Exchange8bit:	
  7808                           
  7809                           	psect	text34
  7810  0C81                     __ptext34:	
  7811 ;; *************** function _Two_Display *****************
  7812 ;; Defined at:
  7813 ;;		line 138 in file "mcc_generated_files/ht1621.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  number          1    wreg     unsigned char 
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  number          1   11[BANK0 ] unsigned char 
  7818 ;;  num             4    7[BANK0 ] unsigned char [4]
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;Total ram usage:        6 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    5
  7835 ;; This function calls:
  7836 ;;		_WriteAll_1621
  7837 ;; This function is called by:
  7838 ;;		_temperature_process
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           
  7843                           ;psect for function _Two_Display
  7844  0C81                     _Two_Display:	
  7845                           
  7846                           ;incstack = 0
  7847                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7848                           ;Two_Display@number stored from wreg
  7849  0C81  0020               	movlb	0	; select bank0
  7850  0C82  00AB               	movwf	Two_Display@number
  7851                           
  7852                           ;ht1621.c: 140: unsigned char num[4]={0};
  7853  0C83  0021               	movlb	1	; select bank1
  7854  0C84  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  7855  0C85  0020               	movlb	0	; select bank0
  7856  0C86  00AA               	movwf	Two_Display@num+3
  7857  0C87  0021               	movlb	1	; select bank1
  7858  0C88  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  7859  0C89  0020               	movlb	0	; select bank0
  7860  0C8A  00A9               	movwf	Two_Display@num+2
  7861  0C8B  0021               	movlb	1	; select bank1
  7862  0C8C  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  7863  0C8D  0020               	movlb	0	; select bank0
  7864  0C8E  00A8               	movwf	Two_Display@num+1
  7865  0C8F  0021               	movlb	1	; select bank1
  7866  0C90  0820               	movf	Two_Display@F2123^(0+128),w
  7867  0C91  0020               	movlb	0	; select bank0
  7868  0C92  00A7               	movwf	Two_Display@num
  7869                           
  7870                           ;ht1621.c: 141: num[1] = Dis_TAB[0];
  7871  0C93  3000               	movlw	low (_Dis_TAB| (0+32768))
  7872  0C94  0084               	movwf	4
  7873  0C95  3090               	movlw	high (_Dis_TAB| (0+32768))
  7874  0C96  0085               	movwf	5
  7875  0C97  0800               	movf	0,w	;code access
  7876  0C98  00A6               	movwf	??_Two_Display
  7877  0C99  0826               	movf	??_Two_Display,w
  7878  0C9A  00A8               	movwf	Two_Display@num+1
  7879                           
  7880                           ;ht1621.c: 142: num[2] = Dis_TAB[number];
  7881  0C9B  082B               	movf	Two_Display@number,w
  7882  0C9C  3E00               	addlw	low (_Dis_TAB| (0+32768))
  7883  0C9D  0084               	movwf	4
  7884  0C9E  3090               	movlw	high (_Dis_TAB| (0+32768))
  7885  0C9F  1803               	skipnc
  7886  0CA0  3E01               	addlw	1
  7887  0CA1  0085               	movwf	5
  7888  0CA2  0800               	movf	0,w	;code access
  7889  0CA3  00A6               	movwf	??_Two_Display
  7890  0CA4  0826               	movf	??_Two_Display,w
  7891  0CA5  00A9               	movwf	Two_Display@num+2
  7892                           
  7893                           ;ht1621.c: 143: WriteAll_1621(0, num, 4);
  7894  0CA6  3027               	movlw	low Two_Display@num
  7895  0CA7  00A0               	movwf	WriteAll_1621@p
  7896  0CA8  3000               	movlw	high Two_Display@num
  7897  0CA9  00A1               	movwf	WriteAll_1621@p+1
  7898  0CAA  3004               	movlw	4
  7899  0CAB  00A6               	movwf	??_Two_Display
  7900  0CAC  0826               	movf	??_Two_Display,w
  7901  0CAD  00A2               	movwf	WriteAll_1621@cnt
  7902  0CAE  3000               	movlw	0
  7903  0CAF  318C  24E5         	fcall	_WriteAll_1621
  7904  0CB1  0008               	return
  7905  0CB2                     __end_of_Two_Display:	
  7906                           
  7907                           	psect	text35
  7908  0CE5                     __ptext35:	
  7909 ;; *************** function _WriteAll_1621 *****************
  7910 ;; Defined at:
  7911 ;;		line 90 in file "mcc_generated_files/ht1621.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  addr            1    wreg     unsigned char 
  7914 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7915 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  7916 ;;		 -> Dis_TAB(21), 
  7917 ;;  cnt             1    2[BANK0 ] unsigned char 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  addr            1    4[BANK0 ] unsigned char 
  7920 ;;  i               1    5[BANK0 ] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7930 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;Total ram usage:        6 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    4
  7937 ;; This function calls:
  7938 ;;		_SendBit_1621
  7939 ;;		_SendDataBit_1621
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;;		_Tc_Display
  7943 ;;		_Two_Display
  7944 ;;		_err_Display
  7945 ;;		_time_Display
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _WriteAll_1621
  7951  0CE5                     _WriteAll_1621:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7955                           ;WriteAll_1621@addr stored from wreg
  7956  0CE5  0020               	movlb	0	; select bank0
  7957  0CE6  00A4               	movwf	WriteAll_1621@addr
  7958                           
  7959                           ;ht1621.c: 92: unsigned char i;
  7960                           ;ht1621.c: 93: do { LATC0 = 0; } while(0);
  7961  0CE7  0022               	movlb	2	; select bank2
  7962  0CE8  100E               	bcf	14,0	;volatile
  7963                           
  7964                           ;ht1621.c: 94: SendBit_1621(0xa0,3);
  7965  0CE9  3003               	movlw	3
  7966  0CEA  0020               	movlb	0	; select bank0
  7967  0CEB  00A3               	movwf	??_WriteAll_1621
  7968  0CEC  0823               	movf	??_WriteAll_1621,w
  7969  0CED  00F3               	movwf	SendBit_1621@cnt
  7970  0CEE  30A0               	movlw	160
  7971  0CEF  318A  22D3  318C   	fcall	_SendBit_1621
  7972                           
  7973                           ;ht1621.c: 95: SendBit_1621(addr,6);
  7974  0CF2  3006               	movlw	6
  7975  0CF3  0020               	movlb	0	; select bank0
  7976  0CF4  00A3               	movwf	??_WriteAll_1621
  7977  0CF5  0823               	movf	??_WriteAll_1621,w
  7978  0CF6  00F3               	movwf	SendBit_1621@cnt
  7979  0CF7  0824               	movf	WriteAll_1621@addr,w
  7980  0CF8  318A  22D3  318C   	fcall	_SendBit_1621
  7981                           
  7982                           ;ht1621.c: 96: for(i =0; i <cnt; i ++,p++)
  7983  0CFB  0020               	movlb	0	; select bank0
  7984  0CFC  01A5               	clrf	WriteAll_1621@i
  7985  0CFD                     l4406:	
  7986  0CFD  0822               	movf	WriteAll_1621@cnt,w
  7987  0CFE  0225               	subwf	WriteAll_1621@i,w
  7988  0CFF  1803               	btfsc	3,0
  7989  0D00  2D17               	goto	l670
  7990                           
  7991                           ;ht1621.c: 97: {
  7992                           ;ht1621.c: 98: SendDataBit_1621(*p,8);
  7993  0D01  3008               	movlw	8
  7994  0D02  00A3               	movwf	??_WriteAll_1621
  7995  0D03  0823               	movf	??_WriteAll_1621,w
  7996  0D04  00F3               	movwf	SendDataBit_1621@cnt
  7997  0D05  0820               	movf	WriteAll_1621@p,w
  7998  0D06  0084               	movwf	4
  7999  0D07  0821               	movf	WriteAll_1621@p+1,w
  8000  0D08  0085               	movwf	5
  8001  0D09  0800               	movf	0,w	;code access
  8002  0D0A  318A  22F3  318C   	fcall	_SendDataBit_1621
  8003  0D0D  3001               	movlw	1
  8004  0D0E  0020               	movlb	0	; select bank0
  8005  0D0F  00A3               	movwf	??_WriteAll_1621
  8006  0D10  0823               	movf	??_WriteAll_1621,w
  8007  0D11  07A5               	addwf	WriteAll_1621@i,f
  8008  0D12  3001               	movlw	1
  8009  0D13  07A0               	addwf	WriteAll_1621@p,f
  8010  0D14  3000               	movlw	0
  8011  0D15  3DA1               	addwfc	WriteAll_1621@p+1,f
  8012  0D16  2CFD               	goto	l4406
  8013  0D17                     l670:	
  8014                           ;ht1621.c: 99: }
  8015                           ;ht1621.c: 100: do { LATC0 = 1; } while(0);
  8016                           
  8017  0D17  0022               	movlb	2	; select bank2
  8018  0D18  140E               	bsf	14,0	;volatile
  8019  0D19  0008               	return
  8020  0D1A                     __end_of_WriteAll_1621:	
  8021                           
  8022                           	psect	text36
  8023  0AF3                     __ptext36:	
  8024 ;; *************** function _SendDataBit_1621 *****************
  8025 ;; Defined at:
  8026 ;;		line 41 in file "mcc_generated_files/ht1621.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  data            1    wreg     unsigned char 
  8029 ;;  cnt             1    3[COMMON] unsigned char 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  data            1    6[COMMON] unsigned char 
  8032 ;;  i               1    7[COMMON] unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;Total ram usage:        5 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    3
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_WriteAll_1621
  8053 ;;		_Write_1621
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function _SendDataBit_1621
  8059  0AF3                     _SendDataBit_1621:	
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  8063                           ;SendDataBit_1621@data stored from wreg
  8064  0AF3  00F6               	movwf	SendDataBit_1621@data
  8065                           
  8066                           ;ht1621.c: 43: unsigned char i;
  8067                           ;ht1621.c: 44: for(i =0; i <cnt; i ++)
  8068  0AF4  01F7               	clrf	SendDataBit_1621@i
  8069  0AF5                     l4350:	
  8070  0AF5  0873               	movf	SendDataBit_1621@cnt,w
  8071  0AF6  0277               	subwf	SendDataBit_1621@i,w
  8072  0AF7  1803               	btfsc	3,0
  8073  0AF8  0008               	return
  8074                           
  8075                           ;ht1621.c: 45: {
  8076                           ;ht1621.c: 46: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  8077  0AF9  1876               	btfsc	SendDataBit_1621@data,0
  8078  0AFA  2AFE               	goto	l641
  8079  0AFB  0022               	movlb	2	; select bank2
  8080  0AFC  110E               	bcf	14,2	;volatile
  8081  0AFD  2B00               	goto	l643
  8082  0AFE                     l641:	
  8083                           ;ht1621.c: 47: else do { LATC2 = 1; } while(0);
  8084                           
  8085  0AFE  0022               	movlb	2	; select bank2
  8086  0AFF  150E               	bsf	14,2	;volatile
  8087  0B00                     l643:	
  8088                           ;ht1621.c: 48: do { LATC1 = 0; } while(0);
  8089                           
  8090  0B00  108E               	bcf	14,1	;volatile
  8091                           
  8092                           ;ht1621.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
  8093  0B01  3006               	movlw	6
  8094  0B02  00F5               	movwf	??_SendDataBit_1621+1
  8095  0B03  3030               	movlw	48
  8096  0B04  00F4               	movwf	??_SendDataBit_1621
  8097  0B05                     u5077:	
  8098  0B05  0BF4               	decfsz	??_SendDataBit_1621,f
  8099  0B06  2B05               	goto	u5077
  8100  0B07  0BF5               	decfsz	??_SendDataBit_1621+1,f
  8101  0B08  2B05               	goto	u5077
  8102  0B09  0000               	nop
  8103                           
  8104                           ;ht1621.c: 50: do { LATC1 = 1; } while(0);
  8105  0B0A  0022               	movlb	2	; select bank2
  8106  0B0B  148E               	bsf	14,1	;volatile
  8107                           
  8108                           ;ht1621.c: 51: data>>=1;
  8109  0B0C  1003               	clrc
  8110  0B0D  0CF6               	rrf	SendDataBit_1621@data,f
  8111  0B0E  3001               	movlw	1
  8112  0B0F  00F4               	movwf	??_SendDataBit_1621
  8113  0B10  0874               	movf	??_SendDataBit_1621,w
  8114  0B11  07F7               	addwf	SendDataBit_1621@i,f
  8115  0B12  2AF5               	goto	l4350
  8116  0B13                     __end_of_SendDataBit_1621:	
  8117                           
  8118                           	psect	text37
  8119  0BA5                     __ptext37:	
  8120 ;; *************** function _Write_Flash_head *****************
  8121 ;; Defined at:
  8122 ;;		line 64 in file "mcc_generated_files/save.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;Total ram usage:        1 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    6
  8143 ;; This function calls:
  8144 ;;		_FLASH_WriteWord
  8145 ;; This function is called by:
  8146 ;;		_Key_Process
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           
  8151                           ;psect for function _Write_Flash_head
  8152  0BA5                     _Write_Flash_head:	
  8153                           
  8154                           ;save.c: 66: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8158  0BA5  0020               	movlb	0	; select bank0
  8159  0BA6  0863               	movf	_Cur_Save_Index+1,w
  8160  0BA7  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  8161  0BA8  0862               	movf	_Cur_Save_Index,w
  8162  0BA9  00AA               	movwf	FLASH_WriteWord@flashAddr
  8163  0BAA  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  8164  0BAB  00F7               	movwf	??_Write_Flash_head
  8165  0BAC  0877               	movf	??_Write_Flash_head,w
  8166  0BAD  00AC               	movwf	FLASH_WriteWord@ramBuf
  8167  0BAE  30AA               	movlw	170
  8168  0BAF  00AD               	movwf	FLASH_WriteWord@word
  8169  0BB0  30AA               	movlw	170
  8170  0BB1  00AE               	movwf	FLASH_WriteWord@word+1
  8171  0BB2  318D  25CB  318B   	fcall	_FLASH_WriteWord
  8172                           
  8173                           ;save.c: 67: Cur_Save_Index++;
  8174  0BB5  3001               	movlw	1
  8175  0BB6  0020               	movlb	0	; select bank0
  8176  0BB7  07E2               	addwf	_Cur_Save_Index,f
  8177  0BB8  3000               	movlw	0
  8178  0BB9  3DE3               	addwfc	_Cur_Save_Index+1,f
  8179                           
  8180                           ;save.c: 68: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  8181  0BBA  0863               	movf	_Cur_Save_Index+1,w
  8182  0BBB  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  8183  0BBC  0862               	movf	_Cur_Save_Index,w
  8184  0BBD  00AA               	movwf	FLASH_WriteWord@flashAddr
  8185  0BBE  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  8186  0BBF  00F7               	movwf	??_Write_Flash_head
  8187  0BC0  0877               	movf	??_Write_Flash_head,w
  8188  0BC1  00AC               	movwf	FLASH_WriteWord@ramBuf
  8189  0BC2  30AA               	movlw	170
  8190  0BC3  00AD               	movwf	FLASH_WriteWord@word
  8191  0BC4  30AA               	movlw	170
  8192  0BC5  00AE               	movwf	FLASH_WriteWord@word+1
  8193  0BC6  318D  25CB         	fcall	_FLASH_WriteWord
  8194                           
  8195                           ;save.c: 69: Cur_Save_Index++;
  8196  0BC8  3001               	movlw	1
  8197  0BC9  0020               	movlb	0	; select bank0
  8198  0BCA  07E2               	addwf	_Cur_Save_Index,f
  8199  0BCB  3000               	movlw	0
  8200  0BCC  3DE3               	addwfc	_Cur_Save_Index+1,f
  8201  0BCD  0008               	return
  8202  0BCE                     __end_of_Write_Flash_head:	
  8203                           
  8204                           	psect	text38
  8205  0B7C                     __ptext38:	
  8206 ;; *************** function _Write_Flash_finish *****************
  8207 ;; Defined at:
  8208 ;;		line 78 in file "mcc_generated_files/save.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;Total ram usage:        1 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; Hardware stack levels required when called:    6
  8229 ;; This function calls:
  8230 ;;		_FLASH_WriteWord
  8231 ;; This function is called by:
  8232 ;;		_Key_Process
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _Write_Flash_finish
  8238  0B7C                     _Write_Flash_finish:	
  8239                           
  8240                           ;save.c: 80: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  8241                           
  8242                           ;incstack = 0
  8243                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8244  0B7C  0020               	movlb	0	; select bank0
  8245  0B7D  0863               	movf	_Cur_Save_Index+1,w
  8246  0B7E  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  8247  0B7F  0862               	movf	_Cur_Save_Index,w
  8248  0B80  00AA               	movwf	FLASH_WriteWord@flashAddr
  8249  0B81  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  8250  0B82  00F7               	movwf	??_Write_Flash_finish
  8251  0B83  0877               	movf	??_Write_Flash_finish,w
  8252  0B84  00AC               	movwf	FLASH_WriteWord@ramBuf
  8253  0B85  3055               	movlw	85
  8254  0B86  00AD               	movwf	FLASH_WriteWord@word
  8255  0B87  3055               	movlw	85
  8256  0B88  00AE               	movwf	FLASH_WriteWord@word+1
  8257  0B89  318D  25CB  318B   	fcall	_FLASH_WriteWord
  8258                           
  8259                           ;save.c: 81: Cur_Save_Index++;
  8260  0B8C  3001               	movlw	1
  8261  0B8D  0020               	movlb	0	; select bank0
  8262  0B8E  07E2               	addwf	_Cur_Save_Index,f
  8263  0B8F  3000               	movlw	0
  8264  0B90  3DE3               	addwfc	_Cur_Save_Index+1,f
  8265                           
  8266                           ;save.c: 82: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  8267  0B91  0863               	movf	_Cur_Save_Index+1,w
  8268  0B92  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  8269  0B93  0862               	movf	_Cur_Save_Index,w
  8270  0B94  00AA               	movwf	FLASH_WriteWord@flashAddr
  8271  0B95  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  8272  0B96  00F7               	movwf	??_Write_Flash_finish
  8273  0B97  0877               	movf	??_Write_Flash_finish,w
  8274  0B98  00AC               	movwf	FLASH_WriteWord@ramBuf
  8275  0B99  3055               	movlw	85
  8276  0B9A  00AD               	movwf	FLASH_WriteWord@word
  8277  0B9B  3055               	movlw	85
  8278  0B9C  00AE               	movwf	FLASH_WriteWord@word+1
  8279  0B9D  318D  25CB         	fcall	_FLASH_WriteWord
  8280                           
  8281                           ;save.c: 83: Cur_Save_Index++;
  8282  0B9F  3001               	movlw	1
  8283  0BA0  0020               	movlb	0	; select bank0
  8284  0BA1  07E2               	addwf	_Cur_Save_Index,f
  8285  0BA2  3000               	movlw	0
  8286  0BA3  3DE3               	addwfc	_Cur_Save_Index+1,f
  8287  0BA4  0008               	return
  8288  0BA5                     __end_of_Write_Flash_finish:	
  8289                           
  8290                           	psect	text39
  8291  08C4                     __ptext39:	
  8292 ;; *************** function _Set_start_flag *****************
  8293 ;; Defined at:
  8294 ;;		line 18 in file "mcc_generated_files/save.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		None
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    3
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_Key_Process
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _Set_start_flag
  8324  08C4                     _Set_start_flag:	
  8325                           
  8326                           ;save.c: 20: Record_flag = 1;
  8327                           
  8328                           ;incstack = 0
  8329                           ; Regs used in _Set_start_flag: []
  8330  08C4  0020               	movlb	0	; select bank0
  8331  08C5  01EA               	clrf	_Record_flag
  8332  08C6  0AEA               	incf	_Record_flag,f
  8333                           
  8334                           ;save.c: 21: do { LATA4 = 0; } while(0);
  8335  08C7  0022               	movlb	2	; select bank2
  8336  08C8  120C               	bcf	12,4	;volatile
  8337  08C9  0008               	return
  8338  08CA                     __end_of_Set_start_flag:	
  8339                           
  8340                           	psect	text40
  8341  08BA                     __ptext40:	
  8342 ;; *************** function _Set_finish_flag *****************
  8343 ;; Defined at:
  8344 ;;		line 30 in file "mcc_generated_files/save.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		status,2
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    3
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_Key_Process
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           
  8373                           ;psect for function _Set_finish_flag
  8374  08BA                     _Set_finish_flag:	
  8375                           
  8376                           ;save.c: 32: Record_flag = 0;
  8377                           
  8378                           ;incstack = 0
  8379                           ; Regs used in _Set_finish_flag: [status,2]
  8380  08BA  0020               	movlb	0	; select bank0
  8381  08BB  01EA               	clrf	_Record_flag
  8382                           
  8383                           ;save.c: 33: do { LATA4 = 1; } while(0);
  8384  08BC  0022               	movlb	2	; select bank2
  8385  08BD  160C               	bsf	12,4	;volatile
  8386  08BE  0008               	return
  8387  08BF                     __end_of_Set_finish_flag:	
  8388                           
  8389                           	psect	text41
  8390  0999                     __ptext41:	
  8391 ;; *************** function _SendCmd_1621 *****************
  8392 ;; Defined at:
  8393 ;;		line 61 in file "mcc_generated_files/ht1621.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  command         1    wreg     unsigned char 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  command         1    1[BANK0 ] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, pclath, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;Total ram usage:        2 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    4
  8414 ;; This function calls:
  8415 ;;		_SendBit_1621
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;;		_Key_Process
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _SendCmd_1621
  8424  0999                     _SendCmd_1621:	
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  8428                           ;SendCmd_1621@command stored from wreg
  8429  0999  0020               	movlb	0	; select bank0
  8430  099A  00A1               	movwf	SendCmd_1621@command
  8431                           
  8432                           ;ht1621.c: 63: do { LATC0 = 0; } while(0);
  8433  099B  0022               	movlb	2	; select bank2
  8434  099C  100E               	bcf	14,0	;volatile
  8435                           
  8436                           ;ht1621.c: 64: SendBit_1621(0x80,4);
  8437  099D  3004               	movlw	4
  8438  099E  0020               	movlb	0	; select bank0
  8439  099F  00A0               	movwf	??_SendCmd_1621
  8440  09A0  0820               	movf	??_SendCmd_1621,w
  8441  09A1  00F3               	movwf	SendBit_1621@cnt
  8442  09A2  3080               	movlw	128
  8443  09A3  318A  22D3  3189   	fcall	_SendBit_1621
  8444                           
  8445                           ;ht1621.c: 65: SendBit_1621(command,8);
  8446  09A6  3008               	movlw	8
  8447  09A7  0020               	movlb	0	; select bank0
  8448  09A8  00A0               	movwf	??_SendCmd_1621
  8449  09A9  0820               	movf	??_SendCmd_1621,w
  8450  09AA  00F3               	movwf	SendBit_1621@cnt
  8451  09AB  0821               	movf	SendCmd_1621@command,w
  8452  09AC  318A  22D3         	fcall	_SendBit_1621
  8453                           
  8454                           ;ht1621.c: 66: do { LATC0 = 1; } while(0);
  8455  09AE  0022               	movlb	2	; select bank2
  8456  09AF  140E               	bsf	14,0	;volatile
  8457  09B0  0008               	return
  8458  09B1                     __end_of_SendCmd_1621:	
  8459                           
  8460                           	psect	text42
  8461  0AD3                     __ptext42:	
  8462 ;; *************** function _SendBit_1621 *****************
  8463 ;; Defined at:
  8464 ;;		line 21 in file "mcc_generated_files/ht1621.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  data            1    wreg     unsigned char 
  8467 ;;  cnt             1    3[COMMON] unsigned char 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  data            1    6[COMMON] unsigned char 
  8470 ;;  i               1    7[COMMON] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  1    wreg      void 
  8473 ;; Registers used:
  8474 ;;		wreg, status,2, status,0
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8480 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;Total ram usage:        5 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    3
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_SendCmd_1621
  8491 ;;		_WriteAll_1621
  8492 ;;		_Write_1621
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           
  8497                           ;psect for function _SendBit_1621
  8498  0AD3                     _SendBit_1621:	
  8499                           
  8500                           ;incstack = 0
  8501                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
  8502                           ;SendBit_1621@data stored from wreg
  8503  0AD3  00F6               	movwf	SendBit_1621@data
  8504                           
  8505                           ;ht1621.c: 23: unsigned char i;
  8506                           ;ht1621.c: 24: for(i =0; i <cnt; i ++)
  8507  0AD4  01F7               	clrf	SendBit_1621@i
  8508  0AD5                     l4338:	
  8509  0AD5  0873               	movf	SendBit_1621@cnt,w
  8510  0AD6  0277               	subwf	SendBit_1621@i,w
  8511  0AD7  1803               	btfsc	3,0
  8512  0AD8  0008               	return
  8513                           
  8514                           ;ht1621.c: 25: {
  8515                           ;ht1621.c: 26: if((data&0x80)==0) do { LATC2 = 0; } while(0);
  8516  0AD9  1BF6               	btfsc	SendBit_1621@data,7
  8517  0ADA  2ADE               	goto	l625
  8518  0ADB  0022               	movlb	2	; select bank2
  8519  0ADC  110E               	bcf	14,2	;volatile
  8520  0ADD  2AE0               	goto	l627
  8521  0ADE                     l625:	
  8522                           ;ht1621.c: 27: else do { LATC2 = 1; } while(0);
  8523                           
  8524  0ADE  0022               	movlb	2	; select bank2
  8525  0ADF  150E               	bsf	14,2	;volatile
  8526  0AE0                     l627:	
  8527                           ;ht1621.c: 28: do { LATC1 = 0; } while(0);
  8528                           
  8529  0AE0  108E               	bcf	14,1	;volatile
  8530                           
  8531                           ;ht1621.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  8532  0AE1  3006               	movlw	6
  8533  0AE2  00F5               	movwf	??_SendBit_1621+1
  8534  0AE3  3030               	movlw	48
  8535  0AE4  00F4               	movwf	??_SendBit_1621
  8536  0AE5                     u5087:	
  8537  0AE5  0BF4               	decfsz	??_SendBit_1621,f
  8538  0AE6  2AE5               	goto	u5087
  8539  0AE7  0BF5               	decfsz	??_SendBit_1621+1,f
  8540  0AE8  2AE5               	goto	u5087
  8541  0AE9  0000               	nop
  8542                           
  8543                           ;ht1621.c: 30: do { LATC1 = 1; } while(0);
  8544  0AEA  0022               	movlb	2	; select bank2
  8545  0AEB  148E               	bsf	14,1	;volatile
  8546                           
  8547                           ;ht1621.c: 31: data<<=1;
  8548  0AEC  1003               	clrc
  8549  0AED  0DF6               	rlf	SendBit_1621@data,f
  8550  0AEE  3001               	movlw	1
  8551  0AEF  00F4               	movwf	??_SendBit_1621
  8552  0AF0  0874               	movf	??_SendBit_1621,w
  8553  0AF1  07F7               	addwf	SendBit_1621@i,f
  8554  0AF2  2AD5               	goto	l4338
  8555  0AF3                     __end_of_SendBit_1621:	
  8556                           
  8557                           	psect	text43
  8558  0685                     __ptext43:	
  8559 ;; *************** function _Save_Write_time *****************
  8560 ;; Defined at:
  8561 ;;		line 193 in file "mcc_generated_files/save.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  i               1    0        unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;Total ram usage:        2 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    7
  8582 ;; This function calls:
  8583 ;;		_Bq32k_Rtc_Read_Time
  8584 ;;		_Save_Write_word
  8585 ;; This function is called by:
  8586 ;;		_Key_Process
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           
  8591                           ;psect for function _Save_Write_time
  8592  0685                     _Save_Write_time:	
  8593                           
  8594                           ;save.c: 195: unsigned char i;
  8595                           ;save.c: 196: Bq32k_Rtc_Read_Time(&rtc_tm);
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8599  0685  30CF               	movlw	(low (_rtc_tm| 0))& (0+255)
  8600  0686  318F  279C  3186   	fcall	_Bq32k_Rtc_Read_Time
  8601                           
  8602                           ;save.c: 197: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  8603  0689  30C1               	movlw	low (_rtc_save_ch1| 0)
  8604  068A  0086               	movwf	6
  8605  068B  0187               	clrf	7
  8606  068C  30CF               	movlw	low (_rtc_tm| 0)
  8607  068D  0084               	movwf	4
  8608  068E  0185               	clrf	5
  8609  068F  3007               	movlw	7
  8610  0690  0020               	movlb	0	; select bank0
  8611  0691  00B5               	movwf	??_Save_Write_time
  8612  0692                     u471m0:	
  8613  0692  0012               	moviw fsr0++
  8614  0693  001E               	movwi fsr1++
  8615  0694  0BB5               	decfsz	??_Save_Write_time,f
  8616  0695  2E92               	goto	u471m0
  8617                           
  8618                           ;save.c: 198: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  8619  0696  30C8               	movlw	low (_rtc_save_ch2| 0)
  8620  0697  0086               	movwf	6
  8621  0698  0187               	clrf	7
  8622  0699  30CF               	movlw	low (_rtc_tm| 0)
  8623  069A  0084               	movwf	4
  8624  069B  0185               	clrf	5
  8625  069C  3007               	movlw	7
  8626  069D  0020               	movlb	0	; select bank0
  8627  069E  00B5               	movwf	??_Save_Write_time
  8628  069F                     u472m0:	
  8629  069F  0012               	moviw fsr0++
  8630  06A0  001E               	movwi fsr1++
  8631  06A1  0BB5               	decfsz	??_Save_Write_time,f
  8632  06A2  2E9F               	goto	u472m0
  8633                           
  8634                           ;save.c: 199: Save_Write_word( rtc_tm.years);
  8635  06A3  0021               	movlb	1	; select bank1
  8636  06A4  0855               	movf	(_rtc_tm^(0+128)+6),w
  8637  06A5  0020               	movlb	0	; select bank0
  8638  06A6  00B5               	movwf	??_Save_Write_time
  8639  06A7  01B6               	clrf	??_Save_Write_time+1
  8640  06A8  0835               	movf	??_Save_Write_time,w
  8641  06A9  00B3               	movwf	Save_Write_word@data
  8642  06AA  0836               	movf	??_Save_Write_time+1,w
  8643  06AB  00B4               	movwf	Save_Write_word@data+1
  8644  06AC  3189  216F  3186   	fcall	_Save_Write_word
  8645                           
  8646                           ;save.c: 200: Save_Write_word( rtc_tm.month);
  8647  06AF  0021               	movlb	1	; select bank1
  8648  06B0  0854               	movf	(_rtc_tm^(0+128)+5),w
  8649  06B1  0020               	movlb	0	; select bank0
  8650  06B2  00B5               	movwf	??_Save_Write_time
  8651  06B3  01B6               	clrf	??_Save_Write_time+1
  8652  06B4  0835               	movf	??_Save_Write_time,w
  8653  06B5  00B3               	movwf	Save_Write_word@data
  8654  06B6  0836               	movf	??_Save_Write_time+1,w
  8655  06B7  00B4               	movwf	Save_Write_word@data+1
  8656  06B8  3189  216F  3186   	fcall	_Save_Write_word
  8657                           
  8658                           ;save.c: 201: Save_Write_word( rtc_tm.date);
  8659  06BB  0021               	movlb	1	; select bank1
  8660  06BC  0853               	movf	(_rtc_tm^(0+128)+4),w
  8661  06BD  0020               	movlb	0	; select bank0
  8662  06BE  00B5               	movwf	??_Save_Write_time
  8663  06BF  01B6               	clrf	??_Save_Write_time+1
  8664  06C0  0835               	movf	??_Save_Write_time,w
  8665  06C1  00B3               	movwf	Save_Write_word@data
  8666  06C2  0836               	movf	??_Save_Write_time+1,w
  8667  06C3  00B4               	movwf	Save_Write_word@data+1
  8668  06C4  3189  216F  3186   	fcall	_Save_Write_word
  8669                           
  8670                           ;save.c: 202: Save_Write_word( rtc_tm.hours);
  8671  06C7  0021               	movlb	1	; select bank1
  8672  06C8  0851               	movf	(_rtc_tm^(0+128)+2),w
  8673  06C9  0020               	movlb	0	; select bank0
  8674  06CA  00B5               	movwf	??_Save_Write_time
  8675  06CB  01B6               	clrf	??_Save_Write_time+1
  8676  06CC  0835               	movf	??_Save_Write_time,w
  8677  06CD  00B3               	movwf	Save_Write_word@data
  8678  06CE  0836               	movf	??_Save_Write_time+1,w
  8679  06CF  00B4               	movwf	Save_Write_word@data+1
  8680  06D0  3189  216F  3186   	fcall	_Save_Write_word
  8681                           
  8682                           ;save.c: 203: Save_Write_word( rtc_tm.minutes);
  8683  06D3  0021               	movlb	1	; select bank1
  8684  06D4  0850               	movf	(_rtc_tm^(0+128)+1),w
  8685  06D5  0020               	movlb	0	; select bank0
  8686  06D6  00B5               	movwf	??_Save_Write_time
  8687  06D7  01B6               	clrf	??_Save_Write_time+1
  8688  06D8  0835               	movf	??_Save_Write_time,w
  8689  06D9  00B3               	movwf	Save_Write_word@data
  8690  06DA  0836               	movf	??_Save_Write_time+1,w
  8691  06DB  00B4               	movwf	Save_Write_word@data+1
  8692  06DC  3189  216F  3186   	fcall	_Save_Write_word
  8693                           
  8694                           ;save.c: 204: Save_Write_word( rtc_tm.seconds);
  8695  06DF  0021               	movlb	1	; select bank1
  8696  06E0  084F               	movf	_rtc_tm^(0+128),w
  8697  06E1  0020               	movlb	0	; select bank0
  8698  06E2  00B5               	movwf	??_Save_Write_time
  8699  06E3  01B6               	clrf	??_Save_Write_time+1
  8700  06E4  0835               	movf	??_Save_Write_time,w
  8701  06E5  00B3               	movwf	Save_Write_word@data
  8702  06E6  0836               	movf	??_Save_Write_time+1,w
  8703  06E7  00B4               	movwf	Save_Write_word@data+1
  8704  06E8  3189  216F  3186   	fcall	_Save_Write_word
  8705                           
  8706                           ;save.c: 205: Save_Write_word( rtc_tm.wday);
  8707  06EB  0021               	movlb	1	; select bank1
  8708  06EC  0852               	movf	(_rtc_tm^(0+128)+3),w
  8709  06ED  0020               	movlb	0	; select bank0
  8710  06EE  00B5               	movwf	??_Save_Write_time
  8711  06EF  01B6               	clrf	??_Save_Write_time+1
  8712  06F0  0835               	movf	??_Save_Write_time,w
  8713  06F1  00B3               	movwf	Save_Write_word@data
  8714  06F2  0836               	movf	??_Save_Write_time+1,w
  8715  06F3  00B4               	movwf	Save_Write_word@data+1
  8716  06F4  3189  216F         	fcall	_Save_Write_word
  8717  06F6  0008               	return
  8718  06F7                     __end_of_Save_Write_time:	
  8719                           
  8720                           	psect	text44
  8721  096F                     __ptext44:	
  8722 ;; *************** function _Save_Write_word *****************
  8723 ;; Defined at:
  8724 ;;		line 181 in file "mcc_generated_files/save.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;  data            2   19[BANK0 ] unsigned int 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;Total ram usage:        3 bytes
  8743 ;; Hardware stack levels used:    1
  8744 ;; Hardware stack levels required when called:    6
  8745 ;; This function calls:
  8746 ;;		_FLASH_WriteWord
  8747 ;; This function is called by:
  8748 ;;		_tc_temperature_trans
  8749 ;;		_Save_process
  8750 ;;		_Save_Write_time
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _Save_Write_word
  8756  096F                     _Save_Write_word:	
  8757                           
  8758                           ;save.c: 183: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  8759                           
  8760                           ;incstack = 0
  8761                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8762  096F  0020               	movlb	0	; select bank0
  8763  0970  0863               	movf	_Cur_Save_Index+1,w
  8764  0971  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  8765  0972  0862               	movf	_Cur_Save_Index,w
  8766  0973  00AA               	movwf	FLASH_WriteWord@flashAddr
  8767  0974  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  8768  0975  00F7               	movwf	??_Save_Write_word
  8769  0976  0877               	movf	??_Save_Write_word,w
  8770  0977  00AC               	movwf	FLASH_WriteWord@ramBuf
  8771  0978  0834               	movf	Save_Write_word@data+1,w
  8772  0979  00AE               	movwf	FLASH_WriteWord@word+1
  8773  097A  0833               	movf	Save_Write_word@data,w
  8774  097B  00AD               	movwf	FLASH_WriteWord@word
  8775  097C  318D  25CB         	fcall	_FLASH_WriteWord
  8776                           
  8777                           ;save.c: 184: Cur_Save_Index++;
  8778  097E  3001               	movlw	1
  8779  097F  0020               	movlb	0	; select bank0
  8780  0980  07E2               	addwf	_Cur_Save_Index,f
  8781  0981  3000               	movlw	0
  8782  0982  3DE3               	addwfc	_Cur_Save_Index+1,f
  8783  0983  0008               	return
  8784  0984                     __end_of_Save_Write_word:	
  8785                           
  8786                           	psect	text45
  8787  0DCB                     __ptext45:	
  8788 ;; *************** function _FLASH_WriteWord *****************
  8789 ;; Defined at:
  8790 ;;		line 74 in file "mcc_generated_files/memory.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  8793 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  8794 ;;		 -> Flash_buff(64), 
  8795 ;;  word            2   13[BANK0 ] unsigned int 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  8798 ;;  i               1   18[BANK0 ] unsigned char 
  8799 ;;  offset          1   15[BANK0 ] unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8809 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;Total ram usage:       10 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    5
  8816 ;; This function calls:
  8817 ;;		_FLASH_ReadWord
  8818 ;;		_FLASH_WriteBlock
  8819 ;; This function is called by:
  8820 ;;		_Write_Flash_head
  8821 ;;		_Write_Flash_finish
  8822 ;;		_Save_Write_word
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           
  8827                           ;psect for function _FLASH_WriteWord
  8828  0DCB                     _FLASH_WriteWord:	
  8829                           
  8830                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8831                           
  8832                           ;incstack = 0
  8833                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8834  0DCB  30E0               	movlw	224
  8835  0DCC  0020               	movlb	0	; select bank0
  8836  0DCD  052A               	andwf	FLASH_WriteWord@flashAddr,w
  8837  0DCE  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  8838  0DCF  303F               	movlw	63
  8839  0DD0  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  8840  0DD1  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  8841                           
  8842                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  8843  0DD2  082A               	movf	FLASH_WriteWord@flashAddr,w
  8844  0DD3  391F               	andlw	31
  8845  0DD4  00F6               	movwf	??_FLASH_WriteWord
  8846  0DD5  0876               	movf	??_FLASH_WriteWord,w
  8847  0DD6  00AF               	movwf	FLASH_WriteWord@offset
  8848                           
  8849                           ;memory.c: 77: uint8_t i;
  8850                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  8851  0DD7  01B2               	clrf	FLASH_WriteWord@i
  8852  0DD8  3020               	movlw	32
  8853  0DD9  0232               	subwf	FLASH_WriteWord@i,w
  8854  0DDA  1803               	btfsc	3,0
  8855  0DDB  2DFA               	goto	l4324
  8856  0DDC                     l4318:	
  8857                           
  8858                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  8859  0DDC  0832               	movf	FLASH_WriteWord@i,w
  8860  0DDD  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  8861  0DDE  00F3               	movwf	FLASH_ReadWord@flashAddr
  8862  0DDF  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8863  0DE0  1803               	skipnc
  8864  0DE1  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  8865  0DE2  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  8866  0DE3  3189  21FB  318D   	fcall	_FLASH_ReadWord
  8867  0DE6  0020               	movlb	0	; select bank0
  8868  0DE7  3532               	lslf	FLASH_WriteWord@i,w
  8869  0DE8  072C               	addwf	FLASH_WriteWord@ramBuf,w
  8870  0DE9  00F6               	movwf	??_FLASH_WriteWord
  8871  0DEA  0876               	movf	??_FLASH_WriteWord,w
  8872  0DEB  0086               	movwf	6
  8873  0DEC  3001               	movlw	1	; select bank2/3
  8874  0DED  0087               	movwf	7
  8875  0DEE  0873               	movf	?_FLASH_ReadWord,w
  8876  0DEF  3FC0               	movwi [0]fsr1
  8877  0DF0  0874               	movf	?_FLASH_ReadWord+1,w
  8878  0DF1  3FC1               	movwi [1]fsr1
  8879  0DF2  3001               	movlw	1
  8880  0DF3  00F6               	movwf	??_FLASH_WriteWord
  8881  0DF4  0876               	movf	??_FLASH_WriteWord,w
  8882  0DF5  07B2               	addwf	FLASH_WriteWord@i,f
  8883  0DF6  3020               	movlw	32
  8884  0DF7  0232               	subwf	FLASH_WriteWord@i,w
  8885  0DF8  1C03               	skipc
  8886  0DF9  2DDC               	goto	l4318
  8887  0DFA                     l4324:	
  8888                           
  8889                           ;memory.c: 82: }
  8890                           ;memory.c: 85: ramBuf[offset] = word;
  8891  0DFA  352F               	lslf	FLASH_WriteWord@offset,w
  8892  0DFB  072C               	addwf	FLASH_WriteWord@ramBuf,w
  8893  0DFC  00F6               	movwf	??_FLASH_WriteWord
  8894  0DFD  0876               	movf	??_FLASH_WriteWord,w
  8895  0DFE  0086               	movwf	6
  8896  0DFF  3001               	movlw	1	; select bank2/3
  8897  0E00  0087               	movwf	7
  8898  0E01  082D               	movf	FLASH_WriteWord@word,w
  8899  0E02  3FC0               	movwi [0]fsr1
  8900  0E03  082E               	movf	FLASH_WriteWord@word+1,w
  8901  0E04  3FC1               	movwi [1]fsr1
  8902                           
  8903                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  8904  0E05  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  8905  0E06  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  8906  0E07  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  8907  0E08  00A0               	movwf	FLASH_WriteBlock@writeAddr
  8908  0E09  082C               	movf	FLASH_WriteWord@ramBuf,w
  8909  0E0A  00F6               	movwf	??_FLASH_WriteWord
  8910  0E0B  0876               	movf	??_FLASH_WriteWord,w
  8911  0E0C  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  8912  0E0D  3186  26F7         	fcall	_FLASH_WriteBlock
  8913  0E0F  0008               	return
  8914  0E10                     __end_of_FLASH_WriteWord:	
  8915                           
  8916                           	psect	text46
  8917  06F7                     __ptext46:	
  8918 ;; *************** function _FLASH_WriteBlock *****************
  8919 ;; Defined at:
  8920 ;;		line 91 in file "mcc_generated_files/memory.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  8923 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  8924 ;;		 -> Flash_buff(64), 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  8927 ;;  i               1    9[BANK0 ] unsigned char 
  8928 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      char 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:       10 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    4
  8945 ;; This function calls:
  8946 ;;		_FLASH_EraseBlock
  8947 ;; This function is called by:
  8948 ;;		_FLASH_WriteWord
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function _FLASH_WriteBlock
  8954  06F7                     _FLASH_WriteBlock:	
  8955                           
  8956                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8960  06F7  30E0               	movlw	224
  8961  06F8  0020               	movlb	0	; select bank0
  8962  06F9  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  8963  06FA  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  8964  06FB  303F               	movlw	63
  8965  06FC  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  8966  06FD  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  8967                           
  8968                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  8969  06FE  3000               	movlw	0
  8970  06FF  1B8B               	btfsc	11,7	;volatile
  8971  0700  3001               	movlw	1
  8972  0701  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  8973                           
  8974                           ;memory.c: 94: uint8_t i;
  8975                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  8976  0702  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  8977  0703  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  8978  0704  1D03               	skipz
  8979  0705  2F08               	goto	u3525
  8980  0706  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  8981  0707  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  8982  0708                     u3525:	
  8983  0708  1D03               	btfss	3,2
  8984  0709  0008               	return
  8985                           
  8986                           ;memory.c: 99: }
  8987                           ;memory.c: 101: INTCONbits.GIE = 0;
  8988                           
  8989                           ;memory.c: 98: return -1;
  8990                           ;	Return value of _FLASH_WriteBlock is never used
  8991  070A  138B               	bcf	11,7	;volatile
  8992                           
  8993                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  8994  070B  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  8995  070C  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  8996  070D  0820               	movf	FLASH_WriteBlock@writeAddr,w
  8997  070E  00F3               	movwf	FLASH_EraseBlock@startAddr
  8998  070F  318A  2299  3186   	fcall	_FLASH_EraseBlock
  8999                           
  9000                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  9001  0712  0023               	movlb	3	; select bank3
  9002  0713  1315               	bcf	21,6	;volatile
  9003                           
  9004                           ;memory.c: 108: PMCON1bits.WREN = 1;
  9005  0714  1515               	bsf	21,2	;volatile
  9006                           
  9007                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  9008  0715  1695               	bsf	21,5	;volatile
  9009                           
  9010                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  9011  0716  0020               	movlb	0	; select bank0
  9012  0717  01A9               	clrf	FLASH_WriteBlock@i
  9013  0718  3020               	movlw	32
  9014  0719  0229               	subwf	FLASH_WriteBlock@i,w
  9015  071A  1803               	btfsc	3,0
  9016  071B  2F59               	goto	l166
  9017  071C                     l4212:	
  9018                           
  9019                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  9020  071C  0820               	movf	FLASH_WriteBlock@writeAddr,w
  9021  071D  0023               	movlb	3	; select bank3
  9022  071E  0091               	movwf	17	;volatile
  9023                           
  9024                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  9025  071F  0020               	movlb	0	; select bank0
  9026  0720  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  9027  0721  0023               	movlb	3	; select bank3
  9028  0722  0092               	movwf	18	;volatile
  9029                           
  9030                           ;memory.c: 118: PMDATL = flashWordArray[i];
  9031  0723  0020               	movlb	0	; select bank0
  9032  0724  3529               	lslf	FLASH_WriteBlock@i,w
  9033  0725  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  9034  0726  00A3               	movwf	??_FLASH_WriteBlock
  9035  0727  0823               	movf	??_FLASH_WriteBlock,w
  9036  0728  0086               	movwf	6
  9037  0729  3001               	movlw	1	; select bank2/3
  9038  072A  0087               	movwf	7
  9039  072B  0801               	movf	1,w
  9040  072C  0023               	movlb	3	; select bank3
  9041  072D  0093               	movwf	19	;volatile
  9042                           
  9043                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  9044  072E  0020               	movlb	0	; select bank0
  9045  072F  3529               	lslf	FLASH_WriteBlock@i,w
  9046  0730  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  9047  0731  00A3               	movwf	??_FLASH_WriteBlock
  9048  0732  0823               	movf	??_FLASH_WriteBlock,w
  9049  0733  0086               	movwf	6
  9050  0734  3001               	movlw	1	; select bank2/3
  9051  0735  0087               	movwf	7
  9052  0736  3F40               	moviw [0]fsr1
  9053  0737  00A4               	movwf	??_FLASH_WriteBlock+1
  9054  0738  3F41               	moviw [1]fsr1
  9055  0739  00A5               	movwf	??_FLASH_WriteBlock+2
  9056  073A  0825               	movf	??_FLASH_WriteBlock+2,w
  9057  073B  0023               	movlb	3	; select bank3
  9058  073C  0094               	movwf	20	;volatile
  9059                           
  9060                           ;memory.c: 121: if (i == (32 - 1)) {
  9061  073D  301F               	movlw	31
  9062  073E  0020               	movlb	0	; select bank0
  9063  073F  0629               	xorwf	FLASH_WriteBlock@i,w
  9064  0740  1D03               	btfss	3,2
  9065  0741  2F44               	goto	l4224
  9066                           
  9067                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  9068  0742  0023               	movlb	3	; select bank3
  9069  0743  1295               	bcf	21,5	;volatile
  9070  0744                     l4224:	
  9071                           
  9072                           ;memory.c: 124: }
  9073                           ;memory.c: 126: PMCON2 = 0x55;
  9074  0744  3055               	movlw	85
  9075  0745  0023               	movlb	3	; select bank3
  9076  0746  0096               	movwf	22	;volsfr
  9077                           
  9078                           ;memory.c: 127: PMCON2 = 0xAA;
  9079  0747  30AA               	movlw	170
  9080  0748  0096               	movwf	22	;volsfr
  9081                           
  9082                           ;memory.c: 128: PMCON1bits.WR = 1;
  9083  0749  1495               	bsf	21,1	;volatile
  9084                           
  9085                           ;memory.c: 129: __nop();
  9086  074A  0000               	nop
  9087                           
  9088                           ;memory.c: 130: __nop();
  9089  074B  0000               	nop
  9090                           
  9091                           ;memory.c: 132: writeAddr++;
  9092  074C  3001               	movlw	1
  9093  074D  0020               	movlb	0	; select bank0
  9094  074E  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  9095  074F  3000               	movlw	0
  9096  0750  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  9097  0751  3001               	movlw	1
  9098  0752  00A3               	movwf	??_FLASH_WriteBlock
  9099  0753  0823               	movf	??_FLASH_WriteBlock,w
  9100  0754  07A9               	addwf	FLASH_WriteBlock@i,f
  9101  0755  3020               	movlw	32
  9102  0756  0229               	subwf	FLASH_WriteBlock@i,w
  9103  0757  1C03               	skipc
  9104  0758  2F1C               	goto	l4212
  9105  0759                     l166:	
  9106                           
  9107                           ;memory.c: 133: }
  9108                           ;memory.c: 135: PMCON1bits.WREN = 0;
  9109  0759  0023               	movlb	3	; select bank3
  9110  075A  1115               	bcf	21,2	;volatile
  9111                           
  9112                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  9113  075B  0020               	movlb	0	; select bank0
  9114  075C  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  9115  075D  1C03               	skipc
  9116  075E  138B               	bcf	11,7	;volatile
  9117  075F  1803               	skipnc
  9118  0760  178B               	bsf	11,7	;volatile
  9119  0761  0008               	return
  9120  0762                     __end_of_FLASH_WriteBlock:	
  9121                           ;memory.c: 138: return 0;
  9122                           ;	Return value of _FLASH_WriteBlock is never used
  9123                           
  9124                           
  9125                           	psect	text47
  9126  0A99                     __ptext47:	
  9127 ;; *************** function _FLASH_EraseBlock *****************
  9128 ;; Defined at:
  9129 ;;		line 141 in file "mcc_generated_files/memory.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  startAddr       2    3[COMMON] unsigned int 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      void 
  9136 ;; Registers used:
  9137 ;;		wreg, status,2, status,0
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        3 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    3
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_FLASH_WriteBlock
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _FLASH_EraseBlock
  9159  0A99                     _FLASH_EraseBlock:	
  9160                           
  9161                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  9162                           
  9163                           ;incstack = 0
  9164                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  9165  0A99  3000               	movlw	0
  9166  0A9A  1B8B               	btfsc	11,7	;volatile
  9167  0A9B  3001               	movlw	1
  9168  0A9C  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  9169                           
  9170                           ;memory.c: 145: INTCONbits.GIE = 0;
  9171  0A9D  138B               	bcf	11,7	;volatile
  9172                           
  9173                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  9174  0A9E  0873               	movf	FLASH_EraseBlock@startAddr,w
  9175  0A9F  0023               	movlb	3	; select bank3
  9176  0AA0  0091               	movwf	17	;volatile
  9177                           
  9178                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  9179  0AA1  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  9180  0AA2  0092               	movwf	18	;volatile
  9181                           
  9182                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  9183  0AA3  1315               	bcf	21,6	;volatile
  9184                           
  9185                           ;memory.c: 153: PMCON1bits.FREE = 1;
  9186  0AA4  1615               	bsf	21,4	;volatile
  9187                           
  9188                           ;memory.c: 154: PMCON1bits.WREN = 1;
  9189  0AA5  1515               	bsf	21,2	;volatile
  9190                           
  9191                           ;memory.c: 157: PMCON2 = 0x55;
  9192  0AA6  3055               	movlw	85
  9193  0AA7  0096               	movwf	22	;volsfr
  9194                           
  9195                           ;memory.c: 158: PMCON2 = 0xAA;
  9196  0AA8  30AA               	movlw	170
  9197  0AA9  0096               	movwf	22	;volsfr
  9198                           
  9199                           ;memory.c: 159: PMCON1bits.WR = 1;
  9200  0AAA  1495               	bsf	21,1	;volatile
  9201                           
  9202                           ;memory.c: 160: __nop();
  9203  0AAB  0000               	nop
  9204                           
  9205                           ;memory.c: 161: __nop();
  9206  0AAC  0000               	nop
  9207                           
  9208                           ;memory.c: 163: PMCON1bits.WREN = 0;
  9209  0AAD  0023               	movlb	3	; select bank3
  9210  0AAE  1115               	bcf	21,2	;volatile
  9211                           
  9212                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  9213  0AAF  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  9214  0AB0  1C03               	skipc
  9215  0AB1  138B               	bcf	11,7	;volatile
  9216  0AB2  1803               	skipnc
  9217  0AB3  178B               	bsf	11,7	;volatile
  9218  0AB4  0008               	return
  9219  0AB5                     __end_of_FLASH_EraseBlock:	
  9220                           
  9221                           	psect	text48
  9222  09FB                     __ptext48:	
  9223 ;; *************** function _FLASH_ReadWord *****************
  9224 ;; Defined at:
  9225 ;;		line 58 in file "mcc_generated_files/memory.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  flashAddr       2    3[COMMON] unsigned int 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2    3[COMMON] unsigned int 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;Total ram usage:        3 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    3
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_FLASH_WriteWord
  9250 ;;		_Key_Process
  9251 ;;		_Serach_Flash_Head
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function _FLASH_ReadWord
  9257  09FB                     _FLASH_ReadWord:	
  9258                           
  9259                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  9260                           
  9261                           ;incstack = 0
  9262                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  9263  09FB  3000               	movlw	0
  9264  09FC  1B8B               	btfsc	11,7	;volatile
  9265  09FD  3001               	movlw	1
  9266  09FE  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  9267                           
  9268                           ;memory.c: 61: INTCONbits.GIE = 0;
  9269  09FF  138B               	bcf	11,7	;volatile
  9270                           
  9271                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  9272  0A00  0873               	movf	FLASH_ReadWord@flashAddr,w
  9273  0A01  0023               	movlb	3	; select bank3
  9274  0A02  0091               	movwf	17	;volatile
  9275                           
  9276                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  9277  0A03  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  9278  0A04  0092               	movwf	18	;volatile
  9279                           
  9280                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  9281  0A05  1315               	bcf	21,6	;volatile
  9282                           
  9283                           ;memory.c: 66: PMCON1bits.RD = 1;
  9284  0A06  1415               	bsf	21,0	;volatile
  9285                           
  9286                           ;memory.c: 67: __nop();
  9287  0A07  0000               	nop
  9288                           
  9289                           ;memory.c: 68: __nop();
  9290  0A08  0000               	nop
  9291                           
  9292                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  9293  0A09  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  9294  0A0A  1C03               	skipc
  9295  0A0B  138B               	bcf	11,7	;volatile
  9296  0A0C  1803               	skipnc
  9297  0A0D  178B               	bsf	11,7	;volatile
  9298                           
  9299                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  9300  0A0E  0023               	movlb	3	; select bank3
  9301  0A0F  0814               	movf	20,w	;volatile
  9302  0A10  00F4               	movwf	?_FLASH_ReadWord+1
  9303  0A11  0813               	movf	19,w	;volatile
  9304  0A12  00F3               	movwf	?_FLASH_ReadWord
  9305  0A13  0008               	return
  9306  0A14                     __end_of_FLASH_ReadWord:	
  9307                           
  9308                           	psect	text49
  9309  0F9C                     __ptext49:	
  9310 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  9311 ;; Defined at:
  9312 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  p               1    wreg     PTR struct bq32k_regs
  9315 ;;		 -> rtc_tm(7), 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  9318 ;;		 -> rtc_tm(7), 
  9319 ;;  temp           10    5[BANK0 ] unsigned char [10]
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  1    wreg      void 
  9322 ;; Registers used:
  9323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;Total ram usage:       13 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:    5
  9336 ;; This function calls:
  9337 ;;		_I2C_Read_Buffer
  9338 ;;		_bcd2bin
  9339 ;; This function is called by:
  9340 ;;		_time_Display
  9341 ;;		_Calculate_Time
  9342 ;;		_Save_Write_time
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _Bq32k_Rtc_Read_Time
  9348  0F9C                     _Bq32k_Rtc_Read_Time:	
  9349                           
  9350                           ;incstack = 0
  9351                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9352                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  9353  0F9C  0020               	movlb	0	; select bank0
  9354  0F9D  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  9355                           
  9356                           ;bq32k.c: 32: unsigned char temp[10] ;
  9357                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  9358  0F9E  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  9359  0F9F  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9360  0FA0  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9361  0FA1  00F6               	movwf	I2C_Read_Buffer@buff
  9362  0FA2  3007               	movlw	7
  9363  0FA3  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  9364  0FA4  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  9365  0FA5  00F7               	movwf	I2C_Read_Buffer@Length
  9366  0FA6  3000               	movlw	0
  9367  0FA7  3186  260D  318F   	fcall	_I2C_Read_Buffer
  9368                           
  9369                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  9370  0FAA  0020               	movlb	0	; select bank0
  9371  0FAB  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  9372  0FAC  397F               	andlw	127
  9373  0FAD  3189  215A  318F   	fcall	_bcd2bin
  9374  0FB0  0020               	movlb	0	; select bank0
  9375  0FB1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9376  0FB2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9377  0FB3  0086               	movwf	6
  9378  0FB4  0187               	clrf	7
  9379  0FB5  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9380  0FB6  0081               	movwf	1
  9381                           
  9382                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  9383  0FB7  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  9384  0FB8  397F               	andlw	127
  9385  0FB9  3189  215A  318F   	fcall	_bcd2bin
  9386  0FBC  0020               	movlb	0	; select bank0
  9387  0FBD  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9388  0FBE  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  9389  0FBF  0086               	movwf	6
  9390  0FC0  0187               	clrf	7
  9391  0FC1  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9392  0FC2  0081               	movwf	1
  9393                           
  9394                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  9395  0FC3  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  9396  0FC4  393F               	andlw	63
  9397  0FC5  3189  215A  318F   	fcall	_bcd2bin
  9398  0FC8  0020               	movlb	0	; select bank0
  9399  0FC9  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9400  0FCA  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9401  0FCB  3E02               	addlw	2
  9402  0FCC  0086               	movwf	6
  9403  0FCD  0187               	clrf	7
  9404  0FCE  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9405  0FCF  0081               	movwf	1
  9406                           
  9407                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  9408  0FD0  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  9409  0FD1  3189  215A  318F   	fcall	_bcd2bin
  9410  0FD4  0020               	movlb	0	; select bank0
  9411  0FD5  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9412  0FD6  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9413  0FD7  3E03               	addlw	3
  9414  0FD8  0086               	movwf	6
  9415  0FD9  0187               	clrf	7
  9416  0FDA  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9417  0FDB  0081               	movwf	1
  9418                           
  9419                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  9420  0FDC  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  9421  0FDD  3189  215A  318F   	fcall	_bcd2bin
  9422  0FE0  0020               	movlb	0	; select bank0
  9423  0FE1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9424  0FE2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9425  0FE3  3E04               	addlw	4
  9426  0FE4  0086               	movwf	6
  9427  0FE5  0187               	clrf	7
  9428  0FE6  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9429  0FE7  0081               	movwf	1
  9430                           
  9431                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  9432  0FE8  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  9433  0FE9  3189  215A  318F   	fcall	_bcd2bin
  9434  0FEC  0020               	movlb	0	; select bank0
  9435  0FED  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9436  0FEE  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9437  0FEF  3E05               	addlw	5
  9438  0FF0  0086               	movwf	6
  9439  0FF1  0187               	clrf	7
  9440  0FF2  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9441  0FF3  0081               	movwf	1
  9442                           
  9443                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  9444  0FF4  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  9445  0FF5  3189  215A         	fcall	_bcd2bin
  9446  0FF7  0020               	movlb	0	; select bank0
  9447  0FF8  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  9448  0FF9  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  9449  0FFA  3E06               	addlw	6
  9450  0FFB  0086               	movwf	6
  9451  0FFC  0187               	clrf	7
  9452  0FFD  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  9453  0FFE  0081               	movwf	1
  9454  0FFF  0008               	return
  9455  1000                     __end_of_Bq32k_Rtc_Read_Time:	
  9456                           
  9457                           	psect	text50
  9458  095A                     __ptext50:	
  9459 ;; *************** function _bcd2bin *****************
  9460 ;; Defined at:
  9461 ;;		line 63 in file "mcc_generated_files/bq32k.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  val             1    wreg     unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  val             1    7[COMMON] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      unsigned char 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, pclath, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;Total ram usage:        4 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    4
  9482 ;; This function calls:
  9483 ;;		___bmul
  9484 ;; This function is called by:
  9485 ;;		_Bq32k_Rtc_Read_Time
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           
  9490                           ;psect for function _bcd2bin
  9491  095A                     _bcd2bin:	
  9492                           
  9493                           ;incstack = 0
  9494                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  9495                           ;bcd2bin@val stored from wreg
  9496  095A  00F7               	movwf	bcd2bin@val
  9497                           
  9498                           ;bq32k.c: 65: return (val & 0x0f) + (val >> 4) * 10;
  9499  095B  300F               	movlw	15
  9500  095C  0577               	andwf	bcd2bin@val,w
  9501  095D  0020               	movlb	0	; select bank0
  9502  095E  00A0               	movwf	??_bcd2bin
  9503  095F  300A               	movlw	10
  9504  0960  00A1               	movwf	??_bcd2bin+1
  9505  0961  0821               	movf	??_bcd2bin+1,w
  9506  0962  00F3               	movwf	___bmul@multiplicand
  9507  0963  0877               	movf	bcd2bin@val,w
  9508  0964  00A2               	movwf	??_bcd2bin+2
  9509  0965  3004               	movlw	4
  9510  0966                     u3605:	
  9511  0966  36A2               	lsrf	??_bcd2bin+2,f
  9512  0967  0B89               	decfsz	9,f
  9513  0968  2966               	goto	u3605
  9514  0969  0822               	movf	??_bcd2bin+2,w
  9515  096A  3189  2138         	fcall	___bmul
  9516  096C  0020               	movlb	0	; select bank0
  9517  096D  0720               	addwf	??_bcd2bin,w
  9518  096E  0008               	return
  9519  096F                     __end_of_bcd2bin:	
  9520                           
  9521                           	psect	text51
  9522  0938                     __ptext51:	
  9523 ;; *************** function ___bmul *****************
  9524 ;; Defined at:
  9525 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  multiplier      1    wreg     unsigned char 
  9528 ;;  multiplicand    1    3[COMMON] unsigned char 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;  multiplier      1    6[COMMON] unsigned char 
  9531 ;;  product         1    5[COMMON] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      unsigned char 
  9534 ;; Registers used:
  9535 ;;		wreg, status,2, status,0
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;Total ram usage:        4 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    3
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_bcd2bin
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function ___bmul
  9557  0938                     ___bmul:	
  9558                           
  9559                           ;incstack = 0
  9560                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9561                           ;___bmul@multiplier stored from wreg
  9562  0938  00F6               	movwf	___bmul@multiplier
  9563  0939  01F5               	clrf	___bmul@product
  9564  093A                     l4156:	
  9565  093A  1C76               	btfss	___bmul@multiplier,0
  9566  093B  2940               	goto	l4160
  9567  093C  0873               	movf	___bmul@multiplicand,w
  9568  093D  00F4               	movwf	??___bmul
  9569  093E  0874               	movf	??___bmul,w
  9570  093F  07F5               	addwf	___bmul@product,f
  9571  0940                     l4160:	
  9572  0940  1003               	clrc
  9573  0941  0DF3               	rlf	___bmul@multiplicand,f
  9574  0942  1003               	clrc
  9575  0943  0CF6               	rrf	___bmul@multiplier,f
  9576  0944  0876               	movf	___bmul@multiplier,w
  9577  0945  1D03               	btfss	3,2
  9578  0946  293A               	goto	l4156
  9579  0947  0875               	movf	___bmul@product,w
  9580  0948  0008               	return
  9581  0949                     __end_of___bmul:	
  9582                           
  9583                           	psect	text52
  9584  060D                     __ptext52:	
  9585 ;; *************** function _I2C_Read_Buffer *****************
  9586 ;; Defined at:
  9587 ;;		line 120 in file "mcc_generated_files/i2c.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  ADD             1    wreg     unsigned char 
  9590 ;;  buff            1    6[COMMON] PTR unsigned char 
  9591 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  9592 ;;  Length          1    7[COMMON] unsigned char 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  ADD             1    1[BANK0 ] unsigned char 
  9595 ;;  Flag            1    2[BANK0 ] unsigned char 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      unsigned char 
  9598 ;; Registers used:
  9599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9609 ;;Total ram usage:        5 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:    4
  9612 ;; This function calls:
  9613 ;;		_I2C_Receive_Byte
  9614 ;;		_I2C_Send_Byte
  9615 ;;		_I2C_Start
  9616 ;;		_I2C_Stop
  9617 ;; This function is called by:
  9618 ;;		_Bq32k_Rtc_Read_Time
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _I2C_Read_Buffer
  9624  060D                     _I2C_Read_Buffer:	
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9628                           ;I2C_Read_Buffer@ADD stored from wreg
  9629  060D  0020               	movlb	0	; select bank0
  9630  060E  00A1               	movwf	I2C_Read_Buffer@ADD
  9631                           
  9632                           ;i2c.c: 122: unsigned char Flag=1;
  9633  060F  01A2               	clrf	I2C_Read_Buffer@Flag
  9634  0610  0AA2               	incf	I2C_Read_Buffer@Flag,f
  9635                           
  9636                           ;i2c.c: 124: I2C_Start();
  9637  0611  3189  21C9  3186   	fcall	_I2C_Start
  9638                           
  9639                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  9640  0614  30D0               	movlw	208
  9641  0615  318E  2656  3186   	fcall	_I2C_Send_Byte
  9642  0618  0020               	movlb	0	; select bank0
  9643  0619  00A0               	movwf	??_I2C_Read_Buffer
  9644  061A  0820               	movf	??_I2C_Read_Buffer,w
  9645  061B  00A2               	movwf	I2C_Read_Buffer@Flag
  9646                           
  9647                           ;i2c.c: 127: if(Flag)
  9648  061C  0822               	movf	I2C_Read_Buffer@Flag,w
  9649  061D  1D03               	btfss	3,2
  9650  061E  0008               	return
  9651                           
  9652                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  9653                           
  9654                           ;i2c.c: 128: return 0x01;
  9655                           ;	Return value of _I2C_Read_Buffer is never used
  9656  061F  0821               	movf	I2C_Read_Buffer@ADD,w
  9657  0620  318E  2656  3186   	fcall	_I2C_Send_Byte
  9658  0623  0020               	movlb	0	; select bank0
  9659  0624  00A0               	movwf	??_I2C_Read_Buffer
  9660  0625  0820               	movf	??_I2C_Read_Buffer,w
  9661  0626  00A2               	movwf	I2C_Read_Buffer@Flag
  9662                           
  9663                           ;i2c.c: 131: if(Flag)
  9664  0627  0822               	movf	I2C_Read_Buffer@Flag,w
  9665  0628  1D03               	btfss	3,2
  9666  0629  0008               	return
  9667                           
  9668                           ;i2c.c: 134: I2C_Start();
  9669                           
  9670                           ;i2c.c: 132: return 0x01;
  9671                           ;	Return value of _I2C_Read_Buffer is never used
  9672  062A  3189  21C9  3186   	fcall	_I2C_Start
  9673                           
  9674                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  9675  062D  30D1               	movlw	209
  9676  062E  318E  2656  3186   	fcall	_I2C_Send_Byte
  9677  0631  0020               	movlb	0	; select bank0
  9678  0632  00A0               	movwf	??_I2C_Read_Buffer
  9679  0633  0820               	movf	??_I2C_Read_Buffer,w
  9680  0634  00A2               	movwf	I2C_Read_Buffer@Flag
  9681                           
  9682                           ;i2c.c: 136: if(Flag)
  9683  0635  0822               	movf	I2C_Read_Buffer@Flag,w
  9684  0636  1D03               	btfss	3,2
  9685  0637  0008               	return
  9686  0638                     l4278:	
  9687  0638  3002               	movlw	2
  9688  0639  0277               	subwf	I2C_Read_Buffer@Length,w
  9689  063A  1C03               	btfss	3,0
  9690  063B  2E63               	goto	l4280
  9691                           
  9692                           ;i2c.c: 140: {
  9693                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  9694                           
  9695                           ;i2c.c: 139: while(Length>1)
  9696                           
  9697                           ;i2c.c: 137: return 0x01;
  9698                           ;	Return value of _I2C_Read_Buffer is never used
  9699  063C  318B  23CE  3186   	fcall	_I2C_Receive_Byte
  9700  063F  0020               	movlb	0	; select bank0
  9701  0640  00A0               	movwf	??_I2C_Read_Buffer
  9702  0641  0876               	movf	I2C_Read_Buffer@buff,w
  9703  0642  0086               	movwf	6
  9704  0643  0187               	clrf	7
  9705  0644  0820               	movf	??_I2C_Read_Buffer,w
  9706  0645  0081               	movwf	1
  9707                           
  9708                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  9709  0646  0022               	movlb	2	; select bank2
  9710  0647  108D               	bcf	13,1	;volatile
  9711                           
  9712                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9713  0648  300D               	movlw	13
  9714  0649  0020               	movlb	0	; select bank0
  9715  064A  00A0               	movwf	??_I2C_Read_Buffer
  9716  064B                     u5097:	
  9717  064B  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9718  064C  2E4B               	goto	u5097
  9719                           
  9720                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  9721  064D  0022               	movlb	2	; select bank2
  9722  064E  140D               	bsf	13,0	;volatile
  9723                           
  9724                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9725  064F  300D               	movlw	13
  9726  0650  0020               	movlb	0	; select bank0
  9727  0651  00A0               	movwf	??_I2C_Read_Buffer
  9728  0652                     u5107:	
  9729  0652  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9730  0653  2E52               	goto	u5107
  9731                           
  9732                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  9733  0654  0022               	movlb	2	; select bank2
  9734  0655  100D               	bcf	13,0	;volatile
  9735                           
  9736                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9737  0656  300D               	movlw	13
  9738  0657  0020               	movlb	0	; select bank0
  9739  0658  00A0               	movwf	??_I2C_Read_Buffer
  9740  0659                     u5117:	
  9741  0659  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9742  065A  2E59               	goto	u5117
  9743                           
  9744                           ;i2c.c: 150: buff++;
  9745  065B  3001               	movlw	1
  9746  065C  0020               	movlb	0	; select bank0
  9747  065D  00A0               	movwf	??_I2C_Read_Buffer
  9748  065E  0820               	movf	??_I2C_Read_Buffer,w
  9749  065F  07F6               	addwf	I2C_Read_Buffer@buff,f
  9750                           
  9751                           ;i2c.c: 151: Length--;
  9752  0660  3001               	movlw	1
  9753  0661  02F7               	subwf	I2C_Read_Buffer@Length,f
  9754  0662  2E38               	goto	l4278
  9755  0663                     l4280:	
  9756                           
  9757                           ;i2c.c: 152: }
  9758                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  9759  0663  318B  23CE  3186   	fcall	_I2C_Receive_Byte
  9760  0666  0020               	movlb	0	; select bank0
  9761  0667  00A0               	movwf	??_I2C_Read_Buffer
  9762  0668  0876               	movf	I2C_Read_Buffer@buff,w
  9763  0669  0086               	movwf	6
  9764  066A  0187               	clrf	7
  9765  066B  0820               	movf	??_I2C_Read_Buffer,w
  9766  066C  0081               	movwf	1
  9767                           
  9768                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  9769  066D  0022               	movlb	2	; select bank2
  9770  066E  148D               	bsf	13,1	;volatile
  9771                           
  9772                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9773  066F  300D               	movlw	13
  9774  0670  0020               	movlb	0	; select bank0
  9775  0671  00A0               	movwf	??_I2C_Read_Buffer
  9776  0672                     u5127:	
  9777  0672  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9778  0673  2E72               	goto	u5127
  9779                           
  9780                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  9781  0674  0022               	movlb	2	; select bank2
  9782  0675  140D               	bsf	13,0	;volatile
  9783                           
  9784                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9785  0676  300D               	movlw	13
  9786  0677  0020               	movlb	0	; select bank0
  9787  0678  00A0               	movwf	??_I2C_Read_Buffer
  9788  0679                     u5137:	
  9789  0679  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9790  067A  2E79               	goto	u5137
  9791                           
  9792                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  9793  067B  0022               	movlb	2	; select bank2
  9794  067C  100D               	bcf	13,0	;volatile
  9795                           
  9796                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9797  067D  300D               	movlw	13
  9798  067E  0020               	movlb	0	; select bank0
  9799  067F  00A0               	movwf	??_I2C_Read_Buffer
  9800  0680                     u5147:	
  9801  0680  0BA0               	decfsz	??_I2C_Read_Buffer,f
  9802  0681  2E80               	goto	u5147
  9803                           
  9804                           ;i2c.c: 162: I2C_Stop();
  9805  0682  3189  21E2         	fcall	_I2C_Stop
  9806  0684  0008               	return
  9807  0685                     __end_of_I2C_Read_Buffer:	
  9808                           ;i2c.c: 164: return 0x00;
  9809                           ;	Return value of _I2C_Read_Buffer is never used
  9810                           
  9811                           
  9812                           	psect	text53
  9813  0BCE                     __ptext53:	
  9814 ;; *************** function _I2C_Receive_Byte *****************
  9815 ;; Defined at:
  9816 ;;		line 74 in file "mcc_generated_files/i2c.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  i               1    5[COMMON] unsigned char 
  9821 ;;  Data            1    4[COMMON] unsigned char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      unsigned char 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;Total ram usage:        3 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    3
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_I2C_Read_Buffer
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _I2C_Receive_Byte
  9847  0BCE                     _I2C_Receive_Byte:	
  9848                           
  9849                           ;i2c.c: 76: unsigned char i,Data=0;
  9850                           
  9851                           ;incstack = 0
  9852                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  9853  0BCE  01F4               	clrf	I2C_Receive_Byte@Data
  9854                           
  9855                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  9856  0BCF  0022               	movlb	2	; select bank2
  9857  0BD0  148D               	bsf	13,1	;volatile
  9858                           
  9859                           ;i2c.c: 78: for(i=0;i<8;i++)
  9860  0BD1  01F5               	clrf	I2C_Receive_Byte@i
  9861  0BD2  3008               	movlw	8
  9862  0BD3  0275               	subwf	I2C_Receive_Byte@i,w
  9863  0BD4  1803               	btfsc	3,0
  9864  0BD5  2BF6               	goto	l4142
  9865                           
  9866                           ;i2c.c: 79: {
  9867                           ;i2c.c: 80: Data <<= 1;
  9868  0BD6  1003               	clrc
  9869  0BD7                     L7:	
  9870  0BD7  0DF4               	rlf	I2C_Receive_Byte@Data,f
  9871                           
  9872                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  9873  0BD8  0022               	movlb	2	; select bank2
  9874  0BD9  140D               	bsf	13,0	;volatile
  9875                           
  9876                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9877  0BDA  300D               	movlw	13
  9878  0BDB  00F3               	movwf	??_I2C_Receive_Byte
  9879  0BDC                     u5157:	
  9880  0BDC  0BF3               	decfsz	??_I2C_Receive_Byte,f
  9881  0BDD  2BDC               	goto	u5157
  9882                           
  9883                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  9884  0BDE  0021               	movlb	1	; select bank1
  9885  0BDF  148D               	bsf	13,1	;volatile
  9886                           
  9887                           ;i2c.c: 84: if(RB1)
  9888  0BE0  0020               	movlb	0	; select bank0
  9889  0BE1  1C8D               	btfss	13,1	;volatile
  9890  0BE2  2BE6               	goto	l766
  9891                           
  9892                           ;i2c.c: 85: {
  9893                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  9894  0BE3  0021               	movlb	1	; select bank1
  9895  0BE4  108D               	bcf	13,1	;volatile
  9896                           
  9897                           ;i2c.c: 87: Data |= 0x01;
  9898  0BE5  1474               	bsf	I2C_Receive_Byte@Data,0
  9899  0BE6                     l766:	
  9900                           ;i2c.c: 88: }
  9901                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  9902                           
  9903  0BE6  0021               	movlb	1	; select bank1
  9904  0BE7  108D               	bcf	13,1	;volatile
  9905                           
  9906                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  9907  0BE8  0022               	movlb	2	; select bank2
  9908  0BE9  100D               	bcf	13,0	;volatile
  9909                           
  9910                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  9911  0BEA  300D               	movlw	13
  9912  0BEB  00F3               	movwf	??_I2C_Receive_Byte
  9913  0BEC                     u5167:	
  9914  0BEC  0BF3               	decfsz	??_I2C_Receive_Byte,f
  9915  0BED  2BEC               	goto	u5167
  9916  0BEE  3001               	movlw	1
  9917  0BEF  00F3               	movwf	??_I2C_Receive_Byte
  9918  0BF0  0873               	movf	??_I2C_Receive_Byte,w
  9919  0BF1  07F5               	addwf	I2C_Receive_Byte@i,f
  9920  0BF2  3008               	movlw	8
  9921  0BF3  0275               	subwf	I2C_Receive_Byte@i,w
  9922  0BF4  1C03               	skipc
  9923  0BF5  2BD7               	goto	L7
  9924  0BF6                     l4142:	
  9925                           
  9926                           ;i2c.c: 92: }
  9927                           ;i2c.c: 93: return Data;
  9928  0BF6  0874               	movf	I2C_Receive_Byte@Data,w
  9929  0BF7  0008               	return
  9930  0BF8                     __end_of_I2C_Receive_Byte:	
  9931                           
  9932                           	psect	text54
  9933  0B35                     __ptext54:	
  9934 ;; *************** function _Key_Scan *****************
  9935 ;; Defined at:
  9936 ;;		line 20 in file "mcc_generated_files/key.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  Key_val         1    5[COMMON] unsigned char 
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      unsigned char 
  9943 ;; Registers used:
  9944 ;;		wreg
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9953 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;Total ram usage:        3 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:    3
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_Key_Process
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           
  9965                           ;psect for function _Key_Scan
  9966  0B35                     _Key_Scan:	
  9967                           
  9968                           ;key.c: 22: unsigned char Key_val=0xff;
  9969                           
  9970                           ;incstack = 0
  9971                           ; Regs used in _Key_Scan: [wreg]
  9972  0B35  30FF               	movlw	255
  9973  0B36  00F3               	movwf	??_Key_Scan
  9974  0B37  0873               	movf	??_Key_Scan,w
  9975  0B38  00F5               	movwf	Key_Scan@Key_val
  9976                           
  9977                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
  9978  0B39  0020               	movlb	0	; select bank0
  9979  0B3A  1F8C               	btfss	12,7	;volatile
  9980  0B3B  2B3E               	goto	l4988
  9981  0B3C  1A8D               	btfsc	13,5	;volatile
  9982  0B3D  2B56               	goto	l852
  9983  0B3E                     l4988:	
  9984                           
  9985                           ;key.c: 24: {
  9986                           ;key.c: 25: _delay((unsigned long)((10)*(16000000/4000.0)));
  9987  0B3E  3034               	movlw	52
  9988  0B3F  00F4               	movwf	??_Key_Scan+1
  9989  0B40  30F1               	movlw	241
  9990  0B41  00F3               	movwf	??_Key_Scan
  9991  0B42                     u5177:	
  9992  0B42  0BF3               	decfsz	??_Key_Scan,f
  9993  0B43  2B42               	goto	u5177
  9994  0B44  0BF4               	decfsz	??_Key_Scan+1,f
  9995  0B45  2B42               	goto	u5177
  9996  0B46  3200               	nop2
  9997                           
  9998                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
  9999  0B47  0020               	movlb	0	; select bank0
 10000  0B48  1F8C               	btfss	12,7	;volatile
 10001  0B49  2B4C               	goto	l857
 10002  0B4A  1A8D               	btfsc	13,5	;volatile
 10003  0B4B  2B56               	goto	l852
 10004  0B4C                     l857:	
 10005                           
 10006                           ;key.c: 27: {
 10007                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10008  0B4C  1A8D               	btfsc	13,5	;volatile
 10009  0B4D  2B50               	goto	l858
 10010  0B4E  01F5               	clrf	Key_Scan@Key_val
 10011  0B4F  0AF5               	incf	Key_Scan@Key_val,f
 10012  0B50                     l858:	
 10013                           
 10014                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10015  0B50  1B8C               	btfsc	12,7	;volatile
 10016  0B51  2B56               	goto	l852
 10017  0B52  3002               	movlw	2
 10018  0B53  00F3               	movwf	??_Key_Scan
 10019  0B54  0873               	movf	??_Key_Scan,w
 10020  0B55  00F5               	movwf	Key_Scan@Key_val
 10021  0B56                     l852:	
 10022                           
 10023                           ;key.c: 30: }
 10024                           ;key.c: 31: }
 10025                           ;key.c: 32: return Key_val;
 10026  0B56  0875               	movf	Key_Scan@Key_val,w
 10027  0B57  0008               	return
 10028  0B58                     __end_of_Key_Scan:	
 10029                           
 10030                           	psect	text55
 10031  08DC                     __ptext55:	
 10032 ;; *************** function _EUSART_Write *****************
 10033 ;; Defined at:
 10034 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  txData          1    wreg     unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  txData          1    3[COMMON] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        1 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    3
 10055 ;; This function calls:
 10056 ;;		Nothing
 10057 ;; This function is called by:
 10058 ;;		_Key_Process
 10059 ;;		_EUSART_SendString
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           
 10064                           ;psect for function _EUSART_Write
 10065  08DC                     _EUSART_Write:	
 10066                           
 10067                           ;incstack = 0
 10068                           ; Regs used in _EUSART_Write: [wreg]
 10069                           ;EUSART_Write@txData stored from wreg
 10070  08DC  00F3               	movwf	EUSART_Write@txData
 10071  08DD                     l129:	
 10072                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10073                           
 10074  08DD  0020               	movlb	0	; select bank0
 10075  08DE  1E11               	btfss	17,4	;volatile
 10076  08DF  28DD               	goto	l129
 10077                           
 10078                           ;eusart.c: 93: }
 10079                           ;eusart.c: 95: TXREG = txData;
 10080  08E0  0873               	movf	EUSART_Write@txData,w
 10081  08E1  0023               	movlb	3	; select bank3
 10082  08E2  009A               	movwf	26	;volatile
 10083  08E3  0008               	return
 10084  08E4                     __end_of_EUSART_Write:	
 10085                           
 10086                           	psect	text56
 10087  0A63                     __ptext56:	
 10088 ;; *************** function _Bq32k_Time_Init *****************
 10089 ;; Defined at:
 10090 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;		None
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10095 ;;  time            7    0        struct bq32k_regs
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;Total ram usage:       12 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:    5
 10112 ;; This function calls:
 10113 ;;		_I2C_Send_Buffer
 10114 ;; This function is called by:
 10115 ;;		_main
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _Bq32k_Time_Init
 10121  0A63                     _Bq32k_Time_Init:	
 10122                           
 10123                           ;bq32k.c: 19: bq32k_t time;
 10124                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x40,0x14,0x02,0x04,0x07,0x16 };
 10125                           
 10126                           ;incstack = 0
 10127                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10128  0A63  30DA               	movlw	low Bq32k_Time_Init@F2018
 10129  0A64  0086               	movwf	6
 10130  0A65  3000               	movlw	high Bq32k_Time_Init@F2018
 10131  0A66  0087               	movwf	7
 10132  0A67  3027               	movlw	low Bq32k_Time_Init@temp
 10133  0A68  0084               	movwf	4
 10134  0A69  3000               	movlw	high Bq32k_Time_Init@temp
 10135  0A6A  0085               	movwf	5
 10136  0A6B  300A               	movlw	10
 10137  0A6C  0020               	movlb	0	; select bank0
 10138  0A6D  00A5               	movwf	??_Bq32k_Time_Init
 10139  0A6E                     u4740:	
 10140  0A6E  0016               	moviw fsr1++
 10141  0A6F  001A               	movwi fsr0++
 10142  0A70  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10143  0A71  2A6E               	goto	u4740
 10144                           
 10145                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10146  0A72  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10147  0A73  00A5               	movwf	??_Bq32k_Time_Init
 10148  0A74  0825               	movf	??_Bq32k_Time_Init,w
 10149  0A75  00F6               	movwf	I2C_Send_Buffer@buff
 10150  0A76  3007               	movlw	7
 10151  0A77  00A6               	movwf	??_Bq32k_Time_Init+1
 10152  0A78  0826               	movf	??_Bq32k_Time_Init+1,w
 10153  0A79  00F7               	movwf	I2C_Send_Buffer@Length
 10154  0A7A  3000               	movlw	0
 10155  0A7B  318D  254F         	fcall	_I2C_Send_Buffer
 10156  0A7D  0008               	return
 10157  0A7E                     __end_of_Bq32k_Time_Init:	
 10158                           
 10159                           	psect	text57
 10160  0D4F                     __ptext57:	
 10161 ;; *************** function _I2C_Send_Buffer *****************
 10162 ;; Defined at:
 10163 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  ADD             1    wreg     unsigned char 
 10166 ;;  buff            1    6[COMMON] PTR unsigned char 
 10167 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10168 ;;  Length          1    7[COMMON] unsigned char 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  ADD             1    2[BANK0 ] unsigned char 
 10171 ;;  Flag            1    4[BANK0 ] unsigned char 
 10172 ;;  i               1    3[BANK0 ] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      unsigned char 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;Total ram usage:        7 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    4
 10189 ;; This function calls:
 10190 ;;		_I2C_Send_Byte
 10191 ;;		_I2C_Start
 10192 ;;		_I2C_Stop
 10193 ;; This function is called by:
 10194 ;;		_Bq32k_Time_Init
 10195 ;;		_Bq32k_Rtc_Write_Time
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function _I2C_Send_Buffer
 10201  0D4F                     _I2C_Send_Buffer:	
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10205                           ;I2C_Send_Buffer@ADD stored from wreg
 10206  0D4F  0020               	movlb	0	; select bank0
 10207  0D50  00A2               	movwf	I2C_Send_Buffer@ADD
 10208                           
 10209                           ;i2c.c: 175: unsigned char Flag=1;
 10210  0D51  01A4               	clrf	I2C_Send_Buffer@Flag
 10211  0D52  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10212                           
 10213                           ;i2c.c: 176: unsigned char i;
 10214                           ;i2c.c: 178: I2C_Start();
 10215  0D53  3189  21C9  318D   	fcall	_I2C_Start
 10216                           
 10217                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10218  0D56  30D0               	movlw	208
 10219  0D57  318E  2656  318D   	fcall	_I2C_Send_Byte
 10220  0D5A  0020               	movlb	0	; select bank0
 10221  0D5B  00A0               	movwf	??_I2C_Send_Buffer
 10222  0D5C  0820               	movf	??_I2C_Send_Buffer,w
 10223  0D5D  00A4               	movwf	I2C_Send_Buffer@Flag
 10224                           
 10225                           ;i2c.c: 181: if(Flag)
 10226  0D5E  0824               	movf	I2C_Send_Buffer@Flag,w
 10227  0D5F  1D03               	btfss	3,2
 10228  0D60  0008               	return
 10229                           
 10230                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10231                           
 10232                           ;i2c.c: 182: return 0x01;
 10233                           ;	Return value of _I2C_Send_Buffer is never used
 10234  0D61  0822               	movf	I2C_Send_Buffer@ADD,w
 10235  0D62  318E  2656  318D   	fcall	_I2C_Send_Byte
 10236  0D65  0020               	movlb	0	; select bank0
 10237  0D66  00A0               	movwf	??_I2C_Send_Buffer
 10238  0D67  0820               	movf	??_I2C_Send_Buffer,w
 10239  0D68  00A4               	movwf	I2C_Send_Buffer@Flag
 10240                           
 10241                           ;i2c.c: 185: if(Flag)
 10242  0D69  0824               	movf	I2C_Send_Buffer@Flag,w
 10243  0D6A  1D03               	btfss	3,2
 10244  0D6B  0008               	return
 10245                           
 10246                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10247                           
 10248                           ;i2c.c: 186: return 0x01;
 10249                           ;	Return value of _I2C_Send_Buffer is never used
 10250  0D6C  01A3               	clrf	I2C_Send_Buffer@i
 10251  0D6D                     l4976:	
 10252  0D6D  0877               	movf	I2C_Send_Buffer@Length,w
 10253  0D6E  0223               	subwf	I2C_Send_Buffer@i,w
 10254  0D6F  1803               	btfsc	3,0
 10255  0D70  2D87               	goto	l4978
 10256                           
 10257                           ;i2c.c: 189: {
 10258                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10259  0D71  0823               	movf	I2C_Send_Buffer@i,w
 10260  0D72  0776               	addwf	I2C_Send_Buffer@buff,w
 10261  0D73  00A0               	movwf	??_I2C_Send_Buffer
 10262  0D74  0820               	movf	??_I2C_Send_Buffer,w
 10263  0D75  0086               	movwf	6
 10264  0D76  0187               	clrf	7
 10265  0D77  0801               	movf	1,w
 10266  0D78  318E  2656  318D   	fcall	_I2C_Send_Byte
 10267  0D7B  0020               	movlb	0	; select bank0
 10268  0D7C  00A1               	movwf	??_I2C_Send_Buffer+1
 10269  0D7D  0821               	movf	??_I2C_Send_Buffer+1,w
 10270  0D7E  00A4               	movwf	I2C_Send_Buffer@Flag
 10271                           
 10272                           ;i2c.c: 191: if(Flag)
 10273  0D7F  0824               	movf	I2C_Send_Buffer@Flag,w
 10274  0D80  1D03               	btfss	3,2
 10275  0D81  0008               	return
 10276                           
 10277                           ;i2c.c: 192: return 0x01;
 10278                           ;	Return value of _I2C_Send_Buffer is never used
 10279  0D82  3001               	movlw	1
 10280  0D83  00A0               	movwf	??_I2C_Send_Buffer
 10281  0D84  0820               	movf	??_I2C_Send_Buffer,w
 10282  0D85  07A3               	addwf	I2C_Send_Buffer@i,f
 10283  0D86  2D6D               	goto	l4976
 10284  0D87                     l4978:	
 10285                           
 10286                           ;i2c.c: 193: }
 10287                           ;i2c.c: 194: I2C_Stop();
 10288  0D87  3189  21E2         	fcall	_I2C_Stop
 10289  0D89  0008               	return
 10290  0D8A                     __end_of_I2C_Send_Buffer:	
 10291                           ;i2c.c: 195: return 0x00;
 10292                           ;	Return value of _I2C_Send_Buffer is never used
 10293                           
 10294                           
 10295                           	psect	text58
 10296  09E2                     __ptext58:	
 10297 ;; *************** function _I2C_Stop *****************
 10298 ;; Defined at:
 10299 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;Total ram usage:        1 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    3
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_I2C_Read_Buffer
 10324 ;;		_I2C_Send_Buffer
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           
 10329                           ;psect for function _I2C_Stop
 10330  09E2                     _I2C_Stop:	
 10331                           
 10332                           ;incstack = 0
 10333                           ; Regs used in _I2C_Stop: [wreg]
 10334                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10335  09E2  0022               	movlb	2	; select bank2
 10336  09E3  100D               	bcf	13,0	;volatile
 10337                           
 10338                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10339  09E4  300D               	movlw	13
 10340  09E5  00F3               	movwf	??_I2C_Stop
 10341  09E6                     u5187:	
 10342  09E6  0BF3               	decfsz	??_I2C_Stop,f
 10343  09E7  29E6               	goto	u5187
 10344                           
 10345                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10346  09E8  0022               	movlb	2	; select bank2
 10347  09E9  108D               	bcf	13,1	;volatile
 10348                           
 10349                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10350  09EA  300D               	movlw	13
 10351  09EB  00F3               	movwf	??_I2C_Stop
 10352  09EC                     u5197:	
 10353  09EC  0BF3               	decfsz	??_I2C_Stop,f
 10354  09ED  29EC               	goto	u5197
 10355                           
 10356                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10357  09EE  0022               	movlb	2	; select bank2
 10358  09EF  140D               	bsf	13,0	;volatile
 10359                           
 10360                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10361  09F0  300D               	movlw	13
 10362  09F1  00F3               	movwf	??_I2C_Stop
 10363  09F2                     u5207:	
 10364  09F2  0BF3               	decfsz	??_I2C_Stop,f
 10365  09F3  29F2               	goto	u5207
 10366                           
 10367                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10368  09F4  0022               	movlb	2	; select bank2
 10369  09F5  148D               	bsf	13,1	;volatile
 10370                           
 10371                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10372  09F6  300D               	movlw	13
 10373  09F7  00F3               	movwf	??_I2C_Stop
 10374  09F8                     u5217:	
 10375  09F8  0BF3               	decfsz	??_I2C_Stop,f
 10376  09F9  29F8               	goto	u5217
 10377  09FA  0008               	return
 10378  09FB                     __end_of_I2C_Stop:	
 10379                           
 10380                           	psect	text59
 10381  09C9                     __ptext59:	
 10382 ;; *************** function _I2C_Start *****************
 10383 ;; Defined at:
 10384 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;		None
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		wreg
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10402 ;;Total ram usage:        1 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    3
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_I2C_Read_Buffer
 10409 ;;		_I2C_Send_Buffer
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           
 10414                           ;psect for function _I2C_Start
 10415  09C9                     _I2C_Start:	
 10416                           
 10417                           ;incstack = 0
 10418                           ; Regs used in _I2C_Start: [wreg]
 10419                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10420  09C9  0022               	movlb	2	; select bank2
 10421  09CA  148D               	bsf	13,1	;volatile
 10422                           
 10423                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10424  09CB  300D               	movlw	13
 10425  09CC  00F3               	movwf	??_I2C_Start
 10426  09CD                     u5227:	
 10427  09CD  0BF3               	decfsz	??_I2C_Start,f
 10428  09CE  29CD               	goto	u5227
 10429                           
 10430                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10431  09CF  0022               	movlb	2	; select bank2
 10432  09D0  140D               	bsf	13,0	;volatile
 10433                           
 10434                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10435  09D1  300D               	movlw	13
 10436  09D2  00F3               	movwf	??_I2C_Start
 10437  09D3                     u5237:	
 10438  09D3  0BF3               	decfsz	??_I2C_Start,f
 10439  09D4  29D3               	goto	u5237
 10440                           
 10441                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10442  09D5  0022               	movlb	2	; select bank2
 10443  09D6  108D               	bcf	13,1	;volatile
 10444                           
 10445                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10446  09D7  300D               	movlw	13
 10447  09D8  00F3               	movwf	??_I2C_Start
 10448  09D9                     u5247:	
 10449  09D9  0BF3               	decfsz	??_I2C_Start,f
 10450  09DA  29D9               	goto	u5247
 10451                           
 10452                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10453  09DB  0022               	movlb	2	; select bank2
 10454  09DC  100D               	bcf	13,0	;volatile
 10455                           
 10456                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10457  09DD  300D               	movlw	13
 10458  09DE  00F3               	movwf	??_I2C_Start
 10459  09DF                     u5257:	
 10460  09DF  0BF3               	decfsz	??_I2C_Start,f
 10461  09E0  29DF               	goto	u5257
 10462  09E1  0008               	return
 10463  09E2                     __end_of_I2C_Start:	
 10464                           
 10465                           	psect	text60
 10466  0E56                     __ptext60:	
 10467 ;; *************** function _I2C_Send_Byte *****************
 10468 ;; Defined at:
 10469 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  Data            1    wreg     unsigned char 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  Data            1    4[COMMON] unsigned char 
 10474 ;;  i               1    5[COMMON] unsigned char 
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  1    wreg      unsigned char 
 10477 ;; Registers used:
 10478 ;;		wreg, status,2, status,0
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;Total ram usage:        3 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    3
 10491 ;; This function calls:
 10492 ;;		Nothing
 10493 ;; This function is called by:
 10494 ;;		_I2C_Read_Buffer
 10495 ;;		_I2C_Send_Buffer
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           
 10500                           ;psect for function _I2C_Send_Byte
 10501  0E56                     _I2C_Send_Byte:	
 10502                           
 10503                           ;incstack = 0
 10504                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 10505                           ;I2C_Send_Byte@Data stored from wreg
 10506  0E56  00F4               	movwf	I2C_Send_Byte@Data
 10507                           
 10508                           ;i2c.c: 36: unsigned char i;
 10509                           ;i2c.c: 37: for(i=0;i<8;i++)
 10510  0E57  01F5               	clrf	I2C_Send_Byte@i
 10511  0E58  3008               	movlw	8
 10512  0E59  0275               	subwf	I2C_Send_Byte@i,w
 10513  0E5A  1803               	btfsc	3,0
 10514  0E5B  2E7D               	goto	l737
 10515  0E5C                     l725:	
 10516                           
 10517                           ;i2c.c: 38: {
 10518                           ;i2c.c: 39: if(Data&0x80)
 10519  0E5C  1FF4               	btfss	I2C_Send_Byte@Data,7
 10520  0E5D  2E61               	goto	l731
 10521                           
 10522                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 10523  0E5E  0022               	movlb	2	; select bank2
 10524  0E5F  148D               	bsf	13,1	;volatile
 10525  0E60  2E63               	goto	l4092
 10526  0E61                     l731:	
 10527                           ;i2c.c: 41: else
 10528                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 10529                           
 10530  0E61  0022               	movlb	2	; select bank2
 10531  0E62  108D               	bcf	13,1	;volatile
 10532  0E63                     l4092:	
 10533                           
 10534                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10535  0E63  300D               	movlw	13
 10536  0E64  00F3               	movwf	??_I2C_Send_Byte
 10537  0E65                     u5267:	
 10538  0E65  0BF3               	decfsz	??_I2C_Send_Byte,f
 10539  0E66  2E65               	goto	u5267
 10540                           
 10541                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 10542  0E67  0022               	movlb	2	; select bank2
 10543  0E68  140D               	bsf	13,0	;volatile
 10544                           
 10545                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10546  0E69  300D               	movlw	13
 10547  0E6A  00F3               	movwf	??_I2C_Send_Byte
 10548  0E6B                     u5277:	
 10549  0E6B  0BF3               	decfsz	??_I2C_Send_Byte,f
 10550  0E6C  2E6B               	goto	u5277
 10551                           
 10552                           ;i2c.c: 46: Data<<=1;
 10553  0E6D  1003               	clrc
 10554  0E6E  0DF4               	rlf	I2C_Send_Byte@Data,f
 10555                           
 10556                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 10557  0E6F  0022               	movlb	2	; select bank2
 10558  0E70  100D               	bcf	13,0	;volatile
 10559                           
 10560                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10561  0E71  300D               	movlw	13
 10562  0E72  00F3               	movwf	??_I2C_Send_Byte
 10563  0E73                     u5287:	
 10564  0E73  0BF3               	decfsz	??_I2C_Send_Byte,f
 10565  0E74  2E73               	goto	u5287
 10566  0E75  3001               	movlw	1
 10567  0E76  00F3               	movwf	??_I2C_Send_Byte
 10568  0E77  0873               	movf	??_I2C_Send_Byte,w
 10569  0E78  07F5               	addwf	I2C_Send_Byte@i,f
 10570  0E79  3008               	movlw	8
 10571  0E7A  0275               	subwf	I2C_Send_Byte@i,w
 10572  0E7B  1C03               	skipc
 10573  0E7C  2E5C               	goto	l725
 10574  0E7D                     l737:	
 10575                           ;i2c.c: 49: }
 10576                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 10577                           
 10578  0E7D  0022               	movlb	2	; select bank2
 10579  0E7E  148D               	bsf	13,1	;volatile
 10580                           
 10581                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10582  0E7F  300D               	movlw	13
 10583  0E80  00F3               	movwf	??_I2C_Send_Byte
 10584  0E81                     u5297:	
 10585  0E81  0BF3               	decfsz	??_I2C_Send_Byte,f
 10586  0E82  2E81               	goto	u5297
 10587                           
 10588                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 10589  0E83  0022               	movlb	2	; select bank2
 10590  0E84  140D               	bsf	13,0	;volatile
 10591                           
 10592                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10593  0E85  300D               	movlw	13
 10594  0E86  00F3               	movwf	??_I2C_Send_Byte
 10595  0E87                     u5307:	
 10596  0E87  0BF3               	decfsz	??_I2C_Send_Byte,f
 10597  0E88  2E87               	goto	u5307
 10598                           
 10599                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 10600  0E89  0021               	movlb	1	; select bank1
 10601  0E8A  148D               	bsf	13,1	;volatile
 10602                           
 10603                           ;i2c.c: 55: if(RB1)
 10604  0E8B  0020               	movlb	0	; select bank0
 10605  0E8C  1C8D               	btfss	13,1	;volatile
 10606  0E8D  2E92               	goto	l747
 10607                           
 10608                           ;i2c.c: 56: {
 10609                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 10610  0E8E  0021               	movlb	1	; select bank1
 10611  0E8F  108D               	bcf	13,1	;volatile
 10612                           
 10613                           ;i2c.c: 58: return 0x01;
 10614  0E90  3001               	movlw	1
 10615  0E91  0008               	return
 10616  0E92                     l747:	
 10617                           ;i2c.c: 59: }
 10618                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 10619                           
 10620  0E92  0021               	movlb	1	; select bank1
 10621  0E93  108D               	bcf	13,1	;volatile
 10622                           
 10623                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 10624  0E94  0022               	movlb	2	; select bank2
 10625  0E95  100D               	bcf	13,0	;volatile
 10626                           
 10627                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10628  0E96  300D               	movlw	13
 10629  0E97  00F3               	movwf	??_I2C_Send_Byte
 10630  0E98                     u5317:	
 10631  0E98  0BF3               	decfsz	??_I2C_Send_Byte,f
 10632  0E99  2E98               	goto	u5317
 10633                           
 10634                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 10635  0E9A  0022               	movlb	2	; select bank2
 10636  0E9B  108D               	bcf	13,1	;volatile
 10637                           
 10638                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10639  0E9C  300D               	movlw	13
 10640  0E9D  00F3               	movwf	??_I2C_Send_Byte
 10641  0E9E                     u5327:	
 10642  0E9E  0BF3               	decfsz	??_I2C_Send_Byte,f
 10643  0E9F  2E9E               	goto	u5327
 10644                           
 10645                           ;i2c.c: 65: return 0x00;
 10646  0EA0  3000               	movlw	0
 10647  0EA1  0008               	return
 10648  0EA2                     __end_of_I2C_Send_Byte:	
 10649                           
 10650                           	psect	text61
 10651  0A14                     __ptext61:	
 10652 ;; *************** function _ADC_GetConversion *****************
 10653 ;; Defined at:
 10654 ;;		line 106 in file "mcc_generated_files/adc.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  channel         1    wreg     enum E1850
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;  channel         1    6[COMMON] enum E1850
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  2    3[COMMON] unsigned int 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2, status,0
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;Total ram usage:        4 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    3
 10675 ;; This function calls:
 10676 ;;		Nothing
 10677 ;; This function is called by:
 10678 ;;		_main
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function _ADC_GetConversion
 10684  0A14                     _ADC_GetConversion:	
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10688                           ;ADC_GetConversion@channel stored from wreg
 10689  0A14  00F6               	movwf	ADC_GetConversion@channel
 10690                           
 10691                           ;adc.c: 108: ADCON0bits.CHS = channel;
 10692  0A15  0876               	movf	ADC_GetConversion@channel,w
 10693  0A16  00F5               	movwf	??_ADC_GetConversion
 10694  0A17  0DF5               	rlf	??_ADC_GetConversion,f
 10695  0A18  0DF5               	rlf	??_ADC_GetConversion,f
 10696  0A19  0021               	movlb	1	; select bank1
 10697  0A1A  081D               	movf	29,w	;volatile
 10698  0A1B  0675               	xorwf	??_ADC_GetConversion,w
 10699  0A1C  3983               	andlw	-125
 10700  0A1D  0675               	xorwf	??_ADC_GetConversion,w
 10701  0A1E  009D               	movwf	29	;volatile
 10702                           
 10703                           ;adc.c: 111: ADCON0bits.ADON = 1;
 10704  0A1F  141D               	bsf	29,0	;volatile
 10705                           
 10706                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
 10707  0A20  3006               	movlw	6
 10708  0A21  00F5               	movwf	??_ADC_GetConversion
 10709  0A22                     u5337:	
 10710  0A22  0BF5               	decfsz	??_ADC_GetConversion,f
 10711  0A23  2A22               	goto	u5337
 10712  0A24  0000               	nop
 10713                           
 10714                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 10715  0A25  0021               	movlb	1	; select bank1
 10716  0A26  149D               	bsf	29,1	;volatile
 10717  0A27                     l197:	
 10718                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 10719                           
 10720  0A27  189D               	btfsc	29,1	;volatile
 10721  0A28  2A27               	goto	l197
 10722                           
 10723                           ;adc.c: 121: }
 10724                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 10725  0A29  081C               	movf	28,w	;volatile
 10726  0A2A  00F4               	movwf	?_ADC_GetConversion+1
 10727  0A2B  081B               	movf	27,w	;volatile
 10728  0A2C  00F3               	movwf	?_ADC_GetConversion
 10729  0A2D  0008               	return
 10730  0A2E                     __end_of_ADC_GetConversion:	
 10731                           
 10732                           	psect	intentry
 10733  0004                     __pintentry:	
 10734 ;; *************** function _INTERRUPT_InterruptManager *****************
 10735 ;; Defined at:
 10736 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;		None
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;		None
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  1    wreg      void 
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, status,0, pclath, cstack
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;Total ram usage:        1 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; Hardware stack levels required when called:    2
 10757 ;; This function calls:
 10758 ;;		_TMR0_ISR
 10759 ;; This function is called by:
 10760 ;;		Interrupt level 1
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764  0004                     _INTERRUPT_InterruptManager:	
 10765                           
 10766                           ;incstack = 0
 10767                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10768  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10769  0005  3180               	pagesel	$
 10770  0006  0020               	movlb	0	; select bank0
 10771  0007  087F               	movf	127,w
 10772  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 10773                           
 10774                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 10775  0009  1A8B               	btfsc	11,5	;volatile
 10776  000A  1D0B               	btfss	11,2	;volatile
 10777  000B  280E               	goto	i1l255
 10778                           
 10779                           ;interrupt_manager.c: 55: TMR0_ISR();
 10780  000C  318A  2248         	fcall	_TMR0_ISR
 10781  000E                     i1l255:	
 10782                           ;interrupt_manager.c: 56: } else {
 10783                           
 10784  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 10785  000F  0020               	movlb	0	; select bank0
 10786  0010  00FF               	movwf	127
 10787  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10788  0012  0009               	retfie
 10789  0013                     __end_of_INTERRUPT_InterruptManager:	
 10790                           
 10791                           	psect	text63
 10792  0A48                     __ptext63:	
 10793 ;; *************** function _TMR0_ISR *****************
 10794 ;; Defined at:
 10795 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;		None
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      void 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0, pclath, cstack
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;Total ram usage:        1 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    1
 10816 ;; This function calls:
 10817 ;;		_TMR0_CallBack
 10818 ;; This function is called by:
 10819 ;;		_INTERRUPT_InterruptManager
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function _TMR0_ISR
 10825  0A48                     _TMR0_ISR:	
 10826                           
 10827                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 10828                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 10829                           
 10830                           ;incstack = 0
 10831                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10832  0A48  110B               	bcf	11,2	;volatile
 10833                           
 10834                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 10835  0A49  0021               	movlb	1	; select bank1
 10836  0A4A  0869               	movf	_timer0ReloadVal^(0+128),w	;volatile
 10837  0A4B  0020               	movlb	0	; select bank0
 10838  0A4C  0095               	movwf	21	;volatile
 10839                           
 10840                           ;tmr0.c: 111: MAX31856Sec++;
 10841  0A4D  3001               	movlw	1
 10842  0A4E  00F1               	movwf	??_TMR0_ISR
 10843  0A4F  0871               	movf	??_TMR0_ISR,w
 10844  0A50  07F9               	addwf	_MAX31856Sec,f
 10845                           
 10846                           ;tmr0.c: 114: if (++CountCallBack >= 100) {
 10847  0A51  3001               	movlw	1
 10848  0A52  0021               	movlb	1	; select bank1
 10849  0A53  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 10850  0A54  3000               	movlw	0
 10851  0A55  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 10852  0A56  3000               	movlw	0
 10853  0A57  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 10854  0A58  3064               	movlw	100
 10855  0A59  1903               	skipnz
 10856  0A5A  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 10857  0A5B  1C03               	skipc
 10858  0A5C  0008               	return
 10859                           
 10860                           ;tmr0.c: 116: TMR0_CallBack();
 10861  0A5D  318B  2358         	fcall	_TMR0_CallBack
 10862                           
 10863                           ;tmr0.c: 119: CountCallBack = 0;
 10864  0A5F  0021               	movlb	1	; select bank1
 10865  0A60  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 10866  0A61  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 10867  0A62  0008               	return
 10868  0A63                     __end_of_TMR0_ISR:	
 10869                           
 10870                           	psect	text64
 10871  0B58                     __ptext64:	
 10872 ;; *************** function _TMR0_CallBack *****************
 10873 ;; Defined at:
 10874 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;		None
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;                  1    wreg      void 
 10881 ;; Registers used:
 10882 ;;		wreg, status,2, status,0
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;Total ram usage:        1 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_TMR0_ISR
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           
 10902                           ;psect for function _TMR0_CallBack
 10903  0B58                     _TMR0_CallBack:	
 10904                           
 10905                           ;tmr0.c: 128: time_count++;
 10906                           
 10907                           ;incstack = 0
 10908                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 10909  0B58  3001               	movlw	1
 10910  0B59  00F0               	movwf	??_TMR0_CallBack
 10911  0B5A  0870               	movf	??_TMR0_CallBack,w
 10912  0B5B  0020               	movlb	0	; select bank0
 10913  0B5C  07EC               	addwf	_time_count,f
 10914                           
 10915                           ;tmr0.c: 129: if(time_count == 4 || time_count > 8) time_count = 0;
 10916  0B5D  3004               	movlw	4
 10917  0B5E  066C               	xorwf	_time_count,w
 10918  0B5F  1903               	btfsc	3,2
 10919  0B60  2B65               	goto	i1l3618
 10920  0B61  3009               	movlw	9
 10921  0B62  026C               	subwf	_time_count,w
 10922  0B63  1C03               	skipc
 10923  0B64  2B66               	goto	i1l3620
 10924  0B65                     i1l3618:	
 10925  0B65  01EC               	clrf	_time_count
 10926  0B66                     i1l3620:	
 10927                           
 10928                           ;tmr0.c: 130: LongPressSec++;
 10929  0B66  3001               	movlw	1
 10930  0B67  00F0               	movwf	??_TMR0_CallBack
 10931  0B68  0870               	movf	??_TMR0_CallBack,w
 10932  0B69  07E9               	addwf	_LongPressSec,f
 10933                           
 10934                           ;tmr0.c: 132: Cur_temperature_time_ch1++;
 10935  0B6A  3001               	movlw	1
 10936  0B6B  00F0               	movwf	??_TMR0_CallBack
 10937  0B6C  0870               	movf	??_TMR0_CallBack,w
 10938  0B6D  07E8               	addwf	_Cur_temperature_time_ch1,f
 10939                           
 10940                           ;tmr0.c: 133: if(Cur_temperature_time_ch1 > 65)
 10941  0B6E  3042               	movlw	66
 10942  0B6F  0268               	subwf	_Cur_temperature_time_ch1,w
 10943  0B70  1803               	btfsc	3,0
 10944                           
 10945                           ;tmr0.c: 134: {
 10946                           ;tmr0.c: 135: Cur_temperature_time_ch1 = 0;
 10947  0B71  01E8               	clrf	_Cur_temperature_time_ch1
 10948                           
 10949                           ;tmr0.c: 136: }
 10950                           ;tmr0.c: 138: Cur_temperature_time_ch2++;
 10951  0B72  3001               	movlw	1
 10952  0B73  00F0               	movwf	??_TMR0_CallBack
 10953  0B74  0870               	movf	??_TMR0_CallBack,w
 10954  0B75  07F8               	addwf	_Cur_temperature_time_ch2,f
 10955                           
 10956                           ;tmr0.c: 139: if(Cur_temperature_time_ch2 > 65)
 10957  0B76  3042               	movlw	66
 10958  0B77  0278               	subwf	_Cur_temperature_time_ch2,w
 10959  0B78  1C03               	skipc
 10960  0B79  0008               	return
 10961                           
 10962                           ;tmr0.c: 140: {
 10963                           ;tmr0.c: 141: Cur_temperature_time_ch2= 0;
 10964  0B7A  01F8               	clrf	_Cur_temperature_time_ch2
 10965  0B7B  0008               	return
 10966  0B7C                     __end_of_TMR0_CallBack:	
 10967  007E                     btemp	set	126	;btemp
 10968  007E                     int$flags	set	126
 10969  007E                     wtemp	set	126
 10970  007E                     wtemp0	set	126
 10971  0080                     wtemp1	set	128
 10972  0082                     wtemp2	set	130
 10973  0084                     wtemp3	set	132
 10974  0086                     wtemp4	set	134
 10975  0088                     wtemp5	set	136
 10976  007F                     wtemp6	set	127
 10977  007E                     ttemp	set	126
 10978  007E                     ttemp0	set	126
 10979  0081                     ttemp1	set	129
 10980  0084                     ttemp2	set	132
 10981  0087                     ttemp3	set	135
 10982  007F                     ttemp4	set	127
 10983  007E                     ltemp	set	126
 10984  007E                     ltemp0	set	126
 10985  0082                     ltemp1	set	130
 10986  0086                     ltemp2	set	134
 10987  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     58      78
    BANK1            80      5      74
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_FLASH_ReadWord
    _Save_process->_Save_Write_word
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _tc_temperature_trans->_Save_Write_word
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _SendCmd_1621->_SendBit_1621
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Bq32k_Rtc_Read_Time
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   77280
                                             55 BANK0      3     3      0
                                              0 BANK1      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    4     4      0     500
                                              0 BANK0      4     4      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0    7305
                                             38 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   38368
                                             49 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   26162
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   16450
                                             48 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                10    10      0    8013
                                             38 BANK0     10    10      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0    3049
                                             16 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Write_Flash_head                                     1     1      0    2673
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (2) _Write_Flash_finish                                   1     1      0    2673
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Save_Write_time                                      3     3      0    5635
                                             21 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      3     1      2    4167
                                              7 COMMON     1     1      0
                                             19 BANK0      2     0      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2673
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Jul 07 16:55:16 2016

                        __end_of_I2C_Send_Buffer 0D8A                                   _SPI_Initialize 08CA  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 08F1                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 08BA  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00E9  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 08DD                                              l166 0759  
                                            l370 0387                                              l532 01A9  
                                            l372 0389                                              l197 0A27  
                                            l541 0D8F                                              l534 01CE  
                                            l625 0ADE                                              l641 0AFE  
                                            l537 01D6                                              l529 01A1  
                                            l731 0E61                                              l627 0AE0  
                                            l643 0B00                                              l379 03B9  
                                            l725 0E5C                                              l389 0423  
                                            l670 0D17                                              l582 0CE4  
                                            l680 0476                                              l737 0E7D  
                                            l681 049C                                              l747 0E92  
                                            l852 0B56                                              l766 0BE6  
                                            l857 0B4C                                              l858 0B50  
                                            l893 05FF                                              l879 05D2  
                                            l897 060C                                              _RB1 0069  
                                            _RB3 006B                         __end_of_maxim_31856_init 07C6  
                                            _RB5 006D                                              _RA7 0067  
                                   ?_err_Display 0070                                     ___awmod@sign 0021  
                             _Write_Flash_finish 0B7C                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                               ?_FLASH_WriteWord 002A                           _maxim_start_conversion 0A2E  
                 FLASH_WriteBlock@flashWordArray 0022                                     __CFG_LVP$OFF 0000  
                                           l1012 0ABF                                             l4212 071C  
                                           l4142 0BF6                                             l5110 05B1  
                                           l5102 0599                                             l4160 0940  
                                           l4224 0744                                             l5120 05DC  
                                           l5106 05A5                                             l4092 0E63  
                                           l4156 093A                                             l4324 0DFA  
                                           l5116 05D6                                             l5204 03A7  
                                           l4318 0DDC                                             l4350 0AF5  
                                           l4406 0CFD                                             l4510 0C37  
                                           l5134 05F0                                             l4280 0663  
                                           l5144 0603                                             l5208 03BA  
                                           l4338 0AD5                                             l4514 0C43  
                                           l4442 02B1                                             l5138 05F7  
                                           l4380 0EBA                                             l4508 0C2B  
                                           l4356 0AB8                                             l4620 0123  
                                           l5252 03FB                                             l4278 0638  
                                           l4382 0ECF                                             l4518 0C4C  
                                           l5166 0F72                                             l4376 0EAB  
                                           l4384 0ED4                                             l4472 0A84  
                                           l4624 0137                                             l4616 0114  
                                           l4640 016A                                             l5088 0C7C  
                                           l5264 0424                                             l4394 0EDC  
                                           l4386 0ED9                                             l4458 0368  
                                           l4642 016F                                             l4570 0090  
                                           l5098 0593                                             l5266 0427  
                                           l4492 0D41                                             l4484 0D23  
                                           l4660 01B0                                             l4724 0F09  
                                           l4486 0D2F                                             l4574 009F  
                                           l4750 0F40                                             l4742 0F2F  
                                           l4734 0F11                                             l4718 0EFE  
                                           l5198 0392                                             l4496 0D4A  
                                           l4832 07E3                                             l4824 07D6  
                                           l4736 0F1D                                             l4578 00B3  
                                           l4594 00E7                                             l4746 0F38  
                                           l4762 0E1B                                             l4922 0CB3  
                                           l4692 04BC                                             l4684 0442  
                                           l4596 00EC                                             l4836 07E9  
                                           l4828 07DC                                             l4780 0E40  
                                           l4932 0CBE                                             l4694 04CB  
                                           l4686 045D                                             l4774 0E28  
                                           l4766 0E22                                             l4934 0CC1  
                                           l4950 0CD2                                             l4688 04B1  
                                           l4776 0E34                                             l4784 0E49  
                                           l4944 0CCC                                             l4698 04D5  
                                           l4946 0CCF                                             l4788 0E51  
                                           l4798 0D96                                             l4976 0D6D  
                                           l4978 0D87                                             l4988 0B3E  
                            ?_Write_Flash_finish 0070                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u4020 0076                                             u4030 0077  
                                           u4130 00FA                                             u4140 00FB  
                                           u5107 0652                                             u5117 0659  
                                           u3605 0966                                             u3525 0708  
                                           u4085 00A5                                             u4405 0F30  
                                           u5207 09F2                                             u5127 0672  
                                           u5217 09F8                                             u5137 0679  
                                           u3705 0AC5                                             u5307 0E87  
                                           u5227 09CD                                             u5147 0680  
                                           u4195 0129                                             u5067 037A  
                                           u5317 0E98                                             u5237 09D3  
                                           u5157 0BDC                                             u5077 0B05  
                                           u4365 0F14                                             u5327 0E9E  
                                           u5247 09D9                                             u5167 0BEC  
                                           u5087 0AE5                                             u5337 0A22  
                                           u5257 09DF                                             u5177 0B42  
                                           u5097 064B                                             u3905 0D3A  
                                           u4385 0F1E                                             u4465 0E2B  
                                           u5267 0E65                                             u5187 09E6  
                                           u3915 0D42                                             u4395 0F28  
                                           u4740 0A6E                                             u5277 0E6B  
                                           u5197 09EC                                             u4485 0E3A  
                                           u5287 0E73                                             u3695 0AC0  
                                           u4495 0E41                                             u5297 0E81  
                                           u3945 0C2E                                             u3875 0D26  
                                           u3965 0C3D                                             u3895 0D30  
                                           u3975 0C44                                             _TMR0 0015  
                                           _WPUB 020D                                             _WPUE 0210  
                                   __CFG_WRT$OFF 0000                                    __CFG_FCMEN$ON 0000  
                        __size_of_Set_start_flag 0006                           __size_of_WriteAll_1621 0035  
                                  ??_Key_Process 0051                                             _main 036A  
                                           fsr0h 0005                                             fsr1h 0007  
                                           fsr0l 0004                                             indf0 0000  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                 __end_of_I2C_Stop 09FB  
                              ?_FLASH_WriteBlock 0020                                    __CFG_BOREN$ON 0000  
                                           ltemp 007E                              SendCmd_1621@command 0021  
                                           start 0013                                             ttemp 007E  
                                           wtemp 007E                                  __end_of_Dis_TAB 1015  
                         __end_of_SPI_Initialize 08D0                               ??_FLASH_WriteBlock 0023  
                               ?_I2C_Read_Buffer 0076                                ___bmul@multiplier 0076  
                                  __CFG_MCLRE$ON 0000                                     main@bat_data 00E7  
                 __end_of_SPI_Exchange8bitBuffer 0EF3                                  time_Display@num 0033  
                           ??_Write_Flash_finish 0077                          __end_of_TMR0_Initialize 0938  
                                ?_FVR_Initialize 0070                                    ?_EUSART_Write 0070  
                 __size_of_OSCILLATOR_Initialize 0005                    __end_of_OSCILLATOR_Initialize 08C4  
                                __end_of_bcd2bin 096F                                            ?_main 0070  
                                __end_of___awdiv 0F45                                    __CFG_WDTE$OFF 0000  
                                __end_of___awmod 0E56                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0D4F  
                                          i1l255 000E                                  __end_of___lwmod 0C51  
                                ___awdiv@counter 0020                                            _RCREG 0199  
                                          _RCSTA 019D                                            u381m0 02AA  
                                     _Flash_buff 0120                                            u471m0 0692  
                                          u472m0 069F                                            u384m0 0361  
                        ??_one_temperature_trans 0028                                ?_SendDataBit_1621 0073  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                                          _TXSTA 019E                                 __end_of_TMR0_ISR 0A63  
                             ??_SendDataBit_1621 0074                     __end_of_tc_temperature_trans 01DD  
                                          main@i 00E6                                __end_of_I2C_Start 09E2  
                            _Bq32k_Rtc_Read_Time 0F9C                                  Tc_Display@count 002A  
                              WriteAll_1621@addr 0024                                            ltemp0 007E  
                                          ltemp1 0082                                            ltemp2 0086  
                                          ltemp3 0080                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                                            wtemp0 007E  
                                          wtemp1 0080                                            wtemp2 0082  
                                          wtemp3 0084                                            wtemp4 0086  
                                          wtemp5 0088                                            wtemp6 007F  
                         __size_of_I2C_Send_Byte 004C                                  _Cur_temperature 00AE  
                                     _Tc_Display 0431                                  ?_SPI_Initialize 0070  
                    __end_of_temperature_display 07FD                                  __initialization 0015  
                            __end_of_Key_Process 060D                                 ?_I2C_Send_Buffer 0076  
                                   __end_of_main 0431                                   WriteAll_1621@i 0025  
                                 WriteAll_1621@p 0020                                 __end_of_Key_Scan 0B58  
                                  main@data_temp 00E4                                   ??_EUSART_Write 0073  
                           ?_Bq32k_Rtc_Read_Time 0070                      __end_of_temperature_process 0CE5  
                                 __CFG_LPBOR$OFF 0000     maxim_31856_write_register@uch_register_value 0074  
                    ?_INTERRUPT_InterruptManager 0070                                    _WriteAll_1621 0CE5  
                                         ??_main 0057                                     Key_Process@i 0055  
 maxim_31856_write_register@uch_register_address 0075                          __size_of_FLASH_ReadWord 0019  
                        Bq32k_Rtc_Read_Time@temp 0025                                I2C_Receive_Byte@i 0075  
                       __end_of_SPI_Exchange8bit 08F5                                           _ADCON0 009D  
                                         _ADCON1 009E                        FLASH_WriteBlock@writeAddr 0020  
                                         _ADRESH 009C                                           _ADRESL 009B  
                               ___awdiv@dividend 0075                                           _APFCON 011D  
                                         _ANSELA 018C                                           _ANSELB 018D  
                                         _ANSELC 018E                                           i1l3620 0B66  
                                         i1l3618 0B65                                           _FVRCON 0117  
                                         _PMADRH 0192                                           _PMADRL 0191  
                                         _PMDATH 0194                                           _PMDATL 0193  
                              _temperature_value 005A                                           _PMCON2 0196  
                      __size_of_FLASH_EraseBlock 001C                                           _OSCCON 0099  
                                         _SPBRGH 019C                                           _SPBRGL 019B  
                       _Cur_temperature_time_ch1 0068                         _Cur_temperature_time_ch2 0078  
                                         _TRISB1 0469                                           _TRISB3 046B  
                                         _SSPBUF 0211                                    ?_SendCmd_1621 0070  
                                  ?_SendBit_1621 0073                                   __CFG_PWRTE$OFF 0000  
                                _Bq32k_Time_Init 0A63                                 SendBit_1621@data 0076  
                                         ___bmul 0938                                        ??_bcd2bin 0020  
                                         ___wmul 0AB5                    FLASH_WriteWord@blockStartAddr 0030  
                                      ??___awdiv 0077                                   __CFG_STVREN$ON 0000  
                                      ??___awmod 0077                            ??_Bq32k_Rtc_Read_Time 0023  
                                      ??___lwdiv 0025                                        ??___lwmod 0077  
                   ?_maxim_31856_read_nregisters 0023                              FLASH_WriteWord@word 002D  
                                 ?_WriteAll_1621 0020                                 ?_TMR0_Initialize 0070  
                                         _memset 0A7E                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 0022                                  ___awmod@divisor 0073  
                                         _uch_sr 00B8                                  ___awmod@counter 0020  
                                         _rtc_tm 00CF                                  _Set_finish_flag 08BA  
                                  _I2C_Send_Byte 0E56                               ??_I2C_Receive_Byte 0073  
                        FLASH_ReadWord@flashAddr 0073                                        ?_I2C_Stop 0070  
                   ??_maxim_31856_write_register 0075                            I2C_Read_Buffer@Length 0077  
                       ADC_GetConversion@channel 0076                             __size_of_err_Display 002C  
                          __end_of_TMR0_CallBack 0B7C                                       bcd2bin@val 0077  
                     ??_maxim_clear_fault_status 0077                                   _Set_start_flag 08C4  
                              _SYSTEM_Initialize 0984                                   ??_SendCmd_1621 0020  
                        __end_of__initialization 003B                                   ??_SendBit_1621 0074  
                                    _Key_Process 0585                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                               Calculate_Time@temp 003A  
                            ___bmul@multiplicand 0073                                time_Display@F2129 00A8  
                                 __pcstackCOMMON 0070             tc_temperature_trans@temperature_temp 004E  
                                   __pidataBANK1 08F5                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 003F                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074                                 FLASH_WriteWord@i 0032  
            __size_of_maxim_31856_write_register 000D                                    ?_Save_process 0070  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0025  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 00AC  
                                _temperature_int 0064                                       ??_I2C_Stop 0073  
                                  ??_Two_Display 0026                               ??_maxim_31856_init 0076  
                    FLASH_WriteBlock@GIEBitValue 0028                                 Two_Display@F2123 00A0  
                           I2C_Receive_Byte@Data 0074                           __end_of_Set_start_flag 08CA  
                            I2C_Read_Buffer@Flag 0022                        __end_of_SYSTEM_Initialize 0999  
                      __size_of_Write_Flash_head 0029                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 0A7E                                       __pbssBANK0 005A  
                                     __pbssBANK1 00A0                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                             __end_of_EUSART_Write 08E4  
                                __CFG_VCAPEN$OFF 0000                                 ??_FVR_Initialize 0073  
                                     __pmaintext 036A                                          ?___bmul 0073  
                        __end_of_Set_finish_flag 08BF                            ?_tc_temperature_trans 0070  
                                    _Record_flag 006A                                  ??_WriteAll_1621 0023  
                                        ?___wmul 0073                                       ??_TMR0_ISR 0071  
                                 ??_Save_process 0046                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0073  
                 __end_of_maxim_start_conversion 0A48                        __size_of_FLASH_WriteBlock 006B  
                        __size_of_ADC_Initialize 0008                                   _FLASH_ReadWord 09FB  
                            __size_of_Tc_Display 00BF                   __size_of_one_temperature_trans 0041  
                  __end_of_one_temperature_trans 0DCB                                          _OSCSTAT 009A  
                       __size_of_Save_Write_time 0072                                          _SSP1ADD 0212  
                       __size_of_Save_Write_word 0015                        _maxim_31856_read_register 0949  
                                ?_Set_start_flag 0070             __size_of_maxim_31856_read_nregisters 0018  
                                     ??_Key_Scan 0073                                          _Dis_TAB 1000  
                               _FLASH_EraseBlock 0A99                                 ??_SPI_Initialize 0073  
                       __size_of_FLASH_WriteWord 0045                          __size_of_Calculate_Time 018D  
                            __end_of_Two_Display 0CB2                        __size_of_SendDataBit_1621 0020  
                                      _I2C_Start 09C9  maxim_31856_read_nregisters@uch_register_address 0027  
                                      _CH1_state 0066                                        _CH2_state 0067  
                                        _bcd2bin 095A                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 0EF3  
                                        ___awmod 0E10                                  __size_of___wmul 001E  
                                        ___lwdiv 0D1A                                          ___lwmod 0C24  
                                ??_I2C_Send_Byte 0073                      __size_of_Write_Flash_finish 0029  
                              I2C_Send_Byte@Data 0074                           __end_of_FLASH_ReadWord 0A14  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 0762                                          __ptext2 0C51  
                                        __ptext3 0F45                                          __ptext4 0984  
                                        __ptext5 0928                                          __ptext6 08CA  
                                        __ptext7 0B13                                          __ptext8 08BF  
                                        __ptext9 08B6                             __end_of_SendCmd_1621 09B1  
                           SendDataBit_1621@data 0076                             __end_of_SendBit_1621 0AF3  
             __end_of_maxim_31856_write_register 0918                       _maxim_31856_write_register 090B  
                          _OSCILLATOR_Initialize 08BF                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 007A  
                                        _uch_cr1 00B4                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 00B9                 __end_of_maxim_clear_fault_status 0928  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 08D7  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 08D0                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0021  
                                        initloop 08D1                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 08FF                           ??_tc_temperature_trans 0046  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0030  
                                      _RCSTAbits 019D                                 ?_Set_finish_flag 0070  
                          Serach_Flash_Head@data 0020                                     __pstringtext 1000  
                      FLASH_ReadWord@GIEBitValue 0075                                       _time_count 006C  
                                ?_FLASH_ReadWord 0073                     __size_of_temperature_display 0037  
                            ??_EUSART_Initialize 0073                                     _display_buff 00D6  
                       __size_of_I2C_Send_Buffer 003B                                 __CFG_FOSC$INTOSC 0000  
                   __size_of_temperature_process 0033                            __size_of_EUSART_Write 0008  
                                    _Two_Display 0C81                                __size_of_I2C_Stop 0019  
                               _Write_Flash_head 0BA5                              Bq32k_Time_Init@temp 0027  
                           __end_of_Save_process 0F9C                        __size_of_I2C_Receive_Byte 002A  
                           Key_Process@gKeyValue 0054                        __end_of_EUSART_Initialize 090B  
                            Calculate_Time@temp1 003E                              Calculate_Time@temp2 0042  
                              ??_Save_Write_time 0035                                     ?_Key_Process 0070  
                              ??_Save_Write_word 0077                         ??_SPI_Exchange8bitBuffer 0020  
                                   ??_Tc_Display 0029                      __end_of_Bq32k_Rtc_Read_Time 1000  
                              FLASH_WriteBlock@i 0029                                ??_FLASH_WriteWord 0076  
                   tc_temperature_trans@var_time 004C        maxim_start_conversion@uch_conversion_mode 0020  
                                 __end_of___bmul 0949                                   __end_of___wmul 0AD3  
                                   _EUSART_Write 08DC                                __size_of_TMR0_ISR 001B  
                                 _ADC_Initialize 08E4                                 _FLASH_WriteBlock 06F7  
                           Key_Process@data_temp 0052                           ?_OSCILLATOR_Initialize 0070  
                                 __end_of_memset 0A99                                   Tc_Display@data 002B  
                               WriteAll_1621@cnt 0022                                    ??_err_Display 0026  
                            start_initialization 0015                         __size_of_TMR0_Initialize 0010  
                             __end_of_Tc_Display 04F0                  __size_of_PIN_MANAGER_Initialize 0022  
                              ??_I2C_Read_Buffer 0020                                   Two_Display@num 0027  
                                 _Calculate_Time 01DD                        __size_of_maxim_31856_init 0064  
                               _SendDataBit_1621 0AF3                                      ??_I2C_Start 0073  
                              __size_of_Key_Scan 0023                                 _temperature_sign 00B0  
             __size_of_maxim_31856_read_register 0011                                  SendBit_1621@cnt 0073  
                                       ??___bmul 0074                __size_of_maxim_clear_fault_status 0010  
                      ?_maxim_clear_fault_status 0070                                         ??___wmul 0077  
                          __size_of_SendCmd_1621 0018                            __size_of_SendBit_1621 0020  
                            I2C_Send_Buffer@Flag 0024                           __size_of_TMR0_CallBack 0024  
                         __end_of_ADC_Initialize 08EC                                      __pdataBANK1 00DA  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                    FLASH_EraseBlock@GIEBitValue 0075                         __end_of_FLASH_EraseBlock 0AB5  
                               ??_Set_start_flag 0073                                      __pbssCOMMON 0078  
                                _CH1_temperature 005E                                        ___latbits 0003  
                                  __pcstackBANK0 0020                                    __pcstackBANK1 00E4  
                           __end_of_time_Display 0585                    SPI_Exchange8bitBuffer@dataOut 0075  
                         __end_of_Calculate_Time 036A                                ??_I2C_Send_Buffer 0020  
                            __end_of_err_Display 0C24                       __size_of_EUSART_Initialize 000C  
                             I2C_Read_Buffer@ADD 0021                                     _LongPressSec 0069  
                              Two_Display@number 002B                                     _SendCmd_1621 0999  
                                   _SendBit_1621 0AD3                                        __pnvBANK1 00E9  
                __size_of_SPI_Exchange8bitBuffer 0051                                 ___lwdiv@dividend 0023  
                         _PIN_MANAGER_Initialize 0B13                                      _MAX31856Sec 0079  
              __end_of_maxim_31856_read_register 095A                                         ?_bcd2bin 0070  
                                       ?___awdiv 0073                                         ?___awmod 0073  
            __end_of_maxim_31856_read_nregisters 09C9                      _maxim_31856_read_nregisters 09B1  
                                       ?___lwdiv 0021                                         ?___lwmod 0073  
                                ?_ADC_Initialize 0070                                SendDataBit_1621@i 0077  
                          __end_of_WriteAll_1621 0D1A                     ??_INTERRUPT_InterruptManager 0072  
                    ?_maxim_31856_write_register 0074                                         _I2C_Stop 09E2  
                          __size_of_Save_process 0057                                  _CH2_temperature 0060  
                               I2C_Send_Buffer@i 0023                                 ___lwdiv@quotient 0027  
                                  _TMR0_CallBack 0B58                                  ?_Calculate_Time 0070  
                            _temperature_decimal 006B                            _one_temperature_trans 0D8A  
                               _I2C_Receive_Byte 0BCE                              SendDataBit_1621@cnt 0073  
                       FLASH_WriteWord@flashAddr 002A                                   err_Display@num 0027  
                 FLASH_WriteBlock@blockStartAddr 0026            maxim_31856_read_nregisters@uch_nBytes 0024  
                            _temperature_display 07C6                                ??_TMR0_Initialize 0073  
                                 ___wmul@product 0020                                        clear_ram0 08D6  
                                      _uch_ltcbh 006D                                        _uch_ltcbl 00B5  
                                      _uch_ltcbm 00B6                             __size_of_Key_Process 0088  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0CB2  
                                       _PIR1bits 0011                        FLASH_EraseBlock@startAddr 0073  
                               ??_FLASH_ReadWord 0075                        __size_of_SPI_Exchange8bit 0009  
                     __end_of_Write_Flash_finish 0BA5                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0A48                         __end_of_Write_Flash_head 0BCE  
                                       _SSP1STAT 0214                                     _Save_process 0F45  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0EA2  
                                     _ADCON0bits 009D                                ___wmul@multiplier 0073  
                        __size_of_FVR_Initialize 0004                           _SPI_Exchange8bitBuffer 0EA2  
                                 _Cur_Save_Index 0062                                      _err_Display 0BF8  
                            Save_Write_word@data 0033                             ?_temperature_process 0070  
                                _Save_Write_time 0685                                  _Save_Write_word 096F  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                _FLASH_WriteWord 0DCB                                         _Key_Scan 0B35  
            maxim_31856_read_nregisters@uch_buff 0023                         __end_of_FLASH_WriteBlock 0762  
                               _maxim_31856_init 0762                                _Serach_Flash_Head 0C51  
                       __size_of_Bq32k_Time_Init 001B                               ?_Serach_Flash_Head 0070  
                              _ADC_GetConversion 0A14                         ??_maxim_start_conversion 0077  
                             I2C_Send_Buffer@ADD 0022                    __size_of_tc_temperature_trans 019E  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0022  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 0050                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 060D                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0076  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2126 00A4                         __end_of_SendDataBit_1621 0B13  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0021                                  ___lwdiv@counter 0026  
                                       __ptext10 08FF                                         __ptext11 08E4  
                                       __ptext20 0AB5                                         __ptext12 0585  
                                       __ptext21 0918                                         __ptext13 0CB2  
                                       __ptext30 0949                                         __ptext22 0BF8  
                                       __ptext14 04F0                                         __ptext31 09B1  
                                       __ptext23 0431                                         __ptext15 0E10  
                                       __ptext40 08BA                                         __ptext32 0EA2  
                                       __ptext24 0A7E                                         __ptext16 0EF3  
                                       __ptext41 0999                                         __ptext33 08EC  
                                       __ptext25 0C24                                         __ptext17 07C6  
                                       __ptext50 095A                                         __ptext42 0AD3  
                                       __ptext34 0C81                                         __ptext26 0D1A  
                                       __ptext18 003F                                         __ptext51 0938  
                                       __ptext43 0685                                         __ptext35 0CE5  
                                       __ptext27 0D8A                                         __ptext19 01DD  
                                       __ptext60 0E56                                         __ptext52 060D  
                                       __ptext44 096F                                         __ptext36 0AF3  
                                       __ptext28 0A2E                                         __ptext61 0A14  
                                       __ptext53 0BCE                                         __ptext45 0DCB  
                                       __ptext37 0BA5                                         __ptext29 090B  
                                       __ptext54 0B35                                         __ptext46 06F7  
                                       __ptext38 0B7C                                         __ptext63 0A48  
                                       __ptext55 08DC                                         __ptext47 0A99  
                                       __ptext39 08C4                                         __ptext64 0B58  
                                       __ptext56 0A63                                         __ptext48 09FB  
                                       __ptext57 0D4F                                         __ptext49 0F9C  
                                       __ptext58 09E2                                         __ptext59 09C9  
                         ?_one_temperature_trans 0070                                     _SSP1CON1bits 0215  
                          FLASH_WriteWord@ramBuf 002C                            FLASH_WriteWord@offset 002F  
                      __end_of_Serach_Flash_Head 0C81                                    __size_of_main 00C7  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 0A2E  
                                       _uch_cjth 00B2                                         _uch_cjtl 00B3  
                                       _uch_mask 00B7                             Save_process@var_time 0048  
                                       int$flags 007E                                     _time_Display 04F0  
                                       _tmr_flag 00B1               __end_of_INTERRUPT_InterruptManager 0013  
                     _INTERRUPT_InterruptManager 0004                     __size_of_Bq32k_Rtc_Read_Time 0064  
                                   _SSP1STATbits 0214                          __end_of_Save_Write_time 06F7  
                        __end_of_Save_Write_word 0984                                  _I2C_Send_Buffer 0D4F  
                              ?_FLASH_EraseBlock 0073                               ??_FLASH_EraseBlock 0075  
                                     _INTCONbits 000B                          __end_of_FLASH_WriteWord 0E10  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0020                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 0685                                 _SPI_Exchange8bit 08EC  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 0BF8  
                              ??_Bq32k_Time_Init 0025                                   _FVR_Initialize 08B6  
                                   _rtc_save_ch1 00C1                                     _rtc_save_ch2 00C8  
                                     _OPTION_REG 0095                                 ??_Calculate_Time 0030  
                                ___lwmod@divisor 0073                                  _TMR0_Initialize 0928  
                                ___lwmod@counter 0020         tc_temperature_trans@temperature_absolute 004A  
                              ??_Set_finish_flag 0073                               EUSART_Write@txData 0073  
                           __size_of_Two_Display 0031                   __end_of_PIN_MANAGER_Initialize 0B35  
                     __size_of_Serach_Flash_Head 0030                             Bq32k_Time_Init@F2018 00DA  
                     __size_of_ADC_GetConversion 001A                         _maxim_clear_fault_status 0918  
