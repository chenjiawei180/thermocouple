

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jul 08 15:19:28 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020D                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0FE4                     	;# 
   185  0FE5                     	;# 
   186  0FE6                     	;# 
   187  0FE7                     	;# 
   188  0FE8                     	;# 
   189  0FE9                     	;# 
   190  0FEA                     	;# 
   191  0FEB                     	;# 
   192  0FED                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020D                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020D                     	;# 
   379  0210                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0095                     	;# 
   673  0096                     	;# 
   674  0097                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0291                     	;# 
   729  0291                     	;# 
   730  0292                     	;# 
   731  0293                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  008C                     	;# 
   778  008D                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020D                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0298                     	;# 
   844  0298                     	;# 
   845  0299                     	;# 
   846  029A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  008E                     	;# 
   891  0090                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009B                     	;# 
   901  009C                     	;# 
   902  009D                     	;# 
   903  009E                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0194                     	;# 
   919  0195                     	;# 
   920  0196                     	;# 
   921  0197                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0090                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018E                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0197                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  0394                     	;# 
  1070  0395                     	;# 
  1071  0396                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0090                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019C                     	;# 
  1151  019C                     	;# 
  1152  019D                     	;# 
  1153  019E                     	;# 
  1154  019F                     	;# 
  1155  020D                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0298                     	;# 
  1177  0298                     	;# 
  1178  0299                     	;# 
  1179  029A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  011D                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  018E                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019C                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020D                     	;# 
  1267  0210                     	;# 
  1268  0211                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0212                     	;# 
  1272  0213                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  0394                     	;# 
  1292  0395                     	;# 
  1293  0396                     	;# 
  1294  0FE4                     	;# 
  1295  0FE5                     	;# 
  1296  0FE6                     	;# 
  1297  0FE7                     	;# 
  1298  0FE8                     	;# 
  1299  0FE9                     	;# 
  1300  0FEA                     	;# 
  1301  0FEB                     	;# 
  1302  0FED                     	;# 
  1303  0FEE                     	;# 
  1304  0FEF                     	;# 
  1305  0000                     	;# 
  1306  0001                     	;# 
  1307  0002                     	;# 
  1308  0003                     	;# 
  1309  0004                     	;# 
  1310  0005                     	;# 
  1311  0006                     	;# 
  1312  0007                     	;# 
  1313  0008                     	;# 
  1314  0009                     	;# 
  1315  000A                     	;# 
  1316  000B                     	;# 
  1317  000C                     	;# 
  1318  000D                     	;# 
  1319  000E                     	;# 
  1320  0010                     	;# 
  1321  0011                     	;# 
  1322  0012                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0016                     	;# 
  1326  0017                     	;# 
  1327  0018                     	;# 
  1328  0019                     	;# 
  1329  001A                     	;# 
  1330  001B                     	;# 
  1331  001C                     	;# 
  1332  008C                     	;# 
  1333  008D                     	;# 
  1334  008E                     	;# 
  1335  0090                     	;# 
  1336  0091                     	;# 
  1337  0092                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0099                     	;# 
  1342  009A                     	;# 
  1343  009B                     	;# 
  1344  009B                     	;# 
  1345  009C                     	;# 
  1346  009D                     	;# 
  1347  009E                     	;# 
  1348  010C                     	;# 
  1349  010D                     	;# 
  1350  010E                     	;# 
  1351  0116                     	;# 
  1352  0117                     	;# 
  1353  011D                     	;# 
  1354  018C                     	;# 
  1355  018D                     	;# 
  1356  018E                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0194                     	;# 
  1363  0195                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0214                     	;# 
  1387  0215                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0216                     	;# 
  1391  0216                     	;# 
  1392  0217                     	;# 
  1393  0217                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  0394                     	;# 
  1403  0395                     	;# 
  1404  0396                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0095                     	;# 
  1450  0096                     	;# 
  1451  0097                     	;# 
  1452  0099                     	;# 
  1453  009A                     	;# 
  1454  009B                     	;# 
  1455  009B                     	;# 
  1456  009C                     	;# 
  1457  009D                     	;# 
  1458  009E                     	;# 
  1459  010C                     	;# 
  1460  010D                     	;# 
  1461  010E                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  011D                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0194                     	;# 
  1474  0195                     	;# 
  1475  0196                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019C                     	;# 
  1484  019C                     	;# 
  1485  019D                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  020D                     	;# 
  1489  0210                     	;# 
  1490  0211                     	;# 
  1491  0211                     	;# 
  1492  0212                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0214                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0216                     	;# 
  1502  0216                     	;# 
  1503  0217                     	;# 
  1504  0217                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  0394                     	;# 
  1514  0395                     	;# 
  1515  0396                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  008C                     	;# 
  1555  008D                     	;# 
  1556  008E                     	;# 
  1557  0090                     	;# 
  1558  0091                     	;# 
  1559  0092                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0099                     	;# 
  1564  009A                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020D                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0015                     	;# 
  1657  0016                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  0019                     	;# 
  1662  001A                     	;# 
  1663  001B                     	;# 
  1664  001C                     	;# 
  1665  008C                     	;# 
  1666  008D                     	;# 
  1667  008E                     	;# 
  1668  0090                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  010C                     	;# 
  1682  010D                     	;# 
  1683  010E                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  011D                     	;# 
  1687  018C                     	;# 
  1688  018D                     	;# 
  1689  018E                     	;# 
  1690  0191                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  019C                     	;# 
  1707  019D                     	;# 
  1708  019E                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0214                     	;# 
  1720  0215                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0291                     	;# 
  1728  0291                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  029A                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0015                     	;# 
  1768  0016                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001B                     	;# 
  1775  001C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  0090                     	;# 
  1780  0091                     	;# 
  1781  0092                     	;# 
  1782  0095                     	;# 
  1783  0096                     	;# 
  1784  0097                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0116                     	;# 
  1796  0117                     	;# 
  1797  011D                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  0191                     	;# 
  1802  0191                     	;# 
  1803  0192                     	;# 
  1804  0193                     	;# 
  1805  0193                     	;# 
  1806  0194                     	;# 
  1807  0195                     	;# 
  1808  0196                     	;# 
  1809  0197                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019D                     	;# 
  1819  019E                     	;# 
  1820  019F                     	;# 
  1821  020D                     	;# 
  1822  0210                     	;# 
  1823  0211                     	;# 
  1824  0211                     	;# 
  1825  0212                     	;# 
  1826  0212                     	;# 
  1827  0213                     	;# 
  1828  0213                     	;# 
  1829  0214                     	;# 
  1830  0214                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0216                     	;# 
  1835  0216                     	;# 
  1836  0217                     	;# 
  1837  0217                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0298                     	;# 
  1843  0298                     	;# 
  1844  0299                     	;# 
  1845  029A                     	;# 
  1846  0394                     	;# 
  1847  0395                     	;# 
  1848  0396                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0015                     	;# 
  1879  0016                     	;# 
  1880  0016                     	;# 
  1881  0017                     	;# 
  1882  0018                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  008E                     	;# 
  1890  0090                     	;# 
  1891  0091                     	;# 
  1892  0092                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0099                     	;# 
  1897  009A                     	;# 
  1898  009B                     	;# 
  1899  009B                     	;# 
  1900  009C                     	;# 
  1901  009D                     	;# 
  1902  009E                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  020D                     	;# 
  1933  0210                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0291                     	;# 
  1950  0291                     	;# 
  1951  0292                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  0394                     	;# 
  1958  0395                     	;# 
  1959  0396                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971                           
  1972                           	psect	idataBANK1
  1973  0875                     __pidataBANK1:	
  1974                           
  1975                           ;initializer for Bq32k_Time_Init@F2018
  1976  0875  3401               	retlw	1
  1977  0876  3450               	retlw	80
  1978  0877  3423               	retlw	35
  1979  0878  3402               	retlw	2
  1980  0879  3408               	retlw	8
  1981  087A  3407               	retlw	7
  1982  087B  3416               	retlw	22
  1983  087C  3400               	retlw	0
  1984  087D  3400               	retlw	0
  1985  087E  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _Dis_TAB:	
  1990  1000  34D7               	retlw	215
  1991  1001  3450               	retlw	80
  1992  1002  34B5               	retlw	181
  1993  1003  34F1               	retlw	241
  1994  1004  3472               	retlw	114
  1995  1005  34E3               	retlw	227
  1996  1006  34E7               	retlw	231
  1997  1007  3451               	retlw	81
  1998  1008  34F7               	retlw	247
  1999  1009  34F3               	retlw	243
  2000  100A  3477               	retlw	119
  2001  100B  34E6               	retlw	230
  2002  100C  3487               	retlw	135
  2003  100D  34F4               	retlw	244
  2004  100E  34A7               	retlw	167
  2005  100F  3427               	retlw	39
  2006  1010  3457               	retlw	87
  2007  1011  3420               	retlw	32
  2008  1012  3420               	retlw	32
  2009  1013  3420               	retlw	32
  2010  1014  3420               	retlw	32
  2011  1015                     __end_of_Dis_TAB:	
  2012                           
  2013                           	psect	nvBANK1
  2014  00ED                     __pnvBANK1:	
  2015  00ED                     _timer0ReloadVal:	
  2016  00ED                     	ds	1
  2017  000B                     _INTCONbits	set	11
  2018  0011                     _PIR1bits	set	17
  2019  0015                     _TMR0	set	21
  2020  0067                     _RA7	set	103
  2021  0069                     _RB1	set	105
  2022  006B                     _RB3	set	107
  2023  006D                     _RB5	set	109
  2024  009D                     _ADCON0	set	157
  2025  009D                     _ADCON0bits	set	157
  2026  009E                     _ADCON1	set	158
  2027  009C                     _ADRESH	set	156
  2028  009B                     _ADRESL	set	155
  2029  0095                     _OPTION_REG	set	149
  2030  0095                     _OPTION_REGbits	set	149
  2031  0099                     _OSCCON	set	153
  2032  009A                     _OSCSTAT	set	154
  2033  008C                     _TRISA	set	140
  2034  008D                     _TRISB	set	141
  2035  008E                     _TRISC	set	142
  2036  0469                     _TRISB1	set	1129
  2037  046B                     _TRISB3	set	1131
  2038  011D                     _APFCON	set	285
  2039  0117                     _FVRCON	set	279
  2040  0117                     _FVRCONbits	set	279
  2041  010C                     _LATA	set	268
  2042  010D                     _LATB	set	269
  2043  010E                     _LATC	set	270
  2044  0860                     _LATA0	set	2144
  2045  0861                     _LATA1	set	2145
  2046  0862                     _LATA2	set	2146
  2047  0863                     _LATA3	set	2147
  2048  0864                     _LATA4	set	2148
  2049  0865                     _LATA5	set	2149
  2050  0868                     _LATB0	set	2152
  2051  0869                     _LATB1	set	2153
  2052  0870                     _LATC0	set	2160
  2053  0871                     _LATC1	set	2161
  2054  0872                     _LATC2	set	2162
  2055  018C                     _ANSELA	set	396
  2056  018D                     _ANSELB	set	397
  2057  018E                     _ANSELC	set	398
  2058  019F                     _BAUDCON	set	415
  2059  0192                     _PMADRH	set	402
  2060  0191                     _PMADRL	set	401
  2061  0195                     _PMCON1bits	set	405
  2062  0196                     _PMCON2	set	406
  2063  0194                     _PMDATH	set	404
  2064  0193                     _PMDATL	set	403
  2065  0199                     _RCREG	set	409
  2066  019D                     _RCSTA	set	413
  2067  019D                     _RCSTAbits	set	413
  2068  019C                     _SPBRGH	set	412
  2069  019B                     _SPBRGL	set	411
  2070  019A                     _TXREG	set	410
  2071  019E                     _TXSTA	set	414
  2072  0212                     _SSP1ADD	set	530
  2073  0215                     _SSP1CON1	set	533
  2074  0215                     _SSP1CON1bits	set	533
  2075  0214                     _SSP1STAT	set	532
  2076  0214                     _SSP1STATbits	set	532
  2077  0211                     _SSPBUF	set	529
  2078  020D                     _WPUB	set	525
  2079  0210                     _WPUE	set	528
  2080                           
  2081                           ; #config settings
  2082  0000                     
  2083                           	psect	cinit
  2084  0015                     start_initialization:	
  2085  0015                     __initialization:	
  2086                           
  2087                           ; Clear objects allocated to COMMON
  2088  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2089  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2090  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2091                           
  2092                           ; Clear objects allocated to BANK0
  2093  0018  3063               	movlw	low __pbssBANK0
  2094  0019  0084               	movwf	4
  2095  001A  3000               	movlw	high __pbssBANK0
  2096  001B  0085               	movwf	5
  2097  001C  300B               	movlw	11
  2098  001D  3188  2056  3180   	fcall	clear_ram0
  2099                           
  2100                           ; Clear objects allocated to BANK1
  2101  0020  30A0               	movlw	low __pbssBANK1
  2102  0021  0084               	movwf	4
  2103  0022  3000               	movlw	high __pbssBANK1
  2104  0023  0085               	movwf	5
  2105  0024  3043               	movlw	67
  2106  0025  3188  2056  3180   	fcall	clear_ram0
  2107                           
  2108                           ; Clear objects allocated to BANK2
  2109  0028  3020               	movlw	low __pbssBANK2
  2110  0029  0084               	movwf	4
  2111  002A  3001               	movlw	high __pbssBANK2
  2112  002B  0085               	movwf	5
  2113  002C  3040               	movlw	64
  2114  002D  3188  2056  3180   	fcall	clear_ram0
  2115                           
  2116                           ; Initialize objects allocated to BANK1
  2117  0030  3075               	movlw	low __pidataBANK1
  2118  0031  0084               	movwf	4
  2119  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2120  0033  0085               	movwf	5
  2121  0034  30E3               	movlw	low __pdataBANK1
  2122  0035  0086               	movwf	6
  2123  0036  3000               	movlw	high __pdataBANK1
  2124  0037  0087               	movwf	7
  2125  0038  300A               	movlw	10
  2126  0039  3188  2050         	fcall	init_ram
  2127  003B                     end_of_initialization:	
  2128                           ;End of C runtime variable initialization code
  2129                           
  2130  003B                     __end_of__initialization:	
  2131  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2132  003C  0020               	movlb	0
  2133  003D  3184  2C59         	ljmp	_main	;jump to C main() function
  2134                           
  2135                           	psect	bssCOMMON
  2136  0078                     __pbssCOMMON:	
  2137  0078                     _LongPressSec:	
  2138  0078                     	ds	1
  2139  0079                     _uch_cr0:	
  2140  0079                     	ds	1
  2141  007A                     _uch_ltcbh:	
  2142  007A                     	ds	1
  2143                           
  2144                           	psect	bssBANK0
  2145  0063                     __pbssBANK0:	
  2146  0063                     _temperature_value:	
  2147  0063                     	ds	4
  2148  0067                     _CH1_temperature:	
  2149  0067                     	ds	2
  2150  0069                     _CH2_temperature:	
  2151  0069                     	ds	2
  2152  006B                     _Record_flag:	
  2153  006B                     	ds	1
  2154  006C                     _temperature_decimal:	
  2155  006C                     	ds	1
  2156  006D                     _time_count:	
  2157  006D                     	ds	1
  2158                           
  2159                           	psect	bssBANK1
  2160  00A0                     __pbssBANK1:	
  2161  00A0                     Two_Display@F2123:	
  2162  00A0                     	ds	4
  2163  00A4                     err_Display@F2126:	
  2164  00A4                     	ds	4
  2165  00A8                     time_Display@F2129:	
  2166  00A8                     	ds	4
  2167  00AC                     TMR0_ISR@CountCallBack:	
  2168  00AC                     	ds	2
  2169  00AE                     _Cur_Save_Index:	
  2170  00AE                     	ds	2
  2171  00B0                     _Cur_temperature:	
  2172  00B0                     	ds	2
  2173  00B2                     _temperature_int:	
  2174  00B2                     	ds	2
  2175  00B4                     _CH1_state:	
  2176  00B4                     	ds	1
  2177  00B5                     _CH2_state:	
  2178  00B5                     	ds	1
  2179  00B6                     _Cur_temperature_time_ch1:	
  2180  00B6                     	ds	1
  2181  00B7                     _Cur_temperature_time_ch2:	
  2182  00B7                     	ds	1
  2183  00B8                     _MAX31856Sec:	
  2184  00B8                     	ds	1
  2185  00B9                     _temperature_sign:	
  2186  00B9                     	ds	1
  2187  00BA                     _tmr_flag:	
  2188  00BA                     	ds	1
  2189  00BB                     _uch_cjth:	
  2190  00BB                     	ds	1
  2191  00BC                     _uch_cjtl:	
  2192  00BC                     	ds	1
  2193  00BD                     _uch_cr1:	
  2194  00BD                     	ds	1
  2195  00BE                     _uch_ltcbl:	
  2196  00BE                     	ds	1
  2197  00BF                     _uch_ltcbm:	
  2198  00BF                     	ds	1
  2199  00C0                     _uch_mask:	
  2200  00C0                     	ds	1
  2201  00C1                     _uch_sr:	
  2202  00C1                     	ds	1
  2203  00C2                     _uch_reg:	
  2204  00C2                     	ds	8
  2205  00CA                     _rtc_save_ch1:	
  2206  00CA                     	ds	7
  2207  00D1                     _rtc_save_ch2:	
  2208  00D1                     	ds	7
  2209  00D8                     _rtc_tm:	
  2210  00D8                     	ds	7
  2211  00DF                     _display_buff:	
  2212  00DF                     	ds	4
  2213                           
  2214                           	psect	dataBANK1
  2215  00E3                     __pdataBANK1:	
  2216  00E3                     Bq32k_Time_Init@F2018:	
  2217  00E3                     	ds	10
  2218                           
  2219                           	psect	bssBANK2
  2220  0120                     __pbssBANK2:	
  2221  0120                     _Flash_buff:	
  2222  0120                     	ds	64
  2223                           
  2224                           	psect	clrtext
  2225  0856                     clear_ram0:	
  2226                           ;	Called with FSR0 containing the base address, and
  2227                           ;	WREG with the size to clear
  2228                           
  2229  0856  0064               	clrwdt	;clear the watchdog before getting into this loop
  2230  0857                     clrloop0:	
  2231  0857  0180               	clrf	0	;clear RAM location pointed to by FSR
  2232  0858  3101               	addfsr 0,1
  2233  0859  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2234  085A  2857               	goto	clrloop0	;have we reached the end yet?
  2235  085B  3400               	retlw	0	;all done for this memory range, return
  2236                           
  2237                           	psect	inittext
  2238  0850                     init_ram:	
  2239  0850  00FE               	movwf	126
  2240  0851                     initloop:	
  2241  0851  0012               	moviw fsr0++
  2242  0852  001E               	movwi fsr1++
  2243  0853  0BFE               	decfsz	126,f
  2244  0854  2851               	goto	initloop
  2245  0855  3400               	retlw	0
  2246                           
  2247                           	psect	cstackBANK2
  2248  0160                     __pcstackBANK2:	
  2249  0160                     main@data_temp:	
  2250                           
  2251                           ; 2 bytes @ 0x0
  2252  0160                     	ds	2
  2253  0162                     main@i:	
  2254                           
  2255                           ; 1 bytes @ 0x2
  2256  0162                     	ds	1
  2257  0163                     main@bat_data:	
  2258                           
  2259                           ; 2 bytes @ 0x3
  2260  0163                     	ds	2
  2261                           
  2262                           	psect	cstackCOMMON
  2263  0070                     __pcstackCOMMON:	
  2264  0070                     ?_OSCILLATOR_Initialize:	
  2265  0070                     ?_SPI_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_EUSART_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_ADC_Initialize:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_TMR0_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_FVR_Initialize:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_TMR0_CallBack:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_TMR0_CallBack:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_maxim_31856_init:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Bq32k_Time_Init:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_SendCmd_1621:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Serach_Flash_Head:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_temperature_process:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_Save_process:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_Calculate_Time:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_Tc_Display:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_err_Display:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_Two_Display:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_time_Display:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_Bq32k_Rtc_Read_Time:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_Set_start_flag:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_Write_Flash_head:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_Save_Write_time:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_Set_finish_flag:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_Write_Flash_finish:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_bcd2bin:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_PIN_MANAGER_Initialize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_SYSTEM_Initialize:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_SPI_Exchange8bit:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_EUSART_Write:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_TMR0_ISR:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_INTERRUPT_InterruptManager:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_maxim_31856_read_register:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_maxim_start_conversion:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_maxim_clear_fault_status:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_tc_temperature_trans:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_one_temperature_trans:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_temperature_display:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_I2C_Start:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_Send_Byte:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_I2C_Receive_Byte:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_I2C_Stop:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_Key_Scan:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_Key_Process:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397                           
  2398                           ; 2 bytes @ 0x0
  2399  0070                     	ds	1
  2400  0071                     ??_TMR0_ISR:	
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_INTERRUPT_InterruptManager:	
  2405                           
  2406                           ; 1 bytes @ 0x2
  2407  0072                     	ds	1
  2408  0073                     ??_OSCILLATOR_Initialize:	
  2409  0073                     ??_SPI_Initialize:	
  2410                           ; 1 bytes @ 0x3
  2411                           
  2412  0073                     ??_EUSART_Initialize:	
  2413                           ; 1 bytes @ 0x3
  2414                           
  2415  0073                     ??_ADC_Initialize:	
  2416                           ; 1 bytes @ 0x3
  2417                           
  2418  0073                     ??_TMR0_Initialize:	
  2419                           ; 1 bytes @ 0x3
  2420                           
  2421  0073                     ??_FVR_Initialize:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0073                     ?_FLASH_EraseBlock:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0073                     ?_memset:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0073                     ??_Set_start_flag:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0073                     ??_Set_finish_flag:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436  0073                     ??_PIN_MANAGER_Initialize:	
  2437                           ; 1 bytes @ 0x3
  2438                           
  2439  0073                     ??_SPI_Exchange8bit:	
  2440                           ; 1 bytes @ 0x3
  2441                           
  2442  0073                     ??_EUSART_Write:	
  2443                           ; 1 bytes @ 0x3
  2444                           
  2445  0073                     ?_SendBit_1621:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ?_SendDataBit_1621:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ??_I2C_Start:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ??_I2C_Send_Byte:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_I2C_Receive_Byte:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??_I2C_Stop:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     ??_Key_Scan:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     ?___bmul:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     ?_FLASH_ReadWord:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     ?_ADC_GetConversion:	
  2473                           ; 2 bytes @ 0x3
  2474                           
  2475  0073                     ?___wmul:	
  2476                           ; 2 bytes @ 0x3
  2477                           
  2478  0073                     ?___awdiv:	
  2479                           ; 2 bytes @ 0x3
  2480                           
  2481  0073                     ?___awmod:	
  2482                           ; 2 bytes @ 0x3
  2483                           
  2484  0073                     ?___lwmod:	
  2485                           ; 2 bytes @ 0x3
  2486                           
  2487  0073                     SPI_Exchange8bit@data:	
  2488                           ; 2 bytes @ 0x3
  2489                           
  2490  0073                     EUSART_Write@txData:	
  2491                           ; 1 bytes @ 0x3
  2492                           
  2493  0073                     SendBit_1621@cnt:	
  2494                           ; 1 bytes @ 0x3
  2495                           
  2496  0073                     SendDataBit_1621@cnt:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0073                     ___bmul@multiplicand:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0073                     FLASH_ReadWord@flashAddr:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0073                     FLASH_EraseBlock@startAddr:	
  2506                           ; 2 bytes @ 0x3
  2507                           
  2508  0073                     ___wmul@multiplier:	
  2509                           ; 2 bytes @ 0x3
  2510                           
  2511  0073                     ___awdiv@divisor:	
  2512                           ; 2 bytes @ 0x3
  2513                           
  2514  0073                     ___awmod@divisor:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0073                     ___lwmod@divisor:	
  2518                           ; 2 bytes @ 0x3
  2519                           
  2520  0073                     memset@c:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x3
  2525  0073                     	ds	1
  2526  0074                     ??_SYSTEM_Initialize:	
  2527  0074                     ?_SPI_Exchange8bitBuffer:	
  2528                           ; 1 bytes @ 0x4
  2529                           
  2530  0074                     ?_maxim_31856_write_register:	
  2531                           ; 1 bytes @ 0x4
  2532                           
  2533  0074                     ??_maxim_31856_read_register:	
  2534                           ; 1 bytes @ 0x4
  2535                           
  2536  0074                     ??_SendBit_1621:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  0074                     ??_SendDataBit_1621:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  0074                     ??___bmul:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2546                           ; 1 bytes @ 0x4
  2547                           
  2548  0074                     maxim_31856_write_register@uch_register_value:	
  2549                           ; 1 bytes @ 0x4
  2550                           
  2551  0074                     I2C_Send_Byte@Data:	
  2552                           ; 1 bytes @ 0x4
  2553                           
  2554  0074                     I2C_Receive_Byte@Data:	
  2555                           ; 1 bytes @ 0x4
  2556                           
  2557                           
  2558                           ; 1 bytes @ 0x4
  2559  0074                     	ds	1
  2560  0075                     ??_FLASH_EraseBlock:	
  2561  0075                     ??_FLASH_ReadWord:	
  2562                           ; 1 bytes @ 0x5
  2563                           
  2564  0075                     ??_ADC_GetConversion:	
  2565                           ; 1 bytes @ 0x5
  2566                           
  2567  0075                     ??_maxim_31856_write_register:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  0075                     FLASH_ReadWord@GIEBitValue:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     FLASH_EraseBlock@GIEBitValue:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579  0075                     maxim_31856_write_register@uch_register_address:	
  2580                           ; 1 bytes @ 0x5
  2581                           
  2582  0075                     maxim_31856_read_register@uch_register_address:	
  2583                           ; 1 bytes @ 0x5
  2584                           
  2585  0075                     I2C_Send_Byte@i:	
  2586                           ; 1 bytes @ 0x5
  2587                           
  2588  0075                     I2C_Receive_Byte@i:	
  2589                           ; 1 bytes @ 0x5
  2590                           
  2591  0075                     Key_Scan@Key_val:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0075                     ___bmul@product:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597  0075                     ___wmul@multiplicand:	
  2598                           ; 1 bytes @ 0x5
  2599                           
  2600  0075                     ___awdiv@dividend:	
  2601                           ; 2 bytes @ 0x5
  2602                           
  2603  0075                     ___awmod@dividend:	
  2604                           ; 2 bytes @ 0x5
  2605                           
  2606  0075                     ___lwmod@dividend:	
  2607                           ; 2 bytes @ 0x5
  2608                           
  2609  0075                     memset@n:	
  2610                           ; 2 bytes @ 0x5
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x5
  2614  0075                     	ds	1
  2615  0076                     ??_maxim_31856_init:	
  2616  0076                     ??_FLASH_WriteWord:	
  2617                           ; 1 bytes @ 0x6
  2618                           
  2619  0076                     ?_I2C_Read_Buffer:	
  2620                           ; 1 bytes @ 0x6
  2621                           
  2622  0076                     ?_I2C_Send_Buffer:	
  2623                           ; 1 bytes @ 0x6
  2624                           
  2625  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628  0076                     ADC_GetConversion@channel:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     maxim_31856_read_register@uch_register_data:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     SendBit_1621@data:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     SendDataBit_1621@data:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640  0076                     I2C_Read_Buffer@buff:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  0076                     I2C_Send_Buffer@buff:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0076                     ___bmul@multiplier:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649                           
  2650                           ; 1 bytes @ 0x6
  2651  0076                     	ds	1
  2652  0077                     ??_memset:	
  2653  0077                     ??_Write_Flash_head:	
  2654                           ; 1 bytes @ 0x7
  2655                           
  2656  0077                     ??_Write_Flash_finish:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659  0077                     ??_maxim_start_conversion:	
  2660                           ; 1 bytes @ 0x7
  2661                           
  2662  0077                     ??_maxim_clear_fault_status:	
  2663                           ; 1 bytes @ 0x7
  2664                           
  2665  0077                     ??___wmul:	
  2666                           ; 1 bytes @ 0x7
  2667                           
  2668  0077                     ??___awdiv:	
  2669                           ; 1 bytes @ 0x7
  2670                           
  2671  0077                     ??___awmod:	
  2672                           ; 1 bytes @ 0x7
  2673                           
  2674  0077                     ??___lwmod:	
  2675                           ; 1 bytes @ 0x7
  2676                           
  2677  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2678                           ; 1 bytes @ 0x7
  2679                           
  2680  0077                     SendBit_1621@i:	
  2681                           ; 1 bytes @ 0x7
  2682                           
  2683  0077                     SendDataBit_1621@i:	
  2684                           ; 1 bytes @ 0x7
  2685                           
  2686  0077                     I2C_Read_Buffer@Length:	
  2687                           ; 1 bytes @ 0x7
  2688                           
  2689  0077                     I2C_Send_Buffer@Length:	
  2690                           ; 1 bytes @ 0x7
  2691                           
  2692  0077                     bcd2bin@val:	
  2693                           ; 1 bytes @ 0x7
  2694                           
  2695                           
  2696                           ; 1 bytes @ 0x7
  2697  0077                     	ds	1
  2698  0078                     ??_Serach_Flash_Head:	
  2699  0078                     ??_temperature_process:	
  2700                           ; 1 bytes @ 0x8
  2701                           
  2702                           
  2703                           	psect	cstackBANK0
  2704  0020                     __pcstackBANK0:	
  2705                           ; 1 bytes @ 0x8
  2706                           
  2707  0020                     ?_FLASH_WriteBlock:	
  2708  0020                     ??_SendCmd_1621:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0020                     ?_WriteAll_1621:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0020                     ??_bcd2bin:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0020                     ??_SPI_Exchange8bitBuffer:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0020                     ??_I2C_Read_Buffer:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0020                     ??_I2C_Send_Buffer:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0020                     maxim_start_conversion@uch_conversion_mode:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0020                     ___awdiv@counter:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0020                     ___awmod@counter:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0020                     ___lwmod@counter:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0020                     memset@p1:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0020                     FLASH_WriteBlock@writeAddr:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0020                     WriteAll_1621@p:	
  2745                           ; 2 bytes @ 0x0
  2746                           
  2747  0020                     ___wmul@product:	
  2748                           ; 2 bytes @ 0x0
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x0
  2752  0020                     	ds	1
  2753  0021                     ?___lwdiv:	
  2754  0021                     SendCmd_1621@command:	
  2755                           ; 2 bytes @ 0x1
  2756                           
  2757  0021                     I2C_Read_Buffer@ADD:	
  2758                           ; 1 bytes @ 0x1
  2759                           
  2760  0021                     ___awdiv@sign:	
  2761                           ; 1 bytes @ 0x1
  2762                           
  2763  0021                     ___awmod@sign:	
  2764                           ; 1 bytes @ 0x1
  2765                           
  2766  0021                     memset@p:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769  0021                     ___lwdiv@divisor:	
  2770                           ; 1 bytes @ 0x1
  2771                           
  2772                           
  2773                           ; 2 bytes @ 0x1
  2774  0021                     	ds	1
  2775  0022                     FLASH_WriteBlock@flashWordArray:	
  2776  0022                     WriteAll_1621@cnt:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     I2C_Read_Buffer@Flag:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     I2C_Send_Buffer@ADD:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ___awdiv@quotient:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788                           
  2789                           ; 2 bytes @ 0x2
  2790  0022                     	ds	1
  2791  0023                     ??_FLASH_WriteBlock:	
  2792  0023                     ??_WriteAll_1621:	
  2793                           ; 1 bytes @ 0x3
  2794                           
  2795  0023                     ??_Bq32k_Rtc_Read_Time:	
  2796                           ; 1 bytes @ 0x3
  2797                           
  2798  0023                     ?_maxim_31856_read_nregisters:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     maxim_31856_read_nregisters@uch_buff:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     I2C_Send_Buffer@i:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     ___lwdiv@dividend:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810                           
  2811                           ; 2 bytes @ 0x3
  2812  0023                     	ds	1
  2813  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2814  0024                     WriteAll_1621@addr:	
  2815                           ; 1 bytes @ 0x4
  2816                           
  2817  0024                     I2C_Send_Buffer@Flag:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820                           
  2821                           ; 1 bytes @ 0x4
  2822  0024                     	ds	1
  2823  0025                     ??_Bq32k_Time_Init:	
  2824  0025                     ??_maxim_31856_read_nregisters:	
  2825                           ; 1 bytes @ 0x5
  2826                           
  2827  0025                     ??___lwdiv:	
  2828                           ; 1 bytes @ 0x5
  2829                           
  2830  0025                     WriteAll_1621@i:	
  2831                           ; 1 bytes @ 0x5
  2832                           
  2833  0025                     Bq32k_Rtc_Read_Time@temp:	
  2834                           ; 1 bytes @ 0x5
  2835                           
  2836                           
  2837                           ; 10 bytes @ 0x5
  2838  0025                     	ds	1
  2839  0026                     ??_err_Display:	
  2840  0026                     ??_Two_Display:	
  2841                           ; 1 bytes @ 0x6
  2842                           
  2843  0026                     ___lwdiv@counter:	
  2844                           ; 1 bytes @ 0x6
  2845                           
  2846  0026                     FLASH_WriteBlock@blockStartAddr:	
  2847                           ; 1 bytes @ 0x6
  2848                           
  2849                           
  2850                           ; 2 bytes @ 0x6
  2851  0026                     	ds	1
  2852  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2853  0027                     ___lwdiv@quotient:	
  2854                           ; 1 bytes @ 0x7
  2855                           
  2856  0027                     Two_Display@num:	
  2857                           ; 2 bytes @ 0x7
  2858                           
  2859  0027                     err_Display@num:	
  2860                           ; 4 bytes @ 0x7
  2861                           
  2862  0027                     Bq32k_Time_Init@temp:	
  2863                           ; 4 bytes @ 0x7
  2864                           
  2865                           
  2866                           ; 10 bytes @ 0x7
  2867  0027                     	ds	1
  2868  0028                     ??_one_temperature_trans:	
  2869  0028                     FLASH_WriteBlock@GIEBitValue:	
  2870                           ; 1 bytes @ 0x8
  2871                           
  2872                           
  2873                           ; 1 bytes @ 0x8
  2874  0028                     	ds	1
  2875  0029                     ??_Tc_Display:	
  2876  0029                     FLASH_WriteBlock@i:	
  2877                           ; 1 bytes @ 0x9
  2878                           
  2879                           
  2880                           ; 1 bytes @ 0x9
  2881  0029                     	ds	1
  2882  002A                     ?_FLASH_WriteWord:	
  2883  002A                     Tc_Display@count:	
  2884                           ; 1 bytes @ 0xA
  2885                           
  2886  002A                     FLASH_WriteWord@flashAddr:	
  2887                           ; 1 bytes @ 0xA
  2888                           
  2889                           
  2890                           ; 2 bytes @ 0xA
  2891  002A                     	ds	1
  2892  002B                     Two_Display@number:	
  2893  002B                     Tc_Display@data:	
  2894                           ; 1 bytes @ 0xB
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0xB
  2898  002B                     	ds	1
  2899  002C                     FLASH_WriteWord@ramBuf:	
  2900                           
  2901                           ; 1 bytes @ 0xC
  2902  002C                     	ds	1
  2903  002D                     FLASH_WriteWord@word:	
  2904                           
  2905                           ; 2 bytes @ 0xD
  2906  002D                     	ds	2
  2907  002F                     FLASH_WriteWord@offset:	
  2908  002F                     Bq32k_Rtc_Read_Time@p:	
  2909                           ; 1 bytes @ 0xF
  2910                           
  2911                           
  2912                           ; 1 bytes @ 0xF
  2913  002F                     	ds	1
  2914  0030                     ??_time_Display:	
  2915  0030                     FLASH_WriteWord@blockStartAddr:	
  2916                           ; 1 bytes @ 0x10
  2917                           
  2918                           
  2919                           ; 2 bytes @ 0x10
  2920  0030                     	ds	2
  2921  0032                     FLASH_WriteWord@i:	
  2922                           
  2923                           ; 1 bytes @ 0x12
  2924  0032                     	ds	1
  2925  0033                     ?_Save_Write_word:	
  2926  0033                     Serach_Flash_Head@data:	
  2927                           ; 1 bytes @ 0x13
  2928                           
  2929  0033                     Save_Write_word@data:	
  2930                           ; 2 bytes @ 0x13
  2931                           
  2932  0033                     time_Display@num:	
  2933                           ; 2 bytes @ 0x13
  2934                           
  2935                           
  2936                           ; 4 bytes @ 0x13
  2937  0033                     	ds	2
  2938  0035                     ??_Save_Write_word:	
  2939  0035                     Serach_Flash_Head@i:	
  2940                           ; 1 bytes @ 0x15
  2941                           
  2942                           
  2943                           ; 2 bytes @ 0x15
  2944  0035                     	ds	2
  2945  0037                     ??_Save_Write_time:	
  2946                           
  2947                           ; 1 bytes @ 0x17
  2948  0037                     	ds	2
  2949  0039                     ??_Calculate_Time:	
  2950                           
  2951                           ; 1 bytes @ 0x19
  2952  0039                     	ds	10
  2953  0043                     Calculate_Time@temp:	
  2954                           
  2955                           ; 4 bytes @ 0x23
  2956  0043                     	ds	4
  2957  0047                     Calculate_Time@temp1:	
  2958                           
  2959                           ; 4 bytes @ 0x27
  2960  0047                     	ds	4
  2961  004B                     Calculate_Time@temp2:	
  2962                           
  2963                           ; 4 bytes @ 0x2B
  2964  004B                     	ds	4
  2965  004F                     ??_Save_process:	
  2966  004F                     ??_tc_temperature_trans:	
  2967                           ; 1 bytes @ 0x2F
  2968                           
  2969                           
  2970                           ; 1 bytes @ 0x2F
  2971  004F                     	ds	2
  2972  0051                     Save_process@var_time:	
  2973                           
  2974                           ; 2 bytes @ 0x31
  2975  0051                     	ds	2
  2976  0053                     tc_temperature_trans@temperature_absolute:	
  2977                           
  2978                           ; 2 bytes @ 0x33
  2979  0053                     	ds	2
  2980  0055                     tc_temperature_trans@var_time:	
  2981                           
  2982                           ; 2 bytes @ 0x35
  2983  0055                     	ds	2
  2984  0057                     tc_temperature_trans@temperature_temp:	
  2985                           
  2986                           ; 2 bytes @ 0x37
  2987  0057                     	ds	2
  2988  0059                     ??_temperature_display:	
  2989                           
  2990                           ; 1 bytes @ 0x39
  2991  0059                     	ds	1
  2992  005A                     ??_Key_Process:	
  2993                           
  2994                           ; 1 bytes @ 0x3A
  2995  005A                     	ds	1
  2996  005B                     Key_Process@data_temp:	
  2997                           
  2998                           ; 2 bytes @ 0x3B
  2999  005B                     	ds	2
  3000  005D                     Key_Process@gKeyValue:	
  3001                           
  3002                           ; 1 bytes @ 0x3D
  3003  005D                     	ds	1
  3004  005E                     Key_Process@i:	
  3005                           
  3006                           ; 2 bytes @ 0x3E
  3007  005E                     	ds	2
  3008  0060                     ??_main:	
  3009                           
  3010                           ; 1 bytes @ 0x40
  3011  0060                     	ds	3
  3012                           
  3013                           	psect	maintext
  3014  0459                     __pmaintext:	
  3015 ;;
  3016 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3017 ;;
  3018 ;; *************** function _main *****************
  3019 ;; Defined at:
  3020 ;;		line 65 in file "main.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  bat_data        2    3[BANK2 ] unsigned int 
  3025 ;;  data_temp       2    0[BANK2 ] unsigned int 
  3026 ;;  i               1    2[BANK2 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : B1F/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Totals:         0       3       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;Total ram usage:        8 bytes
  3041 ;; Hardware stack levels required when called:   13
  3042 ;; This function calls:
  3043 ;;		_ADC_GetConversion
  3044 ;;		_Bq32k_Time_Init
  3045 ;;		_Key_Process
  3046 ;;		_SYSTEM_Initialize
  3047 ;;		_Save_process
  3048 ;;		_SendCmd_1621
  3049 ;;		_Serach_Flash_Head
  3050 ;;		_WriteAll_1621
  3051 ;;		_maxim_31856_init
  3052 ;;		_temperature_process
  3053 ;; This function is called by:
  3054 ;;		Startup code after reset
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _main
  3060  0459                     _main:	
  3061                           
  3062                           ;main.c: 67: unsigned char i=0;
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3066  0459  0022               	movlb	2	; select bank2
  3067  045A  01E2               	clrf	main@i^(0+256)
  3068                           
  3069                           ;main.c: 69: unsigned int bat_data = 0;
  3070  045B  01E3               	clrf	main@bat_data^(0+256)
  3071  045C  01E4               	clrf	(main@bat_data+1)^(0+256)
  3072                           
  3073                           ;main.c: 70: unsigned int data_temp = 0;
  3074  045D  01E0               	clrf	main@data_temp^(0+256)
  3075  045E  01E1               	clrf	(main@data_temp+1)^(0+256)
  3076                           
  3077                           ;main.c: 72: SYSTEM_Initialize();
  3078  045F  3188  20EF  3184   	fcall	_SYSTEM_Initialize
  3079                           
  3080                           ;main.c: 73: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3081  0462  303D               	movlw	61
  3082  0463  0020               	movlb	0	; select bank0
  3083  0464  00E2               	movwf	??_main+2
  3084  0465  30E1               	movlw	225
  3085  0466  00E1               	movwf	??_main+1
  3086  0467  307A               	movlw	122
  3087  0468  00E0               	movwf	??_main
  3088  0469                     u5097:	
  3089  0469  0BE0               	decfsz	??_main,f
  3090  046A  2C69               	goto	u5097
  3091  046B  0BE1               	decfsz	??_main+1,f
  3092  046C  2C69               	goto	u5097
  3093  046D  0BE2               	decfsz	??_main+2,f
  3094  046E  2C69               	goto	u5097
  3095  046F  3200               	nop2
  3096                           
  3097                           ;main.c: 74: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3098  0470  0020               	movlb	0	; select bank0
  3099  0471  1A8D               	btfsc	13,5	;volatile
  3100  0472  2C76               	goto	l370
  3101  0473  0022               	movlb	2	; select bank2
  3102  0474  150C               	bsf	12,2	;volatile
  3103  0475  2C78               	goto	l372
  3104  0476                     l370:	
  3105                           ;main.c: 75: else do { LATA2 = 0; } while(0);
  3106                           
  3107  0476  0022               	movlb	2	; select bank2
  3108  0477  110C               	bcf	12,2	;volatile
  3109  0478                     l372:	
  3110                           ;main.c: 76: do { LATA3 = 0; } while(0);
  3111                           
  3112  0478  118C               	bcf	12,3	;volatile
  3113                           
  3114                           ;main.c: 79: bat_data = 0;
  3115  0479  01E3               	clrf	main@bat_data^(0+256)
  3116  047A  01E4               	clrf	(main@bat_data+1)^(0+256)
  3117                           
  3118                           ;main.c: 80: for(i=0;i<16;i++)
  3119  047B  01E2               	clrf	main@i^(0+256)
  3120  047C  3010               	movlw	16
  3121  047D  0262               	subwf	main@i^(0+256),w
  3122  047E  1803               	btfsc	3,0
  3123  047F  2C95               	goto	l5300
  3124  0480                     l5294:	
  3125                           
  3126                           ;main.c: 81: {
  3127                           ;main.c: 82: bat_data = bat_data + ADC_GetConversion(ADC);
  3128  0480  300B               	movlw	11
  3129  0481  3189  217F  3184   	fcall	_ADC_GetConversion
  3130  0484  0022               	movlb	2	; select bank2
  3131  0485  0863               	movf	main@bat_data^(0+256),w
  3132  0486  0773               	addwf	?_ADC_GetConversion,w
  3133  0487  00E3               	movwf	main@bat_data^(0+256)
  3134  0488  0864               	movf	(main@bat_data+1)^(0+256),w
  3135  0489  3D74               	addwfc	?_ADC_GetConversion+1,w
  3136  048A  00E4               	movwf	(main@bat_data+1)^(0+256)
  3137  048B  3001               	movlw	1
  3138  048C  0020               	movlb	0	; select bank0
  3139  048D  00E0               	movwf	??_main
  3140  048E  0860               	movf	??_main,w
  3141  048F  0022               	movlb	2	; select bank2
  3142  0490  07E2               	addwf	main@i^(0+256),f
  3143  0491  3010               	movlw	16
  3144  0492  0262               	subwf	main@i^(0+256),w
  3145  0493  1C03               	skipc
  3146  0494  2C80               	goto	l5294
  3147  0495                     l5300:	
  3148                           
  3149                           ;main.c: 83: }
  3150                           ;main.c: 84: bat_data = bat_data>>4;
  3151  0495  0E63               	swapf	main@bat_data^(0+256),w
  3152  0496  390F               	andlw	15
  3153  0497  00E3               	movwf	main@bat_data^(0+256)
  3154  0498  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3155  0499  39F0               	andlw	240
  3156  049A  04E3               	iorwf	main@bat_data^(0+256),f
  3157  049B  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3158  049C  390F               	andlw	15
  3159  049D  00E4               	movwf	(main@bat_data^(0+256)+1)
  3160                           
  3161                           ;main.c: 85: if( bat_data < 800)
  3162  049E  3003               	movlw	3
  3163  049F  0264               	subwf	(main@bat_data+1)^(0+256),w
  3164  04A0  3020               	movlw	32
  3165  04A1  1903               	skipnz
  3166  04A2  0263               	subwf	main@bat_data^(0+256),w
  3167  04A3  1803               	skipnc
  3168  04A4  2CA7               	goto	l5304
  3169                           
  3170                           ;main.c: 86: {
  3171                           ;main.c: 87: do { LATA2 = 0; } while(0);
  3172  04A5  110C               	bcf	12,2	;volatile
  3173  04A6                     l379:	
  3174                           ;main.c: 88: while(1);
  3175                           
  3176  04A6  2CA6               	goto	l379
  3177  04A7                     l5304:	
  3178                           
  3179                           ;main.c: 89: }
  3180                           ;main.c: 90: i = 0 ;
  3181  04A7  0022               	movlb	2	; select bank2
  3182  04A8  01E2               	clrf	main@i^(0+256)
  3183                           
  3184                           ;main.c: 91: bat_data = 0 ;
  3185  04A9  01E3               	clrf	main@bat_data^(0+256)
  3186  04AA  01E4               	clrf	(main@bat_data+1)^(0+256)
  3187                           
  3188                           ;main.c: 94: maxim_31856_init();
  3189  04AB  3187  2798  3184   	fcall	_maxim_31856_init
  3190                           
  3191                           ;main.c: 95: do { TRISB3 = 1; } while(0);
  3192  04AE  0021               	movlb	1	; select bank1
  3193  04AF  158D               	bsf	13,3	;volatile
  3194                           
  3195                           ;main.c: 96: Bq32k_Time_Init();
  3196  04B0  3189  21CE  3184   	fcall	_Bq32k_Time_Init
  3197                           
  3198                           ;main.c: 97: SendCmd_1621(0x52);
  3199  04B3  3052               	movlw	82
  3200  04B4  3189  2104  3184   	fcall	_SendCmd_1621
  3201                           
  3202                           ;main.c: 98: SendCmd_1621(0X28);
  3203  04B7  3028               	movlw	40
  3204  04B8  3189  2104  3184   	fcall	_SendCmd_1621
  3205                           
  3206                           ;main.c: 99: SendCmd_1621(0x02);
  3207  04BB  3002               	movlw	2
  3208  04BC  3189  2104  3184   	fcall	_SendCmd_1621
  3209                           
  3210                           ;main.c: 100: SendCmd_1621(0x06);
  3211  04BF  3006               	movlw	6
  3212  04C0  3189  2104  3184   	fcall	_SendCmd_1621
  3213                           
  3214                           ;main.c: 102: WriteAll_1621(0,Dis_TAB+17,4);
  3215  04C3  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3216  04C4  0020               	movlb	0	; select bank0
  3217  04C5  00A0               	movwf	WriteAll_1621@p
  3218  04C6  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3219  04C7  00A1               	movwf	WriteAll_1621@p+1
  3220  04C8  3004               	movlw	4
  3221  04C9  00E0               	movwf	??_main
  3222  04CA  0860               	movf	??_main,w
  3223  04CB  00A2               	movwf	WriteAll_1621@cnt
  3224  04CC  3000               	movlw	0
  3225  04CD  318C  245F  3184   	fcall	_WriteAll_1621
  3226                           
  3227                           ;main.c: 104: time_count = 0;
  3228  04D0  0020               	movlb	0	; select bank0
  3229  04D1  01ED               	clrf	_time_count
  3230                           
  3231                           ;main.c: 105: Record_flag = 0;
  3232  04D2  01EB               	clrf	_Record_flag
  3233                           
  3234                           ;main.c: 106: Cur_temperature_time_ch1 = 0;
  3235  04D3  0021               	movlb	1	; select bank1
  3236  04D4  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3237                           
  3238                           ;main.c: 107: Cur_temperature_time_ch2 = 0;
  3239  04D5  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3240                           
  3241                           ;main.c: 108: CH1_temperature = 0;
  3242  04D6  0020               	movlb	0	; select bank0
  3243  04D7  01E7               	clrf	_CH1_temperature
  3244  04D8  01E8               	clrf	_CH1_temperature+1
  3245                           
  3246                           ;main.c: 109: CH2_temperature = 0;
  3247  04D9  01E9               	clrf	_CH2_temperature
  3248  04DA  01EA               	clrf	_CH2_temperature+1
  3249                           
  3250                           ;main.c: 110: CH1_state = 0;
  3251  04DB  0021               	movlb	1	; select bank1
  3252  04DC  01B4               	clrf	_CH1_state^(0+128)
  3253                           
  3254                           ;main.c: 111: CH2_state = 0;
  3255  04DD  01B5               	clrf	_CH2_state^(0+128)
  3256                           
  3257                           ;main.c: 112: bat_data = 0;
  3258  04DE  0022               	movlb	2	; select bank2
  3259  04DF  01E3               	clrf	main@bat_data^(0+256)
  3260  04E0  01E4               	clrf	(main@bat_data+1)^(0+256)
  3261                           
  3262                           ;main.c: 113: Cur_Save_Index = 0x2000;
  3263  04E1  3000               	movlw	0
  3264  04E2  0021               	movlb	1	; select bank1
  3265  04E3  00AE               	movwf	_Cur_Save_Index^(0+128)
  3266  04E4  3020               	movlw	32
  3267  04E5  00AF               	movwf	(_Cur_Save_Index^(0+128)+1)
  3268                           
  3269                           ;main.c: 114: Serach_Flash_Head();
  3270  04E6  318B  23FA  3184   	fcall	_Serach_Flash_Head
  3271                           
  3272                           ;main.c: 139: (INTCONbits.GIE = 1);
  3273  04E9  178B               	bsf	11,7	;volatile
  3274                           
  3275                           ;main.c: 142: (INTCONbits.PEIE = 1);
  3276  04EA  170B               	bsf	11,6	;volatile
  3277  04EB                     l5348:	
  3278                           ;main.c: 150: while (1)
  3279                           
  3280                           
  3281                           ;main.c: 151: {
  3282                           ;main.c: 156: bat_data = bat_data + ADC_GetConversion(ADC);
  3283  04EB  300B               	movlw	11
  3284  04EC  3189  217F  3184   	fcall	_ADC_GetConversion
  3285  04EF  0022               	movlb	2	; select bank2
  3286  04F0  0863               	movf	main@bat_data^(0+256),w
  3287  04F1  0773               	addwf	?_ADC_GetConversion,w
  3288  04F2  00E3               	movwf	main@bat_data^(0+256)
  3289  04F3  0864               	movf	(main@bat_data+1)^(0+256),w
  3290  04F4  3D74               	addwfc	?_ADC_GetConversion+1,w
  3291  04F5  00E4               	movwf	(main@bat_data+1)^(0+256)
  3292                           
  3293                           ;main.c: 157: i++;
  3294  04F6  3001               	movlw	1
  3295  04F7  0020               	movlb	0	; select bank0
  3296  04F8  00E0               	movwf	??_main
  3297  04F9  0860               	movf	??_main,w
  3298  04FA  0022               	movlb	2	; select bank2
  3299  04FB  07E2               	addwf	main@i^(0+256),f
  3300                           
  3301                           ;main.c: 158: if(i == 16)
  3302  04FC  3010               	movlw	16
  3303  04FD  0662               	xorwf	main@i^(0+256),w
  3304  04FE  1D03               	btfss	3,2
  3305  04FF  2D16               	goto	l5362
  3306                           
  3307                           ;main.c: 159: {
  3308                           ;main.c: 160: i = 0;
  3309  0500  01E2               	clrf	main@i^(0+256)
  3310                           
  3311                           ;main.c: 161: bat_data = bat_data>>4;
  3312  0501  0E63               	swapf	main@bat_data^(0+256),w
  3313  0502  390F               	andlw	15
  3314  0503  00E3               	movwf	main@bat_data^(0+256)
  3315  0504  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3316  0505  39F0               	andlw	240
  3317  0506  04E3               	iorwf	main@bat_data^(0+256),f
  3318  0507  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3319  0508  390F               	andlw	15
  3320  0509  00E4               	movwf	(main@bat_data^(0+256)+1)
  3321                           
  3322                           ;main.c: 162: if( bat_data < 800)
  3323  050A  3003               	movlw	3
  3324  050B  0264               	subwf	(main@bat_data+1)^(0+256),w
  3325  050C  3020               	movlw	32
  3326  050D  1903               	skipnz
  3327  050E  0263               	subwf	main@bat_data^(0+256),w
  3328  050F  1803               	skipnc
  3329  0510  2D13               	goto	l5360
  3330                           
  3331                           ;main.c: 163: {
  3332                           ;main.c: 164: do { LATA2 = 0; } while(0);
  3333  0511  110C               	bcf	12,2	;volatile
  3334  0512                     l389:	
  3335                           ;main.c: 165: while(1);
  3336                           
  3337  0512  2D12               	goto	l389
  3338  0513                     l5360:	
  3339                           
  3340                           ;main.c: 166: }
  3341                           ;main.c: 167: bat_data = 0;
  3342  0513  0022               	movlb	2	; select bank2
  3343  0514  01E3               	clrf	main@bat_data^(0+256)
  3344  0515  01E4               	clrf	(main@bat_data+1)^(0+256)
  3345  0516                     l5362:	
  3346                           
  3347                           ;main.c: 168: }
  3348                           ;main.c: 173: temperature_process();
  3349  0516  318C  242C  3184   	fcall	_temperature_process
  3350                           
  3351                           ;main.c: 174: Key_Process();
  3352  0519  3185  25B5  3184   	fcall	_Key_Process
  3353                           
  3354                           ;main.c: 175: Save_process();
  3355  051C  318F  2739  3184   	fcall	_Save_process
  3356  051F  2CEB               	goto	l5348
  3357  0520                     __end_of_main:	
  3358                           
  3359                           	psect	text1
  3360  0798                     __ptext1:	
  3361 ;; *************** function _maxim_31856_init *****************
  3362 ;; Defined at:
  3363 ;;		line 64 in file "mcc_generated_files/max31856.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;Total ram usage:        1 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    5
  3384 ;; This function calls:
  3385 ;;		_maxim_31856_write_register
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _maxim_31856_init
  3393  0798                     _maxim_31856_init:	
  3394                           
  3395                           ;max31856.c: 67: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3399  0798  3015               	movlw	21
  3400  0799  00F6               	movwf	??_maxim_31856_init
  3401  079A  0876               	movf	??_maxim_31856_init,w
  3402  079B  00F9               	movwf	_uch_cr0
  3403                           
  3404                           ;max31856.c: 69: uch_cr1&= (uint8_t) 0x0F ;
  3405  079C  300F               	movlw	15
  3406  079D  00F6               	movwf	??_maxim_31856_init
  3407  079E  0876               	movf	??_maxim_31856_init,w
  3408  079F  0021               	movlb	1	; select bank1
  3409  07A0  05BD               	andwf	_uch_cr1^(0+128),f
  3410                           
  3411                           ;max31856.c: 70: uch_cr1|=(uint8_t) 0x07;
  3412  07A1  3007               	movlw	7
  3413  07A2  00F6               	movwf	??_maxim_31856_init
  3414  07A3  0876               	movf	??_maxim_31856_init,w
  3415  07A4  04BD               	iorwf	_uch_cr1^(0+128),f
  3416                           
  3417                           ;max31856.c: 72: uch_mask=(uint8_t)0x00 ;
  3418  07A5  01C0               	clrf	_uch_mask^(0+128)
  3419                           
  3420                           ;max31856.c: 74: maxim_31856_write_register(0x80, uch_cr0);
  3421  07A6  0879               	movf	_uch_cr0,w
  3422  07A7  00F6               	movwf	??_maxim_31856_init
  3423  07A8  0876               	movf	??_maxim_31856_init,w
  3424  07A9  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3425  07AA  3080               	movlw	128
  3426  07AB  3188  208B  3187   	fcall	_maxim_31856_write_register
  3427                           
  3428                           ;max31856.c: 75: maxim_31856_write_register(0x81, uch_cr1);
  3429  07AE  0021               	movlb	1	; select bank1
  3430  07AF  083D               	movf	_uch_cr1^(0+128),w
  3431  07B0  00F6               	movwf	??_maxim_31856_init
  3432  07B1  0876               	movf	??_maxim_31856_init,w
  3433  07B2  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3434  07B3  3081               	movlw	129
  3435  07B4  3188  208B  3187   	fcall	_maxim_31856_write_register
  3436                           
  3437                           ;max31856.c: 76: maxim_31856_write_register(0x82,uch_mask);
  3438  07B7  0021               	movlb	1	; select bank1
  3439  07B8  0840               	movf	_uch_mask^(0+128),w
  3440  07B9  00F6               	movwf	??_maxim_31856_init
  3441  07BA  0876               	movf	??_maxim_31856_init,w
  3442  07BB  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3443  07BC  3082               	movlw	130
  3444  07BD  3188  208B  3187   	fcall	_maxim_31856_write_register
  3445                           
  3446                           ;max31856.c: 79: maxim_31856_write_register(0x83,0x7F);
  3447  07C0  307F               	movlw	127
  3448  07C1  00F6               	movwf	??_maxim_31856_init
  3449  07C2  0876               	movf	??_maxim_31856_init,w
  3450  07C3  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3451  07C4  3083               	movlw	131
  3452  07C5  3188  208B  3187   	fcall	_maxim_31856_write_register
  3453                           
  3454                           ;max31856.c: 80: maxim_31856_write_register(0x84,0xC0);
  3455  07C8  30C0               	movlw	192
  3456  07C9  00F6               	movwf	??_maxim_31856_init
  3457  07CA  0876               	movf	??_maxim_31856_init,w
  3458  07CB  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3459  07CC  3084               	movlw	132
  3460  07CD  3188  208B  3187   	fcall	_maxim_31856_write_register
  3461                           
  3462                           ;max31856.c: 82: maxim_31856_write_register(0x85,0x7F);
  3463  07D0  307F               	movlw	127
  3464  07D1  00F6               	movwf	??_maxim_31856_init
  3465  07D2  0876               	movf	??_maxim_31856_init,w
  3466  07D3  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3467  07D4  3085               	movlw	133
  3468  07D5  3188  208B  3187   	fcall	_maxim_31856_write_register
  3469                           
  3470                           ;max31856.c: 83: maxim_31856_write_register(0x86,0xFF);
  3471  07D8  30FF               	movlw	255
  3472  07D9  00F6               	movwf	??_maxim_31856_init
  3473  07DA  0876               	movf	??_maxim_31856_init,w
  3474  07DB  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3475  07DC  3086               	movlw	134
  3476  07DD  3188  208B  3187   	fcall	_maxim_31856_write_register
  3477                           
  3478                           ;max31856.c: 84: maxim_31856_write_register(0x87,0x80);
  3479  07E0  3080               	movlw	128
  3480  07E1  00F6               	movwf	??_maxim_31856_init
  3481  07E2  0876               	movf	??_maxim_31856_init,w
  3482  07E3  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3483  07E4  3087               	movlw	135
  3484  07E5  3188  208B  3187   	fcall	_maxim_31856_write_register
  3485                           
  3486                           ;max31856.c: 85: maxim_31856_write_register(0x88,0x00);
  3487  07E8  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3488  07E9  3088               	movlw	136
  3489  07EA  3188  208B  3187   	fcall	_maxim_31856_write_register
  3490                           
  3491                           ;max31856.c: 87: maxim_31856_write_register(0x89,0x00);
  3492  07ED  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3493  07EE  3089               	movlw	137
  3494  07EF  3188  208B  3187   	fcall	_maxim_31856_write_register
  3495                           
  3496                           ;max31856.c: 91: maxim_31856_write_register(0x8A,0x00);
  3497  07F2  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3498  07F3  308A               	movlw	138
  3499  07F4  3188  208B  3187   	fcall	_maxim_31856_write_register
  3500                           
  3501                           ;max31856.c: 92: maxim_31856_write_register(0x8B,0x00);
  3502  07F7  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3503  07F8  308B               	movlw	139
  3504  07F9  3188  208B         	fcall	_maxim_31856_write_register
  3505  07FB  0008               	return
  3506  07FC                     __end_of_maxim_31856_init:	
  3507                           
  3508                           	psect	text2
  3509  0BFA                     __ptext2:	
  3510 ;; *************** function _Serach_Flash_Head *****************
  3511 ;; Defined at:
  3512 ;;		line 42 in file "mcc_generated_files/save.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  i               2   21[BANK0 ] unsigned int 
  3517 ;;  data            2   19[BANK0 ] unsigned int 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;Total ram usage:        4 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    7
  3534 ;; This function calls:
  3535 ;;		_FLASH_ReadWord
  3536 ;;		_Write_Flash_finish
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           
  3543                           ;psect for function _Serach_Flash_Head
  3544  0BFA                     _Serach_Flash_Head:	
  3545                           
  3546                           ;save.c: 44: unsigned int i=0;
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in _Serach_Flash_Head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3550  0BFA  0020               	movlb	0	; select bank0
  3551  0BFB  01B5               	clrf	Serach_Flash_Head@i
  3552  0BFC  01B6               	clrf	Serach_Flash_Head@i+1
  3553                           
  3554                           ;save.c: 45: unsigned int data=0;
  3555  0BFD  01B3               	clrf	Serach_Flash_Head@data
  3556  0BFE  01B4               	clrf	Serach_Flash_Head@data+1
  3557                           
  3558                           ;save.c: 46: for(i = 0x2000; i<16384;i++ )
  3559  0BFF  3000               	movlw	0
  3560  0C00  00B5               	movwf	Serach_Flash_Head@i
  3561  0C01  3020               	movlw	32
  3562  0C02  00B6               	movwf	Serach_Flash_Head@i+1
  3563  0C03                     L1:	
  3564  0C03  3040               	movlw	64
  3565  0C04  0236               	subwf	Serach_Flash_Head@i+1,w
  3566  0C05  3000               	movlw	0
  3567  0C06  1903               	skipnz
  3568  0C07  0235               	subwf	Serach_Flash_Head@i,w
  3569  0C08  1803               	btfsc	3,0
  3570  0C09  0008               	return
  3571                           
  3572                           ;save.c: 47: {
  3573                           ;save.c: 48: data = FLASH_ReadWord(i);
  3574  0C0A  0836               	movf	Serach_Flash_Head@i+1,w
  3575  0C0B  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3576  0C0C  0835               	movf	Serach_Flash_Head@i,w
  3577  0C0D  00F3               	movwf	FLASH_ReadWord@flashAddr
  3578  0C0E  3189  2166  318B   	fcall	_FLASH_ReadWord
  3579  0C11  0874               	movf	?_FLASH_ReadWord+1,w
  3580  0C12  0020               	movlb	0	; select bank0
  3581  0C13  00B4               	movwf	Serach_Flash_Head@data+1
  3582  0C14  0873               	movf	?_FLASH_ReadWord,w
  3583  0C15  00B3               	movwf	Serach_Flash_Head@data
  3584                           
  3585                           ;save.c: 49: if( data == 0x3fff)
  3586  0C16  0A33               	incf	Serach_Flash_Head@data,w
  3587  0C17  303F               	movlw	63
  3588  0C18  1903               	skipnz
  3589  0C19  0634               	xorwf	Serach_Flash_Head@data+1,w
  3590  0C1A  1D03               	btfss	3,2
  3591  0C1B  2C26               	goto	l5178
  3592                           
  3593                           ;save.c: 50: {
  3594                           ;save.c: 51: Cur_Save_Index = i;
  3595  0C1C  0836               	movf	Serach_Flash_Head@i+1,w
  3596  0C1D  0021               	movlb	1	; select bank1
  3597  0C1E  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3598  0C1F  0020               	movlb	0	; select bank0
  3599  0C20  0835               	movf	Serach_Flash_Head@i,w
  3600  0C21  0021               	movlb	1	; select bank1
  3601  0C22  00AE               	movwf	_Cur_Save_Index^(0+128)
  3602                           
  3603                           ;save.c: 52: Write_Flash_finish();
  3604  0C23  318B  236B         	fcall	_Write_Flash_finish
  3605                           
  3606                           ;save.c: 53: break;
  3607  0C25  0008               	return
  3608  0C26                     l5178:	
  3609  0C26  3001               	movlw	1
  3610  0C27  0020               	movlb	0	; select bank0
  3611  0C28  07B5               	addwf	Serach_Flash_Head@i,f
  3612  0C29  3000               	movlw	0
  3613  0C2A  3DB6               	addwfc	Serach_Flash_Head@i+1,f
  3614  0C2B  2C03               	goto	L1
  3615  0C2C                     __end_of_Serach_Flash_Head:	
  3616                           
  3617                           	psect	text3
  3618  0F39                     __ptext3:	
  3619 ;; *************** function _Save_process *****************
  3620 ;; Defined at:
  3621 ;;		line 92 in file "mcc_generated_files/save.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  var_time        2   49[BANK0 ] unsigned int 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;Total ram usage:        4 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    9
  3642 ;; This function calls:
  3643 ;;		_Calculate_Time
  3644 ;;		_Save_Write_word
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _Save_process
  3652  0F39                     _Save_process:	
  3653                           
  3654                           ;save.c: 94: unsigned int var_time=0;
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3658  0F39  0020               	movlb	0	; select bank0
  3659  0F3A  01D1               	clrf	Save_process@var_time
  3660  0F3B  01D2               	clrf	Save_process@var_time+1
  3661                           
  3662                           ;save.c: 95: if( time_count == 1 && Record_flag == 1 )
  3663  0F3C  036D               	decf	_time_count,w
  3664  0F3D  1D03               	btfss	3,2
  3665  0F3E  2F6B               	goto	l5262
  3666  0F3F  036B               	decf	_Record_flag,w
  3667  0F40  1D03               	btfss	3,2
  3668  0F41  2F6B               	goto	l5262
  3669                           
  3670                           ;save.c: 96: {
  3671                           ;save.c: 97: if(Cur_temperature_time_ch1 > 120)
  3672  0F42  3079               	movlw	121
  3673  0F43  0021               	movlb	1	; select bank1
  3674  0F44  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3675  0F45  1C03               	skipc
  3676  0F46  0008               	return
  3677                           
  3678                           ;save.c: 98: {
  3679                           ;save.c: 99: var_time = Calculate_Time();
  3680  0F47  3181  21F3  318F   	fcall	_Calculate_Time
  3681  0F4A  0020               	movlb	0	; select bank0
  3682  0F4B  00CF               	movwf	??_Save_process
  3683  0F4C  01D0               	clrf	??_Save_process+1
  3684  0F4D  084F               	movf	??_Save_process,w
  3685  0F4E  00D1               	movwf	Save_process@var_time
  3686  0F4F  0850               	movf	??_Save_process+1,w
  3687  0F50  00D2               	movwf	Save_process@var_time+1
  3688                           
  3689                           ;save.c: 100: var_time |= 0x100;
  3690  0F51  1452               	bsf	Save_process@var_time+1,0
  3691                           
  3692                           ;save.c: 101: if(CH1_state == 1) var_time |= 0x400;
  3693  0F52  0021               	movlb	1	; select bank1
  3694  0F53  0334               	decf	_CH1_state^(0+128),w
  3695  0F54  1D03               	btfss	3,2
  3696  0F55  2F58               	goto	l997
  3697  0F56  0020               	movlb	0	; select bank0
  3698  0F57  1552               	bsf	Save_process@var_time+1,2
  3699  0F58                     l997:	
  3700                           
  3701                           ;save.c: 103: var_time |= 0x1000;
  3702  0F58  0020               	movlb	0	; select bank0
  3703  0F59  1652               	bsf	Save_process@var_time+1,4
  3704                           
  3705                           ;save.c: 105: Save_Write_word(var_time);
  3706  0F5A  0852               	movf	Save_process@var_time+1,w
  3707  0F5B  00B4               	movwf	Save_Write_word@data+1
  3708  0F5C  0851               	movf	Save_process@var_time,w
  3709  0F5D  00B3               	movwf	Save_Write_word@data
  3710  0F5E  318C  24C9  318F   	fcall	_Save_Write_word
  3711                           
  3712                           ;save.c: 106: Save_Write_word(CH1_temperature);
  3713  0F61  0020               	movlb	0	; select bank0
  3714  0F62  0868               	movf	_CH1_temperature+1,w
  3715  0F63  00B4               	movwf	Save_Write_word@data+1
  3716  0F64  0867               	movf	_CH1_temperature,w
  3717  0F65  00B3               	movwf	Save_Write_word@data
  3718  0F66  318C  24C9         	fcall	_Save_Write_word
  3719                           
  3720                           ;save.c: 108: Cur_temperature_time_ch1 = 0;
  3721  0F68  0021               	movlb	1	; select bank1
  3722  0F69  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3723                           
  3724                           ;save.c: 109: }
  3725                           ;save.c: 110: }
  3726  0F6A  0008               	return
  3727  0F6B                     l5262:	
  3728                           
  3729                           ;save.c: 111: else if(time_count == 3 && Record_flag == 1)
  3730  0F6B  3003               	movlw	3
  3731  0F6C  0020               	movlb	0	; select bank0
  3732  0F6D  066D               	xorwf	_time_count,w
  3733  0F6E  1D03               	btfss	3,2
  3734  0F6F  0008               	return
  3735  0F70  036B               	decf	_Record_flag,w
  3736  0F71  1D03               	btfss	3,2
  3737  0F72  0008               	return
  3738                           
  3739                           ;save.c: 112: {
  3740                           ;save.c: 113: if(Cur_temperature_time_ch2 > 120)
  3741  0F73  3079               	movlw	121
  3742  0F74  0021               	movlb	1	; select bank1
  3743  0F75  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3744  0F76  1C03               	skipc
  3745  0F77  0008               	return
  3746                           
  3747                           ;save.c: 114: {
  3748                           ;save.c: 115: var_time = Calculate_Time();
  3749  0F78  3181  21F3  318F   	fcall	_Calculate_Time
  3750  0F7B  0020               	movlb	0	; select bank0
  3751  0F7C  00CF               	movwf	??_Save_process
  3752  0F7D  01D0               	clrf	??_Save_process+1
  3753  0F7E  084F               	movf	??_Save_process,w
  3754  0F7F  00D1               	movwf	Save_process@var_time
  3755  0F80  0850               	movf	??_Save_process+1,w
  3756  0F81  00D2               	movwf	Save_process@var_time+1
  3757                           
  3758                           ;save.c: 116: var_time |= 0x200;
  3759  0F82  14D2               	bsf	Save_process@var_time+1,1
  3760                           
  3761                           ;save.c: 117: if(CH2_state == 1) var_time |= 0x800;
  3762  0F83  0021               	movlb	1	; select bank1
  3763  0F84  0335               	decf	_CH2_state^(0+128),w
  3764  0F85  1D03               	btfss	3,2
  3765  0F86  2F89               	goto	l1001
  3766  0F87  0020               	movlb	0	; select bank0
  3767  0F88  15D2               	bsf	Save_process@var_time+1,3
  3768  0F89                     l1001:	
  3769                           
  3770                           ;save.c: 119: var_time |= 0x1000;
  3771  0F89  0020               	movlb	0	; select bank0
  3772  0F8A  1652               	bsf	Save_process@var_time+1,4
  3773                           
  3774                           ;save.c: 121: Save_Write_word(var_time);
  3775  0F8B  0852               	movf	Save_process@var_time+1,w
  3776  0F8C  00B4               	movwf	Save_Write_word@data+1
  3777  0F8D  0851               	movf	Save_process@var_time,w
  3778  0F8E  00B3               	movwf	Save_Write_word@data
  3779  0F8F  318C  24C9  318F   	fcall	_Save_Write_word
  3780                           
  3781                           ;save.c: 122: Save_Write_word(CH2_temperature);
  3782  0F92  0020               	movlb	0	; select bank0
  3783  0F93  086A               	movf	_CH2_temperature+1,w
  3784  0F94  00B4               	movwf	Save_Write_word@data+1
  3785  0F95  0869               	movf	_CH2_temperature,w
  3786  0F96  00B3               	movwf	Save_Write_word@data
  3787  0F97  318C  24C9         	fcall	_Save_Write_word
  3788                           
  3789                           ;save.c: 124: Cur_temperature_time_ch2 = 0;
  3790  0F99  0021               	movlb	1	; select bank1
  3791  0F9A  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3792  0F9B  0008               	return
  3793  0F9C                     __end_of_Save_process:	
  3794                           
  3795                           	psect	text4
  3796  08EF                     __ptext4:	
  3797 ;; *************** function _SYSTEM_Initialize *****************
  3798 ;; Defined at:
  3799 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    4
  3820 ;; This function calls:
  3821 ;;		_ADC_Initialize
  3822 ;;		_EUSART_Initialize
  3823 ;;		_FVR_Initialize
  3824 ;;		_OSCILLATOR_Initialize
  3825 ;;		_PIN_MANAGER_Initialize
  3826 ;;		_SPI_Initialize
  3827 ;;		_TMR0_Initialize
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function _SYSTEM_Initialize
  3835  08EF                     _SYSTEM_Initialize:	
  3836                           
  3837                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3838                           
  3839                           ;incstack = 0
  3840                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3841  08EF  3188  203F  3188   	fcall	_OSCILLATOR_Initialize
  3842                           
  3843                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3844  08F2  318A  227E  3188   	fcall	_PIN_MANAGER_Initialize
  3845                           
  3846                           ;mcc.c: 73: SPI_Initialize();
  3847  08F5  3188  204A  3188   	fcall	_SPI_Initialize
  3848                           
  3849                           ;mcc.c: 74: EUSART_Initialize();
  3850  08F8  3188  207F  3188   	fcall	_EUSART_Initialize
  3851                           
  3852                           ;mcc.c: 75: ADC_Initialize();
  3853  08FB  3188  2064  3188   	fcall	_ADC_Initialize
  3854                           
  3855                           ;mcc.c: 76: TMR0_Initialize();
  3856  08FE  3188  20A8  3188   	fcall	_TMR0_Initialize
  3857                           
  3858                           ;mcc.c: 77: FVR_Initialize();
  3859  0901  3187  27FC         	fcall	_FVR_Initialize
  3860  0903  0008               	return
  3861  0904                     __end_of_SYSTEM_Initialize:	
  3862                           
  3863                           	psect	text5
  3864  08A8                     __ptext5:	
  3865 ;; *************** function _TMR0_Initialize *****************
  3866 ;; Defined at:
  3867 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        1 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    3
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_SYSTEM_Initialize
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function _TMR0_Initialize
  3897  08A8                     _TMR0_Initialize:	
  3898                           
  3899                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3903  08A8  0021               	movlb	1	; select bank1
  3904  08A9  0815               	movf	21,w	;volatile
  3905  08AA  39C0               	andlw	192
  3906  08AB  3817               	iorlw	23
  3907  08AC  0095               	movwf	21	;volatile
  3908                           
  3909                           ;tmr0.c: 73: TMR0 = 0x64;
  3910  08AD  3064               	movlw	100
  3911  08AE  0020               	movlb	0	; select bank0
  3912  08AF  0095               	movwf	21	;volatile
  3913                           
  3914                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3915  08B0  3064               	movlw	100
  3916  08B1  00F3               	movwf	??_TMR0_Initialize
  3917  08B2  0873               	movf	??_TMR0_Initialize,w
  3918  08B3  0021               	movlb	1	; select bank1
  3919  08B4  00ED               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3920                           
  3921                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3922  08B5  110B               	bcf	11,2	;volatile
  3923                           
  3924                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3925  08B6  168B               	bsf	11,5	;volatile
  3926  08B7  0008               	return
  3927  08B8                     __end_of_TMR0_Initialize:	
  3928                           
  3929                           	psect	text6
  3930  084A                     __ptext6:	
  3931 ;; *************** function _SPI_Initialize *****************
  3932 ;; Defined at:
  3933 ;;		line 64 in file "mcc_generated_files/spi.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    3
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_SYSTEM_Initialize
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _SPI_Initialize
  3963  084A                     _SPI_Initialize:	
  3964                           
  3965                           ;spi.c: 68: SSP1STAT = 0x00;
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3969  084A  0024               	movlb	4	; select bank4
  3970  084B  0194               	clrf	20	;volatile
  3971                           
  3972                           ;spi.c: 71: SSP1CON1 = 0x30;
  3973  084C  3030               	movlw	48
  3974  084D  0095               	movwf	21	;volatile
  3975                           
  3976                           ;spi.c: 74: SSP1ADD = 0x00;
  3977  084E  0192               	clrf	18	;volatile
  3978  084F  0008               	return
  3979  0850                     __end_of_SPI_Initialize:	
  3980                           
  3981                           	psect	text7
  3982  0A7E                     __ptext7:	
  3983 ;; *************** function _PIN_MANAGER_Initialize *****************
  3984 ;; Defined at:
  3985 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    3
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_SYSTEM_Initialize
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _PIN_MANAGER_Initialize
  4015  0A7E                     _PIN_MANAGER_Initialize:	
  4016                           
  4017                           ;pin_manager.c: 51: LATA = 0x7B;
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4021  0A7E  307B               	movlw	123
  4022  0A7F  0022               	movlb	2	; select bank2
  4023  0A80  008C               	movwf	12	;volatile
  4024                           
  4025                           ;pin_manager.c: 52: TRISA = 0x80;
  4026  0A81  3080               	movlw	128
  4027  0A82  0021               	movlb	1	; select bank1
  4028  0A83  008C               	movwf	12	;volatile
  4029                           
  4030                           ;pin_manager.c: 53: ANSELA = 0x00;
  4031  0A84  0023               	movlb	3	; select bank3
  4032  0A85  018C               	clrf	12	;volatile
  4033                           
  4034                           ;pin_manager.c: 55: LATB = 0x00;
  4035  0A86  0022               	movlb	2	; select bank2
  4036  0A87  018D               	clrf	13	;volatile
  4037                           
  4038                           ;pin_manager.c: 56: TRISB = 0xFC;
  4039  0A88  30FC               	movlw	252
  4040  0A89  0021               	movlb	1	; select bank1
  4041  0A8A  008D               	movwf	13	;volatile
  4042                           
  4043                           ;pin_manager.c: 57: ANSELB = 0x10;
  4044  0A8B  3010               	movlw	16
  4045  0A8C  0023               	movlb	3	; select bank3
  4046  0A8D  008D               	movwf	13	;volatile
  4047                           
  4048                           ;pin_manager.c: 58: WPUB = 0x2C;
  4049  0A8E  302C               	movlw	44
  4050  0A8F  0024               	movlb	4	; select bank4
  4051  0A90  008D               	movwf	13	;volatile
  4052                           
  4053                           ;pin_manager.c: 60: LATC = 0x07;
  4054  0A91  3007               	movlw	7
  4055  0A92  0022               	movlb	2	; select bank2
  4056  0A93  008E               	movwf	14	;volatile
  4057                           
  4058                           ;pin_manager.c: 61: TRISC = 0xD0;
  4059  0A94  30D0               	movlw	208
  4060  0A95  0021               	movlb	1	; select bank1
  4061  0A96  008E               	movwf	14	;volatile
  4062                           
  4063                           ;pin_manager.c: 62: ANSELC = 0x00;
  4064  0A97  0023               	movlb	3	; select bank3
  4065  0A98  018E               	clrf	14	;volatile
  4066                           
  4067                           ;pin_manager.c: 64: WPUE = 0x00;
  4068  0A99  0024               	movlb	4	; select bank4
  4069  0A9A  0190               	clrf	16	;volatile
  4070                           
  4071                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4072  0A9B  0021               	movlb	1	; select bank1
  4073  0A9C  1395               	bcf	21,7	;volatile
  4074                           
  4075                           ;pin_manager.c: 68: APFCON = 0x00;
  4076  0A9D  0022               	movlb	2	; select bank2
  4077  0A9E  019D               	clrf	29	;volatile
  4078  0A9F  0008               	return
  4079  0AA0                     __end_of_PIN_MANAGER_Initialize:	
  4080                           
  4081                           	psect	text8
  4082  083F                     __ptext8:	
  4083 ;; *************** function _OSCILLATOR_Initialize *****************
  4084 ;; Defined at:
  4085 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    3
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_SYSTEM_Initialize
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _OSCILLATOR_Initialize
  4115  083F                     _OSCILLATOR_Initialize:	
  4116                           
  4117                           ;mcc.c: 82: OSCCON = 0x78;
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4121  083F  3078               	movlw	120
  4122  0840  0021               	movlb	1	; select bank1
  4123  0841  0099               	movwf	25	;volatile
  4124                           
  4125                           ;mcc.c: 84: OSCSTAT = 0x00;
  4126  0842  019A               	clrf	26	;volatile
  4127  0843  0008               	return
  4128  0844                     __end_of_OSCILLATOR_Initialize:	
  4129                           
  4130                           	psect	text9
  4131  07FC                     __ptext9:	
  4132 ;; *************** function _FVR_Initialize *****************
  4133 ;; Defined at:
  4134 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;		None
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;Total ram usage:        0 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    3
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_SYSTEM_Initialize
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _FVR_Initialize
  4164  07FC                     _FVR_Initialize:	
  4165                           
  4166                           ;fvr.c: 60: FVRCON = 0x82;
  4167                           
  4168                           ;incstack = 0
  4169                           ; Regs used in _FVR_Initialize: [wreg]
  4170  07FC  3082               	movlw	130
  4171  07FD  0022               	movlb	2	; select bank2
  4172  07FE  0097               	movwf	23	;volatile
  4173  07FF  0008               	return
  4174  0800                     __end_of_FVR_Initialize:	
  4175                           
  4176                           	psect	text10
  4177  087F                     __ptext10:	
  4178 ;; *************** function _EUSART_Initialize *****************
  4179 ;; Defined at:
  4180 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    3
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_SYSTEM_Initialize
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _EUSART_Initialize
  4210  087F                     _EUSART_Initialize:	
  4211                           
  4212                           ;eusart.c: 60: BAUDCON = 0x48;
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _EUSART_Initialize: [wreg]
  4216  087F  3048               	movlw	72
  4217  0880  0023               	movlb	3	; select bank3
  4218  0881  009F               	movwf	31	;volatile
  4219                           
  4220                           ;eusart.c: 63: RCSTA = 0x80;
  4221  0882  3080               	movlw	128
  4222  0883  009D               	movwf	29	;volatile
  4223                           
  4224                           ;eusart.c: 66: TXSTA = 0x26;
  4225  0884  3026               	movlw	38
  4226  0885  009E               	movwf	30	;volatile
  4227                           
  4228                           ;eusart.c: 69: SPBRGL = 0xA0;
  4229  0886  30A0               	movlw	160
  4230  0887  009B               	movwf	27	;volatile
  4231                           
  4232                           ;eusart.c: 72: SPBRGH = 0x01;
  4233  0888  3001               	movlw	1
  4234  0889  009C               	movwf	28	;volatile
  4235  088A  0008               	return
  4236  088B                     __end_of_EUSART_Initialize:	
  4237                           
  4238                           	psect	text11
  4239  0864                     __ptext11:	
  4240 ;; *************** function _ADC_Initialize *****************
  4241 ;; Defined at:
  4242 ;;		line 65 in file "mcc_generated_files/adc.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_SYSTEM_Initialize
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _ADC_Initialize
  4272  0864                     _ADC_Initialize:	
  4273                           
  4274                           ;adc.c: 69: ADCON0 = 0x01;
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4278  0864  3001               	movlw	1
  4279  0865  0021               	movlb	1	; select bank1
  4280  0866  009D               	movwf	29	;volatile
  4281                           
  4282                           ;adc.c: 72: ADCON1 = 0xE3;
  4283  0867  30E3               	movlw	227
  4284  0868  009E               	movwf	30	;volatile
  4285                           
  4286                           ;adc.c: 75: ADRESL = 0x00;
  4287  0869  019B               	clrf	27	;volatile
  4288                           
  4289                           ;adc.c: 78: ADRESH = 0x00;
  4290  086A  019C               	clrf	28	;volatile
  4291  086B  0008               	return
  4292  086C                     __end_of_ADC_Initialize:	
  4293                           
  4294                           	psect	text12
  4295  05B5                     __ptext12:	
  4296 ;; *************** function _Key_Process *****************
  4297 ;; Defined at:
  4298 ;;		line 42 in file "mcc_generated_files/key.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  i               2   62[BANK0 ] unsigned int 
  4303 ;;  data_temp       2   59[BANK0 ] unsigned int 
  4304 ;;  gKeyValue       1   61[BANK0 ] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  2  297[None  ] int 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:        6 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:   12
  4321 ;; This function calls:
  4322 ;;		_EUSART_Write
  4323 ;;		_FLASH_ReadWord
  4324 ;;		_Key_Scan
  4325 ;;		_Save_Write_time
  4326 ;;		_SendCmd_1621
  4327 ;;		_Set_finish_flag
  4328 ;;		_Set_start_flag
  4329 ;;		_Write_Flash_finish
  4330 ;;		_Write_Flash_head
  4331 ;;		_temperature_process
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _Key_Process
  4339  05B5                     _Key_Process:	
  4340                           
  4341                           ;key.c: 44: unsigned char gKeyValue=0;
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4345  05B5  0020               	movlb	0	; select bank0
  4346  05B6  01DD               	clrf	Key_Process@gKeyValue
  4347                           
  4348                           ;key.c: 46: unsigned int i;
  4349                           ;key.c: 47: unsigned int data_temp;
  4350                           ;key.c: 49: LongPressSec = 0;
  4351  05B7  01F8               	clrf	_LongPressSec
  4352                           
  4353                           ;key.c: 50: gKeyValue=Key_Scan();
  4354  05B8  318A  22A0  3185   	fcall	_Key_Scan
  4355  05BB  0020               	movlb	0	; select bank0
  4356  05BC  00DA               	movwf	??_Key_Process
  4357  05BD  085A               	movf	??_Key_Process,w
  4358  05BE  00DD               	movwf	Key_Process@gKeyValue
  4359                           
  4360                           ;key.c: 51: if(gKeyValue)
  4361  05BF  085D               	movf	Key_Process@gKeyValue,w
  4362  05C0  1903               	btfsc	3,2
  4363  05C1  0008               	return
  4364  05C2  2E39               	goto	l5240
  4365  05C3                     l5188:	
  4366                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) );
  4367                           
  4368                           ;key.c: 54: {
  4369                           ;key.c: 55: case 0x01:
  4370                           
  4371                           ;key.c: 52: {
  4372                           ;key.c: 53: switch(gKeyValue)
  4373                           
  4374  05C3  3003               	movlw	3
  4375  05C4  0278               	subwf	_LongPressSec,w
  4376  05C5  1803               	skipnc
  4377  05C6  2DC9               	goto	l5192
  4378  05C7  1E8D               	btfss	13,5	;volatile
  4379  05C8  2DC3               	goto	l5188
  4380  05C9                     l5192:	
  4381                           
  4382                           ;key.c: 57: if(LongPressSec > 2)
  4383  05C9  3003               	movlw	3
  4384  05CA  0278               	subwf	_LongPressSec,w
  4385  05CB  1C03               	skipc
  4386  05CC  2DD5               	goto	l5196
  4387                           
  4388                           ;key.c: 58: {
  4389                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4390  05CD  0022               	movlb	2	; select bank2
  4391  05CE  110C               	bcf	12,2	;volatile
  4392                           
  4393                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4394  05CF  158C               	bsf	12,3	;volatile
  4395                           
  4396                           ;key.c: 61: SendCmd_1621(0x04);
  4397  05D0  3004               	movlw	4
  4398  05D1  3189  2104  3185   	fcall	_SendCmd_1621
  4399                           
  4400                           ;key.c: 62: }
  4401  05D4  2E02               	goto	l883
  4402  05D5                     l5196:	
  4403                           
  4404                           ;key.c: 64: else
  4405                           ;key.c: 65: {
  4406                           ;key.c: 66: for(i=0x2000;i<0x2000+1000;i++)
  4407  05D5  3000               	movlw	0
  4408  05D6  0020               	movlb	0	; select bank0
  4409  05D7  00DE               	movwf	Key_Process@i
  4410  05D8  3020               	movlw	32
  4411  05D9  00DF               	movwf	Key_Process@i+1
  4412  05DA  3023               	movlw	35
  4413  05DB  025F               	subwf	Key_Process@i+1,w
  4414  05DC  30E8               	movlw	232
  4415  05DD  1903               	skipnz
  4416  05DE  025E               	subwf	Key_Process@i,w
  4417  05DF  1803               	btfsc	3,0
  4418  05E0  2E02               	goto	l883
  4419  05E1                     l5200:	
  4420                           
  4421                           ;key.c: 67: {
  4422                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4423  05E1  085F               	movf	Key_Process@i+1,w
  4424  05E2  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4425  05E3  085E               	movf	Key_Process@i,w
  4426  05E4  00F3               	movwf	FLASH_ReadWord@flashAddr
  4427  05E5  3189  2166  3185   	fcall	_FLASH_ReadWord
  4428  05E8  0874               	movf	?_FLASH_ReadWord+1,w
  4429  05E9  0020               	movlb	0	; select bank0
  4430  05EA  00DC               	movwf	Key_Process@data_temp+1
  4431  05EB  0873               	movf	?_FLASH_ReadWord,w
  4432  05EC  00DB               	movwf	Key_Process@data_temp
  4433                           
  4434                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4435  05ED  085C               	movf	Key_Process@data_temp+1,w
  4436  05EE  3188  205C  3185   	fcall	_EUSART_Write
  4437                           
  4438                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4439  05F1  0020               	movlb	0	; select bank0
  4440  05F2  085B               	movf	Key_Process@data_temp,w
  4441  05F3  3188  205C  3185   	fcall	_EUSART_Write
  4442  05F6  3001               	movlw	1
  4443  05F7  0020               	movlb	0	; select bank0
  4444  05F8  07DE               	addwf	Key_Process@i,f
  4445  05F9  3000               	movlw	0
  4446  05FA  3DDF               	addwfc	Key_Process@i+1,f
  4447  05FB  3023               	movlw	35
  4448  05FC  025F               	subwf	Key_Process@i+1,w
  4449  05FD  30E8               	movlw	232
  4450  05FE  1903               	skipnz
  4451  05FF  025E               	subwf	Key_Process@i,w
  4452  0600  1C03               	skipc
  4453  0601  2DE1               	goto	l5200
  4454  0602                     l883:	
  4455                           ;key.c: 71: }
  4456                           ;key.c: 72: }
  4457                           ;key.c: 74: while(RB5 == 0);
  4458                           
  4459  0602  0020               	movlb	0	; select bank0
  4460  0603  1A8D               	btfsc	13,5	;volatile
  4461  0604  0008               	return
  4462  0605  2E02               	goto	l883
  4463  0606                     l5206:	
  4464                           ;key.c: 77: while( !(LongPressSec > 2 || RA7 == 1) );
  4465                           
  4466                           ;key.c: 76: case 0x02:
  4467                           
  4468                           ;key.c: 75: break;
  4469                           
  4470  0606  3003               	movlw	3
  4471  0607  0278               	subwf	_LongPressSec,w
  4472  0608  1803               	skipnc
  4473  0609  2E0C               	goto	l5210
  4474  060A  1F8C               	btfss	12,7	;volatile
  4475  060B  2E06               	goto	l5206
  4476  060C                     l5210:	
  4477                           
  4478                           ;key.c: 78: if(LongPressSec > 2)
  4479  060C  3003               	movlw	3
  4480  060D  0278               	subwf	_LongPressSec,w
  4481  060E  1C03               	skipc
  4482  060F  2E2D               	goto	l5234
  4483                           
  4484                           ;key.c: 79: {
  4485                           ;key.c: 80: if(Record_flag == 0)
  4486  0610  086B               	movf	_Record_flag,w
  4487  0611  1D03               	btfss	3,2
  4488  0612  2E26               	goto	l5230
  4489                           
  4490                           ;key.c: 81: {
  4491                           ;key.c: 82: Set_start_flag();
  4492  0613  3188  2044  3185   	fcall	_Set_start_flag
  4493                           
  4494                           ;key.c: 83: Write_Flash_head();
  4495  0616  318B  239A  3185   	fcall	_Write_Flash_head
  4496                           
  4497                           ;key.c: 84: Save_Write_time();
  4498  0619  3186  26BB  3185   	fcall	_Save_Write_time
  4499                           
  4500                           ;key.c: 85: Cur_temperature_time_ch1 = 0;
  4501  061C  0021               	movlb	1	; select bank1
  4502  061D  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  4503                           
  4504                           ;key.c: 86: Cur_temperature_time_ch2 = 0;
  4505  061E  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  4506                           
  4507                           ;key.c: 87: CH1_temperature = 0;
  4508  061F  0020               	movlb	0	; select bank0
  4509  0620  01E7               	clrf	_CH1_temperature
  4510  0621  01E8               	clrf	_CH1_temperature+1
  4511                           
  4512                           ;key.c: 88: CH2_temperature = 0;
  4513  0622  01E9               	clrf	_CH2_temperature
  4514  0623  01EA               	clrf	_CH2_temperature+1
  4515                           
  4516                           ;key.c: 89: time_count = 0;
  4517  0624  01ED               	clrf	_time_count
  4518                           
  4519                           ;key.c: 90: }
  4520  0625  2E35               	goto	l897
  4521  0626                     l5230:	
  4522                           
  4523                           ;key.c: 91: else
  4524                           ;key.c: 92: {
  4525                           ;key.c: 93: Set_finish_flag();
  4526  0626  3188  203A  3185   	fcall	_Set_finish_flag
  4527                           
  4528                           ;key.c: 94: Write_Flash_finish();
  4529  0629  318B  236B  3185   	fcall	_Write_Flash_finish
  4530                           
  4531                           ;key.c: 95: }
  4532                           ;key.c: 96: }
  4533  062C  2E35               	goto	l897
  4534  062D                     l5234:	
  4535                           
  4536                           ;key.c: 97: else
  4537                           ;key.c: 98: {
  4538                           ;key.c: 99: time_count = 5;
  4539  062D  3005               	movlw	5
  4540  062E  0020               	movlb	0	; select bank0
  4541  062F  00DA               	movwf	??_Key_Process
  4542  0630  085A               	movf	??_Key_Process,w
  4543  0631  00ED               	movwf	_time_count
  4544                           
  4545                           ;key.c: 100: temperature_process();
  4546  0632  318C  242C  3185   	fcall	_temperature_process
  4547  0635                     l897:	
  4548                           ;key.c: 101: }
  4549                           ;key.c: 102: while(RA7 == 0);
  4550                           
  4551  0635  0020               	movlb	0	; select bank0
  4552  0636  1B8C               	btfsc	12,7	;volatile
  4553  0637  0008               	return
  4554  0638  2E35               	goto	l897
  4555  0639                     l5240:	
  4556                           ;key.c: 105: }
  4557                           
  4558                           ;key.c: 104: default:break;
  4559                           
  4560                           ;key.c: 103: break;
  4561                           
  4562  0639  085D               	movf	Key_Process@gKeyValue,w
  4563                           
  4564                           ; Switch size 1, requested type "space"
  4565                           ; Number of cases is 2, Range of values is 1 to 2
  4566                           ; switch strategies available:
  4567                           ; Name         Instructions Cycles
  4568                           ; simple_byte            7     4 (average)
  4569                           ; direct_byte           13     9 (fixed)
  4570                           ; jumptable            263     9 (fixed)
  4571                           ;	Chosen strategy is simple_byte
  4572  063A  3A01               	xorlw	1	; case 1
  4573  063B  1903               	skipnz
  4574  063C  2DC3               	goto	l5188
  4575  063D  3A03               	xorlw	3	; case 2
  4576  063E  1903               	skipnz
  4577  063F  2E06               	goto	l5206
  4578  0640  2E42               	goto	l901
  4579  0641  0008               	return
  4580  0642                     l901:	
  4581  0642  0008               	return
  4582  0643                     __end_of_Key_Process:	
  4583                           
  4584                           	psect	text13
  4585  0C2C                     __ptext13:	
  4586 ;; *************** function _temperature_process *****************
  4587 ;; Defined at:
  4588 ;;		line 339 in file "mcc_generated_files/max31856.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;Total ram usage:        0 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:   11
  4609 ;; This function calls:
  4610 ;;		_Two_Display
  4611 ;;		_one_temperature_trans
  4612 ;;		_temperature_display
  4613 ;;		_time_Display
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;;		_Key_Process
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _temperature_process
  4622  0C2C                     _temperature_process:	
  4623                           
  4624                           ;max31856.c: 341: switch(time_count)
  4625                           
  4626                           ;incstack = 0
  4627                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4628  0C2C  2C4C               	goto	l5056
  4629  0C2D                     l5028:	
  4630                           ;max31856.c: 342: {
  4631                           ;max31856.c: 343: case 0:
  4632                           
  4633                           
  4634                           ;max31856.c: 344: Two_Display(1);
  4635  0C2D  3001               	movlw	1
  4636  0C2E  318B  23C9  318C   	fcall	_Two_Display
  4637                           
  4638                           ;max31856.c: 345: do { LATA1 = 1; } while(0);
  4639  0C31  0022               	movlb	2	; select bank2
  4640  0C32  148C               	bsf	12,1	;volatile
  4641                           
  4642                           ;max31856.c: 346: do { LATA0 = 1; } while(0);
  4643  0C33  140C               	bsf	12,0	;volatile
  4644                           
  4645                           ;max31856.c: 347: do { LATA0 = 0; } while(0);
  4646  0C34  100C               	bcf	12,0	;volatile
  4647                           
  4648                           ;max31856.c: 348: one_temperature_trans();
  4649  0C35  318E  2602         	fcall	_one_temperature_trans
  4650                           
  4651                           ;max31856.c: 349: break;
  4652  0C37  0008               	return
  4653  0C38                     l5038:	
  4654                           ;max31856.c: 350: case 1:
  4655                           
  4656                           
  4657                           ;max31856.c: 351: temperature_display();
  4658  0C38  318D  253A         	fcall	_temperature_display
  4659                           
  4660                           ;max31856.c: 352: break;
  4661  0C3A  0008               	return
  4662  0C3B                     l5040:	
  4663                           ;max31856.c: 353: case 2:
  4664                           
  4665                           
  4666                           ;max31856.c: 354: Two_Display(2);
  4667  0C3B  3002               	movlw	2
  4668  0C3C  318B  23C9  318C   	fcall	_Two_Display
  4669                           
  4670                           ;max31856.c: 355: do { LATA0 = 1; } while(0);
  4671  0C3F  0022               	movlb	2	; select bank2
  4672  0C40  140C               	bsf	12,0	;volatile
  4673                           
  4674                           ;max31856.c: 356: do { LATA1 = 1; } while(0);
  4675  0C41  148C               	bsf	12,1	;volatile
  4676                           
  4677                           ;max31856.c: 357: do { LATA1 = 0; } while(0);
  4678  0C42  108C               	bcf	12,1	;volatile
  4679                           
  4680                           ;max31856.c: 358: one_temperature_trans();
  4681  0C43  318E  2602         	fcall	_one_temperature_trans
  4682                           
  4683                           ;max31856.c: 359: break;
  4684  0C45  0008               	return
  4685  0C46                     l5050:	
  4686                           ;max31856.c: 360: case 3:
  4687                           
  4688                           
  4689                           ;max31856.c: 361: temperature_display();
  4690  0C46  318D  253A         	fcall	_temperature_display
  4691                           
  4692                           ;max31856.c: 362: break;
  4693  0C48  0008               	return
  4694  0C49                     l5052:	
  4695                           ;max31856.c: 363: case 5:
  4696                           
  4697                           
  4698                           ;max31856.c: 364: time_Display();
  4699  0C49  3185  2520         	fcall	_time_Display
  4700                           
  4701                           ;max31856.c: 367: }
  4702                           
  4703                           ;max31856.c: 366: default:break;
  4704                           
  4705                           ;max31856.c: 365: break;
  4706  0C4B  0008               	return
  4707  0C4C                     l5056:	
  4708  0C4C  0020               	movlb	0	; select bank0
  4709  0C4D  086D               	movf	_time_count,w
  4710                           
  4711                           ; Switch size 1, requested type "space"
  4712                           ; Number of cases is 5, Range of values is 0 to 5
  4713                           ; switch strategies available:
  4714                           ; Name         Instructions Cycles
  4715                           ; simple_byte           16     9 (average)
  4716                           ; direct_byte           18     6 (fixed)
  4717                           ; jumptable            260     6 (fixed)
  4718                           ;	Chosen strategy is simple_byte
  4719  0C4E  3A00               	xorlw	0	; case 0
  4720  0C4F  1903               	skipnz
  4721  0C50  2C2D               	goto	l5028
  4722  0C51  3A01               	xorlw	1	; case 1
  4723  0C52  1903               	skipnz
  4724  0C53  2C38               	goto	l5038
  4725  0C54  3A03               	xorlw	3	; case 2
  4726  0C55  1903               	skipnz
  4727  0C56  2C3B               	goto	l5040
  4728  0C57  3A01               	xorlw	1	; case 3
  4729  0C58  1903               	skipnz
  4730  0C59  2C46               	goto	l5050
  4731  0C5A  3A06               	xorlw	6	; case 5
  4732  0C5B  1903               	skipnz
  4733  0C5C  2C49               	goto	l5052
  4734  0C5D  2C5E               	goto	l582
  4735  0C5E                     l582:	
  4736  0C5E  0008               	return
  4737  0C5F                     __end_of_temperature_process:	
  4738                           
  4739                           	psect	text14
  4740  0520                     __ptext14:	
  4741 ;; *************** function _time_Display *****************
  4742 ;; Defined at:
  4743 ;;		line 167 in file "mcc_generated_files/ht1621.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  num             4   19[BANK0 ] unsigned char [4]
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;Total ram usage:        7 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    6
  4764 ;; This function calls:
  4765 ;;		_Bq32k_Rtc_Read_Time
  4766 ;;		_WriteAll_1621
  4767 ;;		___awdiv
  4768 ;;		___awmod
  4769 ;; This function is called by:
  4770 ;;		_temperature_process
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _time_Display
  4776  0520                     _time_Display:	
  4777                           
  4778                           ;ht1621.c: 169: unsigned char num[4]={0};
  4779                           
  4780                           ;incstack = 0
  4781                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4782  0520  0021               	movlb	1	; select bank1
  4783  0521  082B               	movf	(time_Display@F2129+3)^(0+128),w
  4784  0522  0020               	movlb	0	; select bank0
  4785  0523  00B6               	movwf	time_Display@num+3
  4786  0524  0021               	movlb	1	; select bank1
  4787  0525  082A               	movf	(time_Display@F2129+2)^(0+128),w
  4788  0526  0020               	movlb	0	; select bank0
  4789  0527  00B5               	movwf	time_Display@num+2
  4790  0528  0021               	movlb	1	; select bank1
  4791  0529  0829               	movf	(time_Display@F2129+1)^(0+128),w
  4792  052A  0020               	movlb	0	; select bank0
  4793  052B  00B4               	movwf	time_Display@num+1
  4794  052C  0021               	movlb	1	; select bank1
  4795  052D  0828               	movf	time_Display@F2129^(0+128),w
  4796  052E  0020               	movlb	0	; select bank0
  4797  052F  00B3               	movwf	time_Display@num
  4798                           
  4799                           ;ht1621.c: 170: Bq32k_Rtc_Read_Time(&rtc_tm);
  4800  0530  30D8               	movlw	(low (_rtc_tm| 0))& (0+255)
  4801  0531  318F  279C  3185   	fcall	_Bq32k_Rtc_Read_Time
  4802                           
  4803                           ;ht1621.c: 171: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4804  0534  300A               	movlw	10
  4805  0535  00F3               	movwf	___awdiv@divisor
  4806  0536  3000               	movlw	0
  4807  0537  00F4               	movwf	___awdiv@divisor+1
  4808  0538  0021               	movlb	1	; select bank1
  4809  0539  085A               	movf	(_rtc_tm^(0+128)+2),w
  4810  053A  0020               	movlb	0	; select bank0
  4811  053B  00B0               	movwf	??_time_Display
  4812  053C  01B1               	clrf	??_time_Display+1
  4813  053D  0830               	movf	??_time_Display,w
  4814  053E  00F5               	movwf	___awdiv@dividend
  4815  053F  0831               	movf	??_time_Display+1,w
  4816  0540  00F6               	movwf	___awdiv@dividend+1
  4817  0541  318E  26E7  3185   	fcall	___awdiv
  4818  0544  0874               	movf	?___awdiv+1,w
  4819  0545  0085               	movwf	5
  4820  0546  0873               	movf	?___awdiv,w
  4821  0547  0084               	movwf	4
  4822  0548  3000               	movlw	low (_Dis_TAB| (0+32768))
  4823  0549  0784               	addwf	4,f
  4824  054A  3090               	movlw	high (_Dis_TAB| (0+32768))
  4825  054B  3D85               	addwfc	5,f
  4826  054C  0800               	movf	0,w	;code access
  4827  054D  0020               	movlb	0	; select bank0
  4828  054E  00B2               	movwf	??_time_Display+2
  4829  054F  0832               	movf	??_time_Display+2,w
  4830  0550  00B3               	movwf	time_Display@num
  4831                           
  4832                           ;ht1621.c: 172: num[0] |= 0x08;
  4833  0551  15B3               	bsf	time_Display@num,3
  4834                           
  4835                           ;ht1621.c: 173: num[1] = Dis_TAB[rtc_tm.hours % 10];
  4836  0552  300A               	movlw	10
  4837  0553  00F3               	movwf	___awmod@divisor
  4838  0554  3000               	movlw	0
  4839  0555  00F4               	movwf	___awmod@divisor+1
  4840  0556  0021               	movlb	1	; select bank1
  4841  0557  085A               	movf	(_rtc_tm^(0+128)+2),w
  4842  0558  0020               	movlb	0	; select bank0
  4843  0559  00B0               	movwf	??_time_Display
  4844  055A  01B1               	clrf	??_time_Display+1
  4845  055B  0830               	movf	??_time_Display,w
  4846  055C  00F5               	movwf	___awmod@dividend
  4847  055D  0831               	movf	??_time_Display+1,w
  4848  055E  00F6               	movwf	___awmod@dividend+1
  4849  055F  318D  25BC  3185   	fcall	___awmod
  4850  0562  0874               	movf	?___awmod+1,w
  4851  0563  0085               	movwf	5
  4852  0564  0873               	movf	?___awmod,w
  4853  0565  0084               	movwf	4
  4854  0566  3000               	movlw	low (_Dis_TAB| (0+32768))
  4855  0567  0784               	addwf	4,f
  4856  0568  3090               	movlw	high (_Dis_TAB| (0+32768))
  4857  0569  3D85               	addwfc	5,f
  4858  056A  0800               	movf	0,w	;code access
  4859  056B  0020               	movlb	0	; select bank0
  4860  056C  00B2               	movwf	??_time_Display+2
  4861  056D  0832               	movf	??_time_Display+2,w
  4862  056E  00B4               	movwf	time_Display@num+1
  4863                           
  4864                           ;ht1621.c: 174: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  4865  056F  300A               	movlw	10
  4866  0570  00F3               	movwf	___awdiv@divisor
  4867  0571  3000               	movlw	0
  4868  0572  00F4               	movwf	___awdiv@divisor+1
  4869  0573  0021               	movlb	1	; select bank1
  4870  0574  0859               	movf	(_rtc_tm^(0+128)+1),w
  4871  0575  0020               	movlb	0	; select bank0
  4872  0576  00B0               	movwf	??_time_Display
  4873  0577  01B1               	clrf	??_time_Display+1
  4874  0578  0830               	movf	??_time_Display,w
  4875  0579  00F5               	movwf	___awdiv@dividend
  4876  057A  0831               	movf	??_time_Display+1,w
  4877  057B  00F6               	movwf	___awdiv@dividend+1
  4878  057C  318E  26E7  3185   	fcall	___awdiv
  4879  057F  0874               	movf	?___awdiv+1,w
  4880  0580  0085               	movwf	5
  4881  0581  0873               	movf	?___awdiv,w
  4882  0582  0084               	movwf	4
  4883  0583  3000               	movlw	low (_Dis_TAB| (0+32768))
  4884  0584  0784               	addwf	4,f
  4885  0585  3090               	movlw	high (_Dis_TAB| (0+32768))
  4886  0586  3D85               	addwfc	5,f
  4887  0587  0800               	movf	0,w	;code access
  4888  0588  0020               	movlb	0	; select bank0
  4889  0589  00B2               	movwf	??_time_Display+2
  4890  058A  0832               	movf	??_time_Display+2,w
  4891  058B  00B5               	movwf	time_Display@num+2
  4892                           
  4893                           ;ht1621.c: 175: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  4894  058C  300A               	movlw	10
  4895  058D  00F3               	movwf	___awmod@divisor
  4896  058E  3000               	movlw	0
  4897  058F  00F4               	movwf	___awmod@divisor+1
  4898  0590  0021               	movlb	1	; select bank1
  4899  0591  0859               	movf	(_rtc_tm^(0+128)+1),w
  4900  0592  0020               	movlb	0	; select bank0
  4901  0593  00B0               	movwf	??_time_Display
  4902  0594  01B1               	clrf	??_time_Display+1
  4903  0595  0830               	movf	??_time_Display,w
  4904  0596  00F5               	movwf	___awmod@dividend
  4905  0597  0831               	movf	??_time_Display+1,w
  4906  0598  00F6               	movwf	___awmod@dividend+1
  4907  0599  318D  25BC  3185   	fcall	___awmod
  4908  059C  0874               	movf	?___awmod+1,w
  4909  059D  0085               	movwf	5
  4910  059E  0873               	movf	?___awmod,w
  4911  059F  0084               	movwf	4
  4912  05A0  3000               	movlw	low (_Dis_TAB| (0+32768))
  4913  05A1  0784               	addwf	4,f
  4914  05A2  3090               	movlw	high (_Dis_TAB| (0+32768))
  4915  05A3  3D85               	addwfc	5,f
  4916  05A4  0800               	movf	0,w	;code access
  4917  05A5  0020               	movlb	0	; select bank0
  4918  05A6  00B2               	movwf	??_time_Display+2
  4919  05A7  0832               	movf	??_time_Display+2,w
  4920  05A8  00B6               	movwf	time_Display@num+3
  4921                           
  4922                           ;ht1621.c: 176: WriteAll_1621(0, num, 4);
  4923  05A9  3033               	movlw	low time_Display@num
  4924  05AA  00A0               	movwf	WriteAll_1621@p
  4925  05AB  3000               	movlw	high time_Display@num
  4926  05AC  00A1               	movwf	WriteAll_1621@p+1
  4927  05AD  3004               	movlw	4
  4928  05AE  00B0               	movwf	??_time_Display
  4929  05AF  0830               	movf	??_time_Display,w
  4930  05B0  00A2               	movwf	WriteAll_1621@cnt
  4931  05B1  3000               	movlw	0
  4932  05B2  318C  245F         	fcall	_WriteAll_1621
  4933  05B4  0008               	return
  4934  05B5                     __end_of_time_Display:	
  4935                           
  4936                           	psect	text15
  4937  0DBC                     __ptext15:	
  4938 ;; *************** function ___awmod *****************
  4939 ;; Defined at:
  4940 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  divisor         2    3[COMMON] int 
  4943 ;;  dividend        2    5[COMMON] int 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  sign            1    1[BANK0 ] unsigned char 
  4946 ;;  counter         1    0[BANK0 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  2    3[COMMON] int 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;Total ram usage:        7 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    3
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_time_Display
  4967 ;;		_bin2bcd
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function ___awmod
  4973  0DBC                     ___awmod:	
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4977  0DBC  0020               	movlb	0	; select bank0
  4978  0DBD  01A1               	clrf	___awmod@sign
  4979  0DBE  1FF6               	btfss	___awmod@dividend+1,7
  4980  0DBF  2DC7               	goto	l4868
  4981  0DC0  09F5               	comf	___awmod@dividend,f
  4982  0DC1  09F6               	comf	___awmod@dividend+1,f
  4983  0DC2  0AF5               	incf	___awmod@dividend,f
  4984  0DC3  1903               	skipnz
  4985  0DC4  0AF6               	incf	___awmod@dividend+1,f
  4986  0DC5  01A1               	clrf	___awmod@sign
  4987  0DC6  0AA1               	incf	___awmod@sign,f
  4988  0DC7                     l4868:	
  4989  0DC7  1FF4               	btfss	___awmod@divisor+1,7
  4990  0DC8  2DCE               	goto	l4872
  4991  0DC9  09F3               	comf	___awmod@divisor,f
  4992  0DCA  09F4               	comf	___awmod@divisor+1,f
  4993  0DCB  0AF3               	incf	___awmod@divisor,f
  4994  0DCC  1903               	skipnz
  4995  0DCD  0AF4               	incf	___awmod@divisor+1,f
  4996  0DCE                     l4872:	
  4997  0DCE  0873               	movf	___awmod@divisor,w
  4998  0DCF  0474               	iorwf	___awmod@divisor+1,w
  4999  0DD0  1903               	btfsc	3,2
  5000  0DD1  2DF5               	goto	l4890
  5001  0DD2  01A0               	clrf	___awmod@counter
  5002  0DD3  0AA0               	incf	___awmod@counter,f
  5003  0DD4                     l4880:	
  5004  0DD4  1BF4               	btfsc	___awmod@divisor+1,7
  5005  0DD5  2DE0               	goto	l4882
  5006  0DD6  3001               	movlw	1
  5007  0DD7                     u4515:	
  5008  0DD7  35F3               	lslf	___awmod@divisor,f
  5009  0DD8  0DF4               	rlf	___awmod@divisor+1,f
  5010  0DD9  0B89               	decfsz	9,f
  5011  0DDA  2DD7               	goto	u4515
  5012  0DDB  3001               	movlw	1
  5013  0DDC  00F7               	movwf	??___awmod
  5014  0DDD  0877               	movf	??___awmod,w
  5015  0DDE  07A0               	addwf	___awmod@counter,f
  5016  0DDF  2DD4               	goto	l4880
  5017  0DE0                     l4882:	
  5018  0DE0  0874               	movf	___awmod@divisor+1,w
  5019  0DE1  0276               	subwf	___awmod@dividend+1,w
  5020  0DE2  1D03               	skipz
  5021  0DE3  2DE6               	goto	u4535
  5022  0DE4  0873               	movf	___awmod@divisor,w
  5023  0DE5  0275               	subwf	___awmod@dividend,w
  5024  0DE6                     u4535:	
  5025  0DE6  1C03               	skipc
  5026  0DE7  2DEC               	goto	l4886
  5027  0DE8  0873               	movf	___awmod@divisor,w
  5028  0DE9  02F5               	subwf	___awmod@dividend,f
  5029  0DEA  0874               	movf	___awmod@divisor+1,w
  5030  0DEB  3BF6               	subwfb	___awmod@dividend+1,f
  5031  0DEC                     l4886:	
  5032  0DEC  3001               	movlw	1
  5033  0DED                     u4545:	
  5034  0DED  36F4               	lsrf	___awmod@divisor+1,f
  5035  0DEE  0CF3               	rrf	___awmod@divisor,f
  5036  0DEF  0B89               	decfsz	9,f
  5037  0DF0  2DED               	goto	u4545
  5038  0DF1  3001               	movlw	1
  5039  0DF2  02A0               	subwf	___awmod@counter,f
  5040  0DF3  1D03               	btfss	3,2
  5041  0DF4  2DE0               	goto	l4882
  5042  0DF5                     l4890:	
  5043  0DF5  0821               	movf	___awmod@sign,w
  5044  0DF6  1903               	btfsc	3,2
  5045  0DF7  2DFD               	goto	l4894
  5046  0DF8  09F5               	comf	___awmod@dividend,f
  5047  0DF9  09F6               	comf	___awmod@dividend+1,f
  5048  0DFA  0AF5               	incf	___awmod@dividend,f
  5049  0DFB  1903               	skipnz
  5050  0DFC  0AF6               	incf	___awmod@dividend+1,f
  5051  0DFD                     l4894:	
  5052  0DFD  0876               	movf	___awmod@dividend+1,w
  5053  0DFE  00F4               	movwf	?___awmod+1
  5054  0DFF  0875               	movf	___awmod@dividend,w
  5055  0E00  00F3               	movwf	?___awmod
  5056  0E01  0008               	return
  5057  0E02                     __end_of___awmod:	
  5058                           
  5059                           	psect	text16
  5060  0EE7                     __ptext16:	
  5061 ;; *************** function ___awdiv *****************
  5062 ;; Defined at:
  5063 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  divisor         2    3[COMMON] int 
  5066 ;;  dividend        2    5[COMMON] int 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  quotient        2    2[BANK0 ] int 
  5069 ;;  sign            1    1[BANK0 ] unsigned char 
  5070 ;;  counter         1    0[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  2    3[COMMON] int 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;Total ram usage:        9 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_time_Display
  5091 ;;		_bin2bcd
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function ___awdiv
  5097  0EE7                     ___awdiv:	
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5101  0EE7  0020               	movlb	0	; select bank0
  5102  0EE8  01A1               	clrf	___awdiv@sign
  5103  0EE9  1FF4               	btfss	___awdiv@divisor+1,7
  5104  0EEA  2EF2               	goto	l4824
  5105  0EEB  09F3               	comf	___awdiv@divisor,f
  5106  0EEC  09F4               	comf	___awdiv@divisor+1,f
  5107  0EED  0AF3               	incf	___awdiv@divisor,f
  5108  0EEE  1903               	skipnz
  5109  0EEF  0AF4               	incf	___awdiv@divisor+1,f
  5110  0EF0  01A1               	clrf	___awdiv@sign
  5111  0EF1  0AA1               	incf	___awdiv@sign,f
  5112  0EF2                     l4824:	
  5113  0EF2  1FF6               	btfss	___awdiv@dividend+1,7
  5114  0EF3  2EFD               	goto	l4830
  5115  0EF4  09F5               	comf	___awdiv@dividend,f
  5116  0EF5  09F6               	comf	___awdiv@dividend+1,f
  5117  0EF6  0AF5               	incf	___awdiv@dividend,f
  5118  0EF7  1903               	skipnz
  5119  0EF8  0AF6               	incf	___awdiv@dividend+1,f
  5120  0EF9  3001               	movlw	1
  5121  0EFA  00F7               	movwf	??___awdiv
  5122  0EFB  0877               	movf	??___awdiv,w
  5123  0EFC  06A1               	xorwf	___awdiv@sign,f
  5124  0EFD                     l4830:	
  5125  0EFD  01A2               	clrf	___awdiv@quotient
  5126  0EFE  01A3               	clrf	___awdiv@quotient+1
  5127  0EFF  0873               	movf	___awdiv@divisor,w
  5128  0F00  0474               	iorwf	___awdiv@divisor+1,w
  5129  0F01  1903               	btfsc	3,2
  5130  0F02  2F2C               	goto	l4852
  5131  0F03  01A0               	clrf	___awdiv@counter
  5132  0F04  0AA0               	incf	___awdiv@counter,f
  5133  0F05                     l4840:	
  5134  0F05  1BF4               	btfsc	___awdiv@divisor+1,7
  5135  0F06  2F11               	goto	l4842
  5136  0F07  3001               	movlw	1
  5137  0F08                     u4415:	
  5138  0F08  35F3               	lslf	___awdiv@divisor,f
  5139  0F09  0DF4               	rlf	___awdiv@divisor+1,f
  5140  0F0A  0B89               	decfsz	9,f
  5141  0F0B  2F08               	goto	u4415
  5142  0F0C  3001               	movlw	1
  5143  0F0D  00F7               	movwf	??___awdiv
  5144  0F0E  0877               	movf	??___awdiv,w
  5145  0F0F  07A0               	addwf	___awdiv@counter,f
  5146  0F10  2F05               	goto	l4840
  5147  0F11                     l4842:	
  5148  0F11  3001               	movlw	1
  5149  0F12                     u4435:	
  5150  0F12  35A2               	lslf	___awdiv@quotient,f
  5151  0F13  0DA3               	rlf	___awdiv@quotient+1,f
  5152  0F14  0B89               	decfsz	9,f
  5153  0F15  2F12               	goto	u4435
  5154  0F16  0874               	movf	___awdiv@divisor+1,w
  5155  0F17  0276               	subwf	___awdiv@dividend+1,w
  5156  0F18  1D03               	skipz
  5157  0F19  2F1C               	goto	u4445
  5158  0F1A  0873               	movf	___awdiv@divisor,w
  5159  0F1B  0275               	subwf	___awdiv@dividend,w
  5160  0F1C                     u4445:	
  5161  0F1C  1C03               	skipc
  5162  0F1D  2F23               	goto	l4848
  5163  0F1E  0873               	movf	___awdiv@divisor,w
  5164  0F1F  02F5               	subwf	___awdiv@dividend,f
  5165  0F20  0874               	movf	___awdiv@divisor+1,w
  5166  0F21  3BF6               	subwfb	___awdiv@dividend+1,f
  5167  0F22  1422               	bsf	___awdiv@quotient,0
  5168  0F23                     l4848:	
  5169  0F23  3001               	movlw	1
  5170  0F24                     u4455:	
  5171  0F24  36F4               	lsrf	___awdiv@divisor+1,f
  5172  0F25  0CF3               	rrf	___awdiv@divisor,f
  5173  0F26  0B89               	decfsz	9,f
  5174  0F27  2F24               	goto	u4455
  5175  0F28  3001               	movlw	1
  5176  0F29  02A0               	subwf	___awdiv@counter,f
  5177  0F2A  1D03               	btfss	3,2
  5178  0F2B  2F11               	goto	l4842
  5179  0F2C                     l4852:	
  5180  0F2C  0821               	movf	___awdiv@sign,w
  5181  0F2D  1903               	btfsc	3,2
  5182  0F2E  2F34               	goto	l4856
  5183  0F2F  09A2               	comf	___awdiv@quotient,f
  5184  0F30  09A3               	comf	___awdiv@quotient+1,f
  5185  0F31  0AA2               	incf	___awdiv@quotient,f
  5186  0F32  1903               	skipnz
  5187  0F33  0AA3               	incf	___awdiv@quotient+1,f
  5188  0F34                     l4856:	
  5189  0F34  0823               	movf	___awdiv@quotient+1,w
  5190  0F35  00F4               	movwf	?___awdiv+1
  5191  0F36  0822               	movf	___awdiv@quotient,w
  5192  0F37  00F3               	movwf	?___awdiv
  5193  0F38  0008               	return
  5194  0F39                     __end_of___awdiv:	
  5195                           
  5196                           	psect	text17
  5197  0D3A                     __ptext17:	
  5198 ;; *************** function _temperature_display *****************
  5199 ;; Defined at:
  5200 ;;		line 301 in file "mcc_generated_files/max31856.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;Total ram usage:        1 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   10
  5221 ;; This function calls:
  5222 ;;		_Tc_Display
  5223 ;;		_err_Display
  5224 ;;		_maxim_31856_write_register
  5225 ;;		_maxim_clear_fault_status
  5226 ;;		_tc_temperature_trans
  5227 ;; This function is called by:
  5228 ;;		_temperature_process
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _temperature_display
  5234  0D3A                     _temperature_display:	
  5235                           
  5236                           ;max31856.c: 303: if(uch_sr==(uint8_t)0x00)
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5240  0D3A  0021               	movlb	1	; select bank1
  5241  0D3B  0841               	movf	_uch_sr^(0+128),w
  5242  0D3C  1D03               	btfss	3,2
  5243  0D3D  2D53               	goto	l4934
  5244                           
  5245                           ;max31856.c: 304: {
  5246                           ;max31856.c: 305: tc_temperature_trans();
  5247  0D3E  3180  203F  318D   	fcall	_tc_temperature_trans
  5248                           
  5249                           ;max31856.c: 306: Tc_Display();
  5250  0D41  3183  2391  318D   	fcall	_Tc_Display
  5251                           
  5252                           ;max31856.c: 307: if(time_count == 1)
  5253  0D44  0020               	movlb	0	; select bank0
  5254  0D45  036D               	decf	_time_count,w
  5255  0D46  1D03               	btfss	3,2
  5256  0D47  2D4B               	goto	l4930
  5257                           
  5258                           ;max31856.c: 308: {
  5259                           ;max31856.c: 309: CH1_state = 0;
  5260  0D48  0021               	movlb	1	; select bank1
  5261  0D49  01B4               	clrf	_CH1_state^(0+128)
  5262                           
  5263                           ;max31856.c: 310: }
  5264  0D4A  0008               	return
  5265  0D4B                     l4930:	
  5266                           
  5267                           ;max31856.c: 311: else if(time_count == 3)
  5268  0D4B  3003               	movlw	3
  5269  0D4C  0020               	movlb	0	; select bank0
  5270  0D4D  066D               	xorwf	_time_count,w
  5271  0D4E  1D03               	btfss	3,2
  5272  0D4F  0008               	return
  5273                           
  5274                           ;max31856.c: 312: {
  5275                           ;max31856.c: 313: CH2_state = 0;
  5276  0D50  0021               	movlb	1	; select bank1
  5277  0D51  01B5               	clrf	_CH2_state^(0+128)
  5278                           
  5279                           ;max31856.c: 314: }
  5280                           ;max31856.c: 315: }
  5281  0D52  0008               	return
  5282  0D53                     l4934:	
  5283                           
  5284                           ;max31856.c: 316: else
  5285                           ;max31856.c: 317: {
  5286                           ;max31856.c: 318: if(time_count == 1)
  5287  0D53  0020               	movlb	0	; select bank0
  5288  0D54  036D               	decf	_time_count,w
  5289  0D55  1D03               	btfss	3,2
  5290  0D56  2D5B               	goto	l4938
  5291                           
  5292                           ;max31856.c: 319: {
  5293                           ;max31856.c: 320: CH1_state = 1;
  5294  0D57  0021               	movlb	1	; select bank1
  5295  0D58  01B4               	clrf	_CH1_state^(0+128)
  5296  0D59  0AB4               	incf	_CH1_state^(0+128),f
  5297                           
  5298                           ;max31856.c: 321: }
  5299  0D5A  2D63               	goto	l4942
  5300  0D5B                     l4938:	
  5301                           
  5302                           ;max31856.c: 322: else if(time_count == 3)
  5303  0D5B  3003               	movlw	3
  5304  0D5C  0020               	movlb	0	; select bank0
  5305  0D5D  066D               	xorwf	_time_count,w
  5306  0D5E  1D03               	btfss	3,2
  5307  0D5F  2D63               	goto	l4942
  5308                           
  5309                           ;max31856.c: 323: {
  5310                           ;max31856.c: 324: CH2_state = 1;
  5311  0D60  0021               	movlb	1	; select bank1
  5312  0D61  01B5               	clrf	_CH2_state^(0+128)
  5313  0D62  0AB5               	incf	_CH2_state^(0+128),f
  5314  0D63                     l4942:	
  5315                           
  5316                           ;max31856.c: 325: }
  5317                           ;max31856.c: 326: err_Display();
  5318  0D63  318B  2312  318D   	fcall	_err_Display
  5319                           
  5320                           ;max31856.c: 327: maxim_31856_write_register(0x82, 0xFF);
  5321  0D66  30FF               	movlw	255
  5322  0D67  0020               	movlb	0	; select bank0
  5323  0D68  00D9               	movwf	??_temperature_display
  5324  0D69  0859               	movf	??_temperature_display,w
  5325  0D6A  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5326  0D6B  3082               	movlw	130
  5327  0D6C  3188  208B  318D   	fcall	_maxim_31856_write_register
  5328                           
  5329                           ;max31856.c: 328: maxim_clear_fault_status();
  5330  0D6F  3188  2098  318D   	fcall	_maxim_clear_fault_status
  5331                           
  5332                           ;max31856.c: 329: maxim_31856_write_register(0x82, 0x00);
  5333  0D72  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5334  0D73  3082               	movlw	130
  5335  0D74  3188  208B         	fcall	_maxim_31856_write_register
  5336  0D76  0008               	return
  5337  0D77                     __end_of_temperature_display:	
  5338                           
  5339                           	psect	text18
  5340  003F                     __ptext18:	
  5341 ;; *************** function _tc_temperature_trans *****************
  5342 ;; Defined at:
  5343 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  temperature_    2   55[BANK0 ] unsigned int 
  5348 ;;  var_time        2   53[BANK0 ] unsigned int 
  5349 ;;  temperature_    2   51[BANK0 ] unsigned int 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;Total ram usage:       10 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    9
  5366 ;; This function calls:
  5367 ;;		_Calculate_Time
  5368 ;;		_Save_Write_word
  5369 ;; This function is called by:
  5370 ;;		_temperature_display
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           
  5375                           ;psect for function _tc_temperature_trans
  5376  003F                     _tc_temperature_trans:	
  5377                           
  5378                           ;max31856.c: 170: unsigned int temperature_absolute = 0;
  5379                           
  5380                           ;incstack = 0
  5381                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5382  003F  0020               	movlb	0	; select bank0
  5383  0040  01D3               	clrf	tc_temperature_trans@temperature_absolute
  5384  0041  01D4               	clrf	tc_temperature_trans@temperature_absolute+1
  5385                           
  5386                           ;max31856.c: 171: unsigned int temperature_temp = 0;
  5387  0042  01D7               	clrf	tc_temperature_trans@temperature_temp
  5388  0043  01D8               	clrf	tc_temperature_trans@temperature_temp+1
  5389                           
  5390                           ;max31856.c: 172: unsigned int var_time=0;
  5391  0044  01D5               	clrf	tc_temperature_trans@var_time
  5392  0045  01D6               	clrf	tc_temperature_trans@var_time+1
  5393                           
  5394                           ;max31856.c: 173: temperature_value = 0;
  5395  0046  3000               	movlw	0
  5396  0047  00E6               	movwf	_temperature_value+3
  5397  0048  3000               	movlw	0
  5398  0049  00E5               	movwf	_temperature_value+2
  5399  004A  3000               	movlw	0
  5400  004B  00E4               	movwf	_temperature_value+1
  5401  004C  3000               	movlw	0
  5402  004D  00E3               	movwf	_temperature_value
  5403                           
  5404                           ;max31856.c: 174: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5405  004E  303F               	movlw	63
  5406  004F  057A               	andwf	_uch_ltcbh,w
  5407  0050  00CF               	movwf	??_tc_temperature_trans
  5408  0051  084F               	movf	??_tc_temperature_trans,w
  5409  0052  00D1               	movwf	??_tc_temperature_trans+2
  5410  0053  0021               	movlb	1	; select bank1
  5411  0054  083F               	movf	_uch_ltcbm^(0+128),w
  5412  0055  0020               	movlb	0	; select bank0
  5413  0056  00D0               	movwf	??_tc_temperature_trans+1
  5414  0057  0D51               	rlf	??_tc_temperature_trans+2,w
  5415  0058  0CD1               	rrf	??_tc_temperature_trans+2,f
  5416  0059  0CD0               	rrf	??_tc_temperature_trans+1,f
  5417  005A  0850               	movf	??_tc_temperature_trans+1,w
  5418  005B  00E3               	movwf	_temperature_value
  5419  005C  0851               	movf	??_tc_temperature_trans+2,w
  5420  005D  00E4               	movwf	_temperature_value+1
  5421  005E  0D89               	rlf	9,f
  5422  005F  3B89               	subwfb	9,f
  5423  0060  0989               	comf	9,f
  5424  0061  00E5               	movwf	_temperature_value+2
  5425  0062  00E6               	movwf	_temperature_value+3
  5426                           
  5427                           ;max31856.c: 175: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5428  0063  1BFA               	btfsc	_uch_ltcbh,7
  5429  0064  16E4               	bsf	_temperature_value+1,5
  5430                           
  5431                           ;max31856.c: 176: temperature_temp = temperature_value;
  5432  0065  0864               	movf	_temperature_value+1,w
  5433  0066  00D8               	movwf	tc_temperature_trans@temperature_temp+1
  5434  0067  0863               	movf	_temperature_value,w
  5435  0068  00D7               	movwf	tc_temperature_trans@temperature_temp
  5436                           
  5437                           ;max31856.c: 179: if(time_count == 1 && Record_flag == 1)
  5438  0069  036D               	decf	_time_count,w
  5439  006A  1D03               	btfss	3,2
  5440  006B  28F1               	goto	l4702
  5441  006C  036B               	decf	_Record_flag,w
  5442  006D  1D03               	btfss	3,2
  5443  006E  28F1               	goto	l4702
  5444                           
  5445                           ;max31856.c: 180: {
  5446                           ;max31856.c: 181: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5447  006F  3020               	movlw	32
  5448  0070  0658               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5449  0071  0457               	iorwf	tc_temperature_trans@temperature_temp,w
  5450  0072  1903               	btfsc	3,2
  5451  0073  2876               	goto	u4070
  5452  0074  3001               	movlw	1
  5453  0075  2877               	goto	u4080
  5454  0076                     u4070:	
  5455  0076  3000               	movlw	0
  5456  0077                     u4080:	
  5457  0077  00CF               	movwf	??_tc_temperature_trans
  5458  0078  01D0               	clrf	??_tc_temperature_trans+1
  5459  0079  0867               	movf	_CH1_temperature,w
  5460  007A  054F               	andwf	??_tc_temperature_trans,w
  5461  007B  00D1               	movwf	??_tc_temperature_trans+2
  5462  007C  0868               	movf	_CH1_temperature+1,w
  5463  007D  0550               	andwf	??_tc_temperature_trans+1,w
  5464  007E  00D2               	movwf	??_tc_temperature_trans+3
  5465  007F  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5466  0080  28C7               	goto	L4
  5467                           
  5468                           ;max31856.c: 193: else
  5469                           ;max31856.c: 194: {
  5470                           ;max31856.c: 195: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5471                           
  5472                           ;max31856.c: 192: }
  5473                           
  5474                           ;max31856.c: 191: Cur_temperature_time_ch1 = 0;
  5475                           
  5476                           ;max31856.c: 190: Save_Write_word(temperature_value);
  5477                           
  5478                           ;max31856.c: 189: Save_Write_word(var_time);
  5479                           
  5480                           ;max31856.c: 187: var_time |= 0x2000;
  5481                           
  5482                           ;max31856.c: 185: if(CH1_state == 1) var_time |= 0x400;
  5483                           
  5484                           ;max31856.c: 184: var_time |= 0x100;
  5485                           
  5486                           ;max31856.c: 182: {
  5487                           ;max31856.c: 183: var_time = Calculate_Time();
  5488  0081  1EE8               	btfss	_CH1_temperature+1,5
  5489  0082  2890               	goto	l4676
  5490  0083  0967               	comf	_CH1_temperature,w
  5491  0084  00CF               	movwf	??_tc_temperature_trans
  5492  0085  0968               	comf	_CH1_temperature+1,w
  5493  0086  00D0               	movwf	??_tc_temperature_trans+1
  5494  0087  0ACF               	incf	??_tc_temperature_trans,f
  5495  0088  1903               	skipnz
  5496  0089  0AD0               	incf	??_tc_temperature_trans+1,f
  5497  008A  084F               	movf	??_tc_temperature_trans,w
  5498  008B  3E00               	addlw	0
  5499  008C  00E7               	movwf	_CH1_temperature
  5500  008D  3040               	movlw	64
  5501  008E  3D50               	addwfc	??_tc_temperature_trans+1,w
  5502  008F  00E8               	movwf	_CH1_temperature+1
  5503  0090                     l4676:	
  5504                           
  5505                           ;max31856.c: 196: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5506  0090  1ED8               	btfss	tc_temperature_trans@temperature_temp+1,5
  5507  0091  289F               	goto	l4680
  5508  0092  0957               	comf	tc_temperature_trans@temperature_temp,w
  5509  0093  00CF               	movwf	??_tc_temperature_trans
  5510  0094  0958               	comf	tc_temperature_trans@temperature_temp+1,w
  5511  0095  00D0               	movwf	??_tc_temperature_trans+1
  5512  0096  0ACF               	incf	??_tc_temperature_trans,f
  5513  0097  1903               	skipnz
  5514  0098  0AD0               	incf	??_tc_temperature_trans+1,f
  5515  0099  084F               	movf	??_tc_temperature_trans,w
  5516  009A  3E00               	addlw	0
  5517  009B  00D7               	movwf	tc_temperature_trans@temperature_temp
  5518  009C  3040               	movlw	64
  5519  009D  3D50               	addwfc	??_tc_temperature_trans+1,w
  5520  009E  00D8               	movwf	tc_temperature_trans@temperature_temp+1
  5521  009F                     l4680:	
  5522                           
  5523                           ;max31856.c: 197: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5524  009F  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5525  00A0  0268               	subwf	_CH1_temperature+1,w
  5526  00A1  1D03               	skipz
  5527  00A2  28A5               	goto	u4135
  5528  00A3  0857               	movf	tc_temperature_trans@temperature_temp,w
  5529  00A4  0267               	subwf	_CH1_temperature,w
  5530  00A5                     u4135:	
  5531  00A5  1803               	skipnc
  5532  00A6  28B3               	goto	l4684
  5533  00A7  0967               	comf	_CH1_temperature,w
  5534  00A8  00CF               	movwf	??_tc_temperature_trans
  5535  00A9  0968               	comf	_CH1_temperature+1,w
  5536  00AA  00D0               	movwf	??_tc_temperature_trans+1
  5537  00AB  0ACF               	incf	??_tc_temperature_trans,f
  5538  00AC  1903               	skipnz
  5539  00AD  0AD0               	incf	??_tc_temperature_trans+1,f
  5540  00AE  0857               	movf	tc_temperature_trans@temperature_temp,w
  5541  00AF  074F               	addwf	??_tc_temperature_trans,w
  5542  00B0  00D3               	movwf	tc_temperature_trans@temperature_absolute
  5543  00B1  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5544  00B2  28BE               	goto	L2
  5545  00B3                     l4684:	
  5546                           
  5547                           ;max31856.c: 198: else temperature_absolute = CH1_temperature - temperature_temp;
  5548  00B3  0957               	comf	tc_temperature_trans@temperature_temp,w
  5549  00B4  00CF               	movwf	??_tc_temperature_trans
  5550  00B5  0958               	comf	tc_temperature_trans@temperature_temp+1,w
  5551  00B6  00D0               	movwf	??_tc_temperature_trans+1
  5552  00B7  0ACF               	incf	??_tc_temperature_trans,f
  5553  00B8  1903               	skipnz
  5554  00B9  0AD0               	incf	??_tc_temperature_trans+1,f
  5555  00BA  0867               	movf	_CH1_temperature,w
  5556  00BB  074F               	addwf	??_tc_temperature_trans,w
  5557  00BC  00D3               	movwf	tc_temperature_trans@temperature_absolute
  5558  00BD  0868               	movf	_CH1_temperature+1,w
  5559  00BE                     L2:	
  5560  00BE  3D50               	addwfc	??_tc_temperature_trans+1,w
  5561  00BF  00D4               	movwf	tc_temperature_trans@temperature_absolute+1
  5562                           
  5563                           ;max31856.c: 199: if( temperature_absolute > 4)
  5564  00C0  3000               	movlw	0
  5565  00C1  0254               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5566  00C2  3005               	movlw	5
  5567  00C3  1903               	skipnz
  5568  00C4  0253               	subwf	tc_temperature_trans@temperature_absolute,w
  5569  00C5  1C03               	skipc
  5570  00C6  28EB               	goto	l4700
  5571  00C7                     L4:	
  5572                           
  5573                           ;max31856.c: 200: {
  5574                           ;max31856.c: 201: var_time = Calculate_Time();
  5575  00C7  3181  21F3  3180   	fcall	_Calculate_Time
  5576  00CA  0020               	movlb	0	; select bank0
  5577  00CB  00CF               	movwf	??_tc_temperature_trans
  5578  00CC  01D0               	clrf	??_tc_temperature_trans+1
  5579  00CD  084F               	movf	??_tc_temperature_trans,w
  5580  00CE  00D5               	movwf	tc_temperature_trans@var_time
  5581  00CF  0850               	movf	??_tc_temperature_trans+1,w
  5582  00D0  00D6               	movwf	tc_temperature_trans@var_time+1
  5583                           
  5584                           ;max31856.c: 202: var_time |= 0x100;
  5585  00D1  1456               	bsf	tc_temperature_trans@var_time+1,0
  5586                           
  5587                           ;max31856.c: 203: if(CH1_state == 1) var_time |= 0x400;
  5588  00D2  0021               	movlb	1	; select bank1
  5589  00D3  0334               	decf	_CH1_state^(0+128),w
  5590  00D4  1D03               	btfss	3,2
  5591  00D5  28D8               	goto	l516
  5592  00D6  0020               	movlb	0	; select bank0
  5593  00D7  1556               	bsf	tc_temperature_trans@var_time+1,2
  5594  00D8                     l516:	
  5595                           
  5596                           ;max31856.c: 205: var_time |= 0x2000;
  5597  00D8  0020               	movlb	0	; select bank0
  5598  00D9  16D6               	bsf	tc_temperature_trans@var_time+1,5
  5599                           
  5600                           ;max31856.c: 207: Save_Write_word(var_time);
  5601  00DA  0856               	movf	tc_temperature_trans@var_time+1,w
  5602  00DB  00B4               	movwf	Save_Write_word@data+1
  5603  00DC  0855               	movf	tc_temperature_trans@var_time,w
  5604  00DD  00B3               	movwf	Save_Write_word@data
  5605  00DE  318C  24C9  3180   	fcall	_Save_Write_word
  5606                           
  5607                           ;max31856.c: 208: Save_Write_word(temperature_value);
  5608  00E1  0020               	movlb	0	; select bank0
  5609  00E2  0864               	movf	_temperature_value+1,w
  5610  00E3  00B4               	movwf	Save_Write_word@data+1
  5611  00E4  0863               	movf	_temperature_value,w
  5612  00E5  00B3               	movwf	Save_Write_word@data
  5613  00E6  318C  24C9  3180   	fcall	_Save_Write_word
  5614                           
  5615                           ;max31856.c: 209: Cur_temperature_time_ch1 = 0;
  5616  00E9  0021               	movlb	1	; select bank1
  5617  00EA  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  5618  00EB                     l4700:	
  5619                           
  5620                           ;max31856.c: 210: }
  5621                           ;max31856.c: 211: }
  5622                           ;max31856.c: 212: CH1_temperature = temperature_value;
  5623  00EB  0020               	movlb	0	; select bank0
  5624  00EC  0864               	movf	_temperature_value+1,w
  5625  00ED  00E8               	movwf	_CH1_temperature+1
  5626  00EE  0863               	movf	_temperature_value,w
  5627  00EF  00E7               	movwf	_CH1_temperature
  5628                           
  5629                           ;max31856.c: 213: }
  5630  00F0  2979               	goto	l4748
  5631  00F1                     l4702:	
  5632                           
  5633                           ;max31856.c: 214: else if( time_count == 3 && Record_flag == 1)
  5634  00F1  3003               	movlw	3
  5635  00F2  066D               	xorwf	_time_count,w
  5636  00F3  1D03               	btfss	3,2
  5637  00F4  2979               	goto	l4748
  5638  00F5  036B               	decf	_Record_flag,w
  5639  00F6  1D03               	btfss	3,2
  5640  00F7  2979               	goto	l4748
  5641                           
  5642                           ;max31856.c: 215: {
  5643                           ;max31856.c: 216: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5644  00F8  3020               	movlw	32
  5645  00F9  0658               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5646  00FA  0457               	iorwf	tc_temperature_trans@temperature_temp,w
  5647  00FB  1903               	btfsc	3,2
  5648  00FC  28FF               	goto	u4180
  5649  00FD  3001               	movlw	1
  5650  00FE  2900               	goto	u4190
  5651  00FF                     u4180:	
  5652  00FF  3000               	movlw	0
  5653  0100                     u4190:	
  5654  0100  00CF               	movwf	??_tc_temperature_trans
  5655  0101  01D0               	clrf	??_tc_temperature_trans+1
  5656  0102  0869               	movf	_CH2_temperature,w
  5657  0103  054F               	andwf	??_tc_temperature_trans,w
  5658  0104  00D1               	movwf	??_tc_temperature_trans+2
  5659  0105  086A               	movf	_CH2_temperature+1,w
  5660  0106  0550               	andwf	??_tc_temperature_trans+1,w
  5661  0107  00D2               	movwf	??_tc_temperature_trans+3
  5662  0108  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5663  0109  2950               	goto	L5
  5664                           
  5665                           ;max31856.c: 228: else
  5666                           ;max31856.c: 229: {
  5667                           ;max31856.c: 230: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5668                           
  5669                           ;max31856.c: 227: }
  5670                           
  5671                           ;max31856.c: 226: Cur_temperature_time_ch2 = 0;
  5672                           
  5673                           ;max31856.c: 225: Save_Write_word(temperature_value);
  5674                           
  5675                           ;max31856.c: 224: Save_Write_word(var_time);
  5676                           
  5677                           ;max31856.c: 222: var_time |= 0x2000;
  5678                           
  5679                           ;max31856.c: 220: if(CH2_state == 1) var_time |= 0x800;
  5680                           
  5681                           ;max31856.c: 219: var_time |= 0x200;
  5682                           
  5683                           ;max31856.c: 217: {
  5684                           ;max31856.c: 218: var_time = Calculate_Time();
  5685  010A  1EEA               	btfss	_CH2_temperature+1,5
  5686  010B  2919               	goto	l4722
  5687  010C  0969               	comf	_CH2_temperature,w
  5688  010D  00CF               	movwf	??_tc_temperature_trans
  5689  010E  096A               	comf	_CH2_temperature+1,w
  5690  010F  00D0               	movwf	??_tc_temperature_trans+1
  5691  0110  0ACF               	incf	??_tc_temperature_trans,f
  5692  0111  1903               	skipnz
  5693  0112  0AD0               	incf	??_tc_temperature_trans+1,f
  5694  0113  084F               	movf	??_tc_temperature_trans,w
  5695  0114  3E00               	addlw	0
  5696  0115  00E9               	movwf	_CH2_temperature
  5697  0116  3040               	movlw	64
  5698  0117  3D50               	addwfc	??_tc_temperature_trans+1,w
  5699  0118  00EA               	movwf	_CH2_temperature+1
  5700  0119                     l4722:	
  5701                           
  5702                           ;max31856.c: 231: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5703  0119  1ED8               	btfss	tc_temperature_trans@temperature_temp+1,5
  5704  011A  2928               	goto	l4726
  5705  011B  0957               	comf	tc_temperature_trans@temperature_temp,w
  5706  011C  00CF               	movwf	??_tc_temperature_trans
  5707  011D  0958               	comf	tc_temperature_trans@temperature_temp+1,w
  5708  011E  00D0               	movwf	??_tc_temperature_trans+1
  5709  011F  0ACF               	incf	??_tc_temperature_trans,f
  5710  0120  1903               	skipnz
  5711  0121  0AD0               	incf	??_tc_temperature_trans+1,f
  5712  0122  084F               	movf	??_tc_temperature_trans,w
  5713  0123  3E00               	addlw	0
  5714  0124  00D7               	movwf	tc_temperature_trans@temperature_temp
  5715  0125  3040               	movlw	64
  5716  0126  3D50               	addwfc	??_tc_temperature_trans+1,w
  5717  0127  00D8               	movwf	tc_temperature_trans@temperature_temp+1
  5718  0128                     l4726:	
  5719                           
  5720                           ;max31856.c: 232: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  5721  0128  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5722  0129  026A               	subwf	_CH2_temperature+1,w
  5723  012A  1D03               	skipz
  5724  012B  292E               	goto	u4245
  5725  012C  0857               	movf	tc_temperature_trans@temperature_temp,w
  5726  012D  0269               	subwf	_CH2_temperature,w
  5727  012E                     u4245:	
  5728  012E  1803               	skipnc
  5729  012F  293C               	goto	l4730
  5730  0130  0969               	comf	_CH2_temperature,w
  5731  0131  00CF               	movwf	??_tc_temperature_trans
  5732  0132  096A               	comf	_CH2_temperature+1,w
  5733  0133  00D0               	movwf	??_tc_temperature_trans+1
  5734  0134  0ACF               	incf	??_tc_temperature_trans,f
  5735  0135  1903               	skipnz
  5736  0136  0AD0               	incf	??_tc_temperature_trans+1,f
  5737  0137  0857               	movf	tc_temperature_trans@temperature_temp,w
  5738  0138  074F               	addwf	??_tc_temperature_trans,w
  5739  0139  00D3               	movwf	tc_temperature_trans@temperature_absolute
  5740  013A  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5741  013B  2947               	goto	L3
  5742  013C                     l4730:	
  5743                           
  5744                           ;max31856.c: 233: else temperature_absolute = CH2_temperature - temperature_temp;
  5745  013C  0957               	comf	tc_temperature_trans@temperature_temp,w
  5746  013D  00CF               	movwf	??_tc_temperature_trans
  5747  013E  0958               	comf	tc_temperature_trans@temperature_temp+1,w
  5748  013F  00D0               	movwf	??_tc_temperature_trans+1
  5749  0140  0ACF               	incf	??_tc_temperature_trans,f
  5750  0141  1903               	skipnz
  5751  0142  0AD0               	incf	??_tc_temperature_trans+1,f
  5752  0143  0869               	movf	_CH2_temperature,w
  5753  0144  074F               	addwf	??_tc_temperature_trans,w
  5754  0145  00D3               	movwf	tc_temperature_trans@temperature_absolute
  5755  0146  086A               	movf	_CH2_temperature+1,w
  5756  0147                     L3:	
  5757  0147  3D50               	addwfc	??_tc_temperature_trans+1,w
  5758  0148  00D4               	movwf	tc_temperature_trans@temperature_absolute+1
  5759                           
  5760                           ;max31856.c: 234: if( temperature_absolute > 4)
  5761  0149  3000               	movlw	0
  5762  014A  0254               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5763  014B  3005               	movlw	5
  5764  014C  1903               	skipnz
  5765  014D  0253               	subwf	tc_temperature_trans@temperature_absolute,w
  5766  014E  1C03               	skipc
  5767  014F  2974               	goto	l4746
  5768  0150                     L5:	
  5769                           
  5770                           ;max31856.c: 235: {
  5771                           ;max31856.c: 236: var_time = Calculate_Time();
  5772  0150  3181  21F3  3180   	fcall	_Calculate_Time
  5773  0153  0020               	movlb	0	; select bank0
  5774  0154  00CF               	movwf	??_tc_temperature_trans
  5775  0155  01D0               	clrf	??_tc_temperature_trans+1
  5776  0156  084F               	movf	??_tc_temperature_trans,w
  5777  0157  00D5               	movwf	tc_temperature_trans@var_time
  5778  0158  0850               	movf	??_tc_temperature_trans+1,w
  5779  0159  00D6               	movwf	tc_temperature_trans@var_time+1
  5780                           
  5781                           ;max31856.c: 237: var_time |= 0x200;
  5782  015A  14D6               	bsf	tc_temperature_trans@var_time+1,1
  5783                           
  5784                           ;max31856.c: 238: if(CH2_state == 1) var_time |= 0x800;
  5785  015B  0021               	movlb	1	; select bank1
  5786  015C  0335               	decf	_CH2_state^(0+128),w
  5787  015D  1D03               	btfss	3,2
  5788  015E  2961               	goto	l527
  5789  015F  0020               	movlb	0	; select bank0
  5790  0160  15D6               	bsf	tc_temperature_trans@var_time+1,3
  5791  0161                     l527:	
  5792                           
  5793                           ;max31856.c: 240: var_time |= 0x2000;
  5794  0161  0020               	movlb	0	; select bank0
  5795  0162  16D6               	bsf	tc_temperature_trans@var_time+1,5
  5796                           
  5797                           ;max31856.c: 242: Save_Write_word(var_time);
  5798  0163  0856               	movf	tc_temperature_trans@var_time+1,w
  5799  0164  00B4               	movwf	Save_Write_word@data+1
  5800  0165  0855               	movf	tc_temperature_trans@var_time,w
  5801  0166  00B3               	movwf	Save_Write_word@data
  5802  0167  318C  24C9  3180   	fcall	_Save_Write_word
  5803                           
  5804                           ;max31856.c: 243: Save_Write_word(temperature_value);
  5805  016A  0020               	movlb	0	; select bank0
  5806  016B  0864               	movf	_temperature_value+1,w
  5807  016C  00B4               	movwf	Save_Write_word@data+1
  5808  016D  0863               	movf	_temperature_value,w
  5809  016E  00B3               	movwf	Save_Write_word@data
  5810  016F  318C  24C9  3180   	fcall	_Save_Write_word
  5811                           
  5812                           ;max31856.c: 244: Cur_temperature_time_ch2 = 0;
  5813  0172  0021               	movlb	1	; select bank1
  5814  0173  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  5815  0174                     l4746:	
  5816                           
  5817                           ;max31856.c: 245: }
  5818                           ;max31856.c: 246: }
  5819                           ;max31856.c: 247: CH2_temperature = temperature_value;
  5820  0174  0020               	movlb	0	; select bank0
  5821  0175  0864               	movf	_temperature_value+1,w
  5822  0176  00EA               	movwf	_CH2_temperature+1
  5823  0177  0863               	movf	_temperature_value,w
  5824  0178  00E9               	movwf	_CH2_temperature
  5825  0179                     l4748:	
  5826                           
  5827                           ;max31856.c: 248: }
  5828                           ;max31856.c: 250: temperature_temp = temperature_value;
  5829  0179  0864               	movf	_temperature_value+1,w
  5830  017A  00D8               	movwf	tc_temperature_trans@temperature_temp+1
  5831  017B  0863               	movf	_temperature_value,w
  5832  017C  00D7               	movwf	tc_temperature_trans@temperature_temp
  5833                           
  5834                           ;max31856.c: 251: if((uch_ltcbh&0x80)==0x80)
  5835  017D  1FFA               	btfss	_uch_ltcbh,7
  5836  017E  29C0               	goto	l4766
  5837                           
  5838                           ;max31856.c: 252: {
  5839                           ;max31856.c: 253: temperature_sign = 1;
  5840  017F  0021               	movlb	1	; select bank1
  5841  0180  01B9               	clrf	_temperature_sign^(0+128)
  5842  0181  0AB9               	incf	_temperature_sign^(0+128),f
  5843                           
  5844                           ;max31856.c: 254: temperature_temp=0x3FFF-temperature_temp + 1 ;
  5845  0182  0020               	movlb	0	; select bank0
  5846  0183  0957               	comf	tc_temperature_trans@temperature_temp,w
  5847  0184  00CF               	movwf	??_tc_temperature_trans
  5848  0185  0958               	comf	tc_temperature_trans@temperature_temp+1,w
  5849  0186  00D0               	movwf	??_tc_temperature_trans+1
  5850  0187  0ACF               	incf	??_tc_temperature_trans,f
  5851  0188  1903               	skipnz
  5852  0189  0AD0               	incf	??_tc_temperature_trans+1,f
  5853  018A  084F               	movf	??_tc_temperature_trans,w
  5854  018B  3E00               	addlw	0
  5855  018C  00D7               	movwf	tc_temperature_trans@temperature_temp
  5856  018D  3040               	movlw	64
  5857  018E  3D50               	addwfc	??_tc_temperature_trans+1,w
  5858  018F  00D8               	movwf	tc_temperature_trans@temperature_temp+1
  5859                           
  5860                           ;max31856.c: 256: temperature_int = temperature_temp>>3;
  5861  0190  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5862  0191  00D0               	movwf	??_tc_temperature_trans+1
  5863  0192  0857               	movf	tc_temperature_trans@temperature_temp,w
  5864  0193  00CF               	movwf	??_tc_temperature_trans
  5865  0194  36D0               	lsrf	??_tc_temperature_trans+1,f
  5866  0195  0CCF               	rrf	??_tc_temperature_trans,f
  5867  0196  36D0               	lsrf	??_tc_temperature_trans+1,f
  5868  0197  0CCF               	rrf	??_tc_temperature_trans,f
  5869  0198  36D0               	lsrf	??_tc_temperature_trans+1,f
  5870  0199  0CCF               	rrf	??_tc_temperature_trans,f
  5871  019A  084F               	movf	??_tc_temperature_trans,w
  5872  019B  0021               	movlb	1	; select bank1
  5873  019C  00B2               	movwf	_temperature_int^(0+128)
  5874  019D  0020               	movlb	0	; select bank0
  5875  019E  0850               	movf	??_tc_temperature_trans+1,w
  5876  019F  0021               	movlb	1	; select bank1
  5877  01A0  00B3               	movwf	(_temperature_int+1)^(0+128)
  5878                           
  5879                           ;max31856.c: 257: temperature_decimal = temperature_temp & 0x07;
  5880  01A1  0020               	movlb	0	; select bank0
  5881  01A2  0857               	movf	tc_temperature_trans@temperature_temp,w
  5882  01A3  3907               	andlw	7
  5883  01A4  00CF               	movwf	??_tc_temperature_trans
  5884  01A5  084F               	movf	??_tc_temperature_trans,w
  5885  01A6  00EC               	movwf	_temperature_decimal
  5886                           
  5887                           ;max31856.c: 258: if(temperature_decimal > 3) temperature_decimal++;
  5888  01A7  3004               	movlw	4
  5889  01A8  026C               	subwf	_temperature_decimal,w
  5890  01A9  1C03               	skipc
  5891  01AA  29AF               	goto	l529
  5892  01AB  3001               	movlw	1
  5893  01AC  00CF               	movwf	??_tc_temperature_trans
  5894  01AD  084F               	movf	??_tc_temperature_trans,w
  5895  01AE  07EC               	addwf	_temperature_decimal,f
  5896  01AF                     l529:	
  5897                           
  5898                           ;max31856.c: 259: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5899  01AF  3003               	movlw	3
  5900  01B0  066C               	xorwf	_temperature_decimal,w
  5901  01B1  1903               	btfsc	3,2
  5902  01B2  29B7               	goto	l532
  5903  01B3  3008               	movlw	8
  5904  01B4  066C               	xorwf	_temperature_decimal,w
  5905  01B5  1D03               	btfss	3,2
  5906  01B6  0008               	return
  5907  01B7                     l532:	
  5908  01B7  0021               	movlb	1	; select bank1
  5909  01B8  1C32               	btfss	_temperature_int^(0+128),0
  5910  01B9  0008               	return
  5911  01BA  3001               	movlw	1
  5912  01BB  0020               	movlb	0	; select bank0
  5913  01BC  00CF               	movwf	??_tc_temperature_trans
  5914  01BD  084F               	movf	??_tc_temperature_trans,w
  5915  01BE  07EC               	addwf	_temperature_decimal,f
  5916                           
  5917                           ;max31856.c: 260: }
  5918  01BF  0008               	return
  5919  01C0                     l4766:	
  5920                           
  5921                           ;max31856.c: 261: else
  5922                           ;max31856.c: 262: {
  5923                           ;max31856.c: 263: temperature_sign = 0;
  5924  01C0  0021               	movlb	1	; select bank1
  5925  01C1  01B9               	clrf	_temperature_sign^(0+128)
  5926                           
  5927                           ;max31856.c: 264: temperature_int = temperature_temp>>3;
  5928  01C2  0020               	movlb	0	; select bank0
  5929  01C3  0858               	movf	tc_temperature_trans@temperature_temp+1,w
  5930  01C4  00D0               	movwf	??_tc_temperature_trans+1
  5931  01C5  0857               	movf	tc_temperature_trans@temperature_temp,w
  5932  01C6  00CF               	movwf	??_tc_temperature_trans
  5933  01C7  36D0               	lsrf	??_tc_temperature_trans+1,f
  5934  01C8  0CCF               	rrf	??_tc_temperature_trans,f
  5935  01C9  36D0               	lsrf	??_tc_temperature_trans+1,f
  5936  01CA  0CCF               	rrf	??_tc_temperature_trans,f
  5937  01CB  36D0               	lsrf	??_tc_temperature_trans+1,f
  5938  01CC  0CCF               	rrf	??_tc_temperature_trans,f
  5939  01CD  084F               	movf	??_tc_temperature_trans,w
  5940  01CE  0021               	movlb	1	; select bank1
  5941  01CF  00B2               	movwf	_temperature_int^(0+128)
  5942  01D0  0020               	movlb	0	; select bank0
  5943  01D1  0850               	movf	??_tc_temperature_trans+1,w
  5944  01D2  0021               	movlb	1	; select bank1
  5945  01D3  00B3               	movwf	(_temperature_int+1)^(0+128)
  5946                           
  5947                           ;max31856.c: 265: temperature_decimal = temperature_temp & 0x07;
  5948  01D4  0020               	movlb	0	; select bank0
  5949  01D5  0857               	movf	tc_temperature_trans@temperature_temp,w
  5950  01D6  3907               	andlw	7
  5951  01D7  00CF               	movwf	??_tc_temperature_trans
  5952  01D8  084F               	movf	??_tc_temperature_trans,w
  5953  01D9  00EC               	movwf	_temperature_decimal
  5954                           
  5955                           ;max31856.c: 266: if(temperature_decimal > 3) temperature_decimal++;
  5956  01DA  3004               	movlw	4
  5957  01DB  026C               	subwf	_temperature_decimal,w
  5958  01DC  1C03               	skipc
  5959  01DD  29E2               	goto	l534
  5960  01DE  3001               	movlw	1
  5961  01DF  00CF               	movwf	??_tc_temperature_trans
  5962  01E0  084F               	movf	??_tc_temperature_trans,w
  5963  01E1  07EC               	addwf	_temperature_decimal,f
  5964  01E2                     l534:	
  5965                           
  5966                           ;max31856.c: 267: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5967  01E2  3004               	movlw	4
  5968  01E3  066C               	xorwf	_temperature_decimal,w
  5969  01E4  1903               	btfsc	3,2
  5970  01E5  29EA               	goto	l537
  5971  01E6  3008               	movlw	8
  5972  01E7  066C               	xorwf	_temperature_decimal,w
  5973  01E8  1D03               	btfss	3,2
  5974  01E9  0008               	return
  5975  01EA                     l537:	
  5976  01EA  0021               	movlb	1	; select bank1
  5977  01EB  1C32               	btfss	_temperature_int^(0+128),0
  5978  01EC  0008               	return
  5979  01ED  3001               	movlw	1
  5980  01EE  0020               	movlb	0	; select bank0
  5981  01EF  00CF               	movwf	??_tc_temperature_trans
  5982  01F0  084F               	movf	??_tc_temperature_trans,w
  5983  01F1  07EC               	addwf	_temperature_decimal,f
  5984  01F2  0008               	return
  5985  01F3                     __end_of_tc_temperature_trans:	
  5986                           
  5987                           	psect	text19
  5988  01F3                     __ptext19:	
  5989 ;; *************** function _Calculate_Time *****************
  5990 ;; Defined at:
  5991 ;;		line 135 in file "mcc_generated_files/save.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  temp2           4   43[BANK0 ] unsigned long 
  5996 ;;  temp1           4   39[BANK0 ] unsigned long 
  5997 ;;  temp            4   35[BANK0 ] unsigned long 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      unsigned char 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;Total ram usage:       22 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    8
  6014 ;; This function calls:
  6015 ;;		_Bq32k_Rtc_Read_Time
  6016 ;;		_Save_Write_time
  6017 ;;		_Write_Flash_finish
  6018 ;;		_Write_Flash_head
  6019 ;;		___wmul
  6020 ;; This function is called by:
  6021 ;;		_tc_temperature_trans
  6022 ;;		_Save_process
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _Calculate_Time
  6028  01F3                     _Calculate_Time:	
  6029                           
  6030                           ;save.c: 137: unsigned long temp = 0 ;
  6031                           
  6032                           ;incstack = 0
  6033                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6034  01F3  3000               	movlw	0
  6035  01F4  0020               	movlb	0	; select bank0
  6036  01F5  00C6               	movwf	Calculate_Time@temp+3
  6037  01F6  3000               	movlw	0
  6038  01F7  00C5               	movwf	Calculate_Time@temp+2
  6039  01F8  3000               	movlw	0
  6040  01F9  00C4               	movwf	Calculate_Time@temp+1
  6041  01FA  3000               	movlw	0
  6042  01FB  00C3               	movwf	Calculate_Time@temp
  6043                           
  6044                           ;save.c: 138: unsigned long temp1 = 0 ;
  6045  01FC  3000               	movlw	0
  6046  01FD  00CA               	movwf	Calculate_Time@temp1+3
  6047  01FE  3000               	movlw	0
  6048  01FF  00C9               	movwf	Calculate_Time@temp1+2
  6049  0200  3000               	movlw	0
  6050  0201  00C8               	movwf	Calculate_Time@temp1+1
  6051  0202  3000               	movlw	0
  6052  0203  00C7               	movwf	Calculate_Time@temp1
  6053                           
  6054                           ;save.c: 139: unsigned long temp2 = 0 ;
  6055  0204  3000               	movlw	0
  6056  0205  00CE               	movwf	Calculate_Time@temp2+3
  6057  0206  3000               	movlw	0
  6058  0207  00CD               	movwf	Calculate_Time@temp2+2
  6059  0208  3000               	movlw	0
  6060  0209  00CC               	movwf	Calculate_Time@temp2+1
  6061  020A  3000               	movlw	0
  6062  020B  00CB               	movwf	Calculate_Time@temp2
  6063                           
  6064                           ;save.c: 140: Bq32k_Rtc_Read_Time(&rtc_tm);
  6065  020C  30D8               	movlw	(low (_rtc_tm| 0))& (0+255)
  6066  020D  318F  279C  3181   	fcall	_Bq32k_Rtc_Read_Time
  6067                           
  6068                           ;save.c: 141: if( time_count == 1 )
  6069  0210  0020               	movlb	0	; select bank0
  6070  0211  036D               	decf	_time_count,w
  6071  0212  1D03               	btfss	3,2
  6072  0213  2AC8               	goto	l4544
  6073                           
  6074                           ;save.c: 142: {
  6075                           ;save.c: 143: if(rtc_tm.date != rtc_save_ch1.date)
  6076  0214  0021               	movlb	1	; select bank1
  6077  0215  085C               	movf	(_rtc_tm^(0+128)+4),w
  6078  0216  064E               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6079  0217  1D03               	btfss	3,2
  6080  0218  2AD1               	goto	l4548
  6081                           
  6082                           ;save.c: 155: else
  6083                           ;save.c: 156: {
  6084                           ;save.c: 157: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6085                           
  6086                           ;save.c: 154: }
  6087                           
  6088                           ;save.c: 153: time_count = 0;
  6089                           
  6090                           ;save.c: 150: Cur_temperature_time_ch2 = 0;
  6091                           
  6092                           ;save.c: 149: Cur_temperature_time_ch1 = 0;
  6093                           
  6094                           ;save.c: 148: Save_Write_time();
  6095                           
  6096                           ;save.c: 147: Write_Flash_head();
  6097                           
  6098                           ;save.c: 144: {
  6099                           ;save.c: 146: Write_Flash_finish();
  6100  0219  0021               	movlb	1	; select bank1
  6101  021A  0858               	movf	_rtc_tm^(0+128),w
  6102  021B  0020               	movlb	0	; select bank0
  6103  021C  00B9               	movwf	??_Calculate_Time
  6104  021D  01BA               	clrf	??_Calculate_Time+1
  6105  021E  0021               	movlb	1	; select bank1
  6106  021F  085A               	movf	(_rtc_tm^(0+128)+2),w
  6107  0220  0020               	movlb	0	; select bank0
  6108  0221  00BB               	movwf	??_Calculate_Time+2
  6109  0222  01BC               	clrf	??_Calculate_Time+3
  6110  0223  083B               	movf	??_Calculate_Time+2,w
  6111  0224  00F3               	movwf	___wmul@multiplier
  6112  0225  083C               	movf	??_Calculate_Time+3,w
  6113  0226  00F4               	movwf	___wmul@multiplier+1
  6114  0227  3010               	movlw	16
  6115  0228  00F5               	movwf	___wmul@multiplicand
  6116  0229  300E               	movlw	14
  6117  022A  00F6               	movwf	___wmul@multiplicand+1
  6118  022B  318A  2220  3181   	fcall	___wmul
  6119  022E  0873               	movf	?___wmul,w
  6120  022F  0020               	movlb	0	; select bank0
  6121  0230  00BD               	movwf	??_Calculate_Time+4
  6122  0231  0874               	movf	?___wmul+1,w
  6123  0232  00BE               	movwf	??_Calculate_Time+5
  6124  0233  0021               	movlb	1	; select bank1
  6125  0234  0859               	movf	(_rtc_tm^(0+128)+1),w
  6126  0235  0020               	movlb	0	; select bank0
  6127  0236  00BF               	movwf	??_Calculate_Time+6
  6128  0237  01C0               	clrf	??_Calculate_Time+7
  6129  0238  083F               	movf	??_Calculate_Time+6,w
  6130  0239  00F3               	movwf	___wmul@multiplier
  6131  023A  0840               	movf	??_Calculate_Time+7,w
  6132  023B  00F4               	movwf	___wmul@multiplier+1
  6133  023C  303C               	movlw	60
  6134  023D  00F5               	movwf	___wmul@multiplicand
  6135  023E  3000               	movlw	0
  6136  023F  00F6               	movwf	___wmul@multiplicand+1
  6137  0240  318A  2220  3181   	fcall	___wmul
  6138  0243  0873               	movf	?___wmul,w
  6139  0244  0020               	movlb	0	; select bank0
  6140  0245  073D               	addwf	??_Calculate_Time+4,w
  6141  0246  00C1               	movwf	??_Calculate_Time+8
  6142  0247  0874               	movf	?___wmul+1,w
  6143  0248  3D3E               	addwfc	??_Calculate_Time+5,w
  6144  0249  00C2               	movwf	??_Calculate_Time+9
  6145  024A  0839               	movf	??_Calculate_Time,w
  6146  024B  0741               	addwf	??_Calculate_Time+8,w
  6147  024C  00C7               	movwf	Calculate_Time@temp1
  6148  024D  083A               	movf	??_Calculate_Time+1,w
  6149  024E  3D42               	addwfc	??_Calculate_Time+9,w
  6150  024F  00C8               	movwf	Calculate_Time@temp1+1
  6151  0250  01C9               	clrf	Calculate_Time@temp1+2
  6152  0251  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6153  0252  03C9               	decf	Calculate_Time@temp1+2,f
  6154  0253  0849               	movf	Calculate_Time@temp1+2,w
  6155  0254  00CA               	movwf	Calculate_Time@temp1+3
  6156                           
  6157                           ;save.c: 158: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6158  0255  0021               	movlb	1	; select bank1
  6159  0256  084A               	movf	_rtc_save_ch1^(0+128),w
  6160  0257  0020               	movlb	0	; select bank0
  6161  0258  00B9               	movwf	??_Calculate_Time
  6162  0259  01BA               	clrf	??_Calculate_Time+1
  6163  025A  0021               	movlb	1	; select bank1
  6164  025B  084C               	movf	(_rtc_save_ch1^(0+128)+2),w
  6165  025C  0020               	movlb	0	; select bank0
  6166  025D  00BB               	movwf	??_Calculate_Time+2
  6167  025E  01BC               	clrf	??_Calculate_Time+3
  6168  025F  083B               	movf	??_Calculate_Time+2,w
  6169  0260  00F3               	movwf	___wmul@multiplier
  6170  0261  083C               	movf	??_Calculate_Time+3,w
  6171  0262  00F4               	movwf	___wmul@multiplier+1
  6172  0263  3010               	movlw	16
  6173  0264  00F5               	movwf	___wmul@multiplicand
  6174  0265  300E               	movlw	14
  6175  0266  00F6               	movwf	___wmul@multiplicand+1
  6176  0267  318A  2220  3181   	fcall	___wmul
  6177  026A  0873               	movf	?___wmul,w
  6178  026B  0020               	movlb	0	; select bank0
  6179  026C  00BD               	movwf	??_Calculate_Time+4
  6180  026D  0874               	movf	?___wmul+1,w
  6181  026E  00BE               	movwf	??_Calculate_Time+5
  6182  026F  0021               	movlb	1	; select bank1
  6183  0270  084B               	movf	(_rtc_save_ch1^(0+128)+1),w
  6184  0271  0020               	movlb	0	; select bank0
  6185  0272  00BF               	movwf	??_Calculate_Time+6
  6186  0273  01C0               	clrf	??_Calculate_Time+7
  6187  0274  083F               	movf	??_Calculate_Time+6,w
  6188  0275  00F3               	movwf	___wmul@multiplier
  6189  0276  0840               	movf	??_Calculate_Time+7,w
  6190  0277  00F4               	movwf	___wmul@multiplier+1
  6191  0278  303C               	movlw	60
  6192  0279  00F5               	movwf	___wmul@multiplicand
  6193  027A  3000               	movlw	0
  6194  027B  00F6               	movwf	___wmul@multiplicand+1
  6195  027C  318A  2220  3181   	fcall	___wmul
  6196  027F  0873               	movf	?___wmul,w
  6197  0280  0020               	movlb	0	; select bank0
  6198  0281  073D               	addwf	??_Calculate_Time+4,w
  6199  0282  00C1               	movwf	??_Calculate_Time+8
  6200  0283  0874               	movf	?___wmul+1,w
  6201  0284  3D3E               	addwfc	??_Calculate_Time+5,w
  6202  0285  00C2               	movwf	??_Calculate_Time+9
  6203  0286  0839               	movf	??_Calculate_Time,w
  6204  0287  0741               	addwf	??_Calculate_Time+8,w
  6205  0288  00CB               	movwf	Calculate_Time@temp2
  6206  0289  083A               	movf	??_Calculate_Time+1,w
  6207  028A  3D42               	addwfc	??_Calculate_Time+9,w
  6208  028B  00CC               	movwf	Calculate_Time@temp2+1
  6209  028C  01CD               	clrf	Calculate_Time@temp2+2
  6210  028D  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6211  028E  03CD               	decf	Calculate_Time@temp2+2,f
  6212  028F  084D               	movf	Calculate_Time@temp2+2,w
  6213  0290  00CE               	movwf	Calculate_Time@temp2+3
  6214                           
  6215                           ;save.c: 159: temp = temp1 - temp2;
  6216  0291  0847               	movf	Calculate_Time@temp1,w
  6217  0292  00B9               	movwf	??_Calculate_Time
  6218  0293  0848               	movf	Calculate_Time@temp1+1,w
  6219  0294  00BA               	movwf	??_Calculate_Time+1
  6220  0295  0849               	movf	Calculate_Time@temp1+2,w
  6221  0296  00BB               	movwf	??_Calculate_Time+2
  6222  0297  084A               	movf	Calculate_Time@temp1+3,w
  6223  0298  00BC               	movwf	??_Calculate_Time+3
  6224  0299  094B               	comf	Calculate_Time@temp2,w
  6225  029A  00BD               	movwf	??_Calculate_Time+4
  6226  029B  094C               	comf	Calculate_Time@temp2+1,w
  6227  029C  00BE               	movwf	??_Calculate_Time+5
  6228  029D  094D               	comf	Calculate_Time@temp2+2,w
  6229  029E  00BF               	movwf	??_Calculate_Time+6
  6230  029F  094E               	comf	Calculate_Time@temp2+3,w
  6231  02A0  00C0               	movwf	??_Calculate_Time+7
  6232  02A1  0ABD               	incf	??_Calculate_Time+4,f
  6233  02A2  1903               	skipnz
  6234  02A3  0ABE               	incf	??_Calculate_Time+5,f
  6235  02A4  1903               	skipnz
  6236  02A5  0ABF               	incf	??_Calculate_Time+6,f
  6237  02A6  1903               	skipnz
  6238  02A7  0AC0               	incf	??_Calculate_Time+7,f
  6239  02A8  083D               	movf	??_Calculate_Time+4,w
  6240  02A9  07B9               	addwf	??_Calculate_Time,f
  6241  02AA  083E               	movf	??_Calculate_Time+5,w
  6242  02AB  3DBA               	addwfc	??_Calculate_Time+1,f
  6243  02AC  083F               	movf	??_Calculate_Time+6,w
  6244  02AD  3DBB               	addwfc	??_Calculate_Time+2,f
  6245  02AE  0840               	movf	??_Calculate_Time+7,w
  6246  02AF  3DBC               	addwfc	??_Calculate_Time+3,f
  6247  02B0  083C               	movf	??_Calculate_Time+3,w
  6248  02B1  00C6               	movwf	Calculate_Time@temp+3
  6249  02B2  083B               	movf	??_Calculate_Time+2,w
  6250  02B3  00C5               	movwf	Calculate_Time@temp+2
  6251  02B4  083A               	movf	??_Calculate_Time+1,w
  6252  02B5  00C4               	movwf	Calculate_Time@temp+1
  6253  02B6  0839               	movf	??_Calculate_Time,w
  6254  02B7  00C3               	movwf	Calculate_Time@temp
  6255                           
  6256                           ;save.c: 160: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6257  02B8  30CA               	movlw	low (_rtc_save_ch1| 0)
  6258  02B9  0086               	movwf	6
  6259  02BA  0187               	clrf	7
  6260  02BB  30D8               	movlw	low (_rtc_tm| 0)
  6261  02BC  0084               	movwf	4
  6262  02BD  0185               	clrf	5
  6263  02BE  3007               	movlw	7
  6264  02BF  0020               	movlb	0	; select bank0
  6265  02C0  00B9               	movwf	??_Calculate_Time
  6266  02C1                     u386m0:	
  6267  02C1  0012               	moviw fsr0++
  6268  02C2  001E               	movwi fsr1++
  6269  02C3  0BB9               	decfsz	??_Calculate_Time,f
  6270  02C4  2AC1               	goto	u386m0
  6271                           
  6272                           ;save.c: 161: return temp;
  6273  02C5  0020               	movlb	0	; select bank0
  6274  02C6  0843               	movf	Calculate_Time@temp,w
  6275  02C7  0008               	return
  6276  02C8                     l4544:	
  6277                           ;save.c: 162: }
  6278                           ;save.c: 163: }
  6279                           
  6280                           
  6281                           ;save.c: 164: else if( time_count == 3 )
  6282  02C8  3003               	movlw	3
  6283  02C9  066D               	xorwf	_time_count,w
  6284  02CA  1D03               	btfss	3,2
  6285  02CB  2B8F               	goto	l4568
  6286                           
  6287                           ;save.c: 165: {
  6288                           ;save.c: 166: if(rtc_tm.date != rtc_save_ch2.date)
  6289  02CC  0021               	movlb	1	; select bank1
  6290  02CD  085C               	movf	(_rtc_tm^(0+128)+4),w
  6291  02CE  0655               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6292  02CF  1903               	skipnz
  6293  02D0  2AE0               	goto	l4558
  6294  02D1                     l4548:	
  6295                           
  6296                           ;save.c: 167: {
  6297                           ;save.c: 169: Write_Flash_finish();
  6298  02D1  318B  236B  3181   	fcall	_Write_Flash_finish
  6299                           
  6300                           ;save.c: 170: Write_Flash_head();
  6301  02D4  318B  239A  3181   	fcall	_Write_Flash_head
  6302                           
  6303                           ;save.c: 171: Save_Write_time();
  6304  02D7  3186  26BB  3181   	fcall	_Save_Write_time
  6305                           
  6306                           ;save.c: 172: Cur_temperature_time_ch1 = 0;
  6307  02DA  0021               	movlb	1	; select bank1
  6308  02DB  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  6309                           
  6310                           ;save.c: 173: Cur_temperature_time_ch2 = 0;
  6311  02DC  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6312                           
  6313                           ;save.c: 176: time_count = 0;
  6314  02DD  0020               	movlb	0	; select bank0
  6315  02DE  01ED               	clrf	_time_count
  6316                           
  6317                           ;save.c: 177: }
  6318  02DF  2B8F               	goto	l4568
  6319  02E0                     l4558:	
  6320                           
  6321                           ;save.c: 178: else
  6322                           ;save.c: 179: {
  6323                           ;save.c: 180: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6324  02E0  0021               	movlb	1	; select bank1
  6325  02E1  0858               	movf	_rtc_tm^(0+128),w
  6326  02E2  0020               	movlb	0	; select bank0
  6327  02E3  00B9               	movwf	??_Calculate_Time
  6328  02E4  01BA               	clrf	??_Calculate_Time+1
  6329  02E5  0021               	movlb	1	; select bank1
  6330  02E6  085A               	movf	(_rtc_tm^(0+128)+2),w
  6331  02E7  0020               	movlb	0	; select bank0
  6332  02E8  00BB               	movwf	??_Calculate_Time+2
  6333  02E9  01BC               	clrf	??_Calculate_Time+3
  6334  02EA  083B               	movf	??_Calculate_Time+2,w
  6335  02EB  00F3               	movwf	___wmul@multiplier
  6336  02EC  083C               	movf	??_Calculate_Time+3,w
  6337  02ED  00F4               	movwf	___wmul@multiplier+1
  6338  02EE  3010               	movlw	16
  6339  02EF  00F5               	movwf	___wmul@multiplicand
  6340  02F0  300E               	movlw	14
  6341  02F1  00F6               	movwf	___wmul@multiplicand+1
  6342  02F2  318A  2220  3181   	fcall	___wmul
  6343  02F5  0873               	movf	?___wmul,w
  6344  02F6  0020               	movlb	0	; select bank0
  6345  02F7  00BD               	movwf	??_Calculate_Time+4
  6346  02F8  0874               	movf	?___wmul+1,w
  6347  02F9  00BE               	movwf	??_Calculate_Time+5
  6348  02FA  0021               	movlb	1	; select bank1
  6349  02FB  0859               	movf	(_rtc_tm^(0+128)+1),w
  6350  02FC  0020               	movlb	0	; select bank0
  6351  02FD  00BF               	movwf	??_Calculate_Time+6
  6352  02FE  01C0               	clrf	??_Calculate_Time+7
  6353  02FF  083F               	movf	??_Calculate_Time+6,w
  6354  0300  00F3               	movwf	___wmul@multiplier
  6355  0301  0840               	movf	??_Calculate_Time+7,w
  6356  0302  00F4               	movwf	___wmul@multiplier+1
  6357  0303  303C               	movlw	60
  6358  0304  00F5               	movwf	___wmul@multiplicand
  6359  0305  3000               	movlw	0
  6360  0306  00F6               	movwf	___wmul@multiplicand+1
  6361  0307  318A  2220  3181   	fcall	___wmul
  6362  030A  0873               	movf	?___wmul,w
  6363  030B  0020               	movlb	0	; select bank0
  6364  030C  073D               	addwf	??_Calculate_Time+4,w
  6365  030D  00C1               	movwf	??_Calculate_Time+8
  6366  030E  0874               	movf	?___wmul+1,w
  6367  030F  3D3E               	addwfc	??_Calculate_Time+5,w
  6368  0310  00C2               	movwf	??_Calculate_Time+9
  6369  0311  0839               	movf	??_Calculate_Time,w
  6370  0312  0741               	addwf	??_Calculate_Time+8,w
  6371  0313  00C7               	movwf	Calculate_Time@temp1
  6372  0314  083A               	movf	??_Calculate_Time+1,w
  6373  0315  3D42               	addwfc	??_Calculate_Time+9,w
  6374  0316  00C8               	movwf	Calculate_Time@temp1+1
  6375  0317  01C9               	clrf	Calculate_Time@temp1+2
  6376  0318  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6377  0319  03C9               	decf	Calculate_Time@temp1+2,f
  6378  031A  0849               	movf	Calculate_Time@temp1+2,w
  6379  031B  00CA               	movwf	Calculate_Time@temp1+3
  6380                           
  6381                           ;save.c: 181: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6382  031C  0021               	movlb	1	; select bank1
  6383  031D  0851               	movf	_rtc_save_ch2^(0+128),w
  6384  031E  0020               	movlb	0	; select bank0
  6385  031F  00B9               	movwf	??_Calculate_Time
  6386  0320  01BA               	clrf	??_Calculate_Time+1
  6387  0321  0021               	movlb	1	; select bank1
  6388  0322  0853               	movf	(_rtc_save_ch2^(0+128)+2),w
  6389  0323  0020               	movlb	0	; select bank0
  6390  0324  00BB               	movwf	??_Calculate_Time+2
  6391  0325  01BC               	clrf	??_Calculate_Time+3
  6392  0326  083B               	movf	??_Calculate_Time+2,w
  6393  0327  00F3               	movwf	___wmul@multiplier
  6394  0328  083C               	movf	??_Calculate_Time+3,w
  6395  0329  00F4               	movwf	___wmul@multiplier+1
  6396  032A  3010               	movlw	16
  6397  032B  00F5               	movwf	___wmul@multiplicand
  6398  032C  300E               	movlw	14
  6399  032D  00F6               	movwf	___wmul@multiplicand+1
  6400  032E  318A  2220  3181   	fcall	___wmul
  6401  0331  0873               	movf	?___wmul,w
  6402  0332  0020               	movlb	0	; select bank0
  6403  0333  00BD               	movwf	??_Calculate_Time+4
  6404  0334  0874               	movf	?___wmul+1,w
  6405  0335  00BE               	movwf	??_Calculate_Time+5
  6406  0336  0021               	movlb	1	; select bank1
  6407  0337  0852               	movf	(_rtc_save_ch2^(0+128)+1),w
  6408  0338  0020               	movlb	0	; select bank0
  6409  0339  00BF               	movwf	??_Calculate_Time+6
  6410  033A  01C0               	clrf	??_Calculate_Time+7
  6411  033B  083F               	movf	??_Calculate_Time+6,w
  6412  033C  00F3               	movwf	___wmul@multiplier
  6413  033D  0840               	movf	??_Calculate_Time+7,w
  6414  033E  00F4               	movwf	___wmul@multiplier+1
  6415  033F  303C               	movlw	60
  6416  0340  00F5               	movwf	___wmul@multiplicand
  6417  0341  3000               	movlw	0
  6418  0342  00F6               	movwf	___wmul@multiplicand+1
  6419  0343  318A  2220  3181   	fcall	___wmul
  6420  0346  0873               	movf	?___wmul,w
  6421  0347  0020               	movlb	0	; select bank0
  6422  0348  073D               	addwf	??_Calculate_Time+4,w
  6423  0349  00C1               	movwf	??_Calculate_Time+8
  6424  034A  0874               	movf	?___wmul+1,w
  6425  034B  3D3E               	addwfc	??_Calculate_Time+5,w
  6426  034C  00C2               	movwf	??_Calculate_Time+9
  6427  034D  0839               	movf	??_Calculate_Time,w
  6428  034E  0741               	addwf	??_Calculate_Time+8,w
  6429  034F  00CB               	movwf	Calculate_Time@temp2
  6430  0350  083A               	movf	??_Calculate_Time+1,w
  6431  0351  3D42               	addwfc	??_Calculate_Time+9,w
  6432  0352  00CC               	movwf	Calculate_Time@temp2+1
  6433  0353  01CD               	clrf	Calculate_Time@temp2+2
  6434  0354  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6435  0355  03CD               	decf	Calculate_Time@temp2+2,f
  6436  0356  084D               	movf	Calculate_Time@temp2+2,w
  6437  0357  00CE               	movwf	Calculate_Time@temp2+3
  6438                           
  6439                           ;save.c: 182: temp = temp1 - temp2;
  6440  0358  0847               	movf	Calculate_Time@temp1,w
  6441  0359  00B9               	movwf	??_Calculate_Time
  6442  035A  0848               	movf	Calculate_Time@temp1+1,w
  6443  035B  00BA               	movwf	??_Calculate_Time+1
  6444  035C  0849               	movf	Calculate_Time@temp1+2,w
  6445  035D  00BB               	movwf	??_Calculate_Time+2
  6446  035E  084A               	movf	Calculate_Time@temp1+3,w
  6447  035F  00BC               	movwf	??_Calculate_Time+3
  6448  0360  094B               	comf	Calculate_Time@temp2,w
  6449  0361  00BD               	movwf	??_Calculate_Time+4
  6450  0362  094C               	comf	Calculate_Time@temp2+1,w
  6451  0363  00BE               	movwf	??_Calculate_Time+5
  6452  0364  094D               	comf	Calculate_Time@temp2+2,w
  6453  0365  00BF               	movwf	??_Calculate_Time+6
  6454  0366  094E               	comf	Calculate_Time@temp2+3,w
  6455  0367  00C0               	movwf	??_Calculate_Time+7
  6456  0368  0ABD               	incf	??_Calculate_Time+4,f
  6457  0369  1903               	skipnz
  6458  036A  0ABE               	incf	??_Calculate_Time+5,f
  6459  036B  1903               	skipnz
  6460  036C  0ABF               	incf	??_Calculate_Time+6,f
  6461  036D  1903               	skipnz
  6462  036E  0AC0               	incf	??_Calculate_Time+7,f
  6463  036F  083D               	movf	??_Calculate_Time+4,w
  6464  0370  07B9               	addwf	??_Calculate_Time,f
  6465  0371  083E               	movf	??_Calculate_Time+5,w
  6466  0372  3DBA               	addwfc	??_Calculate_Time+1,f
  6467  0373  083F               	movf	??_Calculate_Time+6,w
  6468  0374  3DBB               	addwfc	??_Calculate_Time+2,f
  6469  0375  0840               	movf	??_Calculate_Time+7,w
  6470  0376  3DBC               	addwfc	??_Calculate_Time+3,f
  6471  0377  083C               	movf	??_Calculate_Time+3,w
  6472  0378  00C6               	movwf	Calculate_Time@temp+3
  6473  0379  083B               	movf	??_Calculate_Time+2,w
  6474  037A  00C5               	movwf	Calculate_Time@temp+2
  6475  037B  083A               	movf	??_Calculate_Time+1,w
  6476  037C  00C4               	movwf	Calculate_Time@temp+1
  6477  037D  0839               	movf	??_Calculate_Time,w
  6478  037E  00C3               	movwf	Calculate_Time@temp
  6479                           
  6480                           ;save.c: 183: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6481  037F  30D1               	movlw	low (_rtc_save_ch2| 0)
  6482  0380  0086               	movwf	6
  6483  0381  0187               	clrf	7
  6484  0382  30D8               	movlw	low (_rtc_tm| 0)
  6485  0383  0084               	movwf	4
  6486  0384  0185               	clrf	5
  6487  0385  3007               	movlw	7
  6488  0386  0020               	movlb	0	; select bank0
  6489  0387  00B9               	movwf	??_Calculate_Time
  6490  0388                     u389m0:	
  6491  0388  0012               	moviw fsr0++
  6492  0389  001E               	movwi fsr1++
  6493  038A  0BB9               	decfsz	??_Calculate_Time,f
  6494  038B  2B88               	goto	u389m0
  6495                           
  6496                           ;save.c: 184: return temp;
  6497  038C  0020               	movlb	0	; select bank0
  6498  038D  0843               	movf	Calculate_Time@temp,w
  6499  038E  0008               	return
  6500  038F                     l4568:	
  6501                           
  6502                           ;save.c: 185: }
  6503                           ;save.c: 186: }
  6504                           ;save.c: 187: return 0;
  6505  038F  3000               	movlw	0
  6506  0390  0008               	return
  6507  0391                     __end_of_Calculate_Time:	
  6508                           
  6509                           	psect	text20
  6510  0A20                     __ptext20:	
  6511 ;; *************** function ___wmul *****************
  6512 ;; Defined at:
  6513 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  multiplier      2    3[COMMON] unsigned int 
  6516 ;;  multiplicand    2    5[COMMON] unsigned int 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  product         2    0[BANK0 ] unsigned int 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  2    3[COMMON] unsigned int 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;Total ram usage:        6 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    3
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_Calculate_Time
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           
  6543                           ;psect for function ___wmul
  6544  0A20                     ___wmul:	
  6545                           
  6546                           ;incstack = 0
  6547                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6548  0A20  0020               	movlb	0	; select bank0
  6549  0A21  01A0               	clrf	___wmul@product
  6550  0A22  01A1               	clrf	___wmul@product+1
  6551  0A23                     l4450:	
  6552  0A23  1C73               	btfss	___wmul@multiplier,0
  6553  0A24  2A2A               	goto	l1024
  6554  0A25  0875               	movf	___wmul@multiplicand,w
  6555  0A26  0020               	movlb	0	; select bank0
  6556  0A27  07A0               	addwf	___wmul@product,f
  6557  0A28  0876               	movf	___wmul@multiplicand+1,w
  6558  0A29  3DA1               	addwfc	___wmul@product+1,f
  6559  0A2A                     l1024:	
  6560  0A2A  3001               	movlw	1
  6561  0A2B                     u3745:	
  6562  0A2B  35F5               	lslf	___wmul@multiplicand,f
  6563  0A2C  0DF6               	rlf	___wmul@multiplicand+1,f
  6564  0A2D  0B89               	decfsz	9,f
  6565  0A2E  2A2B               	goto	u3745
  6566  0A2F  3001               	movlw	1
  6567  0A30                     u3755:	
  6568  0A30  36F4               	lsrf	___wmul@multiplier+1,f
  6569  0A31  0CF3               	rrf	___wmul@multiplier,f
  6570  0A32  0B89               	decfsz	9,f
  6571  0A33  2A30               	goto	u3755
  6572  0A34  0873               	movf	___wmul@multiplier,w
  6573  0A35  0474               	iorwf	___wmul@multiplier+1,w
  6574  0A36  1D03               	btfss	3,2
  6575  0A37  2A23               	goto	l4450
  6576  0A38  0020               	movlb	0	; select bank0
  6577  0A39  0821               	movf	___wmul@product+1,w
  6578  0A3A  00F4               	movwf	?___wmul+1
  6579  0A3B  0820               	movf	___wmul@product,w
  6580  0A3C  00F3               	movwf	?___wmul
  6581  0A3D  0008               	return
  6582  0A3E                     __end_of___wmul:	
  6583                           
  6584                           	psect	text21
  6585  0B9A                     __ptext21:	
  6586 ;; *************** function _Write_Flash_head *****************
  6587 ;; Defined at:
  6588 ;;		line 64 in file "mcc_generated_files/save.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;Total ram usage:        1 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    6
  6609 ;; This function calls:
  6610 ;;		_FLASH_WriteWord
  6611 ;; This function is called by:
  6612 ;;		_Key_Process
  6613 ;;		_Calculate_Time
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           
  6618                           ;psect for function _Write_Flash_head
  6619  0B9A                     _Write_Flash_head:	
  6620                           
  6621                           ;save.c: 66: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6622                           
  6623                           ;incstack = 0
  6624                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6625  0B9A  0021               	movlb	1	; select bank1
  6626  0B9B  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6627  0B9C  0020               	movlb	0	; select bank0
  6628  0B9D  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6629  0B9E  0021               	movlb	1	; select bank1
  6630  0B9F  082E               	movf	_Cur_Save_Index^(0+128),w
  6631  0BA0  0020               	movlb	0	; select bank0
  6632  0BA1  00AA               	movwf	FLASH_WriteWord@flashAddr
  6633  0BA2  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6634  0BA3  00F7               	movwf	??_Write_Flash_head
  6635  0BA4  0877               	movf	??_Write_Flash_head,w
  6636  0BA5  00AC               	movwf	FLASH_WriteWord@ramBuf
  6637  0BA6  30AA               	movlw	170
  6638  0BA7  00AD               	movwf	FLASH_WriteWord@word
  6639  0BA8  30AA               	movlw	170
  6640  0BA9  00AE               	movwf	FLASH_WriteWord@word+1
  6641  0BAA  318D  2577  318B   	fcall	_FLASH_WriteWord
  6642                           
  6643                           ;save.c: 67: Cur_Save_Index++;
  6644  0BAD  3001               	movlw	1
  6645  0BAE  0021               	movlb	1	; select bank1
  6646  0BAF  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6647  0BB0  3000               	movlw	0
  6648  0BB1  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6649                           
  6650                           ;save.c: 68: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6651  0BB2  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6652  0BB3  0020               	movlb	0	; select bank0
  6653  0BB4  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6654  0BB5  0021               	movlb	1	; select bank1
  6655  0BB6  082E               	movf	_Cur_Save_Index^(0+128),w
  6656  0BB7  0020               	movlb	0	; select bank0
  6657  0BB8  00AA               	movwf	FLASH_WriteWord@flashAddr
  6658  0BB9  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6659  0BBA  00F7               	movwf	??_Write_Flash_head
  6660  0BBB  0877               	movf	??_Write_Flash_head,w
  6661  0BBC  00AC               	movwf	FLASH_WriteWord@ramBuf
  6662  0BBD  30AA               	movlw	170
  6663  0BBE  00AD               	movwf	FLASH_WriteWord@word
  6664  0BBF  30AA               	movlw	170
  6665  0BC0  00AE               	movwf	FLASH_WriteWord@word+1
  6666  0BC1  318D  2577         	fcall	_FLASH_WriteWord
  6667                           
  6668                           ;save.c: 69: Cur_Save_Index++;
  6669  0BC3  3001               	movlw	1
  6670  0BC4  0021               	movlb	1	; select bank1
  6671  0BC5  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6672  0BC6  3000               	movlw	0
  6673  0BC7  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6674  0BC8  0008               	return
  6675  0BC9                     __end_of_Write_Flash_head:	
  6676                           
  6677                           	psect	text22
  6678  0B6B                     __ptext22:	
  6679 ;; *************** function _Write_Flash_finish *****************
  6680 ;; Defined at:
  6681 ;;		line 78 in file "mcc_generated_files/save.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;Total ram usage:        1 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    6
  6702 ;; This function calls:
  6703 ;;		_FLASH_WriteWord
  6704 ;; This function is called by:
  6705 ;;		_Key_Process
  6706 ;;		_Serach_Flash_Head
  6707 ;;		_Calculate_Time
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           
  6712                           ;psect for function _Write_Flash_finish
  6713  0B6B                     _Write_Flash_finish:	
  6714                           
  6715                           ;save.c: 80: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6719  0B6B  0021               	movlb	1	; select bank1
  6720  0B6C  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6721  0B6D  0020               	movlb	0	; select bank0
  6722  0B6E  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6723  0B6F  0021               	movlb	1	; select bank1
  6724  0B70  082E               	movf	_Cur_Save_Index^(0+128),w
  6725  0B71  0020               	movlb	0	; select bank0
  6726  0B72  00AA               	movwf	FLASH_WriteWord@flashAddr
  6727  0B73  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6728  0B74  00F7               	movwf	??_Write_Flash_finish
  6729  0B75  0877               	movf	??_Write_Flash_finish,w
  6730  0B76  00AC               	movwf	FLASH_WriteWord@ramBuf
  6731  0B77  3055               	movlw	85
  6732  0B78  00AD               	movwf	FLASH_WriteWord@word
  6733  0B79  3055               	movlw	85
  6734  0B7A  00AE               	movwf	FLASH_WriteWord@word+1
  6735  0B7B  318D  2577  318B   	fcall	_FLASH_WriteWord
  6736                           
  6737                           ;save.c: 81: Cur_Save_Index++;
  6738  0B7E  3001               	movlw	1
  6739  0B7F  0021               	movlb	1	; select bank1
  6740  0B80  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6741  0B81  3000               	movlw	0
  6742  0B82  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6743                           
  6744                           ;save.c: 82: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6745  0B83  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6746  0B84  0020               	movlb	0	; select bank0
  6747  0B85  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6748  0B86  0021               	movlb	1	; select bank1
  6749  0B87  082E               	movf	_Cur_Save_Index^(0+128),w
  6750  0B88  0020               	movlb	0	; select bank0
  6751  0B89  00AA               	movwf	FLASH_WriteWord@flashAddr
  6752  0B8A  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6753  0B8B  00F7               	movwf	??_Write_Flash_finish
  6754  0B8C  0877               	movf	??_Write_Flash_finish,w
  6755  0B8D  00AC               	movwf	FLASH_WriteWord@ramBuf
  6756  0B8E  3055               	movlw	85
  6757  0B8F  00AD               	movwf	FLASH_WriteWord@word
  6758  0B90  3055               	movlw	85
  6759  0B91  00AE               	movwf	FLASH_WriteWord@word+1
  6760  0B92  318D  2577         	fcall	_FLASH_WriteWord
  6761                           
  6762                           ;save.c: 83: Cur_Save_Index++;
  6763  0B94  3001               	movlw	1
  6764  0B95  0021               	movlb	1	; select bank1
  6765  0B96  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6766  0B97  3000               	movlw	0
  6767  0B98  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6768  0B99  0008               	return
  6769  0B9A                     __end_of_Write_Flash_finish:	
  6770                           
  6771                           	psect	text23
  6772  06BB                     __ptext23:	
  6773 ;; *************** function _Save_Write_time *****************
  6774 ;; Defined at:
  6775 ;;		line 211 in file "mcc_generated_files/save.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  i               1    0        unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    7
  6796 ;; This function calls:
  6797 ;;		_Bq32k_Rtc_Read_Time
  6798 ;;		_Save_Write_word
  6799 ;; This function is called by:
  6800 ;;		_Key_Process
  6801 ;;		_Calculate_Time
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           
  6806                           ;psect for function _Save_Write_time
  6807  06BB                     _Save_Write_time:	
  6808                           
  6809                           ;save.c: 213: unsigned char i;
  6810                           ;save.c: 214: Bq32k_Rtc_Read_Time(&rtc_tm);
  6811                           
  6812                           ;incstack = 0
  6813                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6814  06BB  30D8               	movlw	(low (_rtc_tm| 0))& (0+255)
  6815  06BC  318F  279C  3186   	fcall	_Bq32k_Rtc_Read_Time
  6816                           
  6817                           ;save.c: 215: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6818  06BF  30CA               	movlw	low (_rtc_save_ch1| 0)
  6819  06C0  0086               	movwf	6
  6820  06C1  0187               	clrf	7
  6821  06C2  30D8               	movlw	low (_rtc_tm| 0)
  6822  06C3  0084               	movwf	4
  6823  06C4  0185               	clrf	5
  6824  06C5  3007               	movlw	7
  6825  06C6  0020               	movlb	0	; select bank0
  6826  06C7  00B7               	movwf	??_Save_Write_time
  6827  06C8                     u371m0:	
  6828  06C8  0012               	moviw fsr0++
  6829  06C9  001E               	movwi fsr1++
  6830  06CA  0BB7               	decfsz	??_Save_Write_time,f
  6831  06CB  2EC8               	goto	u371m0
  6832                           
  6833                           ;save.c: 216: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6834  06CC  30D1               	movlw	low (_rtc_save_ch2| 0)
  6835  06CD  0086               	movwf	6
  6836  06CE  0187               	clrf	7
  6837  06CF  30D8               	movlw	low (_rtc_tm| 0)
  6838  06D0  0084               	movwf	4
  6839  06D1  0185               	clrf	5
  6840  06D2  3007               	movlw	7
  6841  06D3  0020               	movlb	0	; select bank0
  6842  06D4  00B7               	movwf	??_Save_Write_time
  6843  06D5                     u372m0:	
  6844  06D5  0012               	moviw fsr0++
  6845  06D6  001E               	movwi fsr1++
  6846  06D7  0BB7               	decfsz	??_Save_Write_time,f
  6847  06D8  2ED5               	goto	u372m0
  6848                           
  6849                           ;save.c: 217: Save_Write_word( rtc_tm.years);
  6850  06D9  0021               	movlb	1	; select bank1
  6851  06DA  085E               	movf	(_rtc_tm^(0+128)+6),w
  6852  06DB  0020               	movlb	0	; select bank0
  6853  06DC  00B7               	movwf	??_Save_Write_time
  6854  06DD  01B8               	clrf	??_Save_Write_time+1
  6855  06DE  0837               	movf	??_Save_Write_time,w
  6856  06DF  00B3               	movwf	Save_Write_word@data
  6857  06E0  0838               	movf	??_Save_Write_time+1,w
  6858  06E1  00B4               	movwf	Save_Write_word@data+1
  6859  06E2  318C  24C9  3186   	fcall	_Save_Write_word
  6860                           
  6861                           ;save.c: 218: Save_Write_word( rtc_tm.month);
  6862  06E5  0021               	movlb	1	; select bank1
  6863  06E6  085D               	movf	(_rtc_tm^(0+128)+5),w
  6864  06E7  0020               	movlb	0	; select bank0
  6865  06E8  00B7               	movwf	??_Save_Write_time
  6866  06E9  01B8               	clrf	??_Save_Write_time+1
  6867  06EA  0837               	movf	??_Save_Write_time,w
  6868  06EB  00B3               	movwf	Save_Write_word@data
  6869  06EC  0838               	movf	??_Save_Write_time+1,w
  6870  06ED  00B4               	movwf	Save_Write_word@data+1
  6871  06EE  318C  24C9  3186   	fcall	_Save_Write_word
  6872                           
  6873                           ;save.c: 219: Save_Write_word( rtc_tm.date);
  6874  06F1  0021               	movlb	1	; select bank1
  6875  06F2  085C               	movf	(_rtc_tm^(0+128)+4),w
  6876  06F3  0020               	movlb	0	; select bank0
  6877  06F4  00B7               	movwf	??_Save_Write_time
  6878  06F5  01B8               	clrf	??_Save_Write_time+1
  6879  06F6  0837               	movf	??_Save_Write_time,w
  6880  06F7  00B3               	movwf	Save_Write_word@data
  6881  06F8  0838               	movf	??_Save_Write_time+1,w
  6882  06F9  00B4               	movwf	Save_Write_word@data+1
  6883  06FA  318C  24C9  3186   	fcall	_Save_Write_word
  6884                           
  6885                           ;save.c: 220: Save_Write_word( rtc_tm.hours);
  6886  06FD  0021               	movlb	1	; select bank1
  6887  06FE  085A               	movf	(_rtc_tm^(0+128)+2),w
  6888  06FF  0020               	movlb	0	; select bank0
  6889  0700  00B7               	movwf	??_Save_Write_time
  6890  0701  01B8               	clrf	??_Save_Write_time+1
  6891  0702  0837               	movf	??_Save_Write_time,w
  6892  0703  00B3               	movwf	Save_Write_word@data
  6893  0704  0838               	movf	??_Save_Write_time+1,w
  6894  0705  00B4               	movwf	Save_Write_word@data+1
  6895  0706  318C  24C9  3186   	fcall	_Save_Write_word
  6896                           
  6897                           ;save.c: 221: Save_Write_word( rtc_tm.minutes);
  6898  0709  0021               	movlb	1	; select bank1
  6899  070A  0859               	movf	(_rtc_tm^(0+128)+1),w
  6900  070B  0020               	movlb	0	; select bank0
  6901  070C  00B7               	movwf	??_Save_Write_time
  6902  070D  01B8               	clrf	??_Save_Write_time+1
  6903  070E  0837               	movf	??_Save_Write_time,w
  6904  070F  00B3               	movwf	Save_Write_word@data
  6905  0710  0838               	movf	??_Save_Write_time+1,w
  6906  0711  00B4               	movwf	Save_Write_word@data+1
  6907  0712  318C  24C9  3186   	fcall	_Save_Write_word
  6908                           
  6909                           ;save.c: 222: Save_Write_word( rtc_tm.seconds);
  6910  0715  0021               	movlb	1	; select bank1
  6911  0716  0858               	movf	_rtc_tm^(0+128),w
  6912  0717  0020               	movlb	0	; select bank0
  6913  0718  00B7               	movwf	??_Save_Write_time
  6914  0719  01B8               	clrf	??_Save_Write_time+1
  6915  071A  0837               	movf	??_Save_Write_time,w
  6916  071B  00B3               	movwf	Save_Write_word@data
  6917  071C  0838               	movf	??_Save_Write_time+1,w
  6918  071D  00B4               	movwf	Save_Write_word@data+1
  6919  071E  318C  24C9  3186   	fcall	_Save_Write_word
  6920                           
  6921                           ;save.c: 223: Save_Write_word( rtc_tm.wday);
  6922  0721  0021               	movlb	1	; select bank1
  6923  0722  085B               	movf	(_rtc_tm^(0+128)+3),w
  6924  0723  0020               	movlb	0	; select bank0
  6925  0724  00B7               	movwf	??_Save_Write_time
  6926  0725  01B8               	clrf	??_Save_Write_time+1
  6927  0726  0837               	movf	??_Save_Write_time,w
  6928  0727  00B3               	movwf	Save_Write_word@data
  6929  0728  0838               	movf	??_Save_Write_time+1,w
  6930  0729  00B4               	movwf	Save_Write_word@data+1
  6931  072A  318C  24C9         	fcall	_Save_Write_word
  6932  072C  0008               	return
  6933  072D                     __end_of_Save_Write_time:	
  6934                           
  6935                           	psect	text24
  6936  0CC9                     __ptext24:	
  6937 ;; *************** function _Save_Write_word *****************
  6938 ;; Defined at:
  6939 ;;		line 196 in file "mcc_generated_files/save.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  data            2   19[BANK0 ] unsigned int 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;Total ram usage:        4 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    6
  6960 ;; This function calls:
  6961 ;;		_FLASH_WriteWord
  6962 ;; This function is called by:
  6963 ;;		_tc_temperature_trans
  6964 ;;		_Save_process
  6965 ;;		_Save_Write_time
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function _Save_Write_word
  6971  0CC9                     _Save_Write_word:	
  6972                           
  6973                           ;save.c: 198: if( (data & 0x3fff) == 0x3fff)
  6974                           
  6975                           ;incstack = 0
  6976                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6977  0CC9  30FF               	movlw	255
  6978  0CCA  0020               	movlb	0	; select bank0
  6979  0CCB  0533               	andwf	Save_Write_word@data,w
  6980  0CCC  00B5               	movwf	??_Save_Write_word
  6981  0CCD  303F               	movlw	63
  6982  0CCE  0534               	andwf	Save_Write_word@data+1,w
  6983  0CCF  00B6               	movwf	??_Save_Write_word+1
  6984  0CD0  0A35               	incf	??_Save_Write_word,w
  6985  0CD1  303F               	movlw	63
  6986  0CD2  1903               	skipnz
  6987  0CD3  0636               	xorwf	??_Save_Write_word+1,w
  6988  0CD4  1D03               	btfss	3,2
  6989  0CD5  2CE7               	goto	l4392
  6990                           
  6991                           ;save.c: 199: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x3ffe);
  6992  0CD6  0021               	movlb	1	; select bank1
  6993  0CD7  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6994  0CD8  0020               	movlb	0	; select bank0
  6995  0CD9  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6996  0CDA  0021               	movlb	1	; select bank1
  6997  0CDB  082E               	movf	_Cur_Save_Index^(0+128),w
  6998  0CDC  0020               	movlb	0	; select bank0
  6999  0CDD  00AA               	movwf	FLASH_WriteWord@flashAddr
  7000  0CDE  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7001  0CDF  00B5               	movwf	??_Save_Write_word
  7002  0CE0  0835               	movf	??_Save_Write_word,w
  7003  0CE1  00AC               	movwf	FLASH_WriteWord@ramBuf
  7004  0CE2  30FE               	movlw	254
  7005  0CE3  00AD               	movwf	FLASH_WriteWord@word
  7006  0CE4  303F               	movlw	63
  7007  0CE5  00AE               	movwf	FLASH_WriteWord@word+1
  7008  0CE6  2CF7               	goto	L6
  7009  0CE7                     l4392:	
  7010                           
  7011                           ;save.c: 200: else
  7012                           ;save.c: 201: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  7013  0CE7  0021               	movlb	1	; select bank1
  7014  0CE8  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7015  0CE9  0020               	movlb	0	; select bank0
  7016  0CEA  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7017  0CEB  0021               	movlb	1	; select bank1
  7018  0CEC  082E               	movf	_Cur_Save_Index^(0+128),w
  7019  0CED  0020               	movlb	0	; select bank0
  7020  0CEE  00AA               	movwf	FLASH_WriteWord@flashAddr
  7021  0CEF  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7022  0CF0  00B5               	movwf	??_Save_Write_word
  7023  0CF1  0835               	movf	??_Save_Write_word,w
  7024  0CF2  00AC               	movwf	FLASH_WriteWord@ramBuf
  7025  0CF3  0834               	movf	Save_Write_word@data+1,w
  7026  0CF4  00AE               	movwf	FLASH_WriteWord@word+1
  7027  0CF5  0833               	movf	Save_Write_word@data,w
  7028  0CF6  00AD               	movwf	FLASH_WriteWord@word
  7029  0CF7                     L6:	
  7030  0CF7  318D  2577         	fcall	_FLASH_WriteWord
  7031                           
  7032                           ;save.c: 202: Cur_Save_Index++;
  7033  0CF9  3001               	movlw	1
  7034  0CFA  0021               	movlb	1	; select bank1
  7035  0CFB  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7036  0CFC  3000               	movlw	0
  7037  0CFD  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7038  0CFE  0008               	return
  7039  0CFF                     __end_of_Save_Write_word:	
  7040                           
  7041                           	psect	text25
  7042  0D77                     __ptext25:	
  7043 ;; *************** function _FLASH_WriteWord *****************
  7044 ;; Defined at:
  7045 ;;		line 74 in file "mcc_generated_files/memory.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  7048 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  7049 ;;		 -> Flash_buff(64), 
  7050 ;;  word            2   13[BANK0 ] unsigned int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  7053 ;;  i               1   18[BANK0 ] unsigned char 
  7054 ;;  offset          1   15[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       10 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    5
  7071 ;; This function calls:
  7072 ;;		_FLASH_ReadWord
  7073 ;;		_FLASH_WriteBlock
  7074 ;; This function is called by:
  7075 ;;		_Write_Flash_head
  7076 ;;		_Write_Flash_finish
  7077 ;;		_Save_Write_word
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _FLASH_WriteWord
  7083  0D77                     _FLASH_WriteWord:	
  7084                           
  7085                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7089  0D77  30E0               	movlw	224
  7090  0D78  0020               	movlb	0	; select bank0
  7091  0D79  052A               	andwf	FLASH_WriteWord@flashAddr,w
  7092  0D7A  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  7093  0D7B  303F               	movlw	63
  7094  0D7C  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  7095  0D7D  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  7096                           
  7097                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  7098  0D7E  082A               	movf	FLASH_WriteWord@flashAddr,w
  7099  0D7F  391F               	andlw	31
  7100  0D80  00F6               	movwf	??_FLASH_WriteWord
  7101  0D81  0876               	movf	??_FLASH_WriteWord,w
  7102  0D82  00AF               	movwf	FLASH_WriteWord@offset
  7103                           
  7104                           ;memory.c: 77: uint8_t i;
  7105                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  7106  0D83  01B2               	clrf	FLASH_WriteWord@i
  7107  0D84  3020               	movlw	32
  7108  0D85  0232               	subwf	FLASH_WriteWord@i,w
  7109  0D86  1803               	btfsc	3,0
  7110  0D87  2DA6               	goto	l4322
  7111  0D88                     l4316:	
  7112                           
  7113                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  7114  0D88  0832               	movf	FLASH_WriteWord@i,w
  7115  0D89  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  7116  0D8A  00F3               	movwf	FLASH_ReadWord@flashAddr
  7117  0D8B  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7118  0D8C  1803               	skipnc
  7119  0D8D  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  7120  0D8E  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  7121  0D8F  3189  2166  318D   	fcall	_FLASH_ReadWord
  7122  0D92  0020               	movlb	0	; select bank0
  7123  0D93  3532               	lslf	FLASH_WriteWord@i,w
  7124  0D94  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7125  0D95  00F6               	movwf	??_FLASH_WriteWord
  7126  0D96  0876               	movf	??_FLASH_WriteWord,w
  7127  0D97  0086               	movwf	6
  7128  0D98  3001               	movlw	1	; select bank2/3
  7129  0D99  0087               	movwf	7
  7130  0D9A  0873               	movf	?_FLASH_ReadWord,w
  7131  0D9B  3FC0               	movwi [0]fsr1
  7132  0D9C  0874               	movf	?_FLASH_ReadWord+1,w
  7133  0D9D  3FC1               	movwi [1]fsr1
  7134  0D9E  3001               	movlw	1
  7135  0D9F  00F6               	movwf	??_FLASH_WriteWord
  7136  0DA0  0876               	movf	??_FLASH_WriteWord,w
  7137  0DA1  07B2               	addwf	FLASH_WriteWord@i,f
  7138  0DA2  3020               	movlw	32
  7139  0DA3  0232               	subwf	FLASH_WriteWord@i,w
  7140  0DA4  1C03               	skipc
  7141  0DA5  2D88               	goto	l4316
  7142  0DA6                     l4322:	
  7143                           
  7144                           ;memory.c: 82: }
  7145                           ;memory.c: 85: ramBuf[offset] = word;
  7146  0DA6  352F               	lslf	FLASH_WriteWord@offset,w
  7147  0DA7  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7148  0DA8  00F6               	movwf	??_FLASH_WriteWord
  7149  0DA9  0876               	movf	??_FLASH_WriteWord,w
  7150  0DAA  0086               	movwf	6
  7151  0DAB  3001               	movlw	1	; select bank2/3
  7152  0DAC  0087               	movwf	7
  7153  0DAD  082D               	movf	FLASH_WriteWord@word,w
  7154  0DAE  3FC0               	movwi [0]fsr1
  7155  0DAF  082E               	movf	FLASH_WriteWord@word+1,w
  7156  0DB0  3FC1               	movwi [1]fsr1
  7157                           
  7158                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  7159  0DB1  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7160  0DB2  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  7161  0DB3  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  7162  0DB4  00A0               	movwf	FLASH_WriteBlock@writeAddr
  7163  0DB5  082C               	movf	FLASH_WriteWord@ramBuf,w
  7164  0DB6  00F6               	movwf	??_FLASH_WriteWord
  7165  0DB7  0876               	movf	??_FLASH_WriteWord,w
  7166  0DB8  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  7167  0DB9  3187  272D         	fcall	_FLASH_WriteBlock
  7168  0DBB  0008               	return
  7169  0DBC                     __end_of_FLASH_WriteWord:	
  7170                           
  7171                           	psect	text26
  7172  072D                     __ptext26:	
  7173 ;; *************** function _FLASH_WriteBlock *****************
  7174 ;; Defined at:
  7175 ;;		line 91 in file "mcc_generated_files/memory.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  7178 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  7179 ;;		 -> Flash_buff(64), 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  7182 ;;  i               1    9[BANK0 ] unsigned char 
  7183 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  1    wreg      char 
  7186 ;; Registers used:
  7187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;Total ram usage:       10 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    4
  7200 ;; This function calls:
  7201 ;;		_FLASH_EraseBlock
  7202 ;; This function is called by:
  7203 ;;		_FLASH_WriteWord
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           
  7208                           ;psect for function _FLASH_WriteBlock
  7209  072D                     _FLASH_WriteBlock:	
  7210                           
  7211                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7212                           
  7213                           ;incstack = 0
  7214                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7215  072D  30E0               	movlw	224
  7216  072E  0020               	movlb	0	; select bank0
  7217  072F  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  7218  0730  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  7219  0731  303F               	movlw	63
  7220  0732  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  7221  0733  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  7222                           
  7223                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  7224  0734  3000               	movlw	0
  7225  0735  1B8B               	btfsc	11,7	;volatile
  7226  0736  3001               	movlw	1
  7227  0737  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  7228                           
  7229                           ;memory.c: 94: uint8_t i;
  7230                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  7231  0738  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  7232  0739  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  7233  073A  1D03               	skipz
  7234  073B  2F3E               	goto	u3455
  7235  073C  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  7236  073D  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  7237  073E                     u3455:	
  7238  073E  1D03               	btfss	3,2
  7239  073F  0008               	return
  7240                           
  7241                           ;memory.c: 99: }
  7242                           ;memory.c: 101: INTCONbits.GIE = 0;
  7243                           
  7244                           ;memory.c: 98: return -1;
  7245                           ;	Return value of _FLASH_WriteBlock is never used
  7246  0740  138B               	bcf	11,7	;volatile
  7247                           
  7248                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  7249  0741  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7250  0742  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  7251  0743  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7252  0744  00F3               	movwf	FLASH_EraseBlock@startAddr
  7253  0745  318A  2204  3187   	fcall	_FLASH_EraseBlock
  7254                           
  7255                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  7256  0748  0023               	movlb	3	; select bank3
  7257  0749  1315               	bcf	21,6	;volatile
  7258                           
  7259                           ;memory.c: 108: PMCON1bits.WREN = 1;
  7260  074A  1515               	bsf	21,2	;volatile
  7261                           
  7262                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  7263  074B  1695               	bsf	21,5	;volatile
  7264                           
  7265                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  7266  074C  0020               	movlb	0	; select bank0
  7267  074D  01A9               	clrf	FLASH_WriteBlock@i
  7268  074E  3020               	movlw	32
  7269  074F  0229               	subwf	FLASH_WriteBlock@i,w
  7270  0750  1803               	btfsc	3,0
  7271  0751  2F8F               	goto	l166
  7272  0752                     l4190:	
  7273                           
  7274                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  7275  0752  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7276  0753  0023               	movlb	3	; select bank3
  7277  0754  0091               	movwf	17	;volatile
  7278                           
  7279                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  7280  0755  0020               	movlb	0	; select bank0
  7281  0756  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7282  0757  0023               	movlb	3	; select bank3
  7283  0758  0092               	movwf	18	;volatile
  7284                           
  7285                           ;memory.c: 118: PMDATL = flashWordArray[i];
  7286  0759  0020               	movlb	0	; select bank0
  7287  075A  3529               	lslf	FLASH_WriteBlock@i,w
  7288  075B  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7289  075C  00A3               	movwf	??_FLASH_WriteBlock
  7290  075D  0823               	movf	??_FLASH_WriteBlock,w
  7291  075E  0086               	movwf	6
  7292  075F  3001               	movlw	1	; select bank2/3
  7293  0760  0087               	movwf	7
  7294  0761  0801               	movf	1,w
  7295  0762  0023               	movlb	3	; select bank3
  7296  0763  0093               	movwf	19	;volatile
  7297                           
  7298                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  7299  0764  0020               	movlb	0	; select bank0
  7300  0765  3529               	lslf	FLASH_WriteBlock@i,w
  7301  0766  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7302  0767  00A3               	movwf	??_FLASH_WriteBlock
  7303  0768  0823               	movf	??_FLASH_WriteBlock,w
  7304  0769  0086               	movwf	6
  7305  076A  3001               	movlw	1	; select bank2/3
  7306  076B  0087               	movwf	7
  7307  076C  3F40               	moviw [0]fsr1
  7308  076D  00A4               	movwf	??_FLASH_WriteBlock+1
  7309  076E  3F41               	moviw [1]fsr1
  7310  076F  00A5               	movwf	??_FLASH_WriteBlock+2
  7311  0770  0825               	movf	??_FLASH_WriteBlock+2,w
  7312  0771  0023               	movlb	3	; select bank3
  7313  0772  0094               	movwf	20	;volatile
  7314                           
  7315                           ;memory.c: 121: if (i == (32 - 1)) {
  7316  0773  301F               	movlw	31
  7317  0774  0020               	movlb	0	; select bank0
  7318  0775  0629               	xorwf	FLASH_WriteBlock@i,w
  7319  0776  1D03               	btfss	3,2
  7320  0777  2F7A               	goto	l4202
  7321                           
  7322                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  7323  0778  0023               	movlb	3	; select bank3
  7324  0779  1295               	bcf	21,5	;volatile
  7325  077A                     l4202:	
  7326                           
  7327                           ;memory.c: 124: }
  7328                           ;memory.c: 126: PMCON2 = 0x55;
  7329  077A  3055               	movlw	85
  7330  077B  0023               	movlb	3	; select bank3
  7331  077C  0096               	movwf	22	;volsfr
  7332                           
  7333                           ;memory.c: 127: PMCON2 = 0xAA;
  7334  077D  30AA               	movlw	170
  7335  077E  0096               	movwf	22	;volsfr
  7336                           
  7337                           ;memory.c: 128: PMCON1bits.WR = 1;
  7338  077F  1495               	bsf	21,1	;volatile
  7339                           
  7340                           ;memory.c: 129: __nop();
  7341  0780  0000               	nop
  7342                           
  7343                           ;memory.c: 130: __nop();
  7344  0781  0000               	nop
  7345                           
  7346                           ;memory.c: 132: writeAddr++;
  7347  0782  3001               	movlw	1
  7348  0783  0020               	movlb	0	; select bank0
  7349  0784  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  7350  0785  3000               	movlw	0
  7351  0786  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  7352  0787  3001               	movlw	1
  7353  0788  00A3               	movwf	??_FLASH_WriteBlock
  7354  0789  0823               	movf	??_FLASH_WriteBlock,w
  7355  078A  07A9               	addwf	FLASH_WriteBlock@i,f
  7356  078B  3020               	movlw	32
  7357  078C  0229               	subwf	FLASH_WriteBlock@i,w
  7358  078D  1C03               	skipc
  7359  078E  2F52               	goto	l4190
  7360  078F                     l166:	
  7361                           
  7362                           ;memory.c: 133: }
  7363                           ;memory.c: 135: PMCON1bits.WREN = 0;
  7364  078F  0023               	movlb	3	; select bank3
  7365  0790  1115               	bcf	21,2	;volatile
  7366                           
  7367                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  7368  0791  0020               	movlb	0	; select bank0
  7369  0792  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  7370  0793  1C03               	skipc
  7371  0794  138B               	bcf	11,7	;volatile
  7372  0795  1803               	skipnc
  7373  0796  178B               	bsf	11,7	;volatile
  7374  0797  0008               	return
  7375  0798                     __end_of_FLASH_WriteBlock:	
  7376                           ;memory.c: 138: return 0;
  7377                           ;	Return value of _FLASH_WriteBlock is never used
  7378                           
  7379                           
  7380                           	psect	text27
  7381  0A04                     __ptext27:	
  7382 ;; *************** function _FLASH_EraseBlock *****************
  7383 ;; Defined at:
  7384 ;;		line 141 in file "mcc_generated_files/memory.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  startAddr       2    3[COMMON] unsigned int 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;Total ram usage:        3 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    3
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_FLASH_WriteBlock
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           
  7413                           ;psect for function _FLASH_EraseBlock
  7414  0A04                     _FLASH_EraseBlock:	
  7415                           
  7416                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  7417                           
  7418                           ;incstack = 0
  7419                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  7420  0A04  3000               	movlw	0
  7421  0A05  1B8B               	btfsc	11,7	;volatile
  7422  0A06  3001               	movlw	1
  7423  0A07  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  7424                           
  7425                           ;memory.c: 145: INTCONbits.GIE = 0;
  7426  0A08  138B               	bcf	11,7	;volatile
  7427                           
  7428                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  7429  0A09  0873               	movf	FLASH_EraseBlock@startAddr,w
  7430  0A0A  0023               	movlb	3	; select bank3
  7431  0A0B  0091               	movwf	17	;volatile
  7432                           
  7433                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  7434  0A0C  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  7435  0A0D  0092               	movwf	18	;volatile
  7436                           
  7437                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  7438  0A0E  1315               	bcf	21,6	;volatile
  7439                           
  7440                           ;memory.c: 153: PMCON1bits.FREE = 1;
  7441  0A0F  1615               	bsf	21,4	;volatile
  7442                           
  7443                           ;memory.c: 154: PMCON1bits.WREN = 1;
  7444  0A10  1515               	bsf	21,2	;volatile
  7445                           
  7446                           ;memory.c: 157: PMCON2 = 0x55;
  7447  0A11  3055               	movlw	85
  7448  0A12  0096               	movwf	22	;volsfr
  7449                           
  7450                           ;memory.c: 158: PMCON2 = 0xAA;
  7451  0A13  30AA               	movlw	170
  7452  0A14  0096               	movwf	22	;volsfr
  7453                           
  7454                           ;memory.c: 159: PMCON1bits.WR = 1;
  7455  0A15  1495               	bsf	21,1	;volatile
  7456                           
  7457                           ;memory.c: 160: __nop();
  7458  0A16  0000               	nop
  7459                           
  7460                           ;memory.c: 161: __nop();
  7461  0A17  0000               	nop
  7462                           
  7463                           ;memory.c: 163: PMCON1bits.WREN = 0;
  7464  0A18  0023               	movlb	3	; select bank3
  7465  0A19  1115               	bcf	21,2	;volatile
  7466                           
  7467                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  7468  0A1A  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  7469  0A1B  1C03               	skipc
  7470  0A1C  138B               	bcf	11,7	;volatile
  7471  0A1D  1803               	skipnc
  7472  0A1E  178B               	bsf	11,7	;volatile
  7473  0A1F  0008               	return
  7474  0A20                     __end_of_FLASH_EraseBlock:	
  7475                           
  7476                           	psect	text28
  7477  0966                     __ptext28:	
  7478 ;; *************** function _FLASH_ReadWord *****************
  7479 ;; Defined at:
  7480 ;;		line 58 in file "mcc_generated_files/memory.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  flashAddr       2    3[COMMON] unsigned int 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  2    3[COMMON] unsigned int 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;Total ram usage:        3 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    3
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_FLASH_WriteWord
  7505 ;;		_Key_Process
  7506 ;;		_Serach_Flash_Head
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           
  7511                           ;psect for function _FLASH_ReadWord
  7512  0966                     _FLASH_ReadWord:	
  7513                           
  7514                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  7515                           
  7516                           ;incstack = 0
  7517                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  7518  0966  3000               	movlw	0
  7519  0967  1B8B               	btfsc	11,7	;volatile
  7520  0968  3001               	movlw	1
  7521  0969  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  7522                           
  7523                           ;memory.c: 61: INTCONbits.GIE = 0;
  7524  096A  138B               	bcf	11,7	;volatile
  7525                           
  7526                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  7527  096B  0873               	movf	FLASH_ReadWord@flashAddr,w
  7528  096C  0023               	movlb	3	; select bank3
  7529  096D  0091               	movwf	17	;volatile
  7530                           
  7531                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  7532  096E  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  7533  096F  0092               	movwf	18	;volatile
  7534                           
  7535                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  7536  0970  1315               	bcf	21,6	;volatile
  7537                           
  7538                           ;memory.c: 66: PMCON1bits.RD = 1;
  7539  0971  1415               	bsf	21,0	;volatile
  7540                           
  7541                           ;memory.c: 67: __nop();
  7542  0972  0000               	nop
  7543                           
  7544                           ;memory.c: 68: __nop();
  7545  0973  0000               	nop
  7546                           
  7547                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  7548  0974  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  7549  0975  1C03               	skipc
  7550  0976  138B               	bcf	11,7	;volatile
  7551  0977  1803               	skipnc
  7552  0978  178B               	bsf	11,7	;volatile
  7553                           
  7554                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  7555  0979  0023               	movlb	3	; select bank3
  7556  097A  0814               	movf	20,w	;volatile
  7557  097B  00F4               	movwf	?_FLASH_ReadWord+1
  7558  097C  0813               	movf	19,w	;volatile
  7559  097D  00F3               	movwf	?_FLASH_ReadWord
  7560  097E  0008               	return
  7561  097F                     __end_of_FLASH_ReadWord:	
  7562                           
  7563                           	psect	text29
  7564  0F9C                     __ptext29:	
  7565 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  7566 ;; Defined at:
  7567 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  p               1    wreg     PTR struct bq32k_regs
  7570 ;;		 -> rtc_tm(7), 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  7573 ;;		 -> rtc_tm(7), 
  7574 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7588 ;;Total ram usage:       13 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    5
  7591 ;; This function calls:
  7592 ;;		_I2C_Read_Buffer
  7593 ;;		_bcd2bin
  7594 ;; This function is called by:
  7595 ;;		_time_Display
  7596 ;;		_Calculate_Time
  7597 ;;		_Save_Write_time
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           
  7602                           ;psect for function _Bq32k_Rtc_Read_Time
  7603  0F9C                     _Bq32k_Rtc_Read_Time:	
  7604                           
  7605                           ;incstack = 0
  7606                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7607                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  7608  0F9C  0020               	movlb	0	; select bank0
  7609  0F9D  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  7610                           
  7611                           ;bq32k.c: 32: unsigned char temp[10] ;
  7612                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  7613  0F9E  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  7614  0F9F  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7615  0FA0  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7616  0FA1  00F6               	movwf	I2C_Read_Buffer@buff
  7617  0FA2  3007               	movlw	7
  7618  0FA3  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  7619  0FA4  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  7620  0FA5  00F7               	movwf	I2C_Read_Buffer@Length
  7621  0FA6  3000               	movlw	0
  7622  0FA7  3186  2643  318F   	fcall	_I2C_Read_Buffer
  7623                           
  7624                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  7625  0FAA  0020               	movlb	0	; select bank0
  7626  0FAB  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  7627  0FAC  397F               	andlw	127
  7628  0FAD  3188  20DA  318F   	fcall	_bcd2bin
  7629  0FB0  0020               	movlb	0	; select bank0
  7630  0FB1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7631  0FB2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7632  0FB3  0086               	movwf	6
  7633  0FB4  0187               	clrf	7
  7634  0FB5  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7635  0FB6  0081               	movwf	1
  7636                           
  7637                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  7638  0FB7  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  7639  0FB8  397F               	andlw	127
  7640  0FB9  3188  20DA  318F   	fcall	_bcd2bin
  7641  0FBC  0020               	movlb	0	; select bank0
  7642  0FBD  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7643  0FBE  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  7644  0FBF  0086               	movwf	6
  7645  0FC0  0187               	clrf	7
  7646  0FC1  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7647  0FC2  0081               	movwf	1
  7648                           
  7649                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  7650  0FC3  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  7651  0FC4  393F               	andlw	63
  7652  0FC5  3188  20DA  318F   	fcall	_bcd2bin
  7653  0FC8  0020               	movlb	0	; select bank0
  7654  0FC9  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7655  0FCA  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7656  0FCB  3E02               	addlw	2
  7657  0FCC  0086               	movwf	6
  7658  0FCD  0187               	clrf	7
  7659  0FCE  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7660  0FCF  0081               	movwf	1
  7661                           
  7662                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  7663  0FD0  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  7664  0FD1  3188  20DA  318F   	fcall	_bcd2bin
  7665  0FD4  0020               	movlb	0	; select bank0
  7666  0FD5  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7667  0FD6  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7668  0FD7  3E03               	addlw	3
  7669  0FD8  0086               	movwf	6
  7670  0FD9  0187               	clrf	7
  7671  0FDA  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7672  0FDB  0081               	movwf	1
  7673                           
  7674                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  7675  0FDC  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  7676  0FDD  3188  20DA  318F   	fcall	_bcd2bin
  7677  0FE0  0020               	movlb	0	; select bank0
  7678  0FE1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7679  0FE2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7680  0FE3  3E04               	addlw	4
  7681  0FE4  0086               	movwf	6
  7682  0FE5  0187               	clrf	7
  7683  0FE6  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7684  0FE7  0081               	movwf	1
  7685                           
  7686                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  7687  0FE8  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  7688  0FE9  3188  20DA  318F   	fcall	_bcd2bin
  7689  0FEC  0020               	movlb	0	; select bank0
  7690  0FED  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7691  0FEE  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7692  0FEF  3E05               	addlw	5
  7693  0FF0  0086               	movwf	6
  7694  0FF1  0187               	clrf	7
  7695  0FF2  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7696  0FF3  0081               	movwf	1
  7697                           
  7698                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  7699  0FF4  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  7700  0FF5  3188  20DA         	fcall	_bcd2bin
  7701  0FF7  0020               	movlb	0	; select bank0
  7702  0FF8  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7703  0FF9  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7704  0FFA  3E06               	addlw	6
  7705  0FFB  0086               	movwf	6
  7706  0FFC  0187               	clrf	7
  7707  0FFD  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7708  0FFE  0081               	movwf	1
  7709  0FFF  0008               	return
  7710  1000                     __end_of_Bq32k_Rtc_Read_Time:	
  7711                           
  7712                           	psect	text30
  7713  08DA                     __ptext30:	
  7714 ;; *************** function _bcd2bin *****************
  7715 ;; Defined at:
  7716 ;;		line 68 in file "mcc_generated_files/bq32k.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  val             1    wreg     unsigned char 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  val             1    7[COMMON] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  1    wreg      unsigned char 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0, pclath, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;Total ram usage:        4 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    4
  7737 ;; This function calls:
  7738 ;;		___bmul
  7739 ;; This function is called by:
  7740 ;;		_Bq32k_Rtc_Read_Time
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function _bcd2bin
  7746  08DA                     _bcd2bin:	
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  7750                           ;bcd2bin@val stored from wreg
  7751  08DA  00F7               	movwf	bcd2bin@val
  7752                           
  7753                           ;bq32k.c: 70: return (val & 0x0f) + (val >> 4) * 10;
  7754  08DB  300F               	movlw	15
  7755  08DC  0577               	andwf	bcd2bin@val,w
  7756  08DD  0020               	movlb	0	; select bank0
  7757  08DE  00A0               	movwf	??_bcd2bin
  7758  08DF  300A               	movlw	10
  7759  08E0  00A1               	movwf	??_bcd2bin+1
  7760  08E1  0821               	movf	??_bcd2bin+1,w
  7761  08E2  00F3               	movwf	___bmul@multiplicand
  7762  08E3  0877               	movf	bcd2bin@val,w
  7763  08E4  00A2               	movwf	??_bcd2bin+2
  7764  08E5  3004               	movlw	4
  7765  08E6                     u3645:	
  7766  08E6  36A2               	lsrf	??_bcd2bin+2,f
  7767  08E7  0B89               	decfsz	9,f
  7768  08E8  28E6               	goto	u3645
  7769  08E9  0822               	movf	??_bcd2bin+2,w
  7770  08EA  3188  20C9         	fcall	___bmul
  7771  08EC  0020               	movlb	0	; select bank0
  7772  08ED  0720               	addwf	??_bcd2bin,w
  7773  08EE  0008               	return
  7774  08EF                     __end_of_bcd2bin:	
  7775                           
  7776                           	psect	text31
  7777  08C9                     __ptext31:	
  7778 ;; *************** function ___bmul *****************
  7779 ;; Defined at:
  7780 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  multiplier      1    wreg     unsigned char 
  7783 ;;  multiplicand    1    3[COMMON] unsigned char 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  multiplier      1    6[COMMON] unsigned char 
  7786 ;;  product         1    5[COMMON] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      unsigned char 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;Total ram usage:        4 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    3
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_bcd2bin
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function ___bmul
  7812  08C9                     ___bmul:	
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7816                           ;___bmul@multiplier stored from wreg
  7817  08C9  00F6               	movwf	___bmul@multiplier
  7818  08CA  01F5               	clrf	___bmul@product
  7819  08CB                     l4296:	
  7820  08CB  1C76               	btfss	___bmul@multiplier,0
  7821  08CC  28D1               	goto	l4300
  7822  08CD  0873               	movf	___bmul@multiplicand,w
  7823  08CE  00F4               	movwf	??___bmul
  7824  08CF  0874               	movf	??___bmul,w
  7825  08D0  07F5               	addwf	___bmul@product,f
  7826  08D1                     l4300:	
  7827  08D1  1003               	clrc
  7828  08D2  0DF3               	rlf	___bmul@multiplicand,f
  7829  08D3  1003               	clrc
  7830  08D4  0CF6               	rrf	___bmul@multiplier,f
  7831  08D5  0876               	movf	___bmul@multiplier,w
  7832  08D6  1D03               	btfss	3,2
  7833  08D7  28CB               	goto	l4296
  7834  08D8  0875               	movf	___bmul@product,w
  7835  08D9  0008               	return
  7836  08DA                     __end_of___bmul:	
  7837                           
  7838                           	psect	text32
  7839  0643                     __ptext32:	
  7840 ;; *************** function _I2C_Read_Buffer *****************
  7841 ;; Defined at:
  7842 ;;		line 120 in file "mcc_generated_files/i2c.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  ADD             1    wreg     unsigned char 
  7845 ;;  buff            1    6[COMMON] PTR unsigned char 
  7846 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  7847 ;;  Length          1    7[COMMON] unsigned char 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  ADD             1    1[BANK0 ] unsigned char 
  7850 ;;  Flag            1    2[BANK0 ] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  1    wreg      unsigned char 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;Total ram usage:        5 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    4
  7867 ;; This function calls:
  7868 ;;		_I2C_Receive_Byte
  7869 ;;		_I2C_Send_Byte
  7870 ;;		_I2C_Start
  7871 ;;		_I2C_Stop
  7872 ;; This function is called by:
  7873 ;;		_Bq32k_Rtc_Read_Time
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           
  7878                           ;psect for function _I2C_Read_Buffer
  7879  0643                     _I2C_Read_Buffer:	
  7880                           
  7881                           ;incstack = 0
  7882                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7883                           ;I2C_Read_Buffer@ADD stored from wreg
  7884  0643  0020               	movlb	0	; select bank0
  7885  0644  00A1               	movwf	I2C_Read_Buffer@ADD
  7886                           
  7887                           ;i2c.c: 122: unsigned char Flag=1;
  7888  0645  01A2               	clrf	I2C_Read_Buffer@Flag
  7889  0646  0AA2               	incf	I2C_Read_Buffer@Flag,f
  7890                           
  7891                           ;i2c.c: 124: I2C_Start();
  7892  0647  3189  2134  3186   	fcall	_I2C_Start
  7893                           
  7894                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  7895  064A  30D0               	movlw	208
  7896  064B  318E  264A  3186   	fcall	_I2C_Send_Byte
  7897  064E  0020               	movlb	0	; select bank0
  7898  064F  00A0               	movwf	??_I2C_Read_Buffer
  7899  0650  0820               	movf	??_I2C_Read_Buffer,w
  7900  0651  00A2               	movwf	I2C_Read_Buffer@Flag
  7901                           
  7902                           ;i2c.c: 127: if(Flag)
  7903  0652  0822               	movf	I2C_Read_Buffer@Flag,w
  7904  0653  1D03               	btfss	3,2
  7905  0654  0008               	return
  7906                           
  7907                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  7908                           
  7909                           ;i2c.c: 128: return 0x01;
  7910                           ;	Return value of _I2C_Read_Buffer is never used
  7911  0655  0821               	movf	I2C_Read_Buffer@ADD,w
  7912  0656  318E  264A  3186   	fcall	_I2C_Send_Byte
  7913  0659  0020               	movlb	0	; select bank0
  7914  065A  00A0               	movwf	??_I2C_Read_Buffer
  7915  065B  0820               	movf	??_I2C_Read_Buffer,w
  7916  065C  00A2               	movwf	I2C_Read_Buffer@Flag
  7917                           
  7918                           ;i2c.c: 131: if(Flag)
  7919  065D  0822               	movf	I2C_Read_Buffer@Flag,w
  7920  065E  1D03               	btfss	3,2
  7921  065F  0008               	return
  7922                           
  7923                           ;i2c.c: 134: I2C_Start();
  7924                           
  7925                           ;i2c.c: 132: return 0x01;
  7926                           ;	Return value of _I2C_Read_Buffer is never used
  7927  0660  3189  2134  3186   	fcall	_I2C_Start
  7928                           
  7929                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  7930  0663  30D1               	movlw	209
  7931  0664  318E  264A  3186   	fcall	_I2C_Send_Byte
  7932  0667  0020               	movlb	0	; select bank0
  7933  0668  00A0               	movwf	??_I2C_Read_Buffer
  7934  0669  0820               	movf	??_I2C_Read_Buffer,w
  7935  066A  00A2               	movwf	I2C_Read_Buffer@Flag
  7936                           
  7937                           ;i2c.c: 136: if(Flag)
  7938  066B  0822               	movf	I2C_Read_Buffer@Flag,w
  7939  066C  1D03               	btfss	3,2
  7940  066D  0008               	return
  7941  066E                     l4364:	
  7942  066E  3002               	movlw	2
  7943  066F  0277               	subwf	I2C_Read_Buffer@Length,w
  7944  0670  1C03               	btfss	3,0
  7945  0671  2E99               	goto	l4366
  7946                           
  7947                           ;i2c.c: 140: {
  7948                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  7949                           
  7950                           ;i2c.c: 139: while(Length>1)
  7951                           
  7952                           ;i2c.c: 137: return 0x01;
  7953                           ;	Return value of _I2C_Read_Buffer is never used
  7954  0672  318A  22E8  3186   	fcall	_I2C_Receive_Byte
  7955  0675  0020               	movlb	0	; select bank0
  7956  0676  00A0               	movwf	??_I2C_Read_Buffer
  7957  0677  0876               	movf	I2C_Read_Buffer@buff,w
  7958  0678  0086               	movwf	6
  7959  0679  0187               	clrf	7
  7960  067A  0820               	movf	??_I2C_Read_Buffer,w
  7961  067B  0081               	movwf	1
  7962                           
  7963                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  7964  067C  0022               	movlb	2	; select bank2
  7965  067D  108D               	bcf	13,1	;volatile
  7966                           
  7967                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7968  067E  300D               	movlw	13
  7969  067F  0020               	movlb	0	; select bank0
  7970  0680  00A0               	movwf	??_I2C_Read_Buffer
  7971  0681                     u5107:	
  7972  0681  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7973  0682  2E81               	goto	u5107
  7974                           
  7975                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  7976  0683  0022               	movlb	2	; select bank2
  7977  0684  140D               	bsf	13,0	;volatile
  7978                           
  7979                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7980  0685  300D               	movlw	13
  7981  0686  0020               	movlb	0	; select bank0
  7982  0687  00A0               	movwf	??_I2C_Read_Buffer
  7983  0688                     u5117:	
  7984  0688  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7985  0689  2E88               	goto	u5117
  7986                           
  7987                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  7988  068A  0022               	movlb	2	; select bank2
  7989  068B  100D               	bcf	13,0	;volatile
  7990                           
  7991                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7992  068C  300D               	movlw	13
  7993  068D  0020               	movlb	0	; select bank0
  7994  068E  00A0               	movwf	??_I2C_Read_Buffer
  7995  068F                     u5127:	
  7996  068F  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7997  0690  2E8F               	goto	u5127
  7998                           
  7999                           ;i2c.c: 150: buff++;
  8000  0691  3001               	movlw	1
  8001  0692  0020               	movlb	0	; select bank0
  8002  0693  00A0               	movwf	??_I2C_Read_Buffer
  8003  0694  0820               	movf	??_I2C_Read_Buffer,w
  8004  0695  07F6               	addwf	I2C_Read_Buffer@buff,f
  8005                           
  8006                           ;i2c.c: 151: Length--;
  8007  0696  3001               	movlw	1
  8008  0697  02F7               	subwf	I2C_Read_Buffer@Length,f
  8009  0698  2E6E               	goto	l4364
  8010  0699                     l4366:	
  8011                           
  8012                           ;i2c.c: 152: }
  8013                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  8014  0699  318A  22E8  3186   	fcall	_I2C_Receive_Byte
  8015  069C  0020               	movlb	0	; select bank0
  8016  069D  00A0               	movwf	??_I2C_Read_Buffer
  8017  069E  0876               	movf	I2C_Read_Buffer@buff,w
  8018  069F  0086               	movwf	6
  8019  06A0  0187               	clrf	7
  8020  06A1  0820               	movf	??_I2C_Read_Buffer,w
  8021  06A2  0081               	movwf	1
  8022                           
  8023                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  8024  06A3  0022               	movlb	2	; select bank2
  8025  06A4  148D               	bsf	13,1	;volatile
  8026                           
  8027                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8028  06A5  300D               	movlw	13
  8029  06A6  0020               	movlb	0	; select bank0
  8030  06A7  00A0               	movwf	??_I2C_Read_Buffer
  8031  06A8                     u5137:	
  8032  06A8  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8033  06A9  2EA8               	goto	u5137
  8034                           
  8035                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  8036  06AA  0022               	movlb	2	; select bank2
  8037  06AB  140D               	bsf	13,0	;volatile
  8038                           
  8039                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8040  06AC  300D               	movlw	13
  8041  06AD  0020               	movlb	0	; select bank0
  8042  06AE  00A0               	movwf	??_I2C_Read_Buffer
  8043  06AF                     u5147:	
  8044  06AF  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8045  06B0  2EAF               	goto	u5147
  8046                           
  8047                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  8048  06B1  0022               	movlb	2	; select bank2
  8049  06B2  100D               	bcf	13,0	;volatile
  8050                           
  8051                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8052  06B3  300D               	movlw	13
  8053  06B4  0020               	movlb	0	; select bank0
  8054  06B5  00A0               	movwf	??_I2C_Read_Buffer
  8055  06B6                     u5157:	
  8056  06B6  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8057  06B7  2EB6               	goto	u5157
  8058                           
  8059                           ;i2c.c: 162: I2C_Stop();
  8060  06B8  3189  214D         	fcall	_I2C_Stop
  8061  06BA  0008               	return
  8062  06BB                     __end_of_I2C_Read_Buffer:	
  8063                           ;i2c.c: 164: return 0x00;
  8064                           ;	Return value of _I2C_Read_Buffer is never used
  8065                           
  8066                           
  8067                           	psect	text33
  8068  0AE8                     __ptext33:	
  8069 ;; *************** function _I2C_Receive_Byte *****************
  8070 ;; Defined at:
  8071 ;;		line 74 in file "mcc_generated_files/i2c.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  i               1    5[COMMON] unsigned char 
  8076 ;;  Data            1    4[COMMON] unsigned char 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      unsigned char 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;Total ram usage:        3 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    3
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_I2C_Read_Buffer
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           
  8101                           ;psect for function _I2C_Receive_Byte
  8102  0AE8                     _I2C_Receive_Byte:	
  8103                           
  8104                           ;i2c.c: 76: unsigned char i,Data=0;
  8105                           
  8106                           ;incstack = 0
  8107                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  8108  0AE8  01F4               	clrf	I2C_Receive_Byte@Data
  8109                           
  8110                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  8111  0AE9  0022               	movlb	2	; select bank2
  8112  0AEA  148D               	bsf	13,1	;volatile
  8113                           
  8114                           ;i2c.c: 78: for(i=0;i<8;i++)
  8115  0AEB  01F5               	clrf	I2C_Receive_Byte@i
  8116  0AEC  3008               	movlw	8
  8117  0AED  0275               	subwf	I2C_Receive_Byte@i,w
  8118  0AEE  1803               	btfsc	3,0
  8119  0AEF  2B10               	goto	l4282
  8120                           
  8121                           ;i2c.c: 79: {
  8122                           ;i2c.c: 80: Data <<= 1;
  8123  0AF0  1003               	clrc
  8124  0AF1                     L7:	
  8125  0AF1  0DF4               	rlf	I2C_Receive_Byte@Data,f
  8126                           
  8127                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  8128  0AF2  0022               	movlb	2	; select bank2
  8129  0AF3  140D               	bsf	13,0	;volatile
  8130                           
  8131                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8132  0AF4  300D               	movlw	13
  8133  0AF5  00F3               	movwf	??_I2C_Receive_Byte
  8134  0AF6                     u5167:	
  8135  0AF6  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8136  0AF7  2AF6               	goto	u5167
  8137                           
  8138                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  8139  0AF8  0021               	movlb	1	; select bank1
  8140  0AF9  148D               	bsf	13,1	;volatile
  8141                           
  8142                           ;i2c.c: 84: if(RB1)
  8143  0AFA  0020               	movlb	0	; select bank0
  8144  0AFB  1C8D               	btfss	13,1	;volatile
  8145  0AFC  2B00               	goto	l766
  8146                           
  8147                           ;i2c.c: 85: {
  8148                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  8149  0AFD  0021               	movlb	1	; select bank1
  8150  0AFE  108D               	bcf	13,1	;volatile
  8151                           
  8152                           ;i2c.c: 87: Data |= 0x01;
  8153  0AFF  1474               	bsf	I2C_Receive_Byte@Data,0
  8154  0B00                     l766:	
  8155                           ;i2c.c: 88: }
  8156                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  8157                           
  8158  0B00  0021               	movlb	1	; select bank1
  8159  0B01  108D               	bcf	13,1	;volatile
  8160                           
  8161                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  8162  0B02  0022               	movlb	2	; select bank2
  8163  0B03  100D               	bcf	13,0	;volatile
  8164                           
  8165                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8166  0B04  300D               	movlw	13
  8167  0B05  00F3               	movwf	??_I2C_Receive_Byte
  8168  0B06                     u5177:	
  8169  0B06  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8170  0B07  2B06               	goto	u5177
  8171  0B08  3001               	movlw	1
  8172  0B09  00F3               	movwf	??_I2C_Receive_Byte
  8173  0B0A  0873               	movf	??_I2C_Receive_Byte,w
  8174  0B0B  07F5               	addwf	I2C_Receive_Byte@i,f
  8175  0B0C  3008               	movlw	8
  8176  0B0D  0275               	subwf	I2C_Receive_Byte@i,w
  8177  0B0E  1C03               	skipc
  8178  0B0F  2AF1               	goto	L7
  8179  0B10                     l4282:	
  8180                           
  8181                           ;i2c.c: 92: }
  8182                           ;i2c.c: 93: return Data;
  8183  0B10  0874               	movf	I2C_Receive_Byte@Data,w
  8184  0B11  0008               	return
  8185  0B12                     __end_of_I2C_Receive_Byte:	
  8186                           
  8187                           	psect	text34
  8188  0898                     __ptext34:	
  8189 ;; *************** function _maxim_clear_fault_status *****************
  8190 ;; Defined at:
  8191 ;;		line 155 in file "mcc_generated_files/max31856.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0, pclath, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;Total ram usage:        1 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    5
  8212 ;; This function calls:
  8213 ;;		_maxim_31856_read_register
  8214 ;;		_maxim_31856_write_register
  8215 ;; This function is called by:
  8216 ;;		_temperature_display
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _maxim_clear_fault_status
  8222  0898                     _maxim_clear_fault_status:	
  8223                           
  8224                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  8225                           
  8226                           ;incstack = 0
  8227                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  8228  0898  3000               	movlw	0
  8229  0899  3188  20B8  3188   	fcall	_maxim_31856_read_register
  8230  089C  00F7               	movwf	??_maxim_clear_fault_status
  8231  089D  0877               	movf	??_maxim_clear_fault_status,w
  8232  089E  00F9               	movwf	_uch_cr0
  8233                           
  8234                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  8235  089F  14F9               	bsf	_uch_cr0,1
  8236                           
  8237                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  8238  08A0  0879               	movf	_uch_cr0,w
  8239  08A1  00F7               	movwf	??_maxim_clear_fault_status
  8240  08A2  0877               	movf	??_maxim_clear_fault_status,w
  8241  08A3  00F4               	movwf	maxim_31856_write_register@uch_register_value
  8242  08A4  3080               	movlw	128
  8243  08A5  3188  208B         	fcall	_maxim_31856_write_register
  8244  08A7  0008               	return
  8245  08A8                     __end_of_maxim_clear_fault_status:	
  8246                           
  8247                           	psect	text35
  8248  0B12                     __ptext35:	
  8249 ;; *************** function _err_Display *****************
  8250 ;; Defined at:
  8251 ;;		line 153 in file "mcc_generated_files/ht1621.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  num             4    7[BANK0 ] unsigned char [4]
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;Total ram usage:        5 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:    5
  8272 ;; This function calls:
  8273 ;;		_WriteAll_1621
  8274 ;; This function is called by:
  8275 ;;		_temperature_display
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           
  8280                           ;psect for function _err_Display
  8281  0B12                     _err_Display:	
  8282                           
  8283                           ;ht1621.c: 155: unsigned char num[4]={0};
  8284                           
  8285                           ;incstack = 0
  8286                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8287  0B12  0021               	movlb	1	; select bank1
  8288  0B13  0827               	movf	(err_Display@F2126+3)^(0+128),w
  8289  0B14  0020               	movlb	0	; select bank0
  8290  0B15  00AA               	movwf	err_Display@num+3
  8291  0B16  0021               	movlb	1	; select bank1
  8292  0B17  0826               	movf	(err_Display@F2126+2)^(0+128),w
  8293  0B18  0020               	movlb	0	; select bank0
  8294  0B19  00A9               	movwf	err_Display@num+2
  8295  0B1A  0021               	movlb	1	; select bank1
  8296  0B1B  0825               	movf	(err_Display@F2126+1)^(0+128),w
  8297  0B1C  0020               	movlb	0	; select bank0
  8298  0B1D  00A8               	movwf	err_Display@num+1
  8299  0B1E  0021               	movlb	1	; select bank1
  8300  0B1F  0824               	movf	err_Display@F2126^(0+128),w
  8301  0B20  0020               	movlb	0	; select bank0
  8302  0B21  00A7               	movwf	err_Display@num
  8303                           
  8304                           ;ht1621.c: 156: num[1] = Dis_TAB[0x10];
  8305  0B22  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  8306  0B23  0084               	movwf	4
  8307  0B24  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  8308  0B25  0085               	movwf	5
  8309  0B26  0800               	movf	0,w	;code access
  8310  0B27  00A6               	movwf	??_err_Display
  8311  0B28  0826               	movf	??_err_Display,w
  8312  0B29  00A8               	movwf	err_Display@num+1
  8313                           
  8314                           ;ht1621.c: 157: num[2] = Dis_TAB[0x0c];
  8315  0B2A  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  8316  0B2B  0084               	movwf	4
  8317  0B2C  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  8318  0B2D  0085               	movwf	5
  8319  0B2E  0800               	movf	0,w	;code access
  8320  0B2F  00A6               	movwf	??_err_Display
  8321  0B30  0826               	movf	??_err_Display,w
  8322  0B31  00A9               	movwf	err_Display@num+2
  8323                           
  8324                           ;ht1621.c: 158: WriteAll_1621(0, num, 4);
  8325  0B32  3027               	movlw	low err_Display@num
  8326  0B33  00A0               	movwf	WriteAll_1621@p
  8327  0B34  3000               	movlw	high err_Display@num
  8328  0B35  00A1               	movwf	WriteAll_1621@p+1
  8329  0B36  3004               	movlw	4
  8330  0B37  00A6               	movwf	??_err_Display
  8331  0B38  0826               	movf	??_err_Display,w
  8332  0B39  00A2               	movwf	WriteAll_1621@cnt
  8333  0B3A  3000               	movlw	0
  8334  0B3B  318C  245F         	fcall	_WriteAll_1621
  8335  0B3D  0008               	return
  8336  0B3E                     __end_of_err_Display:	
  8337                           
  8338                           	psect	text36
  8339  0391                     __ptext36:	
  8340 ;; *************** function _Tc_Display *****************
  8341 ;; Defined at:
  8342 ;;		line 110 in file "mcc_generated_files/ht1621.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  data            2   11[BANK0 ] unsigned int 
  8347 ;;  count           1   10[BANK0 ] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;Total ram usage:        4 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    5
  8364 ;; This function calls:
  8365 ;;		_WriteAll_1621
  8366 ;;		___lwdiv
  8367 ;;		___lwmod
  8368 ;;		_memset
  8369 ;; This function is called by:
  8370 ;;		_temperature_display
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function _Tc_Display
  8376  0391                     _Tc_Display:	
  8377                           
  8378                           ;ht1621.c: 112: unsigned char count = 0;
  8379                           
  8380                           ;incstack = 0
  8381                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8382  0391  0020               	movlb	0	; select bank0
  8383  0392  01AA               	clrf	Tc_Display@count
  8384                           
  8385                           ;ht1621.c: 113: unsigned int data = temperature_int;
  8386  0393  0021               	movlb	1	; select bank1
  8387  0394  0833               	movf	(_temperature_int+1)^(0+128),w
  8388  0395  0020               	movlb	0	; select bank0
  8389  0396  00AC               	movwf	Tc_Display@data+1
  8390  0397  0021               	movlb	1	; select bank1
  8391  0398  0832               	movf	_temperature_int^(0+128),w
  8392  0399  0020               	movlb	0	; select bank0
  8393  039A  00AB               	movwf	Tc_Display@data
  8394                           
  8395                           ;ht1621.c: 114: memset(display_buff,0,4);
  8396  039B  3000               	movlw	0
  8397  039C  00F3               	movwf	memset@c
  8398  039D  00F4               	movwf	memset@c+1
  8399  039E  3004               	movlw	4
  8400  039F  00F5               	movwf	memset@n
  8401  03A0  3000               	movlw	0
  8402  03A1  00F6               	movwf	memset@n+1
  8403  03A2  30DF               	movlw	(low (_display_buff| 0))& (0+255)
  8404  03A3  3189  21E9  3183   	fcall	_memset
  8405  03A6                     l4790:	
  8406                           ;ht1621.c: 115: while(data)
  8407                           
  8408  03A6  0020               	movlb	0	; select bank0
  8409  03A7  082B               	movf	Tc_Display@data,w
  8410  03A8  042C               	iorwf	Tc_Display@data+1,w
  8411  03A9  1903               	btfsc	3,2
  8412  03AA  2C25               	goto	l4798
  8413                           
  8414                           ;ht1621.c: 116: {
  8415                           ;ht1621.c: 117: count++;
  8416  03AB  3001               	movlw	1
  8417  03AC  0020               	movlb	0	; select bank0
  8418  03AD  00A9               	movwf	??_Tc_Display
  8419  03AE  0829               	movf	??_Tc_Display,w
  8420  03AF  07AA               	addwf	Tc_Display@count,f
  8421                           
  8422                           ;ht1621.c: 118: data /=10;
  8423  03B0  300A               	movlw	10
  8424  03B1  00A1               	movwf	___lwdiv@divisor
  8425  03B2  3000               	movlw	0
  8426  03B3  00A2               	movwf	___lwdiv@divisor+1
  8427  03B4  082C               	movf	Tc_Display@data+1,w
  8428  03B5  00A4               	movwf	___lwdiv@dividend+1
  8429  03B6  082B               	movf	Tc_Display@data,w
  8430  03B7  00A3               	movwf	___lwdiv@dividend
  8431  03B8  318C  2494  3183   	fcall	___lwdiv
  8432  03BB  0020               	movlb	0	; select bank0
  8433  03BC  0822               	movf	?___lwdiv+1,w
  8434  03BD  00AC               	movwf	Tc_Display@data+1
  8435  03BE  0821               	movf	?___lwdiv,w
  8436  03BF  00AB               	movwf	Tc_Display@data
  8437  03C0  2BA6               	goto	l4790
  8438  03C1                     l4792:	
  8439                           ;ht1621.c: 121: {
  8440                           ;ht1621.c: 122: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  8441                           
  8442                           ;ht1621.c: 119: }
  8443                           ;ht1621.c: 120: switch(count)
  8444                           
  8445  03C1  3064               	movlw	100
  8446  03C2  00A1               	movwf	___lwdiv@divisor
  8447  03C3  3000               	movlw	0
  8448  03C4  00A2               	movwf	___lwdiv@divisor+1
  8449  03C5  0021               	movlb	1	; select bank1
  8450  03C6  0833               	movf	(_temperature_int+1)^(0+128),w
  8451  03C7  0020               	movlb	0	; select bank0
  8452  03C8  00A4               	movwf	___lwdiv@dividend+1
  8453  03C9  0021               	movlb	1	; select bank1
  8454  03CA  0832               	movf	_temperature_int^(0+128),w
  8455  03CB  0020               	movlb	0	; select bank0
  8456  03CC  00A3               	movwf	___lwdiv@dividend
  8457  03CD  318C  2494  3183   	fcall	___lwdiv
  8458  03D0  0020               	movlb	0	; select bank0
  8459  03D1  0822               	movf	?___lwdiv+1,w
  8460  03D2  0085               	movwf	5
  8461  03D3  0821               	movf	?___lwdiv,w
  8462  03D4  0084               	movwf	4
  8463  03D5  3000               	movlw	low (_Dis_TAB| (0+32768))
  8464  03D6  0784               	addwf	4,f
  8465  03D7  3090               	movlw	high (_Dis_TAB| (0+32768))
  8466  03D8  3D85               	addwfc	5,f
  8467  03D9  0800               	movf	0,w	;code access
  8468  03DA  00A9               	movwf	??_Tc_Display
  8469  03DB  0829               	movf	??_Tc_Display,w
  8470  03DC  0021               	movlb	1	; select bank1
  8471  03DD  00DF               	movwf	_display_buff^(0+128)
  8472  03DE                     l680:	
  8473                           ;ht1621.c: 123: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  8474                           
  8475  03DE  300A               	movlw	10
  8476  03DF  0020               	movlb	0	; select bank0
  8477  03E0  00A1               	movwf	___lwdiv@divisor
  8478  03E1  3000               	movlw	0
  8479  03E2  00A2               	movwf	___lwdiv@divisor+1
  8480  03E3  0021               	movlb	1	; select bank1
  8481  03E4  0833               	movf	(_temperature_int+1)^(0+128),w
  8482  03E5  00F6               	movwf	___lwmod@dividend+1
  8483  03E6  0832               	movf	_temperature_int^(0+128),w
  8484  03E7  00F5               	movwf	___lwmod@dividend
  8485  03E8  3064               	movlw	100
  8486  03E9  00F3               	movwf	___lwmod@divisor
  8487  03EA  3000               	movlw	0
  8488  03EB  00F4               	movwf	___lwmod@divisor+1
  8489  03EC  318B  233E  3183   	fcall	___lwmod
  8490  03EF  0874               	movf	?___lwmod+1,w
  8491  03F0  0020               	movlb	0	; select bank0
  8492  03F1  00A4               	movwf	___lwdiv@dividend+1
  8493  03F2  0873               	movf	?___lwmod,w
  8494  03F3  00A3               	movwf	___lwdiv@dividend
  8495  03F4  318C  2494  3183   	fcall	___lwdiv
  8496  03F7  0020               	movlb	0	; select bank0
  8497  03F8  0822               	movf	?___lwdiv+1,w
  8498  03F9  0085               	movwf	5
  8499  03FA  0821               	movf	?___lwdiv,w
  8500  03FB  0084               	movwf	4
  8501  03FC  3000               	movlw	low (_Dis_TAB| (0+32768))
  8502  03FD  0784               	addwf	4,f
  8503  03FE  3090               	movlw	high (_Dis_TAB| (0+32768))
  8504  03FF  3D85               	addwfc	5,f
  8505  0400  0800               	movf	0,w	;code access
  8506  0401  00A9               	movwf	??_Tc_Display
  8507  0402  0829               	movf	??_Tc_Display,w
  8508  0403  0021               	movlb	1	; select bank1
  8509  0404  00E0               	movwf	(_display_buff^(0+128)+1)
  8510  0405                     l681:	
  8511                           ;ht1621.c: 124: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  8512                           
  8513  0405  300A               	movlw	10
  8514  0406  00F3               	movwf	___lwmod@divisor
  8515  0407  3000               	movlw	0
  8516  0408  00F4               	movwf	___lwmod@divisor+1
  8517  0409  0021               	movlb	1	; select bank1
  8518  040A  0833               	movf	(_temperature_int+1)^(0+128),w
  8519  040B  00F6               	movwf	___lwmod@dividend+1
  8520  040C  0832               	movf	_temperature_int^(0+128),w
  8521  040D  00F5               	movwf	___lwmod@dividend
  8522  040E  318B  233E  3183   	fcall	___lwmod
  8523  0411  0874               	movf	?___lwmod+1,w
  8524  0412  0085               	movwf	5
  8525  0413  0873               	movf	?___lwmod,w
  8526  0414  0084               	movwf	4
  8527  0415  3000               	movlw	low (_Dis_TAB| (0+32768))
  8528  0416  0784               	addwf	4,f
  8529  0417  3090               	movlw	high (_Dis_TAB| (0+32768))
  8530  0418  3D85               	addwfc	5,f
  8531  0419  2C1E               	goto	L8
  8532  041A                     l4794:	
  8533                           ;ht1621.c: 125: case 0:display_buff[2] = Dis_TAB[0];
  8534                           
  8535  041A  3000               	movlw	low (_Dis_TAB| (0+32768))
  8536  041B  0084               	movwf	4
  8537  041C  3090               	movlw	high (_Dis_TAB| (0+32768))
  8538  041D  0085               	movwf	5
  8539  041E                     L8:	
  8540  041E  0800               	movf	0,w	;code access
  8541  041F  0020               	movlb	0	; select bank0
  8542  0420  00A9               	movwf	??_Tc_Display
  8543  0421  0829               	movf	??_Tc_Display,w
  8544  0422  0021               	movlb	1	; select bank1
  8545  0423  00E1               	movwf	(_display_buff^(0+128)+2)
  8546                           
  8547                           ;ht1621.c: 127: }
  8548                           
  8549                           ;ht1621.c: 126: default:break;
  8550  0424  2C34               	goto	l4800
  8551  0425                     l4798:	
  8552  0425  0020               	movlb	0	; select bank0
  8553  0426  082A               	movf	Tc_Display@count,w
  8554                           
  8555                           ; Switch size 1, requested type "space"
  8556                           ; Number of cases is 4, Range of values is 0 to 3
  8557                           ; switch strategies available:
  8558                           ; Name         Instructions Cycles
  8559                           ; simple_byte           13     7 (average)
  8560                           ; direct_byte           14     6 (fixed)
  8561                           ; jumptable            260     6 (fixed)
  8562                           ;	Chosen strategy is simple_byte
  8563  0427  3A00               	xorlw	0	; case 0
  8564  0428  1903               	skipnz
  8565  0429  2C1A               	goto	l4794
  8566  042A  3A01               	xorlw	1	; case 1
  8567  042B  1903               	skipnz
  8568  042C  2C05               	goto	l681
  8569  042D  3A03               	xorlw	3	; case 2
  8570  042E  1903               	skipnz
  8571  042F  2BDE               	goto	l680
  8572  0430  3A01               	xorlw	1	; case 3
  8573  0431  1903               	skipnz
  8574  0432  2BC1               	goto	l4792
  8575  0433  2C34               	goto	l4800
  8576  0434                     l4800:	
  8577                           
  8578                           ;ht1621.c: 128: if(temperature_sign == 1) display_buff[0]=0x20;
  8579  0434  0021               	movlb	1	; select bank1
  8580  0435  0339               	decf	_temperature_sign^(0+128),w
  8581  0436  1D03               	btfss	3,2
  8582  0437  2C3E               	goto	l4804
  8583  0438  3020               	movlw	32
  8584  0439  0020               	movlb	0	; select bank0
  8585  043A  00A9               	movwf	??_Tc_Display
  8586  043B  0829               	movf	??_Tc_Display,w
  8587  043C  0021               	movlb	1	; select bank1
  8588  043D  00DF               	movwf	_display_buff^(0+128)
  8589  043E                     l4804:	
  8590                           
  8591                           ;ht1621.c: 129: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  8592  043E  0020               	movlb	0	; select bank0
  8593  043F  086C               	movf	_temperature_decimal,w
  8594  0440  3E00               	addlw	low (_Dis_TAB| (0+32768))
  8595  0441  0084               	movwf	4
  8596  0442  3090               	movlw	high (_Dis_TAB| (0+32768))
  8597  0443  1803               	skipnc
  8598  0444  3E01               	addlw	1
  8599  0445  0085               	movwf	5
  8600  0446  0800               	movf	0,w	;code access
  8601  0447  3808               	iorlw	8
  8602  0448  00A9               	movwf	??_Tc_Display
  8603  0449  0829               	movf	??_Tc_Display,w
  8604  044A  0021               	movlb	1	; select bank1
  8605  044B  00E2               	movwf	(_display_buff^(0+128)+3)
  8606                           
  8607                           ;ht1621.c: 130: WriteAll_1621(0,display_buff,4);
  8608  044C  30DF               	movlw	low _display_buff
  8609  044D  0020               	movlb	0	; select bank0
  8610  044E  00A0               	movwf	WriteAll_1621@p
  8611  044F  3000               	movlw	high _display_buff
  8612  0450  00A1               	movwf	WriteAll_1621@p+1
  8613  0451  3004               	movlw	4
  8614  0452  00A9               	movwf	??_Tc_Display
  8615  0453  0829               	movf	??_Tc_Display,w
  8616  0454  00A2               	movwf	WriteAll_1621@cnt
  8617  0455  3000               	movlw	0
  8618  0456  318C  245F         	fcall	_WriteAll_1621
  8619  0458  0008               	return
  8620  0459                     __end_of_Tc_Display:	
  8621                           
  8622                           	psect	text37
  8623  09E9                     __ptext37:	
  8624 ;; *************** function _memset *****************
  8625 ;; Defined at:
  8626 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  p1              1    wreg     PTR void 
  8629 ;;		 -> display_buff(4), 
  8630 ;;  c               2    3[COMMON] int 
  8631 ;;  n               2    5[COMMON] unsigned int 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  p1              1    0[BANK0 ] PTR void 
  8634 ;;		 -> display_buff(4), 
  8635 ;;  p               1    1[BANK0 ] PTR unsigned char 
  8636 ;;		 -> display_buff(4), 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      PTR void 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;Total ram usage:        7 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    3
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_Tc_Display
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           
  8661                           ;psect for function _memset
  8662  09E9                     _memset:	
  8663                           
  8664                           ;incstack = 0
  8665                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8666                           ;memset@p1 stored from wreg
  8667  09E9  0020               	movlb	0	; select bank0
  8668  09EA  00A0               	movwf	memset@p1
  8669  09EB  0820               	movf	memset@p1,w
  8670  09EC  00F7               	movwf	??_memset
  8671  09ED  0877               	movf	??_memset,w
  8672  09EE  00A1               	movwf	memset@p
  8673  09EF                     l4578:	
  8674  09EF  3001               	movlw	1
  8675  09F0  02F5               	subwf	memset@n,f
  8676  09F1  3000               	movlw	0
  8677  09F2  3BF6               	subwfb	memset@n+1,f
  8678  09F3  0A75               	incf	memset@n,w
  8679  09F4  1903               	btfsc	3,2
  8680  09F5  0A76               	incf	memset@n+1,w
  8681  09F6  1903               	btfsc	3,2
  8682  09F7  0008               	return
  8683  09F8  0873               	movf	memset@c,w
  8684  09F9  00F7               	movwf	??_memset
  8685  09FA  0821               	movf	memset@p,w
  8686  09FB  0086               	movwf	6
  8687  09FC  0187               	clrf	7
  8688  09FD  0877               	movf	??_memset,w
  8689  09FE  0081               	movwf	1
  8690  09FF  3001               	movlw	1
  8691  0A00  00F7               	movwf	??_memset
  8692  0A01  0877               	movf	??_memset,w
  8693  0A02  07A1               	addwf	memset@p,f
  8694  0A03  29EF               	goto	l4578
  8695  0A04                     __end_of_memset:	
  8696                           ;	Return value of _memset is never used
  8697                           
  8698                           
  8699                           	psect	text38
  8700  0B3E                     __ptext38:	
  8701 ;; *************** function ___lwmod *****************
  8702 ;; Defined at:
  8703 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  divisor         2    3[COMMON] unsigned int 
  8706 ;;  dividend        2    5[COMMON] unsigned int 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  counter         1    0[BANK0 ] unsigned char 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  2    3[COMMON] unsigned int 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, status,0
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;Total ram usage:        6 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:    3
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_Tc_Display
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           
  8733                           ;psect for function ___lwmod
  8734  0B3E                     ___lwmod:	
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8738  0B3E  0873               	movf	___lwmod@divisor,w
  8739  0B3F  0474               	iorwf	___lwmod@divisor+1,w
  8740  0B40  1903               	btfsc	3,2
  8741  0B41  2B66               	goto	l4624
  8742  0B42  0020               	movlb	0	; select bank0
  8743  0B43  01A0               	clrf	___lwmod@counter
  8744  0B44  0AA0               	incf	___lwmod@counter,f
  8745  0B45                     l4614:	
  8746  0B45  1BF4               	btfsc	___lwmod@divisor+1,7
  8747  0B46  2B51               	goto	l4616
  8748  0B47  3001               	movlw	1
  8749  0B48                     u3995:	
  8750  0B48  35F3               	lslf	___lwmod@divisor,f
  8751  0B49  0DF4               	rlf	___lwmod@divisor+1,f
  8752  0B4A  0B89               	decfsz	9,f
  8753  0B4B  2B48               	goto	u3995
  8754  0B4C  3001               	movlw	1
  8755  0B4D  00F7               	movwf	??___lwmod
  8756  0B4E  0877               	movf	??___lwmod,w
  8757  0B4F  07A0               	addwf	___lwmod@counter,f
  8758  0B50  2B45               	goto	l4614
  8759  0B51                     l4616:	
  8760  0B51  0874               	movf	___lwmod@divisor+1,w
  8761  0B52  0276               	subwf	___lwmod@dividend+1,w
  8762  0B53  1D03               	skipz
  8763  0B54  2B57               	goto	u4015
  8764  0B55  0873               	movf	___lwmod@divisor,w
  8765  0B56  0275               	subwf	___lwmod@dividend,w
  8766  0B57                     u4015:	
  8767  0B57  1C03               	skipc
  8768  0B58  2B5D               	goto	l4620
  8769  0B59  0873               	movf	___lwmod@divisor,w
  8770  0B5A  02F5               	subwf	___lwmod@dividend,f
  8771  0B5B  0874               	movf	___lwmod@divisor+1,w
  8772  0B5C  3BF6               	subwfb	___lwmod@dividend+1,f
  8773  0B5D                     l4620:	
  8774  0B5D  3001               	movlw	1
  8775  0B5E                     u4025:	
  8776  0B5E  36F4               	lsrf	___lwmod@divisor+1,f
  8777  0B5F  0CF3               	rrf	___lwmod@divisor,f
  8778  0B60  0B89               	decfsz	9,f
  8779  0B61  2B5E               	goto	u4025
  8780  0B62  3001               	movlw	1
  8781  0B63  02A0               	subwf	___lwmod@counter,f
  8782  0B64  1D03               	btfss	3,2
  8783  0B65  2B51               	goto	l4616
  8784  0B66                     l4624:	
  8785  0B66  0876               	movf	___lwmod@dividend+1,w
  8786  0B67  00F4               	movwf	?___lwmod+1
  8787  0B68  0875               	movf	___lwmod@dividend,w
  8788  0B69  00F3               	movwf	?___lwmod
  8789  0B6A  0008               	return
  8790  0B6B                     __end_of___lwmod:	
  8791                           
  8792                           	psect	text39
  8793  0C94                     __ptext39:	
  8794 ;; *************** function ___lwdiv *****************
  8795 ;; Defined at:
  8796 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  divisor         2    1[BANK0 ] unsigned int 
  8799 ;;  dividend        2    3[BANK0 ] unsigned int 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  quotient        2    7[BANK0 ] unsigned int 
  8802 ;;  counter         1    6[BANK0 ] unsigned char 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2    1[BANK0 ] unsigned int 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;Total ram usage:        8 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    3
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		_Tc_Display
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           
  8827                           ;psect for function ___lwdiv
  8828  0C94                     ___lwdiv:	
  8829                           
  8830                           ;incstack = 0
  8831                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8832  0C94  0020               	movlb	0	; select bank0
  8833  0C95  01A7               	clrf	___lwdiv@quotient
  8834  0C96  01A8               	clrf	___lwdiv@quotient+1
  8835  0C97  0821               	movf	___lwdiv@divisor,w
  8836  0C98  0422               	iorwf	___lwdiv@divisor+1,w
  8837  0C99  1903               	btfsc	3,2
  8838  0C9A  2CC4               	goto	l4602
  8839  0C9B  01A6               	clrf	___lwdiv@counter
  8840  0C9C  0AA6               	incf	___lwdiv@counter,f
  8841  0C9D                     l4590:	
  8842  0C9D  1BA2               	btfsc	___lwdiv@divisor+1,7
  8843  0C9E  2CA9               	goto	l4592
  8844  0C9F  3001               	movlw	1
  8845  0CA0                     u3925:	
  8846  0CA0  35A1               	lslf	___lwdiv@divisor,f
  8847  0CA1  0DA2               	rlf	___lwdiv@divisor+1,f
  8848  0CA2  0B89               	decfsz	9,f
  8849  0CA3  2CA0               	goto	u3925
  8850  0CA4  3001               	movlw	1
  8851  0CA5  00A5               	movwf	??___lwdiv
  8852  0CA6  0825               	movf	??___lwdiv,w
  8853  0CA7  07A6               	addwf	___lwdiv@counter,f
  8854  0CA8  2C9D               	goto	l4590
  8855  0CA9                     l4592:	
  8856  0CA9  3001               	movlw	1
  8857  0CAA                     u3945:	
  8858  0CAA  35A7               	lslf	___lwdiv@quotient,f
  8859  0CAB  0DA8               	rlf	___lwdiv@quotient+1,f
  8860  0CAC  0B89               	decfsz	9,f
  8861  0CAD  2CAA               	goto	u3945
  8862  0CAE  0822               	movf	___lwdiv@divisor+1,w
  8863  0CAF  0224               	subwf	___lwdiv@dividend+1,w
  8864  0CB0  1D03               	skipz
  8865  0CB1  2CB4               	goto	u3955
  8866  0CB2  0821               	movf	___lwdiv@divisor,w
  8867  0CB3  0223               	subwf	___lwdiv@dividend,w
  8868  0CB4                     u3955:	
  8869  0CB4  1C03               	skipc
  8870  0CB5  2CBB               	goto	l4598
  8871  0CB6  0821               	movf	___lwdiv@divisor,w
  8872  0CB7  02A3               	subwf	___lwdiv@dividend,f
  8873  0CB8  0822               	movf	___lwdiv@divisor+1,w
  8874  0CB9  3BA4               	subwfb	___lwdiv@dividend+1,f
  8875  0CBA  1427               	bsf	___lwdiv@quotient,0
  8876  0CBB                     l4598:	
  8877  0CBB  3001               	movlw	1
  8878  0CBC                     u3965:	
  8879  0CBC  36A2               	lsrf	___lwdiv@divisor+1,f
  8880  0CBD  0CA1               	rrf	___lwdiv@divisor,f
  8881  0CBE  0B89               	decfsz	9,f
  8882  0CBF  2CBC               	goto	u3965
  8883  0CC0  3001               	movlw	1
  8884  0CC1  02A6               	subwf	___lwdiv@counter,f
  8885  0CC2  1D03               	btfss	3,2
  8886  0CC3  2CA9               	goto	l4592
  8887  0CC4                     l4602:	
  8888  0CC4  0828               	movf	___lwdiv@quotient+1,w
  8889  0CC5  00A2               	movwf	?___lwdiv+1
  8890  0CC6  0827               	movf	___lwdiv@quotient,w
  8891  0CC7  00A1               	movwf	?___lwdiv
  8892  0CC8  0008               	return
  8893  0CC9                     __end_of___lwdiv:	
  8894                           
  8895                           	psect	text40
  8896  0E02                     __ptext40:	
  8897 ;; *************** function _one_temperature_trans *****************
  8898 ;; Defined at:
  8899 ;;		line 277 in file "mcc_generated_files/max31856.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;Total ram usage:        2 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    6
  8920 ;; This function calls:
  8921 ;;		_maxim_31856_read_nregisters
  8922 ;;		_maxim_start_conversion
  8923 ;; This function is called by:
  8924 ;;		_temperature_process
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _one_temperature_trans
  8930  0E02                     _one_temperature_trans:	
  8931                           
  8932                           ;max31856.c: 279: maxim_start_conversion((uint8_t) 0x40);
  8933                           
  8934                           ;incstack = 0
  8935                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8936  0E02  3040               	movlw	64
  8937  0E03  3189  2199  318E   	fcall	_maxim_start_conversion
  8938                           
  8939                           ;max31856.c: 280: MAX31856Sec = 0;
  8940  0E06  0021               	movlb	1	; select bank1
  8941  0E07  01B8               	clrf	_MAX31856Sec^(0+128)
  8942  0E08                     l541:	
  8943                           ;max31856.c: 281: while( !(RB3 == 0 || MAX31856Sec > 30) ) ;
  8944                           
  8945  0E08  0020               	movlb	0	; select bank0
  8946  0E09  1D8D               	btfss	13,3	;volatile
  8947  0E0A  2E10               	goto	l4904
  8948  0E0B  301F               	movlw	31
  8949  0E0C  0021               	movlb	1	; select bank1
  8950  0E0D  0238               	subwf	_MAX31856Sec^(0+128),w
  8951  0E0E  1C03               	skipc
  8952  0E0F  2E08               	goto	l541
  8953  0E10                     l4904:	
  8954                           
  8955                           ;max31856.c: 282: if( MAX31856Sec > 30)
  8956  0E10  301F               	movlw	31
  8957  0E11  0021               	movlb	1	; select bank1
  8958  0E12  0238               	subwf	_MAX31856Sec^(0+128),w
  8959  0E13  1C03               	skipc
  8960  0E14  2E18               	goto	l4908
  8961                           
  8962                           ;max31856.c: 283: {
  8963                           ;max31856.c: 284: uch_sr = 0x01;
  8964  0E15  01C1               	clrf	_uch_sr^(0+128)
  8965  0E16  0AC1               	incf	_uch_sr^(0+128),f
  8966                           
  8967                           ;max31856.c: 285: }
  8968  0E17  0008               	return
  8969  0E18                     l4908:	
  8970                           
  8971                           ;max31856.c: 286: else
  8972                           ;max31856.c: 287: {
  8973                           ;max31856.c: 288: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  8974  0E18  30C2               	movlw	(low (_uch_reg| 0))& (0+255)
  8975  0E19  0020               	movlb	0	; select bank0
  8976  0E1A  00A8               	movwf	??_one_temperature_trans
  8977  0E1B  0828               	movf	??_one_temperature_trans,w
  8978  0E1C  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  8979  0E1D  3006               	movlw	6
  8980  0E1E  00A9               	movwf	??_one_temperature_trans+1
  8981  0E1F  0829               	movf	??_one_temperature_trans+1,w
  8982  0E20  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  8983  0E21  300A               	movlw	10
  8984  0E22  3189  211C         	fcall	_maxim_31856_read_nregisters
  8985                           
  8986                           ;max31856.c: 289: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  8987  0E24  0021               	movlb	1	; select bank1
  8988  0E25  0842               	movf	_uch_reg^(0+128),w
  8989  0E26  0020               	movlb	0	; select bank0
  8990  0E27  00A8               	movwf	??_one_temperature_trans
  8991  0E28  0828               	movf	??_one_temperature_trans,w
  8992  0E29  0021               	movlb	1	; select bank1
  8993  0E2A  00BB               	movwf	_uch_cjth^(0+128)
  8994  0E2B  0843               	movf	(_uch_reg^(0+128)+1),w
  8995  0E2C  0020               	movlb	0	; select bank0
  8996  0E2D  00A8               	movwf	??_one_temperature_trans
  8997  0E2E  0828               	movf	??_one_temperature_trans,w
  8998  0E2F  0021               	movlb	1	; select bank1
  8999  0E30  00BC               	movwf	_uch_cjtl^(0+128)
  9000                           
  9001                           ;max31856.c: 290: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  9002  0E31  0844               	movf	(_uch_reg^(0+128)+2),w
  9003  0E32  0020               	movlb	0	; select bank0
  9004  0E33  00A8               	movwf	??_one_temperature_trans
  9005  0E34  0828               	movf	??_one_temperature_trans,w
  9006  0E35  00FA               	movwf	_uch_ltcbh
  9007  0E36  0021               	movlb	1	; select bank1
  9008  0E37  0845               	movf	(_uch_reg^(0+128)+3),w
  9009  0E38  0020               	movlb	0	; select bank0
  9010  0E39  00A8               	movwf	??_one_temperature_trans
  9011  0E3A  0828               	movf	??_one_temperature_trans,w
  9012  0E3B  0021               	movlb	1	; select bank1
  9013  0E3C  00BF               	movwf	_uch_ltcbm^(0+128)
  9014  0E3D  0846               	movf	(_uch_reg^(0+128)+4),w
  9015  0E3E  0020               	movlb	0	; select bank0
  9016  0E3F  00A8               	movwf	??_one_temperature_trans
  9017  0E40  0828               	movf	??_one_temperature_trans,w
  9018  0E41  0021               	movlb	1	; select bank1
  9019  0E42  00BE               	movwf	_uch_ltcbl^(0+128)
  9020                           
  9021                           ;max31856.c: 291: uch_sr=uch_reg[5];
  9022  0E43  0847               	movf	(_uch_reg^(0+128)+5),w
  9023  0E44  0020               	movlb	0	; select bank0
  9024  0E45  00A8               	movwf	??_one_temperature_trans
  9025  0E46  0828               	movf	??_one_temperature_trans,w
  9026  0E47  0021               	movlb	1	; select bank1
  9027  0E48  00C1               	movwf	_uch_sr^(0+128)
  9028  0E49  0008               	return
  9029  0E4A                     __end_of_one_temperature_trans:	
  9030                           
  9031                           	psect	text41
  9032  0999                     __ptext41:	
  9033 ;; *************** function _maxim_start_conversion *****************
  9034 ;; Defined at:
  9035 ;;		line 114 in file "mcc_generated_files/max31856.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  uch_conversi    1    wreg     unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;Total ram usage:        2 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    5
  9056 ;; This function calls:
  9057 ;;		_maxim_31856_read_register
  9058 ;;		_maxim_31856_write_register
  9059 ;; This function is called by:
  9060 ;;		_one_temperature_trans
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           
  9065                           ;psect for function _maxim_start_conversion
  9066  0999                     _maxim_start_conversion:	
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  9070                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  9071  0999  0020               	movlb	0	; select bank0
  9072  099A  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  9073                           
  9074                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  9075  099B  3000               	movlw	0
  9076  099C  3188  20B8  3189   	fcall	_maxim_31856_read_register
  9077  099F  00F7               	movwf	??_maxim_start_conversion
  9078  09A0  0877               	movf	??_maxim_start_conversion,w
  9079  09A1  00F9               	movwf	_uch_cr0
  9080                           
  9081                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  9082  09A2  303F               	movlw	63
  9083  09A3  00F7               	movwf	??_maxim_start_conversion
  9084  09A4  0877               	movf	??_maxim_start_conversion,w
  9085  09A5  05F9               	andwf	_uch_cr0,f
  9086                           
  9087                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  9088  09A6  0020               	movlb	0	; select bank0
  9089  09A7  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  9090  09A8  00F7               	movwf	??_maxim_start_conversion
  9091  09A9  0877               	movf	??_maxim_start_conversion,w
  9092  09AA  04F9               	iorwf	_uch_cr0,f
  9093                           
  9094                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  9095  09AB  0879               	movf	_uch_cr0,w
  9096  09AC  00F7               	movwf	??_maxim_start_conversion
  9097  09AD  0877               	movf	??_maxim_start_conversion,w
  9098  09AE  00F4               	movwf	maxim_31856_write_register@uch_register_value
  9099  09AF  3080               	movlw	128
  9100  09B0  3188  208B         	fcall	_maxim_31856_write_register
  9101  09B2  0008               	return
  9102  09B3                     __end_of_maxim_start_conversion:	
  9103                           
  9104                           	psect	text42
  9105  088B                     __ptext42:	
  9106 ;; *************** function _maxim_31856_write_register *****************
  9107 ;; Defined at:
  9108 ;;		line 20 in file "mcc_generated_files/max31856.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  uch_register    1    wreg     unsigned char 
  9111 ;;  uch_register    1    4[COMMON] unsigned char 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;  uch_register    1    5[COMMON] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    4
  9130 ;; This function calls:
  9131 ;;		_SPI_Exchange8bit
  9132 ;; This function is called by:
  9133 ;;		_maxim_31856_init
  9134 ;;		_maxim_start_conversion
  9135 ;;		_maxim_clear_fault_status
  9136 ;;		_temperature_display
  9137 ;;		_maxim_stop_conversion
  9138 ;;		_maxim_disable_oc_fault_detection
  9139 ;;		_maxim_set_oc_fault_detection
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function _maxim_31856_write_register
  9145  088B                     _maxim_31856_write_register:	
  9146                           
  9147                           ;incstack = 0
  9148                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  9149                           ;maxim_31856_write_register@uch_register_address stored from wreg
  9150  088B  00F5               	movwf	maxim_31856_write_register@uch_register_address
  9151                           
  9152                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  9153  088C  0022               	movlb	2	; select bank2
  9154  088D  128C               	bcf	12,5	;volatile
  9155                           
  9156                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  9157  088E  0875               	movf	maxim_31856_write_register@uch_register_address,w
  9158  088F  3188  206C  3188   	fcall	_SPI_Exchange8bit
  9159                           
  9160                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  9161  0892  0874               	movf	maxim_31856_write_register@uch_register_value,w
  9162  0893  3188  206C         	fcall	_SPI_Exchange8bit
  9163                           
  9164                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  9165  0895  0022               	movlb	2	; select bank2
  9166  0896  168C               	bsf	12,5	;volatile
  9167  0897  0008               	return
  9168  0898                     __end_of_maxim_31856_write_register:	
  9169                           
  9170                           	psect	text43
  9171  08B8                     __ptext43:	
  9172 ;; *************** function _maxim_31856_read_register *****************
  9173 ;; Defined at:
  9174 ;;		line 34 in file "mcc_generated_files/max31856.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  uch_register    1    wreg     unsigned char 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  uch_register    1    5[COMMON] unsigned char 
  9179 ;;  uch_register    1    6[COMMON] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      unsigned char 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0, pclath, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;Total ram usage:        3 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    4
  9196 ;; This function calls:
  9197 ;;		_SPI_Exchange8bit
  9198 ;; This function is called by:
  9199 ;;		_maxim_start_conversion
  9200 ;;		_maxim_clear_fault_status
  9201 ;;		_maxim_stop_conversion
  9202 ;;		_maxim_disable_oc_fault_detection
  9203 ;;		_maxim_set_oc_fault_detection
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           
  9208                           ;psect for function _maxim_31856_read_register
  9209  08B8                     _maxim_31856_read_register:	
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  9213                           ;maxim_31856_read_register@uch_register_address stored from wreg
  9214  08B8  00F5               	movwf	maxim_31856_read_register@uch_register_address
  9215                           
  9216                           ;max31856.c: 36: uint8_t uch_register_data;
  9217                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  9218  08B9  0022               	movlb	2	; select bank2
  9219  08BA  128C               	bcf	12,5	;volatile
  9220                           
  9221                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  9222  08BB  0875               	movf	maxim_31856_read_register@uch_register_address,w
  9223  08BC  3188  206C  3188   	fcall	_SPI_Exchange8bit
  9224                           
  9225                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  9226  08BF  30FF               	movlw	255
  9227  08C0  3188  206C         	fcall	_SPI_Exchange8bit
  9228  08C2  00F4               	movwf	??_maxim_31856_read_register
  9229  08C3  0874               	movf	??_maxim_31856_read_register,w
  9230  08C4  00F6               	movwf	maxim_31856_read_register@uch_register_data
  9231                           
  9232                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  9233  08C5  0022               	movlb	2	; select bank2
  9234  08C6  168C               	bsf	12,5	;volatile
  9235                           
  9236                           ;max31856.c: 41: return (uch_register_data);
  9237  08C7  0876               	movf	maxim_31856_read_register@uch_register_data,w
  9238  08C8  0008               	return
  9239  08C9                     __end_of_maxim_31856_read_register:	
  9240                           
  9241                           	psect	text44
  9242  091C                     __ptext44:	
  9243 ;; *************** function _maxim_31856_read_nregisters *****************
  9244 ;; Defined at:
  9245 ;;		line 50 in file "mcc_generated_files/max31856.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  uch_register    1    wreg     unsigned char 
  9248 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  9249 ;;		 -> uch_reg(8), 
  9250 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  uch_register    1    7[BANK0 ] unsigned char 
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        5 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    5
  9269 ;; This function calls:
  9270 ;;		_SPI_Exchange8bit
  9271 ;;		_SPI_Exchange8bitBuffer
  9272 ;; This function is called by:
  9273 ;;		_one_temperature_trans
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           
  9278                           ;psect for function _maxim_31856_read_nregisters
  9279  091C                     _maxim_31856_read_nregisters:	
  9280                           
  9281                           ;incstack = 0
  9282                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9283                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  9284  091C  0020               	movlb	0	; select bank0
  9285  091D  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  9286                           
  9287                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  9288  091E  0022               	movlb	2	; select bank2
  9289  091F  128C               	bcf	12,5	;volatile
  9290                           
  9291                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  9292  0920  0020               	movlb	0	; select bank0
  9293  0921  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  9294  0922  3188  206C  3189   	fcall	_SPI_Exchange8bit
  9295                           
  9296                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  9297  0925  0020               	movlb	0	; select bank0
  9298  0926  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  9299  0927  00A5               	movwf	??_maxim_31856_read_nregisters
  9300  0928  0825               	movf	??_maxim_31856_read_nregisters,w
  9301  0929  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  9302  092A  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  9303  092B  00A6               	movwf	??_maxim_31856_read_nregisters+1
  9304  092C  0826               	movf	??_maxim_31856_read_nregisters+1,w
  9305  092D  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  9306  092E  3000               	movlw	0
  9307  092F  318E  2696         	fcall	_SPI_Exchange8bitBuffer
  9308                           
  9309                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  9310  0931  0022               	movlb	2	; select bank2
  9311  0932  168C               	bsf	12,5	;volatile
  9312  0933  0008               	return
  9313  0934                     __end_of_maxim_31856_read_nregisters:	
  9314                           
  9315                           	psect	text45
  9316  0E96                     __ptext45:	
  9317 ;; *************** function _SPI_Exchange8bitBuffer *****************
  9318 ;; Defined at:
  9319 ;;		line 89 in file "mcc_generated_files/spi.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  dataIn          1    wreg     PTR unsigned char 
  9322 ;;		 -> NULL(0), 
  9323 ;;  bufLen          1    4[COMMON] unsigned char 
  9324 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  9325 ;;		 -> uch_reg(8), 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  9328 ;;		 -> NULL(0), 
  9329 ;;  bytesWritten    1    7[COMMON] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      unsigned char 
  9332 ;; Registers used:
  9333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9343 ;;Total ram usage:        7 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    4
  9346 ;; This function calls:
  9347 ;;		_SPI_Exchange8bit
  9348 ;; This function is called by:
  9349 ;;		_maxim_31856_read_nregisters
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function _SPI_Exchange8bitBuffer
  9355  0E96                     _SPI_Exchange8bitBuffer:	
  9356                           
  9357                           ;incstack = 0
  9358                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9359                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  9360  0E96  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  9361                           
  9362                           ;spi.c: 90: uint8_t bytesWritten = 0;
  9363  0E97  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  9364                           
  9365                           ;spi.c: 92: if (bufLen != 0) {
  9366  0E98  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9367  0E99  1903               	btfsc	3,2
  9368  0E9A  0008               	return
  9369                           
  9370                           ;spi.c: 93: if (dataIn != (0)) {
  9371  0E9B  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  9372  0E9C  1D03               	btfss	3,2
  9373  0E9D  2EC8               	goto	l4478
  9374  0E9E  2ECD               	goto	l4480
  9375  0E9F                     l4470:	
  9376                           ;spi.c: 94: while (bytesWritten < bufLen) {
  9377                           
  9378                           
  9379                           ;spi.c: 95: if (dataOut == (0)) {
  9380  0E9F  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9381  0EA0  1D03               	btfss	3,2
  9382  0EA1  2EAE               	goto	l4474
  9383                           
  9384                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  9385  0EA2  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9386  0EA3  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9387  0EA4  0020               	movlb	0	; select bank0
  9388  0EA5  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9389  0EA6  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9390  0EA7  0086               	movwf	6
  9391  0EA8  0187               	clrf	7
  9392  0EA9  0801               	movf	1,w
  9393  0EAA  3188  206C  318E   	fcall	_SPI_Exchange8bit
  9394                           
  9395                           ;spi.c: 97: } else {
  9396  0EAD  2EC3               	goto	l4476
  9397  0EAE                     l4474:	
  9398                           
  9399                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  9400  0EAE  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9401  0EAF  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9402  0EB0  0020               	movlb	0	; select bank0
  9403  0EB1  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9404  0EB2  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9405  0EB3  0086               	movwf	6
  9406  0EB4  0187               	clrf	7
  9407  0EB5  0801               	movf	1,w
  9408  0EB6  3188  206C  318E   	fcall	_SPI_Exchange8bit
  9409  0EB9  0020               	movlb	0	; select bank0
  9410  0EBA  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9411  0EBB  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9412  0EBC  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9413  0EBD  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  9414  0EBE  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  9415  0EBF  0086               	movwf	6
  9416  0EC0  0187               	clrf	7
  9417  0EC1  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9418  0EC2  0081               	movwf	1
  9419  0EC3                     l4476:	
  9420                           
  9421                           ;spi.c: 99: }
  9422                           ;spi.c: 101: bytesWritten++;
  9423  0EC3  3001               	movlw	1
  9424  0EC4  0020               	movlb	0	; select bank0
  9425  0EC5  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9426  0EC6  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9427  0EC7  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9428  0EC8                     l4478:	
  9429  0EC8  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9430  0EC9  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9431  0ECA  1803               	btfsc	3,0
  9432  0ECB  0008               	return
  9433  0ECC  2E9F               	goto	l4470
  9434  0ECD                     l4480:	
  9435                           ;spi.c: 102: }
  9436                           ;spi.c: 103: } else {
  9437                           
  9438                           
  9439                           ;spi.c: 104: if (dataOut != (0)) {
  9440  0ECD  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9441  0ECE  1903               	btfsc	3,2
  9442  0ECF  0008               	return
  9443  0ED0                     l4488:	
  9444  0ED0  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9445  0ED1  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9446  0ED2  1803               	btfsc	3,0
  9447  0ED3  0008               	return
  9448                           
  9449                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  9450                           
  9451                           ;spi.c: 105: while (bytesWritten < bufLen) {
  9452  0ED4  3000               	movlw	0
  9453  0ED5  3188  206C  318E   	fcall	_SPI_Exchange8bit
  9454  0ED8  0020               	movlb	0	; select bank0
  9455  0ED9  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9456  0EDA  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9457  0EDB  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9458  0EDC  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9459  0EDD  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9460  0EDE  0086               	movwf	6
  9461  0EDF  0187               	clrf	7
  9462  0EE0  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9463  0EE1  0081               	movwf	1
  9464                           
  9465                           ;spi.c: 108: bytesWritten++;
  9466  0EE2  3001               	movlw	1
  9467  0EE3  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9468  0EE4  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9469  0EE5  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9470  0EE6  2ED0               	goto	l4488
  9471  0EE7                     __end_of_SPI_Exchange8bitBuffer:	
  9472                           ;spi.c: 109: }
  9473                           ;spi.c: 110: }
  9474                           ;spi.c: 111: }
  9475                           ;spi.c: 112: }
  9476                           ;spi.c: 114: return bytesWritten;
  9477                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  9478                           
  9479                           
  9480                           	psect	text46
  9481  086C                     __ptext46:	
  9482 ;; *************** function _SPI_Exchange8bit *****************
  9483 ;; Defined at:
  9484 ;;		line 77 in file "mcc_generated_files/spi.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  data            1    wreg     unsigned char 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  data            1    3[COMMON] unsigned char 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      unsigned char 
  9491 ;; Registers used:
  9492 ;;		wreg
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;Total ram usage:        1 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    3
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_SPI_Exchange8bitBuffer
  9509 ;;		_maxim_31856_write_register
  9510 ;;		_maxim_31856_read_register
  9511 ;;		_maxim_31856_read_nregisters
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           
  9516                           ;psect for function _SPI_Exchange8bit
  9517  086C                     _SPI_Exchange8bit:	
  9518                           
  9519                           ;incstack = 0
  9520                           ; Regs used in _SPI_Exchange8bit: [wreg]
  9521                           ;SPI_Exchange8bit@data stored from wreg
  9522  086C  00F3               	movwf	SPI_Exchange8bit@data
  9523                           
  9524                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  9525  086D  0024               	movlb	4	; select bank4
  9526  086E  1395               	bcf	21,7	;volatile
  9527                           
  9528                           ;spi.c: 81: SSPBUF = data;
  9529  086F  0873               	movf	SPI_Exchange8bit@data,w
  9530  0870  0091               	movwf	17	;volatile
  9531  0871                     l71:	
  9532                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  9533                           
  9534  0871  1C14               	btfss	20,0	;volatile
  9535  0872  2871               	goto	l71
  9536                           
  9537                           ;spi.c: 84: }
  9538                           ;spi.c: 86: return (SSPBUF);
  9539  0873  0811               	movf	17,w	;volatile
  9540  0874  0008               	return
  9541  0875                     __end_of_SPI_Exchange8bit:	
  9542                           
  9543                           	psect	text47
  9544  0BC9                     __ptext47:	
  9545 ;; *************** function _Two_Display *****************
  9546 ;; Defined at:
  9547 ;;		line 139 in file "mcc_generated_files/ht1621.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  number          1    wreg     unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  number          1   11[BANK0 ] unsigned char 
  9552 ;;  num             4    7[BANK0 ] unsigned char [4]
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        6 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    5
  9569 ;; This function calls:
  9570 ;;		_WriteAll_1621
  9571 ;; This function is called by:
  9572 ;;		_temperature_process
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _Two_Display
  9578  0BC9                     _Two_Display:	
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9582                           ;Two_Display@number stored from wreg
  9583  0BC9  0020               	movlb	0	; select bank0
  9584  0BCA  00AB               	movwf	Two_Display@number
  9585                           
  9586                           ;ht1621.c: 141: unsigned char num[4]={0};
  9587  0BCB  0021               	movlb	1	; select bank1
  9588  0BCC  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  9589  0BCD  0020               	movlb	0	; select bank0
  9590  0BCE  00AA               	movwf	Two_Display@num+3
  9591  0BCF  0021               	movlb	1	; select bank1
  9592  0BD0  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  9593  0BD1  0020               	movlb	0	; select bank0
  9594  0BD2  00A9               	movwf	Two_Display@num+2
  9595  0BD3  0021               	movlb	1	; select bank1
  9596  0BD4  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  9597  0BD5  0020               	movlb	0	; select bank0
  9598  0BD6  00A8               	movwf	Two_Display@num+1
  9599  0BD7  0021               	movlb	1	; select bank1
  9600  0BD8  0820               	movf	Two_Display@F2123^(0+128),w
  9601  0BD9  0020               	movlb	0	; select bank0
  9602  0BDA  00A7               	movwf	Two_Display@num
  9603                           
  9604                           ;ht1621.c: 142: num[1] = Dis_TAB[0];
  9605  0BDB  3000               	movlw	low (_Dis_TAB| (0+32768))
  9606  0BDC  0084               	movwf	4
  9607  0BDD  3090               	movlw	high (_Dis_TAB| (0+32768))
  9608  0BDE  0085               	movwf	5
  9609  0BDF  0800               	movf	0,w	;code access
  9610  0BE0  00A6               	movwf	??_Two_Display
  9611  0BE1  0826               	movf	??_Two_Display,w
  9612  0BE2  00A8               	movwf	Two_Display@num+1
  9613                           
  9614                           ;ht1621.c: 143: num[2] = Dis_TAB[number];
  9615  0BE3  082B               	movf	Two_Display@number,w
  9616  0BE4  3E00               	addlw	low (_Dis_TAB| (0+32768))
  9617  0BE5  0084               	movwf	4
  9618  0BE6  3090               	movlw	high (_Dis_TAB| (0+32768))
  9619  0BE7  1803               	skipnc
  9620  0BE8  3E01               	addlw	1
  9621  0BE9  0085               	movwf	5
  9622  0BEA  0800               	movf	0,w	;code access
  9623  0BEB  00A6               	movwf	??_Two_Display
  9624  0BEC  0826               	movf	??_Two_Display,w
  9625  0BED  00A9               	movwf	Two_Display@num+2
  9626                           
  9627                           ;ht1621.c: 144: WriteAll_1621(0, num, 4);
  9628  0BEE  3027               	movlw	low Two_Display@num
  9629  0BEF  00A0               	movwf	WriteAll_1621@p
  9630  0BF0  3000               	movlw	high Two_Display@num
  9631  0BF1  00A1               	movwf	WriteAll_1621@p+1
  9632  0BF2  3004               	movlw	4
  9633  0BF3  00A6               	movwf	??_Two_Display
  9634  0BF4  0826               	movf	??_Two_Display,w
  9635  0BF5  00A2               	movwf	WriteAll_1621@cnt
  9636  0BF6  3000               	movlw	0
  9637  0BF7  318C  245F         	fcall	_WriteAll_1621
  9638  0BF9  0008               	return
  9639  0BFA                     __end_of_Two_Display:	
  9640                           
  9641                           	psect	text48
  9642  0C5F                     __ptext48:	
  9643 ;; *************** function _WriteAll_1621 *****************
  9644 ;; Defined at:
  9645 ;;		line 91 in file "mcc_generated_files/ht1621.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  addr            1    wreg     unsigned char 
  9648 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9649 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  9650 ;;		 -> Dis_TAB(21), 
  9651 ;;  cnt             1    2[BANK0 ] unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  addr            1    4[BANK0 ] unsigned char 
  9654 ;;  i               1    5[BANK0 ] unsigned char 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9664 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;Total ram usage:        6 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    4
  9671 ;; This function calls:
  9672 ;;		_SendBit_1621
  9673 ;;		_SendDataBit_1621
  9674 ;; This function is called by:
  9675 ;;		_main
  9676 ;;		_Tc_Display
  9677 ;;		_Two_Display
  9678 ;;		_err_Display
  9679 ;;		_time_Display
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _WriteAll_1621
  9685  0C5F                     _WriteAll_1621:	
  9686                           
  9687                           ;incstack = 0
  9688                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9689                           ;WriteAll_1621@addr stored from wreg
  9690  0C5F  0020               	movlb	0	; select bank0
  9691  0C60  00A4               	movwf	WriteAll_1621@addr
  9692                           
  9693                           ;ht1621.c: 93: unsigned char i;
  9694                           ;ht1621.c: 94: do { LATC0 = 0; } while(0);
  9695  0C61  0022               	movlb	2	; select bank2
  9696  0C62  100E               	bcf	14,0	;volatile
  9697                           
  9698                           ;ht1621.c: 95: SendBit_1621(0xa0,3);
  9699  0C63  3003               	movlw	3
  9700  0C64  0020               	movlb	0	; select bank0
  9701  0C65  00A3               	movwf	??_WriteAll_1621
  9702  0C66  0823               	movf	??_WriteAll_1621,w
  9703  0C67  00F3               	movwf	SendBit_1621@cnt
  9704  0C68  30A0               	movlw	160
  9705  0C69  318A  223E  318C   	fcall	_SendBit_1621
  9706                           
  9707                           ;ht1621.c: 96: SendBit_1621(addr,6);
  9708  0C6C  3006               	movlw	6
  9709  0C6D  0020               	movlb	0	; select bank0
  9710  0C6E  00A3               	movwf	??_WriteAll_1621
  9711  0C6F  0823               	movf	??_WriteAll_1621,w
  9712  0C70  00F3               	movwf	SendBit_1621@cnt
  9713  0C71  0824               	movf	WriteAll_1621@addr,w
  9714  0C72  318A  223E  318C   	fcall	_SendBit_1621
  9715                           
  9716                           ;ht1621.c: 97: for(i =0; i <cnt; i ++,p++)
  9717  0C75  0020               	movlb	0	; select bank0
  9718  0C76  01A5               	clrf	WriteAll_1621@i
  9719  0C77                     l4500:	
  9720  0C77  0822               	movf	WriteAll_1621@cnt,w
  9721  0C78  0225               	subwf	WriteAll_1621@i,w
  9722  0C79  1803               	btfsc	3,0
  9723  0C7A  2C91               	goto	l670
  9724                           
  9725                           ;ht1621.c: 98: {
  9726                           ;ht1621.c: 99: SendDataBit_1621(*p,8);
  9727  0C7B  3008               	movlw	8
  9728  0C7C  00A3               	movwf	??_WriteAll_1621
  9729  0C7D  0823               	movf	??_WriteAll_1621,w
  9730  0C7E  00F3               	movwf	SendDataBit_1621@cnt
  9731  0C7F  0820               	movf	WriteAll_1621@p,w
  9732  0C80  0084               	movwf	4
  9733  0C81  0821               	movf	WriteAll_1621@p+1,w
  9734  0C82  0085               	movwf	5
  9735  0C83  0800               	movf	0,w	;code access
  9736  0C84  318A  225E  318C   	fcall	_SendDataBit_1621
  9737  0C87  3001               	movlw	1
  9738  0C88  0020               	movlb	0	; select bank0
  9739  0C89  00A3               	movwf	??_WriteAll_1621
  9740  0C8A  0823               	movf	??_WriteAll_1621,w
  9741  0C8B  07A5               	addwf	WriteAll_1621@i,f
  9742  0C8C  3001               	movlw	1
  9743  0C8D  07A0               	addwf	WriteAll_1621@p,f
  9744  0C8E  3000               	movlw	0
  9745  0C8F  3DA1               	addwfc	WriteAll_1621@p+1,f
  9746  0C90  2C77               	goto	l4500
  9747  0C91                     l670:	
  9748                           ;ht1621.c: 100: }
  9749                           ;ht1621.c: 101: do { LATC0 = 1; } while(0);
  9750                           
  9751  0C91  0022               	movlb	2	; select bank2
  9752  0C92  140E               	bsf	14,0	;volatile
  9753  0C93  0008               	return
  9754  0C94                     __end_of_WriteAll_1621:	
  9755                           
  9756                           	psect	text49
  9757  0A5E                     __ptext49:	
  9758 ;; *************** function _SendDataBit_1621 *****************
  9759 ;; Defined at:
  9760 ;;		line 42 in file "mcc_generated_files/ht1621.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  data            1    wreg     unsigned char 
  9763 ;;  cnt             1    3[COMMON] unsigned char 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  data            1    6[COMMON] unsigned char 
  9766 ;;  i               1    7[COMMON] unsigned char 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		wreg, status,2, status,0
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;Total ram usage:        5 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:    3
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		_WriteAll_1621
  9787 ;;		_Write_1621
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _SendDataBit_1621
  9793  0A5E                     _SendDataBit_1621:	
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  9797                           ;SendDataBit_1621@data stored from wreg
  9798  0A5E  00F6               	movwf	SendDataBit_1621@data
  9799                           
  9800                           ;ht1621.c: 44: unsigned char i;
  9801                           ;ht1621.c: 45: for(i =0; i <cnt; i ++)
  9802  0A5F  01F7               	clrf	SendDataBit_1621@i
  9803  0A60                     l4428:	
  9804  0A60  0873               	movf	SendDataBit_1621@cnt,w
  9805  0A61  0277               	subwf	SendDataBit_1621@i,w
  9806  0A62  1803               	btfsc	3,0
  9807  0A63  0008               	return
  9808                           
  9809                           ;ht1621.c: 46: {
  9810                           ;ht1621.c: 47: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  9811  0A64  1876               	btfsc	SendDataBit_1621@data,0
  9812  0A65  2A69               	goto	l641
  9813  0A66  0022               	movlb	2	; select bank2
  9814  0A67  110E               	bcf	14,2	;volatile
  9815  0A68  2A6B               	goto	l643
  9816  0A69                     l641:	
  9817                           ;ht1621.c: 48: else do { LATC2 = 1; } while(0);
  9818                           
  9819  0A69  0022               	movlb	2	; select bank2
  9820  0A6A  150E               	bsf	14,2	;volatile
  9821  0A6B                     l643:	
  9822                           ;ht1621.c: 49: do { LATC1 = 0; } while(0);
  9823                           
  9824  0A6B  108E               	bcf	14,1	;volatile
  9825                           
  9826                           ;ht1621.c: 50: _delay((unsigned long)((1)*(16000000/4000.0)));
  9827  0A6C  3006               	movlw	6
  9828  0A6D  00F5               	movwf	??_SendDataBit_1621+1
  9829  0A6E  3030               	movlw	48
  9830  0A6F  00F4               	movwf	??_SendDataBit_1621
  9831  0A70                     u5187:	
  9832  0A70  0BF4               	decfsz	??_SendDataBit_1621,f
  9833  0A71  2A70               	goto	u5187
  9834  0A72  0BF5               	decfsz	??_SendDataBit_1621+1,f
  9835  0A73  2A70               	goto	u5187
  9836  0A74  0000               	nop
  9837                           
  9838                           ;ht1621.c: 51: do { LATC1 = 1; } while(0);
  9839  0A75  0022               	movlb	2	; select bank2
  9840  0A76  148E               	bsf	14,1	;volatile
  9841                           
  9842                           ;ht1621.c: 52: data>>=1;
  9843  0A77  1003               	clrc
  9844  0A78  0CF6               	rrf	SendDataBit_1621@data,f
  9845  0A79  3001               	movlw	1
  9846  0A7A  00F4               	movwf	??_SendDataBit_1621
  9847  0A7B  0874               	movf	??_SendDataBit_1621,w
  9848  0A7C  07F7               	addwf	SendDataBit_1621@i,f
  9849  0A7D  2A60               	goto	l4428
  9850  0A7E                     __end_of_SendDataBit_1621:	
  9851                           
  9852                           	psect	text50
  9853  0844                     __ptext50:	
  9854 ;; *************** function _Set_start_flag *****************
  9855 ;; Defined at:
  9856 ;;		line 18 in file "mcc_generated_files/save.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		None
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;Total ram usage:        0 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:    3
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_Key_Process
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           
  9885                           ;psect for function _Set_start_flag
  9886  0844                     _Set_start_flag:	
  9887                           
  9888                           ;save.c: 20: Record_flag = 1;
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _Set_start_flag: []
  9892  0844  0020               	movlb	0	; select bank0
  9893  0845  01EB               	clrf	_Record_flag
  9894  0846  0AEB               	incf	_Record_flag,f
  9895                           
  9896                           ;save.c: 21: do { LATA4 = 0; } while(0);
  9897  0847  0022               	movlb	2	; select bank2
  9898  0848  120C               	bcf	12,4	;volatile
  9899  0849  0008               	return
  9900  084A                     __end_of_Set_start_flag:	
  9901                           
  9902                           	psect	text51
  9903  083A                     __ptext51:	
  9904 ;; *************** function _Set_finish_flag *****************
  9905 ;; Defined at:
  9906 ;;		line 30 in file "mcc_generated_files/save.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		status,2
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    3
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_Key_Process
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           
  9935                           ;psect for function _Set_finish_flag
  9936  083A                     _Set_finish_flag:	
  9937                           
  9938                           ;save.c: 32: Record_flag = 0;
  9939                           
  9940                           ;incstack = 0
  9941                           ; Regs used in _Set_finish_flag: [status,2]
  9942  083A  0020               	movlb	0	; select bank0
  9943  083B  01EB               	clrf	_Record_flag
  9944                           
  9945                           ;save.c: 33: do { LATA4 = 1; } while(0);
  9946  083C  0022               	movlb	2	; select bank2
  9947  083D  160C               	bsf	12,4	;volatile
  9948  083E  0008               	return
  9949  083F                     __end_of_Set_finish_flag:	
  9950                           
  9951                           	psect	text52
  9952  0904                     __ptext52:	
  9953 ;; *************** function _SendCmd_1621 *****************
  9954 ;; Defined at:
  9955 ;;		line 62 in file "mcc_generated_files/ht1621.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  command         1    wreg     unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  command         1    1[BANK0 ] unsigned char 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0, pclath, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;Total ram usage:        2 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    4
  9976 ;; This function calls:
  9977 ;;		_SendBit_1621
  9978 ;; This function is called by:
  9979 ;;		_main
  9980 ;;		_Key_Process
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function _SendCmd_1621
  9986  0904                     _SendCmd_1621:	
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  9990                           ;SendCmd_1621@command stored from wreg
  9991  0904  0020               	movlb	0	; select bank0
  9992  0905  00A1               	movwf	SendCmd_1621@command
  9993                           
  9994                           ;ht1621.c: 64: do { LATC0 = 0; } while(0);
  9995  0906  0022               	movlb	2	; select bank2
  9996  0907  100E               	bcf	14,0	;volatile
  9997                           
  9998                           ;ht1621.c: 65: SendBit_1621(0x80,4);
  9999  0908  3004               	movlw	4
 10000  0909  0020               	movlb	0	; select bank0
 10001  090A  00A0               	movwf	??_SendCmd_1621
 10002  090B  0820               	movf	??_SendCmd_1621,w
 10003  090C  00F3               	movwf	SendBit_1621@cnt
 10004  090D  3080               	movlw	128
 10005  090E  318A  223E  3189   	fcall	_SendBit_1621
 10006                           
 10007                           ;ht1621.c: 66: SendBit_1621(command,8);
 10008  0911  3008               	movlw	8
 10009  0912  0020               	movlb	0	; select bank0
 10010  0913  00A0               	movwf	??_SendCmd_1621
 10011  0914  0820               	movf	??_SendCmd_1621,w
 10012  0915  00F3               	movwf	SendBit_1621@cnt
 10013  0916  0821               	movf	SendCmd_1621@command,w
 10014  0917  318A  223E         	fcall	_SendBit_1621
 10015                           
 10016                           ;ht1621.c: 67: do { LATC0 = 1; } while(0);
 10017  0919  0022               	movlb	2	; select bank2
 10018  091A  140E               	bsf	14,0	;volatile
 10019  091B  0008               	return
 10020  091C                     __end_of_SendCmd_1621:	
 10021                           
 10022                           	psect	text53
 10023  0A3E                     __ptext53:	
 10024 ;; *************** function _SendBit_1621 *****************
 10025 ;; Defined at:
 10026 ;;		line 22 in file "mcc_generated_files/ht1621.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  data            1    wreg     unsigned char 
 10029 ;;  cnt             1    3[COMMON] unsigned char 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  data            1    6[COMMON] unsigned char 
 10032 ;;  i               1    7[COMMON] unsigned char 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;Total ram usage:        5 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    3
 10049 ;; This function calls:
 10050 ;;		Nothing
 10051 ;; This function is called by:
 10052 ;;		_SendCmd_1621
 10053 ;;		_WriteAll_1621
 10054 ;;		_Write_1621
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function _SendBit_1621
 10060  0A3E                     _SendBit_1621:	
 10061                           
 10062                           ;incstack = 0
 10063                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
 10064                           ;SendBit_1621@data stored from wreg
 10065  0A3E  00F6               	movwf	SendBit_1621@data
 10066                           
 10067                           ;ht1621.c: 24: unsigned char i;
 10068                           ;ht1621.c: 25: for(i =0; i <cnt; i ++)
 10069  0A3F  01F7               	clrf	SendBit_1621@i
 10070  0A40                     l4416:	
 10071  0A40  0873               	movf	SendBit_1621@cnt,w
 10072  0A41  0277               	subwf	SendBit_1621@i,w
 10073  0A42  1803               	btfsc	3,0
 10074  0A43  0008               	return
 10075                           
 10076                           ;ht1621.c: 26: {
 10077                           ;ht1621.c: 27: if((data&0x80)==0) do { LATC2 = 0; } while(0);
 10078  0A44  1BF6               	btfsc	SendBit_1621@data,7
 10079  0A45  2A49               	goto	l625
 10080  0A46  0022               	movlb	2	; select bank2
 10081  0A47  110E               	bcf	14,2	;volatile
 10082  0A48  2A4B               	goto	l627
 10083  0A49                     l625:	
 10084                           ;ht1621.c: 28: else do { LATC2 = 1; } while(0);
 10085                           
 10086  0A49  0022               	movlb	2	; select bank2
 10087  0A4A  150E               	bsf	14,2	;volatile
 10088  0A4B                     l627:	
 10089                           ;ht1621.c: 29: do { LATC1 = 0; } while(0);
 10090                           
 10091  0A4B  108E               	bcf	14,1	;volatile
 10092                           
 10093                           ;ht1621.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 10094  0A4C  3006               	movlw	6
 10095  0A4D  00F5               	movwf	??_SendBit_1621+1
 10096  0A4E  3030               	movlw	48
 10097  0A4F  00F4               	movwf	??_SendBit_1621
 10098  0A50                     u5197:	
 10099  0A50  0BF4               	decfsz	??_SendBit_1621,f
 10100  0A51  2A50               	goto	u5197
 10101  0A52  0BF5               	decfsz	??_SendBit_1621+1,f
 10102  0A53  2A50               	goto	u5197
 10103  0A54  0000               	nop
 10104                           
 10105                           ;ht1621.c: 31: do { LATC1 = 1; } while(0);
 10106  0A55  0022               	movlb	2	; select bank2
 10107  0A56  148E               	bsf	14,1	;volatile
 10108                           
 10109                           ;ht1621.c: 32: data<<=1;
 10110  0A57  1003               	clrc
 10111  0A58  0DF6               	rlf	SendBit_1621@data,f
 10112  0A59  3001               	movlw	1
 10113  0A5A  00F4               	movwf	??_SendBit_1621
 10114  0A5B  0874               	movf	??_SendBit_1621,w
 10115  0A5C  07F7               	addwf	SendBit_1621@i,f
 10116  0A5D  2A40               	goto	l4416
 10117  0A5E                     __end_of_SendBit_1621:	
 10118                           
 10119                           	psect	text54
 10120  0AA0                     __ptext54:	
 10121 ;; *************** function _Key_Scan *****************
 10122 ;; Defined at:
 10123 ;;		line 20 in file "mcc_generated_files/key.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  Key_val         1    5[COMMON] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      unsigned char 
 10130 ;; Registers used:
 10131 ;;		wreg
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;Total ram usage:        3 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    3
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_Key_Process
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           
 10152                           ;psect for function _Key_Scan
 10153  0AA0                     _Key_Scan:	
 10154                           
 10155                           ;key.c: 22: unsigned char Key_val=0xff;
 10156                           
 10157                           ;incstack = 0
 10158                           ; Regs used in _Key_Scan: [wreg]
 10159  0AA0  30FF               	movlw	255
 10160  0AA1  00F3               	movwf	??_Key_Scan
 10161  0AA2  0873               	movf	??_Key_Scan,w
 10162  0AA3  00F5               	movwf	Key_Scan@Key_val
 10163                           
 10164                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
 10165  0AA4  0020               	movlb	0	; select bank0
 10166  0AA5  1F8C               	btfss	12,7	;volatile
 10167  0AA6  2AA9               	goto	l5094
 10168  0AA7  1A8D               	btfsc	13,5	;volatile
 10169  0AA8  2AC1               	goto	l856
 10170  0AA9                     l5094:	
 10171                           
 10172                           ;key.c: 24: {
 10173                           ;key.c: 25: _delay((unsigned long)((10)*(16000000/4000.0)));
 10174  0AA9  3034               	movlw	52
 10175  0AAA  00F4               	movwf	??_Key_Scan+1
 10176  0AAB  30F1               	movlw	241
 10177  0AAC  00F3               	movwf	??_Key_Scan
 10178  0AAD                     u5207:	
 10179  0AAD  0BF3               	decfsz	??_Key_Scan,f
 10180  0AAE  2AAD               	goto	u5207
 10181  0AAF  0BF4               	decfsz	??_Key_Scan+1,f
 10182  0AB0  2AAD               	goto	u5207
 10183  0AB1  3200               	nop2
 10184                           
 10185                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
 10186  0AB2  0020               	movlb	0	; select bank0
 10187  0AB3  1F8C               	btfss	12,7	;volatile
 10188  0AB4  2AB7               	goto	l861
 10189  0AB5  1A8D               	btfsc	13,5	;volatile
 10190  0AB6  2AC1               	goto	l856
 10191  0AB7                     l861:	
 10192                           
 10193                           ;key.c: 27: {
 10194                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10195  0AB7  1A8D               	btfsc	13,5	;volatile
 10196  0AB8  2ABB               	goto	l862
 10197  0AB9  01F5               	clrf	Key_Scan@Key_val
 10198  0ABA  0AF5               	incf	Key_Scan@Key_val,f
 10199  0ABB                     l862:	
 10200                           
 10201                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10202  0ABB  1B8C               	btfsc	12,7	;volatile
 10203  0ABC  2AC1               	goto	l856
 10204  0ABD  3002               	movlw	2
 10205  0ABE  00F3               	movwf	??_Key_Scan
 10206  0ABF  0873               	movf	??_Key_Scan,w
 10207  0AC0  00F5               	movwf	Key_Scan@Key_val
 10208  0AC1                     l856:	
 10209                           
 10210                           ;key.c: 30: }
 10211                           ;key.c: 31: }
 10212                           ;key.c: 32: return Key_val;
 10213  0AC1  0875               	movf	Key_Scan@Key_val,w
 10214  0AC2  0008               	return
 10215  0AC3                     __end_of_Key_Scan:	
 10216                           
 10217                           	psect	text55
 10218  085C                     __ptext55:	
 10219 ;; *************** function _EUSART_Write *****************
 10220 ;; Defined at:
 10221 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;  txData          1    wreg     unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  txData          1    3[COMMON] unsigned char 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  1    wreg      void 
 10228 ;; Registers used:
 10229 ;;		wreg
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;Total ram usage:        1 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    3
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_Key_Process
 10246 ;;		_EUSART_SendString
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _EUSART_Write
 10252  085C                     _EUSART_Write:	
 10253                           
 10254                           ;incstack = 0
 10255                           ; Regs used in _EUSART_Write: [wreg]
 10256                           ;EUSART_Write@txData stored from wreg
 10257  085C  00F3               	movwf	EUSART_Write@txData
 10258  085D                     l129:	
 10259                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10260                           
 10261  085D  0020               	movlb	0	; select bank0
 10262  085E  1E11               	btfss	17,4	;volatile
 10263  085F  285D               	goto	l129
 10264                           
 10265                           ;eusart.c: 93: }
 10266                           ;eusart.c: 95: TXREG = txData;
 10267  0860  0873               	movf	EUSART_Write@txData,w
 10268  0861  0023               	movlb	3	; select bank3
 10269  0862  009A               	movwf	26	;volatile
 10270  0863  0008               	return
 10271  0864                     __end_of_EUSART_Write:	
 10272                           
 10273                           	psect	text56
 10274  09CE                     __ptext56:	
 10275 ;; *************** function _Bq32k_Time_Init *****************
 10276 ;; Defined at:
 10277 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10282 ;;  time            7    0        struct bq32k_regs
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;Total ram usage:       12 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    5
 10299 ;; This function calls:
 10300 ;;		_I2C_Send_Buffer
 10301 ;; This function is called by:
 10302 ;;		_main
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           
 10307                           ;psect for function _Bq32k_Time_Init
 10308  09CE                     _Bq32k_Time_Init:	
 10309                           
 10310                           ;bq32k.c: 19: bq32k_t time;
 10311                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x50,0x23,0x02,0x08,0x07,0x16 };
 10312                           
 10313                           ;incstack = 0
 10314                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10315  09CE  30E3               	movlw	low Bq32k_Time_Init@F2018
 10316  09CF  0086               	movwf	6
 10317  09D0  3000               	movlw	high Bq32k_Time_Init@F2018
 10318  09D1  0087               	movwf	7
 10319  09D2  3027               	movlw	low Bq32k_Time_Init@temp
 10320  09D3  0084               	movwf	4
 10321  09D4  3000               	movlw	high Bq32k_Time_Init@temp
 10322  09D5  0085               	movwf	5
 10323  09D6  300A               	movlw	10
 10324  09D7  0020               	movlb	0	; select bank0
 10325  09D8  00A5               	movwf	??_Bq32k_Time_Init
 10326  09D9                     u4770:	
 10327  09D9  0016               	moviw fsr1++
 10328  09DA  001A               	movwi fsr0++
 10329  09DB  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10330  09DC  29D9               	goto	u4770
 10331                           
 10332                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10333  09DD  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10334  09DE  00A5               	movwf	??_Bq32k_Time_Init
 10335  09DF  0825               	movf	??_Bq32k_Time_Init,w
 10336  09E0  00F6               	movwf	I2C_Send_Buffer@buff
 10337  09E1  3007               	movlw	7
 10338  09E2  00A6               	movwf	??_Bq32k_Time_Init+1
 10339  09E3  0826               	movf	??_Bq32k_Time_Init+1,w
 10340  09E4  00F7               	movwf	I2C_Send_Buffer@Length
 10341  09E5  3000               	movlw	0
 10342  09E6  318C  24FF         	fcall	_I2C_Send_Buffer
 10343  09E8  0008               	return
 10344  09E9                     __end_of_Bq32k_Time_Init:	
 10345                           
 10346                           	psect	text57
 10347  0CFF                     __ptext57:	
 10348 ;; *************** function _I2C_Send_Buffer *****************
 10349 ;; Defined at:
 10350 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  ADD             1    wreg     unsigned char 
 10353 ;;  buff            1    6[COMMON] PTR unsigned char 
 10354 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10355 ;;  Length          1    7[COMMON] unsigned char 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  ADD             1    2[BANK0 ] unsigned char 
 10358 ;;  Flag            1    4[BANK0 ] unsigned char 
 10359 ;;  i               1    3[BANK0 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      unsigned char 
 10362 ;; Registers used:
 10363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;Total ram usage:        7 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    4
 10376 ;; This function calls:
 10377 ;;		_I2C_Send_Byte
 10378 ;;		_I2C_Start
 10379 ;;		_I2C_Stop
 10380 ;; This function is called by:
 10381 ;;		_Bq32k_Time_Init
 10382 ;;		_Bq32k_Rtc_Write_Time
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _I2C_Send_Buffer
 10388  0CFF                     _I2C_Send_Buffer:	
 10389                           
 10390                           ;incstack = 0
 10391                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10392                           ;I2C_Send_Buffer@ADD stored from wreg
 10393  0CFF  0020               	movlb	0	; select bank0
 10394  0D00  00A2               	movwf	I2C_Send_Buffer@ADD
 10395                           
 10396                           ;i2c.c: 175: unsigned char Flag=1;
 10397  0D01  01A4               	clrf	I2C_Send_Buffer@Flag
 10398  0D02  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10399                           
 10400                           ;i2c.c: 176: unsigned char i;
 10401                           ;i2c.c: 178: I2C_Start();
 10402  0D03  3189  2134  318C   	fcall	_I2C_Start
 10403                           
 10404                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10405  0D06  30D0               	movlw	208
 10406  0D07  318E  264A  318C   	fcall	_I2C_Send_Byte
 10407  0D0A  0020               	movlb	0	; select bank0
 10408  0D0B  00A0               	movwf	??_I2C_Send_Buffer
 10409  0D0C  0820               	movf	??_I2C_Send_Buffer,w
 10410  0D0D  00A4               	movwf	I2C_Send_Buffer@Flag
 10411                           
 10412                           ;i2c.c: 181: if(Flag)
 10413  0D0E  0824               	movf	I2C_Send_Buffer@Flag,w
 10414  0D0F  1D03               	btfss	3,2
 10415  0D10  0008               	return
 10416                           
 10417                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10418                           
 10419                           ;i2c.c: 182: return 0x01;
 10420                           ;	Return value of _I2C_Send_Buffer is never used
 10421  0D11  0822               	movf	I2C_Send_Buffer@ADD,w
 10422  0D12  318E  264A  318C   	fcall	_I2C_Send_Byte
 10423  0D15  0020               	movlb	0	; select bank0
 10424  0D16  00A0               	movwf	??_I2C_Send_Buffer
 10425  0D17  0820               	movf	??_I2C_Send_Buffer,w
 10426  0D18  00A4               	movwf	I2C_Send_Buffer@Flag
 10427                           
 10428                           ;i2c.c: 185: if(Flag)
 10429  0D19  0824               	movf	I2C_Send_Buffer@Flag,w
 10430  0D1A  1D03               	btfss	3,2
 10431  0D1B  0008               	return
 10432                           
 10433                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10434                           
 10435                           ;i2c.c: 186: return 0x01;
 10436                           ;	Return value of _I2C_Send_Buffer is never used
 10437  0D1C  01A3               	clrf	I2C_Send_Buffer@i
 10438  0D1D                     l5082:	
 10439  0D1D  0877               	movf	I2C_Send_Buffer@Length,w
 10440  0D1E  0223               	subwf	I2C_Send_Buffer@i,w
 10441  0D1F  1803               	btfsc	3,0
 10442  0D20  2D37               	goto	l5084
 10443                           
 10444                           ;i2c.c: 189: {
 10445                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10446  0D21  0823               	movf	I2C_Send_Buffer@i,w
 10447  0D22  0776               	addwf	I2C_Send_Buffer@buff,w
 10448  0D23  00A0               	movwf	??_I2C_Send_Buffer
 10449  0D24  0820               	movf	??_I2C_Send_Buffer,w
 10450  0D25  0086               	movwf	6
 10451  0D26  0187               	clrf	7
 10452  0D27  0801               	movf	1,w
 10453  0D28  318E  264A  318C   	fcall	_I2C_Send_Byte
 10454  0D2B  0020               	movlb	0	; select bank0
 10455  0D2C  00A1               	movwf	??_I2C_Send_Buffer+1
 10456  0D2D  0821               	movf	??_I2C_Send_Buffer+1,w
 10457  0D2E  00A4               	movwf	I2C_Send_Buffer@Flag
 10458                           
 10459                           ;i2c.c: 191: if(Flag)
 10460  0D2F  0824               	movf	I2C_Send_Buffer@Flag,w
 10461  0D30  1D03               	btfss	3,2
 10462  0D31  0008               	return
 10463                           
 10464                           ;i2c.c: 192: return 0x01;
 10465                           ;	Return value of _I2C_Send_Buffer is never used
 10466  0D32  3001               	movlw	1
 10467  0D33  00A0               	movwf	??_I2C_Send_Buffer
 10468  0D34  0820               	movf	??_I2C_Send_Buffer,w
 10469  0D35  07A3               	addwf	I2C_Send_Buffer@i,f
 10470  0D36  2D1D               	goto	l5082
 10471  0D37                     l5084:	
 10472                           
 10473                           ;i2c.c: 193: }
 10474                           ;i2c.c: 194: I2C_Stop();
 10475  0D37  3189  214D         	fcall	_I2C_Stop
 10476  0D39  0008               	return
 10477  0D3A                     __end_of_I2C_Send_Buffer:	
 10478                           ;i2c.c: 195: return 0x00;
 10479                           ;	Return value of _I2C_Send_Buffer is never used
 10480                           
 10481                           
 10482                           	psect	text58
 10483  094D                     __ptext58:	
 10484 ;; *************** function _I2C_Stop *****************
 10485 ;; Defined at:
 10486 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;		None
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;		None
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;Total ram usage:        1 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; Hardware stack levels required when called:    3
 10507 ;; This function calls:
 10508 ;;		Nothing
 10509 ;; This function is called by:
 10510 ;;		_I2C_Read_Buffer
 10511 ;;		_I2C_Send_Buffer
 10512 ;; This function uses a non-reentrant model
 10513 ;;
 10514                           
 10515                           
 10516                           ;psect for function _I2C_Stop
 10517  094D                     _I2C_Stop:	
 10518                           
 10519                           ;incstack = 0
 10520                           ; Regs used in _I2C_Stop: [wreg]
 10521                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10522  094D  0022               	movlb	2	; select bank2
 10523  094E  100D               	bcf	13,0	;volatile
 10524                           
 10525                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10526  094F  300D               	movlw	13
 10527  0950  00F3               	movwf	??_I2C_Stop
 10528  0951                     u5217:	
 10529  0951  0BF3               	decfsz	??_I2C_Stop,f
 10530  0952  2951               	goto	u5217
 10531                           
 10532                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10533  0953  0022               	movlb	2	; select bank2
 10534  0954  108D               	bcf	13,1	;volatile
 10535                           
 10536                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10537  0955  300D               	movlw	13
 10538  0956  00F3               	movwf	??_I2C_Stop
 10539  0957                     u5227:	
 10540  0957  0BF3               	decfsz	??_I2C_Stop,f
 10541  0958  2957               	goto	u5227
 10542                           
 10543                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10544  0959  0022               	movlb	2	; select bank2
 10545  095A  140D               	bsf	13,0	;volatile
 10546                           
 10547                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10548  095B  300D               	movlw	13
 10549  095C  00F3               	movwf	??_I2C_Stop
 10550  095D                     u5237:	
 10551  095D  0BF3               	decfsz	??_I2C_Stop,f
 10552  095E  295D               	goto	u5237
 10553                           
 10554                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10555  095F  0022               	movlb	2	; select bank2
 10556  0960  148D               	bsf	13,1	;volatile
 10557                           
 10558                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10559  0961  300D               	movlw	13
 10560  0962  00F3               	movwf	??_I2C_Stop
 10561  0963                     u5247:	
 10562  0963  0BF3               	decfsz	??_I2C_Stop,f
 10563  0964  2963               	goto	u5247
 10564  0965  0008               	return
 10565  0966                     __end_of_I2C_Stop:	
 10566                           
 10567                           	psect	text59
 10568  0934                     __ptext59:	
 10569 ;; *************** function _I2C_Start *****************
 10570 ;; Defined at:
 10571 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;		None
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;		None
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;Total ram usage:        1 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:    3
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_I2C_Read_Buffer
 10596 ;;		_I2C_Send_Buffer
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _I2C_Start
 10602  0934                     _I2C_Start:	
 10603                           
 10604                           ;incstack = 0
 10605                           ; Regs used in _I2C_Start: [wreg]
 10606                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10607  0934  0022               	movlb	2	; select bank2
 10608  0935  148D               	bsf	13,1	;volatile
 10609                           
 10610                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10611  0936  300D               	movlw	13
 10612  0937  00F3               	movwf	??_I2C_Start
 10613  0938                     u5257:	
 10614  0938  0BF3               	decfsz	??_I2C_Start,f
 10615  0939  2938               	goto	u5257
 10616                           
 10617                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10618  093A  0022               	movlb	2	; select bank2
 10619  093B  140D               	bsf	13,0	;volatile
 10620                           
 10621                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10622  093C  300D               	movlw	13
 10623  093D  00F3               	movwf	??_I2C_Start
 10624  093E                     u5267:	
 10625  093E  0BF3               	decfsz	??_I2C_Start,f
 10626  093F  293E               	goto	u5267
 10627                           
 10628                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10629  0940  0022               	movlb	2	; select bank2
 10630  0941  108D               	bcf	13,1	;volatile
 10631                           
 10632                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10633  0942  300D               	movlw	13
 10634  0943  00F3               	movwf	??_I2C_Start
 10635  0944                     u5277:	
 10636  0944  0BF3               	decfsz	??_I2C_Start,f
 10637  0945  2944               	goto	u5277
 10638                           
 10639                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10640  0946  0022               	movlb	2	; select bank2
 10641  0947  100D               	bcf	13,0	;volatile
 10642                           
 10643                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10644  0948  300D               	movlw	13
 10645  0949  00F3               	movwf	??_I2C_Start
 10646  094A                     u5287:	
 10647  094A  0BF3               	decfsz	??_I2C_Start,f
 10648  094B  294A               	goto	u5287
 10649  094C  0008               	return
 10650  094D                     __end_of_I2C_Start:	
 10651                           
 10652                           	psect	text60
 10653  0E4A                     __ptext60:	
 10654 ;; *************** function _I2C_Send_Byte *****************
 10655 ;; Defined at:
 10656 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  Data            1    wreg     unsigned char 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  Data            1    4[COMMON] unsigned char 
 10661 ;;  i               1    5[COMMON] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      unsigned char 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;Total ram usage:        3 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    3
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_I2C_Read_Buffer
 10682 ;;		_I2C_Send_Buffer
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _I2C_Send_Byte
 10688  0E4A                     _I2C_Send_Byte:	
 10689                           
 10690                           ;incstack = 0
 10691                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 10692                           ;I2C_Send_Byte@Data stored from wreg
 10693  0E4A  00F4               	movwf	I2C_Send_Byte@Data
 10694                           
 10695                           ;i2c.c: 36: unsigned char i;
 10696                           ;i2c.c: 37: for(i=0;i<8;i++)
 10697  0E4B  01F5               	clrf	I2C_Send_Byte@i
 10698  0E4C  3008               	movlw	8
 10699  0E4D  0275               	subwf	I2C_Send_Byte@i,w
 10700  0E4E  1803               	btfsc	3,0
 10701  0E4F  2E71               	goto	l737
 10702  0E50                     l725:	
 10703                           
 10704                           ;i2c.c: 38: {
 10705                           ;i2c.c: 39: if(Data&0x80)
 10706  0E50  1FF4               	btfss	I2C_Send_Byte@Data,7
 10707  0E51  2E55               	goto	l731
 10708                           
 10709                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 10710  0E52  0022               	movlb	2	; select bank2
 10711  0E53  148D               	bsf	13,1	;volatile
 10712  0E54  2E57               	goto	l4232
 10713  0E55                     l731:	
 10714                           ;i2c.c: 41: else
 10715                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 10716                           
 10717  0E55  0022               	movlb	2	; select bank2
 10718  0E56  108D               	bcf	13,1	;volatile
 10719  0E57                     l4232:	
 10720                           
 10721                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10722  0E57  300D               	movlw	13
 10723  0E58  00F3               	movwf	??_I2C_Send_Byte
 10724  0E59                     u5297:	
 10725  0E59  0BF3               	decfsz	??_I2C_Send_Byte,f
 10726  0E5A  2E59               	goto	u5297
 10727                           
 10728                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 10729  0E5B  0022               	movlb	2	; select bank2
 10730  0E5C  140D               	bsf	13,0	;volatile
 10731                           
 10732                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10733  0E5D  300D               	movlw	13
 10734  0E5E  00F3               	movwf	??_I2C_Send_Byte
 10735  0E5F                     u5307:	
 10736  0E5F  0BF3               	decfsz	??_I2C_Send_Byte,f
 10737  0E60  2E5F               	goto	u5307
 10738                           
 10739                           ;i2c.c: 46: Data<<=1;
 10740  0E61  1003               	clrc
 10741  0E62  0DF4               	rlf	I2C_Send_Byte@Data,f
 10742                           
 10743                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 10744  0E63  0022               	movlb	2	; select bank2
 10745  0E64  100D               	bcf	13,0	;volatile
 10746                           
 10747                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10748  0E65  300D               	movlw	13
 10749  0E66  00F3               	movwf	??_I2C_Send_Byte
 10750  0E67                     u5317:	
 10751  0E67  0BF3               	decfsz	??_I2C_Send_Byte,f
 10752  0E68  2E67               	goto	u5317
 10753  0E69  3001               	movlw	1
 10754  0E6A  00F3               	movwf	??_I2C_Send_Byte
 10755  0E6B  0873               	movf	??_I2C_Send_Byte,w
 10756  0E6C  07F5               	addwf	I2C_Send_Byte@i,f
 10757  0E6D  3008               	movlw	8
 10758  0E6E  0275               	subwf	I2C_Send_Byte@i,w
 10759  0E6F  1C03               	skipc
 10760  0E70  2E50               	goto	l725
 10761  0E71                     l737:	
 10762                           ;i2c.c: 49: }
 10763                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 10764                           
 10765  0E71  0022               	movlb	2	; select bank2
 10766  0E72  148D               	bsf	13,1	;volatile
 10767                           
 10768                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10769  0E73  300D               	movlw	13
 10770  0E74  00F3               	movwf	??_I2C_Send_Byte
 10771  0E75                     u5327:	
 10772  0E75  0BF3               	decfsz	??_I2C_Send_Byte,f
 10773  0E76  2E75               	goto	u5327
 10774                           
 10775                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 10776  0E77  0022               	movlb	2	; select bank2
 10777  0E78  140D               	bsf	13,0	;volatile
 10778                           
 10779                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10780  0E79  300D               	movlw	13
 10781  0E7A  00F3               	movwf	??_I2C_Send_Byte
 10782  0E7B                     u5337:	
 10783  0E7B  0BF3               	decfsz	??_I2C_Send_Byte,f
 10784  0E7C  2E7B               	goto	u5337
 10785                           
 10786                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 10787  0E7D  0021               	movlb	1	; select bank1
 10788  0E7E  148D               	bsf	13,1	;volatile
 10789                           
 10790                           ;i2c.c: 55: if(RB1)
 10791  0E7F  0020               	movlb	0	; select bank0
 10792  0E80  1C8D               	btfss	13,1	;volatile
 10793  0E81  2E86               	goto	l747
 10794                           
 10795                           ;i2c.c: 56: {
 10796                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 10797  0E82  0021               	movlb	1	; select bank1
 10798  0E83  108D               	bcf	13,1	;volatile
 10799                           
 10800                           ;i2c.c: 58: return 0x01;
 10801  0E84  3001               	movlw	1
 10802  0E85  0008               	return
 10803  0E86                     l747:	
 10804                           ;i2c.c: 59: }
 10805                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 10806                           
 10807  0E86  0021               	movlb	1	; select bank1
 10808  0E87  108D               	bcf	13,1	;volatile
 10809                           
 10810                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 10811  0E88  0022               	movlb	2	; select bank2
 10812  0E89  100D               	bcf	13,0	;volatile
 10813                           
 10814                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10815  0E8A  300D               	movlw	13
 10816  0E8B  00F3               	movwf	??_I2C_Send_Byte
 10817  0E8C                     u5347:	
 10818  0E8C  0BF3               	decfsz	??_I2C_Send_Byte,f
 10819  0E8D  2E8C               	goto	u5347
 10820                           
 10821                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 10822  0E8E  0022               	movlb	2	; select bank2
 10823  0E8F  108D               	bcf	13,1	;volatile
 10824                           
 10825                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10826  0E90  300D               	movlw	13
 10827  0E91  00F3               	movwf	??_I2C_Send_Byte
 10828  0E92                     u5357:	
 10829  0E92  0BF3               	decfsz	??_I2C_Send_Byte,f
 10830  0E93  2E92               	goto	u5357
 10831                           
 10832                           ;i2c.c: 65: return 0x00;
 10833  0E94  3000               	movlw	0
 10834  0E95  0008               	return
 10835  0E96                     __end_of_I2C_Send_Byte:	
 10836                           
 10837                           	psect	text61
 10838  097F                     __ptext61:	
 10839 ;; *************** function _ADC_GetConversion *****************
 10840 ;; Defined at:
 10841 ;;		line 106 in file "mcc_generated_files/adc.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  channel         1    wreg     enum E1850
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  channel         1    6[COMMON] enum E1850
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  2    3[COMMON] unsigned int 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;Total ram usage:        4 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    3
 10862 ;; This function calls:
 10863 ;;		Nothing
 10864 ;; This function is called by:
 10865 ;;		_main
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           
 10870                           ;psect for function _ADC_GetConversion
 10871  097F                     _ADC_GetConversion:	
 10872                           
 10873                           ;incstack = 0
 10874                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10875                           ;ADC_GetConversion@channel stored from wreg
 10876  097F  00F6               	movwf	ADC_GetConversion@channel
 10877                           
 10878                           ;adc.c: 108: ADCON0bits.CHS = channel;
 10879  0980  0876               	movf	ADC_GetConversion@channel,w
 10880  0981  00F5               	movwf	??_ADC_GetConversion
 10881  0982  0DF5               	rlf	??_ADC_GetConversion,f
 10882  0983  0DF5               	rlf	??_ADC_GetConversion,f
 10883  0984  0021               	movlb	1	; select bank1
 10884  0985  081D               	movf	29,w	;volatile
 10885  0986  0675               	xorwf	??_ADC_GetConversion,w
 10886  0987  3983               	andlw	-125
 10887  0988  0675               	xorwf	??_ADC_GetConversion,w
 10888  0989  009D               	movwf	29	;volatile
 10889                           
 10890                           ;adc.c: 111: ADCON0bits.ADON = 1;
 10891  098A  141D               	bsf	29,0	;volatile
 10892                           
 10893                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
 10894  098B  3006               	movlw	6
 10895  098C  00F5               	movwf	??_ADC_GetConversion
 10896  098D                     u5367:	
 10897  098D  0BF5               	decfsz	??_ADC_GetConversion,f
 10898  098E  298D               	goto	u5367
 10899  098F  0000               	nop
 10900                           
 10901                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 10902  0990  0021               	movlb	1	; select bank1
 10903  0991  149D               	bsf	29,1	;volatile
 10904  0992                     l197:	
 10905                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 10906                           
 10907  0992  189D               	btfsc	29,1	;volatile
 10908  0993  2992               	goto	l197
 10909                           
 10910                           ;adc.c: 121: }
 10911                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 10912  0994  081C               	movf	28,w	;volatile
 10913  0995  00F4               	movwf	?_ADC_GetConversion+1
 10914  0996  081B               	movf	27,w	;volatile
 10915  0997  00F3               	movwf	?_ADC_GetConversion
 10916  0998  0008               	return
 10917  0999                     __end_of_ADC_GetConversion:	
 10918                           
 10919                           	psect	intentry
 10920  0004                     __pintentry:	
 10921 ;; *************** function _INTERRUPT_InterruptManager *****************
 10922 ;; Defined at:
 10923 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;		None
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, status,2, status,0, pclath, cstack
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;Total ram usage:        1 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    2
 10944 ;; This function calls:
 10945 ;;		_TMR0_ISR
 10946 ;; This function is called by:
 10947 ;;		Interrupt level 1
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951  0004                     _INTERRUPT_InterruptManager:	
 10952                           
 10953                           ;incstack = 0
 10954                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10955  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10956  0005  3180               	pagesel	$
 10957  0006  0020               	movlb	0	; select bank0
 10958  0007  087F               	movf	127,w
 10959  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 10960                           
 10961                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 10962  0009  1A8B               	btfsc	11,5	;volatile
 10963  000A  1D0B               	btfss	11,2	;volatile
 10964  000B  280E               	goto	i1l255
 10965                           
 10966                           ;interrupt_manager.c: 55: TMR0_ISR();
 10967  000C  3189  21B3         	fcall	_TMR0_ISR
 10968  000E                     i1l255:	
 10969                           ;interrupt_manager.c: 56: } else {
 10970                           
 10971  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 10972  000F  0020               	movlb	0	; select bank0
 10973  0010  00FF               	movwf	127
 10974  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10975  0012  0009               	retfie
 10976  0013                     __end_of_INTERRUPT_InterruptManager:	
 10977                           
 10978                           	psect	text63
 10979  09B3                     __ptext63:	
 10980 ;; *************** function _TMR0_ISR *****************
 10981 ;; Defined at:
 10982 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;		None
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0, pclath, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;Total ram usage:        1 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    1
 11003 ;; This function calls:
 11004 ;;		_TMR0_CallBack
 11005 ;; This function is called by:
 11006 ;;		_INTERRUPT_InterruptManager
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _TMR0_ISR
 11012  09B3                     _TMR0_ISR:	
 11013                           
 11014                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 11015                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 11016                           
 11017                           ;incstack = 0
 11018                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11019  09B3  110B               	bcf	11,2	;volatile
 11020                           
 11021                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 11022  09B4  0021               	movlb	1	; select bank1
 11023  09B5  086D               	movf	_timer0ReloadVal^(0+128),w	;volatile
 11024  09B6  0020               	movlb	0	; select bank0
 11025  09B7  0095               	movwf	21	;volatile
 11026                           
 11027                           ;tmr0.c: 111: MAX31856Sec++;
 11028  09B8  3001               	movlw	1
 11029  09B9  00F1               	movwf	??_TMR0_ISR
 11030  09BA  0871               	movf	??_TMR0_ISR,w
 11031  09BB  0021               	movlb	1	; select bank1
 11032  09BC  07B8               	addwf	_MAX31856Sec^(0+128),f
 11033                           
 11034                           ;tmr0.c: 114: if (++CountCallBack >= 50) {
 11035  09BD  3001               	movlw	1
 11036  09BE  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11037  09BF  3000               	movlw	0
 11038  09C0  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11039  09C1  3000               	movlw	0
 11040  09C2  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11041  09C3  3032               	movlw	50
 11042  09C4  1903               	skipnz
 11043  09C5  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11044  09C6  1C03               	skipc
 11045  09C7  0008               	return
 11046                           
 11047                           ;tmr0.c: 116: TMR0_CallBack();
 11048  09C8  318A  22C3         	fcall	_TMR0_CallBack
 11049                           
 11050                           ;tmr0.c: 119: CountCallBack = 0;
 11051  09CA  0021               	movlb	1	; select bank1
 11052  09CB  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11053  09CC  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11054  09CD  0008               	return
 11055  09CE                     __end_of_TMR0_ISR:	
 11056                           
 11057                           	psect	text64
 11058  0AC3                     __ptext64:	
 11059 ;; *************** function _TMR0_CallBack *****************
 11060 ;; Defined at:
 11061 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;Total ram usage:        1 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_TMR0_ISR
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           
 11089                           ;psect for function _TMR0_CallBack
 11090  0AC3                     _TMR0_CallBack:	
 11091                           
 11092                           ;tmr0.c: 128: time_count++;
 11093                           
 11094                           ;incstack = 0
 11095                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 11096  0AC3  3001               	movlw	1
 11097  0AC4  00F0               	movwf	??_TMR0_CallBack
 11098  0AC5  0870               	movf	??_TMR0_CallBack,w
 11099  0AC6  0020               	movlb	0	; select bank0
 11100  0AC7  07ED               	addwf	_time_count,f
 11101                           
 11102                           ;tmr0.c: 129: if(time_count == 4 || time_count > 12) time_count = 0;
 11103  0AC8  3004               	movlw	4
 11104  0AC9  066D               	xorwf	_time_count,w
 11105  0ACA  1903               	btfsc	3,2
 11106  0ACB  2AD0               	goto	i1l3696
 11107  0ACC  300D               	movlw	13
 11108  0ACD  026D               	subwf	_time_count,w
 11109  0ACE  1C03               	skipc
 11110  0ACF  2AD1               	goto	i1l3698
 11111  0AD0                     i1l3696:	
 11112  0AD0  01ED               	clrf	_time_count
 11113  0AD1                     i1l3698:	
 11114                           
 11115                           ;tmr0.c: 130: LongPressSec++;
 11116  0AD1  3001               	movlw	1
 11117  0AD2  00F0               	movwf	??_TMR0_CallBack
 11118  0AD3  0870               	movf	??_TMR0_CallBack,w
 11119  0AD4  07F8               	addwf	_LongPressSec,f
 11120                           
 11121                           ;tmr0.c: 132: Cur_temperature_time_ch1++;
 11122  0AD5  3001               	movlw	1
 11123  0AD6  00F0               	movwf	??_TMR0_CallBack
 11124  0AD7  0870               	movf	??_TMR0_CallBack,w
 11125  0AD8  0021               	movlb	1	; select bank1
 11126  0AD9  07B6               	addwf	_Cur_temperature_time_ch1^(0+128),f
 11127                           
 11128                           ;tmr0.c: 133: if(Cur_temperature_time_ch1 > 130)
 11129  0ADA  3083               	movlw	131
 11130  0ADB  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
 11131  0ADC  1803               	btfsc	3,0
 11132                           
 11133                           ;tmr0.c: 134: {
 11134                           ;tmr0.c: 135: Cur_temperature_time_ch1 = 0;
 11135  0ADD  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
 11136                           
 11137                           ;tmr0.c: 136: }
 11138                           ;tmr0.c: 138: Cur_temperature_time_ch2++;
 11139  0ADE  3001               	movlw	1
 11140  0ADF  00F0               	movwf	??_TMR0_CallBack
 11141  0AE0  0870               	movf	??_TMR0_CallBack,w
 11142  0AE1  07B7               	addwf	_Cur_temperature_time_ch2^(0+128),f
 11143                           
 11144                           ;tmr0.c: 139: if(Cur_temperature_time_ch2 > 130)
 11145  0AE2  3083               	movlw	131
 11146  0AE3  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
 11147  0AE4  1C03               	skipc
 11148  0AE5  0008               	return
 11149                           
 11150                           ;tmr0.c: 140: {
 11151                           ;tmr0.c: 141: Cur_temperature_time_ch2= 0;
 11152  0AE6  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
 11153  0AE7  0008               	return
 11154  0AE8                     __end_of_TMR0_CallBack:	
 11155  007E                     btemp	set	126	;btemp
 11156  007E                     int$flags	set	126
 11157  007E                     wtemp	set	126
 11158  007E                     wtemp0	set	126
 11159  0080                     wtemp1	set	128
 11160  0082                     wtemp2	set	130
 11161  0084                     wtemp3	set	132
 11162  0086                     wtemp4	set	134
 11163  0088                     wtemp5	set	136
 11164  007F                     wtemp6	set	127
 11165  007E                     ttemp	set	126
 11166  007E                     ttemp0	set	126
 11167  0081                     ttemp1	set	129
 11168  0084                     ttemp2	set	132
 11169  0087                     ttemp3	set	135
 11170  007F                     ttemp4	set	127
 11171  007E                     ltemp	set	126
 11172  007E                     ltemp0	set	126
 11173  0082                     ltemp1	set	130
 11174  0086                     ltemp2	set	134
 11175  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     67      78
    BANK1            80      0      78
    BANK2            80      5      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_Write_Flash_finish
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _Calculate_Time->_Write_Flash_finish
    _Calculate_Time->_Write_Flash_head
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Save_Write_time
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  116806
                                             64 BANK0      3     3      0
                                              0 BANK2      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    4     4      0    3401
                                             19 BANK0      4     4      0
                     _FLASH_ReadWord
                 _Write_Flash_finish
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0   19272
                                             47 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   51059
                                             58 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   38129
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   28417
                                             57 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                10    10      0   19980
                                             47 BANK0     10    10      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0   14754
                                             25 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_time
                 _Write_Flash_finish
                   _Write_Flash_head
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_head                                     1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_finish                                   1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Save_Write_time                                      3     3      0    5897
                                             23 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      4     2      2    4429
                                             19 BANK0      4     2      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2904
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_time
               _Bq32k_Rtc_Read_Time
                 _I2C_Read_Buffer
                   _I2C_Receive_Byte
                   _I2C_Send_Byte
                   _I2C_Start
                   _I2C_Stop
                 _bcd2bin
                   ___bmul
               _Save_Write_word
                 _FLASH_WriteWord
                   _FLASH_ReadWord
                   _FLASH_WriteBlock
                     _FLASH_EraseBlock
             _Write_Flash_finish
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             _Write_Flash_head
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_time
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
       _Write_Flash_finish
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       _Write_Flash_head
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           _Save_Write_time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_word
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
           _Write_Flash_finish
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           _Write_Flash_head
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jul 08 15:19:28 2016

                        __end_of_I2C_Send_Buffer 0D3A                                   _SPI_Initialize 084A  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 0871                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 0800  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00ED  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 085D                                              l166 078F  
                                            l370 0476                                              l532 01B7  
                                            l516 00D8                                              l372 0478  
                                            l197 0992                                              l541 0E08  
                                            l534 01E2                                              l527 0161  
                                            l625 0A49                                              l641 0A69  
                                            l537 01EA                                              l529 01AF  
                                            l731 0E55                                              l627 0A4B  
                                            l643 0A6B                                              l379 04A6  
                                            l725 0E50                                              l901 0642  
                                            l389 0512                                              l670 0C91  
                                            l582 0C5E                                              l680 03DE  
                                            l737 0E71                                              l681 0405  
                                            l747 0E86                                              l861 0AB7  
                                            l862 0ABB                                              l766 0B00  
                                            l856 0AC1                                              l883 0602  
                                            l897 0635                                              l997 0F58  
                                            _RB1 0069                                              _RB3 006B  
                       __end_of_maxim_31856_init 07FC                                              _RB5 006D  
                                            _RA7 0067                                     ?_err_Display 0070  
                                   ___awmod@sign 0021                               _Write_Flash_finish 0B6B  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                                   __CFG_IESO$ON 0000                                 ?_FLASH_WriteWord 002A  
                         _maxim_start_conversion 0999                   FLASH_WriteBlock@flashWordArray 0022  
                                   __CFG_LVP$OFF 0000                                             l1001 0F89  
                                           l1024 0A2A                                             l4202 077A  
                                           l4300 08D1                                             l4232 0E57  
                                           l5040 0C3B                                             l5200 05E1  
                                           l4322 0DA6                                             l5050 0C46  
                                           l5210 060C                                             l4500 0C77  
                                           l4316 0D88                                             l5052 0C49  
                                           l5028 0C2D                                             l5300 0495  
                                           l4190 0752                                             l5038 0C38  
                                           l5230 0626                                             l5206 0606  
                                           l4416 0A40                                             l5056 0C4C  
                                           l5240 0639                                             l5304 04A7  
                                           l5082 0D1D                                             l4602 0CC4  
                                           l4282 0B10                                             l4450 0A23  
                                           l5234 062D                                             l5084 0D37  
                                           l4428 0A60                                             l4620 0B5D  
                                           l4364 066E                                             l4700 00EB  
                                           l5094 0AA9                                             l4470 0E9F  
                                           l4614 0B45                                             l4366 0699  
                                           l4702 00F1                                             l5262 0F6B  
                                           l4480 0ECD                                             l4616 0B51  
                                           l4624 0B66                                             l4800 0434  
                                           l4296 08CB                                             l4392 0CE7  
                                           l4544 02C8                                             l5192 05C9  
                                           l5360 0513                                             l4474 0EAE  
                                           l4730 013C                                             l4722 0119  
                                           l5178 0C26                                             l5362 0516  
                                           l4476 0EC3                                             l4804 043E  
                                           l4548 02D1                                             l5196 05D5  
                                           l5188 05C3                                             l5348 04EB  
                                           l4478 0EC8                                             l4590 0C9D  
                                           l4558 02E0                                             l4726 0128  
                                           l4830 0EFD                                             l5294 0480  
                                           l4488 0ED0                                             l4904 0E10  
                                           l4592 0CA9                                             l4568 038F  
                                           l4680 009F                                             l4840 0F05  
                                           l4824 0EF2                                             l4578 09EF  
                                           l4746 0174                                             l4930 0D4B  
                                           l4842 0F11                                             l4908 0E18  
                                           l4748 0179                                             l4684 00B3  
                                           l4676 0090                                             l4852 0F2C  
                                           l4598 0CBB                                             l4790 03A6  
                                           l4766 01C0                                             l4942 0D63  
                                           l4934 0D53                                             l4792 03C1  
                                           l4856 0F34                                             l4848 0F23  
                                           l4880 0DD4                                             l4872 0DCE  
                                           l4794 041A                                             l4938 0D5B  
                                           l4882 0DE0                                             l4890 0DF5  
                                           l4868 0DC7                                             l4798 0425  
                                           l4894 0DFD                                             l4886 0DEC  
                            ?_Write_Flash_finish 0070                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u4015 0B57                                             u4025 0B5E  
                                           u4070 0076                                             u4135 00A5  
                                           u4080 0077                                             u5107 0681  
                                           u4180 00FF                                             u5117 0688  
                                           u4245 012E                                             u4190 0100  
                                           u5207 0AAD                                             u5127 068F  
                                           u3455 073E                                             u4415 0F08  
                                           u5217 0951                                             u5137 06A8  
                                           u5307 0E5F                                             u5227 0957  
                                           u5147 06AF                                             u4435 0F12  
                                           u4515 0DD7                                             u5317 0E67  
                                           u5237 095D                                             u5157 06B6  
                                           u3645 08E6                                             u4445 0F1C  
                                           u5327 0E75                                             u5247 0963  
                                           u5167 0AF6                                             u4455 0F24  
                                           u4535 0DE6                                             u5337 0E7B  
                                           u5257 0938                                             u5177 0B06  
                                           u3745 0A2B                                             u4545 0DED  
                                           u5097 0469                                             u5347 0E8C  
                                           u5267 093E                                             u5187 0A70  
                                           u3755 0A30                                             u5357 0E92  
                                           u5277 0944                                             u5197 0A50  
                                           u3925 0CA0                                             u5367 098D  
                                           u5287 094A                                             u5297 0E59  
                                           u3945 0CAA                                             u4770 09D9  
                                           u3955 0CB4                                             u3965 0CBC  
                                           u3995 0B48                                             _TMR0 0015  
                                           _WPUB 020D                                             _WPUE 0210  
                                   __CFG_WRT$OFF 0000                                    __CFG_FCMEN$ON 0000  
                        __size_of_Set_start_flag 0006                           __size_of_WriteAll_1621 0035  
                                  ??_Key_Process 005A                                             _main 0459  
                                           fsr0h 0005                                             fsr1h 0007  
                                           fsr0l 0004                                             indf0 0000  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                 __end_of_I2C_Stop 0966  
                              ?_FLASH_WriteBlock 0020                                    __CFG_BOREN$ON 0000  
                                           ltemp 007E                              SendCmd_1621@command 0021  
                                           start 0013                                             ttemp 007E  
                                           wtemp 007E                                  __end_of_Dis_TAB 1015  
                         __end_of_SPI_Initialize 0850                               ??_FLASH_WriteBlock 0023  
                               ?_I2C_Read_Buffer 0076                                ___bmul@multiplier 0076  
                                  __CFG_MCLRE$ON 0000                                     main@bat_data 0163  
                 __end_of_SPI_Exchange8bitBuffer 0EE7                                  time_Display@num 0033  
                           ??_Write_Flash_finish 0077                          __end_of_TMR0_Initialize 08B8  
                                ?_FVR_Initialize 0070                                    ?_EUSART_Write 0070  
                 __size_of_OSCILLATOR_Initialize 0005                    __end_of_OSCILLATOR_Initialize 0844  
                                __end_of_bcd2bin 08EF                                            ?_main 0070  
                                __end_of___awdiv 0F39                                    __CFG_WDTE$OFF 0000  
                                __end_of___awmod 0E02                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0CC9  
                                          i1l255 000E                                  __end_of___lwmod 0B6B  
                                ___awdiv@counter 0020                                            _RCREG 0199  
                                          _RCSTA 019D                                            u371m0 06C8  
                                          u372m0 06D5                                       _Flash_buff 0120  
                                          u386m0 02C1                                            u389m0 0388  
                        ??_one_temperature_trans 0028                                ?_SendDataBit_1621 0073  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                                          _TXSTA 019E                                 __end_of_TMR0_ISR 09CE  
                             ??_SendDataBit_1621 0074                     __end_of_tc_temperature_trans 01F3  
                                          main@i 0162                                __end_of_I2C_Start 094D  
                            _Bq32k_Rtc_Read_Time 0F9C                                  Tc_Display@count 002A  
                              WriteAll_1621@addr 0024                                            ltemp0 007E  
                                          ltemp1 0082                                            ltemp2 0086  
                                          ltemp3 0080                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                                            wtemp0 007E  
                                          wtemp1 0080                                            wtemp2 0082  
                                          wtemp3 0084                                            wtemp4 0086  
                                          wtemp5 0088                                            wtemp6 007F  
                         __size_of_I2C_Send_Byte 004C                                  _Cur_temperature 00B0  
                                     _Tc_Display 0391                                  ?_SPI_Initialize 0070  
                    __end_of_temperature_display 0D77                                  __initialization 0015  
                            __end_of_Key_Process 0643                                 ?_I2C_Send_Buffer 0076  
                                   __end_of_main 0520                                   WriteAll_1621@i 0025  
                                 WriteAll_1621@p 0020                                 __end_of_Key_Scan 0AC3  
                                  main@data_temp 0160                                   ??_EUSART_Write 0073  
                           ?_Bq32k_Rtc_Read_Time 0070                      __end_of_temperature_process 0C5F  
                                 __CFG_LPBOR$OFF 0000     maxim_31856_write_register@uch_register_value 0074  
                    ?_INTERRUPT_InterruptManager 0070                                    _WriteAll_1621 0C5F  
                                         ??_main 0060                                     Key_Process@i 005E  
 maxim_31856_write_register@uch_register_address 0075                          __size_of_FLASH_ReadWord 0019  
                        Bq32k_Rtc_Read_Time@temp 0025                                I2C_Receive_Byte@i 0075  
                       __end_of_SPI_Exchange8bit 0875                                           _ADCON0 009D  
                                         _ADCON1 009E                        FLASH_WriteBlock@writeAddr 0020  
                                         _ADRESH 009C                                           _ADRESL 009B  
                               ___awdiv@dividend 0075                                           _APFCON 011D  
                                         _ANSELA 018C                                           _ANSELB 018D  
                                         _ANSELC 018E                                           i1l3696 0AD0  
                                         i1l3698 0AD1                                           _FVRCON 0117  
                                         _PMADRH 0192                                           _PMADRL 0191  
                                         _PMDATH 0194                                           _PMDATL 0193  
                              _temperature_value 0063                                           _PMCON2 0196  
                      __size_of_FLASH_EraseBlock 001C                                           _OSCCON 0099  
                                         _SPBRGH 019C                                           _SPBRGL 019B  
                       _Cur_temperature_time_ch1 00B6                         _Cur_temperature_time_ch2 00B7  
                                         _TRISB1 0469                                           _TRISB3 046B  
                                         _SSPBUF 0211                                    ?_SendCmd_1621 0070  
                                  ?_SendBit_1621 0073                                   __CFG_PWRTE$OFF 0000  
                                _Bq32k_Time_Init 09CE                                 SendBit_1621@data 0076  
                                         ___bmul 08C9                                        ??_bcd2bin 0020  
                                         ___wmul 0A20                    FLASH_WriteWord@blockStartAddr 0030  
                                      ??___awdiv 0077                                   __CFG_STVREN$ON 0000  
                                      ??___awmod 0077                            ??_Bq32k_Rtc_Read_Time 0023  
                                      ??___lwdiv 0025                                        ??___lwmod 0077  
                   ?_maxim_31856_read_nregisters 0023                              FLASH_WriteWord@word 002D  
                                 ?_WriteAll_1621 0020                                 ?_TMR0_Initialize 0070  
                                         _memset 09E9                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 0022                                  ___awmod@divisor 0073  
                                         _uch_sr 00C1                                  ___awmod@counter 0020  
                                         _rtc_tm 00D8                                  _Set_finish_flag 083A  
                                  _I2C_Send_Byte 0E4A                               ??_I2C_Receive_Byte 0073  
                        FLASH_ReadWord@flashAddr 0073                                        ?_I2C_Stop 0070  
                   ??_maxim_31856_write_register 0075                            I2C_Read_Buffer@Length 0077  
                       ADC_GetConversion@channel 0076                             __size_of_err_Display 002C  
                          __end_of_TMR0_CallBack 0AE8                                       bcd2bin@val 0077  
                     ??_maxim_clear_fault_status 0077                                   _Set_start_flag 0844  
                              _SYSTEM_Initialize 08EF                                   ??_SendCmd_1621 0020  
                        __end_of__initialization 003B                                   ??_SendBit_1621 0074  
                                    _Key_Process 05B5                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                               Calculate_Time@temp 0043  
                            ___bmul@multiplicand 0073                                time_Display@F2129 00A8  
                                 __pcstackCOMMON 0070             tc_temperature_trans@temperature_temp 0057  
                                   __pidataBANK1 0875                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 003F                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074                                 FLASH_WriteWord@i 0032  
            __size_of_maxim_31856_write_register 000D                                    ?_Save_process 0070  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0025  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 00AC  
                                _temperature_int 00B2                                       ??_I2C_Stop 0073  
                                  ??_Two_Display 0026                               ??_maxim_31856_init 0076  
                    FLASH_WriteBlock@GIEBitValue 0028                                 Two_Display@F2123 00A0  
                           I2C_Receive_Byte@Data 0074                           __end_of_Set_start_flag 084A  
                            I2C_Read_Buffer@Flag 0022                        __end_of_SYSTEM_Initialize 0904  
                      __size_of_Write_Flash_head 002F                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 09E9                                       __pbssBANK0 0063  
                                     __pbssBANK1 00A0                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                             __end_of_EUSART_Write 0864  
                                __CFG_VCAPEN$OFF 0000                                 ??_FVR_Initialize 0073  
                                     __pmaintext 0459                                          ?___bmul 0073  
                        __end_of_Set_finish_flag 083F                            ?_tc_temperature_trans 0070  
                                    _Record_flag 006B                                  ??_WriteAll_1621 0023  
                                        ?___wmul 0073                                       ??_TMR0_ISR 0071  
                                 ??_Save_process 004F                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0073  
                 __end_of_maxim_start_conversion 09B3                        __size_of_FLASH_WriteBlock 006B  
                        __size_of_ADC_Initialize 0008                                   _FLASH_ReadWord 0966  
                            __size_of_Tc_Display 00C8                   __size_of_one_temperature_trans 0048  
                  __end_of_one_temperature_trans 0E4A                                          _OSCSTAT 009A  
                       __size_of_Save_Write_time 0072                                          _SSP1ADD 0212  
                       __size_of_Save_Write_word 0036                        _maxim_31856_read_register 08B8  
                                ?_Set_start_flag 0070             __size_of_maxim_31856_read_nregisters 0018  
                                     ??_Key_Scan 0073                                          _Dis_TAB 1000  
                               _FLASH_EraseBlock 0A04                                 ??_SPI_Initialize 0073  
                       __size_of_FLASH_WriteWord 0045                          __size_of_Calculate_Time 019E  
                            __end_of_Two_Display 0BFA                        __size_of_SendDataBit_1621 0020  
                                      _I2C_Start 0934  maxim_31856_read_nregisters@uch_register_address 0027  
                                      _CH1_state 00B4                                        _CH2_state 00B5  
                                        _bcd2bin 08DA                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 0EE7  
                                        ___awmod 0DBC                                  __size_of___wmul 001E  
                                        ___lwdiv 0C94                                          ___lwmod 0B3E  
                                ??_I2C_Send_Byte 0073                      __size_of_Write_Flash_finish 002F  
                              I2C_Send_Byte@Data 0074                           __end_of_FLASH_ReadWord 097F  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 0798                                          __ptext2 0BFA  
                                        __ptext3 0F39                                          __ptext4 08EF  
                                        __ptext5 08A8                                          __ptext6 084A  
                                        __ptext7 0A7E                                          __ptext8 083F  
                                        __ptext9 07FC                             __end_of_SendCmd_1621 091C  
                           SendDataBit_1621@data 0076                             __end_of_SendBit_1621 0A5E  
             __end_of_maxim_31856_write_register 0898                       _maxim_31856_write_register 088B  
                          _OSCILLATOR_Initialize 083F                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 0079  
                                        _uch_cr1 00BD                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 00C2                 __end_of_maxim_clear_fault_status 08A8  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 0857  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 0850                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0021  
                                        initloop 0851                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 087F                           ??_tc_temperature_trans 004F  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0030  
                                      _RCSTAbits 019D                                 ?_Set_finish_flag 0070  
                          Serach_Flash_Head@data 0033                                     __pstringtext 1000  
                      FLASH_ReadWord@GIEBitValue 0075                                       _time_count 006D  
                                ?_FLASH_ReadWord 0073                     __size_of_temperature_display 003D  
                            ??_EUSART_Initialize 0073                                     _display_buff 00DF  
                       __size_of_I2C_Send_Buffer 003B                                 __CFG_FOSC$INTOSC 0000  
                   __size_of_temperature_process 0033                            __size_of_EUSART_Write 0008  
                                    _Two_Display 0BC9                                __size_of_I2C_Stop 0019  
                               _Write_Flash_head 0B9A                              Bq32k_Time_Init@temp 0027  
                           __end_of_Save_process 0F9C                        __size_of_I2C_Receive_Byte 002A  
                           Key_Process@gKeyValue 005D                        __end_of_EUSART_Initialize 088B  
                            Calculate_Time@temp1 0047                              Calculate_Time@temp2 004B  
                              ??_Save_Write_time 0037                                     ?_Key_Process 0070  
                              ??_Save_Write_word 0035                         ??_SPI_Exchange8bitBuffer 0020  
                                   ??_Tc_Display 0029                      __end_of_Bq32k_Rtc_Read_Time 1000  
                              FLASH_WriteBlock@i 0029                                ??_FLASH_WriteWord 0076  
                   tc_temperature_trans@var_time 0055        maxim_start_conversion@uch_conversion_mode 0020  
                                 __end_of___bmul 08DA                                   __end_of___wmul 0A3E  
                                   _EUSART_Write 085C                                __size_of_TMR0_ISR 001B  
                                 _ADC_Initialize 0864                                 _FLASH_WriteBlock 072D  
                           Key_Process@data_temp 005B                           ?_OSCILLATOR_Initialize 0070  
                                 __end_of_memset 0A04                                   Tc_Display@data 002B  
                               WriteAll_1621@cnt 0022                                    ??_err_Display 0026  
                            start_initialization 0015                         __size_of_TMR0_Initialize 0010  
                             __end_of_Tc_Display 0459                  __size_of_PIN_MANAGER_Initialize 0022  
                              ??_I2C_Read_Buffer 0020                                   Two_Display@num 0027  
                                 _Calculate_Time 01F3                        __size_of_maxim_31856_init 0064  
                               _SendDataBit_1621 0A5E                                      ??_I2C_Start 0073  
                              __size_of_Key_Scan 0023                                 _temperature_sign 00B9  
             __size_of_maxim_31856_read_register 0011                                  SendBit_1621@cnt 0073  
                                       ??___bmul 0074                __size_of_maxim_clear_fault_status 0010  
                      ?_maxim_clear_fault_status 0070                                         ??___wmul 0077  
                          __size_of_SendCmd_1621 0018                            __size_of_SendBit_1621 0020  
                            I2C_Send_Buffer@Flag 0024                           __size_of_TMR0_CallBack 0025  
                         __end_of_ADC_Initialize 086C                                      __pdataBANK1 00E3  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                    FLASH_EraseBlock@GIEBitValue 0075                         __end_of_FLASH_EraseBlock 0A20  
                               ??_Set_start_flag 0073                                      __pbssCOMMON 0078  
                                _CH1_temperature 0067                                        ___latbits 0003  
                                  __pcstackBANK0 0020                                    __pcstackBANK2 0160  
                           __end_of_time_Display 05B5                    SPI_Exchange8bitBuffer@dataOut 0075  
                         __end_of_Calculate_Time 0391                                ??_I2C_Send_Buffer 0020  
                            __end_of_err_Display 0B3E                       __size_of_EUSART_Initialize 000C  
                             I2C_Read_Buffer@ADD 0021                                     _LongPressSec 0078  
                              Two_Display@number 002B                                     _SendCmd_1621 0904  
                                   _SendBit_1621 0A3E                                        __pnvBANK1 00ED  
                __size_of_SPI_Exchange8bitBuffer 0051                                 ___lwdiv@dividend 0023  
                         _PIN_MANAGER_Initialize 0A7E                                      _MAX31856Sec 00B8  
              __end_of_maxim_31856_read_register 08C9                                         ?_bcd2bin 0070  
                                       ?___awdiv 0073                                         ?___awmod 0073  
            __end_of_maxim_31856_read_nregisters 0934                      _maxim_31856_read_nregisters 091C  
                                       ?___lwdiv 0021                                         ?___lwmod 0073  
                                ?_ADC_Initialize 0070                                SendDataBit_1621@i 0077  
                          __end_of_WriteAll_1621 0C94                     ??_INTERRUPT_InterruptManager 0072  
                    ?_maxim_31856_write_register 0074                                         _I2C_Stop 094D  
                          __size_of_Save_process 0063                                  _CH2_temperature 0069  
                               I2C_Send_Buffer@i 0023                                 ___lwdiv@quotient 0027  
                                  _TMR0_CallBack 0AC3                                  ?_Calculate_Time 0070  
                            _temperature_decimal 006C                            _one_temperature_trans 0E02  
                               _I2C_Receive_Byte 0AE8                              SendDataBit_1621@cnt 0073  
                       FLASH_WriteWord@flashAddr 002A                                   err_Display@num 0027  
                 FLASH_WriteBlock@blockStartAddr 0026            maxim_31856_read_nregisters@uch_nBytes 0024  
                            _temperature_display 0D3A                                ??_TMR0_Initialize 0073  
                                 ___wmul@product 0020                                        clear_ram0 0856  
                                      _uch_ltcbh 007A                                        _uch_ltcbl 00BE  
                                      _uch_ltcbm 00BF                             __size_of_Key_Process 008E  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0C2C  
                                       _PIR1bits 0011                        FLASH_EraseBlock@startAddr 0073  
                               ??_FLASH_ReadWord 0075                        __size_of_SPI_Exchange8bit 0009  
                     __end_of_Write_Flash_finish 0B9A                                         _SSP1CON1 0215  
                                       _TMR0_ISR 09B3                         __end_of_Write_Flash_head 0BC9  
                                       _SSP1STAT 0214                                     _Save_process 0F39  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0E96  
                                     _ADCON0bits 009D                                ___wmul@multiplier 0073  
                        __size_of_FVR_Initialize 0004                           _SPI_Exchange8bitBuffer 0E96  
                                 _Cur_Save_Index 00AE                                      _err_Display 0B12  
                            Save_Write_word@data 0033                             ?_temperature_process 0070  
                                _Save_Write_time 06BB                                  _Save_Write_word 0CC9  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                _FLASH_WriteWord 0D77                                         _Key_Scan 0AA0  
            maxim_31856_read_nregisters@uch_buff 0023                         __end_of_FLASH_WriteBlock 0798  
                               _maxim_31856_init 0798                                _Serach_Flash_Head 0BFA  
                       __size_of_Bq32k_Time_Init 001B                               ?_Serach_Flash_Head 0070  
                              _ADC_GetConversion 097F                         ??_maxim_start_conversion 0077  
                             I2C_Send_Buffer@ADD 0022                    __size_of_tc_temperature_trans 01B4  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0035  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 0059                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 0643                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0078  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2126 00A4                         __end_of_SendDataBit_1621 0A7E  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0021                                  ___lwdiv@counter 0026  
                                       __ptext10 087F                                         __ptext11 0864  
                                       __ptext20 0A20                                         __ptext12 05B5  
                                       __ptext21 0B9A                                         __ptext13 0C2C  
                                       __ptext30 08DA                                         __ptext22 0B6B  
                                       __ptext14 0520                                         __ptext31 08C9  
                                       __ptext23 06BB                                         __ptext15 0DBC  
                                       __ptext40 0E02                                         __ptext32 0643  
                                       __ptext24 0CC9                                         __ptext16 0EE7  
                                       __ptext41 0999                                         __ptext33 0AE8  
                                       __ptext25 0D77                                         __ptext17 0D3A  
                                       __ptext50 0844                                         __ptext42 088B  
                                       __ptext34 0898                                         __ptext26 072D  
                                       __ptext18 003F                                         __ptext51 083A  
                                       __ptext43 08B8                                         __ptext35 0B12  
                                       __ptext27 0A04                                         __ptext19 01F3  
                                       __ptext60 0E4A                                         __ptext52 0904  
                                       __ptext44 091C                                         __ptext36 0391  
                                       __ptext28 0966                                         __ptext61 097F  
                                       __ptext53 0A3E                                         __ptext45 0E96  
                                       __ptext37 09E9                                         __ptext29 0F9C  
                                       __ptext54 0AA0                                         __ptext46 086C  
                                       __ptext38 0B3E                                         __ptext63 09B3  
                                       __ptext55 085C                                         __ptext47 0BC9  
                                       __ptext39 0C94                                         __ptext64 0AC3  
                                       __ptext56 09CE                                         __ptext48 0C5F  
                                       __ptext57 0CFF                                         __ptext49 0A5E  
                                       __ptext58 094D                                         __ptext59 0934  
                         ?_one_temperature_trans 0070                                     _SSP1CON1bits 0215  
                          FLASH_WriteWord@ramBuf 002C                            FLASH_WriteWord@offset 002F  
                      __end_of_Serach_Flash_Head 0C2C                                    __size_of_main 00C7  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 0999  
                                       _uch_cjth 00BB                                         _uch_cjtl 00BC  
                                       _uch_mask 00C0                             Save_process@var_time 0051  
                                       int$flags 007E                                     _time_Display 0520  
                                       _tmr_flag 00BA               __end_of_INTERRUPT_InterruptManager 0013  
                     _INTERRUPT_InterruptManager 0004                     __size_of_Bq32k_Rtc_Read_Time 0064  
                                   _SSP1STATbits 0214                          __end_of_Save_Write_time 072D  
                        __end_of_Save_Write_word 0CFF                                  _I2C_Send_Buffer 0CFF  
                              ?_FLASH_EraseBlock 0073                               ??_FLASH_EraseBlock 0075  
                                     _INTCONbits 000B                          __end_of_FLASH_WriteWord 0DBC  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0020                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 06BB                                 _SPI_Exchange8bit 086C  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 0B12  
                              ??_Bq32k_Time_Init 0025                                   _FVR_Initialize 07FC  
                                   _rtc_save_ch1 00CA                                     _rtc_save_ch2 00D1  
                                     _OPTION_REG 0095                                 ??_Calculate_Time 0039  
                                ___lwmod@divisor 0073                                  _TMR0_Initialize 08A8  
                                ___lwmod@counter 0020         tc_temperature_trans@temperature_absolute 0053  
                              ??_Set_finish_flag 0073                               EUSART_Write@txData 0073  
                           __size_of_Two_Display 0031                   __end_of_PIN_MANAGER_Initialize 0AA0  
                     __size_of_Serach_Flash_Head 0032                             Bq32k_Time_Init@F2018 00E3  
                     __size_of_ADC_GetConversion 001A                         _maxim_clear_fault_status 0898  
