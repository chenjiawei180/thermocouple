

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Jul 04 14:39:35 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x7E,2
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020D                     	;# 
   141  0210                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0298                     	;# 
   162  0298                     	;# 
   163  0299                     	;# 
   164  029A                     	;# 
   165  0394                     	;# 
   166  0395                     	;# 
   167  0396                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  0116                     	;# 
   226  0117                     	;# 
   227  011D                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  018E                     	;# 
   231  0191                     	;# 
   232  0191                     	;# 
   233  0192                     	;# 
   234  0193                     	;# 
   235  0193                     	;# 
   236  0194                     	;# 
   237  0195                     	;# 
   238  0196                     	;# 
   239  0197                     	;# 
   240  0199                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019D                     	;# 
   249  019E                     	;# 
   250  019F                     	;# 
   251  020D                     	;# 
   252  0210                     	;# 
   253  0211                     	;# 
   254  0211                     	;# 
   255  0212                     	;# 
   256  0212                     	;# 
   257  0213                     	;# 
   258  0213                     	;# 
   259  0214                     	;# 
   260  0214                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0216                     	;# 
   265  0216                     	;# 
   266  0217                     	;# 
   267  0217                     	;# 
   268  0291                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0293                     	;# 
   272  0298                     	;# 
   273  0298                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  0394                     	;# 
   277  0395                     	;# 
   278  0396                     	;# 
   279  0FE4                     	;# 
   280  0FE5                     	;# 
   281  0FE6                     	;# 
   282  0FE7                     	;# 
   283  0FE8                     	;# 
   284  0FE9                     	;# 
   285  0FEA                     	;# 
   286  0FEB                     	;# 
   287  0FED                     	;# 
   288  0FEE                     	;# 
   289  0FEF                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  0090                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0099                     	;# 
   327  009A                     	;# 
   328  009B                     	;# 
   329  009B                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  011D                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  018E                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0197                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020D                     	;# 
   363  0210                     	;# 
   364  0211                     	;# 
   365  0211                     	;# 
   366  0212                     	;# 
   367  0212                     	;# 
   368  0213                     	;# 
   369  0213                     	;# 
   370  0214                     	;# 
   371  0214                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0215                     	;# 
   375  0216                     	;# 
   376  0216                     	;# 
   377  0217                     	;# 
   378  0217                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0298                     	;# 
   384  0298                     	;# 
   385  0299                     	;# 
   386  029A                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  011D                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  018E                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0197                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020D                     	;# 
   474  0210                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0291                     	;# 
   491  0291                     	;# 
   492  0292                     	;# 
   493  0293                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  0394                     	;# 
   499  0395                     	;# 
   500  0396                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  000E                     	;# 
   527  0010                     	;# 
   528  0011                     	;# 
   529  0012                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  0090                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0095                     	;# 
   546  0096                     	;# 
   547  0097                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  011D                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  0191                     	;# 
   565  0191                     	;# 
   566  0192                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0194                     	;# 
   570  0195                     	;# 
   571  0196                     	;# 
   572  0197                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020D                     	;# 
   585  0210                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0291                     	;# 
   602  0291                     	;# 
   603  0292                     	;# 
   604  0293                     	;# 
   605  0298                     	;# 
   606  0298                     	;# 
   607  0299                     	;# 
   608  029A                     	;# 
   609  0394                     	;# 
   610  0395                     	;# 
   611  0396                     	;# 
   612  0FE4                     	;# 
   613  0FE5                     	;# 
   614  0FE6                     	;# 
   615  0FE7                     	;# 
   616  0FE8                     	;# 
   617  0FE9                     	;# 
   618  0FEA                     	;# 
   619  0FEB                     	;# 
   620  0FED                     	;# 
   621  0FEE                     	;# 
   622  0FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0016                     	;# 
   644  0017                     	;# 
   645  0018                     	;# 
   646  0019                     	;# 
   647  001A                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  008C                     	;# 
   651  008D                     	;# 
   652  008E                     	;# 
   653  0090                     	;# 
   654  0091                     	;# 
   655  0092                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0099                     	;# 
   660  009A                     	;# 
   661  009B                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  010C                     	;# 
   667  010D                     	;# 
   668  010E                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  011D                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  0191                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0197                     	;# 
   684  0199                     	;# 
   685  019A                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019B                     	;# 
   690  019C                     	;# 
   691  019C                     	;# 
   692  019D                     	;# 
   693  019E                     	;# 
   694  019F                     	;# 
   695  020D                     	;# 
   696  0210                     	;# 
   697  0211                     	;# 
   698  0211                     	;# 
   699  0212                     	;# 
   700  0212                     	;# 
   701  0213                     	;# 
   702  0213                     	;# 
   703  0214                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0291                     	;# 
   713  0291                     	;# 
   714  0292                     	;# 
   715  0293                     	;# 
   716  0298                     	;# 
   717  0298                     	;# 
   718  0299                     	;# 
   719  029A                     	;# 
   720  0394                     	;# 
   721  0395                     	;# 
   722  0396                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE9                     	;# 
   729  0FEA                     	;# 
   730  0FEB                     	;# 
   731  0FED                     	;# 
   732  0FEE                     	;# 
   733  0FEF                     	;# 
   734  0000                     	;# 
   735  0001                     	;# 
   736  0002                     	;# 
   737  0003                     	;# 
   738  0004                     	;# 
   739  0005                     	;# 
   740  0006                     	;# 
   741  0007                     	;# 
   742  0008                     	;# 
   743  0009                     	;# 
   744  000A                     	;# 
   745  000B                     	;# 
   746  000C                     	;# 
   747  000D                     	;# 
   748  000E                     	;# 
   749  0010                     	;# 
   750  0011                     	;# 
   751  0012                     	;# 
   752  0015                     	;# 
   753  0016                     	;# 
   754  0016                     	;# 
   755  0017                     	;# 
   756  0018                     	;# 
   757  0019                     	;# 
   758  001A                     	;# 
   759  001B                     	;# 
   760  001C                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  008E                     	;# 
   764  0090                     	;# 
   765  0091                     	;# 
   766  0092                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  0116                     	;# 
   781  0117                     	;# 
   782  011D                     	;# 
   783  018C                     	;# 
   784  018D                     	;# 
   785  018E                     	;# 
   786  0191                     	;# 
   787  0191                     	;# 
   788  0192                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0194                     	;# 
   792  0195                     	;# 
   793  0196                     	;# 
   794  0197                     	;# 
   795  0199                     	;# 
   796  019A                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019C                     	;# 
   802  019C                     	;# 
   803  019D                     	;# 
   804  019E                     	;# 
   805  019F                     	;# 
   806  020D                     	;# 
   807  0210                     	;# 
   808  0211                     	;# 
   809  0211                     	;# 
   810  0212                     	;# 
   811  0212                     	;# 
   812  0213                     	;# 
   813  0213                     	;# 
   814  0214                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  0291                     	;# 
   824  0291                     	;# 
   825  0292                     	;# 
   826  0293                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  029A                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  0FE4                     	;# 
   835  0FE5                     	;# 
   836  0FE6                     	;# 
   837  0FE7                     	;# 
   838  0FE8                     	;# 
   839  0FE9                     	;# 
   840  0FEA                     	;# 
   841  0FEB                     	;# 
   842  0FED                     	;# 
   843  0FEE                     	;# 
   844  0FEF                     	;# 
   845  0000                     	;# 
   846  0001                     	;# 
   847  0002                     	;# 
   848  0003                     	;# 
   849  0004                     	;# 
   850  0005                     	;# 
   851  0006                     	;# 
   852  0007                     	;# 
   853  0008                     	;# 
   854  0009                     	;# 
   855  000A                     	;# 
   856  000B                     	;# 
   857  000C                     	;# 
   858  000D                     	;# 
   859  000E                     	;# 
   860  0010                     	;# 
   861  0011                     	;# 
   862  0012                     	;# 
   863  0015                     	;# 
   864  0016                     	;# 
   865  0016                     	;# 
   866  0017                     	;# 
   867  0018                     	;# 
   868  0019                     	;# 
   869  001A                     	;# 
   870  001B                     	;# 
   871  001C                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  008E                     	;# 
   875  0090                     	;# 
   876  0091                     	;# 
   877  0092                     	;# 
   878  0095                     	;# 
   879  0096                     	;# 
   880  0097                     	;# 
   881  0099                     	;# 
   882  009A                     	;# 
   883  009B                     	;# 
   884  009B                     	;# 
   885  009C                     	;# 
   886  009D                     	;# 
   887  009E                     	;# 
   888  010C                     	;# 
   889  010D                     	;# 
   890  010E                     	;# 
   891  0116                     	;# 
   892  0117                     	;# 
   893  011D                     	;# 
   894  018C                     	;# 
   895  018D                     	;# 
   896  018E                     	;# 
   897  0191                     	;# 
   898  0191                     	;# 
   899  0192                     	;# 
   900  0193                     	;# 
   901  0193                     	;# 
   902  0194                     	;# 
   903  0195                     	;# 
   904  0196                     	;# 
   905  0197                     	;# 
   906  0199                     	;# 
   907  019A                     	;# 
   908  019B                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019C                     	;# 
   913  019C                     	;# 
   914  019D                     	;# 
   915  019E                     	;# 
   916  019F                     	;# 
   917  020D                     	;# 
   918  0210                     	;# 
   919  0211                     	;# 
   920  0211                     	;# 
   921  0212                     	;# 
   922  0212                     	;# 
   923  0213                     	;# 
   924  0213                     	;# 
   925  0214                     	;# 
   926  0214                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0216                     	;# 
   931  0216                     	;# 
   932  0217                     	;# 
   933  0217                     	;# 
   934  0291                     	;# 
   935  0291                     	;# 
   936  0292                     	;# 
   937  0293                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  0394                     	;# 
   943  0395                     	;# 
   944  0396                     	;# 
   945  0FE4                     	;# 
   946  0FE5                     	;# 
   947  0FE6                     	;# 
   948  0FE7                     	;# 
   949  0FE8                     	;# 
   950  0FE9                     	;# 
   951  0FEA                     	;# 
   952  0FEB                     	;# 
   953  0FED                     	;# 
   954  0FEE                     	;# 
   955  0FEF                     	;# 
   956  0000                     	;# 
   957  0001                     	;# 
   958  0002                     	;# 
   959  0003                     	;# 
   960  0004                     	;# 
   961  0005                     	;# 
   962  0006                     	;# 
   963  0007                     	;# 
   964  0008                     	;# 
   965  0009                     	;# 
   966  000A                     	;# 
   967  000B                     	;# 
   968  000C                     	;# 
   969  000D                     	;# 
   970  000E                     	;# 
   971  0010                     	;# 
   972  0011                     	;# 
   973  0012                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  0090                     	;# 
   987  0091                     	;# 
   988  0092                     	;# 
   989  0095                     	;# 
   990  0096                     	;# 
   991  0097                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  010C                     	;# 
  1000  010D                     	;# 
  1001  010E                     	;# 
  1002  0116                     	;# 
  1003  0117                     	;# 
  1004  011D                     	;# 
  1005  018C                     	;# 
  1006  018D                     	;# 
  1007  018E                     	;# 
  1008  0191                     	;# 
  1009  0191                     	;# 
  1010  0192                     	;# 
  1011  0193                     	;# 
  1012  0193                     	;# 
  1013  0194                     	;# 
  1014  0195                     	;# 
  1015  0196                     	;# 
  1016  0197                     	;# 
  1017  0199                     	;# 
  1018  019A                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019C                     	;# 
  1024  019C                     	;# 
  1025  019D                     	;# 
  1026  019E                     	;# 
  1027  019F                     	;# 
  1028  020D                     	;# 
  1029  0210                     	;# 
  1030  0211                     	;# 
  1031  0211                     	;# 
  1032  0212                     	;# 
  1033  0212                     	;# 
  1034  0213                     	;# 
  1035  0213                     	;# 
  1036  0214                     	;# 
  1037  0214                     	;# 
  1038  0215                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0216                     	;# 
  1042  0216                     	;# 
  1043  0217                     	;# 
  1044  0217                     	;# 
  1045  0291                     	;# 
  1046  0291                     	;# 
  1047  0292                     	;# 
  1048  0293                     	;# 
  1049  0298                     	;# 
  1050  0298                     	;# 
  1051  0299                     	;# 
  1052  029A                     	;# 
  1053  0394                     	;# 
  1054  0395                     	;# 
  1055  0396                     	;# 
  1056  0FE4                     	;# 
  1057  0FE5                     	;# 
  1058  0FE6                     	;# 
  1059  0FE7                     	;# 
  1060  0FE8                     	;# 
  1061  0FE9                     	;# 
  1062  0FEA                     	;# 
  1063  0FEB                     	;# 
  1064  0FED                     	;# 
  1065  0FEE                     	;# 
  1066  0FEF                     	;# 
  1067  0000                     	;# 
  1068  0001                     	;# 
  1069  0002                     	;# 
  1070  0003                     	;# 
  1071  0004                     	;# 
  1072  0005                     	;# 
  1073  0006                     	;# 
  1074  0007                     	;# 
  1075  0008                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  0010                     	;# 
  1083  0011                     	;# 
  1084  0012                     	;# 
  1085  0015                     	;# 
  1086  0016                     	;# 
  1087  0016                     	;# 
  1088  0017                     	;# 
  1089  0018                     	;# 
  1090  0019                     	;# 
  1091  001A                     	;# 
  1092  001B                     	;# 
  1093  001C                     	;# 
  1094  008C                     	;# 
  1095  008D                     	;# 
  1096  008E                     	;# 
  1097  0090                     	;# 
  1098  0091                     	;# 
  1099  0092                     	;# 
  1100  0095                     	;# 
  1101  0096                     	;# 
  1102  0097                     	;# 
  1103  0099                     	;# 
  1104  009A                     	;# 
  1105  009B                     	;# 
  1106  009B                     	;# 
  1107  009C                     	;# 
  1108  009D                     	;# 
  1109  009E                     	;# 
  1110  010C                     	;# 
  1111  010D                     	;# 
  1112  010E                     	;# 
  1113  0116                     	;# 
  1114  0117                     	;# 
  1115  011D                     	;# 
  1116  018C                     	;# 
  1117  018D                     	;# 
  1118  018E                     	;# 
  1119  0191                     	;# 
  1120  0191                     	;# 
  1121  0192                     	;# 
  1122  0193                     	;# 
  1123  0193                     	;# 
  1124  0194                     	;# 
  1125  0195                     	;# 
  1126  0196                     	;# 
  1127  0197                     	;# 
  1128  0199                     	;# 
  1129  019A                     	;# 
  1130  019B                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019C                     	;# 
  1135  019C                     	;# 
  1136  019D                     	;# 
  1137  019E                     	;# 
  1138  019F                     	;# 
  1139  020D                     	;# 
  1140  0210                     	;# 
  1141  0211                     	;# 
  1142  0211                     	;# 
  1143  0212                     	;# 
  1144  0212                     	;# 
  1145  0213                     	;# 
  1146  0213                     	;# 
  1147  0214                     	;# 
  1148  0214                     	;# 
  1149  0215                     	;# 
  1150  0215                     	;# 
  1151  0215                     	;# 
  1152  0216                     	;# 
  1153  0216                     	;# 
  1154  0217                     	;# 
  1155  0217                     	;# 
  1156  0291                     	;# 
  1157  0291                     	;# 
  1158  0292                     	;# 
  1159  0293                     	;# 
  1160  0298                     	;# 
  1161  0298                     	;# 
  1162  0299                     	;# 
  1163  029A                     	;# 
  1164  0394                     	;# 
  1165  0395                     	;# 
  1166  0396                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178  0000                     	;# 
  1179  0001                     	;# 
  1180  0002                     	;# 
  1181  0003                     	;# 
  1182  0004                     	;# 
  1183  0005                     	;# 
  1184  0006                     	;# 
  1185  0007                     	;# 
  1186  0008                     	;# 
  1187  0009                     	;# 
  1188  000A                     	;# 
  1189  000B                     	;# 
  1190  000C                     	;# 
  1191  000D                     	;# 
  1192  000E                     	;# 
  1193  0010                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0015                     	;# 
  1197  0016                     	;# 
  1198  0016                     	;# 
  1199  0017                     	;# 
  1200  0018                     	;# 
  1201  0019                     	;# 
  1202  001A                     	;# 
  1203  001B                     	;# 
  1204  001C                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  008E                     	;# 
  1208  0090                     	;# 
  1209  0091                     	;# 
  1210  0092                     	;# 
  1211  0095                     	;# 
  1212  0096                     	;# 
  1213  0097                     	;# 
  1214  0099                     	;# 
  1215  009A                     	;# 
  1216  009B                     	;# 
  1217  009B                     	;# 
  1218  009C                     	;# 
  1219  009D                     	;# 
  1220  009E                     	;# 
  1221  010C                     	;# 
  1222  010D                     	;# 
  1223  010E                     	;# 
  1224  0116                     	;# 
  1225  0117                     	;# 
  1226  011D                     	;# 
  1227  018C                     	;# 
  1228  018D                     	;# 
  1229  018E                     	;# 
  1230  0191                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0193                     	;# 
  1234  0193                     	;# 
  1235  0194                     	;# 
  1236  0195                     	;# 
  1237  0196                     	;# 
  1238  0197                     	;# 
  1239  0199                     	;# 
  1240  019A                     	;# 
  1241  019B                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019C                     	;# 
  1246  019C                     	;# 
  1247  019D                     	;# 
  1248  019E                     	;# 
  1249  019F                     	;# 
  1250  020D                     	;# 
  1251  0210                     	;# 
  1252  0211                     	;# 
  1253  0211                     	;# 
  1254  0212                     	;# 
  1255  0212                     	;# 
  1256  0213                     	;# 
  1257  0213                     	;# 
  1258  0214                     	;# 
  1259  0214                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0216                     	;# 
  1264  0216                     	;# 
  1265  0217                     	;# 
  1266  0217                     	;# 
  1267  0291                     	;# 
  1268  0291                     	;# 
  1269  0292                     	;# 
  1270  0293                     	;# 
  1271  0298                     	;# 
  1272  0298                     	;# 
  1273  0299                     	;# 
  1274  029A                     	;# 
  1275  0394                     	;# 
  1276  0395                     	;# 
  1277  0396                     	;# 
  1278  0FE4                     	;# 
  1279  0FE5                     	;# 
  1280  0FE6                     	;# 
  1281  0FE7                     	;# 
  1282  0FE8                     	;# 
  1283  0FE9                     	;# 
  1284  0FEA                     	;# 
  1285  0FEB                     	;# 
  1286  0FED                     	;# 
  1287  0FEE                     	;# 
  1288  0FEF                     	;# 
  1289  0000                     	;# 
  1290  0001                     	;# 
  1291  0002                     	;# 
  1292  0003                     	;# 
  1293  0004                     	;# 
  1294  0005                     	;# 
  1295  0006                     	;# 
  1296  0007                     	;# 
  1297  0008                     	;# 
  1298  0009                     	;# 
  1299  000A                     	;# 
  1300  000B                     	;# 
  1301  000C                     	;# 
  1302  000D                     	;# 
  1303  000E                     	;# 
  1304  0010                     	;# 
  1305  0011                     	;# 
  1306  0012                     	;# 
  1307  0015                     	;# 
  1308  0016                     	;# 
  1309  0016                     	;# 
  1310  0017                     	;# 
  1311  0018                     	;# 
  1312  0019                     	;# 
  1313  001A                     	;# 
  1314  001B                     	;# 
  1315  001C                     	;# 
  1316  008C                     	;# 
  1317  008D                     	;# 
  1318  008E                     	;# 
  1319  0090                     	;# 
  1320  0091                     	;# 
  1321  0092                     	;# 
  1322  0095                     	;# 
  1323  0096                     	;# 
  1324  0097                     	;# 
  1325  0099                     	;# 
  1326  009A                     	;# 
  1327  009B                     	;# 
  1328  009B                     	;# 
  1329  009C                     	;# 
  1330  009D                     	;# 
  1331  009E                     	;# 
  1332  010C                     	;# 
  1333  010D                     	;# 
  1334  010E                     	;# 
  1335  0116                     	;# 
  1336  0117                     	;# 
  1337  011D                     	;# 
  1338  018C                     	;# 
  1339  018D                     	;# 
  1340  018E                     	;# 
  1341  0191                     	;# 
  1342  0191                     	;# 
  1343  0192                     	;# 
  1344  0193                     	;# 
  1345  0193                     	;# 
  1346  0194                     	;# 
  1347  0195                     	;# 
  1348  0196                     	;# 
  1349  0197                     	;# 
  1350  0199                     	;# 
  1351  019A                     	;# 
  1352  019B                     	;# 
  1353  019B                     	;# 
  1354  019B                     	;# 
  1355  019B                     	;# 
  1356  019C                     	;# 
  1357  019C                     	;# 
  1358  019D                     	;# 
  1359  019E                     	;# 
  1360  019F                     	;# 
  1361  020D                     	;# 
  1362  0210                     	;# 
  1363  0211                     	;# 
  1364  0211                     	;# 
  1365  0212                     	;# 
  1366  0212                     	;# 
  1367  0213                     	;# 
  1368  0213                     	;# 
  1369  0214                     	;# 
  1370  0214                     	;# 
  1371  0215                     	;# 
  1372  0215                     	;# 
  1373  0215                     	;# 
  1374  0216                     	;# 
  1375  0216                     	;# 
  1376  0217                     	;# 
  1377  0217                     	;# 
  1378  0291                     	;# 
  1379  0291                     	;# 
  1380  0292                     	;# 
  1381  0293                     	;# 
  1382  0298                     	;# 
  1383  0298                     	;# 
  1384  0299                     	;# 
  1385  029A                     	;# 
  1386  0394                     	;# 
  1387  0395                     	;# 
  1388  0396                     	;# 
  1389  0FE4                     	;# 
  1390  0FE5                     	;# 
  1391  0FE6                     	;# 
  1392  0FE7                     	;# 
  1393  0FE8                     	;# 
  1394  0FE9                     	;# 
  1395  0FEA                     	;# 
  1396  0FEB                     	;# 
  1397  0FED                     	;# 
  1398  0FEE                     	;# 
  1399  0FEF                     	;# 
  1400  0000                     	;# 
  1401  0001                     	;# 
  1402  0002                     	;# 
  1403  0003                     	;# 
  1404  0004                     	;# 
  1405  0005                     	;# 
  1406  0006                     	;# 
  1407  0007                     	;# 
  1408  0008                     	;# 
  1409  0009                     	;# 
  1410  000A                     	;# 
  1411  000B                     	;# 
  1412  000C                     	;# 
  1413  000D                     	;# 
  1414  000E                     	;# 
  1415  0010                     	;# 
  1416  0011                     	;# 
  1417  0012                     	;# 
  1418  0015                     	;# 
  1419  0016                     	;# 
  1420  0016                     	;# 
  1421  0017                     	;# 
  1422  0018                     	;# 
  1423  0019                     	;# 
  1424  001A                     	;# 
  1425  001B                     	;# 
  1426  001C                     	;# 
  1427  008C                     	;# 
  1428  008D                     	;# 
  1429  008E                     	;# 
  1430  0090                     	;# 
  1431  0091                     	;# 
  1432  0092                     	;# 
  1433  0095                     	;# 
  1434  0096                     	;# 
  1435  0097                     	;# 
  1436  0099                     	;# 
  1437  009A                     	;# 
  1438  009B                     	;# 
  1439  009B                     	;# 
  1440  009C                     	;# 
  1441  009D                     	;# 
  1442  009E                     	;# 
  1443  010C                     	;# 
  1444  010D                     	;# 
  1445  010E                     	;# 
  1446  0116                     	;# 
  1447  0117                     	;# 
  1448  011D                     	;# 
  1449  018C                     	;# 
  1450  018D                     	;# 
  1451  018E                     	;# 
  1452  0191                     	;# 
  1453  0191                     	;# 
  1454  0192                     	;# 
  1455  0193                     	;# 
  1456  0193                     	;# 
  1457  0194                     	;# 
  1458  0195                     	;# 
  1459  0196                     	;# 
  1460  0197                     	;# 
  1461  0199                     	;# 
  1462  019A                     	;# 
  1463  019B                     	;# 
  1464  019B                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019C                     	;# 
  1468  019C                     	;# 
  1469  019D                     	;# 
  1470  019E                     	;# 
  1471  019F                     	;# 
  1472  020D                     	;# 
  1473  0210                     	;# 
  1474  0211                     	;# 
  1475  0211                     	;# 
  1476  0212                     	;# 
  1477  0212                     	;# 
  1478  0213                     	;# 
  1479  0213                     	;# 
  1480  0214                     	;# 
  1481  0214                     	;# 
  1482  0215                     	;# 
  1483  0215                     	;# 
  1484  0215                     	;# 
  1485  0216                     	;# 
  1486  0216                     	;# 
  1487  0217                     	;# 
  1488  0217                     	;# 
  1489  0291                     	;# 
  1490  0291                     	;# 
  1491  0292                     	;# 
  1492  0293                     	;# 
  1493  0298                     	;# 
  1494  0298                     	;# 
  1495  0299                     	;# 
  1496  029A                     	;# 
  1497  0394                     	;# 
  1498  0395                     	;# 
  1499  0396                     	;# 
  1500  0FE4                     	;# 
  1501  0FE5                     	;# 
  1502  0FE6                     	;# 
  1503  0FE7                     	;# 
  1504  0FE8                     	;# 
  1505  0FE9                     	;# 
  1506  0FEA                     	;# 
  1507  0FEB                     	;# 
  1508  0FED                     	;# 
  1509  0FEE                     	;# 
  1510  0FEF                     	;# 
  1511  0000                     	;# 
  1512  0001                     	;# 
  1513  0002                     	;# 
  1514  0003                     	;# 
  1515  0004                     	;# 
  1516  0005                     	;# 
  1517  0006                     	;# 
  1518  0007                     	;# 
  1519  0008                     	;# 
  1520  0009                     	;# 
  1521  000A                     	;# 
  1522  000B                     	;# 
  1523  000C                     	;# 
  1524  000D                     	;# 
  1525  000E                     	;# 
  1526  0010                     	;# 
  1527  0011                     	;# 
  1528  0012                     	;# 
  1529  0015                     	;# 
  1530  0016                     	;# 
  1531  0016                     	;# 
  1532  0017                     	;# 
  1533  0018                     	;# 
  1534  0019                     	;# 
  1535  001A                     	;# 
  1536  001B                     	;# 
  1537  001C                     	;# 
  1538  008C                     	;# 
  1539  008D                     	;# 
  1540  008E                     	;# 
  1541  0090                     	;# 
  1542  0091                     	;# 
  1543  0092                     	;# 
  1544  0095                     	;# 
  1545  0096                     	;# 
  1546  0097                     	;# 
  1547  0099                     	;# 
  1548  009A                     	;# 
  1549  009B                     	;# 
  1550  009B                     	;# 
  1551  009C                     	;# 
  1552  009D                     	;# 
  1553  009E                     	;# 
  1554  010C                     	;# 
  1555  010D                     	;# 
  1556  010E                     	;# 
  1557  0116                     	;# 
  1558  0117                     	;# 
  1559  011D                     	;# 
  1560  018C                     	;# 
  1561  018D                     	;# 
  1562  018E                     	;# 
  1563  0191                     	;# 
  1564  0191                     	;# 
  1565  0192                     	;# 
  1566  0193                     	;# 
  1567  0193                     	;# 
  1568  0194                     	;# 
  1569  0195                     	;# 
  1570  0196                     	;# 
  1571  0197                     	;# 
  1572  0199                     	;# 
  1573  019A                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019C                     	;# 
  1579  019C                     	;# 
  1580  019D                     	;# 
  1581  019E                     	;# 
  1582  019F                     	;# 
  1583  020D                     	;# 
  1584  0210                     	;# 
  1585  0211                     	;# 
  1586  0211                     	;# 
  1587  0212                     	;# 
  1588  0212                     	;# 
  1589  0213                     	;# 
  1590  0213                     	;# 
  1591  0214                     	;# 
  1592  0214                     	;# 
  1593  0215                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0216                     	;# 
  1597  0216                     	;# 
  1598  0217                     	;# 
  1599  0217                     	;# 
  1600  0291                     	;# 
  1601  0291                     	;# 
  1602  0292                     	;# 
  1603  0293                     	;# 
  1604  0298                     	;# 
  1605  0298                     	;# 
  1606  0299                     	;# 
  1607  029A                     	;# 
  1608  0394                     	;# 
  1609  0395                     	;# 
  1610  0396                     	;# 
  1611  0FE4                     	;# 
  1612  0FE5                     	;# 
  1613  0FE6                     	;# 
  1614  0FE7                     	;# 
  1615  0FE8                     	;# 
  1616  0FE9                     	;# 
  1617  0FEA                     	;# 
  1618  0FEB                     	;# 
  1619  0FED                     	;# 
  1620  0FEE                     	;# 
  1621  0FEF                     	;# 
  1622  0000                     	;# 
  1623  0001                     	;# 
  1624  0002                     	;# 
  1625  0003                     	;# 
  1626  0004                     	;# 
  1627  0005                     	;# 
  1628  0006                     	;# 
  1629  0007                     	;# 
  1630  0008                     	;# 
  1631  0009                     	;# 
  1632  000A                     	;# 
  1633  000B                     	;# 
  1634  000C                     	;# 
  1635  000D                     	;# 
  1636  000E                     	;# 
  1637  0010                     	;# 
  1638  0011                     	;# 
  1639  0012                     	;# 
  1640  0015                     	;# 
  1641  0016                     	;# 
  1642  0016                     	;# 
  1643  0017                     	;# 
  1644  0018                     	;# 
  1645  0019                     	;# 
  1646  001A                     	;# 
  1647  001B                     	;# 
  1648  001C                     	;# 
  1649  008C                     	;# 
  1650  008D                     	;# 
  1651  008E                     	;# 
  1652  0090                     	;# 
  1653  0091                     	;# 
  1654  0092                     	;# 
  1655  0095                     	;# 
  1656  0096                     	;# 
  1657  0097                     	;# 
  1658  0099                     	;# 
  1659  009A                     	;# 
  1660  009B                     	;# 
  1661  009B                     	;# 
  1662  009C                     	;# 
  1663  009D                     	;# 
  1664  009E                     	;# 
  1665  010C                     	;# 
  1666  010D                     	;# 
  1667  010E                     	;# 
  1668  0116                     	;# 
  1669  0117                     	;# 
  1670  011D                     	;# 
  1671  018C                     	;# 
  1672  018D                     	;# 
  1673  018E                     	;# 
  1674  0191                     	;# 
  1675  0191                     	;# 
  1676  0192                     	;# 
  1677  0193                     	;# 
  1678  0193                     	;# 
  1679  0194                     	;# 
  1680  0195                     	;# 
  1681  0196                     	;# 
  1682  0197                     	;# 
  1683  0199                     	;# 
  1684  019A                     	;# 
  1685  019B                     	;# 
  1686  019B                     	;# 
  1687  019B                     	;# 
  1688  019B                     	;# 
  1689  019C                     	;# 
  1690  019C                     	;# 
  1691  019D                     	;# 
  1692  019E                     	;# 
  1693  019F                     	;# 
  1694  020D                     	;# 
  1695  0210                     	;# 
  1696  0211                     	;# 
  1697  0211                     	;# 
  1698  0212                     	;# 
  1699  0212                     	;# 
  1700  0213                     	;# 
  1701  0213                     	;# 
  1702  0214                     	;# 
  1703  0214                     	;# 
  1704  0215                     	;# 
  1705  0215                     	;# 
  1706  0215                     	;# 
  1707  0216                     	;# 
  1708  0216                     	;# 
  1709  0217                     	;# 
  1710  0217                     	;# 
  1711  0291                     	;# 
  1712  0291                     	;# 
  1713  0292                     	;# 
  1714  0293                     	;# 
  1715  0298                     	;# 
  1716  0298                     	;# 
  1717  0299                     	;# 
  1718  029A                     	;# 
  1719  0394                     	;# 
  1720  0395                     	;# 
  1721  0396                     	;# 
  1722  0FE4                     	;# 
  1723  0FE5                     	;# 
  1724  0FE6                     	;# 
  1725  0FE7                     	;# 
  1726  0FE8                     	;# 
  1727  0FE9                     	;# 
  1728  0FEA                     	;# 
  1729  0FEB                     	;# 
  1730  0FED                     	;# 
  1731  0FEE                     	;# 
  1732  0FEF                     	;# 
  1733  0000                     	;# 
  1734  0001                     	;# 
  1735  0002                     	;# 
  1736  0003                     	;# 
  1737  0004                     	;# 
  1738  0005                     	;# 
  1739  0006                     	;# 
  1740  0007                     	;# 
  1741  0008                     	;# 
  1742  0009                     	;# 
  1743  000A                     	;# 
  1744  000B                     	;# 
  1745  000C                     	;# 
  1746  000D                     	;# 
  1747  000E                     	;# 
  1748  0010                     	;# 
  1749  0011                     	;# 
  1750  0012                     	;# 
  1751  0015                     	;# 
  1752  0016                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001B                     	;# 
  1759  001C                     	;# 
  1760  008C                     	;# 
  1761  008D                     	;# 
  1762  008E                     	;# 
  1763  0090                     	;# 
  1764  0091                     	;# 
  1765  0092                     	;# 
  1766  0095                     	;# 
  1767  0096                     	;# 
  1768  0097                     	;# 
  1769  0099                     	;# 
  1770  009A                     	;# 
  1771  009B                     	;# 
  1772  009B                     	;# 
  1773  009C                     	;# 
  1774  009D                     	;# 
  1775  009E                     	;# 
  1776  010C                     	;# 
  1777  010D                     	;# 
  1778  010E                     	;# 
  1779  0116                     	;# 
  1780  0117                     	;# 
  1781  011D                     	;# 
  1782  018C                     	;# 
  1783  018D                     	;# 
  1784  018E                     	;# 
  1785  0191                     	;# 
  1786  0191                     	;# 
  1787  0192                     	;# 
  1788  0193                     	;# 
  1789  0193                     	;# 
  1790  0194                     	;# 
  1791  0195                     	;# 
  1792  0196                     	;# 
  1793  0197                     	;# 
  1794  0199                     	;# 
  1795  019A                     	;# 
  1796  019B                     	;# 
  1797  019B                     	;# 
  1798  019B                     	;# 
  1799  019B                     	;# 
  1800  019C                     	;# 
  1801  019C                     	;# 
  1802  019D                     	;# 
  1803  019E                     	;# 
  1804  019F                     	;# 
  1805  020D                     	;# 
  1806  0210                     	;# 
  1807  0211                     	;# 
  1808  0211                     	;# 
  1809  0212                     	;# 
  1810  0212                     	;# 
  1811  0213                     	;# 
  1812  0213                     	;# 
  1813  0214                     	;# 
  1814  0214                     	;# 
  1815  0215                     	;# 
  1816  0215                     	;# 
  1817  0215                     	;# 
  1818  0216                     	;# 
  1819  0216                     	;# 
  1820  0217                     	;# 
  1821  0217                     	;# 
  1822  0291                     	;# 
  1823  0291                     	;# 
  1824  0292                     	;# 
  1825  0293                     	;# 
  1826  0298                     	;# 
  1827  0298                     	;# 
  1828  0299                     	;# 
  1829  029A                     	;# 
  1830  0394                     	;# 
  1831  0395                     	;# 
  1832  0396                     	;# 
  1833  0FE4                     	;# 
  1834  0FE5                     	;# 
  1835  0FE6                     	;# 
  1836  0FE7                     	;# 
  1837  0FE8                     	;# 
  1838  0FE9                     	;# 
  1839  0FEA                     	;# 
  1840  0FEB                     	;# 
  1841  0FED                     	;# 
  1842  0FEE                     	;# 
  1843  0FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000D                     	;# 
  1858  000E                     	;# 
  1859  0010                     	;# 
  1860  0011                     	;# 
  1861  0012                     	;# 
  1862  0015                     	;# 
  1863  0016                     	;# 
  1864  0016                     	;# 
  1865  0017                     	;# 
  1866  0018                     	;# 
  1867  0019                     	;# 
  1868  001A                     	;# 
  1869  001B                     	;# 
  1870  001C                     	;# 
  1871  008C                     	;# 
  1872  008D                     	;# 
  1873  008E                     	;# 
  1874  0090                     	;# 
  1875  0091                     	;# 
  1876  0092                     	;# 
  1877  0095                     	;# 
  1878  0096                     	;# 
  1879  0097                     	;# 
  1880  0099                     	;# 
  1881  009A                     	;# 
  1882  009B                     	;# 
  1883  009B                     	;# 
  1884  009C                     	;# 
  1885  009D                     	;# 
  1886  009E                     	;# 
  1887  010C                     	;# 
  1888  010D                     	;# 
  1889  010E                     	;# 
  1890  0116                     	;# 
  1891  0117                     	;# 
  1892  011D                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  0191                     	;# 
  1897  0191                     	;# 
  1898  0192                     	;# 
  1899  0193                     	;# 
  1900  0193                     	;# 
  1901  0194                     	;# 
  1902  0195                     	;# 
  1903  0196                     	;# 
  1904  0197                     	;# 
  1905  0199                     	;# 
  1906  019A                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019C                     	;# 
  1912  019C                     	;# 
  1913  019D                     	;# 
  1914  019E                     	;# 
  1915  019F                     	;# 
  1916  020D                     	;# 
  1917  0210                     	;# 
  1918  0211                     	;# 
  1919  0211                     	;# 
  1920  0212                     	;# 
  1921  0212                     	;# 
  1922  0213                     	;# 
  1923  0213                     	;# 
  1924  0214                     	;# 
  1925  0214                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0215                     	;# 
  1929  0216                     	;# 
  1930  0216                     	;# 
  1931  0217                     	;# 
  1932  0217                     	;# 
  1933  0291                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0293                     	;# 
  1937  0298                     	;# 
  1938  0298                     	;# 
  1939  0299                     	;# 
  1940  029A                     	;# 
  1941  0394                     	;# 
  1942  0395                     	;# 
  1943  0396                     	;# 
  1944  0FE4                     	;# 
  1945  0FE5                     	;# 
  1946  0FE6                     	;# 
  1947  0FE7                     	;# 
  1948  0FE8                     	;# 
  1949  0FE9                     	;# 
  1950  0FEA                     	;# 
  1951  0FEB                     	;# 
  1952  0FED                     	;# 
  1953  0FEE                     	;# 
  1954  0FEF                     	;# 
  1955                           
  1956                           	psect	idataBANK1
  1957  0F62                     __pidataBANK1:	
  1958                           
  1959                           ;initializer for Bq32k_Time_Init@F2005
  1960  0F62  3401               	retlw	1
  1961  0F63  3440               	retlw	64
  1962  0F64  3414               	retlw	20
  1963  0F65  3402               	retlw	2
  1964  0F66  3404               	retlw	4
  1965  0F67  3407               	retlw	7
  1966  0F68  3416               	retlw	22
  1967  0F69  3400               	retlw	0
  1968  0F6A  3400               	retlw	0
  1969  0F6B  3400               	retlw	0
  1970                           
  1971                           ;initializer for main@F2210
  1972  0F6C  3401               	retlw	1
  1973  0F6D  3401               	retlw	1
  1974  0F6E  3401               	retlw	1
  1975  0F6F  3401               	retlw	1
  1976  0F70  3401               	retlw	1
  1977  0F71  3401               	retlw	1
  1978  0F72  3401               	retlw	1
  1979  0F73  3401               	retlw	1
  1980  0F74  3401               	retlw	1
  1981  0F75  3401               	retlw	1
  1982                           
  1983                           	psect	stringtext
  1984  1000                     __pstringtext:	
  1985  1000                     _Dis_TAB:	
  1986  1000  34D7               	retlw	215
  1987  1001  3450               	retlw	80
  1988  1002  34B5               	retlw	181
  1989  1003  34F1               	retlw	241
  1990  1004  3472               	retlw	114
  1991  1005  34E3               	retlw	227
  1992  1006  34E7               	retlw	231
  1993  1007  3451               	retlw	81
  1994  1008  34F7               	retlw	247
  1995  1009  34F3               	retlw	243
  1996  100A  3477               	retlw	119
  1997  100B  34E6               	retlw	230
  1998  100C  3487               	retlw	135
  1999  100D  34F4               	retlw	244
  2000  100E  34A7               	retlw	167
  2001  100F  3427               	retlw	39
  2002  1010  3457               	retlw	87
  2003  1011  3420               	retlw	32
  2004  1012  3420               	retlw	32
  2005  1013  3420               	retlw	32
  2006  1014  3420               	retlw	32
  2007  1015                     __end_of_Dis_TAB:	
  2008                           
  2009                           	psect	nvBANK0
  2010  0064                     __pnvBANK0:	
  2011  0064                     _timer0ReloadVal:	
  2012  0064                     	ds	1
  2013  000B                     _INTCONbits	set	11
  2014  0011                     _PIR1bits	set	17
  2015  0015                     _TMR0	set	21
  2016  0067                     _RA7	set	103
  2017  0069                     _RB1	set	105
  2018  006B                     _RB3	set	107
  2019  006D                     _RB5	set	109
  2020  009D                     _ADCON0	set	157
  2021  009D                     _ADCON0bits	set	157
  2022  009E                     _ADCON1	set	158
  2023  009C                     _ADRESH	set	156
  2024  009B                     _ADRESL	set	155
  2025  0095                     _OPTION_REG	set	149
  2026  0095                     _OPTION_REGbits	set	149
  2027  0099                     _OSCCON	set	153
  2028  009A                     _OSCSTAT	set	154
  2029  008C                     _TRISA	set	140
  2030  008D                     _TRISB	set	141
  2031  008E                     _TRISC	set	142
  2032  0469                     _TRISB1	set	1129
  2033  046B                     _TRISB3	set	1131
  2034  011D                     _APFCON	set	285
  2035  010C                     _LATA	set	268
  2036  010D                     _LATB	set	269
  2037  010E                     _LATC	set	270
  2038  0860                     _LATA0	set	2144
  2039  0861                     _LATA1	set	2145
  2040  0862                     _LATA2	set	2146
  2041  0863                     _LATA3	set	2147
  2042  0864                     _LATA4	set	2148
  2043  0865                     _LATA5	set	2149
  2044  0868                     _LATB0	set	2152
  2045  0869                     _LATB1	set	2153
  2046  0870                     _LATC0	set	2160
  2047  0871                     _LATC1	set	2161
  2048  0872                     _LATC2	set	2162
  2049  0191                     _PMADR	set	401
  2050  0193                     _PMDAT	set	403
  2051  018C                     _ANSELA	set	396
  2052  018D                     _ANSELB	set	397
  2053  018E                     _ANSELC	set	398
  2054  019F                     _BAUDCON	set	415
  2055  0192                     _PMADRH	set	402
  2056  0191                     _PMADRL	set	401
  2057  0195                     _PMCON1bits	set	405
  2058  0196                     _PMCON2	set	406
  2059  0194                     _PMDATH	set	404
  2060  0193                     _PMDATL	set	403
  2061  0199                     _RCREG	set	409
  2062  019D                     _RCSTA	set	413
  2063  019D                     _RCSTAbits	set	413
  2064  019C                     _SPBRGH	set	412
  2065  019B                     _SPBRGL	set	411
  2066  019A                     _TXREG	set	410
  2067  019E                     _TXSTA	set	414
  2068  0212                     _SSP1ADD	set	530
  2069  0215                     _SSP1CON1	set	533
  2070  0215                     _SSP1CON1bits	set	533
  2071  0214                     _SSP1STAT	set	532
  2072  0214                     _SSP1STATbits	set	532
  2073  0211                     _SSPBUF	set	529
  2074  020D                     _WPUB	set	525
  2075  0210                     _WPUE	set	528
  2076                           
  2077                           ; #config settings
  2078  0000                     
  2079                           	psect	cinit
  2080  0015                     start_initialization:	
  2081  0015                     __initialization:	
  2082                           
  2083                           ; Clear objects allocated to COMMON
  2084  0015  01FA               	clrf	__pbssCOMMON& (0+127)
  2085  0016  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2086                           
  2087                           ; Clear objects allocated to BANK0
  2088  0017  3020               	movlw	low __pbssBANK0
  2089  0018  0084               	movwf	4
  2090  0019  3000               	movlw	high __pbssBANK0
  2091  001A  0085               	movwf	5
  2092  001B  302B               	movlw	43
  2093  001C  318E  26CC  3180   	fcall	clear_ram0
  2094                           
  2095                           ; Clear objects allocated to BANK1
  2096  001F  30B4               	movlw	low __pbssBANK1
  2097  0020  0084               	movwf	4
  2098  0021  3000               	movlw	high __pbssBANK1
  2099  0022  0085               	movwf	5
  2100  0023  300F               	movlw	15
  2101  0024  318E  26CC  3180   	fcall	clear_ram0
  2102                           
  2103                           ; Clear objects allocated to BANK2
  2104  0027  3020               	movlw	low __pbssBANK2
  2105  0028  0084               	movwf	4
  2106  0029  3001               	movlw	high __pbssBANK2
  2107  002A  0085               	movwf	5
  2108  002B  3040               	movlw	64
  2109  002C  318E  26CC  3180   	fcall	clear_ram0
  2110                           
  2111                           ; Initialize objects allocated to BANK1
  2112  002F  3062               	movlw	low __pidataBANK1
  2113  0030  0084               	movwf	4
  2114  0031  308F               	movlw	(high __pidataBANK1)| (0+128)
  2115  0032  0085               	movwf	5
  2116  0033  30A0               	movlw	low __pdataBANK1
  2117  0034  0086               	movwf	6
  2118  0035  3000               	movlw	high __pdataBANK1
  2119  0036  0087               	movwf	7
  2120  0037  3014               	movlw	20
  2121  0038  318E  26C6         	fcall	init_ram
  2122  003A                     end_of_initialization:	
  2123                           ;End of C runtime variable initialization code
  2124                           
  2125  003A                     __end_of__initialization:	
  2126  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2127  003B  0020               	movlb	0
  2128  003C  3182  2A21         	ljmp	_main	;jump to C main() function
  2129                           
  2130                           	psect	bssCOMMON
  2131  007A                     __pbssCOMMON:	
  2132  007A                     _uch_cr0:	
  2133  007A                     	ds	1
  2134  007B                     _uch_ltcbh:	
  2135  007B                     	ds	1
  2136                           
  2137                           	psect	bssBANK0
  2138  0020                     __pbssBANK0:	
  2139  0020                     Two_Display@F2110:	
  2140  0020                     	ds	4
  2141  0024                     _temperature_value:	
  2142  0024                     	ds	4
  2143  0028                     _f_cold_junction_temperature:	
  2144  0028                     	ds	3
  2145  002B                     _f_linearized_tc_temperature:	
  2146  002B                     	ds	3
  2147  002E                     TMR0_ISR@CountCallBack:	
  2148  002E                     	ds	2
  2149  0030                     _temperature_int:	
  2150  0030                     	ds	2
  2151  0032                     _LongPressSec:	
  2152  0032                     	ds	1
  2153  0033                     _MAX31856Sec:	
  2154  0033                     	ds	1
  2155  0034                     _temperature_decimal:	
  2156  0034                     	ds	1
  2157  0035                     _temperature_sign:	
  2158  0035                     	ds	1
  2159  0036                     _time_count:	
  2160  0036                     	ds	1
  2161  0037                     _tmr_flag:	
  2162  0037                     	ds	1
  2163  0038                     _uch_cjth:	
  2164  0038                     	ds	1
  2165  0039                     _uch_cjtl:	
  2166  0039                     	ds	1
  2167  003A                     _uch_cr1:	
  2168  003A                     	ds	1
  2169  003B                     _uch_ltcbl:	
  2170  003B                     	ds	1
  2171  003C                     _uch_ltcbm:	
  2172  003C                     	ds	1
  2173  003D                     _uch_mask:	
  2174  003D                     	ds	1
  2175  003E                     _uch_sr:	
  2176  003E                     	ds	1
  2177  003F                     _uch_reg:	
  2178  003F                     	ds	8
  2179  0047                     _display_buff:	
  2180  0047                     	ds	4
  2181                           
  2182                           	psect	bssBANK1
  2183  00B4                     __pbssBANK1:	
  2184  00B4                     err_Display@F2113:	
  2185  00B4                     	ds	4
  2186  00B8                     time_Display@F2116:	
  2187  00B8                     	ds	4
  2188  00BC                     _tm:	
  2189  00BC                     	ds	7
  2190                           
  2191                           	psect	dataBANK1
  2192  00A0                     __pdataBANK1:	
  2193  00A0                     Bq32k_Time_Init@F2005:	
  2194  00A0                     	ds	10
  2195  00AA                     main@F2210:	
  2196  00AA                     	ds	10
  2197                           
  2198                           	psect	bssBANK2
  2199  0120                     __pbssBANK2:	
  2200  0120                     _s:	
  2201  0120                     	ds	64
  2202                           
  2203                           	psect	clrtext
  2204  0ECC                     clear_ram0:	
  2205                           ;	Called with FSR0 containing the base address, and
  2206                           ;	WREG with the size to clear
  2207                           
  2208  0ECC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2209  0ECD                     clrloop0:	
  2210  0ECD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2211  0ECE  3101               	addfsr 0,1
  2212  0ECF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2213  0ED0  2ECD               	goto	clrloop0	;have we reached the end yet?
  2214  0ED1  3400               	retlw	0	;all done for this memory range, return
  2215                           
  2216                           	psect	inittext
  2217  0EC6                     init_ram:	
  2218  0EC6  00FE               	movwf	126
  2219  0EC7                     initloop:	
  2220  0EC7  0012               	moviw fsr0++
  2221  0EC8  001E               	movwi fsr1++
  2222  0EC9  0BFE               	decfsz	126,f
  2223  0ECA  2EC7               	goto	initloop
  2224  0ECB  3400               	retlw	0
  2225                           
  2226                           	psect	cstackBANK1
  2227  00C3                     __pcstackBANK1:	
  2228  00C3                     main@a:	
  2229                           
  2230                           ; 10 bytes @ 0x0
  2231  00C3                     	ds	10
  2232  00CD                     main@i:	
  2233                           
  2234                           ; 1 bytes @ 0xA
  2235  00CD                     	ds	1
  2236  00CE                     main@bat_data:	
  2237                           
  2238                           ; 2 bytes @ 0xB
  2239  00CE                     	ds	2
  2240                           
  2241                           	psect	cstackCOMMON
  2242  0070                     __pcstackCOMMON:	
  2243  0070                     ?_OSCILLATOR_Initialize:	
  2244  0070                     ?_SPI_Initialize:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247  0070                     ?_EUSART_Initialize:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_ADC_Initialize:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     ?_TMR0_Initialize:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_TMR0_CallBack:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ??_TMR0_CallBack:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_maxim_31856_init:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_Bq32k_Time_Init:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_SendCmd_1621:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_temperature_process:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_Tc_Display:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_err_Display:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_Two_Display:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ?_time_Display:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_Bq32k_Rtc_Read_Time:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_bcd2bin:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_PIN_MANAGER_Initialize:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_SYSTEM_Initialize:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_SPI_Exchange8bit:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_TMR0_ISR:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_INTERRUPT_InterruptManager:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_main:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_maxim_31856_read_register:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_maxim_start_conversion:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_maxim_clear_fault_status:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_tc_temperature_trans:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_one_temperature_trans:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_temperature_display:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_I2C_Start:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_I2C_Send_Byte:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_I2C_Receive_Byte:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_I2C_Stop:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_Key_Scan:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_Key_Process:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346                           
  2347                           ; 2 bytes @ 0x0
  2348  0070                     	ds	1
  2349  0071                     ??_TMR0_ISR:	
  2350  0071                     ??_INTERRUPT_InterruptManager:	
  2351                           ; 1 bytes @ 0x1
  2352                           
  2353                           
  2354                           ; 1 bytes @ 0x1
  2355  0071                     	ds	1
  2356  0072                     ??_OSCILLATOR_Initialize:	
  2357  0072                     ??_SPI_Initialize:	
  2358                           ; 1 bytes @ 0x2
  2359                           
  2360  0072                     ??_EUSART_Initialize:	
  2361                           ; 1 bytes @ 0x2
  2362                           
  2363  0072                     ??_ADC_Initialize:	
  2364                           ; 1 bytes @ 0x2
  2365                           
  2366  0072                     ??_TMR0_Initialize:	
  2367                           ; 1 bytes @ 0x2
  2368                           
  2369  0072                     ?_memset:	
  2370                           ; 1 bytes @ 0x2
  2371                           
  2372  0072                     ??_PIN_MANAGER_Initialize:	
  2373                           ; 1 bytes @ 0x2
  2374                           
  2375  0072                     ??_SPI_Exchange8bit:	
  2376                           ; 1 bytes @ 0x2
  2377                           
  2378  0072                     ??_tc_temperature_trans:	
  2379                           ; 1 bytes @ 0x2
  2380                           
  2381  0072                     ?_SendBit_1621:	
  2382                           ; 1 bytes @ 0x2
  2383                           
  2384  0072                     ?_SendDataBit_1621:	
  2385                           ; 1 bytes @ 0x2
  2386                           
  2387  0072                     ??_I2C_Start:	
  2388                           ; 1 bytes @ 0x2
  2389                           
  2390  0072                     ??_I2C_Send_Byte:	
  2391                           ; 1 bytes @ 0x2
  2392                           
  2393  0072                     ??_I2C_Receive_Byte:	
  2394                           ; 1 bytes @ 0x2
  2395                           
  2396  0072                     ??_I2C_Stop:	
  2397                           ; 1 bytes @ 0x2
  2398                           
  2399  0072                     ??_Key_Scan:	
  2400                           ; 1 bytes @ 0x2
  2401                           
  2402  0072                     ?___bmul:	
  2403                           ; 1 bytes @ 0x2
  2404                           
  2405  0072                     ?_ADC_GetConversion:	
  2406                           ; 1 bytes @ 0x2
  2407                           
  2408  0072                     ?___awdiv:	
  2409                           ; 2 bytes @ 0x2
  2410                           
  2411  0072                     ?___awmod:	
  2412                           ; 2 bytes @ 0x2
  2413                           
  2414  0072                     ?___lwmod:	
  2415                           ; 2 bytes @ 0x2
  2416                           
  2417  0072                     SPI_Exchange8bit@data:	
  2418                           ; 2 bytes @ 0x2
  2419                           
  2420  0072                     SendBit_1621@cnt:	
  2421                           ; 1 bytes @ 0x2
  2422                           
  2423  0072                     SendDataBit_1621@cnt:	
  2424                           ; 1 bytes @ 0x2
  2425                           
  2426  0072                     ___bmul@multiplicand:	
  2427                           ; 1 bytes @ 0x2
  2428                           
  2429  0072                     ___awdiv@divisor:	
  2430                           ; 1 bytes @ 0x2
  2431                           
  2432  0072                     ___awmod@divisor:	
  2433                           ; 2 bytes @ 0x2
  2434                           
  2435  0072                     ___lwmod@divisor:	
  2436                           ; 2 bytes @ 0x2
  2437                           
  2438  0072                     memset@c:	
  2439                           ; 2 bytes @ 0x2
  2440                           
  2441                           
  2442                           ; 2 bytes @ 0x2
  2443  0072                     	ds	1
  2444  0073                     ??_SYSTEM_Initialize:	
  2445  0073                     ?_SPI_Exchange8bitBuffer:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ?_maxim_31856_write_register:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ??_maxim_31856_read_register:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ??_SendBit_1621:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_SendDataBit_1621:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??___bmul:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     SPI_Exchange8bitBuffer@bufLen:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     maxim_31856_write_register@uch_register_value:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     I2C_Send_Byte@Data:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     I2C_Receive_Byte@Data:	
  2473                           ; 1 bytes @ 0x3
  2474                           
  2475                           
  2476                           ; 1 bytes @ 0x3
  2477  0073                     	ds	1
  2478  0074                     ??_ADC_GetConversion:	
  2479  0074                     ??_maxim_31856_write_register:	
  2480                           ; 1 bytes @ 0x4
  2481                           
  2482  0074                     SPI_Exchange8bitBuffer@dataOut:	
  2483                           ; 1 bytes @ 0x4
  2484                           
  2485  0074                     maxim_31856_write_register@uch_register_address:	
  2486                           ; 1 bytes @ 0x4
  2487                           
  2488  0074                     maxim_31856_read_register@uch_register_address:	
  2489                           ; 1 bytes @ 0x4
  2490                           
  2491  0074                     I2C_Send_Byte@i:	
  2492                           ; 1 bytes @ 0x4
  2493                           
  2494  0074                     I2C_Receive_Byte@i:	
  2495                           ; 1 bytes @ 0x4
  2496                           
  2497  0074                     Key_Scan@Key_val:	
  2498                           ; 1 bytes @ 0x4
  2499                           
  2500  0074                     ___bmul@product:	
  2501                           ; 1 bytes @ 0x4
  2502                           
  2503  0074                     ___awdiv@dividend:	
  2504                           ; 1 bytes @ 0x4
  2505                           
  2506  0074                     ___awmod@dividend:	
  2507                           ; 2 bytes @ 0x4
  2508                           
  2509  0074                     ___lwmod@dividend:	
  2510                           ; 2 bytes @ 0x4
  2511                           
  2512  0074                     memset@n:	
  2513                           ; 2 bytes @ 0x4
  2514                           
  2515                           
  2516                           ; 2 bytes @ 0x4
  2517  0074                     	ds	1
  2518  0075                     ??_maxim_31856_init:	
  2519  0075                     ??_SPI_Exchange8bitBuffer:	
  2520                           ; 1 bytes @ 0x5
  2521                           
  2522  0075                     ?_I2C_Read_Buffer:	
  2523                           ; 1 bytes @ 0x5
  2524                           
  2525  0075                     ?_I2C_Send_Buffer:	
  2526                           ; 1 bytes @ 0x5
  2527                           
  2528  0075                     ADC_GetConversion@channel:	
  2529                           ; 1 bytes @ 0x5
  2530                           
  2531  0075                     maxim_31856_read_register@uch_register_data:	
  2532                           ; 1 bytes @ 0x5
  2533                           
  2534  0075                     SendBit_1621@data:	
  2535                           ; 1 bytes @ 0x5
  2536                           
  2537  0075                     SendDataBit_1621@data:	
  2538                           ; 1 bytes @ 0x5
  2539                           
  2540  0075                     I2C_Read_Buffer@buff:	
  2541                           ; 1 bytes @ 0x5
  2542                           
  2543  0075                     I2C_Send_Buffer@buff:	
  2544                           ; 1 bytes @ 0x5
  2545                           
  2546  0075                     ___bmul@multiplier:	
  2547                           ; 1 bytes @ 0x5
  2548                           
  2549                           
  2550                           ; 1 bytes @ 0x5
  2551  0075                     	ds	1
  2552  0076                     ??_memset:	
  2553  0076                     ??_bcd2bin:	
  2554                           ; 1 bytes @ 0x6
  2555                           
  2556  0076                     ??_maxim_start_conversion:	
  2557                           ; 1 bytes @ 0x6
  2558                           
  2559  0076                     ??_maxim_clear_fault_status:	
  2560                           ; 1 bytes @ 0x6
  2561                           
  2562  0076                     ??___awdiv:	
  2563                           ; 1 bytes @ 0x6
  2564                           
  2565  0076                     ??___awmod:	
  2566                           ; 1 bytes @ 0x6
  2567                           
  2568  0076                     ??___lwmod:	
  2569                           ; 1 bytes @ 0x6
  2570                           
  2571  0076                     SendBit_1621@i:	
  2572                           ; 1 bytes @ 0x6
  2573                           
  2574  0076                     SendDataBit_1621@i:	
  2575                           ; 1 bytes @ 0x6
  2576                           
  2577  0076                     I2C_Read_Buffer@Length:	
  2578                           ; 1 bytes @ 0x6
  2579                           
  2580  0076                     I2C_Send_Buffer@Length:	
  2581                           ; 1 bytes @ 0x6
  2582                           
  2583                           
  2584                           ; 1 bytes @ 0x6
  2585  0076                     	ds	1
  2586  0077                     ??_SendCmd_1621:	
  2587  0077                     ?_WriteAll_1621:	
  2588                           ; 1 bytes @ 0x7
  2589                           
  2590  0077                     ??_I2C_Read_Buffer:	
  2591                           ; 1 bytes @ 0x7
  2592                           
  2593  0077                     ??_I2C_Send_Buffer:	
  2594                           ; 1 bytes @ 0x7
  2595                           
  2596  0077                     maxim_start_conversion@uch_conversion_mode:	
  2597                           ; 1 bytes @ 0x7
  2598                           
  2599  0077                     ___awmod@counter:	
  2600                           ; 1 bytes @ 0x7
  2601                           
  2602  0077                     ___lwmod@counter:	
  2603                           ; 1 bytes @ 0x7
  2604                           
  2605  0077                     memset@p1:	
  2606                           ; 1 bytes @ 0x7
  2607                           
  2608  0077                     WriteAll_1621@p:	
  2609                           ; 1 bytes @ 0x7
  2610                           
  2611                           
  2612                           ; 2 bytes @ 0x7
  2613  0077                     	ds	1
  2614  0078                     ??___lwdiv:	
  2615  0078                     SPI_Exchange8bitBuffer@dataIn:	
  2616                           ; 1 bytes @ 0x8
  2617                           
  2618  0078                     SendCmd_1621@command:	
  2619                           ; 1 bytes @ 0x8
  2620                           
  2621  0078                     I2C_Read_Buffer@ADD:	
  2622                           ; 1 bytes @ 0x8
  2623                           
  2624  0078                     ___awmod@sign:	
  2625                           ; 1 bytes @ 0x8
  2626                           
  2627  0078                     memset@p:	
  2628                           ; 1 bytes @ 0x8
  2629                           
  2630                           
  2631                           ; 1 bytes @ 0x8
  2632  0078                     	ds	1
  2633  0079                     SPI_Exchange8bitBuffer@bytesWritten:	
  2634  0079                     WriteAll_1621@cnt:	
  2635                           ; 1 bytes @ 0x9
  2636                           
  2637  0079                     I2C_Read_Buffer@Flag:	
  2638                           ; 1 bytes @ 0x9
  2639                           
  2640  0079                     bcd2bin@val:	
  2641                           ; 1 bytes @ 0x9
  2642                           
  2643                           
  2644                           ; 1 bytes @ 0x9
  2645  0079                     	ds	1
  2646  007A                     ??_temperature_process:	
  2647                           
  2648                           	psect	cstackBANK0
  2649  004B                     __pcstackBANK0:	
  2650                           ; 1 bytes @ 0xA
  2651                           
  2652  004B                     ??_WriteAll_1621:	
  2653  004B                     ??_Bq32k_Rtc_Read_Time:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  004B                     ?_maxim_31856_read_nregisters:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  004B                     ?___lwdiv:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  004B                     maxim_31856_read_nregisters@uch_buff:	
  2663                           ; 2 bytes @ 0x0
  2664                           
  2665  004B                     I2C_Send_Buffer@ADD:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  004B                     ___awdiv@counter:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  004B                     ___lwdiv@divisor:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674                           
  2675                           ; 2 bytes @ 0x0
  2676  004B                     	ds	1
  2677  004C                     maxim_31856_read_nregisters@uch_nBytes:	
  2678  004C                     WriteAll_1621@addr:	
  2679                           ; 1 bytes @ 0x1
  2680                           
  2681  004C                     I2C_Send_Buffer@i:	
  2682                           ; 1 bytes @ 0x1
  2683                           
  2684  004C                     ___awdiv@sign:	
  2685                           ; 1 bytes @ 0x1
  2686                           
  2687                           
  2688                           ; 1 bytes @ 0x1
  2689  004C                     	ds	1
  2690  004D                     ??_maxim_31856_read_nregisters:	
  2691  004D                     WriteAll_1621@i:	
  2692                           ; 1 bytes @ 0x2
  2693                           
  2694  004D                     I2C_Send_Buffer@Flag:	
  2695                           ; 1 bytes @ 0x2
  2696                           
  2697  004D                     ___awdiv@quotient:	
  2698                           ; 1 bytes @ 0x2
  2699                           
  2700  004D                     ___lwdiv@dividend:	
  2701                           ; 2 bytes @ 0x2
  2702                           
  2703  004D                     Bq32k_Rtc_Read_Time@temp:	
  2704                           ; 2 bytes @ 0x2
  2705                           
  2706                           
  2707                           ; 10 bytes @ 0x2
  2708  004D                     	ds	1
  2709  004E                     ??_Bq32k_Time_Init:	
  2710  004E                     ??_err_Display:	
  2711                           ; 1 bytes @ 0x3
  2712                           
  2713  004E                     ??_Two_Display:	
  2714                           ; 1 bytes @ 0x3
  2715                           
  2716                           
  2717                           ; 1 bytes @ 0x3
  2718  004E                     	ds	1
  2719  004F                     maxim_31856_read_nregisters@uch_register_address:	
  2720  004F                     ___lwdiv@counter:	
  2721                           ; 1 bytes @ 0x4
  2722                           
  2723  004F                     Two_Display@num:	
  2724                           ; 1 bytes @ 0x4
  2725                           
  2726  004F                     err_Display@num:	
  2727                           ; 4 bytes @ 0x4
  2728                           
  2729                           
  2730                           ; 4 bytes @ 0x4
  2731  004F                     	ds	1
  2732  0050                     ??_one_temperature_trans:	
  2733  0050                     ___lwdiv@quotient:	
  2734                           ; 1 bytes @ 0x5
  2735                           
  2736  0050                     Bq32k_Time_Init@temp:	
  2737                           ; 2 bytes @ 0x5
  2738                           
  2739                           
  2740                           ; 10 bytes @ 0x5
  2741  0050                     	ds	2
  2742  0052                     ??_Tc_Display:	
  2743                           
  2744                           ; 1 bytes @ 0x7
  2745  0052                     	ds	1
  2746  0053                     Tc_Display@count:	
  2747  0053                     Two_Display@number:	
  2748                           ; 1 bytes @ 0x8
  2749                           
  2750                           
  2751                           ; 1 bytes @ 0x8
  2752  0053                     	ds	1
  2753  0054                     Tc_Display@data:	
  2754                           
  2755                           ; 2 bytes @ 0x9
  2756  0054                     	ds	2
  2757  0056                     ??_temperature_display:	
  2758                           
  2759                           ; 1 bytes @ 0xB
  2760  0056                     	ds	1
  2761  0057                     Bq32k_Rtc_Read_Time@p:	
  2762                           
  2763                           ; 1 bytes @ 0xC
  2764  0057                     	ds	1
  2765  0058                     ??_time_Display:	
  2766                           
  2767                           ; 1 bytes @ 0xD
  2768  0058                     	ds	3
  2769  005B                     time_Display@num:	
  2770                           
  2771                           ; 4 bytes @ 0x10
  2772  005B                     	ds	4
  2773  005F                     ??_Key_Process:	
  2774                           
  2775                           ; 1 bytes @ 0x14
  2776  005F                     	ds	1
  2777  0060                     Key_Process@gKeyValue:	
  2778                           
  2779                           ; 1 bytes @ 0x15
  2780  0060                     	ds	1
  2781  0061                     ??_main:	
  2782                           
  2783                           ; 1 bytes @ 0x16
  2784  0061                     	ds	3
  2785                           
  2786                           	psect	maintext
  2787  0221                     __pmaintext:	
  2788 ;;
  2789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2790 ;;
  2791 ;; *************** function _main *****************
  2792 ;; Defined at:
  2793 ;;		line 65 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  a              10    0[BANK1 ] unsigned char [10]
  2798 ;;  bat_data        2   11[BANK1 ] unsigned int 
  2799 ;;  i               1   10[BANK1 ] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : B1F/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:         0       3      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:       16 bytes
  2814 ;; Hardware stack levels required when called:    9
  2815 ;; This function calls:
  2816 ;;		_ADC_GetConversion
  2817 ;;		_Bq32k_Time_Init
  2818 ;;		_Key_Process
  2819 ;;		_SYSTEM_Initialize
  2820 ;;		_SendCmd_1621
  2821 ;;		_WriteAll_1621
  2822 ;;		_maxim_31856_init
  2823 ;;		_temperature_process
  2824 ;; This function is called by:
  2825 ;;		Startup code after reset
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _main
  2831  0221                     _main:	
  2832                           
  2833                           ;main.c: 66: unsigned char a[10] = {0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01};
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2837  0221  30AA               	movlw	low main@F2210
  2838  0222  0086               	movwf	6
  2839  0223  3000               	movlw	high main@F2210
  2840  0224  0087               	movwf	7
  2841  0225  30C3               	movlw	low main@a
  2842  0226  0084               	movwf	4
  2843  0227  3000               	movlw	high main@a
  2844  0228  0085               	movwf	5
  2845  0229  300A               	movlw	10
  2846  022A  0020               	movlb	0	; select bank0
  2847  022B  00E1               	movwf	??_main
  2848  022C                     u3350:	
  2849  022C  0016               	moviw fsr1++
  2850  022D  001A               	movwi fsr0++
  2851  022E  0BE1               	decfsz	??_main,f
  2852  022F  2A2C               	goto	u3350
  2853                           
  2854                           ;main.c: 67: unsigned char i=0;
  2855  0230  0021               	movlb	1	; select bank1
  2856  0231  01CD               	clrf	main@i^(0+128)
  2857                           
  2858                           ;main.c: 69: unsigned int bat_data = 0;
  2859  0232  01CE               	clrf	main@bat_data^(0+128)
  2860  0233  01CF               	clrf	(main@bat_data+1)^(0+128)
  2861                           
  2862                           ;main.c: 71: SYSTEM_Initialize();
  2863  0234  318F  273D  3182   	fcall	_SYSTEM_Initialize
  2864                           
  2865                           ;main.c: 72: _delay((unsigned long)((3000)*(16000000/4000.0)));
  2866  0237  303D               	movlw	61
  2867  0238  0020               	movlb	0	; select bank0
  2868  0239  00E3               	movwf	??_main+2
  2869  023A  30E1               	movlw	225
  2870  023B  00E2               	movwf	??_main+1
  2871  023C  307A               	movlw	122
  2872  023D  00E1               	movwf	??_main
  2873  023E                     u3397:	
  2874  023E  0BE1               	decfsz	??_main,f
  2875  023F  2A3E               	goto	u3397
  2876  0240  0BE2               	decfsz	??_main+1,f
  2877  0241  2A3E               	goto	u3397
  2878  0242  0BE3               	decfsz	??_main+2,f
  2879  0243  2A3E               	goto	u3397
  2880  0244  3200               	nop2
  2881                           
  2882                           ;main.c: 73: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  2883  0245  0020               	movlb	0	; select bank0
  2884  0246  1A8D               	btfsc	13,5	;volatile
  2885  0247  2A4B               	goto	l332
  2886  0248  0022               	movlb	2	; select bank2
  2887  0249  150C               	bsf	12,2	;volatile
  2888  024A  2A4D               	goto	l334
  2889  024B                     l332:	
  2890                           ;main.c: 74: else do { LATA2 = 0; } while(0);
  2891                           
  2892  024B  0022               	movlb	2	; select bank2
  2893  024C  110C               	bcf	12,2	;volatile
  2894  024D                     l334:	
  2895                           ;main.c: 75: do { LATA3 = 0; } while(0);
  2896                           
  2897  024D  118C               	bcf	12,3	;volatile
  2898                           
  2899                           ;main.c: 86: maxim_31856_init();
  2900  024E  3182  22FC  3182   	fcall	_maxim_31856_init
  2901                           
  2902                           ;main.c: 87: do { TRISB3 = 1; } while(0);
  2903  0251  0021               	movlb	1	; select bank1
  2904  0252  158D               	bsf	13,3	;volatile
  2905                           
  2906                           ;main.c: 88: Bq32k_Time_Init();
  2907  0253  3187  2798  3182   	fcall	_Bq32k_Time_Init
  2908                           
  2909                           ;main.c: 89: SendCmd_1621(0x52);
  2910  0256  3052               	movlw	82
  2911  0257  318F  278B  3182   	fcall	_SendCmd_1621
  2912                           
  2913                           ;main.c: 90: SendCmd_1621(0X28);
  2914  025A  3028               	movlw	40
  2915  025B  318F  278B  3182   	fcall	_SendCmd_1621
  2916                           
  2917                           ;main.c: 91: SendCmd_1621(0x02);
  2918  025E  3002               	movlw	2
  2919  025F  318F  278B  3182   	fcall	_SendCmd_1621
  2920                           
  2921                           ;main.c: 92: SendCmd_1621(0x06);
  2922  0262  3006               	movlw	6
  2923  0263  318F  278B  3182   	fcall	_SendCmd_1621
  2924                           
  2925                           ;main.c: 94: WriteAll_1621(0,Dis_TAB+17,4);
  2926  0266  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  2927  0267  00F7               	movwf	WriteAll_1621@p
  2928  0268  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  2929  0269  00F8               	movwf	WriteAll_1621@p+1
  2930  026A  3004               	movlw	4
  2931  026B  0020               	movlb	0	; select bank0
  2932  026C  00E1               	movwf	??_main
  2933  026D  0861               	movf	??_main,w
  2934  026E  00F9               	movwf	WriteAll_1621@cnt
  2935  026F  3000               	movlw	0
  2936  0270  3185  25E2  3182   	fcall	_WriteAll_1621
  2937                           
  2938                           ;main.c: 96: time_count = 0;
  2939  0273  0020               	movlb	0	; select bank0
  2940  0274  01B6               	clrf	_time_count
  2941                           
  2942                           ;main.c: 113: (INTCONbits.GIE = 1);
  2943  0275  178B               	bsf	11,7	;volatile
  2944                           
  2945                           ;main.c: 116: (INTCONbits.PEIE = 1);
  2946  0276  170B               	bsf	11,6	;volatile
  2947  0277                     l3984:	
  2948                           ;main.c: 124: while (1)
  2949                           
  2950                           
  2951                           ;main.c: 125: {
  2952                           ;main.c: 129: bat_data = ADC_GetConversion(ADC);
  2953  0277  300B               	movlw	11
  2954  0278  3187  27CD  3182   	fcall	_ADC_GetConversion
  2955  027B  0873               	movf	?_ADC_GetConversion+1,w
  2956  027C  0021               	movlb	1	; select bank1
  2957  027D  00CF               	movwf	(main@bat_data+1)^(0+128)
  2958  027E  0872               	movf	?_ADC_GetConversion,w
  2959  027F  00CE               	movwf	main@bat_data^(0+128)
  2960                           
  2961                           ;main.c: 130: if( bat_data < 481)
  2962  0280  3001               	movlw	1
  2963  0281  024F               	subwf	(main@bat_data+1)^(0+128),w
  2964  0282  30E1               	movlw	225
  2965  0283  1903               	skipnz
  2966  0284  024E               	subwf	main@bat_data^(0+128),w
  2967  0285  1803               	skipnc
  2968  0286  2A8A               	goto	l3988
  2969                           
  2970                           ;main.c: 131: {
  2971                           ;main.c: 132: do { LATA2 = 0; } while(0);
  2972  0287  0022               	movlb	2	; select bank2
  2973  0288  110C               	bcf	12,2	;volatile
  2974  0289                     l342:	
  2975                           ;main.c: 133: while(1);
  2976                           
  2977  0289  2A89               	goto	l342
  2978  028A                     l3988:	
  2979                           
  2980                           ;main.c: 134: }
  2981                           ;main.c: 135: temperature_process();
  2982  028A  3186  2617  3182   	fcall	_temperature_process
  2983                           
  2984                           ;main.c: 136: Key_Process();
  2985  028D  3184  24AE  3182   	fcall	_Key_Process
  2986  0290  2A77               	goto	l3984
  2987  0291                     __end_of_main:	
  2988                           
  2989                           	psect	text1
  2990  02FC                     __ptext1:	
  2991 ;; *************** function _maxim_31856_init *****************
  2992 ;; Defined at:
  2993 ;;		line 63 in file "mcc_generated_files/max31856.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        1 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    5
  3014 ;; This function calls:
  3015 ;;		_maxim_31856_write_register
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _maxim_31856_init
  3023  02FC                     _maxim_31856_init:	
  3024                           
  3025                           ;max31856.c: 66: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3029  02FC  3015               	movlw	21
  3030  02FD  00F5               	movwf	??_maxim_31856_init
  3031  02FE  0875               	movf	??_maxim_31856_init,w
  3032  02FF  00FA               	movwf	_uch_cr0
  3033                           
  3034                           ;max31856.c: 68: uch_cr1&= (uint8_t) 0x0F ;
  3035  0300  300F               	movlw	15
  3036  0301  00F5               	movwf	??_maxim_31856_init
  3037  0302  0875               	movf	??_maxim_31856_init,w
  3038  0303  0020               	movlb	0	; select bank0
  3039  0304  05BA               	andwf	_uch_cr1,f
  3040                           
  3041                           ;max31856.c: 69: uch_cr1|=(uint8_t) 0x07;
  3042  0305  3007               	movlw	7
  3043  0306  00F5               	movwf	??_maxim_31856_init
  3044  0307  0875               	movf	??_maxim_31856_init,w
  3045  0308  04BA               	iorwf	_uch_cr1,f
  3046                           
  3047                           ;max31856.c: 71: uch_mask=(uint8_t)0x00 ;
  3048  0309  01BD               	clrf	_uch_mask
  3049                           
  3050                           ;max31856.c: 73: maxim_31856_write_register(0x80, uch_cr0);
  3051  030A  087A               	movf	_uch_cr0,w
  3052  030B  00F5               	movwf	??_maxim_31856_init
  3053  030C  0875               	movf	??_maxim_31856_init,w
  3054  030D  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3055  030E  3080               	movlw	128
  3056  030F  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3057                           
  3058                           ;max31856.c: 74: maxim_31856_write_register(0x81, uch_cr1);
  3059  0312  0020               	movlb	0	; select bank0
  3060  0313  083A               	movf	_uch_cr1,w
  3061  0314  00F5               	movwf	??_maxim_31856_init
  3062  0315  0875               	movf	??_maxim_31856_init,w
  3063  0316  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3064  0317  3081               	movlw	129
  3065  0318  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3066                           
  3067                           ;max31856.c: 75: maxim_31856_write_register(0x82,uch_mask);
  3068  031B  0020               	movlb	0	; select bank0
  3069  031C  083D               	movf	_uch_mask,w
  3070  031D  00F5               	movwf	??_maxim_31856_init
  3071  031E  0875               	movf	??_maxim_31856_init,w
  3072  031F  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3073  0320  3082               	movlw	130
  3074  0321  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3075                           
  3076                           ;max31856.c: 78: maxim_31856_write_register(0x83,0x7F);
  3077  0324  307F               	movlw	127
  3078  0325  00F5               	movwf	??_maxim_31856_init
  3079  0326  0875               	movf	??_maxim_31856_init,w
  3080  0327  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3081  0328  3083               	movlw	131
  3082  0329  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3083                           
  3084                           ;max31856.c: 79: maxim_31856_write_register(0x84,0xC0);
  3085  032C  30C0               	movlw	192
  3086  032D  00F5               	movwf	??_maxim_31856_init
  3087  032E  0875               	movf	??_maxim_31856_init,w
  3088  032F  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3089  0330  3084               	movlw	132
  3090  0331  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3091                           
  3092                           ;max31856.c: 81: maxim_31856_write_register(0x85,0x7F);
  3093  0334  307F               	movlw	127
  3094  0335  00F5               	movwf	??_maxim_31856_init
  3095  0336  0875               	movf	??_maxim_31856_init,w
  3096  0337  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3097  0338  3085               	movlw	133
  3098  0339  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3099                           
  3100                           ;max31856.c: 82: maxim_31856_write_register(0x86,0xFF);
  3101  033C  30FF               	movlw	255
  3102  033D  00F5               	movwf	??_maxim_31856_init
  3103  033E  0875               	movf	??_maxim_31856_init,w
  3104  033F  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3105  0340  3086               	movlw	134
  3106  0341  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3107                           
  3108                           ;max31856.c: 83: maxim_31856_write_register(0x87,0x80);
  3109  0344  3080               	movlw	128
  3110  0345  00F5               	movwf	??_maxim_31856_init
  3111  0346  0875               	movf	??_maxim_31856_init,w
  3112  0347  00F3               	movwf	maxim_31856_write_register@uch_register_value
  3113  0348  3087               	movlw	135
  3114  0349  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3115                           
  3116                           ;max31856.c: 84: maxim_31856_write_register(0x88,0x00);
  3117  034C  01F3               	clrf	maxim_31856_write_register@uch_register_value
  3118  034D  3088               	movlw	136
  3119  034E  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3120                           
  3121                           ;max31856.c: 86: maxim_31856_write_register(0x89,0x00);
  3122  0351  01F3               	clrf	maxim_31856_write_register@uch_register_value
  3123  0352  3089               	movlw	137
  3124  0353  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3125                           
  3126                           ;max31856.c: 90: maxim_31856_write_register(0x8A,0x00);
  3127  0356  01F3               	clrf	maxim_31856_write_register@uch_register_value
  3128  0357  308A               	movlw	138
  3129  0358  318E  26EF  3182   	fcall	_maxim_31856_write_register
  3130                           
  3131                           ;max31856.c: 91: maxim_31856_write_register(0x8B,0x00);
  3132  035B  01F3               	clrf	maxim_31856_write_register@uch_register_value
  3133  035C  308B               	movlw	139
  3134  035D  318E  26EF         	fcall	_maxim_31856_write_register
  3135  035F  0008               	return
  3136  0360                     __end_of_maxim_31856_init:	
  3137                           
  3138                           	psect	text2
  3139  0F3D                     __ptext2:	
  3140 ;; *************** function _SYSTEM_Initialize *****************
  3141 ;; Defined at:
  3142 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    4
  3163 ;; This function calls:
  3164 ;;		_ADC_Initialize
  3165 ;;		_EUSART_Initialize
  3166 ;;		_OSCILLATOR_Initialize
  3167 ;;		_PIN_MANAGER_Initialize
  3168 ;;		_SPI_Initialize
  3169 ;;		_TMR0_Initialize
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function _SYSTEM_Initialize
  3177  0F3D                     _SYSTEM_Initialize:	
  3178                           
  3179                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3183  0F3D  318E  26BB  318F   	fcall	_OSCILLATOR_Initialize
  3184                           
  3185                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3186  0F40  3187  2718  318F   	fcall	_PIN_MANAGER_Initialize
  3187                           
  3188                           ;mcc.c: 73: SPI_Initialize();
  3189  0F43  318E  26C0  318F   	fcall	_SPI_Initialize
  3190                           
  3191                           ;mcc.c: 74: EUSART_Initialize();
  3192  0F46  318E  26E3  318F   	fcall	_EUSART_Initialize
  3193                           
  3194                           ;mcc.c: 75: ADC_Initialize();
  3195  0F49  318E  26D2  318F   	fcall	_ADC_Initialize
  3196                           
  3197                           ;mcc.c: 76: TMR0_Initialize();
  3198  0F4C  318E  26FC         	fcall	_TMR0_Initialize
  3199  0F4E  0008               	return
  3200  0F4F                     __end_of_SYSTEM_Initialize:	
  3201                           
  3202                           	psect	text3
  3203  0EFC                     __ptext3:	
  3204 ;; *************** function _TMR0_Initialize *****************
  3205 ;; Defined at:
  3206 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    3
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_SYSTEM_Initialize
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _TMR0_Initialize
  3236  0EFC                     _TMR0_Initialize:	
  3237                           
  3238                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3242  0EFC  0021               	movlb	1	; select bank1
  3243  0EFD  0815               	movf	21,w	;volatile
  3244  0EFE  39C0               	andlw	192
  3245  0EFF  3817               	iorlw	23
  3246  0F00  0095               	movwf	21	;volatile
  3247                           
  3248                           ;tmr0.c: 73: TMR0 = 0x64;
  3249  0F01  3064               	movlw	100
  3250  0F02  0020               	movlb	0	; select bank0
  3251  0F03  0095               	movwf	21	;volatile
  3252                           
  3253                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3254  0F04  3064               	movlw	100
  3255  0F05  00F2               	movwf	??_TMR0_Initialize
  3256  0F06  0872               	movf	??_TMR0_Initialize,w
  3257  0F07  00E4               	movwf	_timer0ReloadVal	;volatile
  3258                           
  3259                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3260  0F08  110B               	bcf	11,2	;volatile
  3261                           
  3262                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3263  0F09  168B               	bsf	11,5	;volatile
  3264  0F0A  0008               	return
  3265  0F0B                     __end_of_TMR0_Initialize:	
  3266                           
  3267                           	psect	text4
  3268  0EC0                     __ptext4:	
  3269 ;; *************** function _SPI_Initialize *****************
  3270 ;; Defined at:
  3271 ;;		line 64 in file "mcc_generated_files/spi.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    3
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_SYSTEM_Initialize
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _SPI_Initialize
  3301  0EC0                     _SPI_Initialize:	
  3302                           
  3303                           ;spi.c: 68: SSP1STAT = 0x00;
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3307  0EC0  0024               	movlb	4	; select bank4
  3308  0EC1  0194               	clrf	20	;volatile
  3309                           
  3310                           ;spi.c: 71: SSP1CON1 = 0x30;
  3311  0EC2  3030               	movlw	48
  3312  0EC3  0095               	movwf	21	;volatile
  3313                           
  3314                           ;spi.c: 74: SSP1ADD = 0x00;
  3315  0EC4  0192               	clrf	18	;volatile
  3316  0EC5  0008               	return
  3317  0EC6                     __end_of_SPI_Initialize:	
  3318                           
  3319                           	psect	text5
  3320  0718                     __ptext5:	
  3321 ;; *************** function _PIN_MANAGER_Initialize *****************
  3322 ;; Defined at:
  3323 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    3
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_SYSTEM_Initialize
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _PIN_MANAGER_Initialize
  3353  0718                     _PIN_MANAGER_Initialize:	
  3354                           
  3355                           ;pin_manager.c: 51: LATA = 0x7B;
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3359  0718  307B               	movlw	123
  3360  0719  0022               	movlb	2	; select bank2
  3361  071A  008C               	movwf	12	;volatile
  3362                           
  3363                           ;pin_manager.c: 52: TRISA = 0x80;
  3364  071B  3080               	movlw	128
  3365  071C  0021               	movlb	1	; select bank1
  3366  071D  008C               	movwf	12	;volatile
  3367                           
  3368                           ;pin_manager.c: 53: ANSELA = 0x00;
  3369  071E  0023               	movlb	3	; select bank3
  3370  071F  018C               	clrf	12	;volatile
  3371                           
  3372                           ;pin_manager.c: 55: LATB = 0x00;
  3373  0720  0022               	movlb	2	; select bank2
  3374  0721  018D               	clrf	13	;volatile
  3375                           
  3376                           ;pin_manager.c: 56: TRISB = 0xFC;
  3377  0722  30FC               	movlw	252
  3378  0723  0021               	movlb	1	; select bank1
  3379  0724  008D               	movwf	13	;volatile
  3380                           
  3381                           ;pin_manager.c: 57: ANSELB = 0x10;
  3382  0725  3010               	movlw	16
  3383  0726  0023               	movlb	3	; select bank3
  3384  0727  008D               	movwf	13	;volatile
  3385                           
  3386                           ;pin_manager.c: 58: WPUB = 0x2C;
  3387  0728  302C               	movlw	44
  3388  0729  0024               	movlb	4	; select bank4
  3389  072A  008D               	movwf	13	;volatile
  3390                           
  3391                           ;pin_manager.c: 60: LATC = 0x07;
  3392  072B  3007               	movlw	7
  3393  072C  0022               	movlb	2	; select bank2
  3394  072D  008E               	movwf	14	;volatile
  3395                           
  3396                           ;pin_manager.c: 61: TRISC = 0xD0;
  3397  072E  30D0               	movlw	208
  3398  072F  0021               	movlb	1	; select bank1
  3399  0730  008E               	movwf	14	;volatile
  3400                           
  3401                           ;pin_manager.c: 62: ANSELC = 0x00;
  3402  0731  0023               	movlb	3	; select bank3
  3403  0732  018E               	clrf	14	;volatile
  3404                           
  3405                           ;pin_manager.c: 64: WPUE = 0x00;
  3406  0733  0024               	movlb	4	; select bank4
  3407  0734  0190               	clrf	16	;volatile
  3408                           
  3409                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  3410  0735  0021               	movlb	1	; select bank1
  3411  0736  1395               	bcf	21,7	;volatile
  3412                           
  3413                           ;pin_manager.c: 68: APFCON = 0x00;
  3414  0737  0022               	movlb	2	; select bank2
  3415  0738  019D               	clrf	29	;volatile
  3416  0739  0008               	return
  3417  073A                     __end_of_PIN_MANAGER_Initialize:	
  3418                           
  3419                           	psect	text6
  3420  0EBB                     __ptext6:	
  3421 ;; *************** function _OSCILLATOR_Initialize *****************
  3422 ;; Defined at:
  3423 ;;		line 79 in file "mcc_generated_files/mcc.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    3
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_SYSTEM_Initialize
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           
  3452                           ;psect for function _OSCILLATOR_Initialize
  3453  0EBB                     _OSCILLATOR_Initialize:	
  3454                           
  3455                           ;mcc.c: 81: OSCCON = 0x78;
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3459  0EBB  3078               	movlw	120
  3460  0EBC  0021               	movlb	1	; select bank1
  3461  0EBD  0099               	movwf	25	;volatile
  3462                           
  3463                           ;mcc.c: 83: OSCSTAT = 0x00;
  3464  0EBE  019A               	clrf	26	;volatile
  3465  0EBF  0008               	return
  3466  0EC0                     __end_of_OSCILLATOR_Initialize:	
  3467                           
  3468                           	psect	text7
  3469  0EE3                     __ptext7:	
  3470 ;; *************** function _EUSART_Initialize *****************
  3471 ;; Defined at:
  3472 ;;		line 56 in file "mcc_generated_files/eusart.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    3
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_SYSTEM_Initialize
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _EUSART_Initialize
  3502  0EE3                     _EUSART_Initialize:	
  3503                           
  3504                           ;eusart.c: 60: BAUDCON = 0x48;
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in _EUSART_Initialize: [wreg]
  3508  0EE3  3048               	movlw	72
  3509  0EE4  0023               	movlb	3	; select bank3
  3510  0EE5  009F               	movwf	31	;volatile
  3511                           
  3512                           ;eusart.c: 63: RCSTA = 0x80;
  3513  0EE6  3080               	movlw	128
  3514  0EE7  009D               	movwf	29	;volatile
  3515                           
  3516                           ;eusart.c: 66: TXSTA = 0x26;
  3517  0EE8  3026               	movlw	38
  3518  0EE9  009E               	movwf	30	;volatile
  3519                           
  3520                           ;eusart.c: 69: SPBRGL = 0xA0;
  3521  0EEA  30A0               	movlw	160
  3522  0EEB  009B               	movwf	27	;volatile
  3523                           
  3524                           ;eusart.c: 72: SPBRGH = 0x01;
  3525  0EEC  3001               	movlw	1
  3526  0EED  009C               	movwf	28	;volatile
  3527  0EEE  0008               	return
  3528  0EEF                     __end_of_EUSART_Initialize:	
  3529                           
  3530                           	psect	text8
  3531  0ED2                     __ptext8:	
  3532 ;; *************** function _ADC_Initialize *****************
  3533 ;; Defined at:
  3534 ;;		line 65 in file "mcc_generated_files/adc.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    3
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_SYSTEM_Initialize
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _ADC_Initialize
  3564  0ED2                     _ADC_Initialize:	
  3565                           
  3566                           ;adc.c: 69: ADCON0 = 0x01;
  3567                           
  3568                           ;incstack = 0
  3569                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3570  0ED2  3001               	movlw	1
  3571  0ED3  0021               	movlb	1	; select bank1
  3572  0ED4  009D               	movwf	29	;volatile
  3573                           
  3574                           ;adc.c: 72: ADCON1 = 0xE0;
  3575  0ED5  30E0               	movlw	224
  3576  0ED6  009E               	movwf	30	;volatile
  3577                           
  3578                           ;adc.c: 75: ADRESL = 0x00;
  3579  0ED7  019B               	clrf	27	;volatile
  3580                           
  3581                           ;adc.c: 78: ADRESH = 0x00;
  3582  0ED8  019C               	clrf	28	;volatile
  3583  0ED9  0008               	return
  3584  0EDA                     __end_of_ADC_Initialize:	
  3585                           
  3586                           	psect	text9
  3587  04AE                     __ptext9:	
  3588 ;; *************** function _Key_Process *****************
  3589 ;; Defined at:
  3590 ;;		line 39 in file "mcc_generated_files/key.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  gKeyValue       1   21[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2  277[None  ] int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;Total ram usage:        2 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    8
  3611 ;; This function calls:
  3612 ;;		_Key_Scan
  3613 ;;		_SendCmd_1621
  3614 ;;		_temperature_process
  3615 ;; This function is called by:
  3616 ;;		_main
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _Key_Process
  3622  04AE                     _Key_Process:	
  3623                           
  3624                           ;key.c: 41: unsigned char gKeyValue=0;
  3625                           
  3626                           ;incstack = 0
  3627                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3628  04AE  0020               	movlb	0	; select bank0
  3629  04AF  01E0               	clrf	Key_Process@gKeyValue
  3630                           
  3631                           ;key.c: 42: LongPressSec = 0;
  3632  04B0  01B2               	clrf	_LongPressSec
  3633                           
  3634                           ;key.c: 43: gKeyValue=Key_Scan();
  3635  04B1  3186  26F5  3184   	fcall	_Key_Scan
  3636  04B4  0020               	movlb	0	; select bank0
  3637  04B5  00DF               	movwf	??_Key_Process
  3638  04B6  085F               	movf	??_Key_Process,w
  3639  04B7  00E0               	movwf	Key_Process@gKeyValue
  3640                           
  3641                           ;key.c: 44: if(gKeyValue)
  3642  04B8  0860               	movf	Key_Process@gKeyValue,w
  3643  04B9  1903               	btfsc	3,2
  3644  04BA  0008               	return
  3645  04BB  2CEB               	goto	l3948
  3646  04BC                     l3926:	
  3647                           ;key.c: 49: while( !(LongPressSec > 2 || RB5 == 1) );
  3648                           
  3649                           ;key.c: 47: {
  3650                           ;key.c: 48: case 0x01:
  3651                           
  3652                           ;key.c: 45: {
  3653                           ;key.c: 46: switch(gKeyValue)
  3654                           
  3655  04BC  3003               	movlw	3
  3656  04BD  0232               	subwf	_LongPressSec,w
  3657  04BE  1803               	skipnc
  3658  04BF  2CC2               	goto	l3930
  3659  04C0  1E8D               	btfss	13,5	;volatile
  3660  04C1  2CBC               	goto	l3926
  3661  04C2                     l3930:	
  3662                           
  3663                           ;key.c: 50: if(LongPressSec > 2)
  3664  04C2  3003               	movlw	3
  3665  04C3  0232               	subwf	_LongPressSec,w
  3666  04C4  1C03               	skipc
  3667  04C5  2CCD               	goto	l827
  3668                           
  3669                           ;key.c: 51: {
  3670                           ;key.c: 52: do { LATA2 = 0; } while(0);
  3671  04C6  0022               	movlb	2	; select bank2
  3672  04C7  110C               	bcf	12,2	;volatile
  3673                           
  3674                           ;key.c: 53: do { LATA3 = 1; } while(0);
  3675  04C8  158C               	bsf	12,3	;volatile
  3676                           
  3677                           ;key.c: 54: SendCmd_1621(0x04);
  3678  04C9  3004               	movlw	4
  3679  04CA  318F  278B  3184   	fcall	_SendCmd_1621
  3680  04CD                     l827:	
  3681                           ;key.c: 55: }
  3682                           ;key.c: 56: while(RB5 == 0);
  3683                           
  3684  04CD  0020               	movlb	0	; select bank0
  3685  04CE  1A8D               	btfsc	13,5	;volatile
  3686  04CF  0008               	return
  3687  04D0  2CCD               	goto	l827
  3688  04D1                     l3934:	
  3689                           ;key.c: 59: while( !(LongPressSec > 2 || RA7 == 1) );
  3690                           
  3691                           ;key.c: 58: case 0x02:
  3692                           
  3693                           ;key.c: 57: break;
  3694                           
  3695  04D1  3003               	movlw	3
  3696  04D2  0232               	subwf	_LongPressSec,w
  3697  04D3  1803               	skipnc
  3698  04D4  2CD7               	goto	l3938
  3699  04D5  1F8C               	btfss	12,7	;volatile
  3700  04D6  2CD1               	goto	l3934
  3701  04D7                     l3938:	
  3702                           
  3703                           ;key.c: 60: if(LongPressSec > 2)
  3704  04D7  3003               	movlw	3
  3705  04D8  0232               	subwf	_LongPressSec,w
  3706  04D9  1C03               	skipc
  3707  04DA  2CDF               	goto	l3942
  3708                           
  3709                           ;key.c: 61: {
  3710                           ;key.c: 62: do { LATA4 = ~LATA4; } while(0);
  3711  04DB  3010               	movlw	16
  3712  04DC  0022               	movlb	2	; select bank2
  3713  04DD  068C               	xorwf	12,f
  3714                           
  3715                           ;key.c: 63: }
  3716  04DE  2CE7               	goto	l841
  3717  04DF                     l3942:	
  3718                           
  3719                           ;key.c: 64: else
  3720                           ;key.c: 65: {
  3721                           ;key.c: 66: time_count = 5;
  3722  04DF  3005               	movlw	5
  3723  04E0  0020               	movlb	0	; select bank0
  3724  04E1  00DF               	movwf	??_Key_Process
  3725  04E2  085F               	movf	??_Key_Process,w
  3726  04E3  00B6               	movwf	_time_count
  3727                           
  3728                           ;key.c: 67: temperature_process();
  3729  04E4  3186  2617  3184   	fcall	_temperature_process
  3730  04E7                     l841:	
  3731                           ;key.c: 68: }
  3732                           ;key.c: 69: while(RA7 == 0);
  3733                           
  3734  04E7  0020               	movlb	0	; select bank0
  3735  04E8  1B8C               	btfsc	12,7	;volatile
  3736  04E9  0008               	return
  3737  04EA  2CE7               	goto	l841
  3738  04EB                     l3948:	
  3739                           ;key.c: 72: }
  3740                           
  3741                           ;key.c: 71: default:break;
  3742                           
  3743                           ;key.c: 70: break;
  3744                           
  3745  04EB  0860               	movf	Key_Process@gKeyValue,w
  3746                           
  3747                           ; Switch size 1, requested type "space"
  3748                           ; Number of cases is 2, Range of values is 1 to 2
  3749                           ; switch strategies available:
  3750                           ; Name         Instructions Cycles
  3751                           ; simple_byte            7     4 (average)
  3752                           ; direct_byte           13     9 (fixed)
  3753                           ; jumptable            263     9 (fixed)
  3754                           ;	Chosen strategy is simple_byte
  3755  04EC  3A01               	xorlw	1	; case 1
  3756  04ED  1903               	skipnz
  3757  04EE  2CBC               	goto	l3926
  3758  04EF  3A03               	xorlw	3	; case 2
  3759  04F0  1903               	skipnz
  3760  04F1  2CD1               	goto	l3934
  3761  04F2  2CF4               	goto	l845
  3762  04F3  0008               	return
  3763  04F4                     l845:	
  3764  04F4  0008               	return
  3765  04F5                     __end_of_Key_Process:	
  3766                           
  3767                           	psect	text10
  3768  0617                     __ptext10:	
  3769 ;; *************** function _temperature_process *****************
  3770 ;; Defined at:
  3771 ;;		line 247 in file "mcc_generated_files/max31856.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    7
  3792 ;; This function calls:
  3793 ;;		_Two_Display
  3794 ;;		_one_temperature_trans
  3795 ;;		_temperature_display
  3796 ;;		_time_Display
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;;		_Key_Process
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _temperature_process
  3805  0617                     _temperature_process:	
  3806                           
  3807                           ;max31856.c: 249: switch(time_count)
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3811  0617  2E37               	goto	l3818
  3812  0618                     l3790:	
  3813                           ;max31856.c: 250: {
  3814                           ;max31856.c: 251: case 0: Two_Display(1);
  3815                           
  3816  0618  3001               	movlw	1
  3817  0619  3186  26CC  3186   	fcall	_Two_Display
  3818                           
  3819                           ;max31856.c: 252: do { LATA1 = 1; } while(0);
  3820  061C  0022               	movlb	2	; select bank2
  3821  061D  148C               	bsf	12,1	;volatile
  3822                           
  3823                           ;max31856.c: 253: do { LATA0 = 1; } while(0);
  3824  061E  140C               	bsf	12,0	;volatile
  3825                           
  3826                           ;max31856.c: 254: do { LATA0 = 0; } while(0);
  3827  061F  100C               	bcf	12,0	;volatile
  3828                           
  3829                           ;max31856.c: 255: one_temperature_trans();
  3830  0620  3185  2575         	fcall	_one_temperature_trans
  3831                           
  3832                           ;max31856.c: 256: break;
  3833  0622  0008               	return
  3834  0623                     l3800:	
  3835                           ;max31856.c: 257: case 1:
  3836                           
  3837                           
  3838                           ;max31856.c: 258: temperature_display();break;
  3839  0623  3187  277A         	fcall	_temperature_display
  3840  0625  0008               	return
  3841  0626                     l3802:	
  3842                           ;max31856.c: 259: case 2: Two_Display(2);
  3843                           
  3844  0626  3002               	movlw	2
  3845  0627  3186  26CC  3186   	fcall	_Two_Display
  3846                           
  3847                           ;max31856.c: 260: do { LATA0 = 1; } while(0);
  3848  062A  0022               	movlb	2	; select bank2
  3849  062B  140C               	bsf	12,0	;volatile
  3850                           
  3851                           ;max31856.c: 261: do { LATA1 = 1; } while(0);
  3852  062C  148C               	bsf	12,1	;volatile
  3853                           
  3854                           ;max31856.c: 262: do { LATA1 = 0; } while(0);
  3855  062D  108C               	bcf	12,1	;volatile
  3856                           
  3857                           ;max31856.c: 263: one_temperature_trans();
  3858  062E  3185  2575         	fcall	_one_temperature_trans
  3859                           
  3860                           ;max31856.c: 264: break;
  3861  0630  0008               	return
  3862  0631                     l3812:	
  3863                           ;max31856.c: 265: case 3:
  3864                           
  3865                           
  3866                           ;max31856.c: 266: temperature_display();break;
  3867  0631  3187  277A         	fcall	_temperature_display
  3868  0633  0008               	return
  3869  0634                     l3814:	
  3870                           ;max31856.c: 267: case 5: time_Display();break;
  3871                           
  3872  0634  3181  218D         	fcall	_time_Display
  3873                           
  3874                           ;max31856.c: 269: }
  3875                           
  3876                           ;max31856.c: 268: default:break;
  3877  0636  0008               	return
  3878  0637                     l3818:	
  3879  0637  0020               	movlb	0	; select bank0
  3880  0638  0836               	movf	_time_count,w
  3881                           
  3882                           ; Switch size 1, requested type "space"
  3883                           ; Number of cases is 5, Range of values is 0 to 5
  3884                           ; switch strategies available:
  3885                           ; Name         Instructions Cycles
  3886                           ; simple_byte           16     9 (average)
  3887                           ; direct_byte           18     6 (fixed)
  3888                           ; jumptable            260     6 (fixed)
  3889                           ;	Chosen strategy is simple_byte
  3890  0639  3A00               	xorlw	0	; case 0
  3891  063A  1903               	skipnz
  3892  063B  2E18               	goto	l3790
  3893  063C  3A01               	xorlw	1	; case 1
  3894  063D  1903               	skipnz
  3895  063E  2E23               	goto	l3800
  3896  063F  3A03               	xorlw	3	; case 2
  3897  0640  1903               	skipnz
  3898  0641  2E26               	goto	l3802
  3899  0642  3A01               	xorlw	1	; case 3
  3900  0643  1903               	skipnz
  3901  0644  2E31               	goto	l3812
  3902  0645  3A06               	xorlw	6	; case 5
  3903  0646  1903               	skipnz
  3904  0647  2E34               	goto	l3814
  3905  0648  2E49               	goto	l490
  3906  0649                     l490:	
  3907  0649  0008               	return
  3908  064A                     __end_of_temperature_process:	
  3909                           
  3910                           	psect	text11
  3911  018D                     __ptext11:	
  3912 ;; *************** function _time_Display *****************
  3913 ;; Defined at:
  3914 ;;		line 165 in file "mcc_generated_files/ht1621.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  num             4   16[BANK0 ] unsigned char [4]
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        7 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    6
  3935 ;; This function calls:
  3936 ;;		_Bq32k_Rtc_Read_Time
  3937 ;;		_WriteAll_1621
  3938 ;;		___awdiv
  3939 ;;		___awmod
  3940 ;; This function is called by:
  3941 ;;		_temperature_process
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _time_Display
  3947  018D                     _time_Display:	
  3948                           
  3949                           ;ht1621.c: 167: unsigned char num[4]={0};
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3953  018D  0021               	movlb	1	; select bank1
  3954  018E  083B               	movf	(time_Display@F2116+3)^(0+128),w
  3955  018F  0020               	movlb	0	; select bank0
  3956  0190  00DE               	movwf	time_Display@num+3
  3957  0191  0021               	movlb	1	; select bank1
  3958  0192  083A               	movf	(time_Display@F2116+2)^(0+128),w
  3959  0193  0020               	movlb	0	; select bank0
  3960  0194  00DD               	movwf	time_Display@num+2
  3961  0195  0021               	movlb	1	; select bank1
  3962  0196  0839               	movf	(time_Display@F2116+1)^(0+128),w
  3963  0197  0020               	movlb	0	; select bank0
  3964  0198  00DC               	movwf	time_Display@num+1
  3965  0199  0021               	movlb	1	; select bank1
  3966  019A  0838               	movf	time_Display@F2116^(0+128),w
  3967  019B  0020               	movlb	0	; select bank0
  3968  019C  00DB               	movwf	time_Display@num
  3969                           
  3970                           ;ht1621.c: 168: Bq32k_Rtc_Read_Time(&tm);
  3971  019D  30BC               	movlw	(low (_tm| 0))& (0+255)
  3972  019E  3183  2360  3181   	fcall	_Bq32k_Rtc_Read_Time
  3973                           
  3974                           ;ht1621.c: 169: num[0] = Dis_TAB[tm.hours / 10];
  3975  01A1  300A               	movlw	10
  3976  01A2  00F2               	movwf	___awdiv@divisor
  3977  01A3  3000               	movlw	0
  3978  01A4  00F3               	movwf	___awdiv@divisor+1
  3979  01A5  0021               	movlb	1	; select bank1
  3980  01A6  083E               	movf	(_tm^(0+128)+2),w
  3981  01A7  0020               	movlb	0	; select bank0
  3982  01A8  00D8               	movwf	??_time_Display
  3983  01A9  01D9               	clrf	??_time_Display+1
  3984  01AA  0858               	movf	??_time_Display,w
  3985  01AB  00F4               	movwf	___awdiv@dividend
  3986  01AC  0859               	movf	??_time_Display+1,w
  3987  01AD  00F5               	movwf	___awdiv@dividend+1
  3988  01AE  3183  23C4  3181   	fcall	___awdiv
  3989  01B1  0873               	movf	?___awdiv+1,w
  3990  01B2  0085               	movwf	5
  3991  01B3  0872               	movf	?___awdiv,w
  3992  01B4  0084               	movwf	4
  3993  01B5  3000               	movlw	low (_Dis_TAB| (0+32768))
  3994  01B6  0784               	addwf	4,f
  3995  01B7  3090               	movlw	high (_Dis_TAB| (0+32768))
  3996  01B8  3D85               	addwfc	5,f
  3997  01B9  0800               	movf	0,w	;code access
  3998  01BA  0020               	movlb	0	; select bank0
  3999  01BB  00DA               	movwf	??_time_Display+2
  4000  01BC  085A               	movf	??_time_Display+2,w
  4001  01BD  00DB               	movwf	time_Display@num
  4002                           
  4003                           ;ht1621.c: 170: num[1] = Dis_TAB[tm.hours % 10];
  4004  01BE  300A               	movlw	10
  4005  01BF  00F2               	movwf	___awmod@divisor
  4006  01C0  3000               	movlw	0
  4007  01C1  00F3               	movwf	___awmod@divisor+1
  4008  01C2  0021               	movlb	1	; select bank1
  4009  01C3  083E               	movf	(_tm^(0+128)+2),w
  4010  01C4  0020               	movlb	0	; select bank0
  4011  01C5  00D8               	movwf	??_time_Display
  4012  01C6  01D9               	clrf	??_time_Display+1
  4013  01C7  0858               	movf	??_time_Display,w
  4014  01C8  00F4               	movwf	___awmod@dividend
  4015  01C9  0859               	movf	??_time_Display+1,w
  4016  01CA  00F5               	movwf	___awmod@dividend+1
  4017  01CB  3184  24F5  3181   	fcall	___awmod
  4018  01CE  0873               	movf	?___awmod+1,w
  4019  01CF  0085               	movwf	5
  4020  01D0  0872               	movf	?___awmod,w
  4021  01D1  0084               	movwf	4
  4022  01D2  3000               	movlw	low (_Dis_TAB| (0+32768))
  4023  01D3  0784               	addwf	4,f
  4024  01D4  3090               	movlw	high (_Dis_TAB| (0+32768))
  4025  01D5  3D85               	addwfc	5,f
  4026  01D6  0800               	movf	0,w	;code access
  4027  01D7  0020               	movlb	0	; select bank0
  4028  01D8  00DA               	movwf	??_time_Display+2
  4029  01D9  085A               	movf	??_time_Display+2,w
  4030  01DA  00DC               	movwf	time_Display@num+1
  4031                           
  4032                           ;ht1621.c: 171: num[2] = Dis_TAB[tm.minutes / 10];
  4033  01DB  300A               	movlw	10
  4034  01DC  00F2               	movwf	___awdiv@divisor
  4035  01DD  3000               	movlw	0
  4036  01DE  00F3               	movwf	___awdiv@divisor+1
  4037  01DF  0021               	movlb	1	; select bank1
  4038  01E0  083D               	movf	(_tm^(0+128)+1),w
  4039  01E1  0020               	movlb	0	; select bank0
  4040  01E2  00D8               	movwf	??_time_Display
  4041  01E3  01D9               	clrf	??_time_Display+1
  4042  01E4  0858               	movf	??_time_Display,w
  4043  01E5  00F4               	movwf	___awdiv@dividend
  4044  01E6  0859               	movf	??_time_Display+1,w
  4045  01E7  00F5               	movwf	___awdiv@dividend+1
  4046  01E8  3183  23C4  3181   	fcall	___awdiv
  4047  01EB  0873               	movf	?___awdiv+1,w
  4048  01EC  0085               	movwf	5
  4049  01ED  0872               	movf	?___awdiv,w
  4050  01EE  0084               	movwf	4
  4051  01EF  3000               	movlw	low (_Dis_TAB| (0+32768))
  4052  01F0  0784               	addwf	4,f
  4053  01F1  3090               	movlw	high (_Dis_TAB| (0+32768))
  4054  01F2  3D85               	addwfc	5,f
  4055  01F3  0800               	movf	0,w	;code access
  4056  01F4  0020               	movlb	0	; select bank0
  4057  01F5  00DA               	movwf	??_time_Display+2
  4058  01F6  085A               	movf	??_time_Display+2,w
  4059  01F7  00DD               	movwf	time_Display@num+2
  4060                           
  4061                           ;ht1621.c: 172: num[3] = Dis_TAB[tm.minutes % 10];
  4062  01F8  300A               	movlw	10
  4063  01F9  00F2               	movwf	___awmod@divisor
  4064  01FA  3000               	movlw	0
  4065  01FB  00F3               	movwf	___awmod@divisor+1
  4066  01FC  0021               	movlb	1	; select bank1
  4067  01FD  083D               	movf	(_tm^(0+128)+1),w
  4068  01FE  0020               	movlb	0	; select bank0
  4069  01FF  00D8               	movwf	??_time_Display
  4070  0200  01D9               	clrf	??_time_Display+1
  4071  0201  0858               	movf	??_time_Display,w
  4072  0202  00F4               	movwf	___awmod@dividend
  4073  0203  0859               	movf	??_time_Display+1,w
  4074  0204  00F5               	movwf	___awmod@dividend+1
  4075  0205  3184  24F5  3181   	fcall	___awmod
  4076  0208  0873               	movf	?___awmod+1,w
  4077  0209  0085               	movwf	5
  4078  020A  0872               	movf	?___awmod,w
  4079  020B  0084               	movwf	4
  4080  020C  3000               	movlw	low (_Dis_TAB| (0+32768))
  4081  020D  0784               	addwf	4,f
  4082  020E  3090               	movlw	high (_Dis_TAB| (0+32768))
  4083  020F  3D85               	addwfc	5,f
  4084  0210  0800               	movf	0,w	;code access
  4085  0211  0020               	movlb	0	; select bank0
  4086  0212  00DA               	movwf	??_time_Display+2
  4087  0213  085A               	movf	??_time_Display+2,w
  4088  0214  00DE               	movwf	time_Display@num+3
  4089                           
  4090                           ;ht1621.c: 173: WriteAll_1621(0, num, 4);
  4091  0215  305B               	movlw	low time_Display@num
  4092  0216  00F7               	movwf	WriteAll_1621@p
  4093  0217  3000               	movlw	high time_Display@num
  4094  0218  00F8               	movwf	WriteAll_1621@p+1
  4095  0219  3004               	movlw	4
  4096  021A  00D8               	movwf	??_time_Display
  4097  021B  0858               	movf	??_time_Display,w
  4098  021C  00F9               	movwf	WriteAll_1621@cnt
  4099  021D  3000               	movlw	0
  4100  021E  3185  25E2         	fcall	_WriteAll_1621
  4101  0220  0008               	return
  4102  0221                     __end_of_time_Display:	
  4103                           
  4104                           	psect	text12
  4105  04F5                     __ptext12:	
  4106 ;; *************** function ___awmod *****************
  4107 ;; Defined at:
  4108 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  divisor         2    2[COMMON] int 
  4111 ;;  dividend        2    4[COMMON] int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  sign            1    8[COMMON] unsigned char 
  4114 ;;  counter         1    7[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    2[COMMON] int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;Total ram usage:        7 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    3
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_time_Display
  4135 ;;		_bin2bcd
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function ___awmod
  4141  04F5                     ___awmod:	
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4145  04F5  01F8               	clrf	___awmod@sign
  4146  04F6  1FF5               	btfss	___awmod@dividend+1,7
  4147  04F7  2CFF               	goto	l3652
  4148  04F8  09F4               	comf	___awmod@dividend,f
  4149  04F9  09F5               	comf	___awmod@dividend+1,f
  4150  04FA  0AF4               	incf	___awmod@dividend,f
  4151  04FB  1903               	skipnz
  4152  04FC  0AF5               	incf	___awmod@dividend+1,f
  4153  04FD  01F8               	clrf	___awmod@sign
  4154  04FE  0AF8               	incf	___awmod@sign,f
  4155  04FF                     l3652:	
  4156  04FF  1FF3               	btfss	___awmod@divisor+1,7
  4157  0500  2D06               	goto	l3656
  4158  0501  09F2               	comf	___awmod@divisor,f
  4159  0502  09F3               	comf	___awmod@divisor+1,f
  4160  0503  0AF2               	incf	___awmod@divisor,f
  4161  0504  1903               	skipnz
  4162  0505  0AF3               	incf	___awmod@divisor+1,f
  4163  0506                     l3656:	
  4164  0506  0872               	movf	___awmod@divisor,w
  4165  0507  0473               	iorwf	___awmod@divisor+1,w
  4166  0508  1903               	btfsc	3,2
  4167  0509  2D2D               	goto	l3674
  4168  050A  01F7               	clrf	___awmod@counter
  4169  050B  0AF7               	incf	___awmod@counter,f
  4170  050C                     l3664:	
  4171  050C  1BF3               	btfsc	___awmod@divisor+1,7
  4172  050D  2D18               	goto	l3666
  4173  050E  3001               	movlw	1
  4174  050F                     u3045:	
  4175  050F  35F2               	lslf	___awmod@divisor,f
  4176  0510  0DF3               	rlf	___awmod@divisor+1,f
  4177  0511  0B89               	decfsz	9,f
  4178  0512  2D0F               	goto	u3045
  4179  0513  3001               	movlw	1
  4180  0514  00F6               	movwf	??___awmod
  4181  0515  0876               	movf	??___awmod,w
  4182  0516  07F7               	addwf	___awmod@counter,f
  4183  0517  2D0C               	goto	l3664
  4184  0518                     l3666:	
  4185  0518  0873               	movf	___awmod@divisor+1,w
  4186  0519  0275               	subwf	___awmod@dividend+1,w
  4187  051A  1D03               	skipz
  4188  051B  2D1E               	goto	u3065
  4189  051C  0872               	movf	___awmod@divisor,w
  4190  051D  0274               	subwf	___awmod@dividend,w
  4191  051E                     u3065:	
  4192  051E  1C03               	skipc
  4193  051F  2D24               	goto	l3670
  4194  0520  0872               	movf	___awmod@divisor,w
  4195  0521  02F4               	subwf	___awmod@dividend,f
  4196  0522  0873               	movf	___awmod@divisor+1,w
  4197  0523  3BF5               	subwfb	___awmod@dividend+1,f
  4198  0524                     l3670:	
  4199  0524  3001               	movlw	1
  4200  0525                     u3075:	
  4201  0525  36F3               	lsrf	___awmod@divisor+1,f
  4202  0526  0CF2               	rrf	___awmod@divisor,f
  4203  0527  0B89               	decfsz	9,f
  4204  0528  2D25               	goto	u3075
  4205  0529  3001               	movlw	1
  4206  052A  02F7               	subwf	___awmod@counter,f
  4207  052B  1D03               	btfss	3,2
  4208  052C  2D18               	goto	l3666
  4209  052D                     l3674:	
  4210  052D  0878               	movf	___awmod@sign,w
  4211  052E  1903               	btfsc	3,2
  4212  052F  2D35               	goto	l3678
  4213  0530  09F4               	comf	___awmod@dividend,f
  4214  0531  09F5               	comf	___awmod@dividend+1,f
  4215  0532  0AF4               	incf	___awmod@dividend,f
  4216  0533  1903               	skipnz
  4217  0534  0AF5               	incf	___awmod@dividend+1,f
  4218  0535                     l3678:	
  4219  0535  0875               	movf	___awmod@dividend+1,w
  4220  0536  00F3               	movwf	?___awmod+1
  4221  0537  0874               	movf	___awmod@dividend,w
  4222  0538  00F2               	movwf	?___awmod
  4223  0539  0008               	return
  4224  053A                     __end_of___awmod:	
  4225                           
  4226                           	psect	text13
  4227  03C4                     __ptext13:	
  4228 ;; *************** function ___awdiv *****************
  4229 ;; Defined at:
  4230 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  divisor         2    2[COMMON] int 
  4233 ;;  dividend        2    4[COMMON] int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  quotient        2    2[BANK0 ] int 
  4236 ;;  sign            1    1[BANK0 ] unsigned char 
  4237 ;;  counter         1    0[BANK0 ] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  2    2[COMMON] int 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;Total ram usage:        9 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    3
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_time_Display
  4258 ;;		_bin2bcd
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function ___awdiv
  4264  03C4                     ___awdiv:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4268  03C4  0020               	movlb	0	; select bank0
  4269  03C5  01CC               	clrf	___awdiv@sign
  4270  03C6  1FF3               	btfss	___awdiv@divisor+1,7
  4271  03C7  2BCF               	goto	l3608
  4272  03C8  09F2               	comf	___awdiv@divisor,f
  4273  03C9  09F3               	comf	___awdiv@divisor+1,f
  4274  03CA  0AF2               	incf	___awdiv@divisor,f
  4275  03CB  1903               	skipnz
  4276  03CC  0AF3               	incf	___awdiv@divisor+1,f
  4277  03CD  01CC               	clrf	___awdiv@sign
  4278  03CE  0ACC               	incf	___awdiv@sign,f
  4279  03CF                     l3608:	
  4280  03CF  1FF5               	btfss	___awdiv@dividend+1,7
  4281  03D0  2BDA               	goto	l3614
  4282  03D1  09F4               	comf	___awdiv@dividend,f
  4283  03D2  09F5               	comf	___awdiv@dividend+1,f
  4284  03D3  0AF4               	incf	___awdiv@dividend,f
  4285  03D4  1903               	skipnz
  4286  03D5  0AF5               	incf	___awdiv@dividend+1,f
  4287  03D6  3001               	movlw	1
  4288  03D7  00F6               	movwf	??___awdiv
  4289  03D8  0876               	movf	??___awdiv,w
  4290  03D9  06CC               	xorwf	___awdiv@sign,f
  4291  03DA                     l3614:	
  4292  03DA  01CD               	clrf	___awdiv@quotient
  4293  03DB  01CE               	clrf	___awdiv@quotient+1
  4294  03DC  0872               	movf	___awdiv@divisor,w
  4295  03DD  0473               	iorwf	___awdiv@divisor+1,w
  4296  03DE  1903               	btfsc	3,2
  4297  03DF  2C09               	goto	l3636
  4298  03E0  01CB               	clrf	___awdiv@counter
  4299  03E1  0ACB               	incf	___awdiv@counter,f
  4300  03E2                     l3624:	
  4301  03E2  1BF3               	btfsc	___awdiv@divisor+1,7
  4302  03E3  2BEE               	goto	l3626
  4303  03E4  3001               	movlw	1
  4304  03E5                     u2945:	
  4305  03E5  35F2               	lslf	___awdiv@divisor,f
  4306  03E6  0DF3               	rlf	___awdiv@divisor+1,f
  4307  03E7  0B89               	decfsz	9,f
  4308  03E8  2BE5               	goto	u2945
  4309  03E9  3001               	movlw	1
  4310  03EA  00F6               	movwf	??___awdiv
  4311  03EB  0876               	movf	??___awdiv,w
  4312  03EC  07CB               	addwf	___awdiv@counter,f
  4313  03ED  2BE2               	goto	l3624
  4314  03EE                     l3626:	
  4315  03EE  3001               	movlw	1
  4316  03EF                     u2965:	
  4317  03EF  35CD               	lslf	___awdiv@quotient,f
  4318  03F0  0DCE               	rlf	___awdiv@quotient+1,f
  4319  03F1  0B89               	decfsz	9,f
  4320  03F2  2BEF               	goto	u2965
  4321  03F3  0873               	movf	___awdiv@divisor+1,w
  4322  03F4  0275               	subwf	___awdiv@dividend+1,w
  4323  03F5  1D03               	skipz
  4324  03F6  2BF9               	goto	u2975
  4325  03F7  0872               	movf	___awdiv@divisor,w
  4326  03F8  0274               	subwf	___awdiv@dividend,w
  4327  03F9                     u2975:	
  4328  03F9  1C03               	skipc
  4329  03FA  2C00               	goto	l3632
  4330  03FB  0872               	movf	___awdiv@divisor,w
  4331  03FC  02F4               	subwf	___awdiv@dividend,f
  4332  03FD  0873               	movf	___awdiv@divisor+1,w
  4333  03FE  3BF5               	subwfb	___awdiv@dividend+1,f
  4334  03FF  144D               	bsf	___awdiv@quotient,0
  4335  0400                     l3632:	
  4336  0400  3001               	movlw	1
  4337  0401                     u2985:	
  4338  0401  36F3               	lsrf	___awdiv@divisor+1,f
  4339  0402  0CF2               	rrf	___awdiv@divisor,f
  4340  0403  0B89               	decfsz	9,f
  4341  0404  2C01               	goto	u2985
  4342  0405  3001               	movlw	1
  4343  0406  02CB               	subwf	___awdiv@counter,f
  4344  0407  1D03               	btfss	3,2
  4345  0408  2BEE               	goto	l3626
  4346  0409                     l3636:	
  4347  0409  084C               	movf	___awdiv@sign,w
  4348  040A  1903               	btfsc	3,2
  4349  040B  2C11               	goto	l3640
  4350  040C  09CD               	comf	___awdiv@quotient,f
  4351  040D  09CE               	comf	___awdiv@quotient+1,f
  4352  040E  0ACD               	incf	___awdiv@quotient,f
  4353  040F  1903               	skipnz
  4354  0410  0ACE               	incf	___awdiv@quotient+1,f
  4355  0411                     l3640:	
  4356  0411  084E               	movf	___awdiv@quotient+1,w
  4357  0412  00F3               	movwf	?___awdiv+1
  4358  0413  084D               	movf	___awdiv@quotient,w
  4359  0414  00F2               	movwf	?___awdiv
  4360  0415  0008               	return
  4361  0416                     __end_of___awdiv:	
  4362                           
  4363                           	psect	text14
  4364  0360                     __ptext14:	
  4365 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  4366 ;; Defined at:
  4367 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  p               1    wreg     PTR struct bq32k_regs
  4370 ;;		 -> tm(7), 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  p               1   12[BANK0 ] PTR struct bq32k_regs
  4373 ;;		 -> tm(7), 
  4374 ;;  temp           10    2[BANK0 ] unsigned char [10]
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4386 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;Total ram usage:       13 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    5
  4391 ;; This function calls:
  4392 ;;		_I2C_Read_Buffer
  4393 ;;		_bcd2bin
  4394 ;; This function is called by:
  4395 ;;		_time_Display
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function _Bq32k_Rtc_Read_Time
  4401  0360                     _Bq32k_Rtc_Read_Time:	
  4402                           
  4403                           ;incstack = 0
  4404                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4405                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  4406  0360  0020               	movlb	0	; select bank0
  4407  0361  00D7               	movwf	Bq32k_Rtc_Read_Time@p
  4408                           
  4409                           ;bq32k.c: 32: unsigned char temp[10] ;
  4410                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  4411  0362  304D               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  4412  0363  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4413  0364  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4414  0365  00F5               	movwf	I2C_Read_Buffer@buff
  4415  0366  3007               	movlw	7
  4416  0367  00CC               	movwf	??_Bq32k_Rtc_Read_Time+1
  4417  0368  084C               	movf	??_Bq32k_Rtc_Read_Time+1,w
  4418  0369  00F6               	movwf	I2C_Read_Buffer@Length
  4419  036A  3000               	movlw	0
  4420  036B  3182  2291  3183   	fcall	_I2C_Read_Buffer
  4421                           
  4422                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  4423  036E  0020               	movlb	0	; select bank0
  4424  036F  084D               	movf	Bq32k_Rtc_Read_Time@temp,w
  4425  0370  397F               	andlw	127
  4426  0371  318F  274F  3183   	fcall	_bcd2bin
  4427  0374  0020               	movlb	0	; select bank0
  4428  0375  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4429  0376  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4430  0377  0086               	movwf	6
  4431  0378  0187               	clrf	7
  4432  0379  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4433  037A  0081               	movwf	1
  4434                           
  4435                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  4436  037B  084E               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  4437  037C  397F               	andlw	127
  4438  037D  318F  274F  3183   	fcall	_bcd2bin
  4439  0380  0020               	movlb	0	; select bank0
  4440  0381  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4441  0382  0A57               	incf	Bq32k_Rtc_Read_Time@p,w
  4442  0383  0086               	movwf	6
  4443  0384  0187               	clrf	7
  4444  0385  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4445  0386  0081               	movwf	1
  4446                           
  4447                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  4448  0387  084F               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  4449  0388  393F               	andlw	63
  4450  0389  318F  274F  3183   	fcall	_bcd2bin
  4451  038C  0020               	movlb	0	; select bank0
  4452  038D  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4453  038E  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4454  038F  3E02               	addlw	2
  4455  0390  0086               	movwf	6
  4456  0391  0187               	clrf	7
  4457  0392  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4458  0393  0081               	movwf	1
  4459                           
  4460                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  4461  0394  0850               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  4462  0395  318F  274F  3183   	fcall	_bcd2bin
  4463  0398  0020               	movlb	0	; select bank0
  4464  0399  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4465  039A  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4466  039B  3E03               	addlw	3
  4467  039C  0086               	movwf	6
  4468  039D  0187               	clrf	7
  4469  039E  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4470  039F  0081               	movwf	1
  4471                           
  4472                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  4473  03A0  0851               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  4474  03A1  318F  274F  3183   	fcall	_bcd2bin
  4475  03A4  0020               	movlb	0	; select bank0
  4476  03A5  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4477  03A6  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4478  03A7  3E04               	addlw	4
  4479  03A8  0086               	movwf	6
  4480  03A9  0187               	clrf	7
  4481  03AA  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4482  03AB  0081               	movwf	1
  4483                           
  4484                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  4485  03AC  0852               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  4486  03AD  318F  274F  3183   	fcall	_bcd2bin
  4487  03B0  0020               	movlb	0	; select bank0
  4488  03B1  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4489  03B2  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4490  03B3  3E05               	addlw	5
  4491  03B4  0086               	movwf	6
  4492  03B5  0187               	clrf	7
  4493  03B6  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4494  03B7  0081               	movwf	1
  4495                           
  4496                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  4497  03B8  0853               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  4498  03B9  318F  274F         	fcall	_bcd2bin
  4499  03BB  0020               	movlb	0	; select bank0
  4500  03BC  00CB               	movwf	??_Bq32k_Rtc_Read_Time
  4501  03BD  0857               	movf	Bq32k_Rtc_Read_Time@p,w
  4502  03BE  3E06               	addlw	6
  4503  03BF  0086               	movwf	6
  4504  03C0  0187               	clrf	7
  4505  03C1  084B               	movf	??_Bq32k_Rtc_Read_Time,w
  4506  03C2  0081               	movwf	1
  4507  03C3  0008               	return
  4508  03C4                     __end_of_Bq32k_Rtc_Read_Time:	
  4509                           
  4510                           	psect	text15
  4511  0F4F                     __ptext15:	
  4512 ;; *************** function _bcd2bin *****************
  4513 ;; Defined at:
  4514 ;;		line 63 in file "mcc_generated_files/bq32k.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  val             1    wreg     unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  val             1    9[COMMON] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      unsigned char 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    4
  4535 ;; This function calls:
  4536 ;;		___bmul
  4537 ;; This function is called by:
  4538 ;;		_Bq32k_Rtc_Read_Time
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _bcd2bin
  4544  0F4F                     _bcd2bin:	
  4545                           
  4546                           ;incstack = 0
  4547                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  4548                           ;bcd2bin@val stored from wreg
  4549  0F4F  00F9               	movwf	bcd2bin@val
  4550                           
  4551                           ;bq32k.c: 65: return (val & 0x0f) + (val >> 4) * 10;
  4552  0F50  300F               	movlw	15
  4553  0F51  0579               	andwf	bcd2bin@val,w
  4554  0F52  00F6               	movwf	??_bcd2bin
  4555  0F53  300A               	movlw	10
  4556  0F54  00F7               	movwf	??_bcd2bin+1
  4557  0F55  0877               	movf	??_bcd2bin+1,w
  4558  0F56  00F2               	movwf	___bmul@multiplicand
  4559  0F57  0879               	movf	bcd2bin@val,w
  4560  0F58  00F8               	movwf	??_bcd2bin+2
  4561  0F59  3004               	movlw	4
  4562  0F5A                     u2635:	
  4563  0F5A  36F8               	lsrf	??_bcd2bin+2,f
  4564  0F5B  0B89               	decfsz	9,f
  4565  0F5C  2F5A               	goto	u2635
  4566  0F5D  0878               	movf	??_bcd2bin+2,w
  4567  0F5E  318F  272C         	fcall	___bmul
  4568  0F60  0776               	addwf	??_bcd2bin,w
  4569  0F61  0008               	return
  4570  0F62                     __end_of_bcd2bin:	
  4571                           
  4572                           	psect	text16
  4573  0F2C                     __ptext16:	
  4574 ;; *************** function ___bmul *****************
  4575 ;; Defined at:
  4576 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  multiplier      1    wreg     unsigned char 
  4579 ;;  multiplicand    1    2[COMMON] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  multiplier      1    5[COMMON] unsigned char 
  4582 ;;  product         1    4[COMMON] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;Total ram usage:        4 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    3
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_bcd2bin
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           
  4607                           ;psect for function ___bmul
  4608  0F2C                     ___bmul:	
  4609                           
  4610                           ;incstack = 0
  4611                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4612                           ;___bmul@multiplier stored from wreg
  4613  0F2C  00F5               	movwf	___bmul@multiplier
  4614  0F2D  01F4               	clrf	___bmul@product
  4615  0F2E                     l3328:	
  4616  0F2E  1C75               	btfss	___bmul@multiplier,0
  4617  0F2F  2F34               	goto	l3332
  4618  0F30  0872               	movf	___bmul@multiplicand,w
  4619  0F31  00F3               	movwf	??___bmul
  4620  0F32  0873               	movf	??___bmul,w
  4621  0F33  07F4               	addwf	___bmul@product,f
  4622  0F34                     l3332:	
  4623  0F34  1003               	clrc
  4624  0F35  0DF2               	rlf	___bmul@multiplicand,f
  4625  0F36  1003               	clrc
  4626  0F37  0CF5               	rrf	___bmul@multiplier,f
  4627  0F38  0875               	movf	___bmul@multiplier,w
  4628  0F39  1D03               	btfss	3,2
  4629  0F3A  2F2E               	goto	l3328
  4630  0F3B  0874               	movf	___bmul@product,w
  4631  0F3C  0008               	return
  4632  0F3D                     __end_of___bmul:	
  4633                           
  4634                           	psect	text17
  4635  0291                     __ptext17:	
  4636 ;; *************** function _I2C_Read_Buffer *****************
  4637 ;; Defined at:
  4638 ;;		line 120 in file "mcc_generated_files/i2c.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  ADD             1    wreg     unsigned char 
  4641 ;;  buff            1    5[COMMON] PTR unsigned char 
  4642 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  4643 ;;  Length          1    6[COMMON] unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  ADD             1    8[COMMON] unsigned char 
  4646 ;;  Flag            1    9[COMMON] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      unsigned char 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        5 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		_I2C_Receive_Byte
  4665 ;;		_I2C_Send_Byte
  4666 ;;		_I2C_Start
  4667 ;;		_I2C_Stop
  4668 ;; This function is called by:
  4669 ;;		_Bq32k_Rtc_Read_Time
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _I2C_Read_Buffer
  4675  0291                     _I2C_Read_Buffer:	
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4679                           ;I2C_Read_Buffer@ADD stored from wreg
  4680  0291  00F8               	movwf	I2C_Read_Buffer@ADD
  4681                           
  4682                           ;i2c.c: 122: unsigned char Flag=1;
  4683  0292  01F9               	clrf	I2C_Read_Buffer@Flag
  4684  0293  0AF9               	incf	I2C_Read_Buffer@Flag,f
  4685                           
  4686                           ;i2c.c: 124: I2C_Start();
  4687  0294  318F  27E7  3182   	fcall	_I2C_Start
  4688                           
  4689                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  4690  0297  30D0               	movlw	208
  4691  0298  3184  2462  3182   	fcall	_I2C_Send_Byte
  4692  029B  00F7               	movwf	??_I2C_Read_Buffer
  4693  029C  0877               	movf	??_I2C_Read_Buffer,w
  4694  029D  00F9               	movwf	I2C_Read_Buffer@Flag
  4695                           
  4696                           ;i2c.c: 127: if(Flag)
  4697  029E  0879               	movf	I2C_Read_Buffer@Flag,w
  4698  029F  1D03               	btfss	3,2
  4699  02A0  0008               	return
  4700                           
  4701                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  4702                           
  4703                           ;i2c.c: 128: return 0x01;
  4704                           ;	Return value of _I2C_Read_Buffer is never used
  4705  02A1  0878               	movf	I2C_Read_Buffer@ADD,w
  4706  02A2  3184  2462  3182   	fcall	_I2C_Send_Byte
  4707  02A5  00F7               	movwf	??_I2C_Read_Buffer
  4708  02A6  0877               	movf	??_I2C_Read_Buffer,w
  4709  02A7  00F9               	movwf	I2C_Read_Buffer@Flag
  4710                           
  4711                           ;i2c.c: 131: if(Flag)
  4712  02A8  0879               	movf	I2C_Read_Buffer@Flag,w
  4713  02A9  1D03               	btfss	3,2
  4714  02AA  0008               	return
  4715                           
  4716                           ;i2c.c: 134: I2C_Start();
  4717                           
  4718                           ;i2c.c: 132: return 0x01;
  4719                           ;	Return value of _I2C_Read_Buffer is never used
  4720  02AB  318F  27E7  3182   	fcall	_I2C_Start
  4721                           
  4722                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  4723  02AE  30D1               	movlw	209
  4724  02AF  3184  2462  3182   	fcall	_I2C_Send_Byte
  4725  02B2  00F7               	movwf	??_I2C_Read_Buffer
  4726  02B3  0877               	movf	??_I2C_Read_Buffer,w
  4727  02B4  00F9               	movwf	I2C_Read_Buffer@Flag
  4728                           
  4729                           ;i2c.c: 136: if(Flag)
  4730  02B5  0879               	movf	I2C_Read_Buffer@Flag,w
  4731  02B6  1D03               	btfss	3,2
  4732  02B7  0008               	return
  4733  02B8                     l3440:	
  4734  02B8  3002               	movlw	2
  4735  02B9  0276               	subwf	I2C_Read_Buffer@Length,w
  4736  02BA  1C03               	btfss	3,0
  4737  02BB  2ADE               	goto	l3442
  4738                           
  4739                           ;i2c.c: 140: {
  4740                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  4741                           
  4742                           ;i2c.c: 139: while(Length>1)
  4743                           
  4744                           ;i2c.c: 137: return 0x01;
  4745                           ;	Return value of _I2C_Read_Buffer is never used
  4746  02BC  3186  26A2  3182   	fcall	_I2C_Receive_Byte
  4747  02BF  00F7               	movwf	??_I2C_Read_Buffer
  4748  02C0  0875               	movf	I2C_Read_Buffer@buff,w
  4749  02C1  0086               	movwf	6
  4750  02C2  0187               	clrf	7
  4751  02C3  0877               	movf	??_I2C_Read_Buffer,w
  4752  02C4  0081               	movwf	1
  4753                           
  4754                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  4755  02C5  0022               	movlb	2	; select bank2
  4756  02C6  108D               	bcf	13,1	;volatile
  4757                           
  4758                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4759  02C7  300D               	movlw	13
  4760  02C8  00F7               	movwf	??_I2C_Read_Buffer
  4761  02C9                     u3407:	
  4762  02C9  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4763  02CA  2AC9               	goto	u3407
  4764                           
  4765                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  4766  02CB  0022               	movlb	2	; select bank2
  4767  02CC  140D               	bsf	13,0	;volatile
  4768                           
  4769                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4770  02CD  300D               	movlw	13
  4771  02CE  00F7               	movwf	??_I2C_Read_Buffer
  4772  02CF                     u3417:	
  4773  02CF  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4774  02D0  2ACF               	goto	u3417
  4775                           
  4776                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  4777  02D1  0022               	movlb	2	; select bank2
  4778  02D2  100D               	bcf	13,0	;volatile
  4779                           
  4780                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4781  02D3  300D               	movlw	13
  4782  02D4  00F7               	movwf	??_I2C_Read_Buffer
  4783  02D5                     u3427:	
  4784  02D5  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4785  02D6  2AD5               	goto	u3427
  4786                           
  4787                           ;i2c.c: 150: buff++;
  4788  02D7  3001               	movlw	1
  4789  02D8  00F7               	movwf	??_I2C_Read_Buffer
  4790  02D9  0877               	movf	??_I2C_Read_Buffer,w
  4791  02DA  07F5               	addwf	I2C_Read_Buffer@buff,f
  4792                           
  4793                           ;i2c.c: 151: Length--;
  4794  02DB  3001               	movlw	1
  4795  02DC  02F6               	subwf	I2C_Read_Buffer@Length,f
  4796  02DD  2AB8               	goto	l3440
  4797  02DE                     l3442:	
  4798                           
  4799                           ;i2c.c: 152: }
  4800                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  4801  02DE  3186  26A2  3182   	fcall	_I2C_Receive_Byte
  4802  02E1  00F7               	movwf	??_I2C_Read_Buffer
  4803  02E2  0875               	movf	I2C_Read_Buffer@buff,w
  4804  02E3  0086               	movwf	6
  4805  02E4  0187               	clrf	7
  4806  02E5  0877               	movf	??_I2C_Read_Buffer,w
  4807  02E6  0081               	movwf	1
  4808                           
  4809                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  4810  02E7  0022               	movlb	2	; select bank2
  4811  02E8  148D               	bsf	13,1	;volatile
  4812                           
  4813                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4814  02E9  300D               	movlw	13
  4815  02EA  00F7               	movwf	??_I2C_Read_Buffer
  4816  02EB                     u3437:	
  4817  02EB  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4818  02EC  2AEB               	goto	u3437
  4819                           
  4820                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  4821  02ED  0022               	movlb	2	; select bank2
  4822  02EE  140D               	bsf	13,0	;volatile
  4823                           
  4824                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4825  02EF  300D               	movlw	13
  4826  02F0  00F7               	movwf	??_I2C_Read_Buffer
  4827  02F1                     u3447:	
  4828  02F1  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4829  02F2  2AF1               	goto	u3447
  4830                           
  4831                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  4832  02F3  0022               	movlb	2	; select bank2
  4833  02F4  100D               	bcf	13,0	;volatile
  4834                           
  4835                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4836  02F5  300D               	movlw	13
  4837  02F6  00F7               	movwf	??_I2C_Read_Buffer
  4838  02F7                     u3457:	
  4839  02F7  0BF7               	decfsz	??_I2C_Read_Buffer,f
  4840  02F8  2AF7               	goto	u3457
  4841                           
  4842                           ;i2c.c: 162: I2C_Stop();
  4843  02F9  3187  27E7         	fcall	_I2C_Stop
  4844  02FB  0008               	return
  4845  02FC                     __end_of_I2C_Read_Buffer:	
  4846                           ;i2c.c: 164: return 0x00;
  4847                           ;	Return value of _I2C_Read_Buffer is never used
  4848                           
  4849                           
  4850                           	psect	text18
  4851  06A2                     __ptext18:	
  4852 ;; *************** function _I2C_Receive_Byte *****************
  4853 ;; Defined at:
  4854 ;;		line 74 in file "mcc_generated_files/i2c.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  i               1    4[COMMON] unsigned char 
  4859 ;;  Data            1    3[COMMON] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:        3 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    3
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_I2C_Read_Buffer
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _I2C_Receive_Byte
  4885  06A2                     _I2C_Receive_Byte:	
  4886                           
  4887                           ;i2c.c: 76: unsigned char i,Data=0;
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  4891  06A2  01F3               	clrf	I2C_Receive_Byte@Data
  4892                           
  4893                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  4894  06A3  0022               	movlb	2	; select bank2
  4895  06A4  148D               	bsf	13,1	;volatile
  4896                           
  4897                           ;i2c.c: 78: for(i=0;i<8;i++)
  4898  06A5  01F4               	clrf	I2C_Receive_Byte@i
  4899  06A6  3008               	movlw	8
  4900  06A7  0274               	subwf	I2C_Receive_Byte@i,w
  4901  06A8  1803               	btfsc	3,0
  4902  06A9  2ECA               	goto	l3314
  4903                           
  4904                           ;i2c.c: 79: {
  4905                           ;i2c.c: 80: Data <<= 1;
  4906  06AA  1003               	clrc
  4907  06AB                     L1:	
  4908  06AB  0DF3               	rlf	I2C_Receive_Byte@Data,f
  4909                           
  4910                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  4911  06AC  0022               	movlb	2	; select bank2
  4912  06AD  140D               	bsf	13,0	;volatile
  4913                           
  4914                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4915  06AE  300D               	movlw	13
  4916  06AF  00F2               	movwf	??_I2C_Receive_Byte
  4917  06B0                     u3467:	
  4918  06B0  0BF2               	decfsz	??_I2C_Receive_Byte,f
  4919  06B1  2EB0               	goto	u3467
  4920                           
  4921                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  4922  06B2  0021               	movlb	1	; select bank1
  4923  06B3  148D               	bsf	13,1	;volatile
  4924                           
  4925                           ;i2c.c: 84: if(RB1)
  4926  06B4  0020               	movlb	0	; select bank0
  4927  06B5  1C8D               	btfss	13,1	;volatile
  4928  06B6  2EBA               	goto	l735
  4929                           
  4930                           ;i2c.c: 85: {
  4931                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  4932  06B7  0021               	movlb	1	; select bank1
  4933  06B8  108D               	bcf	13,1	;volatile
  4934                           
  4935                           ;i2c.c: 87: Data |= 0x01;
  4936  06B9  1473               	bsf	I2C_Receive_Byte@Data,0
  4937  06BA                     l735:	
  4938                           ;i2c.c: 88: }
  4939                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  4940                           
  4941  06BA  0021               	movlb	1	; select bank1
  4942  06BB  108D               	bcf	13,1	;volatile
  4943                           
  4944                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  4945  06BC  0022               	movlb	2	; select bank2
  4946  06BD  100D               	bcf	13,0	;volatile
  4947                           
  4948                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4949  06BE  300D               	movlw	13
  4950  06BF  00F2               	movwf	??_I2C_Receive_Byte
  4951  06C0                     u3477:	
  4952  06C0  0BF2               	decfsz	??_I2C_Receive_Byte,f
  4953  06C1  2EC0               	goto	u3477
  4954  06C2  3001               	movlw	1
  4955  06C3  00F2               	movwf	??_I2C_Receive_Byte
  4956  06C4  0872               	movf	??_I2C_Receive_Byte,w
  4957  06C5  07F4               	addwf	I2C_Receive_Byte@i,f
  4958  06C6  3008               	movlw	8
  4959  06C7  0274               	subwf	I2C_Receive_Byte@i,w
  4960  06C8  1C03               	skipc
  4961  06C9  2EAB               	goto	L1
  4962  06CA                     l3314:	
  4963                           
  4964                           ;i2c.c: 92: }
  4965                           ;i2c.c: 93: return Data;
  4966  06CA  0873               	movf	I2C_Receive_Byte@Data,w
  4967  06CB  0008               	return
  4968  06CC                     __end_of_I2C_Receive_Byte:	
  4969                           
  4970                           	psect	text19
  4971  077A                     __ptext19:	
  4972 ;; *************** function _temperature_display *****************
  4973 ;; Defined at:
  4974 ;;		line 225 in file "mcc_generated_files/max31856.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;Total ram usage:        1 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    6
  4995 ;; This function calls:
  4996 ;;		_Tc_Display
  4997 ;;		_err_Display
  4998 ;;		_maxim_31856_write_register
  4999 ;;		_maxim_clear_fault_status
  5000 ;;		_tc_temperature_trans
  5001 ;; This function is called by:
  5002 ;;		_temperature_process
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function _temperature_display
  5008  077A                     _temperature_display:	
  5009                           
  5010                           ;max31856.c: 227: if(uch_sr==(uint8_t)0x00)
  5011                           
  5012                           ;incstack = 0
  5013                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5014  077A  0020               	movlb	0	; select bank0
  5015  077B  083E               	movf	_uch_sr,w
  5016  077C  1D03               	btfss	3,2
  5017  077D  2F84               	goto	l3712
  5018                           
  5019                           ;max31856.c: 228: {
  5020                           ;max31856.c: 229: tc_temperature_trans();
  5021  077E  3180  203E  3187   	fcall	_tc_temperature_trans
  5022                           
  5023                           ;max31856.c: 230: Tc_Display();
  5024  0781  3180  20E6         	fcall	_Tc_Display
  5025                           
  5026                           ;max31856.c: 231: }
  5027  0783  0008               	return
  5028  0784                     l3712:	
  5029                           
  5030                           ;max31856.c: 232: else
  5031                           ;max31856.c: 233: {
  5032                           ;max31856.c: 234: err_Display();
  5033  0784  3186  264A  3187   	fcall	_err_Display
  5034                           
  5035                           ;max31856.c: 235: maxim_31856_write_register(0x82, 0xFF);
  5036  0787  30FF               	movlw	255
  5037  0788  0020               	movlb	0	; select bank0
  5038  0789  00D6               	movwf	??_temperature_display
  5039  078A  0856               	movf	??_temperature_display,w
  5040  078B  00F3               	movwf	maxim_31856_write_register@uch_register_value
  5041  078C  3082               	movlw	130
  5042  078D  318E  26EF  3187   	fcall	_maxim_31856_write_register
  5043                           
  5044                           ;max31856.c: 236: maxim_clear_fault_status();
  5045  0790  318F  270B  3187   	fcall	_maxim_clear_fault_status
  5046                           
  5047                           ;max31856.c: 237: maxim_31856_write_register(0x82, 0x00);
  5048  0793  01F3               	clrf	maxim_31856_write_register@uch_register_value
  5049  0794  3082               	movlw	130
  5050  0795  318E  26EF         	fcall	_maxim_31856_write_register
  5051  0797  0008               	return
  5052  0798                     __end_of_temperature_display:	
  5053                           
  5054                           	psect	text20
  5055  003E                     __ptext20:	
  5056 ;; *************** function _tc_temperature_trans *****************
  5057 ;; Defined at:
  5058 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:        8 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    3
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_temperature_display
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           
  5087                           ;psect for function _tc_temperature_trans
  5088  003E                     _tc_temperature_trans:	
  5089                           
  5090                           ;max31856.c: 170: temperature_value = 0;
  5091                           
  5092                           ;incstack = 0
  5093                           ; Regs used in _tc_temperature_trans: [wreg+status,2+status,0]
  5094  003E  3000               	movlw	0
  5095  003F  0020               	movlb	0	; select bank0
  5096  0040  00A7               	movwf	_temperature_value+3
  5097  0041  3000               	movlw	0
  5098  0042  00A6               	movwf	_temperature_value+2
  5099  0043  3000               	movlw	0
  5100  0044  00A5               	movwf	_temperature_value+1
  5101  0045  3000               	movlw	0
  5102  0046  00A4               	movwf	_temperature_value
  5103                           
  5104                           ;max31856.c: 171: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5105  0047  303F               	movlw	63
  5106  0048  057B               	andwf	_uch_ltcbh,w
  5107  0049  00F2               	movwf	??_tc_temperature_trans
  5108  004A  0872               	movf	??_tc_temperature_trans,w
  5109  004B  00F4               	movwf	??_tc_temperature_trans+2
  5110  004C  083C               	movf	_uch_ltcbm,w
  5111  004D  00F3               	movwf	??_tc_temperature_trans+1
  5112  004E  0D74               	rlf	??_tc_temperature_trans+2,w
  5113  004F  0CF4               	rrf	??_tc_temperature_trans+2,f
  5114  0050  0CF3               	rrf	??_tc_temperature_trans+1,f
  5115  0051  0873               	movf	??_tc_temperature_trans+1,w
  5116  0052  00A4               	movwf	_temperature_value
  5117  0053  0874               	movf	??_tc_temperature_trans+2,w
  5118  0054  00A5               	movwf	_temperature_value+1
  5119  0055  0D89               	rlf	9,f
  5120  0056  3B89               	subwfb	9,f
  5121  0057  0989               	comf	9,f
  5122  0058  00A6               	movwf	_temperature_value+2
  5123  0059  00A7               	movwf	_temperature_value+3
  5124                           
  5125                           ;max31856.c: 172: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5126  005A  1BFB               	btfsc	_uch_ltcbh,7
  5127  005B  16A5               	bsf	_temperature_value+1,5
  5128                           
  5129                           ;max31856.c: 173: if((uch_ltcbh&0x80)==0x80)
  5130  005C  1FFB               	btfss	_uch_ltcbh,7
  5131  005D  28B6               	goto	l3550
  5132                           
  5133                           ;max31856.c: 174: {
  5134                           ;max31856.c: 175: temperature_sign = 1;
  5135  005E  01B5               	clrf	_temperature_sign
  5136  005F  0AB5               	incf	_temperature_sign,f
  5137                           
  5138                           ;max31856.c: 176: temperature_value=0x3FFF-temperature_value+1;
  5139  0060  3000               	movlw	0
  5140  0061  00F2               	movwf	??_tc_temperature_trans
  5141  0062  3040               	movlw	64
  5142  0063  00F3               	movwf	??_tc_temperature_trans+1
  5143  0064  3000               	movlw	0
  5144  0065  00F4               	movwf	??_tc_temperature_trans+2
  5145  0066  3000               	movlw	0
  5146  0067  00F5               	movwf	??_tc_temperature_trans+3
  5147  0068  0924               	comf	_temperature_value,w
  5148  0069  00F6               	movwf	??_tc_temperature_trans+4
  5149  006A  0925               	comf	_temperature_value+1,w
  5150  006B  00F7               	movwf	??_tc_temperature_trans+5
  5151  006C  0926               	comf	_temperature_value+2,w
  5152  006D  00F8               	movwf	??_tc_temperature_trans+6
  5153  006E  0927               	comf	_temperature_value+3,w
  5154  006F  00F9               	movwf	??_tc_temperature_trans+7
  5155  0070  0AF6               	incf	??_tc_temperature_trans+4,f
  5156  0071  1903               	skipnz
  5157  0072  0AF7               	incf	??_tc_temperature_trans+5,f
  5158  0073  1903               	skipnz
  5159  0074  0AF8               	incf	??_tc_temperature_trans+6,f
  5160  0075  1903               	skipnz
  5161  0076  0AF9               	incf	??_tc_temperature_trans+7,f
  5162  0077  0876               	movf	??_tc_temperature_trans+4,w
  5163  0078  07F2               	addwf	??_tc_temperature_trans,f
  5164  0079  0877               	movf	??_tc_temperature_trans+5,w
  5165  007A  3DF3               	addwfc	??_tc_temperature_trans+1,f
  5166  007B  0878               	movf	??_tc_temperature_trans+6,w
  5167  007C  3DF4               	addwfc	??_tc_temperature_trans+2,f
  5168  007D  0879               	movf	??_tc_temperature_trans+7,w
  5169  007E  3DF5               	addwfc	??_tc_temperature_trans+3,f
  5170  007F  0875               	movf	??_tc_temperature_trans+3,w
  5171  0080  00A7               	movwf	_temperature_value+3
  5172  0081  0874               	movf	??_tc_temperature_trans+2,w
  5173  0082  00A6               	movwf	_temperature_value+2
  5174  0083  0873               	movf	??_tc_temperature_trans+1,w
  5175  0084  00A5               	movwf	_temperature_value+1
  5176  0085  0872               	movf	??_tc_temperature_trans,w
  5177  0086  00A4               	movwf	_temperature_value
  5178                           
  5179                           ;max31856.c: 178: temperature_int = temperature_value>>3;
  5180  0087  0824               	movf	_temperature_value,w
  5181  0088  00F2               	movwf	??_tc_temperature_trans
  5182  0089  0825               	movf	_temperature_value+1,w
  5183  008A  00F3               	movwf	??_tc_temperature_trans+1
  5184  008B  0826               	movf	_temperature_value+2,w
  5185  008C  00F4               	movwf	??_tc_temperature_trans+2
  5186  008D  0827               	movf	_temperature_value+3,w
  5187  008E  00F5               	movwf	??_tc_temperature_trans+3
  5188  008F  3003               	movlw	3
  5189  0090                     u2795:	
  5190  0090  36F5               	lsrf	??_tc_temperature_trans+3,f
  5191  0091  0CF4               	rrf	??_tc_temperature_trans+2,f
  5192  0092  0CF3               	rrf	??_tc_temperature_trans+1,f
  5193  0093  0CF2               	rrf	??_tc_temperature_trans,f
  5194  0094  0B89               	decfsz	9,f
  5195  0095  2890               	goto	u2795
  5196  0096  0873               	movf	??_tc_temperature_trans+1,w
  5197  0097  00B1               	movwf	_temperature_int+1
  5198  0098  0872               	movf	??_tc_temperature_trans,w
  5199  0099  00B0               	movwf	_temperature_int
  5200                           
  5201                           ;max31856.c: 179: temperature_decimal = temperature_value & 0x07;
  5202  009A  0824               	movf	_temperature_value,w
  5203  009B  3907               	andlw	7
  5204  009C  00F2               	movwf	??_tc_temperature_trans
  5205  009D  0872               	movf	??_tc_temperature_trans,w
  5206  009E  00B4               	movwf	_temperature_decimal
  5207                           
  5208                           ;max31856.c: 180: if(temperature_decimal > 3) temperature_decimal++;
  5209  009F  3004               	movlw	4
  5210  00A0  0234               	subwf	_temperature_decimal,w
  5211  00A1  1C03               	skipc
  5212  00A2  28A7               	goto	l443
  5213  00A3  3001               	movlw	1
  5214  00A4  00F2               	movwf	??_tc_temperature_trans
  5215  00A5  0872               	movf	??_tc_temperature_trans,w
  5216  00A6  07B4               	addwf	_temperature_decimal,f
  5217  00A7                     l443:	
  5218                           
  5219                           ;max31856.c: 181: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5220  00A7  3003               	movlw	3
  5221  00A8  0634               	xorwf	_temperature_decimal,w
  5222  00A9  1903               	btfsc	3,2
  5223  00AA  28AF               	goto	l446
  5224  00AB  3008               	movlw	8
  5225  00AC  0634               	xorwf	_temperature_decimal,w
  5226  00AD  1D03               	btfss	3,2
  5227  00AE  0008               	return
  5228  00AF                     l446:	
  5229  00AF  1C30               	btfss	_temperature_int,0
  5230  00B0  0008               	return
  5231  00B1  3001               	movlw	1
  5232  00B2  00F2               	movwf	??_tc_temperature_trans
  5233  00B3  0872               	movf	??_tc_temperature_trans,w
  5234  00B4  07B4               	addwf	_temperature_decimal,f
  5235                           
  5236                           ;max31856.c: 182: }
  5237  00B5  0008               	return
  5238  00B6                     l3550:	
  5239                           
  5240                           ;max31856.c: 183: else
  5241                           ;max31856.c: 184: {
  5242                           ;max31856.c: 185: temperature_sign = 0;
  5243  00B6  01B5               	clrf	_temperature_sign
  5244                           
  5245                           ;max31856.c: 186: temperature_int = temperature_value>>3;
  5246  00B7  0824               	movf	_temperature_value,w
  5247  00B8  00F2               	movwf	??_tc_temperature_trans
  5248  00B9  0825               	movf	_temperature_value+1,w
  5249  00BA  00F3               	movwf	??_tc_temperature_trans+1
  5250  00BB  0826               	movf	_temperature_value+2,w
  5251  00BC  00F4               	movwf	??_tc_temperature_trans+2
  5252  00BD  0827               	movf	_temperature_value+3,w
  5253  00BE  00F5               	movwf	??_tc_temperature_trans+3
  5254  00BF  3003               	movlw	3
  5255  00C0                     u2845:	
  5256  00C0  36F5               	lsrf	??_tc_temperature_trans+3,f
  5257  00C1  0CF4               	rrf	??_tc_temperature_trans+2,f
  5258  00C2  0CF3               	rrf	??_tc_temperature_trans+1,f
  5259  00C3  0CF2               	rrf	??_tc_temperature_trans,f
  5260  00C4  0B89               	decfsz	9,f
  5261  00C5  28C0               	goto	u2845
  5262  00C6  0873               	movf	??_tc_temperature_trans+1,w
  5263  00C7  00B1               	movwf	_temperature_int+1
  5264  00C8  0872               	movf	??_tc_temperature_trans,w
  5265  00C9  00B0               	movwf	_temperature_int
  5266                           
  5267                           ;max31856.c: 187: temperature_decimal = temperature_value & 0x07;
  5268  00CA  0824               	movf	_temperature_value,w
  5269  00CB  3907               	andlw	7
  5270  00CC  00F2               	movwf	??_tc_temperature_trans
  5271  00CD  0872               	movf	??_tc_temperature_trans,w
  5272  00CE  00B4               	movwf	_temperature_decimal
  5273                           
  5274                           ;max31856.c: 188: if(temperature_decimal > 3) temperature_decimal++;
  5275  00CF  3004               	movlw	4
  5276  00D0  0234               	subwf	_temperature_decimal,w
  5277  00D1  1C03               	skipc
  5278  00D2  28D7               	goto	l448
  5279  00D3  3001               	movlw	1
  5280  00D4  00F2               	movwf	??_tc_temperature_trans
  5281  00D5  0872               	movf	??_tc_temperature_trans,w
  5282  00D6  07B4               	addwf	_temperature_decimal,f
  5283  00D7                     l448:	
  5284                           
  5285                           ;max31856.c: 189: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5286  00D7  3004               	movlw	4
  5287  00D8  0634               	xorwf	_temperature_decimal,w
  5288  00D9  1903               	btfsc	3,2
  5289  00DA  28DF               	goto	l451
  5290  00DB  3008               	movlw	8
  5291  00DC  0634               	xorwf	_temperature_decimal,w
  5292  00DD  1D03               	btfss	3,2
  5293  00DE  0008               	return
  5294  00DF                     l451:	
  5295  00DF  1C30               	btfss	_temperature_int,0
  5296  00E0  0008               	return
  5297  00E1  3001               	movlw	1
  5298  00E2  00F2               	movwf	??_tc_temperature_trans
  5299  00E3  0872               	movf	??_tc_temperature_trans,w
  5300  00E4  07B4               	addwf	_temperature_decimal,f
  5301  00E5  0008               	return
  5302  00E6                     __end_of_tc_temperature_trans:	
  5303                           
  5304                           	psect	text21
  5305  0F0B                     __ptext21:	
  5306 ;; *************** function _maxim_clear_fault_status *****************
  5307 ;; Defined at:
  5308 ;;		line 155 in file "mcc_generated_files/max31856.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0, pclath, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;Total ram usage:        1 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    5
  5329 ;; This function calls:
  5330 ;;		_maxim_31856_read_register
  5331 ;;		_maxim_31856_write_register
  5332 ;; This function is called by:
  5333 ;;		_temperature_display
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _maxim_clear_fault_status
  5339  0F0B                     _maxim_clear_fault_status:	
  5340                           
  5341                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  5342                           
  5343                           ;incstack = 0
  5344                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  5345  0F0B  3000               	movlw	0
  5346  0F0C  318F  271B  318F   	fcall	_maxim_31856_read_register
  5347  0F0F  00F6               	movwf	??_maxim_clear_fault_status
  5348  0F10  0876               	movf	??_maxim_clear_fault_status,w
  5349  0F11  00FA               	movwf	_uch_cr0
  5350                           
  5351                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  5352  0F12  14FA               	bsf	_uch_cr0,1
  5353                           
  5354                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  5355  0F13  087A               	movf	_uch_cr0,w
  5356  0F14  00F6               	movwf	??_maxim_clear_fault_status
  5357  0F15  0876               	movf	??_maxim_clear_fault_status,w
  5358  0F16  00F3               	movwf	maxim_31856_write_register@uch_register_value
  5359  0F17  3080               	movlw	128
  5360  0F18  318E  26EF         	fcall	_maxim_31856_write_register
  5361  0F1A  0008               	return
  5362  0F1B                     __end_of_maxim_clear_fault_status:	
  5363                           
  5364                           	psect	text22
  5365  064A                     __ptext22:	
  5366 ;; *************** function _err_Display *****************
  5367 ;; Defined at:
  5368 ;;		line 151 in file "mcc_generated_files/ht1621.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  num             4    4[BANK0 ] unsigned char [4]
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;Total ram usage:        5 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    5
  5389 ;; This function calls:
  5390 ;;		_WriteAll_1621
  5391 ;; This function is called by:
  5392 ;;		_temperature_display
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _err_Display
  5398  064A                     _err_Display:	
  5399                           
  5400                           ;ht1621.c: 153: unsigned char num[4]={0};
  5401                           
  5402                           ;incstack = 0
  5403                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5404  064A  0021               	movlb	1	; select bank1
  5405  064B  0837               	movf	(err_Display@F2113+3)^(0+128),w
  5406  064C  0020               	movlb	0	; select bank0
  5407  064D  00D2               	movwf	err_Display@num+3
  5408  064E  0021               	movlb	1	; select bank1
  5409  064F  0836               	movf	(err_Display@F2113+2)^(0+128),w
  5410  0650  0020               	movlb	0	; select bank0
  5411  0651  00D1               	movwf	err_Display@num+2
  5412  0652  0021               	movlb	1	; select bank1
  5413  0653  0835               	movf	(err_Display@F2113+1)^(0+128),w
  5414  0654  0020               	movlb	0	; select bank0
  5415  0655  00D0               	movwf	err_Display@num+1
  5416  0656  0021               	movlb	1	; select bank1
  5417  0657  0834               	movf	err_Display@F2113^(0+128),w
  5418  0658  0020               	movlb	0	; select bank0
  5419  0659  00CF               	movwf	err_Display@num
  5420                           
  5421                           ;ht1621.c: 154: num[1] = Dis_TAB[0x10];
  5422  065A  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  5423  065B  0084               	movwf	4
  5424  065C  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  5425  065D  0085               	movwf	5
  5426  065E  0800               	movf	0,w	;code access
  5427  065F  00CE               	movwf	??_err_Display
  5428  0660  084E               	movf	??_err_Display,w
  5429  0661  00D0               	movwf	err_Display@num+1
  5430                           
  5431                           ;ht1621.c: 155: num[2] = Dis_TAB[0x0c];
  5432  0662  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  5433  0663  0084               	movwf	4
  5434  0664  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  5435  0665  0085               	movwf	5
  5436  0666  0800               	movf	0,w	;code access
  5437  0667  00CE               	movwf	??_err_Display
  5438  0668  084E               	movf	??_err_Display,w
  5439  0669  00D1               	movwf	err_Display@num+2
  5440                           
  5441                           ;ht1621.c: 156: WriteAll_1621(0, num, 4);
  5442  066A  304F               	movlw	low err_Display@num
  5443  066B  00F7               	movwf	WriteAll_1621@p
  5444  066C  3000               	movlw	high err_Display@num
  5445  066D  00F8               	movwf	WriteAll_1621@p+1
  5446  066E  3004               	movlw	4
  5447  066F  00CE               	movwf	??_err_Display
  5448  0670  084E               	movf	??_err_Display,w
  5449  0671  00F9               	movwf	WriteAll_1621@cnt
  5450  0672  3000               	movlw	0
  5451  0673  3185  25E2         	fcall	_WriteAll_1621
  5452  0675  0008               	return
  5453  0676                     __end_of_err_Display:	
  5454                           
  5455                           	psect	text23
  5456  00E6                     __ptext23:	
  5457 ;; *************** function _Tc_Display *****************
  5458 ;; Defined at:
  5459 ;;		line 109 in file "mcc_generated_files/ht1621.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  data            2    9[BANK0 ] unsigned int 
  5464 ;;  count           1    8[BANK0 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:        4 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    5
  5481 ;; This function calls:
  5482 ;;		_WriteAll_1621
  5483 ;;		___lwdiv
  5484 ;;		___lwmod
  5485 ;;		_memset
  5486 ;; This function is called by:
  5487 ;;		_temperature_display
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function _Tc_Display
  5493  00E6                     _Tc_Display:	
  5494                           
  5495                           ;ht1621.c: 111: unsigned char count = 0;
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5499  00E6  0020               	movlb	0	; select bank0
  5500  00E7  01D3               	clrf	Tc_Display@count
  5501                           
  5502                           ;ht1621.c: 112: unsigned int data = temperature_int;
  5503  00E8  0831               	movf	_temperature_int+1,w
  5504  00E9  00D5               	movwf	Tc_Display@data+1
  5505  00EA  0830               	movf	_temperature_int,w
  5506  00EB  00D4               	movwf	Tc_Display@data
  5507                           
  5508                           ;ht1621.c: 113: memset(display_buff,0,4);
  5509  00EC  3000               	movlw	0
  5510  00ED  00F2               	movwf	memset@c
  5511  00EE  00F3               	movwf	memset@c+1
  5512  00EF  3004               	movlw	4
  5513  00F0  00F4               	movwf	memset@n
  5514  00F1  3000               	movlw	0
  5515  00F2  00F5               	movwf	memset@n+1
  5516  00F3  3047               	movlw	(low (_display_buff| 0))& (0+255)
  5517  00F4  3187  27B3  3180   	fcall	_memset
  5518  00F7                     l3574:	
  5519                           ;ht1621.c: 114: while(data)
  5520                           
  5521  00F7  0020               	movlb	0	; select bank0
  5522  00F8  0854               	movf	Tc_Display@data,w
  5523  00F9  0455               	iorwf	Tc_Display@data+1,w
  5524  00FA  1903               	btfsc	3,2
  5525  00FB  2967               	goto	l3580
  5526                           
  5527                           ;ht1621.c: 115: {
  5528                           ;ht1621.c: 116: count++;
  5529  00FC  3001               	movlw	1
  5530  00FD  0020               	movlb	0	; select bank0
  5531  00FE  00D2               	movwf	??_Tc_Display
  5532  00FF  0852               	movf	??_Tc_Display,w
  5533  0100  07D3               	addwf	Tc_Display@count,f
  5534                           
  5535                           ;ht1621.c: 117: data /=10;
  5536  0101  300A               	movlw	10
  5537  0102  00CB               	movwf	___lwdiv@divisor
  5538  0103  3000               	movlw	0
  5539  0104  00CC               	movwf	___lwdiv@divisor+1
  5540  0105  0855               	movf	Tc_Display@data+1,w
  5541  0106  00CE               	movwf	___lwdiv@dividend+1
  5542  0107  0854               	movf	Tc_Display@data,w
  5543  0108  00CD               	movwf	___lwdiv@dividend
  5544  0109  3185  25AD  3180   	fcall	___lwdiv
  5545  010C  0020               	movlb	0	; select bank0
  5546  010D  084C               	movf	?___lwdiv+1,w
  5547  010E  00D5               	movwf	Tc_Display@data+1
  5548  010F  084B               	movf	?___lwdiv,w
  5549  0110  00D4               	movwf	Tc_Display@data
  5550  0111  28F7               	goto	l3574
  5551  0112                     l3576:	
  5552                           ;ht1621.c: 120: {
  5553                           ;ht1621.c: 121: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  5554                           
  5555                           ;ht1621.c: 118: }
  5556                           ;ht1621.c: 119: switch(count)
  5557                           
  5558  0112  3064               	movlw	100
  5559  0113  00CB               	movwf	___lwdiv@divisor
  5560  0114  3000               	movlw	0
  5561  0115  00CC               	movwf	___lwdiv@divisor+1
  5562  0116  0831               	movf	_temperature_int+1,w
  5563  0117  00CE               	movwf	___lwdiv@dividend+1
  5564  0118  0830               	movf	_temperature_int,w
  5565  0119  00CD               	movwf	___lwdiv@dividend
  5566  011A  3185  25AD  3180   	fcall	___lwdiv
  5567  011D  0020               	movlb	0	; select bank0
  5568  011E  084C               	movf	?___lwdiv+1,w
  5569  011F  0085               	movwf	5
  5570  0120  084B               	movf	?___lwdiv,w
  5571  0121  0084               	movwf	4
  5572  0122  3000               	movlw	low (_Dis_TAB| (0+32768))
  5573  0123  0784               	addwf	4,f
  5574  0124  3090               	movlw	high (_Dis_TAB| (0+32768))
  5575  0125  3D85               	addwfc	5,f
  5576  0126  0800               	movf	0,w	;code access
  5577  0127  00D2               	movwf	??_Tc_Display
  5578  0128  0852               	movf	??_Tc_Display,w
  5579  0129  00C7               	movwf	_display_buff
  5580  012A                     l588:	
  5581                           ;ht1621.c: 122: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  5582                           
  5583  012A  300A               	movlw	10
  5584  012B  00CB               	movwf	___lwdiv@divisor
  5585  012C  3000               	movlw	0
  5586  012D  00CC               	movwf	___lwdiv@divisor+1
  5587  012E  0831               	movf	_temperature_int+1,w
  5588  012F  00F5               	movwf	___lwmod@dividend+1
  5589  0130  0830               	movf	_temperature_int,w
  5590  0131  00F4               	movwf	___lwmod@dividend
  5591  0132  3064               	movlw	100
  5592  0133  00F2               	movwf	___lwmod@divisor
  5593  0134  3000               	movlw	0
  5594  0135  00F3               	movwf	___lwmod@divisor+1
  5595  0136  3186  2676  3180   	fcall	___lwmod
  5596  0139  0873               	movf	?___lwmod+1,w
  5597  013A  0020               	movlb	0	; select bank0
  5598  013B  00CE               	movwf	___lwdiv@dividend+1
  5599  013C  0872               	movf	?___lwmod,w
  5600  013D  00CD               	movwf	___lwdiv@dividend
  5601  013E  3185  25AD  3180   	fcall	___lwdiv
  5602  0141  0020               	movlb	0	; select bank0
  5603  0142  084C               	movf	?___lwdiv+1,w
  5604  0143  0085               	movwf	5
  5605  0144  084B               	movf	?___lwdiv,w
  5606  0145  0084               	movwf	4
  5607  0146  3000               	movlw	low (_Dis_TAB| (0+32768))
  5608  0147  0784               	addwf	4,f
  5609  0148  3090               	movlw	high (_Dis_TAB| (0+32768))
  5610  0149  3D85               	addwfc	5,f
  5611  014A  0800               	movf	0,w	;code access
  5612  014B  00D2               	movwf	??_Tc_Display
  5613  014C  0852               	movf	??_Tc_Display,w
  5614  014D  00C8               	movwf	_display_buff+1
  5615  014E                     l589:	
  5616                           ;ht1621.c: 123: case 1:display_buff[2] = Dis_TAB[temperature_int%10];
  5617                           
  5618  014E  300A               	movlw	10
  5619  014F  00F2               	movwf	___lwmod@divisor
  5620  0150  3000               	movlw	0
  5621  0151  00F3               	movwf	___lwmod@divisor+1
  5622  0152  0831               	movf	_temperature_int+1,w
  5623  0153  00F5               	movwf	___lwmod@dividend+1
  5624  0154  0830               	movf	_temperature_int,w
  5625  0155  00F4               	movwf	___lwmod@dividend
  5626  0156  3186  2676  3180   	fcall	___lwmod
  5627  0159  0873               	movf	?___lwmod+1,w
  5628  015A  0085               	movwf	5
  5629  015B  0872               	movf	?___lwmod,w
  5630  015C  0084               	movwf	4
  5631  015D  3000               	movlw	low (_Dis_TAB| (0+32768))
  5632  015E  0784               	addwf	4,f
  5633  015F  3090               	movlw	high (_Dis_TAB| (0+32768))
  5634  0160  3D85               	addwfc	5,f
  5635  0161  0800               	movf	0,w	;code access
  5636  0162  0020               	movlb	0	; select bank0
  5637  0163  00D2               	movwf	??_Tc_Display
  5638  0164  0852               	movf	??_Tc_Display,w
  5639  0165  00C9               	movwf	_display_buff+2
  5640                           
  5641                           ;ht1621.c: 125: }
  5642                           
  5643                           ;ht1621.c: 124: default:break;
  5644  0166  2972               	goto	l3582
  5645  0167                     l3580:	
  5646  0167  0853               	movf	Tc_Display@count,w
  5647                           
  5648                           ; Switch size 1, requested type "space"
  5649                           ; Number of cases is 3, Range of values is 1 to 3
  5650                           ; switch strategies available:
  5651                           ; Name         Instructions Cycles
  5652                           ; simple_byte           10     6 (average)
  5653                           ; direct_byte           15     9 (fixed)
  5654                           ; jumptable            263     9 (fixed)
  5655                           ;	Chosen strategy is simple_byte
  5656  0168  3A01               	xorlw	1	; case 1
  5657  0169  1903               	skipnz
  5658  016A  294E               	goto	l589
  5659  016B  3A03               	xorlw	3	; case 2
  5660  016C  1903               	skipnz
  5661  016D  292A               	goto	l588
  5662  016E  3A01               	xorlw	1	; case 3
  5663  016F  1903               	skipnz
  5664  0170  2912               	goto	l3576
  5665  0171  2972               	goto	l3582
  5666  0172                     l3582:	
  5667                           
  5668                           ;ht1621.c: 126: if(temperature_sign == 1) display_buff[0]|=0x08;
  5669  0172  0335               	decf	_temperature_sign,w
  5670  0173  1903               	btfsc	3,2
  5671  0174  15C7               	bsf	_display_buff,3
  5672                           
  5673                           ;ht1621.c: 127: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  5674  0175  0834               	movf	_temperature_decimal,w
  5675  0176  3E00               	addlw	low (_Dis_TAB| (0+32768))
  5676  0177  0084               	movwf	4
  5677  0178  3090               	movlw	high (_Dis_TAB| (0+32768))
  5678  0179  1803               	skipnc
  5679  017A  3E01               	addlw	1
  5680  017B  0085               	movwf	5
  5681  017C  0800               	movf	0,w	;code access
  5682  017D  3808               	iorlw	8
  5683  017E  00D2               	movwf	??_Tc_Display
  5684  017F  0852               	movf	??_Tc_Display,w
  5685  0180  00CA               	movwf	_display_buff+3
  5686                           
  5687                           ;ht1621.c: 128: WriteAll_1621(0,display_buff,4);
  5688  0181  3047               	movlw	low _display_buff
  5689  0182  00F7               	movwf	WriteAll_1621@p
  5690  0183  3000               	movlw	high _display_buff
  5691  0184  00F8               	movwf	WriteAll_1621@p+1
  5692  0185  3004               	movlw	4
  5693  0186  00D2               	movwf	??_Tc_Display
  5694  0187  0852               	movf	??_Tc_Display,w
  5695  0188  00F9               	movwf	WriteAll_1621@cnt
  5696  0189  3000               	movlw	0
  5697  018A  3185  25E2         	fcall	_WriteAll_1621
  5698  018C  0008               	return
  5699  018D                     __end_of_Tc_Display:	
  5700                           
  5701                           	psect	text24
  5702  07B3                     __ptext24:	
  5703 ;; *************** function _memset *****************
  5704 ;; Defined at:
  5705 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  p1              1    wreg     PTR void 
  5708 ;;		 -> display_buff(4), 
  5709 ;;  c               2    2[COMMON] int 
  5710 ;;  n               2    4[COMMON] unsigned int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  p1              1    7[COMMON] PTR void 
  5713 ;;		 -> display_buff(4), 
  5714 ;;  p               1    8[COMMON] PTR unsigned char 
  5715 ;;		 -> display_buff(4), 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      PTR void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;Total ram usage:        7 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    3
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_Tc_Display
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function _memset
  5741  07B3                     _memset:	
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5745                           ;memset@p1 stored from wreg
  5746  07B3  00F7               	movwf	memset@p1
  5747  07B4  0877               	movf	memset@p1,w
  5748  07B5  00F6               	movwf	??_memset
  5749  07B6  0876               	movf	??_memset,w
  5750  07B7  00F8               	movwf	memset@p
  5751  07B8                     l3400:	
  5752  07B8  3001               	movlw	1
  5753  07B9  02F4               	subwf	memset@n,f
  5754  07BA  3000               	movlw	0
  5755  07BB  3BF5               	subwfb	memset@n+1,f
  5756  07BC  0A74               	incf	memset@n,w
  5757  07BD  1903               	btfsc	3,2
  5758  07BE  0A75               	incf	memset@n+1,w
  5759  07BF  1903               	btfsc	3,2
  5760  07C0  0008               	return
  5761  07C1  0872               	movf	memset@c,w
  5762  07C2  00F6               	movwf	??_memset
  5763  07C3  0878               	movf	memset@p,w
  5764  07C4  0086               	movwf	6
  5765  07C5  0187               	clrf	7
  5766  07C6  0876               	movf	??_memset,w
  5767  07C7  0081               	movwf	1
  5768  07C8  3001               	movlw	1
  5769  07C9  00F6               	movwf	??_memset
  5770  07CA  0876               	movf	??_memset,w
  5771  07CB  07F8               	addwf	memset@p,f
  5772  07CC  2FB8               	goto	l3400
  5773  07CD                     __end_of_memset:	
  5774                           ;	Return value of _memset is never used
  5775                           
  5776                           
  5777                           	psect	text25
  5778  0676                     __ptext25:	
  5779 ;; *************** function ___lwmod *****************
  5780 ;; Defined at:
  5781 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  divisor         2    2[COMMON] unsigned int 
  5784 ;;  dividend        2    4[COMMON] unsigned int 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  counter         1    7[COMMON] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  2    2[COMMON] unsigned int 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;Total ram usage:        6 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    3
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_Tc_Display
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function ___lwmod
  5812  0676                     ___lwmod:	
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5816  0676  0872               	movf	___lwmod@divisor,w
  5817  0677  0473               	iorwf	___lwmod@divisor+1,w
  5818  0678  1903               	btfsc	3,2
  5819  0679  2E9D               	goto	l3508
  5820  067A  01F7               	clrf	___lwmod@counter
  5821  067B  0AF7               	incf	___lwmod@counter,f
  5822  067C                     l3498:	
  5823  067C  1BF3               	btfsc	___lwmod@divisor+1,7
  5824  067D  2E88               	goto	l3500
  5825  067E  3001               	movlw	1
  5826  067F                     u2725:	
  5827  067F  35F2               	lslf	___lwmod@divisor,f
  5828  0680  0DF3               	rlf	___lwmod@divisor+1,f
  5829  0681  0B89               	decfsz	9,f
  5830  0682  2E7F               	goto	u2725
  5831  0683  3001               	movlw	1
  5832  0684  00F6               	movwf	??___lwmod
  5833  0685  0876               	movf	??___lwmod,w
  5834  0686  07F7               	addwf	___lwmod@counter,f
  5835  0687  2E7C               	goto	l3498
  5836  0688                     l3500:	
  5837  0688  0873               	movf	___lwmod@divisor+1,w
  5838  0689  0275               	subwf	___lwmod@dividend+1,w
  5839  068A  1D03               	skipz
  5840  068B  2E8E               	goto	u2745
  5841  068C  0872               	movf	___lwmod@divisor,w
  5842  068D  0274               	subwf	___lwmod@dividend,w
  5843  068E                     u2745:	
  5844  068E  1C03               	skipc
  5845  068F  2E94               	goto	l3504
  5846  0690  0872               	movf	___lwmod@divisor,w
  5847  0691  02F4               	subwf	___lwmod@dividend,f
  5848  0692  0873               	movf	___lwmod@divisor+1,w
  5849  0693  3BF5               	subwfb	___lwmod@dividend+1,f
  5850  0694                     l3504:	
  5851  0694  3001               	movlw	1
  5852  0695                     u2755:	
  5853  0695  36F3               	lsrf	___lwmod@divisor+1,f
  5854  0696  0CF2               	rrf	___lwmod@divisor,f
  5855  0697  0B89               	decfsz	9,f
  5856  0698  2E95               	goto	u2755
  5857  0699  3001               	movlw	1
  5858  069A  02F7               	subwf	___lwmod@counter,f
  5859  069B  1D03               	btfss	3,2
  5860  069C  2E88               	goto	l3500
  5861  069D                     l3508:	
  5862  069D  0875               	movf	___lwmod@dividend+1,w
  5863  069E  00F3               	movwf	?___lwmod+1
  5864  069F  0874               	movf	___lwmod@dividend,w
  5865  06A0  00F2               	movwf	?___lwmod
  5866  06A1  0008               	return
  5867  06A2                     __end_of___lwmod:	
  5868                           
  5869                           	psect	text26
  5870  05AD                     __ptext26:	
  5871 ;; *************** function ___lwdiv *****************
  5872 ;; Defined at:
  5873 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  divisor         2    0[BANK0 ] unsigned int 
  5876 ;;  dividend        2    2[BANK0 ] unsigned int 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  quotient        2    5[BANK0 ] unsigned int 
  5879 ;;  counter         1    4[BANK0 ] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  2    0[BANK0 ] unsigned int 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;Total ram usage:        8 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    3
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_Tc_Display
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function ___lwdiv
  5905  05AD                     ___lwdiv:	
  5906                           
  5907                           ;incstack = 0
  5908                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5909  05AD  0020               	movlb	0	; select bank0
  5910  05AE  01D0               	clrf	___lwdiv@quotient
  5911  05AF  01D1               	clrf	___lwdiv@quotient+1
  5912  05B0  084B               	movf	___lwdiv@divisor,w
  5913  05B1  044C               	iorwf	___lwdiv@divisor+1,w
  5914  05B2  1903               	btfsc	3,2
  5915  05B3  2DDD               	goto	l3486
  5916  05B4  01CF               	clrf	___lwdiv@counter
  5917  05B5  0ACF               	incf	___lwdiv@counter,f
  5918  05B6                     l3474:	
  5919  05B6  1BCC               	btfsc	___lwdiv@divisor+1,7
  5920  05B7  2DC2               	goto	l3476
  5921  05B8  3001               	movlw	1
  5922  05B9                     u2655:	
  5923  05B9  35CB               	lslf	___lwdiv@divisor,f
  5924  05BA  0DCC               	rlf	___lwdiv@divisor+1,f
  5925  05BB  0B89               	decfsz	9,f
  5926  05BC  2DB9               	goto	u2655
  5927  05BD  3001               	movlw	1
  5928  05BE  00F8               	movwf	??___lwdiv
  5929  05BF  0878               	movf	??___lwdiv,w
  5930  05C0  07CF               	addwf	___lwdiv@counter,f
  5931  05C1  2DB6               	goto	l3474
  5932  05C2                     l3476:	
  5933  05C2  3001               	movlw	1
  5934  05C3                     u2675:	
  5935  05C3  35D0               	lslf	___lwdiv@quotient,f
  5936  05C4  0DD1               	rlf	___lwdiv@quotient+1,f
  5937  05C5  0B89               	decfsz	9,f
  5938  05C6  2DC3               	goto	u2675
  5939  05C7  084C               	movf	___lwdiv@divisor+1,w
  5940  05C8  024E               	subwf	___lwdiv@dividend+1,w
  5941  05C9  1D03               	skipz
  5942  05CA  2DCD               	goto	u2685
  5943  05CB  084B               	movf	___lwdiv@divisor,w
  5944  05CC  024D               	subwf	___lwdiv@dividend,w
  5945  05CD                     u2685:	
  5946  05CD  1C03               	skipc
  5947  05CE  2DD4               	goto	l3482
  5948  05CF  084B               	movf	___lwdiv@divisor,w
  5949  05D0  02CD               	subwf	___lwdiv@dividend,f
  5950  05D1  084C               	movf	___lwdiv@divisor+1,w
  5951  05D2  3BCE               	subwfb	___lwdiv@dividend+1,f
  5952  05D3  1450               	bsf	___lwdiv@quotient,0
  5953  05D4                     l3482:	
  5954  05D4  3001               	movlw	1
  5955  05D5                     u2695:	
  5956  05D5  36CC               	lsrf	___lwdiv@divisor+1,f
  5957  05D6  0CCB               	rrf	___lwdiv@divisor,f
  5958  05D7  0B89               	decfsz	9,f
  5959  05D8  2DD5               	goto	u2695
  5960  05D9  3001               	movlw	1
  5961  05DA  02CF               	subwf	___lwdiv@counter,f
  5962  05DB  1D03               	btfss	3,2
  5963  05DC  2DC2               	goto	l3476
  5964  05DD                     l3486:	
  5965  05DD  0851               	movf	___lwdiv@quotient+1,w
  5966  05DE  00CC               	movwf	?___lwdiv+1
  5967  05DF  0850               	movf	___lwdiv@quotient,w
  5968  05E0  00CB               	movwf	?___lwdiv
  5969  05E1  0008               	return
  5970  05E2                     __end_of___lwdiv:	
  5971                           
  5972                           	psect	text27
  5973  0575                     __ptext27:	
  5974 ;; *************** function _one_temperature_trans *****************
  5975 ;; Defined at:
  5976 ;;		line 200 in file "mcc_generated_files/max31856.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;		None
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;Total ram usage:        2 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    6
  5997 ;; This function calls:
  5998 ;;		_maxim_31856_read_nregisters
  5999 ;;		_maxim_start_conversion
  6000 ;; This function is called by:
  6001 ;;		_temperature_process
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           
  6006                           ;psect for function _one_temperature_trans
  6007  0575                     _one_temperature_trans:	
  6008                           
  6009                           ;max31856.c: 202: maxim_start_conversion((uint8_t) 0x40);
  6010                           
  6011                           ;incstack = 0
  6012                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6013  0575  3040               	movlw	64
  6014  0576  318F  27CF  3185   	fcall	_maxim_start_conversion
  6015                           
  6016                           ;max31856.c: 203: MAX31856Sec = 0;
  6017  0579  0020               	movlb	0	; select bank0
  6018  057A  01B3               	clrf	_MAX31856Sec
  6019  057B                     l455:	
  6020                           ;max31856.c: 204: while( !(RB3 == 0 || MAX31856Sec > 2) ) ;
  6021                           
  6022  057B  1D8D               	btfss	13,3	;volatile
  6023  057C  2D81               	goto	l3688
  6024  057D  3003               	movlw	3
  6025  057E  0233               	subwf	_MAX31856Sec,w
  6026  057F  1C03               	skipc
  6027  0580  2D7B               	goto	l455
  6028  0581                     l3688:	
  6029                           
  6030                           ;max31856.c: 205: if( MAX31856Sec > 2)
  6031  0581  3003               	movlw	3
  6032  0582  0233               	subwf	_MAX31856Sec,w
  6033  0583  1C03               	skipc
  6034  0584  2D88               	goto	l3692
  6035                           
  6036                           ;max31856.c: 206: {
  6037                           ;max31856.c: 207: uch_sr = 0x01;
  6038  0585  01BE               	clrf	_uch_sr
  6039  0586  0ABE               	incf	_uch_sr,f
  6040                           
  6041                           ;max31856.c: 208: }
  6042  0587  0008               	return
  6043  0588                     l3692:	
  6044                           
  6045                           ;max31856.c: 209: else
  6046                           ;max31856.c: 210: {
  6047                           ;max31856.c: 211: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  6048  0588  303F               	movlw	(low (_uch_reg| 0))& (0+255)
  6049  0589  00D0               	movwf	??_one_temperature_trans
  6050  058A  0850               	movf	??_one_temperature_trans,w
  6051  058B  00CB               	movwf	maxim_31856_read_nregisters@uch_buff
  6052  058C  3006               	movlw	6
  6053  058D  00D1               	movwf	??_one_temperature_trans+1
  6054  058E  0851               	movf	??_one_temperature_trans+1,w
  6055  058F  00CC               	movwf	maxim_31856_read_nregisters@uch_nBytes
  6056  0590  300A               	movlw	10
  6057  0591  318F  27B7         	fcall	_maxim_31856_read_nregisters
  6058                           
  6059                           ;max31856.c: 212: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  6060  0593  0020               	movlb	0	; select bank0
  6061  0594  083F               	movf	_uch_reg,w
  6062  0595  00D0               	movwf	??_one_temperature_trans
  6063  0596  0850               	movf	??_one_temperature_trans,w
  6064  0597  00B8               	movwf	_uch_cjth
  6065  0598  0840               	movf	_uch_reg+1,w
  6066  0599  00D0               	movwf	??_one_temperature_trans
  6067  059A  0850               	movf	??_one_temperature_trans,w
  6068  059B  00B9               	movwf	_uch_cjtl
  6069                           
  6070                           ;max31856.c: 213: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  6071  059C  0841               	movf	_uch_reg+2,w
  6072  059D  00D0               	movwf	??_one_temperature_trans
  6073  059E  0850               	movf	??_one_temperature_trans,w
  6074  059F  00FB               	movwf	_uch_ltcbh
  6075  05A0  0842               	movf	_uch_reg+3,w
  6076  05A1  00D0               	movwf	??_one_temperature_trans
  6077  05A2  0850               	movf	??_one_temperature_trans,w
  6078  05A3  00BC               	movwf	_uch_ltcbm
  6079  05A4  0843               	movf	_uch_reg+4,w
  6080  05A5  00D0               	movwf	??_one_temperature_trans
  6081  05A6  0850               	movf	??_one_temperature_trans,w
  6082  05A7  00BB               	movwf	_uch_ltcbl
  6083                           
  6084                           ;max31856.c: 214: uch_sr=uch_reg[5];
  6085  05A8  0844               	movf	_uch_reg+5,w
  6086  05A9  00D0               	movwf	??_one_temperature_trans
  6087  05AA  0850               	movf	??_one_temperature_trans,w
  6088  05AB  00BE               	movwf	_uch_sr
  6089  05AC  0008               	return
  6090  05AD                     __end_of_one_temperature_trans:	
  6091                           
  6092                           	psect	text28
  6093  0FCF                     __ptext28:	
  6094 ;; *************** function _maxim_start_conversion *****************
  6095 ;; Defined at:
  6096 ;;		line 114 in file "mcc_generated_files/max31856.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  uch_conversi    1    wreg     unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  uch_conversi    1    7[COMMON] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, pclath, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;Total ram usage:        2 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    5
  6117 ;; This function calls:
  6118 ;;		_maxim_31856_read_register
  6119 ;;		_maxim_31856_write_register
  6120 ;; This function is called by:
  6121 ;;		_one_temperature_trans
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _maxim_start_conversion
  6127  0FCF                     _maxim_start_conversion:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  6131                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  6132  0FCF  00F7               	movwf	maxim_start_conversion@uch_conversion_mode
  6133                           
  6134                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  6135  0FD0  3000               	movlw	0
  6136  0FD1  318F  271B  318F   	fcall	_maxim_31856_read_register
  6137  0FD4  00F6               	movwf	??_maxim_start_conversion
  6138  0FD5  0876               	movf	??_maxim_start_conversion,w
  6139  0FD6  00FA               	movwf	_uch_cr0
  6140                           
  6141                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  6142  0FD7  303F               	movlw	63
  6143  0FD8  00F6               	movwf	??_maxim_start_conversion
  6144  0FD9  0876               	movf	??_maxim_start_conversion,w
  6145  0FDA  05FA               	andwf	_uch_cr0,f
  6146                           
  6147                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  6148  0FDB  0877               	movf	maxim_start_conversion@uch_conversion_mode,w
  6149  0FDC  00F6               	movwf	??_maxim_start_conversion
  6150  0FDD  0876               	movf	??_maxim_start_conversion,w
  6151  0FDE  04FA               	iorwf	_uch_cr0,f
  6152                           
  6153                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  6154  0FDF  087A               	movf	_uch_cr0,w
  6155  0FE0  00F6               	movwf	??_maxim_start_conversion
  6156  0FE1  0876               	movf	??_maxim_start_conversion,w
  6157  0FE2  00F3               	movwf	maxim_31856_write_register@uch_register_value
  6158  0FE3  3080               	movlw	128
  6159  0FE4  318E  26EF         	fcall	_maxim_31856_write_register
  6160  0FE6  0008               	return
  6161  0FE7                     __end_of_maxim_start_conversion:	
  6162                           
  6163                           	psect	text29
  6164  0EEF                     __ptext29:	
  6165 ;; *************** function _maxim_31856_write_register *****************
  6166 ;; Defined at:
  6167 ;;		line 19 in file "mcc_generated_files/max31856.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  uch_register    1    wreg     unsigned char 
  6170 ;;  uch_register    1    3[COMMON] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  uch_register    1    4[COMMON] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;Total ram usage:        2 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    4
  6189 ;; This function calls:
  6190 ;;		_SPI_Exchange8bit
  6191 ;; This function is called by:
  6192 ;;		_maxim_31856_init
  6193 ;;		_maxim_start_conversion
  6194 ;;		_maxim_clear_fault_status
  6195 ;;		_temperature_display
  6196 ;;		_maxim_stop_conversion
  6197 ;;		_maxim_disable_oc_fault_detection
  6198 ;;		_maxim_set_oc_fault_detection
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _maxim_31856_write_register
  6204  0EEF                     _maxim_31856_write_register:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  6208                           ;maxim_31856_write_register@uch_register_address stored from wreg
  6209  0EEF  00F4               	movwf	maxim_31856_write_register@uch_register_address
  6210                           
  6211                           ;max31856.c: 21: do { LATA5 = 0; } while(0);
  6212  0EF0  0022               	movlb	2	; select bank2
  6213  0EF1  128C               	bcf	12,5	;volatile
  6214                           
  6215                           ;max31856.c: 22: SPI_Exchange8bit(uch_register_address);
  6216  0EF2  0874               	movf	maxim_31856_write_register@uch_register_address,w
  6217  0EF3  318E  26DA  318E   	fcall	_SPI_Exchange8bit
  6218                           
  6219                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_value);
  6220  0EF6  0873               	movf	maxim_31856_write_register@uch_register_value,w
  6221  0EF7  318E  26DA         	fcall	_SPI_Exchange8bit
  6222                           
  6223                           ;max31856.c: 24: do { LATA5 = 1; } while(0);
  6224  0EF9  0022               	movlb	2	; select bank2
  6225  0EFA  168C               	bsf	12,5	;volatile
  6226  0EFB  0008               	return
  6227  0EFC                     __end_of_maxim_31856_write_register:	
  6228                           
  6229                           	psect	text30
  6230  0F1B                     __ptext30:	
  6231 ;; *************** function _maxim_31856_read_register *****************
  6232 ;; Defined at:
  6233 ;;		line 33 in file "mcc_generated_files/max31856.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  uch_register    1    wreg     unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  uch_register    1    4[COMMON] unsigned char 
  6238 ;;  uch_register    1    5[COMMON] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        3 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    4
  6255 ;; This function calls:
  6256 ;;		_SPI_Exchange8bit
  6257 ;; This function is called by:
  6258 ;;		_maxim_start_conversion
  6259 ;;		_maxim_clear_fault_status
  6260 ;;		_maxim_stop_conversion
  6261 ;;		_maxim_disable_oc_fault_detection
  6262 ;;		_maxim_set_oc_fault_detection
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function _maxim_31856_read_register
  6268  0F1B                     _maxim_31856_read_register:	
  6269                           
  6270                           ;incstack = 0
  6271                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  6272                           ;maxim_31856_read_register@uch_register_address stored from wreg
  6273  0F1B  00F4               	movwf	maxim_31856_read_register@uch_register_address
  6274                           
  6275                           ;max31856.c: 35: uint8_t uch_register_data;
  6276                           ;max31856.c: 36: do { LATA5 = 0; } while(0);
  6277  0F1C  0022               	movlb	2	; select bank2
  6278  0F1D  128C               	bcf	12,5	;volatile
  6279                           
  6280                           ;max31856.c: 37: SPI_Exchange8bit(uch_register_address);
  6281  0F1E  0874               	movf	maxim_31856_read_register@uch_register_address,w
  6282  0F1F  318E  26DA  318F   	fcall	_SPI_Exchange8bit
  6283                           
  6284                           ;max31856.c: 38: uch_register_data=SPI_Exchange8bit(0xff);
  6285  0F22  30FF               	movlw	255
  6286  0F23  318E  26DA         	fcall	_SPI_Exchange8bit
  6287  0F25  00F3               	movwf	??_maxim_31856_read_register
  6288  0F26  0873               	movf	??_maxim_31856_read_register,w
  6289  0F27  00F5               	movwf	maxim_31856_read_register@uch_register_data
  6290                           
  6291                           ;max31856.c: 39: do { LATA5 = 1; } while(0);
  6292  0F28  0022               	movlb	2	; select bank2
  6293  0F29  168C               	bsf	12,5	;volatile
  6294                           
  6295                           ;max31856.c: 40: return (uch_register_data);
  6296  0F2A  0875               	movf	maxim_31856_read_register@uch_register_data,w
  6297  0F2B  0008               	return
  6298  0F2C                     __end_of_maxim_31856_read_register:	
  6299                           
  6300                           	psect	text31
  6301  0FB7                     __ptext31:	
  6302 ;; *************** function _maxim_31856_read_nregisters *****************
  6303 ;; Defined at:
  6304 ;;		line 49 in file "mcc_generated_files/max31856.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  uch_register    1    wreg     unsigned char 
  6307 ;;  uch_buff        1    0[BANK0 ] PTR unsigned char 
  6308 ;;		 -> uch_reg(8), 
  6309 ;;  uch_nBytes      1    1[BANK0 ] unsigned char 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  uch_register    1    4[BANK0 ] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;Total ram usage:        5 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    5
  6328 ;; This function calls:
  6329 ;;		_SPI_Exchange8bit
  6330 ;;		_SPI_Exchange8bitBuffer
  6331 ;; This function is called by:
  6332 ;;		_one_temperature_trans
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function _maxim_31856_read_nregisters
  6338  0FB7                     _maxim_31856_read_nregisters:	
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6342                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  6343  0FB7  0020               	movlb	0	; select bank0
  6344  0FB8  00CF               	movwf	maxim_31856_read_nregisters@uch_register_address
  6345                           
  6346                           ;max31856.c: 51: do { LATA5 = 0; } while(0);
  6347  0FB9  0022               	movlb	2	; select bank2
  6348  0FBA  128C               	bcf	12,5	;volatile
  6349                           
  6350                           ;max31856.c: 52: SPI_Exchange8bit(uch_register_address);
  6351  0FBB  0020               	movlb	0	; select bank0
  6352  0FBC  084F               	movf	maxim_31856_read_nregisters@uch_register_address,w
  6353  0FBD  318E  26DA  318F   	fcall	_SPI_Exchange8bit
  6354                           
  6355                           ;max31856.c: 53: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  6356  0FC0  0020               	movlb	0	; select bank0
  6357  0FC1  084C               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  6358  0FC2  00CD               	movwf	??_maxim_31856_read_nregisters
  6359  0FC3  084D               	movf	??_maxim_31856_read_nregisters,w
  6360  0FC4  00F3               	movwf	SPI_Exchange8bitBuffer@bufLen
  6361  0FC5  084B               	movf	maxim_31856_read_nregisters@uch_buff,w
  6362  0FC6  00CE               	movwf	??_maxim_31856_read_nregisters+1
  6363  0FC7  084E               	movf	??_maxim_31856_read_nregisters+1,w
  6364  0FC8  00F4               	movwf	SPI_Exchange8bitBuffer@dataOut
  6365  0FC9  3000               	movlw	0
  6366  0FCA  3184  2416         	fcall	_SPI_Exchange8bitBuffer
  6367                           
  6368                           ;max31856.c: 54: do { LATA5 = 1; } while(0);
  6369  0FCC  0022               	movlb	2	; select bank2
  6370  0FCD  168C               	bsf	12,5	;volatile
  6371  0FCE  0008               	return
  6372  0FCF                     __end_of_maxim_31856_read_nregisters:	
  6373                           
  6374                           	psect	text32
  6375  0416                     __ptext32:	
  6376 ;; *************** function _SPI_Exchange8bitBuffer *****************
  6377 ;; Defined at:
  6378 ;;		line 89 in file "mcc_generated_files/spi.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  dataIn          1    wreg     PTR unsigned char 
  6381 ;;		 -> NULL(0), 
  6382 ;;  bufLen          1    3[COMMON] unsigned char 
  6383 ;;  dataOut         1    4[COMMON] PTR unsigned char 
  6384 ;;		 -> uch_reg(8), 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  dataIn          1    8[COMMON] PTR unsigned char 
  6387 ;;		 -> NULL(0), 
  6388 ;;  bytesWritten    1    9[COMMON] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      unsigned char 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;Total ram usage:        7 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    4
  6405 ;; This function calls:
  6406 ;;		_SPI_Exchange8bit
  6407 ;; This function is called by:
  6408 ;;		_maxim_31856_read_nregisters
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function _SPI_Exchange8bitBuffer
  6414  0416                     _SPI_Exchange8bitBuffer:	
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6418                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  6419  0416  00F8               	movwf	SPI_Exchange8bitBuffer@dataIn
  6420                           
  6421                           ;spi.c: 90: uint8_t bytesWritten = 0;
  6422  0417  01F9               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  6423                           
  6424                           ;spi.c: 92: if (bufLen != 0) {
  6425  0418  0873               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6426  0419  1903               	btfsc	3,2
  6427  041A  0008               	return
  6428                           
  6429                           ;spi.c: 93: if (dataIn != (0)) {
  6430  041B  0878               	movf	SPI_Exchange8bitBuffer@dataIn,w
  6431  041C  1D03               	btfss	3,2
  6432  041D  2C44               	goto	l3356
  6433  041E  2C49               	goto	l3358
  6434  041F                     l3348:	
  6435                           ;spi.c: 94: while (bytesWritten < bufLen) {
  6436                           
  6437                           
  6438                           ;spi.c: 95: if (dataOut == (0)) {
  6439  041F  0874               	movf	SPI_Exchange8bitBuffer@dataOut,w
  6440  0420  1D03               	btfss	3,2
  6441  0421  2C2D               	goto	l3352
  6442                           
  6443                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  6444  0422  0879               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6445  0423  0778               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6446  0424  00F5               	movwf	??_SPI_Exchange8bitBuffer
  6447  0425  0875               	movf	??_SPI_Exchange8bitBuffer,w
  6448  0426  0086               	movwf	6
  6449  0427  0187               	clrf	7
  6450  0428  0801               	movf	1,w
  6451  0429  318E  26DA  3184   	fcall	_SPI_Exchange8bit
  6452                           
  6453                           ;spi.c: 97: } else {
  6454  042C  2C40               	goto	l3354
  6455  042D                     l3352:	
  6456                           
  6457                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  6458  042D  0879               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6459  042E  0778               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6460  042F  00F5               	movwf	??_SPI_Exchange8bitBuffer
  6461  0430  0875               	movf	??_SPI_Exchange8bitBuffer,w
  6462  0431  0086               	movwf	6
  6463  0432  0187               	clrf	7
  6464  0433  0801               	movf	1,w
  6465  0434  318E  26DA  3184   	fcall	_SPI_Exchange8bit
  6466  0437  00F6               	movwf	??_SPI_Exchange8bitBuffer+1
  6467  0438  0879               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6468  0439  0774               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  6469  043A  00F7               	movwf	??_SPI_Exchange8bitBuffer+2
  6470  043B  0877               	movf	??_SPI_Exchange8bitBuffer+2,w
  6471  043C  0086               	movwf	6
  6472  043D  0187               	clrf	7
  6473  043E  0876               	movf	??_SPI_Exchange8bitBuffer+1,w
  6474  043F  0081               	movwf	1
  6475  0440                     l3354:	
  6476                           
  6477                           ;spi.c: 99: }
  6478                           ;spi.c: 101: bytesWritten++;
  6479  0440  3001               	movlw	1
  6480  0441  00F5               	movwf	??_SPI_Exchange8bitBuffer
  6481  0442  0875               	movf	??_SPI_Exchange8bitBuffer,w
  6482  0443  07F9               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  6483  0444                     l3356:	
  6484  0444  0873               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6485  0445  0279               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  6486  0446  1803               	btfsc	3,0
  6487  0447  0008               	return
  6488  0448  2C1F               	goto	l3348
  6489  0449                     l3358:	
  6490                           ;spi.c: 102: }
  6491                           ;spi.c: 103: } else {
  6492                           
  6493                           
  6494                           ;spi.c: 104: if (dataOut != (0)) {
  6495  0449  0874               	movf	SPI_Exchange8bitBuffer@dataOut,w
  6496  044A  1903               	btfsc	3,2
  6497  044B  0008               	return
  6498  044C                     l3366:	
  6499  044C  0873               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6500  044D  0279               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  6501  044E  1803               	btfsc	3,0
  6502  044F  0008               	return
  6503                           
  6504                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  6505                           
  6506                           ;spi.c: 105: while (bytesWritten < bufLen) {
  6507  0450  3000               	movlw	0
  6508  0451  318E  26DA  3184   	fcall	_SPI_Exchange8bit
  6509  0454  00F5               	movwf	??_SPI_Exchange8bitBuffer
  6510  0455  0879               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6511  0456  0774               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  6512  0457  00F6               	movwf	??_SPI_Exchange8bitBuffer+1
  6513  0458  0876               	movf	??_SPI_Exchange8bitBuffer+1,w
  6514  0459  0086               	movwf	6
  6515  045A  0187               	clrf	7
  6516  045B  0875               	movf	??_SPI_Exchange8bitBuffer,w
  6517  045C  0081               	movwf	1
  6518                           
  6519                           ;spi.c: 108: bytesWritten++;
  6520  045D  3001               	movlw	1
  6521  045E  00F5               	movwf	??_SPI_Exchange8bitBuffer
  6522  045F  0875               	movf	??_SPI_Exchange8bitBuffer,w
  6523  0460  07F9               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  6524  0461  2C4C               	goto	l3366
  6525  0462                     __end_of_SPI_Exchange8bitBuffer:	
  6526                           ;spi.c: 109: }
  6527                           ;spi.c: 110: }
  6528                           ;spi.c: 111: }
  6529                           ;spi.c: 112: }
  6530                           ;spi.c: 114: return bytesWritten;
  6531                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  6532                           
  6533                           
  6534                           	psect	text33
  6535  0EDA                     __ptext33:	
  6536 ;; *************** function _SPI_Exchange8bit *****************
  6537 ;; Defined at:
  6538 ;;		line 77 in file "mcc_generated_files/spi.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  data            1    wreg     unsigned char 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  data            1    2[COMMON] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      unsigned char 
  6545 ;; Registers used:
  6546 ;;		wreg
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;Total ram usage:        1 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    3
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_SPI_Exchange8bitBuffer
  6563 ;;		_maxim_31856_write_register
  6564 ;;		_maxim_31856_read_register
  6565 ;;		_maxim_31856_read_nregisters
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function _SPI_Exchange8bit
  6571  0EDA                     _SPI_Exchange8bit:	
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _SPI_Exchange8bit: [wreg]
  6575                           ;SPI_Exchange8bit@data stored from wreg
  6576  0EDA  00F2               	movwf	SPI_Exchange8bit@data
  6577                           
  6578                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  6579  0EDB  0024               	movlb	4	; select bank4
  6580  0EDC  1395               	bcf	21,7	;volatile
  6581                           
  6582                           ;spi.c: 81: SSPBUF = data;
  6583  0EDD  0872               	movf	SPI_Exchange8bit@data,w
  6584  0EDE  0091               	movwf	17	;volatile
  6585  0EDF                     l69:	
  6586                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  6587                           
  6588  0EDF  1C14               	btfss	20,0	;volatile
  6589  0EE0  2EDF               	goto	l69
  6590                           
  6591                           ;spi.c: 84: }
  6592                           ;spi.c: 86: return (SSPBUF);
  6593  0EE1  0811               	movf	17,w	;volatile
  6594  0EE2  0008               	return
  6595  0EE3                     __end_of_SPI_Exchange8bit:	
  6596                           
  6597                           	psect	text34
  6598  06CC                     __ptext34:	
  6599 ;; *************** function _Two_Display *****************
  6600 ;; Defined at:
  6601 ;;		line 137 in file "mcc_generated_files/ht1621.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  number          1    wreg     unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  number          1    8[BANK0 ] unsigned char 
  6606 ;;  num             4    4[BANK0 ] unsigned char [4]
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;Total ram usage:        6 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    5
  6623 ;; This function calls:
  6624 ;;		_WriteAll_1621
  6625 ;; This function is called by:
  6626 ;;		_temperature_process
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function _Two_Display
  6632  06CC                     _Two_Display:	
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6636                           ;Two_Display@number stored from wreg
  6637  06CC  0020               	movlb	0	; select bank0
  6638  06CD  00D3               	movwf	Two_Display@number
  6639                           
  6640                           ;ht1621.c: 139: unsigned char num[4]={0};
  6641  06CE  0823               	movf	Two_Display@F2110+3,w
  6642  06CF  00D2               	movwf	Two_Display@num+3
  6643  06D0  0822               	movf	Two_Display@F2110+2,w
  6644  06D1  00D1               	movwf	Two_Display@num+2
  6645  06D2  0821               	movf	Two_Display@F2110+1,w
  6646  06D3  00D0               	movwf	Two_Display@num+1
  6647  06D4  0820               	movf	Two_Display@F2110,w
  6648  06D5  00CF               	movwf	Two_Display@num
  6649                           
  6650                           ;ht1621.c: 140: num[1] = Dis_TAB[0];
  6651  06D6  3000               	movlw	low (_Dis_TAB| (0+32768))
  6652  06D7  0084               	movwf	4
  6653  06D8  3090               	movlw	high (_Dis_TAB| (0+32768))
  6654  06D9  0085               	movwf	5
  6655  06DA  0800               	movf	0,w	;code access
  6656  06DB  00CE               	movwf	??_Two_Display
  6657  06DC  084E               	movf	??_Two_Display,w
  6658  06DD  00D0               	movwf	Two_Display@num+1
  6659                           
  6660                           ;ht1621.c: 141: num[2] = Dis_TAB[number];
  6661  06DE  0853               	movf	Two_Display@number,w
  6662  06DF  3E00               	addlw	low (_Dis_TAB| (0+32768))
  6663  06E0  0084               	movwf	4
  6664  06E1  3090               	movlw	high (_Dis_TAB| (0+32768))
  6665  06E2  1803               	skipnc
  6666  06E3  3E01               	addlw	1
  6667  06E4  0085               	movwf	5
  6668  06E5  0800               	movf	0,w	;code access
  6669  06E6  00CE               	movwf	??_Two_Display
  6670  06E7  084E               	movf	??_Two_Display,w
  6671  06E8  00D1               	movwf	Two_Display@num+2
  6672                           
  6673                           ;ht1621.c: 142: WriteAll_1621(0, num, 4);
  6674  06E9  304F               	movlw	low Two_Display@num
  6675  06EA  00F7               	movwf	WriteAll_1621@p
  6676  06EB  3000               	movlw	high Two_Display@num
  6677  06EC  00F8               	movwf	WriteAll_1621@p+1
  6678  06ED  3004               	movlw	4
  6679  06EE  00CE               	movwf	??_Two_Display
  6680  06EF  084E               	movf	??_Two_Display,w
  6681  06F0  00F9               	movwf	WriteAll_1621@cnt
  6682  06F1  3000               	movlw	0
  6683  06F2  3185  25E2         	fcall	_WriteAll_1621
  6684  06F4  0008               	return
  6685  06F5                     __end_of_Two_Display:	
  6686                           
  6687                           	psect	text35
  6688  05E2                     __ptext35:	
  6689 ;; *************** function _WriteAll_1621 *****************
  6690 ;; Defined at:
  6691 ;;		line 90 in file "mcc_generated_files/ht1621.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  addr            1    wreg     unsigned char 
  6694 ;;  p               2    7[COMMON] PTR unsigned char 
  6695 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  6696 ;;		 -> Dis_TAB(21), 
  6697 ;;  cnt             1    9[COMMON] unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  addr            1    1[BANK0 ] unsigned char 
  6700 ;;  i               1    2[BANK0 ] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;Total ram usage:        6 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    4
  6717 ;; This function calls:
  6718 ;;		_SendBit_1621
  6719 ;;		_SendDataBit_1621
  6720 ;; This function is called by:
  6721 ;;		_main
  6722 ;;		_Tc_Display
  6723 ;;		_Two_Display
  6724 ;;		_err_Display
  6725 ;;		_time_Display
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function _WriteAll_1621
  6731  05E2                     _WriteAll_1621:	
  6732                           
  6733                           ;incstack = 0
  6734                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6735                           ;WriteAll_1621@addr stored from wreg
  6736  05E2  0020               	movlb	0	; select bank0
  6737  05E3  00CC               	movwf	WriteAll_1621@addr
  6738                           
  6739                           ;ht1621.c: 92: unsigned char i;
  6740                           ;ht1621.c: 93: do { LATC0 = 0; } while(0);
  6741  05E4  0022               	movlb	2	; select bank2
  6742  05E5  100E               	bcf	14,0	;volatile
  6743                           
  6744                           ;ht1621.c: 94: SendBit_1621(0xa0,3);
  6745  05E6  3003               	movlw	3
  6746  05E7  0020               	movlb	0	; select bank0
  6747  05E8  00CB               	movwf	??_WriteAll_1621
  6748  05E9  084B               	movf	??_WriteAll_1621,w
  6749  05EA  00F2               	movwf	SendBit_1621@cnt
  6750  05EB  30A0               	movlw	160
  6751  05EC  3187  275A  3185   	fcall	_SendBit_1621
  6752                           
  6753                           ;ht1621.c: 95: SendBit_1621(addr,6);
  6754  05EF  3006               	movlw	6
  6755  05F0  0020               	movlb	0	; select bank0
  6756  05F1  00CB               	movwf	??_WriteAll_1621
  6757  05F2  084B               	movf	??_WriteAll_1621,w
  6758  05F3  00F2               	movwf	SendBit_1621@cnt
  6759  05F4  084C               	movf	WriteAll_1621@addr,w
  6760  05F5  3187  275A  3185   	fcall	_SendBit_1621
  6761                           
  6762                           ;ht1621.c: 96: for(i =0; i <cnt; i ++,p++)
  6763  05F8  0020               	movlb	0	; select bank0
  6764  05F9  01CD               	clrf	WriteAll_1621@i
  6765  05FA                     l3378:	
  6766  05FA  0879               	movf	WriteAll_1621@cnt,w
  6767  05FB  024D               	subwf	WriteAll_1621@i,w
  6768  05FC  1803               	btfsc	3,0
  6769  05FD  2E14               	goto	l578
  6770                           
  6771                           ;ht1621.c: 97: {
  6772                           ;ht1621.c: 98: SendDataBit_1621(*p,8);
  6773  05FE  3008               	movlw	8
  6774  05FF  00CB               	movwf	??_WriteAll_1621
  6775  0600  084B               	movf	??_WriteAll_1621,w
  6776  0601  00F2               	movwf	SendDataBit_1621@cnt
  6777  0602  0877               	movf	WriteAll_1621@p,w
  6778  0603  0084               	movwf	4
  6779  0604  0878               	movf	WriteAll_1621@p+1,w
  6780  0605  0085               	movwf	5
  6781  0606  0800               	movf	0,w	;code access
  6782  0607  3187  273A  3185   	fcall	_SendDataBit_1621
  6783  060A  3001               	movlw	1
  6784  060B  0020               	movlb	0	; select bank0
  6785  060C  00CB               	movwf	??_WriteAll_1621
  6786  060D  084B               	movf	??_WriteAll_1621,w
  6787  060E  07CD               	addwf	WriteAll_1621@i,f
  6788  060F  3001               	movlw	1
  6789  0610  07F7               	addwf	WriteAll_1621@p,f
  6790  0611  3000               	movlw	0
  6791  0612  3DF8               	addwfc	WriteAll_1621@p+1,f
  6792  0613  2DFA               	goto	l3378
  6793  0614                     l578:	
  6794                           ;ht1621.c: 99: }
  6795                           ;ht1621.c: 100: do { LATC0 = 1; } while(0);
  6796                           
  6797  0614  0022               	movlb	2	; select bank2
  6798  0615  140E               	bsf	14,0	;volatile
  6799  0616  0008               	return
  6800  0617                     __end_of_WriteAll_1621:	
  6801                           
  6802                           	psect	text36
  6803  073A                     __ptext36:	
  6804 ;; *************** function _SendDataBit_1621 *****************
  6805 ;; Defined at:
  6806 ;;		line 41 in file "mcc_generated_files/ht1621.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  data            1    wreg     unsigned char 
  6809 ;;  cnt             1    2[COMMON] unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  data            1    5[COMMON] unsigned char 
  6812 ;;  i               1    6[COMMON] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;Total ram usage:        5 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    3
  6829 ;; This function calls:
  6830 ;;		Nothing
  6831 ;; This function is called by:
  6832 ;;		_WriteAll_1621
  6833 ;;		_Write_1621
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function _SendDataBit_1621
  6839  073A                     _SendDataBit_1621:	
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  6843                           ;SendDataBit_1621@data stored from wreg
  6844  073A  00F5               	movwf	SendDataBit_1621@data
  6845                           
  6846                           ;ht1621.c: 43: unsigned char i;
  6847                           ;ht1621.c: 44: for(i =0; i <cnt; i ++)
  6848  073B  01F6               	clrf	SendDataBit_1621@i
  6849  073C                     l3248:	
  6850  073C  0872               	movf	SendDataBit_1621@cnt,w
  6851  073D  0276               	subwf	SendDataBit_1621@i,w
  6852  073E  1803               	btfsc	3,0
  6853  073F  0008               	return
  6854                           
  6855                           ;ht1621.c: 45: {
  6856                           ;ht1621.c: 46: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  6857  0740  1875               	btfsc	SendDataBit_1621@data,0
  6858  0741  2F45               	goto	l549
  6859  0742  0022               	movlb	2	; select bank2
  6860  0743  110E               	bcf	14,2	;volatile
  6861  0744  2F47               	goto	l551
  6862  0745                     l549:	
  6863                           ;ht1621.c: 47: else do { LATC2 = 1; } while(0);
  6864                           
  6865  0745  0022               	movlb	2	; select bank2
  6866  0746  150E               	bsf	14,2	;volatile
  6867  0747                     l551:	
  6868                           ;ht1621.c: 48: do { LATC1 = 0; } while(0);
  6869                           
  6870  0747  108E               	bcf	14,1	;volatile
  6871                           
  6872                           ;ht1621.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
  6873  0748  3006               	movlw	6
  6874  0749  00F4               	movwf	??_SendDataBit_1621+1
  6875  074A  3030               	movlw	48
  6876  074B  00F3               	movwf	??_SendDataBit_1621
  6877  074C                     u3487:	
  6878  074C  0BF3               	decfsz	??_SendDataBit_1621,f
  6879  074D  2F4C               	goto	u3487
  6880  074E  0BF4               	decfsz	??_SendDataBit_1621+1,f
  6881  074F  2F4C               	goto	u3487
  6882  0750  0000               	nop
  6883                           
  6884                           ;ht1621.c: 50: do { LATC1 = 1; } while(0);
  6885  0751  0022               	movlb	2	; select bank2
  6886  0752  148E               	bsf	14,1	;volatile
  6887                           
  6888                           ;ht1621.c: 51: data>>=1;
  6889  0753  1003               	clrc
  6890  0754  0CF5               	rrf	SendDataBit_1621@data,f
  6891  0755  3001               	movlw	1
  6892  0756  00F3               	movwf	??_SendDataBit_1621
  6893  0757  0873               	movf	??_SendDataBit_1621,w
  6894  0758  07F6               	addwf	SendDataBit_1621@i,f
  6895  0759  2F3C               	goto	l3248
  6896  075A                     __end_of_SendDataBit_1621:	
  6897                           
  6898                           	psect	text37
  6899  0F8B                     __ptext37:	
  6900 ;; *************** function _SendCmd_1621 *****************
  6901 ;; Defined at:
  6902 ;;		line 61 in file "mcc_generated_files/ht1621.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  command         1    wreg     unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  command         1    8[COMMON] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, pclath, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;Total ram usage:        2 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    4
  6923 ;; This function calls:
  6924 ;;		_SendBit_1621
  6925 ;; This function is called by:
  6926 ;;		_main
  6927 ;;		_Key_Process
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _SendCmd_1621
  6933  0F8B                     _SendCmd_1621:	
  6934                           
  6935                           ;incstack = 0
  6936                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  6937                           ;SendCmd_1621@command stored from wreg
  6938  0F8B  00F8               	movwf	SendCmd_1621@command
  6939                           
  6940                           ;ht1621.c: 63: do { LATC0 = 0; } while(0);
  6941  0F8C  0022               	movlb	2	; select bank2
  6942  0F8D  100E               	bcf	14,0	;volatile
  6943                           
  6944                           ;ht1621.c: 64: SendBit_1621(0x80,4);
  6945  0F8E  3004               	movlw	4
  6946  0F8F  00F7               	movwf	??_SendCmd_1621
  6947  0F90  0877               	movf	??_SendCmd_1621,w
  6948  0F91  00F2               	movwf	SendBit_1621@cnt
  6949  0F92  3080               	movlw	128
  6950  0F93  3187  275A  318F   	fcall	_SendBit_1621
  6951                           
  6952                           ;ht1621.c: 65: SendBit_1621(command,8);
  6953  0F96  3008               	movlw	8
  6954  0F97  00F7               	movwf	??_SendCmd_1621
  6955  0F98  0877               	movf	??_SendCmd_1621,w
  6956  0F99  00F2               	movwf	SendBit_1621@cnt
  6957  0F9A  0878               	movf	SendCmd_1621@command,w
  6958  0F9B  3187  275A         	fcall	_SendBit_1621
  6959                           
  6960                           ;ht1621.c: 66: do { LATC0 = 1; } while(0);
  6961  0F9D  0022               	movlb	2	; select bank2
  6962  0F9E  140E               	bsf	14,0	;volatile
  6963  0F9F  0008               	return
  6964  0FA0                     __end_of_SendCmd_1621:	
  6965                           
  6966                           	psect	text38
  6967  075A                     __ptext38:	
  6968 ;; *************** function _SendBit_1621 *****************
  6969 ;; Defined at:
  6970 ;;		line 21 in file "mcc_generated_files/ht1621.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  data            1    wreg     unsigned char 
  6973 ;;  cnt             1    2[COMMON] unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  data            1    5[COMMON] unsigned char 
  6976 ;;  i               1    6[COMMON] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      void 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;Total ram usage:        5 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    3
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_SendCmd_1621
  6997 ;;		_WriteAll_1621
  6998 ;;		_Write_1621
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _SendBit_1621
  7004  075A                     _SendBit_1621:	
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
  7008                           ;SendBit_1621@data stored from wreg
  7009  075A  00F5               	movwf	SendBit_1621@data
  7010                           
  7011                           ;ht1621.c: 23: unsigned char i;
  7012                           ;ht1621.c: 24: for(i =0; i <cnt; i ++)
  7013  075B  01F6               	clrf	SendBit_1621@i
  7014  075C                     l3236:	
  7015  075C  0872               	movf	SendBit_1621@cnt,w
  7016  075D  0276               	subwf	SendBit_1621@i,w
  7017  075E  1803               	btfsc	3,0
  7018  075F  0008               	return
  7019                           
  7020                           ;ht1621.c: 25: {
  7021                           ;ht1621.c: 26: if((data&0x80)==0) do { LATC2 = 0; } while(0);
  7022  0760  1BF5               	btfsc	SendBit_1621@data,7
  7023  0761  2F65               	goto	l533
  7024  0762  0022               	movlb	2	; select bank2
  7025  0763  110E               	bcf	14,2	;volatile
  7026  0764  2F67               	goto	l535
  7027  0765                     l533:	
  7028                           ;ht1621.c: 27: else do { LATC2 = 1; } while(0);
  7029                           
  7030  0765  0022               	movlb	2	; select bank2
  7031  0766  150E               	bsf	14,2	;volatile
  7032  0767                     l535:	
  7033                           ;ht1621.c: 28: do { LATC1 = 0; } while(0);
  7034                           
  7035  0767  108E               	bcf	14,1	;volatile
  7036                           
  7037                           ;ht1621.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  7038  0768  3006               	movlw	6
  7039  0769  00F4               	movwf	??_SendBit_1621+1
  7040  076A  3030               	movlw	48
  7041  076B  00F3               	movwf	??_SendBit_1621
  7042  076C                     u3497:	
  7043  076C  0BF3               	decfsz	??_SendBit_1621,f
  7044  076D  2F6C               	goto	u3497
  7045  076E  0BF4               	decfsz	??_SendBit_1621+1,f
  7046  076F  2F6C               	goto	u3497
  7047  0770  0000               	nop
  7048                           
  7049                           ;ht1621.c: 30: do { LATC1 = 1; } while(0);
  7050  0771  0022               	movlb	2	; select bank2
  7051  0772  148E               	bsf	14,1	;volatile
  7052                           
  7053                           ;ht1621.c: 31: data<<=1;
  7054  0773  1003               	clrc
  7055  0774  0DF5               	rlf	SendBit_1621@data,f
  7056  0775  3001               	movlw	1
  7057  0776  00F3               	movwf	??_SendBit_1621
  7058  0777  0873               	movf	??_SendBit_1621,w
  7059  0778  07F6               	addwf	SendBit_1621@i,f
  7060  0779  2F5C               	goto	l3236
  7061  077A                     __end_of_SendBit_1621:	
  7062                           
  7063                           	psect	text39
  7064  06F5                     __ptext39:	
  7065 ;; *************** function _Key_Scan *****************
  7066 ;; Defined at:
  7067 ;;		line 17 in file "mcc_generated_files/key.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  Key_val         1    4[COMMON] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      unsigned char 
  7074 ;; Registers used:
  7075 ;;		wreg
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;Total ram usage:        3 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    3
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_Key_Process
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function _Key_Scan
  7097  06F5                     _Key_Scan:	
  7098                           
  7099                           ;key.c: 19: unsigned char Key_val=0xff;
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in _Key_Scan: [wreg]
  7103  06F5  30FF               	movlw	255
  7104  06F6  00F2               	movwf	??_Key_Scan
  7105  06F7  0872               	movf	??_Key_Scan,w
  7106  06F8  00F4               	movwf	Key_Scan@Key_val
  7107                           
  7108                           ;key.c: 20: if( RA7 == 0 || RB5 == 0 )
  7109  06F9  0020               	movlb	0	; select bank0
  7110  06FA  1F8C               	btfss	12,7	;volatile
  7111  06FB  2EFE               	goto	l3856
  7112  06FC  1A8D               	btfsc	13,5	;volatile
  7113  06FD  2F16               	goto	l803
  7114  06FE                     l3856:	
  7115                           
  7116                           ;key.c: 21: {
  7117                           ;key.c: 22: _delay((unsigned long)((10)*(16000000/4000.0)));
  7118  06FE  3034               	movlw	52
  7119  06FF  00F3               	movwf	??_Key_Scan+1
  7120  0700  30F1               	movlw	241
  7121  0701  00F2               	movwf	??_Key_Scan
  7122  0702                     u3507:	
  7123  0702  0BF2               	decfsz	??_Key_Scan,f
  7124  0703  2F02               	goto	u3507
  7125  0704  0BF3               	decfsz	??_Key_Scan+1,f
  7126  0705  2F02               	goto	u3507
  7127  0706  3200               	nop2
  7128                           
  7129                           ;key.c: 23: if( RA7 == 0 || RB5 == 0)
  7130  0707  0020               	movlb	0	; select bank0
  7131  0708  1F8C               	btfss	12,7	;volatile
  7132  0709  2F0C               	goto	l808
  7133  070A  1A8D               	btfsc	13,5	;volatile
  7134  070B  2F16               	goto	l803
  7135  070C                     l808:	
  7136                           
  7137                           ;key.c: 24: {
  7138                           ;key.c: 25: if(RB5 == 0 ) Key_val = 0x01;
  7139  070C  1A8D               	btfsc	13,5	;volatile
  7140  070D  2F10               	goto	l809
  7141  070E  01F4               	clrf	Key_Scan@Key_val
  7142  070F  0AF4               	incf	Key_Scan@Key_val,f
  7143  0710                     l809:	
  7144                           
  7145                           ;key.c: 26: if(RA7 == 0 ) Key_val = 0x02;
  7146  0710  1B8C               	btfsc	12,7	;volatile
  7147  0711  2F16               	goto	l803
  7148  0712  3002               	movlw	2
  7149  0713  00F2               	movwf	??_Key_Scan
  7150  0714  0872               	movf	??_Key_Scan,w
  7151  0715  00F4               	movwf	Key_Scan@Key_val
  7152  0716                     l803:	
  7153                           
  7154                           ;key.c: 27: }
  7155                           ;key.c: 28: }
  7156                           ;key.c: 29: return Key_val;
  7157  0716  0874               	movf	Key_Scan@Key_val,w
  7158  0717  0008               	return
  7159  0718                     __end_of_Key_Scan:	
  7160                           
  7161                           	psect	text40
  7162  0798                     __ptext40:	
  7163 ;; *************** function _Bq32k_Time_Init *****************
  7164 ;; Defined at:
  7165 ;;		line 17 in file "mcc_generated_files/bq32k.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7170 ;;  time            7    0        struct bq32k_regs
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;Total ram usage:       12 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    5
  7187 ;; This function calls:
  7188 ;;		_I2C_Send_Buffer
  7189 ;; This function is called by:
  7190 ;;		_main
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _Bq32k_Time_Init
  7196  0798                     _Bq32k_Time_Init:	
  7197                           
  7198                           ;bq32k.c: 19: bq32k_t time;
  7199                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x40,0x14,0x02,0x04,0x07,0x16 };
  7200                           
  7201                           ;incstack = 0
  7202                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7203  0798  30A0               	movlw	low Bq32k_Time_Init@F2005
  7204  0799  0086               	movwf	6
  7205  079A  3000               	movlw	high Bq32k_Time_Init@F2005
  7206  079B  0087               	movwf	7
  7207  079C  3050               	movlw	low Bq32k_Time_Init@temp
  7208  079D  0084               	movwf	4
  7209  079E  3000               	movlw	high Bq32k_Time_Init@temp
  7210  079F  0085               	movwf	5
  7211  07A0  300A               	movlw	10
  7212  07A1  0020               	movlb	0	; select bank0
  7213  07A2  00CE               	movwf	??_Bq32k_Time_Init
  7214  07A3                     u3250:	
  7215  07A3  0016               	moviw fsr1++
  7216  07A4  001A               	movwi fsr0++
  7217  07A5  0BCE               	decfsz	??_Bq32k_Time_Init,f
  7218  07A6  2FA3               	goto	u3250
  7219                           
  7220                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
  7221  07A7  3050               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
  7222  07A8  00CE               	movwf	??_Bq32k_Time_Init
  7223  07A9  084E               	movf	??_Bq32k_Time_Init,w
  7224  07AA  00F5               	movwf	I2C_Send_Buffer@buff
  7225  07AB  3007               	movlw	7
  7226  07AC  00CF               	movwf	??_Bq32k_Time_Init+1
  7227  07AD  084F               	movf	??_Bq32k_Time_Init+1,w
  7228  07AE  00F6               	movwf	I2C_Send_Buffer@Length
  7229  07AF  3000               	movlw	0
  7230  07B0  3185  253A         	fcall	_I2C_Send_Buffer
  7231  07B2  0008               	return
  7232  07B3                     __end_of_Bq32k_Time_Init:	
  7233                           
  7234                           	psect	text41
  7235  053A                     __ptext41:	
  7236 ;; *************** function _I2C_Send_Buffer *****************
  7237 ;; Defined at:
  7238 ;;		line 173 in file "mcc_generated_files/i2c.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  ADD             1    wreg     unsigned char 
  7241 ;;  buff            1    5[COMMON] PTR unsigned char 
  7242 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
  7243 ;;  Length          1    6[COMMON] unsigned char 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  ADD             1    0[BANK0 ] unsigned char 
  7246 ;;  Flag            1    2[BANK0 ] unsigned char 
  7247 ;;  i               1    1[BANK0 ] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      unsigned char 
  7250 ;; Registers used:
  7251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7261 ;;Total ram usage:        7 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    4
  7264 ;; This function calls:
  7265 ;;		_I2C_Send_Byte
  7266 ;;		_I2C_Start
  7267 ;;		_I2C_Stop
  7268 ;; This function is called by:
  7269 ;;		_Bq32k_Time_Init
  7270 ;;		_Bq32k_Rtc_Write_Time
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _I2C_Send_Buffer
  7276  053A                     _I2C_Send_Buffer:	
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7280                           ;I2C_Send_Buffer@ADD stored from wreg
  7281  053A  0020               	movlb	0	; select bank0
  7282  053B  00CB               	movwf	I2C_Send_Buffer@ADD
  7283                           
  7284                           ;i2c.c: 175: unsigned char Flag=1;
  7285  053C  01CD               	clrf	I2C_Send_Buffer@Flag
  7286  053D  0ACD               	incf	I2C_Send_Buffer@Flag,f
  7287                           
  7288                           ;i2c.c: 176: unsigned char i;
  7289                           ;i2c.c: 178: I2C_Start();
  7290  053E  318F  27E7  3185   	fcall	_I2C_Start
  7291                           
  7292                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
  7293  0541  30D0               	movlw	208
  7294  0542  3184  2462  3185   	fcall	_I2C_Send_Byte
  7295  0545  00F7               	movwf	??_I2C_Send_Buffer
  7296  0546  0877               	movf	??_I2C_Send_Buffer,w
  7297  0547  0020               	movlb	0	; select bank0
  7298  0548  00CD               	movwf	I2C_Send_Buffer@Flag
  7299                           
  7300                           ;i2c.c: 181: if(Flag)
  7301  0549  084D               	movf	I2C_Send_Buffer@Flag,w
  7302  054A  1D03               	btfss	3,2
  7303  054B  0008               	return
  7304                           
  7305                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
  7306                           
  7307                           ;i2c.c: 182: return 0x01;
  7308                           ;	Return value of _I2C_Send_Buffer is never used
  7309  054C  084B               	movf	I2C_Send_Buffer@ADD,w
  7310  054D  3184  2462  3185   	fcall	_I2C_Send_Byte
  7311  0550  00F7               	movwf	??_I2C_Send_Buffer
  7312  0551  0877               	movf	??_I2C_Send_Buffer,w
  7313  0552  0020               	movlb	0	; select bank0
  7314  0553  00CD               	movwf	I2C_Send_Buffer@Flag
  7315                           
  7316                           ;i2c.c: 185: if(Flag)
  7317  0554  084D               	movf	I2C_Send_Buffer@Flag,w
  7318  0555  1D03               	btfss	3,2
  7319  0556  0008               	return
  7320                           
  7321                           ;i2c.c: 188: for (i = 0; i<Length; i++)
  7322                           
  7323                           ;i2c.c: 186: return 0x01;
  7324                           ;	Return value of _I2C_Send_Buffer is never used
  7325  0557  01CC               	clrf	I2C_Send_Buffer@i
  7326  0558                     l3844:	
  7327  0558  0876               	movf	I2C_Send_Buffer@Length,w
  7328  0559  024C               	subwf	I2C_Send_Buffer@i,w
  7329  055A  1803               	btfsc	3,0
  7330  055B  2D72               	goto	l3846
  7331                           
  7332                           ;i2c.c: 189: {
  7333                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
  7334  055C  084C               	movf	I2C_Send_Buffer@i,w
  7335  055D  0775               	addwf	I2C_Send_Buffer@buff,w
  7336  055E  00F7               	movwf	??_I2C_Send_Buffer
  7337  055F  0877               	movf	??_I2C_Send_Buffer,w
  7338  0560  0086               	movwf	6
  7339  0561  0187               	clrf	7
  7340  0562  0801               	movf	1,w
  7341  0563  3184  2462  3185   	fcall	_I2C_Send_Byte
  7342  0566  00F8               	movwf	??_I2C_Send_Buffer+1
  7343  0567  0878               	movf	??_I2C_Send_Buffer+1,w
  7344  0568  0020               	movlb	0	; select bank0
  7345  0569  00CD               	movwf	I2C_Send_Buffer@Flag
  7346                           
  7347                           ;i2c.c: 191: if(Flag)
  7348  056A  084D               	movf	I2C_Send_Buffer@Flag,w
  7349  056B  1D03               	btfss	3,2
  7350  056C  0008               	return
  7351                           
  7352                           ;i2c.c: 192: return 0x01;
  7353                           ;	Return value of _I2C_Send_Buffer is never used
  7354  056D  3001               	movlw	1
  7355  056E  00F7               	movwf	??_I2C_Send_Buffer
  7356  056F  0877               	movf	??_I2C_Send_Buffer,w
  7357  0570  07CC               	addwf	I2C_Send_Buffer@i,f
  7358  0571  2D58               	goto	l3844
  7359  0572                     l3846:	
  7360                           
  7361                           ;i2c.c: 193: }
  7362                           ;i2c.c: 194: I2C_Stop();
  7363  0572  3187  27E7         	fcall	_I2C_Stop
  7364  0574  0008               	return
  7365  0575                     __end_of_I2C_Send_Buffer:	
  7366                           ;i2c.c: 195: return 0x00;
  7367                           ;	Return value of _I2C_Send_Buffer is never used
  7368                           
  7369                           
  7370                           	psect	text42
  7371  07E7                     __ptext42:	
  7372 ;; *************** function _I2C_Stop *****************
  7373 ;; Defined at:
  7374 ;;		line 102 in file "mcc_generated_files/i2c.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;Total ram usage:        1 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    3
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_I2C_Read_Buffer
  7399 ;;		_I2C_Send_Buffer
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           
  7404                           ;psect for function _I2C_Stop
  7405  07E7                     _I2C_Stop:	
  7406                           
  7407                           ;incstack = 0
  7408                           ; Regs used in _I2C_Stop: [wreg]
  7409                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
  7410  07E7  0022               	movlb	2	; select bank2
  7411  07E8  100D               	bcf	13,0	;volatile
  7412                           
  7413                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7414  07E9  300D               	movlw	13
  7415  07EA  00F2               	movwf	??_I2C_Stop
  7416  07EB                     u3517:	
  7417  07EB  0BF2               	decfsz	??_I2C_Stop,f
  7418  07EC  2FEB               	goto	u3517
  7419                           
  7420                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
  7421  07ED  0022               	movlb	2	; select bank2
  7422  07EE  108D               	bcf	13,1	;volatile
  7423                           
  7424                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7425  07EF  300D               	movlw	13
  7426  07F0  00F2               	movwf	??_I2C_Stop
  7427  07F1                     u3527:	
  7428  07F1  0BF2               	decfsz	??_I2C_Stop,f
  7429  07F2  2FF1               	goto	u3527
  7430                           
  7431                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
  7432  07F3  0022               	movlb	2	; select bank2
  7433  07F4  140D               	bsf	13,0	;volatile
  7434                           
  7435                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7436  07F5  300D               	movlw	13
  7437  07F6  00F2               	movwf	??_I2C_Stop
  7438  07F7                     u3537:	
  7439  07F7  0BF2               	decfsz	??_I2C_Stop,f
  7440  07F8  2FF7               	goto	u3537
  7441                           
  7442                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
  7443  07F9  0022               	movlb	2	; select bank2
  7444  07FA  148D               	bsf	13,1	;volatile
  7445                           
  7446                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7447  07FB  300D               	movlw	13
  7448  07FC  00F2               	movwf	??_I2C_Stop
  7449  07FD                     u3547:	
  7450  07FD  0BF2               	decfsz	??_I2C_Stop,f
  7451  07FE  2FFD               	goto	u3547
  7452  07FF  0008               	return
  7453  0800                     __end_of_I2C_Stop:	
  7454                           
  7455                           	psect	text43
  7456  0FE7                     __ptext43:	
  7457 ;; *************** function _I2C_Start *****************
  7458 ;; Defined at:
  7459 ;;		line 16 in file "mcc_generated_files/i2c.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_I2C_Read_Buffer
  7484 ;;		_I2C_Send_Buffer
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function _I2C_Start
  7490  0FE7                     _I2C_Start:	
  7491                           
  7492                           ;incstack = 0
  7493                           ; Regs used in _I2C_Start: [wreg]
  7494                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
  7495  0FE7  0022               	movlb	2	; select bank2
  7496  0FE8  148D               	bsf	13,1	;volatile
  7497                           
  7498                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7499  0FE9  300D               	movlw	13
  7500  0FEA  00F2               	movwf	??_I2C_Start
  7501  0FEB                     u3557:	
  7502  0FEB  0BF2               	decfsz	??_I2C_Start,f
  7503  0FEC  2FEB               	goto	u3557
  7504                           
  7505                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
  7506  0FED  0022               	movlb	2	; select bank2
  7507  0FEE  140D               	bsf	13,0	;volatile
  7508                           
  7509                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7510  0FEF  300D               	movlw	13
  7511  0FF0  00F2               	movwf	??_I2C_Start
  7512  0FF1                     u3567:	
  7513  0FF1  0BF2               	decfsz	??_I2C_Start,f
  7514  0FF2  2FF1               	goto	u3567
  7515                           
  7516                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
  7517  0FF3  0022               	movlb	2	; select bank2
  7518  0FF4  108D               	bcf	13,1	;volatile
  7519                           
  7520                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7521  0FF5  300D               	movlw	13
  7522  0FF6  00F2               	movwf	??_I2C_Start
  7523  0FF7                     u3577:	
  7524  0FF7  0BF2               	decfsz	??_I2C_Start,f
  7525  0FF8  2FF7               	goto	u3577
  7526                           
  7527                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
  7528  0FF9  0022               	movlb	2	; select bank2
  7529  0FFA  100D               	bcf	13,0	;volatile
  7530                           
  7531                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7532  0FFB  300D               	movlw	13
  7533  0FFC  00F2               	movwf	??_I2C_Start
  7534  0FFD                     u3587:	
  7535  0FFD  0BF2               	decfsz	??_I2C_Start,f
  7536  0FFE  2FFD               	goto	u3587
  7537  0FFF  0008               	return
  7538  1000                     __end_of_I2C_Start:	
  7539                           
  7540                           	psect	text44
  7541  0462                     __ptext44:	
  7542 ;; *************** function _I2C_Send_Byte *****************
  7543 ;; Defined at:
  7544 ;;		line 34 in file "mcc_generated_files/i2c.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  Data            1    wreg     unsigned char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  Data            1    3[COMMON] unsigned char 
  7549 ;;  i               1    4[COMMON] unsigned char 
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      unsigned char 
  7552 ;; Registers used:
  7553 ;;		wreg, status,2, status,0
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;Total ram usage:        3 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    3
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_I2C_Read_Buffer
  7570 ;;		_I2C_Send_Buffer
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _I2C_Send_Byte
  7576  0462                     _I2C_Send_Byte:	
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
  7580                           ;I2C_Send_Byte@Data stored from wreg
  7581  0462  00F3               	movwf	I2C_Send_Byte@Data
  7582                           
  7583                           ;i2c.c: 36: unsigned char i;
  7584                           ;i2c.c: 37: for(i=0;i<8;i++)
  7585  0463  01F4               	clrf	I2C_Send_Byte@i
  7586  0464  3008               	movlw	8
  7587  0465  0274               	subwf	I2C_Send_Byte@i,w
  7588  0466  1803               	btfsc	3,0
  7589  0467  2C89               	goto	l706
  7590  0468                     l694:	
  7591                           
  7592                           ;i2c.c: 38: {
  7593                           ;i2c.c: 39: if(Data&0x80)
  7594  0468  1FF3               	btfss	I2C_Send_Byte@Data,7
  7595  0469  2C6D               	goto	l700
  7596                           
  7597                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
  7598  046A  0022               	movlb	2	; select bank2
  7599  046B  148D               	bsf	13,1	;volatile
  7600  046C  2C6F               	goto	l3264
  7601  046D                     l700:	
  7602                           ;i2c.c: 41: else
  7603                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
  7604                           
  7605  046D  0022               	movlb	2	; select bank2
  7606  046E  108D               	bcf	13,1	;volatile
  7607  046F                     l3264:	
  7608                           
  7609                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7610  046F  300D               	movlw	13
  7611  0470  00F2               	movwf	??_I2C_Send_Byte
  7612  0471                     u3597:	
  7613  0471  0BF2               	decfsz	??_I2C_Send_Byte,f
  7614  0472  2C71               	goto	u3597
  7615                           
  7616                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
  7617  0473  0022               	movlb	2	; select bank2
  7618  0474  140D               	bsf	13,0	;volatile
  7619                           
  7620                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7621  0475  300D               	movlw	13
  7622  0476  00F2               	movwf	??_I2C_Send_Byte
  7623  0477                     u3607:	
  7624  0477  0BF2               	decfsz	??_I2C_Send_Byte,f
  7625  0478  2C77               	goto	u3607
  7626                           
  7627                           ;i2c.c: 46: Data<<=1;
  7628  0479  1003               	clrc
  7629  047A  0DF3               	rlf	I2C_Send_Byte@Data,f
  7630                           
  7631                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
  7632  047B  0022               	movlb	2	; select bank2
  7633  047C  100D               	bcf	13,0	;volatile
  7634                           
  7635                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7636  047D  300D               	movlw	13
  7637  047E  00F2               	movwf	??_I2C_Send_Byte
  7638  047F                     u3617:	
  7639  047F  0BF2               	decfsz	??_I2C_Send_Byte,f
  7640  0480  2C7F               	goto	u3617
  7641  0481  3001               	movlw	1
  7642  0482  00F2               	movwf	??_I2C_Send_Byte
  7643  0483  0872               	movf	??_I2C_Send_Byte,w
  7644  0484  07F4               	addwf	I2C_Send_Byte@i,f
  7645  0485  3008               	movlw	8
  7646  0486  0274               	subwf	I2C_Send_Byte@i,w
  7647  0487  1C03               	skipc
  7648  0488  2C68               	goto	l694
  7649  0489                     l706:	
  7650                           ;i2c.c: 49: }
  7651                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
  7652                           
  7653  0489  0022               	movlb	2	; select bank2
  7654  048A  148D               	bsf	13,1	;volatile
  7655                           
  7656                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7657  048B  300D               	movlw	13
  7658  048C  00F2               	movwf	??_I2C_Send_Byte
  7659  048D                     u3627:	
  7660  048D  0BF2               	decfsz	??_I2C_Send_Byte,f
  7661  048E  2C8D               	goto	u3627
  7662                           
  7663                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
  7664  048F  0022               	movlb	2	; select bank2
  7665  0490  140D               	bsf	13,0	;volatile
  7666                           
  7667                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7668  0491  300D               	movlw	13
  7669  0492  00F2               	movwf	??_I2C_Send_Byte
  7670  0493                     u3637:	
  7671  0493  0BF2               	decfsz	??_I2C_Send_Byte,f
  7672  0494  2C93               	goto	u3637
  7673                           
  7674                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
  7675  0495  0021               	movlb	1	; select bank1
  7676  0496  148D               	bsf	13,1	;volatile
  7677                           
  7678                           ;i2c.c: 55: if(RB1)
  7679  0497  0020               	movlb	0	; select bank0
  7680  0498  1C8D               	btfss	13,1	;volatile
  7681  0499  2C9E               	goto	l716
  7682                           
  7683                           ;i2c.c: 56: {
  7684                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
  7685  049A  0021               	movlb	1	; select bank1
  7686  049B  108D               	bcf	13,1	;volatile
  7687                           
  7688                           ;i2c.c: 58: return 0x01;
  7689  049C  3001               	movlw	1
  7690  049D  0008               	return
  7691  049E                     l716:	
  7692                           ;i2c.c: 59: }
  7693                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
  7694                           
  7695  049E  0021               	movlb	1	; select bank1
  7696  049F  108D               	bcf	13,1	;volatile
  7697                           
  7698                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
  7699  04A0  0022               	movlb	2	; select bank2
  7700  04A1  100D               	bcf	13,0	;volatile
  7701                           
  7702                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7703  04A2  300D               	movlw	13
  7704  04A3  00F2               	movwf	??_I2C_Send_Byte
  7705  04A4                     u3647:	
  7706  04A4  0BF2               	decfsz	??_I2C_Send_Byte,f
  7707  04A5  2CA4               	goto	u3647
  7708                           
  7709                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
  7710  04A6  0022               	movlb	2	; select bank2
  7711  04A7  108D               	bcf	13,1	;volatile
  7712                           
  7713                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7714  04A8  300D               	movlw	13
  7715  04A9  00F2               	movwf	??_I2C_Send_Byte
  7716  04AA                     u3657:	
  7717  04AA  0BF2               	decfsz	??_I2C_Send_Byte,f
  7718  04AB  2CAA               	goto	u3657
  7719                           
  7720                           ;i2c.c: 65: return 0x00;
  7721  04AC  3000               	movlw	0
  7722  04AD  0008               	return
  7723  04AE                     __end_of_I2C_Send_Byte:	
  7724                           
  7725                           	psect	text45
  7726  07CD                     __ptext45:	
  7727 ;; *************** function _ADC_GetConversion *****************
  7728 ;; Defined at:
  7729 ;;		line 106 in file "mcc_generated_files/adc.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  channel         1    wreg     enum E1850
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  channel         1    5[COMMON] enum E1850
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  2    2[COMMON] unsigned int 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;Total ram usage:        4 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    3
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_main
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _ADC_GetConversion
  7759  07CD                     _ADC_GetConversion:	
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7763                           ;ADC_GetConversion@channel stored from wreg
  7764  07CD  00F5               	movwf	ADC_GetConversion@channel
  7765                           
  7766                           ;adc.c: 108: ADCON0bits.CHS = channel;
  7767  07CE  0875               	movf	ADC_GetConversion@channel,w
  7768  07CF  00F4               	movwf	??_ADC_GetConversion
  7769  07D0  0DF4               	rlf	??_ADC_GetConversion,f
  7770  07D1  0DF4               	rlf	??_ADC_GetConversion,f
  7771  07D2  0021               	movlb	1	; select bank1
  7772  07D3  081D               	movf	29,w	;volatile
  7773  07D4  0674               	xorwf	??_ADC_GetConversion,w
  7774  07D5  3983               	andlw	-125
  7775  07D6  0674               	xorwf	??_ADC_GetConversion,w
  7776  07D7  009D               	movwf	29	;volatile
  7777                           
  7778                           ;adc.c: 111: ADCON0bits.ADON = 1;
  7779  07D8  141D               	bsf	29,0	;volatile
  7780                           
  7781                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
  7782  07D9  3006               	movlw	6
  7783  07DA  00F4               	movwf	??_ADC_GetConversion
  7784  07DB                     u3667:	
  7785  07DB  0BF4               	decfsz	??_ADC_GetConversion,f
  7786  07DC  2FDB               	goto	u3667
  7787  07DD  0000               	nop
  7788                           
  7789                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  7790  07DE  0021               	movlb	1	; select bank1
  7791  07DF  149D               	bsf	29,1	;volatile
  7792  07E0                     l195:	
  7793                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
  7794                           
  7795  07E0  189D               	btfsc	29,1	;volatile
  7796  07E1  2FE0               	goto	l195
  7797                           
  7798                           ;adc.c: 121: }
  7799                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  7800  07E2  081C               	movf	28,w	;volatile
  7801  07E3  00F3               	movwf	?_ADC_GetConversion+1
  7802  07E4  081B               	movf	27,w	;volatile
  7803  07E5  00F2               	movwf	?_ADC_GetConversion
  7804  07E6  0008               	return
  7805  07E7                     __end_of_ADC_GetConversion:	
  7806                           
  7807                           	psect	intentry
  7808  0004                     __pintentry:	
  7809 ;; *************** function _INTERRUPT_InterruptManager *****************
  7810 ;; Defined at:
  7811 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  1    wreg      void 
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0, pclath, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;Total ram usage:        1 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    2
  7832 ;; This function calls:
  7833 ;;		_TMR0_ISR
  7834 ;; This function is called by:
  7835 ;;		Interrupt level 1
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839  0004                     _INTERRUPT_InterruptManager:	
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7843  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7844  0005  3180               	pagesel	$
  7845  0006  0020               	movlb	0	; select bank0
  7846  0007  087F               	movf	127,w
  7847  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  7848                           
  7849                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  7850  0009  1A8B               	btfsc	11,5	;volatile
  7851  000A  1D0B               	btfss	11,2	;volatile
  7852  000B  280E               	goto	i1l247
  7853                           
  7854                           ;interrupt_manager.c: 55: TMR0_ISR();
  7855  000C  318F  2776         	fcall	_TMR0_ISR
  7856  000E                     i1l247:	
  7857                           ;interrupt_manager.c: 56: } else {
  7858                           
  7859  000E  0871               	movf	??_INTERRUPT_InterruptManager,w
  7860  000F  0020               	movlb	0	; select bank0
  7861  0010  00FF               	movwf	127
  7862  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7863  0012  0009               	retfie
  7864  0013                     __end_of_INTERRUPT_InterruptManager:	
  7865                           
  7866                           	psect	text47
  7867  0F76                     __ptext47:	
  7868 ;; *************** function _TMR0_ISR *****************
  7869 ;; Defined at:
  7870 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, pclath, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:    1
  7891 ;; This function calls:
  7892 ;;		_TMR0_CallBack
  7893 ;; This function is called by:
  7894 ;;		_INTERRUPT_InterruptManager
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function _TMR0_ISR
  7900  0F76                     _TMR0_ISR:	
  7901                           
  7902                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
  7903                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
  7904                           
  7905                           ;incstack = 0
  7906                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7907  0F76  110B               	bcf	11,2	;volatile
  7908                           
  7909                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
  7910  0F77  0020               	movlb	0	; select bank0
  7911  0F78  0864               	movf	_timer0ReloadVal,w	;volatile
  7912  0F79  0095               	movwf	21	;volatile
  7913                           
  7914                           ;tmr0.c: 112: if (++CountCallBack >= 100) {
  7915  0F7A  3001               	movlw	1
  7916  0F7B  07AE               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  7917  0F7C  3000               	movlw	0
  7918  0F7D  3DAF               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  7919  0F7E  3000               	movlw	0
  7920  0F7F  022F               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  7921  0F80  3064               	movlw	100
  7922  0F81  1903               	skipnz
  7923  0F82  022E               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  7924  0F83  1C03               	skipc
  7925  0F84  0008               	return
  7926                           
  7927                           ;tmr0.c: 114: TMR0_CallBack();
  7928  0F85  318F  27A0         	fcall	_TMR0_CallBack
  7929                           
  7930                           ;tmr0.c: 117: CountCallBack = 0;
  7931  0F87  0020               	movlb	0	; select bank0
  7932  0F88  01AE               	clrf	TMR0_ISR@CountCallBack	;volatile
  7933  0F89  01AF               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  7934  0F8A  0008               	return
  7935  0F8B                     __end_of_TMR0_ISR:	
  7936                           
  7937                           	psect	text48
  7938  0FA0                     __ptext48:	
  7939 ;; *************** function _TMR0_CallBack *****************
  7940 ;; Defined at:
  7941 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;Total ram usage:        1 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_TMR0_ISR
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function _TMR0_CallBack
  7970  0FA0                     _TMR0_CallBack:	
  7971                           
  7972                           ;tmr0.c: 126: time_count++;
  7973                           
  7974                           ;incstack = 0
  7975                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  7976  0FA0  3001               	movlw	1
  7977  0FA1  00F0               	movwf	??_TMR0_CallBack
  7978  0FA2  0870               	movf	??_TMR0_CallBack,w
  7979  0FA3  0020               	movlb	0	; select bank0
  7980  0FA4  07B6               	addwf	_time_count,f
  7981                           
  7982                           ;tmr0.c: 127: if(time_count == 4 || time_count > 8) time_count = 0;
  7983  0FA5  3004               	movlw	4
  7984  0FA6  0636               	xorwf	_time_count,w
  7985  0FA7  1903               	btfsc	3,2
  7986  0FA8  2FAD               	goto	i1l2962
  7987  0FA9  3009               	movlw	9
  7988  0FAA  0236               	subwf	_time_count,w
  7989  0FAB  1C03               	skipc
  7990  0FAC  2FAE               	goto	i1l2964
  7991  0FAD                     i1l2962:	
  7992  0FAD  01B6               	clrf	_time_count
  7993  0FAE                     i1l2964:	
  7994                           
  7995                           ;tmr0.c: 128: LongPressSec++;
  7996  0FAE  3001               	movlw	1
  7997  0FAF  00F0               	movwf	??_TMR0_CallBack
  7998  0FB0  0870               	movf	??_TMR0_CallBack,w
  7999  0FB1  07B2               	addwf	_LongPressSec,f
  8000                           
  8001                           ;tmr0.c: 129: MAX31856Sec++;
  8002  0FB2  3001               	movlw	1
  8003  0FB3  00F0               	movwf	??_TMR0_CallBack
  8004  0FB4  0870               	movf	??_TMR0_CallBack,w
  8005  0FB5  07B3               	addwf	_MAX31856Sec,f
  8006  0FB6  0008               	return
  8007  0FB7                     __end_of_TMR0_CallBack:	
  8008  007E                     btemp	set	126	;btemp
  8009  007E                     int$flags	set	126
  8010  007E                     wtemp	set	126
  8011  007E                     wtemp0	set	126
  8012  0080                     wtemp1	set	128
  8013  0082                     wtemp2	set	130
  8014  0084                     wtemp3	set	132
  8015  0086                     wtemp4	set	134
  8016  0088                     wtemp5	set	136
  8017  007F                     wtemp6	set	127
  8018  007E                     ttemp	set	126
  8019  007E                     ttemp0	set	126
  8020  0081                     ttemp1	set	129
  8021  0084                     ttemp2	set	132
  8022  0087                     ttemp3	set	135
  8023  007F                     ttemp4	set	127
  8024  007E                     ltemp	set	126
  8025  007E                     ltemp0	set	126
  8026  0082                     ltemp1	set	130
  8027  0086                     ltemp2	set	134
  8028  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        20
    BSS         124
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     25      69
    BANK1            80     13      48
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK0[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_WriteAll_1621
    _maxim_31856_init->_maxim_31856_write_register
    _SYSTEM_Initialize->_TMR0_Initialize
    _time_Display->_WriteAll_1621
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _temperature_display->_tc_temperature_trans
    _maxim_clear_fault_status->_maxim_31856_read_register
    _err_Display->_WriteAll_1621
    _Tc_Display->_WriteAll_1621
    ___lwdiv->___lwmod
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _Two_Display->_WriteAll_1621
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _temperature_process->_time_Display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_Tc_Display
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    _one_temperature_trans->_maxim_31856_read_nregisters
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   41524
                                             22 BANK0      3     3      0
                                              0 BANK1     13    13      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _SendCmd_1621
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              5 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          2     2      0   18783
                                             20 BANK0      2     2      0
                           _Key_Scan
                       _SendCmd_1621
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   18080
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5078
                                             13 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1402
                                              0 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              6 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              5 COMMON     5     3      2
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0    8437
                                             11 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                 8     8      0       0
                                              2 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              6 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              3 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              7 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              5 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              6 COMMON     2     2      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              3 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              3 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              0 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              3 COMMON     7     5      2
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              3 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              7 COMMON     3     0      3
                                              0 BANK0      3     3      0
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              7 COMMON     2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              3 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              5 COMMON     4     2      2
                                              0 BANK0      3     3      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _Key_Scan
     _SendCmd_1621
       _SendBit_1621
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _SendCmd_1621
     _SendBit_1621
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      D      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Jul 04 14:39:35 2016

                        __end_of_I2C_Send_Buffer 0575                                   _SPI_Initialize 0EC0  
                     ?_maxim_31856_read_register 0070                                                _s 0120  
  maxim_31856_read_register@uch_register_address 0074                                   ___bmul@product 0074  
                             __size_of_I2C_Start 0019                                      __CFG_CP$OFF 0000  
                                             l69 0EDF                                     ___awdiv@sign 004C  
                        ?_SPI_Exchange8bitBuffer 0073                                               _tm 00BC  
                                _timer0ReloadVal 0064                             Bq32k_Rtc_Read_Time@p 0057  
                                            l332 024B                                              l342 0289  
                                            l334 024D                                              l195 07E0  
                                            l451 00DF                                              l443 00A7  
                                            l700 046D                                              l533 0765  
                                            l446 00AF                                              l535 0767  
                                            l551 0747                                              l455 057B  
                                            l448 00D7                                              l706 0489  
                                            l490 0649                                              l803 0716  
                                            l716 049E                                              l549 0745  
                                            l735 06BA                                              l808 070C  
                                            l809 0710                                              l841 04E7  
                                            l578 0614                                              l827 04CD  
                                            l588 012A                                              l589 014E  
                                            l845 04F4                                              l694 0468  
                                            _RB1 0069                                              _RB3 006B  
                       __end_of_maxim_31856_init 0360                                              _RB5 006D  
                                            _RA7 0067                                     ?_err_Display 0070  
                                   ___awmod@sign 0078                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                         _maxim_start_conversion 0FCF                                     __CFG_LVP$OFF 0000  
                                           l3400 07B8                                             l3314 06CA  
                                           l3236 075C                                             l3500 0688  
                                           l3332 0F34                                             l3264 046F  
                                           l3248 073C                                             l3352 042D  
                                           l3504 0694                                             l3440 02B8  
                                           l3328 0F2E                                             l3354 0440  
                                           l3442 02DE                                             l3348 041F  
                                           l3356 0444                                             l3508 069D  
                                           l3366 044C                                             l3358 0449  
                                           l3550 00B6                                             l3614 03DA  
                                           l3712 0784                                             l3640 0411  
                                           l3632 0400                                             l3624 03E2  
                                           l3608 03CF                                             l3800 0623  
                                           l3378 05FA                                             l3482 05D4  
                                           l3474 05B6                                             l3626 03EE  
                                           l3802 0626                                             l3476 05C2  
                                           l3580 0167                                             l3636 0409  
                                           l3652 04FF                                             l3812 0631  
                                           l3486 05DD                                             l3582 0172  
                                           l3574 00F7                                             l3670 0524  
                                           l3814 0634                                             l3576 0112  
                                           l3664 050C                                             l3656 0506  
                                           l3498 067C                                             l3666 0518  
                                           l3674 052D                                             l3818 0637  
                                           l3930 04C2                                             l3844 0558  
                                           l3692 0588                                             l3846 0572  
                                           l3678 0535                                             l3790 0618  
                                           l3942 04DF                                             l3934 04D1  
                                           l3926 04BC                                             l3856 06FE  
                                           l3688 0581                                             l3938 04D7  
                                           l3948 04EB                                             l3984 0277  
                                           l3988 028A                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u3045 050F                                             u3065 051E  
                                           u3250 07A3                                             u3075 0525  
                                           u3350 022C                                             u3407 02C9  
                                           u3417 02CF                                             u3507 0702  
                                           u3427 02D5                                             u2635 0F5A  
                                           u3517 07EB                                             u2725 067F  
                                           u3437 02EB                                             u3607 0477  
                                           u3527 07F1                                             u2655 05B9  
                                           u3447 02F1                                             u3617 047F  
                                           u3537 07F7                                             u2745 068E  
                                           u3457 02F7                                             u3627 048D  
                                           u3547 07FD                                             u2675 05C3  
                                           u2755 0695                                             u3467 06B0  
                                           u3637 0493                                             u3557 0FEB  
                                           u2685 05CD                                             u2845 00C0  
                                           u3477 06C0                                             u3397 023E  
                                           u3647 04A4                                             u3567 0FF1  
                                           u3487 074C                                             u2695 05D5  
                                           u3657 04AA                                             u3577 0FF7  
                                           u3497 076C                                             u2945 03E5  
                                           u3667 07DB                                             u3587 0FFD  
                                           u2795 0090                                             u3597 0471  
                                           u2965 03EF                                             u2975 03F9  
                                           u2985 0401                                             _TMR0 0015  
                                           _WPUB 020D                                             _WPUE 0210  
                                   __CFG_WRT$OFF 0000                                    __CFG_FCMEN$ON 0000  
                         __size_of_WriteAll_1621 0035                                    ??_Key_Process 005F  
                                           _main 0221                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 0800                                    __CFG_BOREN$ON 0000  
                                           ltemp 007E                              SendCmd_1621@command 0078  
                                           start 0013                                             ttemp 007E  
                                           wtemp 007E                                  __end_of_Dis_TAB 1015  
                         __end_of_SPI_Initialize 0EC6                                 ?_I2C_Read_Buffer 0075  
                              ___bmul@multiplier 0075                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 00CE                   __end_of_SPI_Exchange8bitBuffer 0462  
                                time_Display@num 005B                          __end_of_TMR0_Initialize 0F0B  
                 __size_of_OSCILLATOR_Initialize 0005                    __end_of_OSCILLATOR_Initialize 0EC0  
                                __end_of_bcd2bin 0F62                                            ?_main 0070  
                                __end_of___awdiv 0416                                    __CFG_WDTE$OFF 0000  
                                __end_of___awmod 053A                                  ___awdiv@divisor 0072  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 05E2  
                                          i1l247 000E                                  __end_of___lwmod 06A2  
                                ___awdiv@counter 004B                                            _PMADR 0191  
                                          _PMDAT 0193                                            _RCREG 0199  
                                          _RCSTA 019D                          ??_one_temperature_trans 0050  
                              ?_SendDataBit_1621 0072                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TXREG 019A                                            _TXSTA 019E  
                               __end_of_TMR0_ISR 0F8B                               ??_SendDataBit_1621 0073  
                   __end_of_tc_temperature_trans 00E6                                            main@a 00C3  
                                          main@i 00CD                                __end_of_I2C_Start 1000  
                            _Bq32k_Rtc_Read_Time 0360                                  Tc_Display@count 0053  
                              WriteAll_1621@addr 004C                                            ltemp0 007E  
                                          ltemp1 0082                                            ltemp2 0086  
                                          ltemp3 0080                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                                            wtemp0 007E  
                                          wtemp1 0080                                            wtemp2 0082  
                                          wtemp3 0084                                            wtemp4 0086  
                                          wtemp5 0088                                            wtemp6 007F  
                         __size_of_I2C_Send_Byte 004C                                       _Tc_Display 00E6  
                                ?_SPI_Initialize 0070                      __end_of_temperature_display 0798  
                                __initialization 0015                              __end_of_Key_Process 04F5  
                               ?_I2C_Send_Buffer 0075                                     __end_of_main 0291  
                                 WriteAll_1621@i 004D                                   WriteAll_1621@p 0077  
                               __end_of_Key_Scan 0718                             ?_Bq32k_Rtc_Read_Time 0070  
                    __end_of_temperature_process 064A                                   __CFG_LPBOR$OFF 0000  
   maxim_31856_write_register@uch_register_value 0073                      ?_INTERRUPT_InterruptManager 0070  
                                  _WriteAll_1621 05E2                                           ??_main 0061  
 maxim_31856_write_register@uch_register_address 0074                          Bq32k_Rtc_Read_Time@temp 004D  
                              I2C_Receive_Byte@i 0074                         __end_of_SPI_Exchange8bit 0EE3  
                                         _ADCON0 009D                                           _ADCON1 009E  
                                         _ADRESH 009C                                           _ADRESL 009B  
                               ___awdiv@dividend 0074                                           _APFCON 011D  
                                         _ANSELA 018C                                           _ANSELB 018D  
                                         _ANSELC 018E                                           i1l2962 0FAD  
                                         i1l2964 0FAE                                           _PMADRH 0192  
                                         _PMADRL 0191                                           _PMDATH 0194  
                                         _PMDATL 0193                                _temperature_value 0024  
                                         _PMCON2 0196                                           _OSCCON 0099  
                                         _SPBRGH 019C                                           _SPBRGL 019B  
                                         _TRISB1 0469                                           _TRISB3 046B  
                                         _SSPBUF 0211                                    ?_SendCmd_1621 0070  
                    _f_cold_junction_temperature 0028                                    ?_SendBit_1621 0072  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 0798  
                               SendBit_1621@data 0075                                           ___bmul 0F2C  
                                      ??_bcd2bin 0076                                        ??___awdiv 0076  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0076  
                          ??_Bq32k_Rtc_Read_Time 004B                                        ??___lwdiv 0078  
                                      ??___lwmod 0076                     ?_maxim_31856_read_nregisters 004B  
                                 ?_WriteAll_1621 0077                                 ?_TMR0_Initialize 0070  
                                         _memset 07B3                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 004D                                  ___awmod@divisor 0072  
                                         _uch_sr 003E                                  ___awmod@counter 0077  
                                  _I2C_Send_Byte 0462                               ??_I2C_Receive_Byte 0072  
                                      ?_I2C_Stop 0070                     ??_maxim_31856_write_register 0074  
                          I2C_Read_Buffer@Length 0076                         ADC_GetConversion@channel 0075  
                           __size_of_err_Display 002C                            __end_of_TMR0_CallBack 0FB7  
                                     bcd2bin@val 0079                       ??_maxim_clear_fault_status 0076  
                              _SYSTEM_Initialize 0F3D                                   ??_SendCmd_1621 0077  
                        __end_of__initialization 003A                                   ??_SendBit_1621 0073  
                                    _Key_Process 04AE                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                              ___bmul@multiplicand 0072  
                              time_Display@F2116 00B8                                   __pcstackCOMMON 0070  
                                   __pidataBANK1 0F62                              ??_SYSTEM_Initialize 0073  
                           _tc_temperature_trans 003E                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0073              __size_of_maxim_31856_write_register 000D  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 004D  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 002E  
                                _temperature_int 0030                                       ??_I2C_Stop 0072  
                                  ??_Two_Display 004E                               ??_maxim_31856_init 0075  
                               Two_Display@F2110 0020                      _f_linearized_tc_temperature 002B  
                           I2C_Receive_Byte@Data 0073                              I2C_Read_Buffer@Flag 0079  
                      __end_of_SYSTEM_Initialize 0F4F                              I2C_Read_Buffer@buff 0075  
                        __end_of_Bq32k_Time_Init 07B3                                       __pbssBANK0 0020  
                                     __pbssBANK1 00B4                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                                  __CFG_VCAPEN$OFF 0000  
                                     __pmaintext 0221                                          ?___bmul 0072  
                          ?_tc_temperature_trans 0070                                  ??_WriteAll_1621 004B  
                                     ??_TMR0_ISR 0071                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0072  
                 __end_of_maxim_start_conversion 0FE7                          __size_of_ADC_Initialize 0008  
                            __size_of_Tc_Display 00A7                   __size_of_one_temperature_trans 0038  
                  __end_of_one_temperature_trans 05AD                                          _OSCSTAT 009A  
                                        _SSP1ADD 0212                        _maxim_31856_read_register 0F1B  
           __size_of_maxim_31856_read_nregisters 0018                                       ??_Key_Scan 0072  
                                        _Dis_TAB 1000                                 ??_SPI_Initialize 0072  
                            __end_of_Two_Display 06F5                        __size_of_SendDataBit_1621 0020  
                                      _I2C_Start 0FE7  maxim_31856_read_nregisters@uch_register_address 004F  
                                        _bcd2bin 0F4F                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 03C4  
                                        ___awmod 04F5                                          ___lwdiv 05AD  
                                        ___lwmod 0676                                  ??_I2C_Send_Byte 0072  
                              I2C_Send_Byte@Data 0073                                  __size_of_memset 001A  
                       __size_of_I2C_Read_Buffer 006B                                          __ptext1 02FC  
                                        __ptext2 0F3D                                          __ptext3 0EFC  
                                        __ptext4 0EC0                                          __ptext5 0718  
                                        __ptext6 0EBB                                          __ptext7 0EE3  
                                        __ptext8 0ED2                                          __ptext9 04AE  
                           __end_of_SendCmd_1621 0FA0                             SendDataBit_1621@data 0075  
                           __end_of_SendBit_1621 077A               __end_of_maxim_31856_write_register 0EFC  
                     _maxim_31856_write_register 0EEF                            _OSCILLATOR_Initialize 0EBB  
                                 I2C_Send_Byte@i 0074                                 ___awmod@dividend 0074  
                                        _uch_cr0 007A                                          _uch_cr1 003A  
                       ??_PIN_MANAGER_Initialize 0072                                          _uch_reg 003F  
               __end_of_maxim_clear_fault_status 0F1B                                ?_SPI_Exchange8bit 0070  
                          I2C_Send_Buffer@Length 0076                       __size_of_SYSTEM_Initialize 0012  
                                        clrloop0 0ECD                             end_of_initialization 003A  
                             ??_SPI_Exchange8bit 0072                             SPI_Exchange8bit@data 0072  
                               ?_Bq32k_Time_Init 0070                                          init_ram 0EC6  
                                        memset@c 0072                                          memset@n 0074  
                                        memset@p 0078                                          initloop 0EC7  
                                     ?_I2C_Start 0070                                _EUSART_Initialize 0EE3  
                         ??_tc_temperature_trans 0072                               ?_EUSART_Initialize 0070  
                                 ??_time_Display 0058                                        _RCSTAbits 019D  
                                   __pstringtext 1000                                       _time_count 0036  
                   __size_of_temperature_display 001E                              ??_EUSART_Initialize 0072  
                                   _display_buff 0047                         __size_of_I2C_Send_Buffer 003B  
                               __CFG_FOSC$INTOSC 0000                     __size_of_temperature_process 0033  
                                    _Two_Display 06CC                                __size_of_I2C_Stop 0019  
                            Bq32k_Time_Init@temp 0050                        __size_of_I2C_Receive_Byte 002A  
                           Key_Process@gKeyValue 0060                        __end_of_EUSART_Initialize 0EEF  
                                   ?_Key_Process 0070                         ??_SPI_Exchange8bitBuffer 0075  
                                   ??_Tc_Display 0052                      __end_of_Bq32k_Rtc_Read_Time 03C4  
      maxim_start_conversion@uch_conversion_mode 0077                                   __end_of___bmul 0F3D  
                              __size_of_TMR0_ISR 0015                                   _ADC_Initialize 0ED2  
                         ?_OSCILLATOR_Initialize 0070                                   __end_of_memset 07CD  
                                 Tc_Display@data 0054                                 WriteAll_1621@cnt 0079  
                                  ??_err_Display 004E                              start_initialization 0015  
                       __size_of_TMR0_Initialize 000F                               __end_of_Tc_Display 018D  
                __size_of_PIN_MANAGER_Initialize 0022                                ??_I2C_Read_Buffer 0077  
                                 Two_Display@num 004F                        __size_of_maxim_31856_init 0064  
                               _SendDataBit_1621 073A                                      ??_I2C_Start 0072  
                              __size_of_Key_Scan 0023                                 _temperature_sign 0035  
             __size_of_maxim_31856_read_register 0011                                  SendBit_1621@cnt 0072  
                                       ??___bmul 0073                __size_of_maxim_clear_fault_status 0010  
                      ?_maxim_clear_fault_status 0070                            __size_of_SendCmd_1621 0015  
                          __size_of_SendBit_1621 0020                              I2C_Send_Buffer@Flag 004D  
                         __size_of_TMR0_CallBack 0017                           __end_of_ADC_Initialize 0EDA  
                                    __pdataBANK1 00A0                              I2C_Send_Buffer@buff 0075  
                                       ??_memset 0076                                      __pbssCOMMON 007A  
                                      ___latbits 0003                                    __pcstackBANK0 004B  
                                  __pcstackBANK1 00C3                             __end_of_time_Display 0221  
                  SPI_Exchange8bitBuffer@dataOut 0074                                ??_I2C_Send_Buffer 0077  
                            __end_of_err_Display 0676                       __size_of_EUSART_Initialize 000C  
                             I2C_Read_Buffer@ADD 0078                                     _LongPressSec 0032  
                              Two_Display@number 0053                                     _SendCmd_1621 0F8B  
                                   _SendBit_1621 075A                                        __pnvBANK0 0064  
                __size_of_SPI_Exchange8bitBuffer 004C                                 ___lwdiv@dividend 004D  
                         _PIN_MANAGER_Initialize 0718                                      _MAX31856Sec 0033  
              __end_of_maxim_31856_read_register 0F2C                                         ?_bcd2bin 0070  
                                       ?___awdiv 0072                                         ?___awmod 0072  
            __end_of_maxim_31856_read_nregisters 0FCF                      _maxim_31856_read_nregisters 0FB7  
                                       ?___lwdiv 004B                                         ?___lwmod 0072  
                                ?_ADC_Initialize 0070                                SendDataBit_1621@i 0076  
                          __end_of_WriteAll_1621 0617                     ??_INTERRUPT_InterruptManager 0071  
                    ?_maxim_31856_write_register 0073                                         _I2C_Stop 07E7  
                               I2C_Send_Buffer@i 004C                                 ___lwdiv@quotient 0050  
                                  _TMR0_CallBack 0FA0                              _temperature_decimal 0034  
                          _one_temperature_trans 0575                                 _I2C_Receive_Byte 06A2  
                            SendDataBit_1621@cnt 0072                                   err_Display@num 004F  
          maxim_31856_read_nregisters@uch_nBytes 004C                              _temperature_display 077A  
                              ??_TMR0_Initialize 0072                                        clear_ram0 0ECC  
                                      _uch_ltcbh 007B                                        _uch_ltcbl 003B  
                                      _uch_ltcbm 003C                             __size_of_Key_Process 0047  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0617  
                                       _PIR1bits 0011                        __size_of_SPI_Exchange8bit 0009  
                                      main@F2210 00AA                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0F76                                         _SSP1STAT 0214  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 04AE  
                                     _ADCON0bits 009D                           _SPI_Exchange8bitBuffer 0416  
                                    _err_Display 064A                             ?_temperature_process 0070  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                       _Key_Scan 06F5              maxim_31856_read_nregisters@uch_buff 004B  
                               _maxim_31856_init 02FC                         __size_of_Bq32k_Time_Init 001B  
                              _ADC_GetConversion 07CD                         ??_maxim_start_conversion 0076  
                             I2C_Send_Buffer@ADD 004B                    __size_of_tc_temperature_trans 00A8  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0013  
                        ??_OSCILLATOR_Initialize 0072                               ?_ADC_GetConversion 0072  
                               __size_of___awdiv 0052                            ??_temperature_display 0056  
                               __size_of___awmod 0045                                  _I2C_Read_Buffer 0291  
                               __size_of___lwdiv 0035                                 __size_of___lwmod 002C  
                   SPI_Exchange8bitBuffer@dataIn 0078                     SPI_Exchange8bitBuffer@bufLen 0073  
                               err_Display@F2113 00B4                         __end_of_SendDataBit_1621 075A  
                          __size_of_time_Display 0094                              ??_ADC_GetConversion 0074  
                          ??_temperature_process 007A                                  ___lwdiv@divisor 004B  
                                ___lwdiv@counter 004F                                         __ptext10 0617  
                                       __ptext11 018D                                         __ptext20 003E  
                                       __ptext12 04F5                                         __ptext21 0F0B  
                                       __ptext13 03C4                                         __ptext30 0F1B  
                                       __ptext22 064A                                         __ptext14 0360  
                                       __ptext31 0FB7                                         __ptext23 00E6  
                                       __ptext15 0F4F                                         __ptext40 0798  
                                       __ptext32 0416                                         __ptext24 07B3  
                                       __ptext16 0F2C                                         __ptext41 053A  
                                       __ptext33 0EDA                                         __ptext25 0676  
                                       __ptext17 0291                                         __ptext42 07E7  
                                       __ptext34 06CC                                         __ptext26 05AD  
                                       __ptext18 06A2                                         __ptext43 0FE7  
                                       __ptext35 05E2                                         __ptext27 0575  
                                       __ptext19 077A                                         __ptext44 0462  
                                       __ptext36 073A                                         __ptext28 0FCF  
                                       __ptext45 07CD                                         __ptext37 0F8B  
                                       __ptext29 0EEF                                         __ptext38 075A  
                                       __ptext47 0F76                                         __ptext39 06F5  
                                       __ptext48 0FA0                           ?_one_temperature_trans 0070  
                                   _SSP1CON1bits 0215                                    __size_of_main 0070  
     maxim_31856_read_register@uch_register_data 0075                        __end_of_ADC_GetConversion 07E7  
                                       _uch_cjth 0038                                         _uch_cjtl 0039  
                                       _uch_mask 003D                                         int$flags 007E  
                                   _time_Display 018D                                         _tmr_flag 0037  
             __end_of_INTERRUPT_InterruptManager 0013                       _INTERRUPT_InterruptManager 0004  
                   __size_of_Bq32k_Rtc_Read_Time 0064                                     _SSP1STATbits 0214  
                                _I2C_Send_Buffer 053A                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0070                                  Key_Scan@Key_val 0074  
                                  SendBit_1621@i 0076                                         memset@p1 0077  
                                       intlevel1 0000                                       _PMCON1bits 0195  
                               ___lwmod@dividend 0074                          ?_PIN_MANAGER_Initialize 0070  
                              __CFG_CLKOUTEN$OFF 0000               SPI_Exchange8bitBuffer@bytesWritten 0079  
                               ??_ADC_Initialize 0072                          __end_of_I2C_Read_Buffer 02FC  
                               _SPI_Exchange8bit 0EDA                  __size_of_maxim_start_conversion 0018  
                       __end_of_I2C_Receive_Byte 06CC                                ??_Bq32k_Time_Init 004E  
                                     _OPTION_REG 0095                                  ___lwmod@divisor 0072  
                                _TMR0_Initialize 0EFC                                  ___lwmod@counter 0077  
                           __size_of_Two_Display 0029                   __end_of_PIN_MANAGER_Initialize 073A  
                           Bq32k_Time_Init@F2005 00A0                       __size_of_ADC_GetConversion 001A  
                       _maxim_clear_fault_status 0F0B  
