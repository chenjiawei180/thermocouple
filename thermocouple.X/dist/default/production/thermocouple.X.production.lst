

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Jul 14 09:56:59 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	dabs	1,0x7E,2
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  011D                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020D                     	;# 
   158  0210                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  0090                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  011D                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  018E                     	;# 
   248  0191                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0194                     	;# 
   254  0195                     	;# 
   255  0196                     	;# 
   256  0197                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019C                     	;# 
   264  019C                     	;# 
   265  019D                     	;# 
   266  019E                     	;# 
   267  019F                     	;# 
   268  020D                     	;# 
   269  0210                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0212                     	;# 
   274  0213                     	;# 
   275  0213                     	;# 
   276  0214                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0291                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0298                     	;# 
   290  0298                     	;# 
   291  0299                     	;# 
   292  029A                     	;# 
   293  0394                     	;# 
   294  0395                     	;# 
   295  0396                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  0116                     	;# 
   354  0117                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  018E                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0197                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  020D                     	;# 
   380  0210                     	;# 
   381  0211                     	;# 
   382  0211                     	;# 
   383  0212                     	;# 
   384  0212                     	;# 
   385  0213                     	;# 
   386  0213                     	;# 
   387  0214                     	;# 
   388  0214                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0216                     	;# 
   393  0216                     	;# 
   394  0217                     	;# 
   395  0217                     	;# 
   396  0291                     	;# 
   397  0291                     	;# 
   398  0292                     	;# 
   399  0293                     	;# 
   400  0298                     	;# 
   401  0298                     	;# 
   402  0299                     	;# 
   403  029A                     	;# 
   404  0394                     	;# 
   405  0395                     	;# 
   406  0396                     	;# 
   407  0FE4                     	;# 
   408  0FE5                     	;# 
   409  0FE6                     	;# 
   410  0FE7                     	;# 
   411  0FE8                     	;# 
   412  0FE9                     	;# 
   413  0FEA                     	;# 
   414  0FEB                     	;# 
   415  0FED                     	;# 
   416  0FEE                     	;# 
   417  0FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000D                     	;# 
   432  000E                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  018E                     	;# 
   470  0191                     	;# 
   471  0191                     	;# 
   472  0192                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0197                     	;# 
   479  0199                     	;# 
   480  019A                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019C                     	;# 
   486  019C                     	;# 
   487  019D                     	;# 
   488  019E                     	;# 
   489  019F                     	;# 
   490  020D                     	;# 
   491  0210                     	;# 
   492  0211                     	;# 
   493  0211                     	;# 
   494  0212                     	;# 
   495  0212                     	;# 
   496  0213                     	;# 
   497  0213                     	;# 
   498  0214                     	;# 
   499  0214                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0216                     	;# 
   504  0216                     	;# 
   505  0217                     	;# 
   506  0217                     	;# 
   507  0291                     	;# 
   508  0291                     	;# 
   509  0292                     	;# 
   510  0293                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  0FE4                     	;# 
   519  0FE5                     	;# 
   520  0FE6                     	;# 
   521  0FE7                     	;# 
   522  0FE8                     	;# 
   523  0FE9                     	;# 
   524  0FEA                     	;# 
   525  0FEB                     	;# 
   526  0FED                     	;# 
   527  0FEE                     	;# 
   528  0FEF                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0008                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  0010                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001C                     	;# 
   556  008C                     	;# 
   557  008D                     	;# 
   558  008E                     	;# 
   559  0090                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0097                     	;# 
   565  0099                     	;# 
   566  009A                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  011D                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019D                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  020D                     	;# 
   602  0210                     	;# 
   603  0211                     	;# 
   604  0211                     	;# 
   605  0212                     	;# 
   606  0212                     	;# 
   607  0213                     	;# 
   608  0213                     	;# 
   609  0214                     	;# 
   610  0214                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  0291                     	;# 
   619  0291                     	;# 
   620  0292                     	;# 
   621  0293                     	;# 
   622  0298                     	;# 
   623  0298                     	;# 
   624  0299                     	;# 
   625  029A                     	;# 
   626  0394                     	;# 
   627  0395                     	;# 
   628  0396                     	;# 
   629  0FE4                     	;# 
   630  0FE5                     	;# 
   631  0FE6                     	;# 
   632  0FE7                     	;# 
   633  0FE8                     	;# 
   634  0FE9                     	;# 
   635  0FEA                     	;# 
   636  0FEB                     	;# 
   637  0FED                     	;# 
   638  0FEE                     	;# 
   639  0FEF                     	;# 
   640  0000                     	;# 
   641  0001                     	;# 
   642  0002                     	;# 
   643  0003                     	;# 
   644  0004                     	;# 
   645  0005                     	;# 
   646  0006                     	;# 
   647  0007                     	;# 
   648  0008                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0015                     	;# 
   659  0016                     	;# 
   660  0016                     	;# 
   661  0017                     	;# 
   662  0018                     	;# 
   663  0019                     	;# 
   664  001A                     	;# 
   665  001B                     	;# 
   666  001C                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  0090                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0095                     	;# 
   674  0096                     	;# 
   675  0097                     	;# 
   676  0099                     	;# 
   677  009A                     	;# 
   678  009B                     	;# 
   679  009B                     	;# 
   680  009C                     	;# 
   681  009D                     	;# 
   682  009E                     	;# 
   683  010C                     	;# 
   684  010D                     	;# 
   685  010E                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  011D                     	;# 
   689  018C                     	;# 
   690  018D                     	;# 
   691  018E                     	;# 
   692  0191                     	;# 
   693  0191                     	;# 
   694  0192                     	;# 
   695  0193                     	;# 
   696  0193                     	;# 
   697  0194                     	;# 
   698  0195                     	;# 
   699  0196                     	;# 
   700  0197                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019C                     	;# 
   708  019C                     	;# 
   709  019D                     	;# 
   710  019E                     	;# 
   711  019F                     	;# 
   712  020D                     	;# 
   713  0210                     	;# 
   714  0211                     	;# 
   715  0211                     	;# 
   716  0212                     	;# 
   717  0212                     	;# 
   718  0213                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0291                     	;# 
   730  0291                     	;# 
   731  0292                     	;# 
   732  0293                     	;# 
   733  0298                     	;# 
   734  0298                     	;# 
   735  0299                     	;# 
   736  029A                     	;# 
   737  0394                     	;# 
   738  0395                     	;# 
   739  0396                     	;# 
   740  0FE4                     	;# 
   741  0FE5                     	;# 
   742  0FE6                     	;# 
   743  0FE7                     	;# 
   744  0FE8                     	;# 
   745  0FE9                     	;# 
   746  0FEA                     	;# 
   747  0FEB                     	;# 
   748  0FED                     	;# 
   749  0FEE                     	;# 
   750  0FEF                     	;# 
   751  0000                     	;# 
   752  0001                     	;# 
   753  0002                     	;# 
   754  0003                     	;# 
   755  0004                     	;# 
   756  0005                     	;# 
   757  0006                     	;# 
   758  0007                     	;# 
   759  0008                     	;# 
   760  0009                     	;# 
   761  000A                     	;# 
   762  000B                     	;# 
   763  000C                     	;# 
   764  000D                     	;# 
   765  000E                     	;# 
   766  0010                     	;# 
   767  0011                     	;# 
   768  0012                     	;# 
   769  0015                     	;# 
   770  0016                     	;# 
   771  0016                     	;# 
   772  0017                     	;# 
   773  0018                     	;# 
   774  0019                     	;# 
   775  001A                     	;# 
   776  001B                     	;# 
   777  001C                     	;# 
   778  008C                     	;# 
   779  008D                     	;# 
   780  008E                     	;# 
   781  0090                     	;# 
   782  0091                     	;# 
   783  0092                     	;# 
   784  0095                     	;# 
   785  0096                     	;# 
   786  0097                     	;# 
   787  0099                     	;# 
   788  009A                     	;# 
   789  009B                     	;# 
   790  009B                     	;# 
   791  009C                     	;# 
   792  009D                     	;# 
   793  009E                     	;# 
   794  010C                     	;# 
   795  010D                     	;# 
   796  010E                     	;# 
   797  0116                     	;# 
   798  0117                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  018D                     	;# 
   802  018E                     	;# 
   803  0191                     	;# 
   804  0191                     	;# 
   805  0192                     	;# 
   806  0193                     	;# 
   807  0193                     	;# 
   808  0194                     	;# 
   809  0195                     	;# 
   810  0196                     	;# 
   811  0197                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019D                     	;# 
   821  019E                     	;# 
   822  019F                     	;# 
   823  020D                     	;# 
   824  0210                     	;# 
   825  0211                     	;# 
   826  0211                     	;# 
   827  0212                     	;# 
   828  0212                     	;# 
   829  0213                     	;# 
   830  0213                     	;# 
   831  0214                     	;# 
   832  0214                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0215                     	;# 
   836  0216                     	;# 
   837  0216                     	;# 
   838  0217                     	;# 
   839  0217                     	;# 
   840  0291                     	;# 
   841  0291                     	;# 
   842  0292                     	;# 
   843  0293                     	;# 
   844  0298                     	;# 
   845  0298                     	;# 
   846  0299                     	;# 
   847  029A                     	;# 
   848  0394                     	;# 
   849  0395                     	;# 
   850  0396                     	;# 
   851  0FE4                     	;# 
   852  0FE5                     	;# 
   853  0FE6                     	;# 
   854  0FE7                     	;# 
   855  0FE8                     	;# 
   856  0FE9                     	;# 
   857  0FEA                     	;# 
   858  0FEB                     	;# 
   859  0FED                     	;# 
   860  0FEE                     	;# 
   861  0FEF                     	;# 
   862  0000                     	;# 
   863  0001                     	;# 
   864  0002                     	;# 
   865  0003                     	;# 
   866  0004                     	;# 
   867  0005                     	;# 
   868  0006                     	;# 
   869  0007                     	;# 
   870  0008                     	;# 
   871  0009                     	;# 
   872  000A                     	;# 
   873  000B                     	;# 
   874  000C                     	;# 
   875  000D                     	;# 
   876  000E                     	;# 
   877  0010                     	;# 
   878  0011                     	;# 
   879  0012                     	;# 
   880  0015                     	;# 
   881  0016                     	;# 
   882  0016                     	;# 
   883  0017                     	;# 
   884  0018                     	;# 
   885  0019                     	;# 
   886  001A                     	;# 
   887  001B                     	;# 
   888  001C                     	;# 
   889  008C                     	;# 
   890  008D                     	;# 
   891  008E                     	;# 
   892  0090                     	;# 
   893  0091                     	;# 
   894  0092                     	;# 
   895  0095                     	;# 
   896  0096                     	;# 
   897  0097                     	;# 
   898  0099                     	;# 
   899  009A                     	;# 
   900  009B                     	;# 
   901  009B                     	;# 
   902  009C                     	;# 
   903  009D                     	;# 
   904  009E                     	;# 
   905  010C                     	;# 
   906  010D                     	;# 
   907  010E                     	;# 
   908  0116                     	;# 
   909  0117                     	;# 
   910  011D                     	;# 
   911  018C                     	;# 
   912  018D                     	;# 
   913  018E                     	;# 
   914  0191                     	;# 
   915  0191                     	;# 
   916  0192                     	;# 
   917  0193                     	;# 
   918  0193                     	;# 
   919  0194                     	;# 
   920  0195                     	;# 
   921  0196                     	;# 
   922  0197                     	;# 
   923  0199                     	;# 
   924  019A                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019C                     	;# 
   930  019C                     	;# 
   931  019D                     	;# 
   932  019E                     	;# 
   933  019F                     	;# 
   934  020D                     	;# 
   935  0210                     	;# 
   936  0211                     	;# 
   937  0211                     	;# 
   938  0212                     	;# 
   939  0212                     	;# 
   940  0213                     	;# 
   941  0213                     	;# 
   942  0214                     	;# 
   943  0214                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0216                     	;# 
   948  0216                     	;# 
   949  0217                     	;# 
   950  0217                     	;# 
   951  0291                     	;# 
   952  0291                     	;# 
   953  0292                     	;# 
   954  0293                     	;# 
   955  0298                     	;# 
   956  0298                     	;# 
   957  0299                     	;# 
   958  029A                     	;# 
   959  0394                     	;# 
   960  0395                     	;# 
   961  0396                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0008                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  0010                     	;# 
   989  0011                     	;# 
   990  0012                     	;# 
   991  0015                     	;# 
   992  0016                     	;# 
   993  0016                     	;# 
   994  0017                     	;# 
   995  0018                     	;# 
   996  0019                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001C                     	;# 
  1000  008C                     	;# 
  1001  008D                     	;# 
  1002  008E                     	;# 
  1003  0090                     	;# 
  1004  0091                     	;# 
  1005  0092                     	;# 
  1006  0095                     	;# 
  1007  0096                     	;# 
  1008  0097                     	;# 
  1009  0099                     	;# 
  1010  009A                     	;# 
  1011  009B                     	;# 
  1012  009B                     	;# 
  1013  009C                     	;# 
  1014  009D                     	;# 
  1015  009E                     	;# 
  1016  010C                     	;# 
  1017  010D                     	;# 
  1018  010E                     	;# 
  1019  0116                     	;# 
  1020  0117                     	;# 
  1021  011D                     	;# 
  1022  018C                     	;# 
  1023  018D                     	;# 
  1024  018E                     	;# 
  1025  0191                     	;# 
  1026  0191                     	;# 
  1027  0192                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0194                     	;# 
  1031  0195                     	;# 
  1032  0196                     	;# 
  1033  0197                     	;# 
  1034  0199                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019C                     	;# 
  1041  019C                     	;# 
  1042  019D                     	;# 
  1043  019E                     	;# 
  1044  019F                     	;# 
  1045  020D                     	;# 
  1046  0210                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0216                     	;# 
  1059  0216                     	;# 
  1060  0217                     	;# 
  1061  0217                     	;# 
  1062  0291                     	;# 
  1063  0291                     	;# 
  1064  0292                     	;# 
  1065  0293                     	;# 
  1066  0298                     	;# 
  1067  0298                     	;# 
  1068  0299                     	;# 
  1069  029A                     	;# 
  1070  0394                     	;# 
  1071  0395                     	;# 
  1072  0396                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0010                     	;# 
  1100  0011                     	;# 
  1101  0012                     	;# 
  1102  0015                     	;# 
  1103  0016                     	;# 
  1104  0016                     	;# 
  1105  0017                     	;# 
  1106  0018                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  008C                     	;# 
  1112  008D                     	;# 
  1113  008E                     	;# 
  1114  0090                     	;# 
  1115  0091                     	;# 
  1116  0092                     	;# 
  1117  0095                     	;# 
  1118  0096                     	;# 
  1119  0097                     	;# 
  1120  0099                     	;# 
  1121  009A                     	;# 
  1122  009B                     	;# 
  1123  009B                     	;# 
  1124  009C                     	;# 
  1125  009D                     	;# 
  1126  009E                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  0116                     	;# 
  1131  0117                     	;# 
  1132  011D                     	;# 
  1133  018C                     	;# 
  1134  018D                     	;# 
  1135  018E                     	;# 
  1136  0191                     	;# 
  1137  0191                     	;# 
  1138  0192                     	;# 
  1139  0193                     	;# 
  1140  0193                     	;# 
  1141  0194                     	;# 
  1142  0195                     	;# 
  1143  0196                     	;# 
  1144  0197                     	;# 
  1145  0199                     	;# 
  1146  019A                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019B                     	;# 
  1151  019C                     	;# 
  1152  019C                     	;# 
  1153  019D                     	;# 
  1154  019E                     	;# 
  1155  019F                     	;# 
  1156  020D                     	;# 
  1157  0210                     	;# 
  1158  0211                     	;# 
  1159  0211                     	;# 
  1160  0212                     	;# 
  1161  0212                     	;# 
  1162  0213                     	;# 
  1163  0213                     	;# 
  1164  0214                     	;# 
  1165  0214                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0215                     	;# 
  1169  0216                     	;# 
  1170  0216                     	;# 
  1171  0217                     	;# 
  1172  0217                     	;# 
  1173  0291                     	;# 
  1174  0291                     	;# 
  1175  0292                     	;# 
  1176  0293                     	;# 
  1177  0298                     	;# 
  1178  0298                     	;# 
  1179  0299                     	;# 
  1180  029A                     	;# 
  1181  0394                     	;# 
  1182  0395                     	;# 
  1183  0396                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  000E                     	;# 
  1210  0010                     	;# 
  1211  0011                     	;# 
  1212  0012                     	;# 
  1213  0015                     	;# 
  1214  0016                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001B                     	;# 
  1221  001C                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  008E                     	;# 
  1225  0090                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0095                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0099                     	;# 
  1232  009A                     	;# 
  1233  009B                     	;# 
  1234  009B                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009E                     	;# 
  1238  010C                     	;# 
  1239  010D                     	;# 
  1240  010E                     	;# 
  1241  0116                     	;# 
  1242  0117                     	;# 
  1243  011D                     	;# 
  1244  018C                     	;# 
  1245  018D                     	;# 
  1246  018E                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0194                     	;# 
  1253  0195                     	;# 
  1254  0196                     	;# 
  1255  0197                     	;# 
  1256  0199                     	;# 
  1257  019A                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019C                     	;# 
  1263  019C                     	;# 
  1264  019D                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  020D                     	;# 
  1268  0210                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0214                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0216                     	;# 
  1281  0216                     	;# 
  1282  0217                     	;# 
  1283  0217                     	;# 
  1284  0291                     	;# 
  1285  0291                     	;# 
  1286  0292                     	;# 
  1287  0293                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  029A                     	;# 
  1292  0394                     	;# 
  1293  0395                     	;# 
  1294  0396                     	;# 
  1295  0FE4                     	;# 
  1296  0FE5                     	;# 
  1297  0FE6                     	;# 
  1298  0FE7                     	;# 
  1299  0FE8                     	;# 
  1300  0FE9                     	;# 
  1301  0FEA                     	;# 
  1302  0FEB                     	;# 
  1303  0FED                     	;# 
  1304  0FEE                     	;# 
  1305  0FEF                     	;# 
  1306  0000                     	;# 
  1307  0001                     	;# 
  1308  0002                     	;# 
  1309  0003                     	;# 
  1310  0004                     	;# 
  1311  0005                     	;# 
  1312  0006                     	;# 
  1313  0007                     	;# 
  1314  0008                     	;# 
  1315  0009                     	;# 
  1316  000A                     	;# 
  1317  000B                     	;# 
  1318  000C                     	;# 
  1319  000D                     	;# 
  1320  000E                     	;# 
  1321  0010                     	;# 
  1322  0011                     	;# 
  1323  0012                     	;# 
  1324  0015                     	;# 
  1325  0016                     	;# 
  1326  0016                     	;# 
  1327  0017                     	;# 
  1328  0018                     	;# 
  1329  0019                     	;# 
  1330  001A                     	;# 
  1331  001B                     	;# 
  1332  001C                     	;# 
  1333  008C                     	;# 
  1334  008D                     	;# 
  1335  008E                     	;# 
  1336  0090                     	;# 
  1337  0091                     	;# 
  1338  0092                     	;# 
  1339  0095                     	;# 
  1340  0096                     	;# 
  1341  0097                     	;# 
  1342  0099                     	;# 
  1343  009A                     	;# 
  1344  009B                     	;# 
  1345  009B                     	;# 
  1346  009C                     	;# 
  1347  009D                     	;# 
  1348  009E                     	;# 
  1349  010C                     	;# 
  1350  010D                     	;# 
  1351  010E                     	;# 
  1352  0116                     	;# 
  1353  0117                     	;# 
  1354  011D                     	;# 
  1355  018C                     	;# 
  1356  018D                     	;# 
  1357  018E                     	;# 
  1358  0191                     	;# 
  1359  0191                     	;# 
  1360  0192                     	;# 
  1361  0193                     	;# 
  1362  0193                     	;# 
  1363  0194                     	;# 
  1364  0195                     	;# 
  1365  0196                     	;# 
  1366  0197                     	;# 
  1367  0199                     	;# 
  1368  019A                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019B                     	;# 
  1373  019C                     	;# 
  1374  019C                     	;# 
  1375  019D                     	;# 
  1376  019E                     	;# 
  1377  019F                     	;# 
  1378  020D                     	;# 
  1379  0210                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  0212                     	;# 
  1383  0212                     	;# 
  1384  0213                     	;# 
  1385  0213                     	;# 
  1386  0214                     	;# 
  1387  0214                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0215                     	;# 
  1391  0216                     	;# 
  1392  0216                     	;# 
  1393  0217                     	;# 
  1394  0217                     	;# 
  1395  0291                     	;# 
  1396  0291                     	;# 
  1397  0292                     	;# 
  1398  0293                     	;# 
  1399  0298                     	;# 
  1400  0298                     	;# 
  1401  0299                     	;# 
  1402  029A                     	;# 
  1403  0394                     	;# 
  1404  0395                     	;# 
  1405  0396                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000D                     	;# 
  1431  000E                     	;# 
  1432  0010                     	;# 
  1433  0011                     	;# 
  1434  0012                     	;# 
  1435  0015                     	;# 
  1436  0016                     	;# 
  1437  0016                     	;# 
  1438  0017                     	;# 
  1439  0018                     	;# 
  1440  0019                     	;# 
  1441  001A                     	;# 
  1442  001B                     	;# 
  1443  001C                     	;# 
  1444  008C                     	;# 
  1445  008D                     	;# 
  1446  008E                     	;# 
  1447  0090                     	;# 
  1448  0091                     	;# 
  1449  0092                     	;# 
  1450  0095                     	;# 
  1451  0096                     	;# 
  1452  0097                     	;# 
  1453  0099                     	;# 
  1454  009A                     	;# 
  1455  009B                     	;# 
  1456  009B                     	;# 
  1457  009C                     	;# 
  1458  009D                     	;# 
  1459  009E                     	;# 
  1460  010C                     	;# 
  1461  010D                     	;# 
  1462  010E                     	;# 
  1463  0116                     	;# 
  1464  0117                     	;# 
  1465  011D                     	;# 
  1466  018C                     	;# 
  1467  018D                     	;# 
  1468  018E                     	;# 
  1469  0191                     	;# 
  1470  0191                     	;# 
  1471  0192                     	;# 
  1472  0193                     	;# 
  1473  0193                     	;# 
  1474  0194                     	;# 
  1475  0195                     	;# 
  1476  0196                     	;# 
  1477  0197                     	;# 
  1478  0199                     	;# 
  1479  019A                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019B                     	;# 
  1484  019C                     	;# 
  1485  019C                     	;# 
  1486  019D                     	;# 
  1487  019E                     	;# 
  1488  019F                     	;# 
  1489  020D                     	;# 
  1490  0210                     	;# 
  1491  0211                     	;# 
  1492  0211                     	;# 
  1493  0212                     	;# 
  1494  0212                     	;# 
  1495  0213                     	;# 
  1496  0213                     	;# 
  1497  0214                     	;# 
  1498  0214                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0215                     	;# 
  1502  0216                     	;# 
  1503  0216                     	;# 
  1504  0217                     	;# 
  1505  0217                     	;# 
  1506  0291                     	;# 
  1507  0291                     	;# 
  1508  0292                     	;# 
  1509  0293                     	;# 
  1510  0298                     	;# 
  1511  0298                     	;# 
  1512  0299                     	;# 
  1513  029A                     	;# 
  1514  0394                     	;# 
  1515  0395                     	;# 
  1516  0396                     	;# 
  1517  0FE4                     	;# 
  1518  0FE5                     	;# 
  1519  0FE6                     	;# 
  1520  0FE7                     	;# 
  1521  0FE8                     	;# 
  1522  0FE9                     	;# 
  1523  0FEA                     	;# 
  1524  0FEB                     	;# 
  1525  0FED                     	;# 
  1526  0FEE                     	;# 
  1527  0FEF                     	;# 
  1528  0000                     	;# 
  1529  0001                     	;# 
  1530  0002                     	;# 
  1531  0003                     	;# 
  1532  0004                     	;# 
  1533  0005                     	;# 
  1534  0006                     	;# 
  1535  0007                     	;# 
  1536  0008                     	;# 
  1537  0009                     	;# 
  1538  000A                     	;# 
  1539  000B                     	;# 
  1540  000C                     	;# 
  1541  000D                     	;# 
  1542  000E                     	;# 
  1543  0010                     	;# 
  1544  0011                     	;# 
  1545  0012                     	;# 
  1546  0015                     	;# 
  1547  0016                     	;# 
  1548  0016                     	;# 
  1549  0017                     	;# 
  1550  0018                     	;# 
  1551  0019                     	;# 
  1552  001A                     	;# 
  1553  001B                     	;# 
  1554  001C                     	;# 
  1555  008C                     	;# 
  1556  008D                     	;# 
  1557  008E                     	;# 
  1558  0090                     	;# 
  1559  0091                     	;# 
  1560  0092                     	;# 
  1561  0095                     	;# 
  1562  0096                     	;# 
  1563  0097                     	;# 
  1564  0099                     	;# 
  1565  009A                     	;# 
  1566  009B                     	;# 
  1567  009B                     	;# 
  1568  009C                     	;# 
  1569  009D                     	;# 
  1570  009E                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  0116                     	;# 
  1575  0117                     	;# 
  1576  011D                     	;# 
  1577  018C                     	;# 
  1578  018D                     	;# 
  1579  018E                     	;# 
  1580  0191                     	;# 
  1581  0191                     	;# 
  1582  0192                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0194                     	;# 
  1586  0195                     	;# 
  1587  0196                     	;# 
  1588  0197                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019D                     	;# 
  1598  019E                     	;# 
  1599  019F                     	;# 
  1600  020D                     	;# 
  1601  0210                     	;# 
  1602  0211                     	;# 
  1603  0211                     	;# 
  1604  0212                     	;# 
  1605  0212                     	;# 
  1606  0213                     	;# 
  1607  0213                     	;# 
  1608  0214                     	;# 
  1609  0214                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0215                     	;# 
  1613  0216                     	;# 
  1614  0216                     	;# 
  1615  0217                     	;# 
  1616  0217                     	;# 
  1617  0291                     	;# 
  1618  0291                     	;# 
  1619  0292                     	;# 
  1620  0293                     	;# 
  1621  0298                     	;# 
  1622  0298                     	;# 
  1623  0299                     	;# 
  1624  029A                     	;# 
  1625  0394                     	;# 
  1626  0395                     	;# 
  1627  0396                     	;# 
  1628  0FE4                     	;# 
  1629  0FE5                     	;# 
  1630  0FE6                     	;# 
  1631  0FE7                     	;# 
  1632  0FE8                     	;# 
  1633  0FE9                     	;# 
  1634  0FEA                     	;# 
  1635  0FEB                     	;# 
  1636  0FED                     	;# 
  1637  0FEE                     	;# 
  1638  0FEF                     	;# 
  1639  0000                     	;# 
  1640  0001                     	;# 
  1641  0002                     	;# 
  1642  0003                     	;# 
  1643  0004                     	;# 
  1644  0005                     	;# 
  1645  0006                     	;# 
  1646  0007                     	;# 
  1647  0008                     	;# 
  1648  0009                     	;# 
  1649  000A                     	;# 
  1650  000B                     	;# 
  1651  000C                     	;# 
  1652  000D                     	;# 
  1653  000E                     	;# 
  1654  0010                     	;# 
  1655  0011                     	;# 
  1656  0012                     	;# 
  1657  0015                     	;# 
  1658  0016                     	;# 
  1659  0016                     	;# 
  1660  0017                     	;# 
  1661  0018                     	;# 
  1662  0019                     	;# 
  1663  001A                     	;# 
  1664  001B                     	;# 
  1665  001C                     	;# 
  1666  008C                     	;# 
  1667  008D                     	;# 
  1668  008E                     	;# 
  1669  0090                     	;# 
  1670  0091                     	;# 
  1671  0092                     	;# 
  1672  0095                     	;# 
  1673  0096                     	;# 
  1674  0097                     	;# 
  1675  0099                     	;# 
  1676  009A                     	;# 
  1677  009B                     	;# 
  1678  009B                     	;# 
  1679  009C                     	;# 
  1680  009D                     	;# 
  1681  009E                     	;# 
  1682  010C                     	;# 
  1683  010D                     	;# 
  1684  010E                     	;# 
  1685  0116                     	;# 
  1686  0117                     	;# 
  1687  011D                     	;# 
  1688  018C                     	;# 
  1689  018D                     	;# 
  1690  018E                     	;# 
  1691  0191                     	;# 
  1692  0191                     	;# 
  1693  0192                     	;# 
  1694  0193                     	;# 
  1695  0193                     	;# 
  1696  0194                     	;# 
  1697  0195                     	;# 
  1698  0196                     	;# 
  1699  0197                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019B                     	;# 
  1706  019C                     	;# 
  1707  019C                     	;# 
  1708  019D                     	;# 
  1709  019E                     	;# 
  1710  019F                     	;# 
  1711  020D                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0213                     	;# 
  1719  0214                     	;# 
  1720  0214                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0215                     	;# 
  1724  0216                     	;# 
  1725  0216                     	;# 
  1726  0217                     	;# 
  1727  0217                     	;# 
  1728  0291                     	;# 
  1729  0291                     	;# 
  1730  0292                     	;# 
  1731  0293                     	;# 
  1732  0298                     	;# 
  1733  0298                     	;# 
  1734  0299                     	;# 
  1735  029A                     	;# 
  1736  0394                     	;# 
  1737  0395                     	;# 
  1738  0396                     	;# 
  1739  0FE4                     	;# 
  1740  0FE5                     	;# 
  1741  0FE6                     	;# 
  1742  0FE7                     	;# 
  1743  0FE8                     	;# 
  1744  0FE9                     	;# 
  1745  0FEA                     	;# 
  1746  0FEB                     	;# 
  1747  0FED                     	;# 
  1748  0FEE                     	;# 
  1749  0FEF                     	;# 
  1750  0000                     	;# 
  1751  0001                     	;# 
  1752  0002                     	;# 
  1753  0003                     	;# 
  1754  0004                     	;# 
  1755  0005                     	;# 
  1756  0006                     	;# 
  1757  0007                     	;# 
  1758  0008                     	;# 
  1759  0009                     	;# 
  1760  000A                     	;# 
  1761  000B                     	;# 
  1762  000C                     	;# 
  1763  000D                     	;# 
  1764  000E                     	;# 
  1765  0010                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0015                     	;# 
  1769  0016                     	;# 
  1770  0016                     	;# 
  1771  0017                     	;# 
  1772  0018                     	;# 
  1773  0019                     	;# 
  1774  001A                     	;# 
  1775  001B                     	;# 
  1776  001C                     	;# 
  1777  008C                     	;# 
  1778  008D                     	;# 
  1779  008E                     	;# 
  1780  0090                     	;# 
  1781  0091                     	;# 
  1782  0092                     	;# 
  1783  0095                     	;# 
  1784  0096                     	;# 
  1785  0097                     	;# 
  1786  0099                     	;# 
  1787  009A                     	;# 
  1788  009B                     	;# 
  1789  009B                     	;# 
  1790  009C                     	;# 
  1791  009D                     	;# 
  1792  009E                     	;# 
  1793  010C                     	;# 
  1794  010D                     	;# 
  1795  010E                     	;# 
  1796  0116                     	;# 
  1797  0117                     	;# 
  1798  011D                     	;# 
  1799  018C                     	;# 
  1800  018D                     	;# 
  1801  018E                     	;# 
  1802  0191                     	;# 
  1803  0191                     	;# 
  1804  0192                     	;# 
  1805  0193                     	;# 
  1806  0193                     	;# 
  1807  0194                     	;# 
  1808  0195                     	;# 
  1809  0196                     	;# 
  1810  0197                     	;# 
  1811  0199                     	;# 
  1812  019A                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019B                     	;# 
  1817  019C                     	;# 
  1818  019C                     	;# 
  1819  019D                     	;# 
  1820  019E                     	;# 
  1821  019F                     	;# 
  1822  020D                     	;# 
  1823  0210                     	;# 
  1824  0211                     	;# 
  1825  0211                     	;# 
  1826  0212                     	;# 
  1827  0212                     	;# 
  1828  0213                     	;# 
  1829  0213                     	;# 
  1830  0214                     	;# 
  1831  0214                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0215                     	;# 
  1835  0216                     	;# 
  1836  0216                     	;# 
  1837  0217                     	;# 
  1838  0217                     	;# 
  1839  0291                     	;# 
  1840  0291                     	;# 
  1841  0292                     	;# 
  1842  0293                     	;# 
  1843  0298                     	;# 
  1844  0298                     	;# 
  1845  0299                     	;# 
  1846  029A                     	;# 
  1847  0394                     	;# 
  1848  0395                     	;# 
  1849  0396                     	;# 
  1850  0FE4                     	;# 
  1851  0FE5                     	;# 
  1852  0FE6                     	;# 
  1853  0FE7                     	;# 
  1854  0FE8                     	;# 
  1855  0FE9                     	;# 
  1856  0FEA                     	;# 
  1857  0FEB                     	;# 
  1858  0FED                     	;# 
  1859  0FEE                     	;# 
  1860  0FEF                     	;# 
  1861  0000                     	;# 
  1862  0001                     	;# 
  1863  0002                     	;# 
  1864  0003                     	;# 
  1865  0004                     	;# 
  1866  0005                     	;# 
  1867  0006                     	;# 
  1868  0007                     	;# 
  1869  0008                     	;# 
  1870  0009                     	;# 
  1871  000A                     	;# 
  1872  000B                     	;# 
  1873  000C                     	;# 
  1874  000D                     	;# 
  1875  000E                     	;# 
  1876  0010                     	;# 
  1877  0011                     	;# 
  1878  0012                     	;# 
  1879  0015                     	;# 
  1880  0016                     	;# 
  1881  0016                     	;# 
  1882  0017                     	;# 
  1883  0018                     	;# 
  1884  0019                     	;# 
  1885  001A                     	;# 
  1886  001B                     	;# 
  1887  001C                     	;# 
  1888  008C                     	;# 
  1889  008D                     	;# 
  1890  008E                     	;# 
  1891  0090                     	;# 
  1892  0091                     	;# 
  1893  0092                     	;# 
  1894  0095                     	;# 
  1895  0096                     	;# 
  1896  0097                     	;# 
  1897  0099                     	;# 
  1898  009A                     	;# 
  1899  009B                     	;# 
  1900  009B                     	;# 
  1901  009C                     	;# 
  1902  009D                     	;# 
  1903  009E                     	;# 
  1904  010C                     	;# 
  1905  010D                     	;# 
  1906  010E                     	;# 
  1907  0116                     	;# 
  1908  0117                     	;# 
  1909  011D                     	;# 
  1910  018C                     	;# 
  1911  018D                     	;# 
  1912  018E                     	;# 
  1913  0191                     	;# 
  1914  0191                     	;# 
  1915  0192                     	;# 
  1916  0193                     	;# 
  1917  0193                     	;# 
  1918  0194                     	;# 
  1919  0195                     	;# 
  1920  0196                     	;# 
  1921  0197                     	;# 
  1922  0199                     	;# 
  1923  019A                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019C                     	;# 
  1929  019C                     	;# 
  1930  019D                     	;# 
  1931  019E                     	;# 
  1932  019F                     	;# 
  1933  020D                     	;# 
  1934  0210                     	;# 
  1935  0211                     	;# 
  1936  0211                     	;# 
  1937  0212                     	;# 
  1938  0212                     	;# 
  1939  0213                     	;# 
  1940  0213                     	;# 
  1941  0214                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0216                     	;# 
  1947  0216                     	;# 
  1948  0217                     	;# 
  1949  0217                     	;# 
  1950  0291                     	;# 
  1951  0291                     	;# 
  1952  0292                     	;# 
  1953  0293                     	;# 
  1954  0298                     	;# 
  1955  0298                     	;# 
  1956  0299                     	;# 
  1957  029A                     	;# 
  1958  0394                     	;# 
  1959  0395                     	;# 
  1960  0396                     	;# 
  1961  0FE4                     	;# 
  1962  0FE5                     	;# 
  1963  0FE6                     	;# 
  1964  0FE7                     	;# 
  1965  0FE8                     	;# 
  1966  0FE9                     	;# 
  1967  0FEA                     	;# 
  1968  0FEB                     	;# 
  1969  0FED                     	;# 
  1970  0FEE                     	;# 
  1971  0FEF                     	;# 
  1972  0000                     	;# 
  1973  0001                     	;# 
  1974  0002                     	;# 
  1975  0003                     	;# 
  1976  0004                     	;# 
  1977  0005                     	;# 
  1978  0006                     	;# 
  1979  0007                     	;# 
  1980  0008                     	;# 
  1981  0009                     	;# 
  1982  000A                     	;# 
  1983  000B                     	;# 
  1984  000C                     	;# 
  1985  000D                     	;# 
  1986  000E                     	;# 
  1987  0010                     	;# 
  1988  0011                     	;# 
  1989  0012                     	;# 
  1990  0015                     	;# 
  1991  0016                     	;# 
  1992  0016                     	;# 
  1993  0017                     	;# 
  1994  0018                     	;# 
  1995  0019                     	;# 
  1996  001A                     	;# 
  1997  001B                     	;# 
  1998  001C                     	;# 
  1999  008C                     	;# 
  2000  008D                     	;# 
  2001  008E                     	;# 
  2002  0090                     	;# 
  2003  0091                     	;# 
  2004  0092                     	;# 
  2005  0095                     	;# 
  2006  0096                     	;# 
  2007  0097                     	;# 
  2008  0099                     	;# 
  2009  009A                     	;# 
  2010  009B                     	;# 
  2011  009B                     	;# 
  2012  009C                     	;# 
  2013  009D                     	;# 
  2014  009E                     	;# 
  2015  010C                     	;# 
  2016  010D                     	;# 
  2017  010E                     	;# 
  2018  0116                     	;# 
  2019  0117                     	;# 
  2020  011D                     	;# 
  2021  018C                     	;# 
  2022  018D                     	;# 
  2023  018E                     	;# 
  2024  0191                     	;# 
  2025  0191                     	;# 
  2026  0192                     	;# 
  2027  0193                     	;# 
  2028  0193                     	;# 
  2029  0194                     	;# 
  2030  0195                     	;# 
  2031  0196                     	;# 
  2032  0197                     	;# 
  2033  0199                     	;# 
  2034  019A                     	;# 
  2035  019B                     	;# 
  2036  019B                     	;# 
  2037  019B                     	;# 
  2038  019B                     	;# 
  2039  019C                     	;# 
  2040  019C                     	;# 
  2041  019D                     	;# 
  2042  019E                     	;# 
  2043  019F                     	;# 
  2044  020D                     	;# 
  2045  0210                     	;# 
  2046  0211                     	;# 
  2047  0211                     	;# 
  2048  0212                     	;# 
  2049  0212                     	;# 
  2050  0213                     	;# 
  2051  0213                     	;# 
  2052  0214                     	;# 
  2053  0214                     	;# 
  2054  0215                     	;# 
  2055  0215                     	;# 
  2056  0215                     	;# 
  2057  0216                     	;# 
  2058  0216                     	;# 
  2059  0217                     	;# 
  2060  0217                     	;# 
  2061  0291                     	;# 
  2062  0291                     	;# 
  2063  0292                     	;# 
  2064  0293                     	;# 
  2065  0298                     	;# 
  2066  0298                     	;# 
  2067  0299                     	;# 
  2068  029A                     	;# 
  2069  0394                     	;# 
  2070  0395                     	;# 
  2071  0396                     	;# 
  2072  0FE4                     	;# 
  2073  0FE5                     	;# 
  2074  0FE6                     	;# 
  2075  0FE7                     	;# 
  2076  0FE8                     	;# 
  2077  0FE9                     	;# 
  2078  0FEA                     	;# 
  2079  0FEB                     	;# 
  2080  0FED                     	;# 
  2081  0FEE                     	;# 
  2082  0FEF                     	;# 
  2083                           
  2084                           	psect	idataBANK1
  2085  087C                     __pidataBANK1:	
  2086                           
  2087                           ;initializer for Bq32k_Time_Init@F2018
  2088  087C  3401               	retlw	1
  2089  087D  3450               	retlw	80
  2090  087E  3423               	retlw	35
  2091  087F  3402               	retlw	2
  2092  0880  3408               	retlw	8
  2093  0881  3407               	retlw	7
  2094  0882  3416               	retlw	22
  2095  0883  3400               	retlw	0
  2096  0884  3400               	retlw	0
  2097  0885  3400               	retlw	0
  2098                           
  2099                           	psect	stringtext
  2100  1000                     __pstringtext:	
  2101  1000                     _Dis_TAB:	
  2102  1000  34D7               	retlw	215
  2103  1001  3450               	retlw	80
  2104  1002  34B5               	retlw	181
  2105  1003  34F1               	retlw	241
  2106  1004  3472               	retlw	114
  2107  1005  34E3               	retlw	227
  2108  1006  34E7               	retlw	231
  2109  1007  3451               	retlw	81
  2110  1008  34F7               	retlw	247
  2111  1009  34F3               	retlw	243
  2112  100A  3477               	retlw	119
  2113  100B  34E6               	retlw	230
  2114  100C  3487               	retlw	135
  2115  100D  34F4               	retlw	244
  2116  100E  34A7               	retlw	167
  2117  100F  3427               	retlw	39
  2118  1010  3457               	retlw	87
  2119  1011  3420               	retlw	32
  2120  1012  3420               	retlw	32
  2121  1013  3420               	retlw	32
  2122  1014  3420               	retlw	32
  2123  1015                     __end_of_Dis_TAB:	
  2124                           
  2125                           	psect	nvBANK1
  2126  00EF                     __pnvBANK1:	
  2127  00EF                     _timer0ReloadVal:	
  2128  00EF                     	ds	1
  2129  000B                     _INTCONbits	set	11
  2130  0011                     _PIR1bits	set	17
  2131  0015                     _TMR0	set	21
  2132  0067                     _RA7	set	103
  2133  0069                     _RB1	set	105
  2134  006B                     _RB3	set	107
  2135  006D                     _RB5	set	109
  2136  009D                     _ADCON0	set	157
  2137  009D                     _ADCON0bits	set	157
  2138  009E                     _ADCON1	set	158
  2139  009C                     _ADRESH	set	156
  2140  009B                     _ADRESL	set	155
  2141  0095                     _OPTION_REG	set	149
  2142  0095                     _OPTION_REGbits	set	149
  2143  0099                     _OSCCON	set	153
  2144  009A                     _OSCSTAT	set	154
  2145  008C                     _TRISA	set	140
  2146  008D                     _TRISB	set	141
  2147  008E                     _TRISC	set	142
  2148  04B8                     _SWDTEN	set	1208
  2149  0469                     _TRISB1	set	1129
  2150  046B                     _TRISB3	set	1131
  2151  04B9                     _WDTPS0	set	1209
  2152  04BA                     _WDTPS1	set	1210
  2153  04BB                     _WDTPS2	set	1211
  2154  04BC                     _WDTPS3	set	1212
  2155  04BD                     _WDTPS4	set	1213
  2156  011D                     _APFCON	set	285
  2157  0117                     _FVRCON	set	279
  2158  0117                     _FVRCONbits	set	279
  2159  010C                     _LATA	set	268
  2160  010D                     _LATB	set	269
  2161  010E                     _LATC	set	270
  2162  0860                     _LATA0	set	2144
  2163  0861                     _LATA1	set	2145
  2164  0862                     _LATA2	set	2146
  2165  0863                     _LATA3	set	2147
  2166  0864                     _LATA4	set	2148
  2167  0865                     _LATA5	set	2149
  2168  0868                     _LATB0	set	2152
  2169  0869                     _LATB1	set	2153
  2170  0870                     _LATC0	set	2160
  2171  0871                     _LATC1	set	2161
  2172  0872                     _LATC2	set	2162
  2173  018C                     _ANSELA	set	396
  2174  018D                     _ANSELB	set	397
  2175  018E                     _ANSELC	set	398
  2176  019F                     _BAUDCON	set	415
  2177  0192                     _PMADRH	set	402
  2178  0191                     _PMADRL	set	401
  2179  0195                     _PMCON1bits	set	405
  2180  0196                     _PMCON2	set	406
  2181  0194                     _PMDATH	set	404
  2182  0193                     _PMDATL	set	403
  2183  0199                     _RCREG	set	409
  2184  019D                     _RCSTA	set	413
  2185  019D                     _RCSTAbits	set	413
  2186  019C                     _SPBRGH	set	412
  2187  019B                     _SPBRGL	set	411
  2188  019A                     _TXREG	set	410
  2189  019E                     _TXSTA	set	414
  2190  0212                     _SSP1ADD	set	530
  2191  0215                     _SSP1CON1	set	533
  2192  0215                     _SSP1CON1bits	set	533
  2193  0214                     _SSP1STAT	set	532
  2194  0214                     _SSP1STATbits	set	532
  2195  0211                     _SSPBUF	set	529
  2196  020D                     _WPUB	set	525
  2197  0210                     _WPUE	set	528
  2198                           
  2199                           ; #config settings
  2200  0000                     
  2201                           	psect	cinit
  2202  0015                     start_initialization:	
  2203  0015                     __initialization:	
  2204                           
  2205                           ; Clear objects allocated to COMMON
  2206  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2207  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2208  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2209                           
  2210                           ; Clear objects allocated to BANK0
  2211  0018  3065               	movlw	low __pbssBANK0
  2212  0019  0084               	movwf	4
  2213  001A  3000               	movlw	high __pbssBANK0
  2214  001B  0085               	movwf	5
  2215  001C  3009               	movlw	9
  2216  001D  3188  205D  3180   	fcall	clear_ram0
  2217                           
  2218                           ; Clear objects allocated to BANK1
  2219  0020  30A0               	movlw	low __pbssBANK1
  2220  0021  0084               	movwf	4
  2221  0022  3000               	movlw	high __pbssBANK1
  2222  0023  0085               	movwf	5
  2223  0024  3045               	movlw	69
  2224  0025  3188  205D  3180   	fcall	clear_ram0
  2225                           
  2226                           ; Clear objects allocated to BANK2
  2227  0028  3020               	movlw	low __pbssBANK2
  2228  0029  0084               	movwf	4
  2229  002A  3001               	movlw	high __pbssBANK2
  2230  002B  0085               	movwf	5
  2231  002C  3040               	movlw	64
  2232  002D  3188  205D  3180   	fcall	clear_ram0
  2233                           
  2234                           ; Initialize objects allocated to BANK1
  2235  0030  307C               	movlw	low __pidataBANK1
  2236  0031  0084               	movwf	4
  2237  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2238  0033  0085               	movwf	5
  2239  0034  30E5               	movlw	low __pdataBANK1
  2240  0035  0086               	movwf	6
  2241  0036  3000               	movlw	high __pdataBANK1
  2242  0037  0087               	movwf	7
  2243  0038  300A               	movlw	10
  2244  0039  3188  2057         	fcall	init_ram
  2245  003B                     end_of_initialization:	
  2246                           ;End of C runtime variable initialization code
  2247                           
  2248  003B                     __end_of__initialization:	
  2249  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2250  003C  0020               	movlb	0
  2251  003D  3183  2BA9         	ljmp	_main	;jump to C main() function
  2252                           
  2253                           	psect	bssCOMMON
  2254  0078                     __pbssCOMMON:	
  2255  0078                     _CH2_temperature:	
  2256  0078                     	ds	2
  2257  007A                     _uch_cr0:	
  2258  007A                     	ds	1
  2259                           
  2260                           	psect	bssBANK0
  2261  0065                     __pbssBANK0:	
  2262  0065                     _temperature_value:	
  2263  0065                     	ds	4
  2264  0069                     _CH1_temperature:	
  2265  0069                     	ds	2
  2266  006B                     _Record_flag:	
  2267  006B                     	ds	1
  2268  006C                     _temperature_decimal:	
  2269  006C                     	ds	1
  2270  006D                     _time_count:	
  2271  006D                     	ds	1
  2272                           
  2273                           	psect	bssBANK1
  2274  00A0                     __pbssBANK1:	
  2275  00A0                     Two_Display@F2123:	
  2276  00A0                     	ds	4
  2277  00A4                     err_Display@F2126:	
  2278  00A4                     	ds	4
  2279  00A8                     time_Display@F2129:	
  2280  00A8                     	ds	4
  2281  00AC                     TMR0_ISR@CountCallBack:	
  2282  00AC                     	ds	2
  2283  00AE                     _Cur_Save_Index:	
  2284  00AE                     	ds	2
  2285  00B0                     _Cur_temperature:	
  2286  00B0                     	ds	2
  2287  00B2                     _temperature_int:	
  2288  00B2                     	ds	2
  2289  00B4                     _CH1_state:	
  2290  00B4                     	ds	1
  2291  00B5                     _CH2_state:	
  2292  00B5                     	ds	1
  2293  00B6                     _Cur_temperature_time_ch1:	
  2294  00B6                     	ds	1
  2295  00B7                     _Cur_temperature_time_ch2:	
  2296  00B7                     	ds	1
  2297  00B8                     _LongPressSec:	
  2298  00B8                     	ds	1
  2299  00B9                     _MAX31856Sec:	
  2300  00B9                     	ds	1
  2301  00BA                     _temperature_sign:	
  2302  00BA                     	ds	1
  2303  00BB                     _tmr_flag:	
  2304  00BB                     	ds	1
  2305  00BC                     _uch_cjth:	
  2306  00BC                     	ds	1
  2307  00BD                     _uch_cjtl:	
  2308  00BD                     	ds	1
  2309  00BE                     _uch_cr1:	
  2310  00BE                     	ds	1
  2311  00BF                     _uch_ltcbh:	
  2312  00BF                     	ds	1
  2313  00C0                     _uch_ltcbl:	
  2314  00C0                     	ds	1
  2315  00C1                     _uch_ltcbm:	
  2316  00C1                     	ds	1
  2317  00C2                     _uch_mask:	
  2318  00C2                     	ds	1
  2319  00C3                     _uch_sr:	
  2320  00C3                     	ds	1
  2321  00C4                     _uch_reg:	
  2322  00C4                     	ds	8
  2323  00CC                     _rtc_save_ch1:	
  2324  00CC                     	ds	7
  2325  00D3                     _rtc_save_ch2:	
  2326  00D3                     	ds	7
  2327  00DA                     _rtc_tm:	
  2328  00DA                     	ds	7
  2329  00E1                     _display_buff:	
  2330  00E1                     	ds	4
  2331                           
  2332                           	psect	dataBANK1
  2333  00E5                     __pdataBANK1:	
  2334  00E5                     Bq32k_Time_Init@F2018:	
  2335  00E5                     	ds	10
  2336                           
  2337                           	psect	bssBANK2
  2338  0120                     __pbssBANK2:	
  2339  0120                     _Flash_buff:	
  2340  0120                     	ds	64
  2341                           
  2342                           	psect	clrtext
  2343  085D                     clear_ram0:	
  2344                           ;	Called with FSR0 containing the base address, and
  2345                           ;	WREG with the size to clear
  2346                           
  2347  085D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2348  085E                     clrloop0:	
  2349  085E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2350  085F  3101               	addfsr 0,1
  2351  0860  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2352  0861  285E               	goto	clrloop0	;have we reached the end yet?
  2353  0862  3400               	retlw	0	;all done for this memory range, return
  2354                           
  2355                           	psect	inittext
  2356  0857                     init_ram:	
  2357  0857  00FE               	movwf	126
  2358  0858                     initloop:	
  2359  0858  0012               	moviw fsr0++
  2360  0859  001E               	movwi fsr1++
  2361  085A  0BFE               	decfsz	126,f
  2362  085B  2858               	goto	initloop
  2363  085C  3400               	retlw	0
  2364                           
  2365                           	psect	cstackBANK2
  2366  0160                     __pcstackBANK2:	
  2367  0160                     main@data_temp:	
  2368                           
  2369                           ; 2 bytes @ 0x0
  2370  0160                     	ds	2
  2371  0162                     main@i:	
  2372                           
  2373                           ; 1 bytes @ 0x2
  2374  0162                     	ds	1
  2375  0163                     main@bat_data:	
  2376                           
  2377                           ; 2 bytes @ 0x3
  2378  0163                     	ds	2
  2379                           
  2380                           	psect	cstackCOMMON
  2381  0070                     __pcstackCOMMON:	
  2382  0070                     ?_OSCILLATOR_Initialize:	
  2383  0070                     ?_SPI_Initialize:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_EUSART_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_ADC_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_FVR_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_TMR0_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_TMR0_CallBack:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ??_TMR0_CallBack:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_Bq32k_Time_Init:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ?_SendCmd_1621:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_Serach_Flash_Head:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?_temperature_process:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_Key_Process:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ?_Save_process:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_Sleep_process:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_Calculate_Time:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ?_Tc_Display:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_err_Display:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ?_Two_Display:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_time_Display:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_Bq32k_Rtc_Read_Time:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_Set_start_flag:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0070                     ?_Write_Flash_head:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0070                     ?_Save_Write_time:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0070                     ?_Set_finish_flag:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0070                     ?_Write_Flash_finish:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0070                     ?_bcd2bin:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0070                     ?_Step_control:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0070                     ?_PIN_MANAGER_Initialize:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0070                     ?_SYSTEM_Initialize:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0070                     ?_SPI_Exchange8bit:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0070                     ?_EUSART_Write:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0070                     ?_TMR0_ISR:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0070                     ?_INTERRUPT_InterruptManager:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0070                     ?_main:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0070                     ?_maxim_31856_read_register:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0070                     ?_maxim_start_conversion:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0070                     ?_maxim_clear_fault_status:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494  0070                     ?_tc_temperature_trans:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497  0070                     ?_one_temperature_trans:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500  0070                     ?_temperature_display:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503  0070                     ?_I2C_Start:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506  0070                     ?_I2C_Send_Byte:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509  0070                     ?_I2C_Receive_Byte:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512  0070                     ?_I2C_Stop:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515  0070                     ?_Key_Scan:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518                           
  2519                           ; 1 bytes @ 0x0
  2520  0070                     	ds	1
  2521  0071                     ??_TMR0_ISR:	
  2522                           
  2523                           ; 1 bytes @ 0x1
  2524  0071                     	ds	1
  2525  0072                     ??_INTERRUPT_InterruptManager:	
  2526                           
  2527                           ; 1 bytes @ 0x2
  2528  0072                     	ds	1
  2529  0073                     ??_OSCILLATOR_Initialize:	
  2530  0073                     ??_SPI_Initialize:	
  2531                           ; 1 bytes @ 0x3
  2532                           
  2533  0073                     ??_EUSART_Initialize:	
  2534                           ; 1 bytes @ 0x3
  2535                           
  2536  0073                     ??_ADC_Initialize:	
  2537                           ; 1 bytes @ 0x3
  2538                           
  2539  0073                     ??_FVR_Initialize:	
  2540                           ; 1 bytes @ 0x3
  2541                           
  2542  0073                     ??_TMR0_Initialize:	
  2543                           ; 1 bytes @ 0x3
  2544                           
  2545  0073                     ?_FLASH_EraseBlock:	
  2546                           ; 1 bytes @ 0x3
  2547                           
  2548  0073                     ?_memset:	
  2549                           ; 1 bytes @ 0x3
  2550                           
  2551  0073                     ??_Set_start_flag:	
  2552                           ; 1 bytes @ 0x3
  2553                           
  2554  0073                     ??_Set_finish_flag:	
  2555                           ; 1 bytes @ 0x3
  2556                           
  2557  0073                     ??_Step_control:	
  2558                           ; 1 bytes @ 0x3
  2559                           
  2560  0073                     ??_PIN_MANAGER_Initialize:	
  2561                           ; 1 bytes @ 0x3
  2562                           
  2563  0073                     ??_SPI_Exchange8bit:	
  2564                           ; 1 bytes @ 0x3
  2565                           
  2566  0073                     ??_EUSART_Write:	
  2567                           ; 1 bytes @ 0x3
  2568                           
  2569  0073                     ?_SendBit_1621:	
  2570                           ; 1 bytes @ 0x3
  2571                           
  2572  0073                     ?_SendDataBit_1621:	
  2573                           ; 1 bytes @ 0x3
  2574                           
  2575  0073                     ??_I2C_Start:	
  2576                           ; 1 bytes @ 0x3
  2577                           
  2578  0073                     ??_I2C_Send_Byte:	
  2579                           ; 1 bytes @ 0x3
  2580                           
  2581  0073                     ??_I2C_Receive_Byte:	
  2582                           ; 1 bytes @ 0x3
  2583                           
  2584  0073                     ??_I2C_Stop:	
  2585                           ; 1 bytes @ 0x3
  2586                           
  2587  0073                     ??_Key_Scan:	
  2588                           ; 1 bytes @ 0x3
  2589                           
  2590  0073                     ?___bmul:	
  2591                           ; 1 bytes @ 0x3
  2592                           
  2593  0073                     ?_FLASH_ReadWord:	
  2594                           ; 1 bytes @ 0x3
  2595                           
  2596  0073                     ?_ADC_GetConversion:	
  2597                           ; 2 bytes @ 0x3
  2598                           
  2599  0073                     ?___wmul:	
  2600                           ; 2 bytes @ 0x3
  2601                           
  2602  0073                     ?___awdiv:	
  2603                           ; 2 bytes @ 0x3
  2604                           
  2605  0073                     ?___awmod:	
  2606                           ; 2 bytes @ 0x3
  2607                           
  2608  0073                     ?___lwmod:	
  2609                           ; 2 bytes @ 0x3
  2610                           
  2611  0073                     SPI_Exchange8bit@data:	
  2612                           ; 2 bytes @ 0x3
  2613                           
  2614  0073                     EUSART_Write@txData:	
  2615                           ; 1 bytes @ 0x3
  2616                           
  2617  0073                     SendBit_1621@cnt:	
  2618                           ; 1 bytes @ 0x3
  2619                           
  2620  0073                     SendDataBit_1621@cnt:	
  2621                           ; 1 bytes @ 0x3
  2622                           
  2623  0073                     ___bmul@multiplicand:	
  2624                           ; 1 bytes @ 0x3
  2625                           
  2626  0073                     FLASH_ReadWord@flashAddr:	
  2627                           ; 1 bytes @ 0x3
  2628                           
  2629  0073                     FLASH_EraseBlock@startAddr:	
  2630                           ; 2 bytes @ 0x3
  2631                           
  2632  0073                     ___wmul@multiplier:	
  2633                           ; 2 bytes @ 0x3
  2634                           
  2635  0073                     ___awdiv@divisor:	
  2636                           ; 2 bytes @ 0x3
  2637                           
  2638  0073                     ___awmod@divisor:	
  2639                           ; 2 bytes @ 0x3
  2640                           
  2641  0073                     ___lwmod@divisor:	
  2642                           ; 2 bytes @ 0x3
  2643                           
  2644  0073                     memset@c:	
  2645                           ; 2 bytes @ 0x3
  2646                           
  2647                           
  2648                           ; 2 bytes @ 0x3
  2649  0073                     	ds	1
  2650  0074                     ??_Sleep_process:	
  2651  0074                     ??_SYSTEM_Initialize:	
  2652                           ; 1 bytes @ 0x4
  2653                           
  2654  0074                     ?_SPI_Exchange8bitBuffer:	
  2655                           ; 1 bytes @ 0x4
  2656                           
  2657  0074                     ?_maxim_31856_write_register:	
  2658                           ; 1 bytes @ 0x4
  2659                           
  2660  0074                     ??_maxim_31856_read_register:	
  2661                           ; 1 bytes @ 0x4
  2662                           
  2663  0074                     ??_SendBit_1621:	
  2664                           ; 1 bytes @ 0x4
  2665                           
  2666  0074                     ??_SendDataBit_1621:	
  2667                           ; 1 bytes @ 0x4
  2668                           
  2669  0074                     ??___bmul:	
  2670                           ; 1 bytes @ 0x4
  2671                           
  2672  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2673                           ; 1 bytes @ 0x4
  2674                           
  2675  0074                     maxim_31856_write_register@uch_register_value:	
  2676                           ; 1 bytes @ 0x4
  2677                           
  2678  0074                     I2C_Send_Byte@Data:	
  2679                           ; 1 bytes @ 0x4
  2680                           
  2681  0074                     I2C_Receive_Byte@Data:	
  2682                           ; 1 bytes @ 0x4
  2683                           
  2684                           
  2685                           ; 1 bytes @ 0x4
  2686  0074                     	ds	1
  2687  0075                     ??_FLASH_EraseBlock:	
  2688  0075                     ??_FLASH_ReadWord:	
  2689                           ; 1 bytes @ 0x5
  2690                           
  2691  0075                     ??_ADC_GetConversion:	
  2692                           ; 1 bytes @ 0x5
  2693                           
  2694  0075                     ??_maxim_31856_write_register:	
  2695                           ; 1 bytes @ 0x5
  2696                           
  2697  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2698                           ; 1 bytes @ 0x5
  2699                           
  2700  0075                     FLASH_ReadWord@GIEBitValue:	
  2701                           ; 1 bytes @ 0x5
  2702                           
  2703  0075                     FLASH_EraseBlock@GIEBitValue:	
  2704                           ; 1 bytes @ 0x5
  2705                           
  2706  0075                     maxim_31856_write_register@uch_register_address:	
  2707                           ; 1 bytes @ 0x5
  2708                           
  2709  0075                     maxim_31856_read_register@uch_register_address:	
  2710                           ; 1 bytes @ 0x5
  2711                           
  2712  0075                     SendBit_1621@data:	
  2713                           ; 1 bytes @ 0x5
  2714                           
  2715  0075                     SendDataBit_1621@data:	
  2716                           ; 1 bytes @ 0x5
  2717                           
  2718  0075                     I2C_Send_Byte@i:	
  2719                           ; 1 bytes @ 0x5
  2720                           
  2721  0075                     I2C_Receive_Byte@i:	
  2722                           ; 1 bytes @ 0x5
  2723                           
  2724  0075                     Key_Scan@Key_val:	
  2725                           ; 1 bytes @ 0x5
  2726                           
  2727  0075                     ___bmul@product:	
  2728                           ; 1 bytes @ 0x5
  2729                           
  2730  0075                     ___wmul@multiplicand:	
  2731                           ; 1 bytes @ 0x5
  2732                           
  2733  0075                     ___awdiv@dividend:	
  2734                           ; 2 bytes @ 0x5
  2735                           
  2736  0075                     ___awmod@dividend:	
  2737                           ; 2 bytes @ 0x5
  2738                           
  2739  0075                     ___lwmod@dividend:	
  2740                           ; 2 bytes @ 0x5
  2741                           
  2742  0075                     memset@n:	
  2743                           ; 2 bytes @ 0x5
  2744                           
  2745                           
  2746                           ; 2 bytes @ 0x5
  2747  0075                     	ds	1
  2748  0076                     ??_FLASH_WriteWord:	
  2749  0076                     ?_I2C_Read_Buffer:	
  2750                           ; 1 bytes @ 0x6
  2751                           
  2752  0076                     ?_I2C_Send_Buffer:	
  2753                           ; 1 bytes @ 0x6
  2754                           
  2755  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2756                           ; 1 bytes @ 0x6
  2757                           
  2758  0076                     ADC_GetConversion@channel:	
  2759                           ; 1 bytes @ 0x6
  2760                           
  2761  0076                     maxim_31856_read_register@uch_register_data:	
  2762                           ; 1 bytes @ 0x6
  2763                           
  2764  0076                     SendBit_1621@i:	
  2765                           ; 1 bytes @ 0x6
  2766                           
  2767  0076                     SendDataBit_1621@i:	
  2768                           ; 1 bytes @ 0x6
  2769                           
  2770  0076                     I2C_Read_Buffer@buff:	
  2771                           ; 1 bytes @ 0x6
  2772                           
  2773  0076                     I2C_Send_Buffer@buff:	
  2774                           ; 1 bytes @ 0x6
  2775                           
  2776  0076                     ___bmul@multiplier:	
  2777                           ; 1 bytes @ 0x6
  2778                           
  2779                           
  2780                           ; 1 bytes @ 0x6
  2781  0076                     	ds	1
  2782  0077                     ??_SendCmd_1621:	
  2783  0077                     ??_WriteAll_1621:	
  2784                           ; 1 bytes @ 0x7
  2785                           
  2786  0077                     ??_memset:	
  2787                           ; 1 bytes @ 0x7
  2788                           
  2789  0077                     ??_Write_Flash_head:	
  2790                           ; 1 bytes @ 0x7
  2791                           
  2792  0077                     ??_Write_Flash_finish:	
  2793                           ; 1 bytes @ 0x7
  2794                           
  2795  0077                     ??_maxim_start_conversion:	
  2796                           ; 1 bytes @ 0x7
  2797                           
  2798  0077                     ??_maxim_clear_fault_status:	
  2799                           ; 1 bytes @ 0x7
  2800                           
  2801  0077                     ??___wmul:	
  2802                           ; 1 bytes @ 0x7
  2803                           
  2804  0077                     ??___awdiv:	
  2805                           ; 1 bytes @ 0x7
  2806                           
  2807  0077                     ??___awmod:	
  2808                           ; 1 bytes @ 0x7
  2809                           
  2810  0077                     ??___lwmod:	
  2811                           ; 1 bytes @ 0x7
  2812                           
  2813  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2814                           ; 1 bytes @ 0x7
  2815                           
  2816  0077                     I2C_Read_Buffer@Length:	
  2817                           ; 1 bytes @ 0x7
  2818                           
  2819  0077                     I2C_Send_Buffer@Length:	
  2820                           ; 1 bytes @ 0x7
  2821                           
  2822  0077                     bcd2bin@val:	
  2823                           ; 1 bytes @ 0x7
  2824                           
  2825                           
  2826                           ; 1 bytes @ 0x7
  2827  0077                     	ds	1
  2828  0078                     ??_temperature_process:	
  2829                           
  2830                           	psect	cstackBANK0
  2831  0020                     __pcstackBANK0:	
  2832                           ; 1 bytes @ 0x8
  2833                           
  2834  0020                     ?_FLASH_WriteBlock:	
  2835  0020                     ?_WriteAll_1621:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0020                     ??_bcd2bin:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0020                     ??_SPI_Exchange8bitBuffer:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0020                     ??_I2C_Read_Buffer:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0020                     ??_I2C_Send_Buffer:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0020                     maxim_start_conversion@uch_conversion_mode:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0020                     SendCmd_1621@command:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0020                     ___awdiv@counter:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0020                     ___awmod@counter:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0020                     ___lwmod@counter:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0020                     memset@p1:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0020                     FLASH_WriteBlock@writeAddr:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     WriteAll_1621@p:	
  2872                           ; 2 bytes @ 0x0
  2873                           
  2874  0020                     ___wmul@product:	
  2875                           ; 2 bytes @ 0x0
  2876                           
  2877                           
  2878                           ; 2 bytes @ 0x0
  2879  0020                     	ds	1
  2880  0021                     ?___lwdiv:	
  2881  0021                     I2C_Read_Buffer@ADD:	
  2882                           ; 2 bytes @ 0x1
  2883                           
  2884  0021                     ___awdiv@sign:	
  2885                           ; 1 bytes @ 0x1
  2886                           
  2887  0021                     ___awmod@sign:	
  2888                           ; 1 bytes @ 0x1
  2889                           
  2890  0021                     memset@p:	
  2891                           ; 1 bytes @ 0x1
  2892                           
  2893  0021                     ___lwdiv@divisor:	
  2894                           ; 1 bytes @ 0x1
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0x1
  2898  0021                     	ds	1
  2899  0022                     FLASH_WriteBlock@flashWordArray:	
  2900  0022                     WriteAll_1621@cnt:	
  2901                           ; 1 bytes @ 0x2
  2902                           
  2903  0022                     I2C_Read_Buffer@Flag:	
  2904                           ; 1 bytes @ 0x2
  2905                           
  2906  0022                     I2C_Send_Buffer@ADD:	
  2907                           ; 1 bytes @ 0x2
  2908                           
  2909  0022                     ___awdiv@quotient:	
  2910                           ; 1 bytes @ 0x2
  2911                           
  2912                           
  2913                           ; 2 bytes @ 0x2
  2914  0022                     	ds	1
  2915  0023                     ??_FLASH_WriteBlock:	
  2916  0023                     ??_Bq32k_Rtc_Read_Time:	
  2917                           ; 1 bytes @ 0x3
  2918                           
  2919  0023                     ?_maxim_31856_read_nregisters:	
  2920                           ; 1 bytes @ 0x3
  2921                           
  2922  0023                     maxim_31856_read_nregisters@uch_buff:	
  2923                           ; 1 bytes @ 0x3
  2924                           
  2925  0023                     WriteAll_1621@addr:	
  2926                           ; 1 bytes @ 0x3
  2927                           
  2928  0023                     I2C_Send_Buffer@i:	
  2929                           ; 1 bytes @ 0x3
  2930                           
  2931  0023                     ___lwdiv@dividend:	
  2932                           ; 1 bytes @ 0x3
  2933                           
  2934                           
  2935                           ; 2 bytes @ 0x3
  2936  0023                     	ds	1
  2937  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2938  0024                     WriteAll_1621@i:	
  2939                           ; 1 bytes @ 0x4
  2940                           
  2941  0024                     I2C_Send_Buffer@Flag:	
  2942                           ; 1 bytes @ 0x4
  2943                           
  2944                           
  2945                           ; 1 bytes @ 0x4
  2946  0024                     	ds	1
  2947  0025                     ??_Bq32k_Time_Init:	
  2948  0025                     ??_err_Display:	
  2949                           ; 1 bytes @ 0x5
  2950                           
  2951  0025                     ??_Two_Display:	
  2952                           ; 1 bytes @ 0x5
  2953                           
  2954  0025                     ??_maxim_31856_read_nregisters:	
  2955                           ; 1 bytes @ 0x5
  2956                           
  2957  0025                     ??___lwdiv:	
  2958                           ; 1 bytes @ 0x5
  2959                           
  2960  0025                     Bq32k_Rtc_Read_Time@temp:	
  2961                           ; 1 bytes @ 0x5
  2962                           
  2963                           
  2964                           ; 10 bytes @ 0x5
  2965  0025                     	ds	1
  2966  0026                     ___lwdiv@counter:	
  2967  0026                     FLASH_WriteBlock@blockStartAddr:	
  2968                           ; 1 bytes @ 0x6
  2969                           
  2970  0026                     Two_Display@num:	
  2971                           ; 2 bytes @ 0x6
  2972                           
  2973  0026                     err_Display@num:	
  2974                           ; 4 bytes @ 0x6
  2975                           
  2976                           
  2977                           ; 4 bytes @ 0x6
  2978  0026                     	ds	1
  2979  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2980  0027                     ___lwdiv@quotient:	
  2981                           ; 1 bytes @ 0x7
  2982                           
  2983  0027                     Bq32k_Time_Init@temp:	
  2984                           ; 2 bytes @ 0x7
  2985                           
  2986                           
  2987                           ; 10 bytes @ 0x7
  2988  0027                     	ds	1
  2989  0028                     ??_one_temperature_trans:	
  2990  0028                     FLASH_WriteBlock@GIEBitValue:	
  2991                           ; 1 bytes @ 0x8
  2992                           
  2993                           
  2994                           ; 1 bytes @ 0x8
  2995  0028                     	ds	1
  2996  0029                     ??_Tc_Display:	
  2997  0029                     FLASH_WriteBlock@i:	
  2998                           ; 1 bytes @ 0x9
  2999                           
  3000                           
  3001                           ; 1 bytes @ 0x9
  3002  0029                     	ds	1
  3003  002A                     ?_FLASH_WriteWord:	
  3004  002A                     Tc_Display@count:	
  3005                           ; 1 bytes @ 0xA
  3006                           
  3007  002A                     Two_Display@number:	
  3008                           ; 1 bytes @ 0xA
  3009                           
  3010  002A                     FLASH_WriteWord@flashAddr:	
  3011                           ; 1 bytes @ 0xA
  3012                           
  3013                           
  3014                           ; 2 bytes @ 0xA
  3015  002A                     	ds	1
  3016  002B                     Tc_Display@data:	
  3017                           
  3018                           ; 2 bytes @ 0xB
  3019  002B                     	ds	1
  3020  002C                     FLASH_WriteWord@ramBuf:	
  3021                           
  3022                           ; 1 bytes @ 0xC
  3023  002C                     	ds	1
  3024  002D                     FLASH_WriteWord@word:	
  3025                           
  3026                           ; 2 bytes @ 0xD
  3027  002D                     	ds	2
  3028  002F                     FLASH_WriteWord@offset:	
  3029  002F                     Bq32k_Rtc_Read_Time@p:	
  3030                           ; 1 bytes @ 0xF
  3031                           
  3032                           
  3033                           ; 1 bytes @ 0xF
  3034  002F                     	ds	1
  3035  0030                     ??_time_Display:	
  3036  0030                     FLASH_WriteWord@blockStartAddr:	
  3037                           ; 1 bytes @ 0x10
  3038                           
  3039                           
  3040                           ; 2 bytes @ 0x10
  3041  0030                     	ds	2
  3042  0032                     FLASH_WriteWord@i:	
  3043                           
  3044                           ; 1 bytes @ 0x12
  3045  0032                     	ds	1
  3046  0033                     ??_Serach_Flash_Head:	
  3047  0033                     ?_Save_Write_word:	
  3048                           ; 1 bytes @ 0x13
  3049                           
  3050  0033                     Save_Write_word@data:	
  3051                           ; 1 bytes @ 0x13
  3052                           
  3053  0033                     time_Display@num:	
  3054                           ; 2 bytes @ 0x13
  3055                           
  3056                           
  3057                           ; 4 bytes @ 0x13
  3058  0033                     	ds	1
  3059  0034                     Serach_Flash_Head@count:	
  3060                           
  3061                           ; 1 bytes @ 0x14
  3062  0034                     	ds	1
  3063  0035                     ??_Save_Write_word:	
  3064  0035                     Serach_Flash_Head@data:	
  3065                           ; 1 bytes @ 0x15
  3066                           
  3067                           
  3068                           ; 2 bytes @ 0x15
  3069  0035                     	ds	2
  3070  0037                     ??_Save_Write_time:	
  3071  0037                     Serach_Flash_Head@i:	
  3072                           ; 1 bytes @ 0x17
  3073                           
  3074                           
  3075                           ; 2 bytes @ 0x17
  3076  0037                     	ds	2
  3077  0039                     ??_Calculate_Time:	
  3078                           
  3079                           ; 1 bytes @ 0x19
  3080  0039                     	ds	10
  3081  0043                     Calculate_Time@temp:	
  3082                           
  3083                           ; 4 bytes @ 0x23
  3084  0043                     	ds	4
  3085  0047                     Calculate_Time@temp1:	
  3086                           
  3087                           ; 4 bytes @ 0x27
  3088  0047                     	ds	4
  3089  004B                     Calculate_Time@temp2:	
  3090                           
  3091                           ; 4 bytes @ 0x2B
  3092  004B                     	ds	4
  3093  004F                     ??_Save_process:	
  3094  004F                     ??_tc_temperature_trans:	
  3095                           ; 1 bytes @ 0x2F
  3096                           
  3097                           
  3098                           ; 1 bytes @ 0x2F
  3099  004F                     	ds	2
  3100  0051                     Save_process@var_time:	
  3101                           
  3102                           ; 2 bytes @ 0x31
  3103  0051                     	ds	2
  3104  0053                     tc_temperature_trans@temperature_back:	
  3105                           
  3106                           ; 2 bytes @ 0x33
  3107  0053                     	ds	2
  3108  0055                     tc_temperature_trans@temperature_absolute:	
  3109                           
  3110                           ; 2 bytes @ 0x35
  3111  0055                     	ds	2
  3112  0057                     tc_temperature_trans@var_time:	
  3113                           
  3114                           ; 2 bytes @ 0x37
  3115  0057                     	ds	2
  3116  0059                     tc_temperature_trans@temperature_temp:	
  3117                           
  3118                           ; 2 bytes @ 0x39
  3119  0059                     	ds	2
  3120  005B                     ??_temperature_display:	
  3121                           
  3122                           ; 1 bytes @ 0x3B
  3123  005B                     	ds	1
  3124  005C                     ??_Key_Process:	
  3125                           
  3126                           ; 1 bytes @ 0x3C
  3127  005C                     	ds	1
  3128  005D                     Key_Process@data_temp:	
  3129                           
  3130                           ; 2 bytes @ 0x3D
  3131  005D                     	ds	2
  3132  005F                     Key_Process@gKeyValue:	
  3133                           
  3134                           ; 1 bytes @ 0x3F
  3135  005F                     	ds	1
  3136  0060                     Key_Process@i:	
  3137                           
  3138                           ; 2 bytes @ 0x40
  3139  0060                     	ds	2
  3140  0062                     ??_main:	
  3141                           
  3142                           ; 1 bytes @ 0x42
  3143  0062                     	ds	3
  3144                           
  3145                           	psect	maintext
  3146  03A9                     __pmaintext:	
  3147 ;;
  3148 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3149 ;;
  3150 ;; *************** function _main *****************
  3151 ;; Defined at:
  3152 ;;		line 67 in file "main.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  bat_data        2    3[BANK2 ] unsigned int 
  3157 ;;  data_temp       2    0[BANK2 ] unsigned int 
  3158 ;;  i               1    2[BANK2 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : B1F/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Totals:         0       3       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;Total ram usage:        8 bytes
  3173 ;; Hardware stack levels required when called:   13
  3174 ;; This function calls:
  3175 ;;		_ADC_GetConversion
  3176 ;;		_Bq32k_Time_Init
  3177 ;;		_Key_Process
  3178 ;;		_SYSTEM_Initialize
  3179 ;;		_Save_process
  3180 ;;		_SendCmd_1621
  3181 ;;		_Serach_Flash_Head
  3182 ;;		_Sleep_process
  3183 ;;		_WriteAll_1621
  3184 ;;		_temperature_process
  3185 ;; This function is called by:
  3186 ;;		Startup code after reset
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _main
  3192  03A9                     _main:	
  3193                           
  3194                           ;main.c: 69: unsigned char i=0;
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3198  03A9  0022               	movlb	2	; select bank2
  3199  03AA  01E2               	clrf	main@i^(0+256)
  3200                           
  3201                           ;main.c: 71: unsigned int bat_data = 0;
  3202  03AB  01E3               	clrf	main@bat_data^(0+256)
  3203  03AC  01E4               	clrf	(main@bat_data+1)^(0+256)
  3204                           
  3205                           ;main.c: 72: unsigned int data_temp = 0;
  3206  03AD  01E0               	clrf	main@data_temp^(0+256)
  3207  03AE  01E1               	clrf	(main@data_temp+1)^(0+256)
  3208                           
  3209                           ;main.c: 73: SWDTEN = 0;
  3210  03AF  0021               	movlb	1	; select bank1
  3211  03B0  1017               	bcf	23,0	;volatile
  3212                           
  3213                           ;main.c: 74: WDTPS0 = 1;
  3214  03B1  1497               	bsf	23,1	;volatile
  3215                           
  3216                           ;main.c: 75: WDTPS1 = 0;
  3217  03B2  1117               	bcf	23,2	;volatile
  3218                           
  3219                           ;main.c: 76: WDTPS2 = 0;
  3220  03B3  1197               	bcf	23,3	;volatile
  3221                           
  3222                           ;main.c: 77: WDTPS3 = 1;
  3223  03B4  1617               	bsf	23,4	;volatile
  3224                           
  3225                           ;main.c: 78: WDTPS4 = 0;
  3226  03B5  1297               	bcf	23,5	;volatile
  3227  03B6  0064               	clrwdt	;# 
  3228                           
  3229                           ;main.c: 81: SYSTEM_Initialize();
  3230  03B7  3188  20F5  3183   	fcall	_SYSTEM_Initialize
  3231                           
  3232                           ;main.c: 84: _delay((unsigned long)((3000)*(4000000/4000.0)));
  3233  03BA  3010               	movlw	16
  3234  03BB  0020               	movlb	0	; select bank0
  3235  03BC  00E4               	movwf	??_main+2
  3236  03BD  3039               	movlw	57
  3237  03BE  00E3               	movwf	??_main+1
  3238  03BF  301B               	movlw	27
  3239  03C0  00E2               	movwf	??_main
  3240  03C1                     u5317:	
  3241  03C1  0BE2               	decfsz	??_main,f
  3242  03C2  2BC1               	goto	u5317
  3243  03C3  0BE3               	decfsz	??_main+1,f
  3244  03C4  2BC1               	goto	u5317
  3245  03C5  0BE4               	decfsz	??_main+2,f
  3246  03C6  2BC1               	goto	u5317
  3247  03C7  3200               	nop2
  3248                           
  3249                           ;main.c: 85: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3250  03C8  0020               	movlb	0	; select bank0
  3251  03C9  1A8D               	btfsc	13,5	;volatile
  3252  03CA  2BCE               	goto	l371
  3253  03CB  0022               	movlb	2	; select bank2
  3254  03CC  150C               	bsf	12,2	;volatile
  3255  03CD  2BD0               	goto	l373
  3256  03CE                     l371:	
  3257                           ;main.c: 86: else do { LATA2 = 0; } while(0);
  3258                           
  3259  03CE  0022               	movlb	2	; select bank2
  3260  03CF  110C               	bcf	12,2	;volatile
  3261  03D0                     l373:	
  3262                           ;main.c: 87: do { LATA3 = 0; } while(0);
  3263                           
  3264  03D0  118C               	bcf	12,3	;volatile
  3265                           
  3266                           ;main.c: 90: bat_data = 0;
  3267  03D1  01E3               	clrf	main@bat_data^(0+256)
  3268  03D2  01E4               	clrf	(main@bat_data+1)^(0+256)
  3269                           
  3270                           ;main.c: 91: for(i=0;i<16;i++)
  3271  03D3  01E2               	clrf	main@i^(0+256)
  3272  03D4  3010               	movlw	16
  3273  03D5  0262               	subwf	main@i^(0+256),w
  3274  03D6  1803               	btfsc	3,0
  3275  03D7  2BED               	goto	l5509
  3276  03D8                     l5503:	
  3277                           
  3278                           ;main.c: 92: {
  3279                           ;main.c: 93: bat_data = bat_data + ADC_GetConversion(ADC);
  3280  03D8  300B               	movlw	11
  3281  03D9  3189  2121  3183   	fcall	_ADC_GetConversion
  3282  03DC  0022               	movlb	2	; select bank2
  3283  03DD  0863               	movf	main@bat_data^(0+256),w
  3284  03DE  0773               	addwf	?_ADC_GetConversion,w
  3285  03DF  00E3               	movwf	main@bat_data^(0+256)
  3286  03E0  0864               	movf	(main@bat_data+1)^(0+256),w
  3287  03E1  3D74               	addwfc	?_ADC_GetConversion+1,w
  3288  03E2  00E4               	movwf	(main@bat_data+1)^(0+256)
  3289  03E3  3001               	movlw	1
  3290  03E4  0020               	movlb	0	; select bank0
  3291  03E5  00E2               	movwf	??_main
  3292  03E6  0862               	movf	??_main,w
  3293  03E7  0022               	movlb	2	; select bank2
  3294  03E8  07E2               	addwf	main@i^(0+256),f
  3295  03E9  3010               	movlw	16
  3296  03EA  0262               	subwf	main@i^(0+256),w
  3297  03EB  1C03               	skipc
  3298  03EC  2BD8               	goto	l5503
  3299  03ED                     l5509:	
  3300                           
  3301                           ;main.c: 94: }
  3302                           ;main.c: 95: bat_data = bat_data>>4;
  3303  03ED  0E63               	swapf	main@bat_data^(0+256),w
  3304  03EE  390F               	andlw	15
  3305  03EF  00E3               	movwf	main@bat_data^(0+256)
  3306  03F0  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3307  03F1  39F0               	andlw	240
  3308  03F2  04E3               	iorwf	main@bat_data^(0+256),f
  3309  03F3  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3310  03F4  390F               	andlw	15
  3311  03F5  00E4               	movwf	(main@bat_data^(0+256)+1)
  3312                           
  3313                           ;main.c: 96: if( bat_data < 800)
  3314  03F6  3003               	movlw	3
  3315  03F7  0264               	subwf	(main@bat_data+1)^(0+256),w
  3316  03F8  3020               	movlw	32
  3317  03F9  1903               	skipnz
  3318  03FA  0263               	subwf	main@bat_data^(0+256),w
  3319  03FB  1803               	skipnc
  3320  03FC  2C00               	goto	l5513
  3321                           
  3322                           ;main.c: 97: {
  3323                           ;main.c: 98: do { LATA2 = 0; } while(0);
  3324  03FD  110C               	bcf	12,2	;volatile
  3325  03FE                     l380:	
  3326                           ;main.c: 99: while(1)asm("clrwdt");
  3327                           
  3328  03FE  0064               	clrwdt	;# 
  3329  03FF  2BFE               	goto	l380
  3330  0400                     l5513:	
  3331                           
  3332                           ;main.c: 100: }
  3333                           ;main.c: 101: i = 0 ;
  3334  0400  0022               	movlb	2	; select bank2
  3335  0401  01E2               	clrf	main@i^(0+256)
  3336                           
  3337                           ;main.c: 102: bat_data = 0 ;
  3338  0402  01E3               	clrf	main@bat_data^(0+256)
  3339  0403  01E4               	clrf	(main@bat_data+1)^(0+256)
  3340                           
  3341                           ;main.c: 106: do { TRISB3 = 1; } while(0);
  3342  0404  0021               	movlb	1	; select bank1
  3343  0405  158D               	bsf	13,3	;volatile
  3344                           
  3345                           ;main.c: 107: Bq32k_Time_Init();
  3346  0406  3189  21EA  3183   	fcall	_Bq32k_Time_Init
  3347                           
  3348                           ;main.c: 108: SendCmd_1621(0x52);
  3349  0409  3052               	movlw	82
  3350  040A  3189  210A  3183   	fcall	_SendCmd_1621
  3351                           
  3352                           ;main.c: 109: SendCmd_1621(0X28);
  3353  040D  3028               	movlw	40
  3354  040E  3189  210A  3183   	fcall	_SendCmd_1621
  3355                           
  3356                           ;main.c: 110: SendCmd_1621(0x02);
  3357  0411  3002               	movlw	2
  3358  0412  3189  210A  3183   	fcall	_SendCmd_1621
  3359                           
  3360                           ;main.c: 111: SendCmd_1621(0x06);
  3361  0415  3006               	movlw	6
  3362  0416  3189  210A  3183   	fcall	_SendCmd_1621
  3363                           
  3364                           ;main.c: 113: WriteAll_1621(0,Dis_TAB+17,4);
  3365  0419  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3366  041A  0020               	movlb	0	; select bank0
  3367  041B  00A0               	movwf	WriteAll_1621@p
  3368  041C  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3369  041D  00A1               	movwf	WriteAll_1621@p+1
  3370  041E  3004               	movlw	4
  3371  041F  00E2               	movwf	??_main
  3372  0420  0862               	movf	??_main,w
  3373  0421  00A2               	movwf	WriteAll_1621@cnt
  3374  0422  3000               	movlw	0
  3375  0423  318C  240E  3183   	fcall	_WriteAll_1621
  3376                           
  3377                           ;main.c: 115: time_count = 0;
  3378  0426  0020               	movlb	0	; select bank0
  3379  0427  01ED               	clrf	_time_count
  3380                           
  3381                           ;main.c: 116: Record_flag = 0;
  3382  0428  01EB               	clrf	_Record_flag
  3383                           
  3384                           ;main.c: 117: Cur_temperature_time_ch1 = 0;
  3385  0429  0021               	movlb	1	; select bank1
  3386  042A  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3387                           
  3388                           ;main.c: 118: Cur_temperature_time_ch2 = 0;
  3389  042B  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3390                           
  3391                           ;main.c: 119: CH1_temperature = 0;
  3392  042C  0020               	movlb	0	; select bank0
  3393  042D  01E9               	clrf	_CH1_temperature
  3394  042E  01EA               	clrf	_CH1_temperature+1
  3395                           
  3396                           ;main.c: 120: CH2_temperature = 0;
  3397  042F  01F8               	clrf	_CH2_temperature
  3398  0430  01F9               	clrf	_CH2_temperature+1
  3399                           
  3400                           ;main.c: 121: CH1_state = 0;
  3401  0431  0021               	movlb	1	; select bank1
  3402  0432  01B4               	clrf	_CH1_state^(0+128)
  3403                           
  3404                           ;main.c: 122: CH2_state = 0;
  3405  0433  01B5               	clrf	_CH2_state^(0+128)
  3406                           
  3407                           ;main.c: 123: bat_data = 0;
  3408  0434  0022               	movlb	2	; select bank2
  3409  0435  01E3               	clrf	main@bat_data^(0+256)
  3410  0436  01E4               	clrf	(main@bat_data+1)^(0+256)
  3411                           
  3412                           ;main.c: 124: Cur_Save_Index = 0x2000;
  3413  0437  3000               	movlw	0
  3414  0438  0021               	movlb	1	; select bank1
  3415  0439  00AE               	movwf	_Cur_Save_Index^(0+128)
  3416  043A  3020               	movlw	32
  3417  043B  00AF               	movwf	(_Cur_Save_Index^(0+128)+1)
  3418                           
  3419                           ;main.c: 125: Serach_Flash_Head();
  3420  043C  318E  26E5  3183   	fcall	_Serach_Flash_Head
  3421  043F  0064               	clrwdt	;# 
  3422                           
  3423                           ;main.c: 127: SWDTEN = 1;
  3424  0440  0021               	movlb	1	; select bank1
  3425  0441  1417               	bsf	23,0	;volatile
  3426                           
  3427                           ;main.c: 152: (INTCONbits.GIE = 1);
  3428  0442  178B               	bsf	11,7	;volatile
  3429                           
  3430                           ;main.c: 155: (INTCONbits.PEIE = 1);
  3431  0443  170B               	bsf	11,6	;volatile
  3432  0444                     l5557:	
  3433                           ;main.c: 163: while (1)
  3434                           
  3435                           
  3436                           ;main.c: 164: {
  3437                           ;main.c: 169: bat_data = bat_data + ADC_GetConversion(ADC);
  3438  0444  300B               	movlw	11
  3439  0445  3189  2121  3183   	fcall	_ADC_GetConversion
  3440  0448  0022               	movlb	2	; select bank2
  3441  0449  0863               	movf	main@bat_data^(0+256),w
  3442  044A  0773               	addwf	?_ADC_GetConversion,w
  3443  044B  00E3               	movwf	main@bat_data^(0+256)
  3444  044C  0864               	movf	(main@bat_data+1)^(0+256),w
  3445  044D  3D74               	addwfc	?_ADC_GetConversion+1,w
  3446  044E  00E4               	movwf	(main@bat_data+1)^(0+256)
  3447                           
  3448                           ;main.c: 170: i++;
  3449  044F  3001               	movlw	1
  3450  0450  0020               	movlb	0	; select bank0
  3451  0451  00E2               	movwf	??_main
  3452  0452  0862               	movf	??_main,w
  3453  0453  0022               	movlb	2	; select bank2
  3454  0454  07E2               	addwf	main@i^(0+256),f
  3455                           
  3456                           ;main.c: 171: if(i == 16)
  3457  0455  3010               	movlw	16
  3458  0456  0662               	xorwf	main@i^(0+256),w
  3459  0457  1D03               	btfss	3,2
  3460  0458  2C70               	goto	l5571
  3461                           
  3462                           ;main.c: 172: {
  3463                           ;main.c: 173: i = 0;
  3464  0459  01E2               	clrf	main@i^(0+256)
  3465                           
  3466                           ;main.c: 174: bat_data = bat_data>>4;
  3467  045A  0E63               	swapf	main@bat_data^(0+256),w
  3468  045B  390F               	andlw	15
  3469  045C  00E3               	movwf	main@bat_data^(0+256)
  3470  045D  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3471  045E  39F0               	andlw	240
  3472  045F  04E3               	iorwf	main@bat_data^(0+256),f
  3473  0460  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3474  0461  390F               	andlw	15
  3475  0462  00E4               	movwf	(main@bat_data^(0+256)+1)
  3476                           
  3477                           ;main.c: 175: if( bat_data < 800)
  3478  0463  3003               	movlw	3
  3479  0464  0264               	subwf	(main@bat_data+1)^(0+256),w
  3480  0465  3020               	movlw	32
  3481  0466  1903               	skipnz
  3482  0467  0263               	subwf	main@bat_data^(0+256),w
  3483  0468  1803               	skipnc
  3484  0469  2C6D               	goto	l5569
  3485                           
  3486                           ;main.c: 176: {
  3487                           ;main.c: 177: do { LATA2 = 0; } while(0);
  3488  046A  110C               	bcf	12,2	;volatile
  3489  046B                     l390:	
  3490                           ;main.c: 178: while(1)asm("clrwdt");
  3491                           
  3492  046B  0064               	clrwdt	;# 
  3493  046C  2C6B               	goto	l390
  3494  046D                     l5569:	
  3495                           
  3496                           ;main.c: 179: }
  3497                           ;main.c: 180: bat_data = 0;
  3498  046D  0022               	movlb	2	; select bank2
  3499  046E  01E3               	clrf	main@bat_data^(0+256)
  3500  046F  01E4               	clrf	(main@bat_data+1)^(0+256)
  3501  0470                     l5571:	
  3502                           
  3503                           ;main.c: 181: }
  3504                           ;main.c: 186: temperature_process();
  3505  0470  318C  24AD  3183   	fcall	_temperature_process
  3506                           
  3507                           ;main.c: 187: Key_Process();
  3508  0473  3185  2545  3183   	fcall	_Key_Process
  3509                           
  3510                           ;main.c: 188: Save_process();
  3511  0476  318F  2739  3183   	fcall	_Save_process
  3512                           
  3513                           ;main.c: 189: Sleep_process();
  3514  0479  3189  219C  3183   	fcall	_Sleep_process
  3515  047C  2C44               	goto	l5557
  3516  047D                     __end_of_main:	
  3517                           
  3518                           	psect	text1
  3519  099C                     __ptext1:	
  3520 ;; *************** function _Sleep_process *****************
  3521 ;; Defined at:
  3522 ;;		line 16 in file "mcc_generated_files/power.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, pclath, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;Total ram usage:        0 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    4
  3543 ;; This function calls:
  3544 ;;		_Step_control
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function _Sleep_process
  3552  099C                     _Sleep_process:	
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _Sleep_process: [wreg+status,2+status,0+pclath+cstack]
  3556                           ;power.c: 18: do { LATA3 = 1; } while(0);
  3557  099C  0022               	movlb	2	; select bank2
  3558  099D  158C               	bsf	12,3	;volatile
  3559                           
  3560                           ;power.c: 19: do { LATA4 = 1; } while(0);
  3561  099E  160C               	bsf	12,4	;volatile
  3562                           
  3563                           ;power.c: 20: do { LATA0 = 1; } while(0);
  3564  099F  140C               	bsf	12,0	;volatile
  3565                           
  3566                           ;power.c: 21: do { LATA1 = 1; } while(0);
  3567  09A0  148C               	bsf	12,1	;volatile
  3568  09A1  0063               	sleep	;# 
  3569                           
  3570                           ;power.c: 24: if( time_count == 0 || time_count == 2 )
  3571  09A2  0020               	movlb	0	; select bank0
  3572  09A3  086D               	movf	_time_count,w
  3573  09A4  1903               	btfsc	3,2
  3574  09A5  29AA               	goto	l1064
  3575  09A6  3002               	movlw	2
  3576  09A7  066D               	xorwf	_time_count,w
  3577  09A8  1D03               	btfss	3,2
  3578  09A9  29B2               	goto	l5475
  3579  09AA                     l1064:	
  3580                           ;power.c: 25: {
  3581                           ;power.c: 26: do { LATA3 = 0; } while(0);
  3582                           
  3583  09AA  0022               	movlb	2	; select bank2
  3584  09AB  118C               	bcf	12,3	;volatile
  3585                           
  3586                           ;power.c: 27: if( Record_flag == 1 ) do { LATA4 = 0; } while(0);
  3587  09AC  0020               	movlb	0	; select bank0
  3588  09AD  036B               	decf	_Record_flag,w
  3589  09AE  1D03               	btfss	3,2
  3590  09AF  29B2               	goto	l5475
  3591  09B0  0022               	movlb	2	; select bank2
  3592  09B1  120C               	bcf	12,4	;volatile
  3593  09B2                     l5475:	
  3594                           
  3595                           ;power.c: 28: }
  3596                           ;power.c: 30: Step_control();
  3597  09B2  318A  2296         	fcall	_Step_control
  3598  09B4  0008               	return
  3599  09B5                     __end_of_Sleep_process:	
  3600                           
  3601                           	psect	text2
  3602  0A96                     __ptext2:	
  3603 ;; *************** function _Step_control *****************
  3604 ;; Defined at:
  3605 ;;		line 39 in file "mcc_generated_files/power.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;Total ram usage:        1 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_Sleep_process
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _Step_control
  3635  0A96                     _Step_control:	
  3636                           
  3637                           ;power.c: 41: time_count++;
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _Step_control: [wreg+status,2+status,0]
  3641  0A96  3001               	movlw	1
  3642  0A97  00F3               	movwf	??_Step_control
  3643  0A98  0873               	movf	??_Step_control,w
  3644  0A99  0020               	movlb	0	; select bank0
  3645  0A9A  07ED               	addwf	_time_count,f
  3646                           
  3647                           ;power.c: 42: if(time_count == 4 || time_count > 12) time_count = 0;
  3648  0A9B  3004               	movlw	4
  3649  0A9C  066D               	xorwf	_time_count,w
  3650  0A9D  1903               	btfsc	3,2
  3651  0A9E  2AA3               	goto	l5301
  3652  0A9F  300D               	movlw	13
  3653  0AA0  026D               	subwf	_time_count,w
  3654  0AA1  1C03               	skipc
  3655  0AA2  2AA4               	goto	l5303
  3656  0AA3                     l5301:	
  3657  0AA3  01ED               	clrf	_time_count
  3658  0AA4                     l5303:	
  3659                           
  3660                           ;power.c: 44: Cur_temperature_time_ch1++;
  3661  0AA4  3001               	movlw	1
  3662  0AA5  00F3               	movwf	??_Step_control
  3663  0AA6  0873               	movf	??_Step_control,w
  3664  0AA7  0021               	movlb	1	; select bank1
  3665  0AA8  07B6               	addwf	_Cur_temperature_time_ch1^(0+128),f
  3666                           
  3667                           ;power.c: 45: if(Cur_temperature_time_ch1 > 130)
  3668  0AA9  3083               	movlw	131
  3669  0AAA  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3670  0AAB  1803               	btfsc	3,0
  3671                           
  3672                           ;power.c: 46: {
  3673                           ;power.c: 47: Cur_temperature_time_ch1 = 0;
  3674  0AAC  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3675                           
  3676                           ;power.c: 48: }
  3677                           ;power.c: 50: Cur_temperature_time_ch2++;
  3678  0AAD  3001               	movlw	1
  3679  0AAE  00F3               	movwf	??_Step_control
  3680  0AAF  0873               	movf	??_Step_control,w
  3681  0AB0  07B7               	addwf	_Cur_temperature_time_ch2^(0+128),f
  3682                           
  3683                           ;power.c: 51: if(Cur_temperature_time_ch2 > 130)
  3684  0AB1  3083               	movlw	131
  3685  0AB2  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3686  0AB3  1C03               	skipc
  3687  0AB4  0008               	return
  3688                           
  3689                           ;power.c: 52: {
  3690                           ;power.c: 53: Cur_temperature_time_ch2= 0;
  3691  0AB5  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3692  0AB6  0008               	return
  3693  0AB7                     __end_of_Step_control:	
  3694                           
  3695                           	psect	text3
  3696  0EE5                     __ptext3:	
  3697 ;; *************** function _Serach_Flash_Head *****************
  3698 ;; Defined at:
  3699 ;;		line 42 in file "mcc_generated_files/save.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  i               2   23[BANK0 ] unsigned int 
  3704 ;;  data            2   21[BANK0 ] unsigned int 
  3705 ;;  count           1   20[BANK0 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;Total ram usage:        6 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    7
  3722 ;; This function calls:
  3723 ;;		_FLASH_ReadWord
  3724 ;;		_Write_Flash_finish
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           
  3731                           ;psect for function _Serach_Flash_Head
  3732  0EE5                     _Serach_Flash_Head:	
  3733                           
  3734                           ;save.c: 44: unsigned int i=0;
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _Serach_Flash_Head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3738  0EE5  0020               	movlb	0	; select bank0
  3739  0EE6  01B7               	clrf	Serach_Flash_Head@i
  3740  0EE7  01B8               	clrf	Serach_Flash_Head@i+1
  3741                           
  3742                           ;save.c: 45: unsigned int data=0;
  3743  0EE8  01B5               	clrf	Serach_Flash_Head@data
  3744  0EE9  01B6               	clrf	Serach_Flash_Head@data+1
  3745                           
  3746                           ;save.c: 46: unsigned char count =0;
  3747  0EEA  01B4               	clrf	Serach_Flash_Head@count
  3748                           
  3749                           ;save.c: 47: for(i = 0x2000; i<16384;i++ )
  3750  0EEB  3000               	movlw	0
  3751  0EEC  00B7               	movwf	Serach_Flash_Head@i
  3752  0EED  3020               	movlw	32
  3753  0EEE  00B8               	movwf	Serach_Flash_Head@i+1
  3754  0EEF                     L1:	
  3755  0EEF  3040               	movlw	64
  3756  0EF0  0238               	subwf	Serach_Flash_Head@i+1,w
  3757  0EF1  3000               	movlw	0
  3758  0EF2  1903               	skipnz
  3759  0EF3  0237               	subwf	Serach_Flash_Head@i,w
  3760  0EF4  1803               	btfsc	3,0
  3761  0EF5  0008               	return
  3762                           
  3763                           ;save.c: 48: {
  3764                           ;save.c: 49: data = FLASH_ReadWord(i);
  3765  0EF6  0838               	movf	Serach_Flash_Head@i+1,w
  3766  0EF7  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3767  0EF8  0837               	movf	Serach_Flash_Head@i,w
  3768  0EF9  00F3               	movwf	FLASH_ReadWord@flashAddr
  3769  0EFA  3189  2183  318E   	fcall	_FLASH_ReadWord
  3770  0EFD  0874               	movf	?_FLASH_ReadWord+1,w
  3771  0EFE  0020               	movlb	0	; select bank0
  3772  0EFF  00B6               	movwf	Serach_Flash_Head@data+1
  3773  0F00  0873               	movf	?_FLASH_ReadWord,w
  3774  0F01  00B5               	movwf	Serach_Flash_Head@data
  3775                           
  3776                           ;save.c: 51: if( data == 0x1555 )
  3777  0F02  3055               	movlw	85
  3778  0F03  0635               	xorwf	Serach_Flash_Head@data,w
  3779  0F04  3015               	movlw	21
  3780  0F05  1903               	skipnz
  3781  0F06  0636               	xorwf	Serach_Flash_Head@data+1,w
  3782  0F07  1D03               	btfss	3,2
  3783  0F08  2F0E               	goto	l5347
  3784                           
  3785                           ;save.c: 52: {
  3786                           ;save.c: 53: count++;
  3787  0F09  3001               	movlw	1
  3788  0F0A  00B3               	movwf	??_Serach_Flash_Head
  3789  0F0B  0833               	movf	??_Serach_Flash_Head,w
  3790  0F0C  07B4               	addwf	Serach_Flash_Head@count,f
  3791                           
  3792                           ;save.c: 54: }
  3793  0F0D  2F33               	goto	l5365
  3794  0F0E                     l5347:	
  3795                           
  3796                           ;save.c: 55: else
  3797                           ;save.c: 56: {
  3798                           ;save.c: 57: if( data == 0x3fff && count >1 )
  3799  0F0E  0A35               	incf	Serach_Flash_Head@data,w
  3800  0F0F  303F               	movlw	63
  3801  0F10  1903               	skipnz
  3802  0F11  0636               	xorwf	Serach_Flash_Head@data+1,w
  3803  0F12  1D03               	btfss	3,2
  3804  0F13  2F20               	goto	l5355
  3805  0F14  3002               	movlw	2
  3806  0F15  0234               	subwf	Serach_Flash_Head@count,w
  3807  0F16  1C03               	skipc
  3808  0F17  2F20               	goto	l5355
  3809                           
  3810                           ;save.c: 58: {
  3811                           ;save.c: 59: Cur_Save_Index = i;
  3812  0F18  0838               	movf	Serach_Flash_Head@i+1,w
  3813  0F19  0021               	movlb	1	; select bank1
  3814  0F1A  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3815  0F1B  0020               	movlb	0	; select bank0
  3816  0F1C  0837               	movf	Serach_Flash_Head@i,w
  3817  0F1D  0021               	movlb	1	; select bank1
  3818  0F1E  00AE               	movwf	_Cur_Save_Index^(0+128)
  3819                           
  3820                           ;save.c: 60: break;
  3821  0F1F  0008               	return
  3822  0F20                     l5355:	
  3823                           ;save.c: 61: }
  3824                           
  3825                           
  3826                           ;save.c: 62: else if( data == 0x3fff )
  3827  0F20  0020               	movlb	0	; select bank0
  3828  0F21  0A35               	incf	Serach_Flash_Head@data,w
  3829  0F22  303F               	movlw	63
  3830  0F23  1903               	skipnz
  3831  0F24  0636               	xorwf	Serach_Flash_Head@data+1,w
  3832  0F25  1D03               	btfss	3,2
  3833  0F26  2F31               	goto	l5363
  3834                           
  3835                           ;save.c: 63: {
  3836                           ;save.c: 64: Cur_Save_Index = i;
  3837  0F27  0838               	movf	Serach_Flash_Head@i+1,w
  3838  0F28  0021               	movlb	1	; select bank1
  3839  0F29  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3840  0F2A  0020               	movlb	0	; select bank0
  3841  0F2B  0837               	movf	Serach_Flash_Head@i,w
  3842  0F2C  0021               	movlb	1	; select bank1
  3843  0F2D  00AE               	movwf	_Cur_Save_Index^(0+128)
  3844                           
  3845                           ;save.c: 65: Write_Flash_finish();
  3846  0F2E  318B  237F         	fcall	_Write_Flash_finish
  3847                           
  3848                           ;save.c: 66: break;
  3849  0F30  0008               	return
  3850  0F31                     l5363:	
  3851                           ;save.c: 67: }
  3852                           
  3853                           
  3854                           ;save.c: 68: else
  3855                           ;save.c: 69: {
  3856                           ;save.c: 70: count = 0;
  3857  0F31  0020               	movlb	0	; select bank0
  3858  0F32  01B4               	clrf	Serach_Flash_Head@count
  3859  0F33                     l5365:	
  3860  0F33  3001               	movlw	1
  3861  0F34  0020               	movlb	0	; select bank0
  3862  0F35  07B7               	addwf	Serach_Flash_Head@i,f
  3863  0F36  3000               	movlw	0
  3864  0F37  3DB8               	addwfc	Serach_Flash_Head@i+1,f
  3865  0F38  2EEF               	goto	L1
  3866  0F39                     __end_of_Serach_Flash_Head:	
  3867                           
  3868                           	psect	text4
  3869  0F39                     __ptext4:	
  3870 ;; *************** function _Save_process *****************
  3871 ;; Defined at:
  3872 ;;		line 120 in file "mcc_generated_files/save.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  var_time        2   49[BANK0 ] unsigned int 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3888 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3889 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;Total ram usage:        4 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    9
  3893 ;; This function calls:
  3894 ;;		_Calculate_Time
  3895 ;;		_Save_Write_word
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _Save_process
  3903  0F39                     _Save_process:	
  3904                           
  3905                           ;save.c: 122: unsigned int var_time=0;
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3909  0F39  0020               	movlb	0	; select bank0
  3910  0F3A  01D1               	clrf	Save_process@var_time
  3911  0F3B  01D2               	clrf	Save_process@var_time+1
  3912                           
  3913                           ;save.c: 123: if( time_count == 1 && Record_flag == 1 )
  3914  0F3C  036D               	decf	_time_count,w
  3915  0F3D  1D03               	btfss	3,2
  3916  0F3E  2F6B               	goto	l5451
  3917  0F3F  036B               	decf	_Record_flag,w
  3918  0F40  1D03               	btfss	3,2
  3919  0F41  2F6B               	goto	l5451
  3920                           
  3921                           ;save.c: 124: {
  3922                           ;save.c: 125: if(Cur_temperature_time_ch1 > 120)
  3923  0F42  3079               	movlw	121
  3924  0F43  0021               	movlb	1	; select bank1
  3925  0F44  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3926  0F45  1C03               	skipc
  3927  0F46  0008               	return
  3928                           
  3929                           ;save.c: 126: {
  3930                           ;save.c: 127: var_time = Calculate_Time();
  3931  0F47  3182  220B  318F   	fcall	_Calculate_Time
  3932  0F4A  0020               	movlb	0	; select bank0
  3933  0F4B  00CF               	movwf	??_Save_process
  3934  0F4C  01D0               	clrf	??_Save_process+1
  3935  0F4D  084F               	movf	??_Save_process,w
  3936  0F4E  00D1               	movwf	Save_process@var_time
  3937  0F4F  0850               	movf	??_Save_process+1,w
  3938  0F50  00D2               	movwf	Save_process@var_time+1
  3939                           
  3940                           ;save.c: 128: var_time |= 0x100;
  3941  0F51  1452               	bsf	Save_process@var_time+1,0
  3942                           
  3943                           ;save.c: 129: if(CH1_state == 1) var_time |= 0x400;
  3944  0F52  0021               	movlb	1	; select bank1
  3945  0F53  0334               	decf	_CH1_state^(0+128),w
  3946  0F54  1D03               	btfss	3,2
  3947  0F55  2F58               	goto	l1009
  3948  0F56  0020               	movlb	0	; select bank0
  3949  0F57  1552               	bsf	Save_process@var_time+1,2
  3950  0F58                     l1009:	
  3951                           
  3952                           ;save.c: 131: var_time |= 0x1000;
  3953  0F58  0020               	movlb	0	; select bank0
  3954  0F59  1652               	bsf	Save_process@var_time+1,4
  3955                           
  3956                           ;save.c: 133: Save_Write_word(var_time);
  3957  0F5A  0852               	movf	Save_process@var_time+1,w
  3958  0F5B  00B4               	movwf	Save_Write_word@data+1
  3959  0F5C  0851               	movf	Save_process@var_time,w
  3960  0F5D  00B3               	movwf	Save_Write_word@data
  3961  0F5E  318C  2477  318F   	fcall	_Save_Write_word
  3962                           
  3963                           ;save.c: 134: Save_Write_word(CH1_temperature);
  3964  0F61  0020               	movlb	0	; select bank0
  3965  0F62  086A               	movf	_CH1_temperature+1,w
  3966  0F63  00B4               	movwf	Save_Write_word@data+1
  3967  0F64  0869               	movf	_CH1_temperature,w
  3968  0F65  00B3               	movwf	Save_Write_word@data
  3969  0F66  318C  2477         	fcall	_Save_Write_word
  3970                           
  3971                           ;save.c: 136: Cur_temperature_time_ch1 = 0;
  3972  0F68  0021               	movlb	1	; select bank1
  3973  0F69  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3974                           
  3975                           ;save.c: 137: }
  3976                           ;save.c: 138: }
  3977  0F6A  0008               	return
  3978  0F6B                     l5451:	
  3979                           
  3980                           ;save.c: 139: else if(time_count == 3 && Record_flag == 1)
  3981  0F6B  3003               	movlw	3
  3982  0F6C  0020               	movlb	0	; select bank0
  3983  0F6D  066D               	xorwf	_time_count,w
  3984  0F6E  1D03               	btfss	3,2
  3985  0F6F  0008               	return
  3986  0F70  036B               	decf	_Record_flag,w
  3987  0F71  1D03               	btfss	3,2
  3988  0F72  0008               	return
  3989                           
  3990                           ;save.c: 140: {
  3991                           ;save.c: 141: if(Cur_temperature_time_ch2 > 120)
  3992  0F73  3079               	movlw	121
  3993  0F74  0021               	movlb	1	; select bank1
  3994  0F75  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3995  0F76  1C03               	skipc
  3996  0F77  0008               	return
  3997                           
  3998                           ;save.c: 142: {
  3999                           ;save.c: 143: var_time = Calculate_Time();
  4000  0F78  3182  220B  318F   	fcall	_Calculate_Time
  4001  0F7B  0020               	movlb	0	; select bank0
  4002  0F7C  00CF               	movwf	??_Save_process
  4003  0F7D  01D0               	clrf	??_Save_process+1
  4004  0F7E  084F               	movf	??_Save_process,w
  4005  0F7F  00D1               	movwf	Save_process@var_time
  4006  0F80  0850               	movf	??_Save_process+1,w
  4007  0F81  00D2               	movwf	Save_process@var_time+1
  4008                           
  4009                           ;save.c: 144: var_time |= 0x200;
  4010  0F82  14D2               	bsf	Save_process@var_time+1,1
  4011                           
  4012                           ;save.c: 145: if(CH2_state == 1) var_time |= 0x800;
  4013  0F83  0021               	movlb	1	; select bank1
  4014  0F84  0335               	decf	_CH2_state^(0+128),w
  4015  0F85  1D03               	btfss	3,2
  4016  0F86  2F89               	goto	l1013
  4017  0F87  0020               	movlb	0	; select bank0
  4018  0F88  15D2               	bsf	Save_process@var_time+1,3
  4019  0F89                     l1013:	
  4020                           
  4021                           ;save.c: 147: var_time |= 0x1000;
  4022  0F89  0020               	movlb	0	; select bank0
  4023  0F8A  1652               	bsf	Save_process@var_time+1,4
  4024                           
  4025                           ;save.c: 149: Save_Write_word(var_time);
  4026  0F8B  0852               	movf	Save_process@var_time+1,w
  4027  0F8C  00B4               	movwf	Save_Write_word@data+1
  4028  0F8D  0851               	movf	Save_process@var_time,w
  4029  0F8E  00B3               	movwf	Save_Write_word@data
  4030  0F8F  318C  2477  318F   	fcall	_Save_Write_word
  4031                           
  4032                           ;save.c: 150: Save_Write_word(CH2_temperature);
  4033  0F92  0879               	movf	_CH2_temperature+1,w
  4034  0F93  0020               	movlb	0	; select bank0
  4035  0F94  00B4               	movwf	Save_Write_word@data+1
  4036  0F95  0878               	movf	_CH2_temperature,w
  4037  0F96  00B3               	movwf	Save_Write_word@data
  4038  0F97  318C  2477         	fcall	_Save_Write_word
  4039                           
  4040                           ;save.c: 152: Cur_temperature_time_ch2 = 0;
  4041  0F99  0021               	movlb	1	; select bank1
  4042  0F9A  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  4043  0F9B  0008               	return
  4044  0F9C                     __end_of_Save_process:	
  4045                           
  4046                           	psect	text5
  4047  08F5                     __ptext5:	
  4048 ;; *************** function _SYSTEM_Initialize *****************
  4049 ;; Defined at:
  4050 ;;		line 70 in file "mcc_generated_files/mcc.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, pclath, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;Total ram usage:        0 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    4
  4071 ;; This function calls:
  4072 ;;		_ADC_Initialize
  4073 ;;		_EUSART_Initialize
  4074 ;;		_FVR_Initialize
  4075 ;;		_OSCILLATOR_Initialize
  4076 ;;		_PIN_MANAGER_Initialize
  4077 ;;		_SPI_Initialize
  4078 ;;		_TMR0_Initialize
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _SYSTEM_Initialize
  4086  08F5                     _SYSTEM_Initialize:	
  4087                           
  4088                           ;mcc.c: 71: OSCILLATOR_Initialize();
  4089                           
  4090                           ;incstack = 0
  4091                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4092  08F5  3188  2040  3188   	fcall	_OSCILLATOR_Initialize
  4093                           
  4094                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  4095  08F8  318A  22B7  3188   	fcall	_PIN_MANAGER_Initialize
  4096                           
  4097                           ;mcc.c: 73: SPI_Initialize();
  4098  08FB  3188  2051  3188   	fcall	_SPI_Initialize
  4099                           
  4100                           ;mcc.c: 74: EUSART_Initialize();
  4101  08FE  3188  2086  3188   	fcall	_EUSART_Initialize
  4102                           
  4103                           ;mcc.c: 75: ADC_Initialize();
  4104  0901  3188  206B  3188   	fcall	_ADC_Initialize
  4105                           
  4106                           ;mcc.c: 76: FVR_Initialize();
  4107  0904  3188  2037  3188   	fcall	_FVR_Initialize
  4108                           
  4109                           ;mcc.c: 77: TMR0_Initialize();
  4110  0907  3188  20AE         	fcall	_TMR0_Initialize
  4111  0909  0008               	return
  4112  090A                     __end_of_SYSTEM_Initialize:	
  4113                           
  4114                           	psect	text6
  4115  08AE                     __ptext6:	
  4116 ;; *************** function _TMR0_Initialize *****************
  4117 ;; Defined at:
  4118 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;Total ram usage:        1 bytes
  4137 ;; Hardware stack levels used:    1
  4138 ;; Hardware stack levels required when called:    3
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_SYSTEM_Initialize
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function _TMR0_Initialize
  4148  08AE                     _TMR0_Initialize:	
  4149                           
  4150                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  4154  08AE  0021               	movlb	1	; select bank1
  4155  08AF  0815               	movf	21,w	;volatile
  4156  08B0  39C0               	andlw	192
  4157  08B1  3817               	iorlw	23
  4158  08B2  0095               	movwf	21	;volatile
  4159                           
  4160                           ;tmr0.c: 73: TMR0 = 0xD9;
  4161  08B3  30D9               	movlw	217
  4162  08B4  0020               	movlb	0	; select bank0
  4163  08B5  0095               	movwf	21	;volatile
  4164                           
  4165                           ;tmr0.c: 76: timer0ReloadVal = 217;
  4166  08B6  30D9               	movlw	217
  4167  08B7  00F3               	movwf	??_TMR0_Initialize
  4168  08B8  0873               	movf	??_TMR0_Initialize,w
  4169  08B9  0021               	movlb	1	; select bank1
  4170  08BA  00EF               	movwf	_timer0ReloadVal^(0+128)	;volatile
  4171                           
  4172                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  4173  08BB  110B               	bcf	11,2	;volatile
  4174                           
  4175                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  4176  08BC  168B               	bsf	11,5	;volatile
  4177  08BD  0008               	return
  4178  08BE                     __end_of_TMR0_Initialize:	
  4179                           
  4180                           	psect	text7
  4181  0851                     __ptext7:	
  4182 ;; *************** function _SPI_Initialize *****************
  4183 ;; Defined at:
  4184 ;;		line 64 in file "mcc_generated_files/spi.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;Total ram usage:        0 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    3
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_SYSTEM_Initialize
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _SPI_Initialize
  4214  0851                     _SPI_Initialize:	
  4215                           
  4216                           ;spi.c: 68: SSP1STAT = 0x00;
  4217                           
  4218                           ;incstack = 0
  4219                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  4220  0851  0024               	movlb	4	; select bank4
  4221  0852  0194               	clrf	20	;volatile
  4222                           
  4223                           ;spi.c: 71: SSP1CON1 = 0x30;
  4224  0853  3030               	movlw	48
  4225  0854  0095               	movwf	21	;volatile
  4226                           
  4227                           ;spi.c: 74: SSP1ADD = 0x00;
  4228  0855  0192               	clrf	18	;volatile
  4229  0856  0008               	return
  4230  0857                     __end_of_SPI_Initialize:	
  4231                           
  4232                           	psect	text8
  4233  0AB7                     __ptext8:	
  4234 ;; *************** function _PIN_MANAGER_Initialize *****************
  4235 ;; Defined at:
  4236 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    3
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_SYSTEM_Initialize
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function _PIN_MANAGER_Initialize
  4266  0AB7                     _PIN_MANAGER_Initialize:	
  4267                           
  4268                           ;pin_manager.c: 51: LATA = 0x7B;
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4272  0AB7  307B               	movlw	123
  4273  0AB8  0022               	movlb	2	; select bank2
  4274  0AB9  008C               	movwf	12	;volatile
  4275                           
  4276                           ;pin_manager.c: 52: TRISA = 0x80;
  4277  0ABA  3080               	movlw	128
  4278  0ABB  0021               	movlb	1	; select bank1
  4279  0ABC  008C               	movwf	12	;volatile
  4280                           
  4281                           ;pin_manager.c: 53: ANSELA = 0x00;
  4282  0ABD  0023               	movlb	3	; select bank3
  4283  0ABE  018C               	clrf	12	;volatile
  4284                           
  4285                           ;pin_manager.c: 55: LATB = 0x00;
  4286  0ABF  0022               	movlb	2	; select bank2
  4287  0AC0  018D               	clrf	13	;volatile
  4288                           
  4289                           ;pin_manager.c: 56: TRISB = 0xFC;
  4290  0AC1  30FC               	movlw	252
  4291  0AC2  0021               	movlb	1	; select bank1
  4292  0AC3  008D               	movwf	13	;volatile
  4293                           
  4294                           ;pin_manager.c: 57: ANSELB = 0x10;
  4295  0AC4  3010               	movlw	16
  4296  0AC5  0023               	movlb	3	; select bank3
  4297  0AC6  008D               	movwf	13	;volatile
  4298                           
  4299                           ;pin_manager.c: 58: WPUB = 0x2C;
  4300  0AC7  302C               	movlw	44
  4301  0AC8  0024               	movlb	4	; select bank4
  4302  0AC9  008D               	movwf	13	;volatile
  4303                           
  4304                           ;pin_manager.c: 60: LATC = 0x07;
  4305  0ACA  3007               	movlw	7
  4306  0ACB  0022               	movlb	2	; select bank2
  4307  0ACC  008E               	movwf	14	;volatile
  4308                           
  4309                           ;pin_manager.c: 61: TRISC = 0xD0;
  4310  0ACD  30D0               	movlw	208
  4311  0ACE  0021               	movlb	1	; select bank1
  4312  0ACF  008E               	movwf	14	;volatile
  4313                           
  4314                           ;pin_manager.c: 62: ANSELC = 0x00;
  4315  0AD0  0023               	movlb	3	; select bank3
  4316  0AD1  018E               	clrf	14	;volatile
  4317                           
  4318                           ;pin_manager.c: 64: WPUE = 0x00;
  4319  0AD2  0024               	movlb	4	; select bank4
  4320  0AD3  0190               	clrf	16	;volatile
  4321                           
  4322                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4323  0AD4  0021               	movlb	1	; select bank1
  4324  0AD5  1395               	bcf	21,7	;volatile
  4325                           
  4326                           ;pin_manager.c: 68: APFCON = 0x00;
  4327  0AD6  0022               	movlb	2	; select bank2
  4328  0AD7  019D               	clrf	29	;volatile
  4329  0AD8  0008               	return
  4330  0AD9                     __end_of_PIN_MANAGER_Initialize:	
  4331                           
  4332                           	psect	text9
  4333  0840                     __ptext9:	
  4334 ;; *************** function _OSCILLATOR_Initialize *****************
  4335 ;; Defined at:
  4336 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    3
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_SYSTEM_Initialize
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _OSCILLATOR_Initialize
  4366  0840                     _OSCILLATOR_Initialize:	
  4367                           
  4368                           ;mcc.c: 82: OSCCON = 0x68;
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4372  0840  3068               	movlw	104
  4373  0841  0021               	movlb	1	; select bank1
  4374  0842  0099               	movwf	25	;volatile
  4375                           
  4376                           ;mcc.c: 84: OSCSTAT = 0x00;
  4377  0843  019A               	clrf	26	;volatile
  4378  0844  0008               	return
  4379  0845                     __end_of_OSCILLATOR_Initialize:	
  4380                           
  4381                           	psect	text10
  4382  0837                     __ptext10:	
  4383 ;; *************** function _FVR_Initialize *****************
  4384 ;; Defined at:
  4385 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    3
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_SYSTEM_Initialize
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _FVR_Initialize
  4415  0837                     _FVR_Initialize:	
  4416                           
  4417                           ;fvr.c: 60: FVRCON = 0x82;
  4418                           
  4419                           ;incstack = 0
  4420                           ; Regs used in _FVR_Initialize: [wreg]
  4421  0837  3082               	movlw	130
  4422  0838  0022               	movlb	2	; select bank2
  4423  0839  0097               	movwf	23	;volatile
  4424  083A  0008               	return
  4425  083B                     __end_of_FVR_Initialize:	
  4426                           
  4427                           	psect	text11
  4428  0886                     __ptext11:	
  4429 ;; *************** function _EUSART_Initialize *****************
  4430 ;; Defined at:
  4431 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    3
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_SYSTEM_Initialize
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function _EUSART_Initialize
  4461  0886                     _EUSART_Initialize:	
  4462                           
  4463                           ;eusart.c: 60: BAUDCON = 0x48;
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4467  0886  3048               	movlw	72
  4468  0887  0023               	movlb	3	; select bank3
  4469  0888  009F               	movwf	31	;volatile
  4470                           
  4471                           ;eusart.c: 63: RCSTA = 0x80;
  4472  0889  3080               	movlw	128
  4473  088A  009D               	movwf	29	;volatile
  4474                           
  4475                           ;eusart.c: 66: TXSTA = 0x26;
  4476  088B  3026               	movlw	38
  4477  088C  009E               	movwf	30	;volatile
  4478                           
  4479                           ;eusart.c: 69: SPBRGL = 0x67;
  4480  088D  3067               	movlw	103
  4481  088E  009B               	movwf	27	;volatile
  4482                           
  4483                           ;eusart.c: 72: SPBRGH = 0x00;
  4484  088F  019C               	clrf	28	;volatile
  4485  0890  0008               	return
  4486  0891                     __end_of_EUSART_Initialize:	
  4487                           
  4488                           	psect	text12
  4489  086B                     __ptext12:	
  4490 ;; *************** function _ADC_Initialize *****************
  4491 ;; Defined at:
  4492 ;;		line 65 in file "mcc_generated_files/adc.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    3
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_SYSTEM_Initialize
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _ADC_Initialize
  4522  086B                     _ADC_Initialize:	
  4523                           
  4524                           ;adc.c: 69: ADCON0 = 0x01;
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4528  086B  3001               	movlw	1
  4529  086C  0021               	movlb	1	; select bank1
  4530  086D  009D               	movwf	29	;volatile
  4531                           
  4532                           ;adc.c: 72: ADCON1 = 0xE3;
  4533  086E  30E3               	movlw	227
  4534  086F  009E               	movwf	30	;volatile
  4535                           
  4536                           ;adc.c: 75: ADRESL = 0x00;
  4537  0870  019B               	clrf	27	;volatile
  4538                           
  4539                           ;adc.c: 78: ADRESH = 0x00;
  4540  0871  019C               	clrf	28	;volatile
  4541  0872  0008               	return
  4542  0873                     __end_of_ADC_Initialize:	
  4543                           
  4544                           	psect	text13
  4545  0545                     __ptext13:	
  4546 ;; *************** function _Key_Process *****************
  4547 ;; Defined at:
  4548 ;;		line 42 in file "mcc_generated_files/key.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  i               2   64[BANK0 ] unsigned int 
  4553 ;;  data_temp       2   61[BANK0 ] unsigned int 
  4554 ;;  gKeyValue       1   63[BANK0 ] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;Total ram usage:        6 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:   12
  4571 ;; This function calls:
  4572 ;;		_EUSART_Write
  4573 ;;		_FLASH_ReadWord
  4574 ;;		_Key_Scan
  4575 ;;		_Save_Write_time
  4576 ;;		_SendCmd_1621
  4577 ;;		_Set_finish_flag
  4578 ;;		_Set_start_flag
  4579 ;;		_Write_Flash_finish
  4580 ;;		_Write_Flash_head
  4581 ;;		_temperature_process
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _Key_Process
  4589  0545                     _Key_Process:	
  4590                           
  4591                           ;key.c: 44: unsigned char gKeyValue=0;
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4595  0545  0020               	movlb	0	; select bank0
  4596  0546  01DF               	clrf	Key_Process@gKeyValue
  4597                           
  4598                           ;key.c: 46: unsigned int i;
  4599                           ;key.c: 47: unsigned int data_temp;
  4600                           ;key.c: 49: LongPressSec = 0;
  4601  0547  0021               	movlb	1	; select bank1
  4602  0548  01B8               	clrf	_LongPressSec^(0+128)
  4603                           
  4604                           ;key.c: 50: gKeyValue=Key_Scan();
  4605  0549  318A  22D9  3185   	fcall	_Key_Scan
  4606  054C  0020               	movlb	0	; select bank0
  4607  054D  00DC               	movwf	??_Key_Process
  4608  054E  085C               	movf	??_Key_Process,w
  4609  054F  00DF               	movwf	Key_Process@gKeyValue
  4610                           
  4611                           ;key.c: 51: if(gKeyValue)
  4612  0550  085F               	movf	Key_Process@gKeyValue,w
  4613  0551  1903               	btfsc	3,2
  4614  0552  0008               	return
  4615  0553  2DD0               	goto	l5429
  4616  0554                     l878:	
  4617                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) ) asm("clrwdt");
  4618                           
  4619                           ;key.c: 54: {
  4620                           ;key.c: 55: case 0x01:
  4621                           
  4622                           ;key.c: 52: {
  4623                           ;key.c: 53: switch(gKeyValue)
  4624                           
  4625  0554  0064               	clrwdt	;# 
  4626  0555                     l5377:	
  4627  0555  3003               	movlw	3
  4628  0556  0021               	movlb	1	; select bank1
  4629  0557  0238               	subwf	_LongPressSec^(0+128),w
  4630  0558  1803               	skipnc
  4631  0559  2D5D               	goto	l5381
  4632  055A  0020               	movlb	0	; select bank0
  4633  055B  1E8D               	btfss	13,5	;volatile
  4634  055C  2D54               	goto	l878
  4635  055D                     l5381:	
  4636                           
  4637                           ;key.c: 57: if(LongPressSec > 2)
  4638  055D  3003               	movlw	3
  4639  055E  0021               	movlb	1	; select bank1
  4640  055F  0238               	subwf	_LongPressSec^(0+128),w
  4641  0560  1C03               	skipc
  4642  0561  2D6A               	goto	l5385
  4643                           
  4644                           ;key.c: 58: {
  4645                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4646  0562  0022               	movlb	2	; select bank2
  4647  0563  110C               	bcf	12,2	;volatile
  4648                           
  4649                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4650  0564  158C               	bsf	12,3	;volatile
  4651                           
  4652                           ;key.c: 61: SendCmd_1621(0x04);
  4653  0565  3004               	movlw	4
  4654  0566  3189  210A  3185   	fcall	_SendCmd_1621
  4655                           
  4656                           ;key.c: 62: }
  4657  0569  2D93               	goto	l890
  4658  056A                     l5385:	
  4659                           
  4660                           ;key.c: 64: else
  4661                           ;key.c: 65: {
  4662                           ;key.c: 66: for(i=0x2000;i<0x2000+1000;i++)
  4663  056A  3000               	movlw	0
  4664  056B  0020               	movlb	0	; select bank0
  4665  056C  00E0               	movwf	Key_Process@i
  4666  056D  3020               	movlw	32
  4667  056E  00E1               	movwf	Key_Process@i+1
  4668  056F                     L2:	
  4669  056F  3023               	movlw	35
  4670  0570  0261               	subwf	Key_Process@i+1,w
  4671  0571  30E8               	movlw	232
  4672  0572  1903               	skipnz
  4673  0573  0260               	subwf	Key_Process@i,w
  4674  0574  1803               	btfsc	3,0
  4675  0575  2D93               	goto	l890
  4676                           
  4677                           ;key.c: 67: {
  4678                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4679  0576  0861               	movf	Key_Process@i+1,w
  4680  0577  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4681  0578  0860               	movf	Key_Process@i,w
  4682  0579  00F3               	movwf	FLASH_ReadWord@flashAddr
  4683  057A  3189  2183  3185   	fcall	_FLASH_ReadWord
  4684  057D  0874               	movf	?_FLASH_ReadWord+1,w
  4685  057E  0020               	movlb	0	; select bank0
  4686  057F  00DE               	movwf	Key_Process@data_temp+1
  4687  0580  0873               	movf	?_FLASH_ReadWord,w
  4688  0581  00DD               	movwf	Key_Process@data_temp
  4689                           
  4690                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4691  0582  085E               	movf	Key_Process@data_temp+1,w
  4692  0583  3188  2063  3185   	fcall	_EUSART_Write
  4693                           
  4694                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4695  0586  0020               	movlb	0	; select bank0
  4696  0587  085D               	movf	Key_Process@data_temp,w
  4697  0588  3188  2063  3185   	fcall	_EUSART_Write
  4698  058B  0064               	clrwdt	;# 
  4699  058C  3001               	movlw	1
  4700  058D  0020               	movlb	0	; select bank0
  4701  058E  07E0               	addwf	Key_Process@i,f
  4702  058F  3000               	movlw	0
  4703  0590  3DE1               	addwfc	Key_Process@i+1,f
  4704  0591  2D6F               	goto	L2
  4705  0592                     l891:	
  4706                           ;key.c: 72: }
  4707                           ;key.c: 73: }
  4708                           ;key.c: 75: while(RB5 == 0) asm("clrwdt");
  4709                           
  4710  0592  0064               	clrwdt	;# 
  4711  0593                     l890:	
  4712  0593  0020               	movlb	0	; select bank0
  4713  0594  1A8D               	btfsc	13,5	;volatile
  4714  0595  0008               	return
  4715  0596  2D92               	goto	l891
  4716  0597                     l896:	
  4717                           ;key.c: 78: while( !(LongPressSec > 2 || RA7 == 1) )asm("clrwdt");
  4718                           
  4719                           ;key.c: 77: case 0x02:
  4720                           
  4721                           ;key.c: 76: break;
  4722                           
  4723  0597  0064               	clrwdt	;# 
  4724  0598                     l5395:	
  4725  0598  3003               	movlw	3
  4726  0599  0021               	movlb	1	; select bank1
  4727  059A  0238               	subwf	_LongPressSec^(0+128),w
  4728  059B  1803               	skipnc
  4729  059C  2DA0               	goto	l5399
  4730  059D  0020               	movlb	0	; select bank0
  4731  059E  1F8C               	btfss	12,7	;volatile
  4732  059F  2D97               	goto	l896
  4733  05A0                     l5399:	
  4734                           
  4735                           ;key.c: 79: if(LongPressSec > 2)
  4736  05A0  3003               	movlw	3
  4737  05A1  0021               	movlb	1	; select bank1
  4738  05A2  0238               	subwf	_LongPressSec^(0+128),w
  4739  05A3  1C03               	skipc
  4740  05A4  2DC3               	goto	l5423
  4741                           
  4742                           ;key.c: 80: {
  4743                           ;key.c: 81: if(Record_flag == 0)
  4744  05A5  0020               	movlb	0	; select bank0
  4745  05A6  086B               	movf	_Record_flag,w
  4746  05A7  1D03               	btfss	3,2
  4747  05A8  2DBC               	goto	l5419
  4748                           
  4749                           ;key.c: 82: {
  4750                           ;key.c: 83: Set_start_flag();
  4751  05A9  3188  204B  3185   	fcall	_Set_start_flag
  4752                           
  4753                           ;key.c: 84: Write_Flash_head();
  4754  05AC  318B  23AE  3185   	fcall	_Write_Flash_head
  4755                           
  4756                           ;key.c: 85: Save_Write_time();
  4757  05AF  3186  26E7  3185   	fcall	_Save_Write_time
  4758                           
  4759                           ;key.c: 86: Cur_temperature_time_ch1 = 0;
  4760  05B2  0021               	movlb	1	; select bank1
  4761  05B3  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  4762                           
  4763                           ;key.c: 87: Cur_temperature_time_ch2 = 0;
  4764  05B4  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  4765                           
  4766                           ;key.c: 88: CH1_temperature = 0;
  4767  05B5  0020               	movlb	0	; select bank0
  4768  05B6  01E9               	clrf	_CH1_temperature
  4769  05B7  01EA               	clrf	_CH1_temperature+1
  4770                           
  4771                           ;key.c: 89: CH2_temperature = 0;
  4772  05B8  01F8               	clrf	_CH2_temperature
  4773  05B9  01F9               	clrf	_CH2_temperature+1
  4774                           
  4775                           ;key.c: 90: time_count = 0;
  4776  05BA  01ED               	clrf	_time_count
  4777                           
  4778                           ;key.c: 91: }
  4779  05BB  2DCB               	goto	l904
  4780  05BC                     l5419:	
  4781                           
  4782                           ;key.c: 92: else
  4783                           ;key.c: 93: {
  4784                           ;key.c: 94: Set_finish_flag();
  4785  05BC  3188  203B  3185   	fcall	_Set_finish_flag
  4786                           
  4787                           ;key.c: 95: Write_Flash_finish();
  4788  05BF  318B  237F  3185   	fcall	_Write_Flash_finish
  4789                           
  4790                           ;key.c: 96: }
  4791                           ;key.c: 97: }
  4792  05C2  2DCB               	goto	l904
  4793  05C3                     l5423:	
  4794                           
  4795                           ;key.c: 98: else
  4796                           ;key.c: 99: {
  4797                           ;key.c: 100: time_count = 5;
  4798  05C3  3005               	movlw	5
  4799  05C4  0020               	movlb	0	; select bank0
  4800  05C5  00DC               	movwf	??_Key_Process
  4801  05C6  085C               	movf	??_Key_Process,w
  4802  05C7  00ED               	movwf	_time_count
  4803                           
  4804                           ;key.c: 101: temperature_process();
  4805  05C8  318C  24AD  3185   	fcall	_temperature_process
  4806  05CB                     l904:	
  4807                           ;key.c: 102: }
  4808                           ;key.c: 103: while(RA7 == 0)asm("clrwdt");
  4809                           
  4810  05CB  0020               	movlb	0	; select bank0
  4811  05CC  1B8C               	btfsc	12,7	;volatile
  4812  05CD  0008               	return
  4813  05CE  0064               	clrwdt	;# 
  4814  05CF  2DCB               	goto	l904
  4815  05D0                     l5429:	
  4816                           ;key.c: 106: }
  4817                           
  4818                           ;key.c: 105: default:break;
  4819                           
  4820                           ;key.c: 104: break;
  4821                           
  4822  05D0  085F               	movf	Key_Process@gKeyValue,w
  4823                           
  4824                           ; Switch size 1, requested type "space"
  4825                           ; Number of cases is 2, Range of values is 1 to 2
  4826                           ; switch strategies available:
  4827                           ; Name         Instructions Cycles
  4828                           ; simple_byte            7     4 (average)
  4829                           ; direct_byte           13     9 (fixed)
  4830                           ; jumptable            263     9 (fixed)
  4831                           ;	Chosen strategy is simple_byte
  4832  05D1  3A01               	xorlw	1	; case 1
  4833  05D2  1903               	skipnz
  4834  05D3  2D55               	goto	l5377
  4835  05D4  3A03               	xorlw	3	; case 2
  4836  05D5  1903               	skipnz
  4837  05D6  2D98               	goto	l5395
  4838  05D7  2DD9               	goto	l908
  4839  05D8  0008               	return
  4840  05D9                     l908:	
  4841  05D9  0008               	return
  4842  05DA                     __end_of_Key_Process:	
  4843                           
  4844                           	psect	text14
  4845  0CAD                     __ptext14:	
  4846 ;; *************** function _temperature_process *****************
  4847 ;; Defined at:
  4848 ;;		line 381 in file "mcc_generated_files/max31856.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:   11
  4869 ;; This function calls:
  4870 ;;		_Two_Display
  4871 ;;		_one_temperature_trans
  4872 ;;		_temperature_display
  4873 ;;		_time_Display
  4874 ;; This function is called by:
  4875 ;;		_main
  4876 ;;		_Key_Process
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _temperature_process
  4882  0CAD                     _temperature_process:	
  4883                           
  4884                           ;max31856.c: 383: switch(time_count)
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4888  0CAD  2CD1               	goto	l5241
  4889  0CAE                     l5209:	
  4890                           ;max31856.c: 384: {
  4891                           ;max31856.c: 385: case 0:
  4892                           
  4893                           
  4894                           ;max31856.c: 386: Two_Display(1);
  4895  0CAE  3001               	movlw	1
  4896  0CAF  318B  23DD  318C   	fcall	_Two_Display
  4897                           
  4898                           ;max31856.c: 387: do { LATA1 = 1; } while(0);
  4899  0CB2  0022               	movlb	2	; select bank2
  4900  0CB3  148C               	bsf	12,1	;volatile
  4901                           
  4902                           ;max31856.c: 388: do { LATA0 = 1; } while(0);
  4903  0CB4  140C               	bsf	12,0	;volatile
  4904                           
  4905                           ;max31856.c: 389: do { LATA0 = 0; } while(0);
  4906  0CB5  100C               	bcf	12,0	;volatile
  4907                           
  4908                           ;max31856.c: 390: one_temperature_trans();
  4909  0CB6  318D  25AC         	fcall	_one_temperature_trans
  4910                           
  4911                           ;max31856.c: 391: do { LATA0 = 1; } while(0);
  4912  0CB8  0022               	movlb	2	; select bank2
  4913  0CB9  140C               	bsf	12,0	;volatile
  4914                           
  4915                           ;max31856.c: 392: break;
  4916  0CBA  0008               	return
  4917  0CBB                     l5221:	
  4918                           ;max31856.c: 393: case 1:
  4919                           
  4920                           
  4921                           ;max31856.c: 394: temperature_display();
  4922  0CBB  318C  24E4         	fcall	_temperature_display
  4923                           
  4924                           ;max31856.c: 395: break;
  4925  0CBD  0008               	return
  4926  0CBE                     l5223:	
  4927                           ;max31856.c: 396: case 2:
  4928                           
  4929                           
  4930                           ;max31856.c: 397: Two_Display(2);
  4931  0CBE  3002               	movlw	2
  4932  0CBF  318B  23DD  318C   	fcall	_Two_Display
  4933                           
  4934                           ;max31856.c: 398: do { LATA0 = 1; } while(0);
  4935  0CC2  0022               	movlb	2	; select bank2
  4936  0CC3  140C               	bsf	12,0	;volatile
  4937                           
  4938                           ;max31856.c: 399: do { LATA1 = 1; } while(0);
  4939  0CC4  148C               	bsf	12,1	;volatile
  4940                           
  4941                           ;max31856.c: 400: do { LATA1 = 0; } while(0);
  4942  0CC5  108C               	bcf	12,1	;volatile
  4943                           
  4944                           ;max31856.c: 401: one_temperature_trans();
  4945  0CC6  318D  25AC         	fcall	_one_temperature_trans
  4946                           
  4947                           ;max31856.c: 402: do { LATA1 = 1; } while(0);
  4948  0CC8  0022               	movlb	2	; select bank2
  4949  0CC9  148C               	bsf	12,1	;volatile
  4950                           
  4951                           ;max31856.c: 403: break;
  4952  0CCA  0008               	return
  4953  0CCB                     l5235:	
  4954                           ;max31856.c: 404: case 3:
  4955                           
  4956                           
  4957                           ;max31856.c: 405: temperature_display();
  4958  0CCB  318C  24E4         	fcall	_temperature_display
  4959                           
  4960                           ;max31856.c: 406: break;
  4961  0CCD  0008               	return
  4962  0CCE                     l5237:	
  4963                           ;max31856.c: 407: case 5:
  4964                           
  4965                           
  4966                           ;max31856.c: 408: time_Display();
  4967  0CCE  3185  25DA         	fcall	_time_Display
  4968                           
  4969                           ;max31856.c: 411: }
  4970                           
  4971                           ;max31856.c: 410: default:break;
  4972                           
  4973                           ;max31856.c: 409: break;
  4974  0CD0  0008               	return
  4975  0CD1                     l5241:	
  4976  0CD1  0020               	movlb	0	; select bank0
  4977  0CD2  086D               	movf	_time_count,w
  4978                           
  4979                           ; Switch size 1, requested type "space"
  4980                           ; Number of cases is 5, Range of values is 0 to 5
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte           16     9 (average)
  4984                           ; direct_byte           18     6 (fixed)
  4985                           ; jumptable            260     6 (fixed)
  4986                           ;	Chosen strategy is simple_byte
  4987  0CD3  3A00               	xorlw	0	; case 0
  4988  0CD4  1903               	skipnz
  4989  0CD5  2CAE               	goto	l5209
  4990  0CD6  3A01               	xorlw	1	; case 1
  4991  0CD7  1903               	skipnz
  4992  0CD8  2CBB               	goto	l5221
  4993  0CD9  3A03               	xorlw	3	; case 2
  4994  0CDA  1903               	skipnz
  4995  0CDB  2CBE               	goto	l5223
  4996  0CDC  3A01               	xorlw	1	; case 3
  4997  0CDD  1903               	skipnz
  4998  0CDE  2CCB               	goto	l5235
  4999  0CDF  3A06               	xorlw	6	; case 5
  5000  0CE0  1903               	skipnz
  5001  0CE1  2CCE               	goto	l5237
  5002  0CE2  2CE3               	goto	l589
  5003  0CE3                     l589:	
  5004  0CE3  0008               	return
  5005  0CE4                     __end_of_temperature_process:	
  5006                           
  5007                           	psect	text15
  5008  05DA                     __ptext15:	
  5009 ;; *************** function _time_Display *****************
  5010 ;; Defined at:
  5011 ;;		line 167 in file "mcc_generated_files/ht1621.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  num             4   19[BANK0 ] unsigned char [4]
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;Total ram usage:        7 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    6
  5032 ;; This function calls:
  5033 ;;		_Bq32k_Rtc_Read_Time
  5034 ;;		_WriteAll_1621
  5035 ;;		___awdiv
  5036 ;;		___awmod
  5037 ;; This function is called by:
  5038 ;;		_temperature_process
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function _time_Display
  5044  05DA                     _time_Display:	
  5045                           
  5046                           ;ht1621.c: 169: unsigned char num[4]={0};
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5050  05DA  0021               	movlb	1	; select bank1
  5051  05DB  082B               	movf	(time_Display@F2129+3)^(0+128),w
  5052  05DC  0020               	movlb	0	; select bank0
  5053  05DD  00B6               	movwf	time_Display@num+3
  5054  05DE  0021               	movlb	1	; select bank1
  5055  05DF  082A               	movf	(time_Display@F2129+2)^(0+128),w
  5056  05E0  0020               	movlb	0	; select bank0
  5057  05E1  00B5               	movwf	time_Display@num+2
  5058  05E2  0021               	movlb	1	; select bank1
  5059  05E3  0829               	movf	(time_Display@F2129+1)^(0+128),w
  5060  05E4  0020               	movlb	0	; select bank0
  5061  05E5  00B4               	movwf	time_Display@num+1
  5062  05E6  0021               	movlb	1	; select bank1
  5063  05E7  0828               	movf	time_Display@F2129^(0+128),w
  5064  05E8  0020               	movlb	0	; select bank0
  5065  05E9  00B3               	movwf	time_Display@num
  5066                           
  5067                           ;ht1621.c: 170: Bq32k_Rtc_Read_Time(&rtc_tm);
  5068  05EA  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  5069  05EB  318F  279C  3185   	fcall	_Bq32k_Rtc_Read_Time
  5070                           
  5071                           ;ht1621.c: 171: num[0] = Dis_TAB[rtc_tm.hours / 10];
  5072  05EE  300A               	movlw	10
  5073  05EF  00F3               	movwf	___awdiv@divisor
  5074  05F0  3000               	movlw	0
  5075  05F1  00F4               	movwf	___awdiv@divisor+1
  5076  05F2  0021               	movlb	1	; select bank1
  5077  05F3  085C               	movf	(_rtc_tm^(0+128)+2),w
  5078  05F4  0020               	movlb	0	; select bank0
  5079  05F5  00B0               	movwf	??_time_Display
  5080  05F6  01B1               	clrf	??_time_Display+1
  5081  05F7  0830               	movf	??_time_Display,w
  5082  05F8  00F5               	movwf	___awdiv@dividend
  5083  05F9  0831               	movf	??_time_Display+1,w
  5084  05FA  00F6               	movwf	___awdiv@dividend+1
  5085  05FB  318E  2693  3185   	fcall	___awdiv
  5086  05FE  0874               	movf	?___awdiv+1,w
  5087  05FF  0085               	movwf	5
  5088  0600  0873               	movf	?___awdiv,w
  5089  0601  0084               	movwf	4
  5090  0602  3000               	movlw	low (_Dis_TAB| (0+32768))
  5091  0603  0784               	addwf	4,f
  5092  0604  3090               	movlw	high (_Dis_TAB| (0+32768))
  5093  0605  3D85               	addwfc	5,f
  5094  0606  0800               	movf	0,w	;code access
  5095  0607  0020               	movlb	0	; select bank0
  5096  0608  00B2               	movwf	??_time_Display+2
  5097  0609  0832               	movf	??_time_Display+2,w
  5098  060A  00B3               	movwf	time_Display@num
  5099                           
  5100                           ;ht1621.c: 172: num[0] |= 0x08;
  5101  060B  15B3               	bsf	time_Display@num,3
  5102                           
  5103                           ;ht1621.c: 173: num[1] = Dis_TAB[rtc_tm.hours % 10];
  5104  060C  300A               	movlw	10
  5105  060D  00F3               	movwf	___awmod@divisor
  5106  060E  3000               	movlw	0
  5107  060F  00F4               	movwf	___awmod@divisor+1
  5108  0610  0021               	movlb	1	; select bank1
  5109  0611  085C               	movf	(_rtc_tm^(0+128)+2),w
  5110  0612  0020               	movlb	0	; select bank0
  5111  0613  00B0               	movwf	??_time_Display
  5112  0614  01B1               	clrf	??_time_Display+1
  5113  0615  0830               	movf	??_time_Display,w
  5114  0616  00F5               	movwf	___awmod@dividend
  5115  0617  0831               	movf	??_time_Display+1,w
  5116  0618  00F6               	movwf	___awmod@dividend+1
  5117  0619  318D  2566  3185   	fcall	___awmod
  5118  061C  0874               	movf	?___awmod+1,w
  5119  061D  0085               	movwf	5
  5120  061E  0873               	movf	?___awmod,w
  5121  061F  0084               	movwf	4
  5122  0620  3000               	movlw	low (_Dis_TAB| (0+32768))
  5123  0621  0784               	addwf	4,f
  5124  0622  3090               	movlw	high (_Dis_TAB| (0+32768))
  5125  0623  3D85               	addwfc	5,f
  5126  0624  0800               	movf	0,w	;code access
  5127  0625  0020               	movlb	0	; select bank0
  5128  0626  00B2               	movwf	??_time_Display+2
  5129  0627  0832               	movf	??_time_Display+2,w
  5130  0628  00B4               	movwf	time_Display@num+1
  5131                           
  5132                           ;ht1621.c: 174: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  5133  0629  300A               	movlw	10
  5134  062A  00F3               	movwf	___awdiv@divisor
  5135  062B  3000               	movlw	0
  5136  062C  00F4               	movwf	___awdiv@divisor+1
  5137  062D  0021               	movlb	1	; select bank1
  5138  062E  085B               	movf	(_rtc_tm^(0+128)+1),w
  5139  062F  0020               	movlb	0	; select bank0
  5140  0630  00B0               	movwf	??_time_Display
  5141  0631  01B1               	clrf	??_time_Display+1
  5142  0632  0830               	movf	??_time_Display,w
  5143  0633  00F5               	movwf	___awdiv@dividend
  5144  0634  0831               	movf	??_time_Display+1,w
  5145  0635  00F6               	movwf	___awdiv@dividend+1
  5146  0636  318E  2693  3185   	fcall	___awdiv
  5147  0639  0874               	movf	?___awdiv+1,w
  5148  063A  0085               	movwf	5
  5149  063B  0873               	movf	?___awdiv,w
  5150  063C  0084               	movwf	4
  5151  063D  3000               	movlw	low (_Dis_TAB| (0+32768))
  5152  063E  0784               	addwf	4,f
  5153  063F  3090               	movlw	high (_Dis_TAB| (0+32768))
  5154  0640  3D85               	addwfc	5,f
  5155  0641  0800               	movf	0,w	;code access
  5156  0642  0020               	movlb	0	; select bank0
  5157  0643  00B2               	movwf	??_time_Display+2
  5158  0644  0832               	movf	??_time_Display+2,w
  5159  0645  00B5               	movwf	time_Display@num+2
  5160                           
  5161                           ;ht1621.c: 175: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  5162  0646  300A               	movlw	10
  5163  0647  00F3               	movwf	___awmod@divisor
  5164  0648  3000               	movlw	0
  5165  0649  00F4               	movwf	___awmod@divisor+1
  5166  064A  0021               	movlb	1	; select bank1
  5167  064B  085B               	movf	(_rtc_tm^(0+128)+1),w
  5168  064C  0020               	movlb	0	; select bank0
  5169  064D  00B0               	movwf	??_time_Display
  5170  064E  01B1               	clrf	??_time_Display+1
  5171  064F  0830               	movf	??_time_Display,w
  5172  0650  00F5               	movwf	___awmod@dividend
  5173  0651  0831               	movf	??_time_Display+1,w
  5174  0652  00F6               	movwf	___awmod@dividend+1
  5175  0653  318D  2566  3185   	fcall	___awmod
  5176  0656  0874               	movf	?___awmod+1,w
  5177  0657  0085               	movwf	5
  5178  0658  0873               	movf	?___awmod,w
  5179  0659  0084               	movwf	4
  5180  065A  3000               	movlw	low (_Dis_TAB| (0+32768))
  5181  065B  0784               	addwf	4,f
  5182  065C  3090               	movlw	high (_Dis_TAB| (0+32768))
  5183  065D  3D85               	addwfc	5,f
  5184  065E  0800               	movf	0,w	;code access
  5185  065F  0020               	movlb	0	; select bank0
  5186  0660  00B2               	movwf	??_time_Display+2
  5187  0661  0832               	movf	??_time_Display+2,w
  5188  0662  00B6               	movwf	time_Display@num+3
  5189                           
  5190                           ;ht1621.c: 176: WriteAll_1621(0, num, 4);
  5191  0663  3033               	movlw	low time_Display@num
  5192  0664  00A0               	movwf	WriteAll_1621@p
  5193  0665  3000               	movlw	high time_Display@num
  5194  0666  00A1               	movwf	WriteAll_1621@p+1
  5195  0667  3004               	movlw	4
  5196  0668  00B0               	movwf	??_time_Display
  5197  0669  0830               	movf	??_time_Display,w
  5198  066A  00A2               	movwf	WriteAll_1621@cnt
  5199  066B  3000               	movlw	0
  5200  066C  318C  240E         	fcall	_WriteAll_1621
  5201  066E  0008               	return
  5202  066F                     __end_of_time_Display:	
  5203                           
  5204                           	psect	text16
  5205  0D66                     __ptext16:	
  5206 ;; *************** function ___awmod *****************
  5207 ;; Defined at:
  5208 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  divisor         2    3[COMMON] int 
  5211 ;;  dividend        2    5[COMMON] int 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  sign            1    1[BANK0 ] unsigned char 
  5214 ;;  counter         1    0[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  2    3[COMMON] int 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;Total ram usage:        7 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    3
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_time_Display
  5235 ;;		_bin2bcd
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function ___awmod
  5241  0D66                     ___awmod:	
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5245  0D66  0020               	movlb	0	; select bank0
  5246  0D67  01A1               	clrf	___awmod@sign
  5247  0D68  1FF6               	btfss	___awmod@dividend+1,7
  5248  0D69  2D71               	goto	l5047
  5249  0D6A  09F5               	comf	___awmod@dividend,f
  5250  0D6B  09F6               	comf	___awmod@dividend+1,f
  5251  0D6C  0AF5               	incf	___awmod@dividend,f
  5252  0D6D  1903               	skipnz
  5253  0D6E  0AF6               	incf	___awmod@dividend+1,f
  5254  0D6F  01A1               	clrf	___awmod@sign
  5255  0D70  0AA1               	incf	___awmod@sign,f
  5256  0D71                     l5047:	
  5257  0D71  1FF4               	btfss	___awmod@divisor+1,7
  5258  0D72  2D78               	goto	l5051
  5259  0D73  09F3               	comf	___awmod@divisor,f
  5260  0D74  09F4               	comf	___awmod@divisor+1,f
  5261  0D75  0AF3               	incf	___awmod@divisor,f
  5262  0D76  1903               	skipnz
  5263  0D77  0AF4               	incf	___awmod@divisor+1,f
  5264  0D78                     l5051:	
  5265  0D78  0873               	movf	___awmod@divisor,w
  5266  0D79  0474               	iorwf	___awmod@divisor+1,w
  5267  0D7A  1903               	btfsc	3,2
  5268  0D7B  2D9F               	goto	l5069
  5269  0D7C  01A0               	clrf	___awmod@counter
  5270  0D7D  0AA0               	incf	___awmod@counter,f
  5271  0D7E                     l5059:	
  5272  0D7E  1BF4               	btfsc	___awmod@divisor+1,7
  5273  0D7F  2D8A               	goto	l5061
  5274  0D80  3001               	movlw	1
  5275  0D81                     u4635:	
  5276  0D81  35F3               	lslf	___awmod@divisor,f
  5277  0D82  0DF4               	rlf	___awmod@divisor+1,f
  5278  0D83  0B89               	decfsz	9,f
  5279  0D84  2D81               	goto	u4635
  5280  0D85  3001               	movlw	1
  5281  0D86  00F7               	movwf	??___awmod
  5282  0D87  0877               	movf	??___awmod,w
  5283  0D88  07A0               	addwf	___awmod@counter,f
  5284  0D89  2D7E               	goto	l5059
  5285  0D8A                     l5061:	
  5286  0D8A  0874               	movf	___awmod@divisor+1,w
  5287  0D8B  0276               	subwf	___awmod@dividend+1,w
  5288  0D8C  1D03               	skipz
  5289  0D8D  2D90               	goto	u4655
  5290  0D8E  0873               	movf	___awmod@divisor,w
  5291  0D8F  0275               	subwf	___awmod@dividend,w
  5292  0D90                     u4655:	
  5293  0D90  1C03               	skipc
  5294  0D91  2D96               	goto	l5065
  5295  0D92  0873               	movf	___awmod@divisor,w
  5296  0D93  02F5               	subwf	___awmod@dividend,f
  5297  0D94  0874               	movf	___awmod@divisor+1,w
  5298  0D95  3BF6               	subwfb	___awmod@dividend+1,f
  5299  0D96                     l5065:	
  5300  0D96  3001               	movlw	1
  5301  0D97                     u4665:	
  5302  0D97  36F4               	lsrf	___awmod@divisor+1,f
  5303  0D98  0CF3               	rrf	___awmod@divisor,f
  5304  0D99  0B89               	decfsz	9,f
  5305  0D9A  2D97               	goto	u4665
  5306  0D9B  3001               	movlw	1
  5307  0D9C  02A0               	subwf	___awmod@counter,f
  5308  0D9D  1D03               	btfss	3,2
  5309  0D9E  2D8A               	goto	l5061
  5310  0D9F                     l5069:	
  5311  0D9F  0821               	movf	___awmod@sign,w
  5312  0DA0  1903               	btfsc	3,2
  5313  0DA1  2DA7               	goto	l5073
  5314  0DA2  09F5               	comf	___awmod@dividend,f
  5315  0DA3  09F6               	comf	___awmod@dividend+1,f
  5316  0DA4  0AF5               	incf	___awmod@dividend,f
  5317  0DA5  1903               	skipnz
  5318  0DA6  0AF6               	incf	___awmod@dividend+1,f
  5319  0DA7                     l5073:	
  5320  0DA7  0876               	movf	___awmod@dividend+1,w
  5321  0DA8  00F4               	movwf	?___awmod+1
  5322  0DA9  0875               	movf	___awmod@dividend,w
  5323  0DAA  00F3               	movwf	?___awmod
  5324  0DAB  0008               	return
  5325  0DAC                     __end_of___awmod:	
  5326                           
  5327                           	psect	text17
  5328  0E93                     __ptext17:	
  5329 ;; *************** function ___awdiv *****************
  5330 ;; Defined at:
  5331 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  divisor         2    3[COMMON] int 
  5334 ;;  dividend        2    5[COMMON] int 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  quotient        2    2[BANK0 ] int 
  5337 ;;  sign            1    1[BANK0 ] unsigned char 
  5338 ;;  counter         1    0[BANK0 ] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  2    3[COMMON] int 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5351 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5352 ;;Total ram usage:        9 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    3
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_time_Display
  5359 ;;		_bin2bcd
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           
  5364                           ;psect for function ___awdiv
  5365  0E93                     ___awdiv:	
  5366                           
  5367                           ;incstack = 0
  5368                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5369  0E93  0020               	movlb	0	; select bank0
  5370  0E94  01A1               	clrf	___awdiv@sign
  5371  0E95  1FF4               	btfss	___awdiv@divisor+1,7
  5372  0E96  2E9E               	goto	l5003
  5373  0E97  09F3               	comf	___awdiv@divisor,f
  5374  0E98  09F4               	comf	___awdiv@divisor+1,f
  5375  0E99  0AF3               	incf	___awdiv@divisor,f
  5376  0E9A  1903               	skipnz
  5377  0E9B  0AF4               	incf	___awdiv@divisor+1,f
  5378  0E9C  01A1               	clrf	___awdiv@sign
  5379  0E9D  0AA1               	incf	___awdiv@sign,f
  5380  0E9E                     l5003:	
  5381  0E9E  1FF6               	btfss	___awdiv@dividend+1,7
  5382  0E9F  2EA9               	goto	l5009
  5383  0EA0  09F5               	comf	___awdiv@dividend,f
  5384  0EA1  09F6               	comf	___awdiv@dividend+1,f
  5385  0EA2  0AF5               	incf	___awdiv@dividend,f
  5386  0EA3  1903               	skipnz
  5387  0EA4  0AF6               	incf	___awdiv@dividend+1,f
  5388  0EA5  3001               	movlw	1
  5389  0EA6  00F7               	movwf	??___awdiv
  5390  0EA7  0877               	movf	??___awdiv,w
  5391  0EA8  06A1               	xorwf	___awdiv@sign,f
  5392  0EA9                     l5009:	
  5393  0EA9  01A2               	clrf	___awdiv@quotient
  5394  0EAA  01A3               	clrf	___awdiv@quotient+1
  5395  0EAB  0873               	movf	___awdiv@divisor,w
  5396  0EAC  0474               	iorwf	___awdiv@divisor+1,w
  5397  0EAD  1903               	btfsc	3,2
  5398  0EAE  2ED8               	goto	l5031
  5399  0EAF  01A0               	clrf	___awdiv@counter
  5400  0EB0  0AA0               	incf	___awdiv@counter,f
  5401  0EB1                     l5019:	
  5402  0EB1  1BF4               	btfsc	___awdiv@divisor+1,7
  5403  0EB2  2EBD               	goto	l5021
  5404  0EB3  3001               	movlw	1
  5405  0EB4                     u4535:	
  5406  0EB4  35F3               	lslf	___awdiv@divisor,f
  5407  0EB5  0DF4               	rlf	___awdiv@divisor+1,f
  5408  0EB6  0B89               	decfsz	9,f
  5409  0EB7  2EB4               	goto	u4535
  5410  0EB8  3001               	movlw	1
  5411  0EB9  00F7               	movwf	??___awdiv
  5412  0EBA  0877               	movf	??___awdiv,w
  5413  0EBB  07A0               	addwf	___awdiv@counter,f
  5414  0EBC  2EB1               	goto	l5019
  5415  0EBD                     l5021:	
  5416  0EBD  3001               	movlw	1
  5417  0EBE                     u4555:	
  5418  0EBE  35A2               	lslf	___awdiv@quotient,f
  5419  0EBF  0DA3               	rlf	___awdiv@quotient+1,f
  5420  0EC0  0B89               	decfsz	9,f
  5421  0EC1  2EBE               	goto	u4555
  5422  0EC2  0874               	movf	___awdiv@divisor+1,w
  5423  0EC3  0276               	subwf	___awdiv@dividend+1,w
  5424  0EC4  1D03               	skipz
  5425  0EC5  2EC8               	goto	u4565
  5426  0EC6  0873               	movf	___awdiv@divisor,w
  5427  0EC7  0275               	subwf	___awdiv@dividend,w
  5428  0EC8                     u4565:	
  5429  0EC8  1C03               	skipc
  5430  0EC9  2ECF               	goto	l5027
  5431  0ECA  0873               	movf	___awdiv@divisor,w
  5432  0ECB  02F5               	subwf	___awdiv@dividend,f
  5433  0ECC  0874               	movf	___awdiv@divisor+1,w
  5434  0ECD  3BF6               	subwfb	___awdiv@dividend+1,f
  5435  0ECE  1422               	bsf	___awdiv@quotient,0
  5436  0ECF                     l5027:	
  5437  0ECF  3001               	movlw	1
  5438  0ED0                     u4575:	
  5439  0ED0  36F4               	lsrf	___awdiv@divisor+1,f
  5440  0ED1  0CF3               	rrf	___awdiv@divisor,f
  5441  0ED2  0B89               	decfsz	9,f
  5442  0ED3  2ED0               	goto	u4575
  5443  0ED4  3001               	movlw	1
  5444  0ED5  02A0               	subwf	___awdiv@counter,f
  5445  0ED6  1D03               	btfss	3,2
  5446  0ED7  2EBD               	goto	l5021
  5447  0ED8                     l5031:	
  5448  0ED8  0821               	movf	___awdiv@sign,w
  5449  0ED9  1903               	btfsc	3,2
  5450  0EDA  2EE0               	goto	l5035
  5451  0EDB  09A2               	comf	___awdiv@quotient,f
  5452  0EDC  09A3               	comf	___awdiv@quotient+1,f
  5453  0EDD  0AA2               	incf	___awdiv@quotient,f
  5454  0EDE  1903               	skipnz
  5455  0EDF  0AA3               	incf	___awdiv@quotient+1,f
  5456  0EE0                     l5035:	
  5457  0EE0  0823               	movf	___awdiv@quotient+1,w
  5458  0EE1  00F4               	movwf	?___awdiv+1
  5459  0EE2  0822               	movf	___awdiv@quotient,w
  5460  0EE3  00F3               	movwf	?___awdiv
  5461  0EE4  0008               	return
  5462  0EE5                     __end_of___awdiv:	
  5463                           
  5464                           	psect	text18
  5465  0CE4                     __ptext18:	
  5466 ;; *************** function _temperature_display *****************
  5467 ;; Defined at:
  5468 ;;		line 343 in file "mcc_generated_files/max31856.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;Total ram usage:        1 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:   10
  5489 ;; This function calls:
  5490 ;;		_Tc_Display
  5491 ;;		_err_Display
  5492 ;;		_maxim_31856_write_register
  5493 ;;		_maxim_clear_fault_status
  5494 ;;		_tc_temperature_trans
  5495 ;; This function is called by:
  5496 ;;		_temperature_process
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _temperature_display
  5502  0CE4                     _temperature_display:	
  5503                           
  5504                           ;max31856.c: 345: if(uch_sr==(uint8_t)0x00)
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5508  0CE4  0021               	movlb	1	; select bank1
  5509  0CE5  0843               	movf	_uch_sr^(0+128),w
  5510  0CE6  1D03               	btfss	3,2
  5511  0CE7  2CFD               	goto	l5113
  5512                           
  5513                           ;max31856.c: 346: {
  5514                           ;max31856.c: 347: tc_temperature_trans();
  5515  0CE8  3180  203F  318C   	fcall	_tc_temperature_trans
  5516                           
  5517                           ;max31856.c: 348: Tc_Display();
  5518  0CEB  3184  247D  318C   	fcall	_Tc_Display
  5519                           
  5520                           ;max31856.c: 349: if(time_count == 1)
  5521  0CEE  0020               	movlb	0	; select bank0
  5522  0CEF  036D               	decf	_time_count,w
  5523  0CF0  1D03               	btfss	3,2
  5524  0CF1  2CF5               	goto	l5109
  5525                           
  5526                           ;max31856.c: 350: {
  5527                           ;max31856.c: 351: CH1_state = 0;
  5528  0CF2  0021               	movlb	1	; select bank1
  5529  0CF3  01B4               	clrf	_CH1_state^(0+128)
  5530                           
  5531                           ;max31856.c: 352: }
  5532  0CF4  0008               	return
  5533  0CF5                     l5109:	
  5534                           
  5535                           ;max31856.c: 353: else if(time_count == 3)
  5536  0CF5  3003               	movlw	3
  5537  0CF6  0020               	movlb	0	; select bank0
  5538  0CF7  066D               	xorwf	_time_count,w
  5539  0CF8  1D03               	btfss	3,2
  5540  0CF9  0008               	return
  5541                           
  5542                           ;max31856.c: 354: {
  5543                           ;max31856.c: 355: CH2_state = 0;
  5544  0CFA  0021               	movlb	1	; select bank1
  5545  0CFB  01B5               	clrf	_CH2_state^(0+128)
  5546                           
  5547                           ;max31856.c: 356: }
  5548                           ;max31856.c: 357: }
  5549  0CFC  0008               	return
  5550  0CFD                     l5113:	
  5551                           
  5552                           ;max31856.c: 358: else
  5553                           ;max31856.c: 359: {
  5554                           ;max31856.c: 360: if(time_count == 1)
  5555  0CFD  0020               	movlb	0	; select bank0
  5556  0CFE  036D               	decf	_time_count,w
  5557  0CFF  1D03               	btfss	3,2
  5558  0D00  2D05               	goto	l5117
  5559                           
  5560                           ;max31856.c: 361: {
  5561                           ;max31856.c: 362: CH1_state = 1;
  5562  0D01  0021               	movlb	1	; select bank1
  5563  0D02  01B4               	clrf	_CH1_state^(0+128)
  5564  0D03  0AB4               	incf	_CH1_state^(0+128),f
  5565                           
  5566                           ;max31856.c: 363: }
  5567  0D04  2D0D               	goto	l5121
  5568  0D05                     l5117:	
  5569                           
  5570                           ;max31856.c: 364: else if(time_count == 3)
  5571  0D05  3003               	movlw	3
  5572  0D06  0020               	movlb	0	; select bank0
  5573  0D07  066D               	xorwf	_time_count,w
  5574  0D08  1D03               	btfss	3,2
  5575  0D09  2D0D               	goto	l5121
  5576                           
  5577                           ;max31856.c: 365: {
  5578                           ;max31856.c: 366: CH2_state = 1;
  5579  0D0A  0021               	movlb	1	; select bank1
  5580  0D0B  01B5               	clrf	_CH2_state^(0+128)
  5581  0D0C  0AB5               	incf	_CH2_state^(0+128),f
  5582  0D0D                     l5121:	
  5583                           
  5584                           ;max31856.c: 367: }
  5585                           ;max31856.c: 368: err_Display();
  5586  0D0D  318B  2326  318C   	fcall	_err_Display
  5587                           
  5588                           ;max31856.c: 369: maxim_31856_write_register(0x82, 0xFF);
  5589  0D10  30FF               	movlw	255
  5590  0D11  0020               	movlb	0	; select bank0
  5591  0D12  00DB               	movwf	??_temperature_display
  5592  0D13  085B               	movf	??_temperature_display,w
  5593  0D14  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5594  0D15  3082               	movlw	130
  5595  0D16  3188  2091  318C   	fcall	_maxim_31856_write_register
  5596                           
  5597                           ;max31856.c: 370: maxim_clear_fault_status();
  5598  0D19  3188  209E  318C   	fcall	_maxim_clear_fault_status
  5599                           
  5600                           ;max31856.c: 371: maxim_31856_write_register(0x82, 0x00);
  5601  0D1C  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5602  0D1D  3082               	movlw	130
  5603  0D1E  3188  2091         	fcall	_maxim_31856_write_register
  5604  0D20  0008               	return
  5605  0D21                     __end_of_temperature_display:	
  5606                           
  5607                           	psect	text19
  5608  003F                     __ptext19:	
  5609 ;; *************** function _tc_temperature_trans *****************
  5610 ;; Defined at:
  5611 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  temperature_    2   57[BANK0 ] unsigned int 
  5616 ;;  var_time        2   55[BANK0 ] unsigned int 
  5617 ;;  temperature_    2   53[BANK0 ] unsigned int 
  5618 ;;  temperature_    2   51[BANK0 ] unsigned int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;Total ram usage:       12 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    9
  5635 ;; This function calls:
  5636 ;;		_Calculate_Time
  5637 ;;		_Save_Write_word
  5638 ;; This function is called by:
  5639 ;;		_temperature_display
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _tc_temperature_trans
  5645  003F                     _tc_temperature_trans:	
  5646                           
  5647                           ;max31856.c: 170: unsigned int temperature_absolute = 0;
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5651  003F  0020               	movlb	0	; select bank0
  5652  0040  01D5               	clrf	tc_temperature_trans@temperature_absolute
  5653  0041  01D6               	clrf	tc_temperature_trans@temperature_absolute+1
  5654                           
  5655                           ;max31856.c: 171: unsigned int temperature_temp = 0;
  5656  0042  01D9               	clrf	tc_temperature_trans@temperature_temp
  5657  0043  01DA               	clrf	tc_temperature_trans@temperature_temp+1
  5658                           
  5659                           ;max31856.c: 172: unsigned int temperature_back = 0;
  5660  0044  01D3               	clrf	tc_temperature_trans@temperature_back
  5661  0045  01D4               	clrf	tc_temperature_trans@temperature_back+1
  5662                           
  5663                           ;max31856.c: 173: unsigned int var_time=0;
  5664  0046  01D7               	clrf	tc_temperature_trans@var_time
  5665  0047  01D8               	clrf	tc_temperature_trans@var_time+1
  5666                           
  5667                           ;max31856.c: 174: temperature_value = 0;
  5668  0048  3000               	movlw	0
  5669  0049  00E8               	movwf	_temperature_value+3
  5670  004A  3000               	movlw	0
  5671  004B  00E7               	movwf	_temperature_value+2
  5672  004C  3000               	movlw	0
  5673  004D  00E6               	movwf	_temperature_value+1
  5674  004E  3000               	movlw	0
  5675  004F  00E5               	movwf	_temperature_value
  5676                           
  5677                           ;max31856.c: 175: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5678  0050  303F               	movlw	63
  5679  0051  0021               	movlb	1	; select bank1
  5680  0052  053F               	andwf	_uch_ltcbh^(0+128),w
  5681  0053  0020               	movlb	0	; select bank0
  5682  0054  00CF               	movwf	??_tc_temperature_trans
  5683  0055  084F               	movf	??_tc_temperature_trans,w
  5684  0056  00D1               	movwf	??_tc_temperature_trans+2
  5685  0057  0021               	movlb	1	; select bank1
  5686  0058  0841               	movf	_uch_ltcbm^(0+128),w
  5687  0059  0020               	movlb	0	; select bank0
  5688  005A  00D0               	movwf	??_tc_temperature_trans+1
  5689  005B  0D51               	rlf	??_tc_temperature_trans+2,w
  5690  005C  0CD1               	rrf	??_tc_temperature_trans+2,f
  5691  005D  0CD0               	rrf	??_tc_temperature_trans+1,f
  5692  005E  0850               	movf	??_tc_temperature_trans+1,w
  5693  005F  00E5               	movwf	_temperature_value
  5694  0060  0851               	movf	??_tc_temperature_trans+2,w
  5695  0061  00E6               	movwf	_temperature_value+1
  5696  0062  0D89               	rlf	9,f
  5697  0063  3B89               	subwfb	9,f
  5698  0064  0989               	comf	9,f
  5699  0065  00E7               	movwf	_temperature_value+2
  5700  0066  00E8               	movwf	_temperature_value+3
  5701                           
  5702                           ;max31856.c: 176: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5703  0067  0021               	movlb	1	; select bank1
  5704  0068  1FBF               	btfss	_uch_ltcbh^(0+128),7
  5705  0069  286C               	goto	l4823
  5706  006A  0020               	movlb	0	; select bank0
  5707  006B  16E6               	bsf	_temperature_value+1,5
  5708  006C                     l4823:	
  5709                           
  5710                           ;max31856.c: 177: temperature_temp = temperature_value;
  5711  006C  0020               	movlb	0	; select bank0
  5712  006D  0866               	movf	_temperature_value+1,w
  5713  006E  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5714  006F  0865               	movf	_temperature_value,w
  5715  0070  00D9               	movwf	tc_temperature_trans@temperature_temp
  5716                           
  5717                           ;max31856.c: 180: if(time_count == 1 && Record_flag == 1)
  5718  0071  036D               	decf	_time_count,w
  5719  0072  1D03               	btfss	3,2
  5720  0073  2901               	goto	l4877
  5721  0074  036B               	decf	_Record_flag,w
  5722  0075  1D03               	btfss	3,2
  5723  0076  2901               	goto	l4877
  5724                           
  5725                           ;max31856.c: 181: {
  5726                           ;max31856.c: 182: temperature_back = CH1_temperature;
  5727  0077  086A               	movf	_CH1_temperature+1,w
  5728  0078  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5729  0079  0869               	movf	_CH1_temperature,w
  5730  007A  00D3               	movwf	tc_temperature_trans@temperature_back
  5731                           
  5732                           ;max31856.c: 183: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5733  007B  3020               	movlw	32
  5734  007C  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5735  007D  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5736  007E  1903               	btfsc	3,2
  5737  007F  2882               	goto	u4190
  5738  0080  3001               	movlw	1
  5739  0081  2883               	goto	u4200
  5740  0082                     u4190:	
  5741  0082  3000               	movlw	0
  5742  0083                     u4200:	
  5743  0083  00CF               	movwf	??_tc_temperature_trans
  5744  0084  01D0               	clrf	??_tc_temperature_trans+1
  5745  0085  0869               	movf	_CH1_temperature,w
  5746  0086  054F               	andwf	??_tc_temperature_trans,w
  5747  0087  00D1               	movwf	??_tc_temperature_trans+2
  5748  0088  086A               	movf	_CH1_temperature+1,w
  5749  0089  0550               	andwf	??_tc_temperature_trans+1,w
  5750  008A  00D2               	movwf	??_tc_temperature_trans+3
  5751  008B  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5752  008C  28D3               	goto	L7
  5753                           
  5754                           ;max31856.c: 196: else
  5755                           ;max31856.c: 197: {
  5756                           ;max31856.c: 198: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5757                           
  5758                           ;max31856.c: 195: }
  5759                           
  5760                           ;max31856.c: 194: CH1_temperature = temperature_value;
  5761                           
  5762                           ;max31856.c: 193: Cur_temperature_time_ch1 = 0;
  5763                           
  5764                           ;max31856.c: 192: Save_Write_word(temperature_value);
  5765                           
  5766                           ;max31856.c: 191: Save_Write_word(var_time);
  5767                           
  5768                           ;max31856.c: 189: var_time |= 0x2000;
  5769                           
  5770                           ;max31856.c: 187: if(CH1_state == 1) var_time |= 0x400;
  5771                           
  5772                           ;max31856.c: 186: var_time |= 0x100;
  5773                           
  5774                           ;max31856.c: 184: {
  5775                           ;max31856.c: 185: var_time = Calculate_Time();
  5776  008D  1EEA               	btfss	_CH1_temperature+1,5
  5777  008E  289C               	goto	l4849
  5778  008F  0969               	comf	_CH1_temperature,w
  5779  0090  00CF               	movwf	??_tc_temperature_trans
  5780  0091  096A               	comf	_CH1_temperature+1,w
  5781  0092  00D0               	movwf	??_tc_temperature_trans+1
  5782  0093  0ACF               	incf	??_tc_temperature_trans,f
  5783  0094  1903               	skipnz
  5784  0095  0AD0               	incf	??_tc_temperature_trans+1,f
  5785  0096  084F               	movf	??_tc_temperature_trans,w
  5786  0097  3E00               	addlw	0
  5787  0098  00E9               	movwf	_CH1_temperature
  5788  0099  3040               	movlw	64
  5789  009A  3D50               	addwfc	??_tc_temperature_trans+1,w
  5790  009B  00EA               	movwf	_CH1_temperature+1
  5791  009C                     l4849:	
  5792                           
  5793                           ;max31856.c: 199: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5794  009C  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  5795  009D  28AB               	goto	l4853
  5796  009E  0959               	comf	tc_temperature_trans@temperature_temp,w
  5797  009F  00CF               	movwf	??_tc_temperature_trans
  5798  00A0  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5799  00A1  00D0               	movwf	??_tc_temperature_trans+1
  5800  00A2  0ACF               	incf	??_tc_temperature_trans,f
  5801  00A3  1903               	skipnz
  5802  00A4  0AD0               	incf	??_tc_temperature_trans+1,f
  5803  00A5  084F               	movf	??_tc_temperature_trans,w
  5804  00A6  3E00               	addlw	0
  5805  00A7  00D9               	movwf	tc_temperature_trans@temperature_temp
  5806  00A8  3040               	movlw	64
  5807  00A9  3D50               	addwfc	??_tc_temperature_trans+1,w
  5808  00AA  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5809  00AB                     l4853:	
  5810                           
  5811                           ;max31856.c: 200: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5812  00AB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5813  00AC  026A               	subwf	_CH1_temperature+1,w
  5814  00AD  1D03               	skipz
  5815  00AE  28B1               	goto	u4255
  5816  00AF  0859               	movf	tc_temperature_trans@temperature_temp,w
  5817  00B0  0269               	subwf	_CH1_temperature,w
  5818  00B1                     u4255:	
  5819  00B1  1803               	skipnc
  5820  00B2  28BF               	goto	l4857
  5821  00B3  0969               	comf	_CH1_temperature,w
  5822  00B4  00CF               	movwf	??_tc_temperature_trans
  5823  00B5  096A               	comf	_CH1_temperature+1,w
  5824  00B6  00D0               	movwf	??_tc_temperature_trans+1
  5825  00B7  0ACF               	incf	??_tc_temperature_trans,f
  5826  00B8  1903               	skipnz
  5827  00B9  0AD0               	incf	??_tc_temperature_trans+1,f
  5828  00BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  5829  00BB  074F               	addwf	??_tc_temperature_trans,w
  5830  00BC  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5831  00BD  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5832  00BE  28CA               	goto	L3
  5833  00BF                     l4857:	
  5834                           
  5835                           ;max31856.c: 201: else temperature_absolute = CH1_temperature - temperature_temp;
  5836  00BF  0959               	comf	tc_temperature_trans@temperature_temp,w
  5837  00C0  00CF               	movwf	??_tc_temperature_trans
  5838  00C1  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5839  00C2  00D0               	movwf	??_tc_temperature_trans+1
  5840  00C3  0ACF               	incf	??_tc_temperature_trans,f
  5841  00C4  1903               	skipnz
  5842  00C5  0AD0               	incf	??_tc_temperature_trans+1,f
  5843  00C6  0869               	movf	_CH1_temperature,w
  5844  00C7  074F               	addwf	??_tc_temperature_trans,w
  5845  00C8  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5846  00C9  086A               	movf	_CH1_temperature+1,w
  5847  00CA                     L3:	
  5848  00CA  3D50               	addwfc	??_tc_temperature_trans+1,w
  5849  00CB  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  5850                           
  5851                           ;max31856.c: 202: if( temperature_absolute > 4)
  5852  00CC  3000               	movlw	0
  5853  00CD  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5854  00CE  3005               	movlw	5
  5855  00CF  1903               	skipnz
  5856  00D0  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  5857  00D1  1C03               	skipc
  5858  00D2  28FC               	goto	l4875
  5859  00D3                     L7:	
  5860                           
  5861                           ;max31856.c: 203: {
  5862                           ;max31856.c: 204: var_time = Calculate_Time();
  5863  00D3  3182  220B  3180   	fcall	_Calculate_Time
  5864  00D6  0020               	movlb	0	; select bank0
  5865  00D7  00CF               	movwf	??_tc_temperature_trans
  5866  00D8  01D0               	clrf	??_tc_temperature_trans+1
  5867  00D9  084F               	movf	??_tc_temperature_trans,w
  5868  00DA  00D7               	movwf	tc_temperature_trans@var_time
  5869  00DB  0850               	movf	??_tc_temperature_trans+1,w
  5870  00DC  00D8               	movwf	tc_temperature_trans@var_time+1
  5871                           
  5872                           ;max31856.c: 205: var_time |= 0x100;
  5873  00DD  1458               	bsf	tc_temperature_trans@var_time+1,0
  5874                           
  5875                           ;max31856.c: 206: if(CH1_state == 1) var_time |= 0x400;
  5876  00DE  0021               	movlb	1	; select bank1
  5877  00DF  0334               	decf	_CH1_state^(0+128),w
  5878  00E0  1D03               	btfss	3,2
  5879  00E1  28E4               	goto	l517
  5880  00E2  0020               	movlb	0	; select bank0
  5881  00E3  1558               	bsf	tc_temperature_trans@var_time+1,2
  5882  00E4                     l517:	
  5883                           
  5884                           ;max31856.c: 208: var_time |= 0x2000;
  5885  00E4  0020               	movlb	0	; select bank0
  5886  00E5  16D8               	bsf	tc_temperature_trans@var_time+1,5
  5887                           
  5888                           ;max31856.c: 210: Save_Write_word(var_time);
  5889  00E6  0858               	movf	tc_temperature_trans@var_time+1,w
  5890  00E7  00B4               	movwf	Save_Write_word@data+1
  5891  00E8  0857               	movf	tc_temperature_trans@var_time,w
  5892  00E9  00B3               	movwf	Save_Write_word@data
  5893  00EA  318C  2477  3180   	fcall	_Save_Write_word
  5894                           
  5895                           ;max31856.c: 211: Save_Write_word(temperature_value);
  5896  00ED  0020               	movlb	0	; select bank0
  5897  00EE  0866               	movf	_temperature_value+1,w
  5898  00EF  00B4               	movwf	Save_Write_word@data+1
  5899  00F0  0865               	movf	_temperature_value,w
  5900  00F1  00B3               	movwf	Save_Write_word@data
  5901  00F2  318C  2477  3180   	fcall	_Save_Write_word
  5902                           
  5903                           ;max31856.c: 212: Cur_temperature_time_ch1 = 0;
  5904  00F5  0021               	movlb	1	; select bank1
  5905  00F6  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  5906                           
  5907                           ;max31856.c: 213: CH1_temperature = temperature_value;
  5908  00F7  0020               	movlb	0	; select bank0
  5909  00F8  0866               	movf	_temperature_value+1,w
  5910  00F9  00EA               	movwf	_CH1_temperature+1
  5911  00FA  0865               	movf	_temperature_value,w
  5912  00FB  28FF               	goto	L4
  5913  00FC                     l4875:	
  5914                           ;max31856.c: 214: }
  5915                           
  5916                           
  5917                           ;max31856.c: 215: else
  5918                           ;max31856.c: 216: {
  5919                           ;max31856.c: 217: CH1_temperature = temperature_back;
  5920  00FC  0854               	movf	tc_temperature_trans@temperature_back+1,w
  5921  00FD  00EA               	movwf	_CH1_temperature+1
  5922  00FE  0853               	movf	tc_temperature_trans@temperature_back,w
  5923  00FF                     L4:	
  5924  00FF  00E9               	movwf	_CH1_temperature
  5925                           
  5926                           ;max31856.c: 218: }
  5927                           ;max31856.c: 219: }
  5928                           ;max31856.c: 221: }
  5929  0100  2991               	goto	l519
  5930  0101                     l4877:	
  5931                           
  5932                           ;max31856.c: 222: else if( time_count == 3 && Record_flag == 1)
  5933  0101  3003               	movlw	3
  5934  0102  066D               	xorwf	_time_count,w
  5935  0103  1D03               	btfss	3,2
  5936  0104  2991               	goto	l519
  5937  0105  036B               	decf	_Record_flag,w
  5938  0106  1D03               	btfss	3,2
  5939  0107  2991               	goto	l519
  5940                           
  5941                           ;max31856.c: 223: {
  5942                           ;max31856.c: 224: temperature_back = CH2_temperature;
  5943  0108  0879               	movf	_CH2_temperature+1,w
  5944  0109  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5945  010A  0878               	movf	_CH2_temperature,w
  5946  010B  00D3               	movwf	tc_temperature_trans@temperature_back
  5947                           
  5948                           ;max31856.c: 225: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5949  010C  3020               	movlw	32
  5950  010D  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5951  010E  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5952  010F  1903               	btfsc	3,2
  5953  0110  2913               	goto	u4300
  5954  0111  3001               	movlw	1
  5955  0112  2914               	goto	u4310
  5956  0113                     u4300:	
  5957  0113  3000               	movlw	0
  5958  0114                     u4310:	
  5959  0114  00CF               	movwf	??_tc_temperature_trans
  5960  0115  01D0               	clrf	??_tc_temperature_trans+1
  5961  0116  0878               	movf	_CH2_temperature,w
  5962  0117  054F               	andwf	??_tc_temperature_trans,w
  5963  0118  00D1               	movwf	??_tc_temperature_trans+2
  5964  0119  0879               	movf	_CH2_temperature+1,w
  5965  011A  0550               	andwf	??_tc_temperature_trans+1,w
  5966  011B  00D2               	movwf	??_tc_temperature_trans+3
  5967  011C  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5968  011D  2964               	goto	L8
  5969                           
  5970                           ;max31856.c: 238: else
  5971                           ;max31856.c: 239: {
  5972                           ;max31856.c: 240: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5973                           
  5974                           ;max31856.c: 237: }
  5975                           
  5976                           ;max31856.c: 236: CH2_temperature = temperature_value;
  5977                           
  5978                           ;max31856.c: 235: Cur_temperature_time_ch2 = 0;
  5979                           
  5980                           ;max31856.c: 234: Save_Write_word(temperature_value);
  5981                           
  5982                           ;max31856.c: 233: Save_Write_word(var_time);
  5983                           
  5984                           ;max31856.c: 231: var_time |= 0x2000;
  5985                           
  5986                           ;max31856.c: 229: if(CH2_state == 1) var_time |= 0x800;
  5987                           
  5988                           ;max31856.c: 228: var_time |= 0x200;
  5989                           
  5990                           ;max31856.c: 226: {
  5991                           ;max31856.c: 227: var_time = Calculate_Time();
  5992  011E  1EF9               	btfss	_CH2_temperature+1,5
  5993  011F  292D               	goto	l4901
  5994  0120  0978               	comf	_CH2_temperature,w
  5995  0121  00CF               	movwf	??_tc_temperature_trans
  5996  0122  0979               	comf	_CH2_temperature+1,w
  5997  0123  00D0               	movwf	??_tc_temperature_trans+1
  5998  0124  0ACF               	incf	??_tc_temperature_trans,f
  5999  0125  1903               	skipnz
  6000  0126  0AD0               	incf	??_tc_temperature_trans+1,f
  6001  0127  084F               	movf	??_tc_temperature_trans,w
  6002  0128  3E00               	addlw	0
  6003  0129  00F8               	movwf	_CH2_temperature
  6004  012A  3040               	movlw	64
  6005  012B  3D50               	addwfc	??_tc_temperature_trans+1,w
  6006  012C  00F9               	movwf	_CH2_temperature+1
  6007  012D                     l4901:	
  6008                           
  6009                           ;max31856.c: 241: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  6010  012D  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  6011  012E  293C               	goto	l4905
  6012  012F  0959               	comf	tc_temperature_trans@temperature_temp,w
  6013  0130  00CF               	movwf	??_tc_temperature_trans
  6014  0131  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  6015  0132  00D0               	movwf	??_tc_temperature_trans+1
  6016  0133  0ACF               	incf	??_tc_temperature_trans,f
  6017  0134  1903               	skipnz
  6018  0135  0AD0               	incf	??_tc_temperature_trans+1,f
  6019  0136  084F               	movf	??_tc_temperature_trans,w
  6020  0137  3E00               	addlw	0
  6021  0138  00D9               	movwf	tc_temperature_trans@temperature_temp
  6022  0139  3040               	movlw	64
  6023  013A  3D50               	addwfc	??_tc_temperature_trans+1,w
  6024  013B  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  6025  013C                     l4905:	
  6026                           
  6027                           ;max31856.c: 242: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  6028  013C  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6029  013D  0279               	subwf	_CH2_temperature+1,w
  6030  013E  1D03               	skipz
  6031  013F  2942               	goto	u4365
  6032  0140  0859               	movf	tc_temperature_trans@temperature_temp,w
  6033  0141  0278               	subwf	_CH2_temperature,w
  6034  0142                     u4365:	
  6035  0142  1803               	skipnc
  6036  0143  2950               	goto	l4909
  6037  0144  0978               	comf	_CH2_temperature,w
  6038  0145  00CF               	movwf	??_tc_temperature_trans
  6039  0146  0979               	comf	_CH2_temperature+1,w
  6040  0147  00D0               	movwf	??_tc_temperature_trans+1
  6041  0148  0ACF               	incf	??_tc_temperature_trans,f
  6042  0149  1903               	skipnz
  6043  014A  0AD0               	incf	??_tc_temperature_trans+1,f
  6044  014B  0859               	movf	tc_temperature_trans@temperature_temp,w
  6045  014C  074F               	addwf	??_tc_temperature_trans,w
  6046  014D  00D5               	movwf	tc_temperature_trans@temperature_absolute
  6047  014E  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6048  014F  295B               	goto	L5
  6049  0150                     l4909:	
  6050                           
  6051                           ;max31856.c: 243: else temperature_absolute = CH2_temperature - temperature_temp;
  6052  0150  0959               	comf	tc_temperature_trans@temperature_temp,w
  6053  0151  00CF               	movwf	??_tc_temperature_trans
  6054  0152  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  6055  0153  00D0               	movwf	??_tc_temperature_trans+1
  6056  0154  0ACF               	incf	??_tc_temperature_trans,f
  6057  0155  1903               	skipnz
  6058  0156  0AD0               	incf	??_tc_temperature_trans+1,f
  6059  0157  0878               	movf	_CH2_temperature,w
  6060  0158  074F               	addwf	??_tc_temperature_trans,w
  6061  0159  00D5               	movwf	tc_temperature_trans@temperature_absolute
  6062  015A  0879               	movf	_CH2_temperature+1,w
  6063  015B                     L5:	
  6064  015B  3D50               	addwfc	??_tc_temperature_trans+1,w
  6065  015C  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  6066                           
  6067                           ;max31856.c: 244: if( temperature_absolute > 4)
  6068  015D  3000               	movlw	0
  6069  015E  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  6070  015F  3005               	movlw	5
  6071  0160  1903               	skipnz
  6072  0161  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  6073  0162  1C03               	skipc
  6074  0163  298D               	goto	l4927
  6075  0164                     L8:	
  6076                           
  6077                           ;max31856.c: 245: {
  6078                           ;max31856.c: 246: var_time = Calculate_Time();
  6079  0164  3182  220B  3180   	fcall	_Calculate_Time
  6080  0167  0020               	movlb	0	; select bank0
  6081  0168  00CF               	movwf	??_tc_temperature_trans
  6082  0169  01D0               	clrf	??_tc_temperature_trans+1
  6083  016A  084F               	movf	??_tc_temperature_trans,w
  6084  016B  00D7               	movwf	tc_temperature_trans@var_time
  6085  016C  0850               	movf	??_tc_temperature_trans+1,w
  6086  016D  00D8               	movwf	tc_temperature_trans@var_time+1
  6087                           
  6088                           ;max31856.c: 247: var_time |= 0x200;
  6089  016E  14D8               	bsf	tc_temperature_trans@var_time+1,1
  6090                           
  6091                           ;max31856.c: 248: if(CH2_state == 1) var_time |= 0x800;
  6092  016F  0021               	movlb	1	; select bank1
  6093  0170  0335               	decf	_CH2_state^(0+128),w
  6094  0171  1D03               	btfss	3,2
  6095  0172  2975               	goto	l529
  6096  0173  0020               	movlb	0	; select bank0
  6097  0174  15D8               	bsf	tc_temperature_trans@var_time+1,3
  6098  0175                     l529:	
  6099                           
  6100                           ;max31856.c: 250: var_time |= 0x2000;
  6101  0175  0020               	movlb	0	; select bank0
  6102  0176  16D8               	bsf	tc_temperature_trans@var_time+1,5
  6103                           
  6104                           ;max31856.c: 252: Save_Write_word(var_time);
  6105  0177  0858               	movf	tc_temperature_trans@var_time+1,w
  6106  0178  00B4               	movwf	Save_Write_word@data+1
  6107  0179  0857               	movf	tc_temperature_trans@var_time,w
  6108  017A  00B3               	movwf	Save_Write_word@data
  6109  017B  318C  2477  3180   	fcall	_Save_Write_word
  6110                           
  6111                           ;max31856.c: 253: Save_Write_word(temperature_value);
  6112  017E  0020               	movlb	0	; select bank0
  6113  017F  0866               	movf	_temperature_value+1,w
  6114  0180  00B4               	movwf	Save_Write_word@data+1
  6115  0181  0865               	movf	_temperature_value,w
  6116  0182  00B3               	movwf	Save_Write_word@data
  6117  0183  318C  2477  3180   	fcall	_Save_Write_word
  6118                           
  6119                           ;max31856.c: 254: Cur_temperature_time_ch2 = 0;
  6120  0186  0021               	movlb	1	; select bank1
  6121  0187  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6122                           
  6123                           ;max31856.c: 255: CH2_temperature = temperature_value;
  6124  0188  0020               	movlb	0	; select bank0
  6125  0189  0866               	movf	_temperature_value+1,w
  6126  018A  00F9               	movwf	_CH2_temperature+1
  6127  018B  0865               	movf	_temperature_value,w
  6128  018C  2990               	goto	L6
  6129  018D                     l4927:	
  6130                           ;max31856.c: 256: }
  6131                           
  6132                           
  6133                           ;max31856.c: 257: else
  6134                           ;max31856.c: 258: {
  6135                           ;max31856.c: 259: CH2_temperature = temperature_back;
  6136  018D  0854               	movf	tc_temperature_trans@temperature_back+1,w
  6137  018E  00F9               	movwf	_CH2_temperature+1
  6138  018F  0853               	movf	tc_temperature_trans@temperature_back,w
  6139  0190                     L6:	
  6140  0190  00F8               	movwf	_CH2_temperature
  6141  0191                     l519:	
  6142                           
  6143                           ;max31856.c: 260: }
  6144                           ;max31856.c: 261: }
  6145                           ;max31856.c: 263: }
  6146                           ;max31856.c: 265: temperature_temp = temperature_value;
  6147  0191  0866               	movf	_temperature_value+1,w
  6148  0192  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  6149  0193  0865               	movf	_temperature_value,w
  6150  0194  00D9               	movwf	tc_temperature_trans@temperature_temp
  6151                           
  6152                           ;max31856.c: 266: if((uch_ltcbh&0x80)==0x80)
  6153  0195  0021               	movlb	1	; select bank1
  6154  0196  1FBF               	btfss	_uch_ltcbh^(0+128),7
  6155  0197  29D8               	goto	l4945
  6156                           
  6157                           ;max31856.c: 267: {
  6158                           ;max31856.c: 268: temperature_sign = 1;
  6159  0198  01BA               	clrf	_temperature_sign^(0+128)
  6160  0199  0ABA               	incf	_temperature_sign^(0+128),f
  6161                           
  6162                           ;max31856.c: 269: temperature_temp=0x3FFF-temperature_temp + 1 ;
  6163  019A  0020               	movlb	0	; select bank0
  6164  019B  0959               	comf	tc_temperature_trans@temperature_temp,w
  6165  019C  00CF               	movwf	??_tc_temperature_trans
  6166  019D  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  6167  019E  00D0               	movwf	??_tc_temperature_trans+1
  6168  019F  0ACF               	incf	??_tc_temperature_trans,f
  6169  01A0  1903               	skipnz
  6170  01A1  0AD0               	incf	??_tc_temperature_trans+1,f
  6171  01A2  084F               	movf	??_tc_temperature_trans,w
  6172  01A3  3E00               	addlw	0
  6173  01A4  00D9               	movwf	tc_temperature_trans@temperature_temp
  6174  01A5  3040               	movlw	64
  6175  01A6  3D50               	addwfc	??_tc_temperature_trans+1,w
  6176  01A7  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  6177                           
  6178                           ;max31856.c: 271: temperature_int = temperature_temp>>3;
  6179  01A8  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6180  01A9  00D0               	movwf	??_tc_temperature_trans+1
  6181  01AA  0859               	movf	tc_temperature_trans@temperature_temp,w
  6182  01AB  00CF               	movwf	??_tc_temperature_trans
  6183  01AC  36D0               	lsrf	??_tc_temperature_trans+1,f
  6184  01AD  0CCF               	rrf	??_tc_temperature_trans,f
  6185  01AE  36D0               	lsrf	??_tc_temperature_trans+1,f
  6186  01AF  0CCF               	rrf	??_tc_temperature_trans,f
  6187  01B0  36D0               	lsrf	??_tc_temperature_trans+1,f
  6188  01B1  0CCF               	rrf	??_tc_temperature_trans,f
  6189  01B2  084F               	movf	??_tc_temperature_trans,w
  6190  01B3  0021               	movlb	1	; select bank1
  6191  01B4  00B2               	movwf	_temperature_int^(0+128)
  6192  01B5  0020               	movlb	0	; select bank0
  6193  01B6  0850               	movf	??_tc_temperature_trans+1,w
  6194  01B7  0021               	movlb	1	; select bank1
  6195  01B8  00B3               	movwf	(_temperature_int+1)^(0+128)
  6196                           
  6197                           ;max31856.c: 272: temperature_decimal = temperature_temp & 0x07;
  6198  01B9  0020               	movlb	0	; select bank0
  6199  01BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  6200  01BB  3907               	andlw	7
  6201  01BC  00CF               	movwf	??_tc_temperature_trans
  6202  01BD  084F               	movf	??_tc_temperature_trans,w
  6203  01BE  00EC               	movwf	_temperature_decimal
  6204                           
  6205                           ;max31856.c: 273: if(temperature_decimal > 3) temperature_decimal++;
  6206  01BF  3004               	movlw	4
  6207  01C0  026C               	subwf	_temperature_decimal,w
  6208  01C1  1C03               	skipc
  6209  01C2  29C7               	goto	l532
  6210  01C3  3001               	movlw	1
  6211  01C4  00CF               	movwf	??_tc_temperature_trans
  6212  01C5  084F               	movf	??_tc_temperature_trans,w
  6213  01C6  07EC               	addwf	_temperature_decimal,f
  6214  01C7                     l532:	
  6215                           
  6216                           ;max31856.c: 274: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  6217  01C7  3003               	movlw	3
  6218  01C8  066C               	xorwf	_temperature_decimal,w
  6219  01C9  1903               	btfsc	3,2
  6220  01CA  29CF               	goto	l535
  6221  01CB  3008               	movlw	8
  6222  01CC  066C               	xorwf	_temperature_decimal,w
  6223  01CD  1D03               	btfss	3,2
  6224  01CE  0008               	return
  6225  01CF                     l535:	
  6226  01CF  0021               	movlb	1	; select bank1
  6227  01D0  1C32               	btfss	_temperature_int^(0+128),0
  6228  01D1  0008               	return
  6229  01D2  3001               	movlw	1
  6230  01D3  0020               	movlb	0	; select bank0
  6231  01D4  00CF               	movwf	??_tc_temperature_trans
  6232  01D5  084F               	movf	??_tc_temperature_trans,w
  6233  01D6  07EC               	addwf	_temperature_decimal,f
  6234                           
  6235                           ;max31856.c: 275: }
  6236  01D7  0008               	return
  6237  01D8                     l4945:	
  6238                           
  6239                           ;max31856.c: 276: else
  6240                           ;max31856.c: 277: {
  6241                           ;max31856.c: 278: temperature_sign = 0;
  6242  01D8  0021               	movlb	1	; select bank1
  6243  01D9  01BA               	clrf	_temperature_sign^(0+128)
  6244                           
  6245                           ;max31856.c: 279: temperature_int = temperature_temp>>3;
  6246  01DA  0020               	movlb	0	; select bank0
  6247  01DB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6248  01DC  00D0               	movwf	??_tc_temperature_trans+1
  6249  01DD  0859               	movf	tc_temperature_trans@temperature_temp,w
  6250  01DE  00CF               	movwf	??_tc_temperature_trans
  6251  01DF  36D0               	lsrf	??_tc_temperature_trans+1,f
  6252  01E0  0CCF               	rrf	??_tc_temperature_trans,f
  6253  01E1  36D0               	lsrf	??_tc_temperature_trans+1,f
  6254  01E2  0CCF               	rrf	??_tc_temperature_trans,f
  6255  01E3  36D0               	lsrf	??_tc_temperature_trans+1,f
  6256  01E4  0CCF               	rrf	??_tc_temperature_trans,f
  6257  01E5  084F               	movf	??_tc_temperature_trans,w
  6258  01E6  0021               	movlb	1	; select bank1
  6259  01E7  00B2               	movwf	_temperature_int^(0+128)
  6260  01E8  0020               	movlb	0	; select bank0
  6261  01E9  0850               	movf	??_tc_temperature_trans+1,w
  6262  01EA  0021               	movlb	1	; select bank1
  6263  01EB  00B3               	movwf	(_temperature_int+1)^(0+128)
  6264                           
  6265                           ;max31856.c: 280: temperature_decimal = temperature_temp & 0x07;
  6266  01EC  0020               	movlb	0	; select bank0
  6267  01ED  0859               	movf	tc_temperature_trans@temperature_temp,w
  6268  01EE  3907               	andlw	7
  6269  01EF  00CF               	movwf	??_tc_temperature_trans
  6270  01F0  084F               	movf	??_tc_temperature_trans,w
  6271  01F1  00EC               	movwf	_temperature_decimal
  6272                           
  6273                           ;max31856.c: 281: if(temperature_decimal > 3) temperature_decimal++;
  6274  01F2  3004               	movlw	4
  6275  01F3  026C               	subwf	_temperature_decimal,w
  6276  01F4  1C03               	skipc
  6277  01F5  29FA               	goto	l537
  6278  01F6  3001               	movlw	1
  6279  01F7  00CF               	movwf	??_tc_temperature_trans
  6280  01F8  084F               	movf	??_tc_temperature_trans,w
  6281  01F9  07EC               	addwf	_temperature_decimal,f
  6282  01FA                     l537:	
  6283                           
  6284                           ;max31856.c: 282: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  6285  01FA  3004               	movlw	4
  6286  01FB  066C               	xorwf	_temperature_decimal,w
  6287  01FC  1903               	btfsc	3,2
  6288  01FD  2A02               	goto	l540
  6289  01FE  3008               	movlw	8
  6290  01FF  066C               	xorwf	_temperature_decimal,w
  6291  0200  1D03               	btfss	3,2
  6292  0201  0008               	return
  6293  0202                     l540:	
  6294  0202  0021               	movlb	1	; select bank1
  6295  0203  1C32               	btfss	_temperature_int^(0+128),0
  6296  0204  0008               	return
  6297  0205  3001               	movlw	1
  6298  0206  0020               	movlb	0	; select bank0
  6299  0207  00CF               	movwf	??_tc_temperature_trans
  6300  0208  084F               	movf	??_tc_temperature_trans,w
  6301  0209  07EC               	addwf	_temperature_decimal,f
  6302  020A  0008               	return
  6303  020B                     __end_of_tc_temperature_trans:	
  6304                           
  6305                           	psect	text20
  6306  020B                     __ptext20:	
  6307 ;; *************** function _Calculate_Time *****************
  6308 ;; Defined at:
  6309 ;;		line 163 in file "mcc_generated_files/save.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  temp2           4   43[BANK0 ] unsigned long 
  6314 ;;  temp1           4   39[BANK0 ] unsigned long 
  6315 ;;  temp            4   35[BANK0 ] unsigned long 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      unsigned char 
  6318 ;; Registers used:
  6319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;Total ram usage:       22 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    8
  6332 ;; This function calls:
  6333 ;;		_Bq32k_Rtc_Read_Time
  6334 ;;		_Save_Write_time
  6335 ;;		_Write_Flash_finish
  6336 ;;		_Write_Flash_head
  6337 ;;		___wmul
  6338 ;; This function is called by:
  6339 ;;		_tc_temperature_trans
  6340 ;;		_Save_process
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _Calculate_Time
  6346  020B                     _Calculate_Time:	
  6347                           
  6348                           ;save.c: 165: unsigned long temp = 0 ;
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6352  020B  3000               	movlw	0
  6353  020C  0020               	movlb	0	; select bank0
  6354  020D  00C6               	movwf	Calculate_Time@temp+3
  6355  020E  3000               	movlw	0
  6356  020F  00C5               	movwf	Calculate_Time@temp+2
  6357  0210  3000               	movlw	0
  6358  0211  00C4               	movwf	Calculate_Time@temp+1
  6359  0212  3000               	movlw	0
  6360  0213  00C3               	movwf	Calculate_Time@temp
  6361                           
  6362                           ;save.c: 166: unsigned long temp1 = 0 ;
  6363  0214  3000               	movlw	0
  6364  0215  00CA               	movwf	Calculate_Time@temp1+3
  6365  0216  3000               	movlw	0
  6366  0217  00C9               	movwf	Calculate_Time@temp1+2
  6367  0218  3000               	movlw	0
  6368  0219  00C8               	movwf	Calculate_Time@temp1+1
  6369  021A  3000               	movlw	0
  6370  021B  00C7               	movwf	Calculate_Time@temp1
  6371                           
  6372                           ;save.c: 167: unsigned long temp2 = 0 ;
  6373  021C  3000               	movlw	0
  6374  021D  00CE               	movwf	Calculate_Time@temp2+3
  6375  021E  3000               	movlw	0
  6376  021F  00CD               	movwf	Calculate_Time@temp2+2
  6377  0220  3000               	movlw	0
  6378  0221  00CC               	movwf	Calculate_Time@temp2+1
  6379  0222  3000               	movlw	0
  6380  0223  00CB               	movwf	Calculate_Time@temp2
  6381                           
  6382                           ;save.c: 168: Bq32k_Rtc_Read_Time(&rtc_tm);
  6383  0224  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  6384  0225  318F  279C  3182   	fcall	_Bq32k_Rtc_Read_Time
  6385                           
  6386                           ;save.c: 169: if( time_count == 1 )
  6387  0228  0020               	movlb	0	; select bank0
  6388  0229  036D               	decf	_time_count,w
  6389  022A  1D03               	btfss	3,2
  6390  022B  2AE0               	goto	l4713
  6391                           
  6392                           ;save.c: 170: {
  6393                           ;save.c: 171: if(rtc_tm.date != rtc_save_ch1.date)
  6394  022C  0021               	movlb	1	; select bank1
  6395  022D  085E               	movf	(_rtc_tm^(0+128)+4),w
  6396  022E  0650               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6397  022F  1D03               	btfss	3,2
  6398  0230  2AE9               	goto	l4717
  6399                           
  6400                           ;save.c: 183: else
  6401                           ;save.c: 184: {
  6402                           ;save.c: 185: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6403                           
  6404                           ;save.c: 182: }
  6405                           
  6406                           ;save.c: 181: time_count = 0;
  6407                           
  6408                           ;save.c: 178: Cur_temperature_time_ch2 = 0;
  6409                           
  6410                           ;save.c: 177: Cur_temperature_time_ch1 = 0;
  6411                           
  6412                           ;save.c: 176: Save_Write_time();
  6413                           
  6414                           ;save.c: 175: Write_Flash_head();
  6415                           
  6416                           ;save.c: 172: {
  6417                           ;save.c: 174: Write_Flash_finish();
  6418  0231  0021               	movlb	1	; select bank1
  6419  0232  085A               	movf	_rtc_tm^(0+128),w
  6420  0233  0020               	movlb	0	; select bank0
  6421  0234  00B9               	movwf	??_Calculate_Time
  6422  0235  01BA               	clrf	??_Calculate_Time+1
  6423  0236  0021               	movlb	1	; select bank1
  6424  0237  085C               	movf	(_rtc_tm^(0+128)+2),w
  6425  0238  0020               	movlb	0	; select bank0
  6426  0239  00BB               	movwf	??_Calculate_Time+2
  6427  023A  01BC               	clrf	??_Calculate_Time+3
  6428  023B  083B               	movf	??_Calculate_Time+2,w
  6429  023C  00F3               	movwf	___wmul@multiplier
  6430  023D  083C               	movf	??_Calculate_Time+3,w
  6431  023E  00F4               	movwf	___wmul@multiplier+1
  6432  023F  3010               	movlw	16
  6433  0240  00F5               	movwf	___wmul@multiplicand
  6434  0241  300E               	movlw	14
  6435  0242  00F6               	movwf	___wmul@multiplicand+1
  6436  0243  318A  2278  3182   	fcall	___wmul
  6437  0246  0873               	movf	?___wmul,w
  6438  0247  0020               	movlb	0	; select bank0
  6439  0248  00BD               	movwf	??_Calculate_Time+4
  6440  0249  0874               	movf	?___wmul+1,w
  6441  024A  00BE               	movwf	??_Calculate_Time+5
  6442  024B  0021               	movlb	1	; select bank1
  6443  024C  085B               	movf	(_rtc_tm^(0+128)+1),w
  6444  024D  0020               	movlb	0	; select bank0
  6445  024E  00BF               	movwf	??_Calculate_Time+6
  6446  024F  01C0               	clrf	??_Calculate_Time+7
  6447  0250  083F               	movf	??_Calculate_Time+6,w
  6448  0251  00F3               	movwf	___wmul@multiplier
  6449  0252  0840               	movf	??_Calculate_Time+7,w
  6450  0253  00F4               	movwf	___wmul@multiplier+1
  6451  0254  303C               	movlw	60
  6452  0255  00F5               	movwf	___wmul@multiplicand
  6453  0256  3000               	movlw	0
  6454  0257  00F6               	movwf	___wmul@multiplicand+1
  6455  0258  318A  2278  3182   	fcall	___wmul
  6456  025B  0873               	movf	?___wmul,w
  6457  025C  0020               	movlb	0	; select bank0
  6458  025D  073D               	addwf	??_Calculate_Time+4,w
  6459  025E  00C1               	movwf	??_Calculate_Time+8
  6460  025F  0874               	movf	?___wmul+1,w
  6461  0260  3D3E               	addwfc	??_Calculate_Time+5,w
  6462  0261  00C2               	movwf	??_Calculate_Time+9
  6463  0262  0839               	movf	??_Calculate_Time,w
  6464  0263  0741               	addwf	??_Calculate_Time+8,w
  6465  0264  00C7               	movwf	Calculate_Time@temp1
  6466  0265  083A               	movf	??_Calculate_Time+1,w
  6467  0266  3D42               	addwfc	??_Calculate_Time+9,w
  6468  0267  00C8               	movwf	Calculate_Time@temp1+1
  6469  0268  01C9               	clrf	Calculate_Time@temp1+2
  6470  0269  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6471  026A  03C9               	decf	Calculate_Time@temp1+2,f
  6472  026B  0849               	movf	Calculate_Time@temp1+2,w
  6473  026C  00CA               	movwf	Calculate_Time@temp1+3
  6474                           
  6475                           ;save.c: 186: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6476  026D  0021               	movlb	1	; select bank1
  6477  026E  084C               	movf	_rtc_save_ch1^(0+128),w
  6478  026F  0020               	movlb	0	; select bank0
  6479  0270  00B9               	movwf	??_Calculate_Time
  6480  0271  01BA               	clrf	??_Calculate_Time+1
  6481  0272  0021               	movlb	1	; select bank1
  6482  0273  084E               	movf	(_rtc_save_ch1^(0+128)+2),w
  6483  0274  0020               	movlb	0	; select bank0
  6484  0275  00BB               	movwf	??_Calculate_Time+2
  6485  0276  01BC               	clrf	??_Calculate_Time+3
  6486  0277  083B               	movf	??_Calculate_Time+2,w
  6487  0278  00F3               	movwf	___wmul@multiplier
  6488  0279  083C               	movf	??_Calculate_Time+3,w
  6489  027A  00F4               	movwf	___wmul@multiplier+1
  6490  027B  3010               	movlw	16
  6491  027C  00F5               	movwf	___wmul@multiplicand
  6492  027D  300E               	movlw	14
  6493  027E  00F6               	movwf	___wmul@multiplicand+1
  6494  027F  318A  2278  3182   	fcall	___wmul
  6495  0282  0873               	movf	?___wmul,w
  6496  0283  0020               	movlb	0	; select bank0
  6497  0284  00BD               	movwf	??_Calculate_Time+4
  6498  0285  0874               	movf	?___wmul+1,w
  6499  0286  00BE               	movwf	??_Calculate_Time+5
  6500  0287  0021               	movlb	1	; select bank1
  6501  0288  084D               	movf	(_rtc_save_ch1^(0+128)+1),w
  6502  0289  0020               	movlb	0	; select bank0
  6503  028A  00BF               	movwf	??_Calculate_Time+6
  6504  028B  01C0               	clrf	??_Calculate_Time+7
  6505  028C  083F               	movf	??_Calculate_Time+6,w
  6506  028D  00F3               	movwf	___wmul@multiplier
  6507  028E  0840               	movf	??_Calculate_Time+7,w
  6508  028F  00F4               	movwf	___wmul@multiplier+1
  6509  0290  303C               	movlw	60
  6510  0291  00F5               	movwf	___wmul@multiplicand
  6511  0292  3000               	movlw	0
  6512  0293  00F6               	movwf	___wmul@multiplicand+1
  6513  0294  318A  2278  3182   	fcall	___wmul
  6514  0297  0873               	movf	?___wmul,w
  6515  0298  0020               	movlb	0	; select bank0
  6516  0299  073D               	addwf	??_Calculate_Time+4,w
  6517  029A  00C1               	movwf	??_Calculate_Time+8
  6518  029B  0874               	movf	?___wmul+1,w
  6519  029C  3D3E               	addwfc	??_Calculate_Time+5,w
  6520  029D  00C2               	movwf	??_Calculate_Time+9
  6521  029E  0839               	movf	??_Calculate_Time,w
  6522  029F  0741               	addwf	??_Calculate_Time+8,w
  6523  02A0  00CB               	movwf	Calculate_Time@temp2
  6524  02A1  083A               	movf	??_Calculate_Time+1,w
  6525  02A2  3D42               	addwfc	??_Calculate_Time+9,w
  6526  02A3  00CC               	movwf	Calculate_Time@temp2+1
  6527  02A4  01CD               	clrf	Calculate_Time@temp2+2
  6528  02A5  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6529  02A6  03CD               	decf	Calculate_Time@temp2+2,f
  6530  02A7  084D               	movf	Calculate_Time@temp2+2,w
  6531  02A8  00CE               	movwf	Calculate_Time@temp2+3
  6532                           
  6533                           ;save.c: 187: temp = temp1 - temp2;
  6534  02A9  0847               	movf	Calculate_Time@temp1,w
  6535  02AA  00B9               	movwf	??_Calculate_Time
  6536  02AB  0848               	movf	Calculate_Time@temp1+1,w
  6537  02AC  00BA               	movwf	??_Calculate_Time+1
  6538  02AD  0849               	movf	Calculate_Time@temp1+2,w
  6539  02AE  00BB               	movwf	??_Calculate_Time+2
  6540  02AF  084A               	movf	Calculate_Time@temp1+3,w
  6541  02B0  00BC               	movwf	??_Calculate_Time+3
  6542  02B1  094B               	comf	Calculate_Time@temp2,w
  6543  02B2  00BD               	movwf	??_Calculate_Time+4
  6544  02B3  094C               	comf	Calculate_Time@temp2+1,w
  6545  02B4  00BE               	movwf	??_Calculate_Time+5
  6546  02B5  094D               	comf	Calculate_Time@temp2+2,w
  6547  02B6  00BF               	movwf	??_Calculate_Time+6
  6548  02B7  094E               	comf	Calculate_Time@temp2+3,w
  6549  02B8  00C0               	movwf	??_Calculate_Time+7
  6550  02B9  0ABD               	incf	??_Calculate_Time+4,f
  6551  02BA  1903               	skipnz
  6552  02BB  0ABE               	incf	??_Calculate_Time+5,f
  6553  02BC  1903               	skipnz
  6554  02BD  0ABF               	incf	??_Calculate_Time+6,f
  6555  02BE  1903               	skipnz
  6556  02BF  0AC0               	incf	??_Calculate_Time+7,f
  6557  02C0  083D               	movf	??_Calculate_Time+4,w
  6558  02C1  07B9               	addwf	??_Calculate_Time,f
  6559  02C2  083E               	movf	??_Calculate_Time+5,w
  6560  02C3  3DBA               	addwfc	??_Calculate_Time+1,f
  6561  02C4  083F               	movf	??_Calculate_Time+6,w
  6562  02C5  3DBB               	addwfc	??_Calculate_Time+2,f
  6563  02C6  0840               	movf	??_Calculate_Time+7,w
  6564  02C7  3DBC               	addwfc	??_Calculate_Time+3,f
  6565  02C8  083C               	movf	??_Calculate_Time+3,w
  6566  02C9  00C6               	movwf	Calculate_Time@temp+3
  6567  02CA  083B               	movf	??_Calculate_Time+2,w
  6568  02CB  00C5               	movwf	Calculate_Time@temp+2
  6569  02CC  083A               	movf	??_Calculate_Time+1,w
  6570  02CD  00C4               	movwf	Calculate_Time@temp+1
  6571  02CE  0839               	movf	??_Calculate_Time,w
  6572  02CF  00C3               	movwf	Calculate_Time@temp
  6573                           
  6574                           ;save.c: 188: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6575  02D0  30CC               	movlw	low (_rtc_save_ch1| 0)
  6576  02D1  0086               	movwf	6
  6577  02D2  0187               	clrf	7
  6578  02D3  30DA               	movlw	low (_rtc_tm| 0)
  6579  02D4  0084               	movwf	4
  6580  02D5  0185               	clrf	5
  6581  02D6  3007               	movlw	7
  6582  02D7  0020               	movlb	0	; select bank0
  6583  02D8  00B9               	movwf	??_Calculate_Time
  6584  02D9                     u398m0:	
  6585  02D9  0012               	moviw fsr0++
  6586  02DA  001E               	movwi fsr1++
  6587  02DB  0BB9               	decfsz	??_Calculate_Time,f
  6588  02DC  2AD9               	goto	u398m0
  6589                           
  6590                           ;save.c: 189: return temp;
  6591  02DD  0020               	movlb	0	; select bank0
  6592  02DE  0843               	movf	Calculate_Time@temp,w
  6593  02DF  0008               	return
  6594  02E0                     l4713:	
  6595                           ;save.c: 190: }
  6596                           ;save.c: 191: }
  6597                           
  6598                           
  6599                           ;save.c: 192: else if( time_count == 3 )
  6600  02E0  3003               	movlw	3
  6601  02E1  066D               	xorwf	_time_count,w
  6602  02E2  1D03               	btfss	3,2
  6603  02E3  2BA7               	goto	l4737
  6604                           
  6605                           ;save.c: 193: {
  6606                           ;save.c: 194: if(rtc_tm.date != rtc_save_ch2.date)
  6607  02E4  0021               	movlb	1	; select bank1
  6608  02E5  085E               	movf	(_rtc_tm^(0+128)+4),w
  6609  02E6  0657               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6610  02E7  1903               	skipnz
  6611  02E8  2AF8               	goto	l4727
  6612  02E9                     l4717:	
  6613                           
  6614                           ;save.c: 195: {
  6615                           ;save.c: 197: Write_Flash_finish();
  6616  02E9  318B  237F  3182   	fcall	_Write_Flash_finish
  6617                           
  6618                           ;save.c: 198: Write_Flash_head();
  6619  02EC  318B  23AE  3182   	fcall	_Write_Flash_head
  6620                           
  6621                           ;save.c: 199: Save_Write_time();
  6622  02EF  3186  26E7  3182   	fcall	_Save_Write_time
  6623                           
  6624                           ;save.c: 200: Cur_temperature_time_ch1 = 0;
  6625  02F2  0021               	movlb	1	; select bank1
  6626  02F3  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  6627                           
  6628                           ;save.c: 201: Cur_temperature_time_ch2 = 0;
  6629  02F4  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6630                           
  6631                           ;save.c: 204: time_count = 0;
  6632  02F5  0020               	movlb	0	; select bank0
  6633  02F6  01ED               	clrf	_time_count
  6634                           
  6635                           ;save.c: 205: }
  6636  02F7  2BA7               	goto	l4737
  6637  02F8                     l4727:	
  6638                           
  6639                           ;save.c: 206: else
  6640                           ;save.c: 207: {
  6641                           ;save.c: 208: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6642  02F8  0021               	movlb	1	; select bank1
  6643  02F9  085A               	movf	_rtc_tm^(0+128),w
  6644  02FA  0020               	movlb	0	; select bank0
  6645  02FB  00B9               	movwf	??_Calculate_Time
  6646  02FC  01BA               	clrf	??_Calculate_Time+1
  6647  02FD  0021               	movlb	1	; select bank1
  6648  02FE  085C               	movf	(_rtc_tm^(0+128)+2),w
  6649  02FF  0020               	movlb	0	; select bank0
  6650  0300  00BB               	movwf	??_Calculate_Time+2
  6651  0301  01BC               	clrf	??_Calculate_Time+3
  6652  0302  083B               	movf	??_Calculate_Time+2,w
  6653  0303  00F3               	movwf	___wmul@multiplier
  6654  0304  083C               	movf	??_Calculate_Time+3,w
  6655  0305  00F4               	movwf	___wmul@multiplier+1
  6656  0306  3010               	movlw	16
  6657  0307  00F5               	movwf	___wmul@multiplicand
  6658  0308  300E               	movlw	14
  6659  0309  00F6               	movwf	___wmul@multiplicand+1
  6660  030A  318A  2278  3182   	fcall	___wmul
  6661  030D  0873               	movf	?___wmul,w
  6662  030E  0020               	movlb	0	; select bank0
  6663  030F  00BD               	movwf	??_Calculate_Time+4
  6664  0310  0874               	movf	?___wmul+1,w
  6665  0311  00BE               	movwf	??_Calculate_Time+5
  6666  0312  0021               	movlb	1	; select bank1
  6667  0313  085B               	movf	(_rtc_tm^(0+128)+1),w
  6668  0314  0020               	movlb	0	; select bank0
  6669  0315  00BF               	movwf	??_Calculate_Time+6
  6670  0316  01C0               	clrf	??_Calculate_Time+7
  6671  0317  083F               	movf	??_Calculate_Time+6,w
  6672  0318  00F3               	movwf	___wmul@multiplier
  6673  0319  0840               	movf	??_Calculate_Time+7,w
  6674  031A  00F4               	movwf	___wmul@multiplier+1
  6675  031B  303C               	movlw	60
  6676  031C  00F5               	movwf	___wmul@multiplicand
  6677  031D  3000               	movlw	0
  6678  031E  00F6               	movwf	___wmul@multiplicand+1
  6679  031F  318A  2278  3182   	fcall	___wmul
  6680  0322  0873               	movf	?___wmul,w
  6681  0323  0020               	movlb	0	; select bank0
  6682  0324  073D               	addwf	??_Calculate_Time+4,w
  6683  0325  00C1               	movwf	??_Calculate_Time+8
  6684  0326  0874               	movf	?___wmul+1,w
  6685  0327  3D3E               	addwfc	??_Calculate_Time+5,w
  6686  0328  00C2               	movwf	??_Calculate_Time+9
  6687  0329  0839               	movf	??_Calculate_Time,w
  6688  032A  0741               	addwf	??_Calculate_Time+8,w
  6689  032B  00C7               	movwf	Calculate_Time@temp1
  6690  032C  083A               	movf	??_Calculate_Time+1,w
  6691  032D  3D42               	addwfc	??_Calculate_Time+9,w
  6692  032E  00C8               	movwf	Calculate_Time@temp1+1
  6693  032F  01C9               	clrf	Calculate_Time@temp1+2
  6694  0330  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6695  0331  03C9               	decf	Calculate_Time@temp1+2,f
  6696  0332  0849               	movf	Calculate_Time@temp1+2,w
  6697  0333  00CA               	movwf	Calculate_Time@temp1+3
  6698                           
  6699                           ;save.c: 209: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6700  0334  0021               	movlb	1	; select bank1
  6701  0335  0853               	movf	_rtc_save_ch2^(0+128),w
  6702  0336  0020               	movlb	0	; select bank0
  6703  0337  00B9               	movwf	??_Calculate_Time
  6704  0338  01BA               	clrf	??_Calculate_Time+1
  6705  0339  0021               	movlb	1	; select bank1
  6706  033A  0855               	movf	(_rtc_save_ch2^(0+128)+2),w
  6707  033B  0020               	movlb	0	; select bank0
  6708  033C  00BB               	movwf	??_Calculate_Time+2
  6709  033D  01BC               	clrf	??_Calculate_Time+3
  6710  033E  083B               	movf	??_Calculate_Time+2,w
  6711  033F  00F3               	movwf	___wmul@multiplier
  6712  0340  083C               	movf	??_Calculate_Time+3,w
  6713  0341  00F4               	movwf	___wmul@multiplier+1
  6714  0342  3010               	movlw	16
  6715  0343  00F5               	movwf	___wmul@multiplicand
  6716  0344  300E               	movlw	14
  6717  0345  00F6               	movwf	___wmul@multiplicand+1
  6718  0346  318A  2278  3182   	fcall	___wmul
  6719  0349  0873               	movf	?___wmul,w
  6720  034A  0020               	movlb	0	; select bank0
  6721  034B  00BD               	movwf	??_Calculate_Time+4
  6722  034C  0874               	movf	?___wmul+1,w
  6723  034D  00BE               	movwf	??_Calculate_Time+5
  6724  034E  0021               	movlb	1	; select bank1
  6725  034F  0854               	movf	(_rtc_save_ch2^(0+128)+1),w
  6726  0350  0020               	movlb	0	; select bank0
  6727  0351  00BF               	movwf	??_Calculate_Time+6
  6728  0352  01C0               	clrf	??_Calculate_Time+7
  6729  0353  083F               	movf	??_Calculate_Time+6,w
  6730  0354  00F3               	movwf	___wmul@multiplier
  6731  0355  0840               	movf	??_Calculate_Time+7,w
  6732  0356  00F4               	movwf	___wmul@multiplier+1
  6733  0357  303C               	movlw	60
  6734  0358  00F5               	movwf	___wmul@multiplicand
  6735  0359  3000               	movlw	0
  6736  035A  00F6               	movwf	___wmul@multiplicand+1
  6737  035B  318A  2278  3182   	fcall	___wmul
  6738  035E  0873               	movf	?___wmul,w
  6739  035F  0020               	movlb	0	; select bank0
  6740  0360  073D               	addwf	??_Calculate_Time+4,w
  6741  0361  00C1               	movwf	??_Calculate_Time+8
  6742  0362  0874               	movf	?___wmul+1,w
  6743  0363  3D3E               	addwfc	??_Calculate_Time+5,w
  6744  0364  00C2               	movwf	??_Calculate_Time+9
  6745  0365  0839               	movf	??_Calculate_Time,w
  6746  0366  0741               	addwf	??_Calculate_Time+8,w
  6747  0367  00CB               	movwf	Calculate_Time@temp2
  6748  0368  083A               	movf	??_Calculate_Time+1,w
  6749  0369  3D42               	addwfc	??_Calculate_Time+9,w
  6750  036A  00CC               	movwf	Calculate_Time@temp2+1
  6751  036B  01CD               	clrf	Calculate_Time@temp2+2
  6752  036C  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6753  036D  03CD               	decf	Calculate_Time@temp2+2,f
  6754  036E  084D               	movf	Calculate_Time@temp2+2,w
  6755  036F  00CE               	movwf	Calculate_Time@temp2+3
  6756                           
  6757                           ;save.c: 210: temp = temp1 - temp2;
  6758  0370  0847               	movf	Calculate_Time@temp1,w
  6759  0371  00B9               	movwf	??_Calculate_Time
  6760  0372  0848               	movf	Calculate_Time@temp1+1,w
  6761  0373  00BA               	movwf	??_Calculate_Time+1
  6762  0374  0849               	movf	Calculate_Time@temp1+2,w
  6763  0375  00BB               	movwf	??_Calculate_Time+2
  6764  0376  084A               	movf	Calculate_Time@temp1+3,w
  6765  0377  00BC               	movwf	??_Calculate_Time+3
  6766  0378  094B               	comf	Calculate_Time@temp2,w
  6767  0379  00BD               	movwf	??_Calculate_Time+4
  6768  037A  094C               	comf	Calculate_Time@temp2+1,w
  6769  037B  00BE               	movwf	??_Calculate_Time+5
  6770  037C  094D               	comf	Calculate_Time@temp2+2,w
  6771  037D  00BF               	movwf	??_Calculate_Time+6
  6772  037E  094E               	comf	Calculate_Time@temp2+3,w
  6773  037F  00C0               	movwf	??_Calculate_Time+7
  6774  0380  0ABD               	incf	??_Calculate_Time+4,f
  6775  0381  1903               	skipnz
  6776  0382  0ABE               	incf	??_Calculate_Time+5,f
  6777  0383  1903               	skipnz
  6778  0384  0ABF               	incf	??_Calculate_Time+6,f
  6779  0385  1903               	skipnz
  6780  0386  0AC0               	incf	??_Calculate_Time+7,f
  6781  0387  083D               	movf	??_Calculate_Time+4,w
  6782  0388  07B9               	addwf	??_Calculate_Time,f
  6783  0389  083E               	movf	??_Calculate_Time+5,w
  6784  038A  3DBA               	addwfc	??_Calculate_Time+1,f
  6785  038B  083F               	movf	??_Calculate_Time+6,w
  6786  038C  3DBB               	addwfc	??_Calculate_Time+2,f
  6787  038D  0840               	movf	??_Calculate_Time+7,w
  6788  038E  3DBC               	addwfc	??_Calculate_Time+3,f
  6789  038F  083C               	movf	??_Calculate_Time+3,w
  6790  0390  00C6               	movwf	Calculate_Time@temp+3
  6791  0391  083B               	movf	??_Calculate_Time+2,w
  6792  0392  00C5               	movwf	Calculate_Time@temp+2
  6793  0393  083A               	movf	??_Calculate_Time+1,w
  6794  0394  00C4               	movwf	Calculate_Time@temp+1
  6795  0395  0839               	movf	??_Calculate_Time,w
  6796  0396  00C3               	movwf	Calculate_Time@temp
  6797                           
  6798                           ;save.c: 211: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6799  0397  30D3               	movlw	low (_rtc_save_ch2| 0)
  6800  0398  0086               	movwf	6
  6801  0399  0187               	clrf	7
  6802  039A  30DA               	movlw	low (_rtc_tm| 0)
  6803  039B  0084               	movwf	4
  6804  039C  0185               	clrf	5
  6805  039D  3007               	movlw	7
  6806  039E  0020               	movlb	0	; select bank0
  6807  039F  00B9               	movwf	??_Calculate_Time
  6808  03A0                     u401m0:	
  6809  03A0  0012               	moviw fsr0++
  6810  03A1  001E               	movwi fsr1++
  6811  03A2  0BB9               	decfsz	??_Calculate_Time,f
  6812  03A3  2BA0               	goto	u401m0
  6813                           
  6814                           ;save.c: 212: return temp;
  6815  03A4  0020               	movlb	0	; select bank0
  6816  03A5  0843               	movf	Calculate_Time@temp,w
  6817  03A6  0008               	return
  6818  03A7                     l4737:	
  6819                           
  6820                           ;save.c: 213: }
  6821                           ;save.c: 214: }
  6822                           ;save.c: 215: return 0;
  6823  03A7  3000               	movlw	0
  6824  03A8  0008               	return
  6825  03A9                     __end_of_Calculate_Time:	
  6826                           
  6827                           	psect	text21
  6828  0A78                     __ptext21:	
  6829 ;; *************** function ___wmul *****************
  6830 ;; Defined at:
  6831 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  multiplier      2    3[COMMON] unsigned int 
  6834 ;;  multiplicand    2    5[COMMON] unsigned int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  product         2    0[BANK0 ] unsigned int 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  2    3[COMMON] unsigned int 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;Total ram usage:        6 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    3
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_Calculate_Time
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           
  6861                           ;psect for function ___wmul
  6862  0A78                     ___wmul:	
  6863                           
  6864                           ;incstack = 0
  6865                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6866  0A78  0020               	movlb	0	; select bank0
  6867  0A79  01A0               	clrf	___wmul@product
  6868  0A7A  01A1               	clrf	___wmul@product+1
  6869  0A7B                     l4619:	
  6870  0A7B  1C73               	btfss	___wmul@multiplier,0
  6871  0A7C  2A82               	goto	l1081
  6872  0A7D  0875               	movf	___wmul@multiplicand,w
  6873  0A7E  0020               	movlb	0	; select bank0
  6874  0A7F  07A0               	addwf	___wmul@product,f
  6875  0A80  0876               	movf	___wmul@multiplicand+1,w
  6876  0A81  3DA1               	addwfc	___wmul@product+1,f
  6877  0A82                     l1081:	
  6878  0A82  3001               	movlw	1
  6879  0A83                     u3865:	
  6880  0A83  35F5               	lslf	___wmul@multiplicand,f
  6881  0A84  0DF6               	rlf	___wmul@multiplicand+1,f
  6882  0A85  0B89               	decfsz	9,f
  6883  0A86  2A83               	goto	u3865
  6884  0A87  3001               	movlw	1
  6885  0A88                     u3875:	
  6886  0A88  36F4               	lsrf	___wmul@multiplier+1,f
  6887  0A89  0CF3               	rrf	___wmul@multiplier,f
  6888  0A8A  0B89               	decfsz	9,f
  6889  0A8B  2A88               	goto	u3875
  6890  0A8C  0873               	movf	___wmul@multiplier,w
  6891  0A8D  0474               	iorwf	___wmul@multiplier+1,w
  6892  0A8E  1D03               	btfss	3,2
  6893  0A8F  2A7B               	goto	l4619
  6894  0A90  0020               	movlb	0	; select bank0
  6895  0A91  0821               	movf	___wmul@product+1,w
  6896  0A92  00F4               	movwf	?___wmul+1
  6897  0A93  0820               	movf	___wmul@product,w
  6898  0A94  00F3               	movwf	?___wmul
  6899  0A95  0008               	return
  6900  0A96                     __end_of___wmul:	
  6901                           
  6902                           	psect	text22
  6903  0BAE                     __ptext22:	
  6904 ;; *************** function _Write_Flash_head *****************
  6905 ;; Defined at:
  6906 ;;		line 92 in file "mcc_generated_files/save.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;Total ram usage:        1 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    6
  6927 ;; This function calls:
  6928 ;;		_FLASH_WriteWord
  6929 ;; This function is called by:
  6930 ;;		_Key_Process
  6931 ;;		_Calculate_Time
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           
  6936                           ;psect for function _Write_Flash_head
  6937  0BAE                     _Write_Flash_head:	
  6938                           
  6939                           ;save.c: 94: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6940                           
  6941                           ;incstack = 0
  6942                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6943  0BAE  0021               	movlb	1	; select bank1
  6944  0BAF  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6945  0BB0  0020               	movlb	0	; select bank0
  6946  0BB1  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6947  0BB2  0021               	movlb	1	; select bank1
  6948  0BB3  082E               	movf	_Cur_Save_Index^(0+128),w
  6949  0BB4  0020               	movlb	0	; select bank0
  6950  0BB5  00AA               	movwf	FLASH_WriteWord@flashAddr
  6951  0BB6  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6952  0BB7  00F7               	movwf	??_Write_Flash_head
  6953  0BB8  0877               	movf	??_Write_Flash_head,w
  6954  0BB9  00AC               	movwf	FLASH_WriteWord@ramBuf
  6955  0BBA  30AA               	movlw	170
  6956  0BBB  00AD               	movwf	FLASH_WriteWord@word
  6957  0BBC  30AA               	movlw	170
  6958  0BBD  00AE               	movwf	FLASH_WriteWord@word+1
  6959  0BBE  318D  2521  318B   	fcall	_FLASH_WriteWord
  6960                           
  6961                           ;save.c: 95: Cur_Save_Index++;
  6962  0BC1  3001               	movlw	1
  6963  0BC2  0021               	movlb	1	; select bank1
  6964  0BC3  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6965  0BC4  3000               	movlw	0
  6966  0BC5  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6967                           
  6968                           ;save.c: 96: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6969  0BC6  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6970  0BC7  0020               	movlb	0	; select bank0
  6971  0BC8  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6972  0BC9  0021               	movlb	1	; select bank1
  6973  0BCA  082E               	movf	_Cur_Save_Index^(0+128),w
  6974  0BCB  0020               	movlb	0	; select bank0
  6975  0BCC  00AA               	movwf	FLASH_WriteWord@flashAddr
  6976  0BCD  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6977  0BCE  00F7               	movwf	??_Write_Flash_head
  6978  0BCF  0877               	movf	??_Write_Flash_head,w
  6979  0BD0  00AC               	movwf	FLASH_WriteWord@ramBuf
  6980  0BD1  30AA               	movlw	170
  6981  0BD2  00AD               	movwf	FLASH_WriteWord@word
  6982  0BD3  30AA               	movlw	170
  6983  0BD4  00AE               	movwf	FLASH_WriteWord@word+1
  6984  0BD5  318D  2521         	fcall	_FLASH_WriteWord
  6985                           
  6986                           ;save.c: 97: Cur_Save_Index++;
  6987  0BD7  3001               	movlw	1
  6988  0BD8  0021               	movlb	1	; select bank1
  6989  0BD9  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6990  0BDA  3000               	movlw	0
  6991  0BDB  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6992  0BDC  0008               	return
  6993  0BDD                     __end_of_Write_Flash_head:	
  6994                           
  6995                           	psect	text23
  6996  0B7F                     __ptext23:	
  6997 ;; *************** function _Write_Flash_finish *****************
  6998 ;; Defined at:
  6999 ;;		line 106 in file "mcc_generated_files/save.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;Total ram usage:        1 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    6
  7020 ;; This function calls:
  7021 ;;		_FLASH_WriteWord
  7022 ;; This function is called by:
  7023 ;;		_Key_Process
  7024 ;;		_Serach_Flash_Head
  7025 ;;		_Calculate_Time
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _Write_Flash_finish
  7031  0B7F                     _Write_Flash_finish:	
  7032                           
  7033                           ;save.c: 108: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7037  0B7F  0021               	movlb	1	; select bank1
  7038  0B80  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7039  0B81  0020               	movlb	0	; select bank0
  7040  0B82  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7041  0B83  0021               	movlb	1	; select bank1
  7042  0B84  082E               	movf	_Cur_Save_Index^(0+128),w
  7043  0B85  0020               	movlb	0	; select bank0
  7044  0B86  00AA               	movwf	FLASH_WriteWord@flashAddr
  7045  0B87  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7046  0B88  00F7               	movwf	??_Write_Flash_finish
  7047  0B89  0877               	movf	??_Write_Flash_finish,w
  7048  0B8A  00AC               	movwf	FLASH_WriteWord@ramBuf
  7049  0B8B  3055               	movlw	85
  7050  0B8C  00AD               	movwf	FLASH_WriteWord@word
  7051  0B8D  3055               	movlw	85
  7052  0B8E  00AE               	movwf	FLASH_WriteWord@word+1
  7053  0B8F  318D  2521  318B   	fcall	_FLASH_WriteWord
  7054                           
  7055                           ;save.c: 109: Cur_Save_Index++;
  7056  0B92  3001               	movlw	1
  7057  0B93  0021               	movlb	1	; select bank1
  7058  0B94  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7059  0B95  3000               	movlw	0
  7060  0B96  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7061                           
  7062                           ;save.c: 110: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  7063  0B97  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7064  0B98  0020               	movlb	0	; select bank0
  7065  0B99  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7066  0B9A  0021               	movlb	1	; select bank1
  7067  0B9B  082E               	movf	_Cur_Save_Index^(0+128),w
  7068  0B9C  0020               	movlb	0	; select bank0
  7069  0B9D  00AA               	movwf	FLASH_WriteWord@flashAddr
  7070  0B9E  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7071  0B9F  00F7               	movwf	??_Write_Flash_finish
  7072  0BA0  0877               	movf	??_Write_Flash_finish,w
  7073  0BA1  00AC               	movwf	FLASH_WriteWord@ramBuf
  7074  0BA2  3055               	movlw	85
  7075  0BA3  00AD               	movwf	FLASH_WriteWord@word
  7076  0BA4  3055               	movlw	85
  7077  0BA5  00AE               	movwf	FLASH_WriteWord@word+1
  7078  0BA6  318D  2521         	fcall	_FLASH_WriteWord
  7079                           
  7080                           ;save.c: 111: Cur_Save_Index++;
  7081  0BA8  3001               	movlw	1
  7082  0BA9  0021               	movlb	1	; select bank1
  7083  0BAA  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7084  0BAB  3000               	movlw	0
  7085  0BAC  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7086  0BAD  0008               	return
  7087  0BAE                     __end_of_Write_Flash_finish:	
  7088                           
  7089                           	psect	text24
  7090  06E7                     __ptext24:	
  7091 ;; *************** function _Save_Write_time *****************
  7092 ;; Defined at:
  7093 ;;		line 239 in file "mcc_generated_files/save.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  i               1    0        unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      void 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;Total ram usage:        2 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    7
  7114 ;; This function calls:
  7115 ;;		_Bq32k_Rtc_Read_Time
  7116 ;;		_Save_Write_word
  7117 ;; This function is called by:
  7118 ;;		_Key_Process
  7119 ;;		_Calculate_Time
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _Save_Write_time
  7125  06E7                     _Save_Write_time:	
  7126                           
  7127                           ;save.c: 241: unsigned char i;
  7128                           ;save.c: 242: Bq32k_Rtc_Read_Time(&rtc_tm);
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7132  06E7  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  7133  06E8  318F  279C  3186   	fcall	_Bq32k_Rtc_Read_Time
  7134                           
  7135                           ;save.c: 243: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  7136  06EB  30CC               	movlw	low (_rtc_save_ch1| 0)
  7137  06EC  0086               	movwf	6
  7138  06ED  0187               	clrf	7
  7139  06EE  30DA               	movlw	low (_rtc_tm| 0)
  7140  06EF  0084               	movwf	4
  7141  06F0  0185               	clrf	5
  7142  06F1  3007               	movlw	7
  7143  06F2  0020               	movlb	0	; select bank0
  7144  06F3  00B7               	movwf	??_Save_Write_time
  7145  06F4                     u383m0:	
  7146  06F4  0012               	moviw fsr0++
  7147  06F5  001E               	movwi fsr1++
  7148  06F6  0BB7               	decfsz	??_Save_Write_time,f
  7149  06F7  2EF4               	goto	u383m0
  7150                           
  7151                           ;save.c: 244: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  7152  06F8  30D3               	movlw	low (_rtc_save_ch2| 0)
  7153  06F9  0086               	movwf	6
  7154  06FA  0187               	clrf	7
  7155  06FB  30DA               	movlw	low (_rtc_tm| 0)
  7156  06FC  0084               	movwf	4
  7157  06FD  0185               	clrf	5
  7158  06FE  3007               	movlw	7
  7159  06FF  0020               	movlb	0	; select bank0
  7160  0700  00B7               	movwf	??_Save_Write_time
  7161  0701                     u384m0:	
  7162  0701  0012               	moviw fsr0++
  7163  0702  001E               	movwi fsr1++
  7164  0703  0BB7               	decfsz	??_Save_Write_time,f
  7165  0704  2F01               	goto	u384m0
  7166                           
  7167                           ;save.c: 245: Save_Write_word( rtc_tm.years);
  7168  0705  0021               	movlb	1	; select bank1
  7169  0706  0860               	movf	(_rtc_tm^(0+128)+6),w
  7170  0707  0020               	movlb	0	; select bank0
  7171  0708  00B7               	movwf	??_Save_Write_time
  7172  0709  01B8               	clrf	??_Save_Write_time+1
  7173  070A  0837               	movf	??_Save_Write_time,w
  7174  070B  00B3               	movwf	Save_Write_word@data
  7175  070C  0838               	movf	??_Save_Write_time+1,w
  7176  070D  00B4               	movwf	Save_Write_word@data+1
  7177  070E  318C  2477  3186   	fcall	_Save_Write_word
  7178                           
  7179                           ;save.c: 246: Save_Write_word( rtc_tm.month);
  7180  0711  0021               	movlb	1	; select bank1
  7181  0712  085F               	movf	(_rtc_tm^(0+128)+5),w
  7182  0713  0020               	movlb	0	; select bank0
  7183  0714  00B7               	movwf	??_Save_Write_time
  7184  0715  01B8               	clrf	??_Save_Write_time+1
  7185  0716  0837               	movf	??_Save_Write_time,w
  7186  0717  00B3               	movwf	Save_Write_word@data
  7187  0718  0838               	movf	??_Save_Write_time+1,w
  7188  0719  00B4               	movwf	Save_Write_word@data+1
  7189  071A  318C  2477  3186   	fcall	_Save_Write_word
  7190                           
  7191                           ;save.c: 247: Save_Write_word( rtc_tm.date);
  7192  071D  0021               	movlb	1	; select bank1
  7193  071E  085E               	movf	(_rtc_tm^(0+128)+4),w
  7194  071F  0020               	movlb	0	; select bank0
  7195  0720  00B7               	movwf	??_Save_Write_time
  7196  0721  01B8               	clrf	??_Save_Write_time+1
  7197  0722  0837               	movf	??_Save_Write_time,w
  7198  0723  00B3               	movwf	Save_Write_word@data
  7199  0724  0838               	movf	??_Save_Write_time+1,w
  7200  0725  00B4               	movwf	Save_Write_word@data+1
  7201  0726  318C  2477  3186   	fcall	_Save_Write_word
  7202                           
  7203                           ;save.c: 248: Save_Write_word( rtc_tm.hours);
  7204  0729  0021               	movlb	1	; select bank1
  7205  072A  085C               	movf	(_rtc_tm^(0+128)+2),w
  7206  072B  0020               	movlb	0	; select bank0
  7207  072C  00B7               	movwf	??_Save_Write_time
  7208  072D  01B8               	clrf	??_Save_Write_time+1
  7209  072E  0837               	movf	??_Save_Write_time,w
  7210  072F  00B3               	movwf	Save_Write_word@data
  7211  0730  0838               	movf	??_Save_Write_time+1,w
  7212  0731  00B4               	movwf	Save_Write_word@data+1
  7213  0732  318C  2477  3186   	fcall	_Save_Write_word
  7214                           
  7215                           ;save.c: 249: Save_Write_word( rtc_tm.minutes);
  7216  0735  0021               	movlb	1	; select bank1
  7217  0736  085B               	movf	(_rtc_tm^(0+128)+1),w
  7218  0737  0020               	movlb	0	; select bank0
  7219  0738  00B7               	movwf	??_Save_Write_time
  7220  0739  01B8               	clrf	??_Save_Write_time+1
  7221  073A  0837               	movf	??_Save_Write_time,w
  7222  073B  00B3               	movwf	Save_Write_word@data
  7223  073C  0838               	movf	??_Save_Write_time+1,w
  7224  073D  00B4               	movwf	Save_Write_word@data+1
  7225  073E  318C  2477  3186   	fcall	_Save_Write_word
  7226                           
  7227                           ;save.c: 250: Save_Write_word( rtc_tm.seconds);
  7228  0741  0021               	movlb	1	; select bank1
  7229  0742  085A               	movf	_rtc_tm^(0+128),w
  7230  0743  0020               	movlb	0	; select bank0
  7231  0744  00B7               	movwf	??_Save_Write_time
  7232  0745  01B8               	clrf	??_Save_Write_time+1
  7233  0746  0837               	movf	??_Save_Write_time,w
  7234  0747  00B3               	movwf	Save_Write_word@data
  7235  0748  0838               	movf	??_Save_Write_time+1,w
  7236  0749  00B4               	movwf	Save_Write_word@data+1
  7237  074A  318C  2477  3186   	fcall	_Save_Write_word
  7238                           
  7239                           ;save.c: 251: Save_Write_word( rtc_tm.wday);
  7240  074D  0021               	movlb	1	; select bank1
  7241  074E  085D               	movf	(_rtc_tm^(0+128)+3),w
  7242  074F  0020               	movlb	0	; select bank0
  7243  0750  00B7               	movwf	??_Save_Write_time
  7244  0751  01B8               	clrf	??_Save_Write_time+1
  7245  0752  0837               	movf	??_Save_Write_time,w
  7246  0753  00B3               	movwf	Save_Write_word@data
  7247  0754  0838               	movf	??_Save_Write_time+1,w
  7248  0755  00B4               	movwf	Save_Write_word@data+1
  7249  0756  318C  2477         	fcall	_Save_Write_word
  7250  0758  0008               	return
  7251  0759                     __end_of_Save_Write_time:	
  7252                           
  7253                           	psect	text25
  7254  0C77                     __ptext25:	
  7255 ;; *************** function _Save_Write_word *****************
  7256 ;; Defined at:
  7257 ;;		line 224 in file "mcc_generated_files/save.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  data            2   19[BANK0 ] unsigned int 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;Total ram usage:        4 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    6
  7278 ;; This function calls:
  7279 ;;		_FLASH_WriteWord
  7280 ;; This function is called by:
  7281 ;;		_tc_temperature_trans
  7282 ;;		_Save_process
  7283 ;;		_Save_Write_time
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _Save_Write_word
  7289  0C77                     _Save_Write_word:	
  7290                           
  7291                           ;save.c: 226: if( (data & 0x3fff) == 0x3fff)
  7292                           
  7293                           ;incstack = 0
  7294                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7295  0C77  30FF               	movlw	255
  7296  0C78  0020               	movlb	0	; select bank0
  7297  0C79  0533               	andwf	Save_Write_word@data,w
  7298  0C7A  00B5               	movwf	??_Save_Write_word
  7299  0C7B  303F               	movlw	63
  7300  0C7C  0534               	andwf	Save_Write_word@data+1,w
  7301  0C7D  00B6               	movwf	??_Save_Write_word+1
  7302  0C7E  0A35               	incf	??_Save_Write_word,w
  7303  0C7F  303F               	movlw	63
  7304  0C80  1903               	skipnz
  7305  0C81  0636               	xorwf	??_Save_Write_word+1,w
  7306  0C82  1D03               	btfss	3,2
  7307  0C83  2C95               	goto	l4561
  7308                           
  7309                           ;save.c: 227: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x3ffe);
  7310  0C84  0021               	movlb	1	; select bank1
  7311  0C85  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7312  0C86  0020               	movlb	0	; select bank0
  7313  0C87  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7314  0C88  0021               	movlb	1	; select bank1
  7315  0C89  082E               	movf	_Cur_Save_Index^(0+128),w
  7316  0C8A  0020               	movlb	0	; select bank0
  7317  0C8B  00AA               	movwf	FLASH_WriteWord@flashAddr
  7318  0C8C  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7319  0C8D  00B5               	movwf	??_Save_Write_word
  7320  0C8E  0835               	movf	??_Save_Write_word,w
  7321  0C8F  00AC               	movwf	FLASH_WriteWord@ramBuf
  7322  0C90  30FE               	movlw	254
  7323  0C91  00AD               	movwf	FLASH_WriteWord@word
  7324  0C92  303F               	movlw	63
  7325  0C93  00AE               	movwf	FLASH_WriteWord@word+1
  7326  0C94  2CA5               	goto	L9
  7327  0C95                     l4561:	
  7328                           
  7329                           ;save.c: 228: else
  7330                           ;save.c: 229: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  7331  0C95  0021               	movlb	1	; select bank1
  7332  0C96  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7333  0C97  0020               	movlb	0	; select bank0
  7334  0C98  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7335  0C99  0021               	movlb	1	; select bank1
  7336  0C9A  082E               	movf	_Cur_Save_Index^(0+128),w
  7337  0C9B  0020               	movlb	0	; select bank0
  7338  0C9C  00AA               	movwf	FLASH_WriteWord@flashAddr
  7339  0C9D  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7340  0C9E  00B5               	movwf	??_Save_Write_word
  7341  0C9F  0835               	movf	??_Save_Write_word,w
  7342  0CA0  00AC               	movwf	FLASH_WriteWord@ramBuf
  7343  0CA1  0834               	movf	Save_Write_word@data+1,w
  7344  0CA2  00AE               	movwf	FLASH_WriteWord@word+1
  7345  0CA3  0833               	movf	Save_Write_word@data,w
  7346  0CA4  00AD               	movwf	FLASH_WriteWord@word
  7347  0CA5                     L9:	
  7348  0CA5  318D  2521         	fcall	_FLASH_WriteWord
  7349                           
  7350                           ;save.c: 230: Cur_Save_Index++;
  7351  0CA7  3001               	movlw	1
  7352  0CA8  0021               	movlb	1	; select bank1
  7353  0CA9  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7354  0CAA  3000               	movlw	0
  7355  0CAB  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7356  0CAC  0008               	return
  7357  0CAD                     __end_of_Save_Write_word:	
  7358                           
  7359                           	psect	text26
  7360  0D21                     __ptext26:	
  7361 ;; *************** function _FLASH_WriteWord *****************
  7362 ;; Defined at:
  7363 ;;		line 74 in file "mcc_generated_files/memory.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  7366 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  7367 ;;		 -> Flash_buff(64), 
  7368 ;;  word            2   13[BANK0 ] unsigned int 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  7371 ;;  i               1   18[BANK0 ] unsigned char 
  7372 ;;  offset          1   15[BANK0 ] unsigned char 
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7382 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7383 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;Total ram usage:       10 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    5
  7389 ;; This function calls:
  7390 ;;		_FLASH_ReadWord
  7391 ;;		_FLASH_WriteBlock
  7392 ;; This function is called by:
  7393 ;;		_Write_Flash_head
  7394 ;;		_Write_Flash_finish
  7395 ;;		_Save_Write_word
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function _FLASH_WriteWord
  7401  0D21                     _FLASH_WriteWord:	
  7402                           
  7403                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7404                           
  7405                           ;incstack = 0
  7406                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7407  0D21  30E0               	movlw	224
  7408  0D22  0020               	movlb	0	; select bank0
  7409  0D23  052A               	andwf	FLASH_WriteWord@flashAddr,w
  7410  0D24  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  7411  0D25  303F               	movlw	63
  7412  0D26  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  7413  0D27  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  7414                           
  7415                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  7416  0D28  082A               	movf	FLASH_WriteWord@flashAddr,w
  7417  0D29  391F               	andlw	31
  7418  0D2A  00F6               	movwf	??_FLASH_WriteWord
  7419  0D2B  0876               	movf	??_FLASH_WriteWord,w
  7420  0D2C  00AF               	movwf	FLASH_WriteWord@offset
  7421                           
  7422                           ;memory.c: 77: uint8_t i;
  7423                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  7424  0D2D  01B2               	clrf	FLASH_WriteWord@i
  7425  0D2E  3020               	movlw	32
  7426  0D2F  0232               	subwf	FLASH_WriteWord@i,w
  7427  0D30  1803               	btfsc	3,0
  7428  0D31  2D50               	goto	l4491
  7429  0D32                     l4485:	
  7430                           
  7431                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  7432  0D32  0832               	movf	FLASH_WriteWord@i,w
  7433  0D33  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  7434  0D34  00F3               	movwf	FLASH_ReadWord@flashAddr
  7435  0D35  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7436  0D36  1803               	skipnc
  7437  0D37  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  7438  0D38  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  7439  0D39  3189  2183  318D   	fcall	_FLASH_ReadWord
  7440  0D3C  0020               	movlb	0	; select bank0
  7441  0D3D  3532               	lslf	FLASH_WriteWord@i,w
  7442  0D3E  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7443  0D3F  00F6               	movwf	??_FLASH_WriteWord
  7444  0D40  0876               	movf	??_FLASH_WriteWord,w
  7445  0D41  0086               	movwf	6
  7446  0D42  3001               	movlw	1	; select bank2/3
  7447  0D43  0087               	movwf	7
  7448  0D44  0873               	movf	?_FLASH_ReadWord,w
  7449  0D45  3FC0               	movwi [0]fsr1
  7450  0D46  0874               	movf	?_FLASH_ReadWord+1,w
  7451  0D47  3FC1               	movwi [1]fsr1
  7452  0D48  3001               	movlw	1
  7453  0D49  00F6               	movwf	??_FLASH_WriteWord
  7454  0D4A  0876               	movf	??_FLASH_WriteWord,w
  7455  0D4B  07B2               	addwf	FLASH_WriteWord@i,f
  7456  0D4C  3020               	movlw	32
  7457  0D4D  0232               	subwf	FLASH_WriteWord@i,w
  7458  0D4E  1C03               	skipc
  7459  0D4F  2D32               	goto	l4485
  7460  0D50                     l4491:	
  7461                           
  7462                           ;memory.c: 82: }
  7463                           ;memory.c: 85: ramBuf[offset] = word;
  7464  0D50  352F               	lslf	FLASH_WriteWord@offset,w
  7465  0D51  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7466  0D52  00F6               	movwf	??_FLASH_WriteWord
  7467  0D53  0876               	movf	??_FLASH_WriteWord,w
  7468  0D54  0086               	movwf	6
  7469  0D55  3001               	movlw	1	; select bank2/3
  7470  0D56  0087               	movwf	7
  7471  0D57  082D               	movf	FLASH_WriteWord@word,w
  7472  0D58  3FC0               	movwi [0]fsr1
  7473  0D59  082E               	movf	FLASH_WriteWord@word+1,w
  7474  0D5A  3FC1               	movwi [1]fsr1
  7475                           
  7476                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  7477  0D5B  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7478  0D5C  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  7479  0D5D  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  7480  0D5E  00A0               	movwf	FLASH_WriteBlock@writeAddr
  7481  0D5F  082C               	movf	FLASH_WriteWord@ramBuf,w
  7482  0D60  00F6               	movwf	??_FLASH_WriteWord
  7483  0D61  0876               	movf	??_FLASH_WriteWord,w
  7484  0D62  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  7485  0D63  3187  2759         	fcall	_FLASH_WriteBlock
  7486  0D65  0008               	return
  7487  0D66                     __end_of_FLASH_WriteWord:	
  7488                           
  7489                           	psect	text27
  7490  0759                     __ptext27:	
  7491 ;; *************** function _FLASH_WriteBlock *****************
  7492 ;; Defined at:
  7493 ;;		line 91 in file "mcc_generated_files/memory.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  7496 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  7497 ;;		 -> Flash_buff(64), 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  7500 ;;  i               1    9[BANK0 ] unsigned char 
  7501 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      char 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7511 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;Total ram usage:       10 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    4
  7518 ;; This function calls:
  7519 ;;		_FLASH_EraseBlock
  7520 ;; This function is called by:
  7521 ;;		_FLASH_WriteWord
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _FLASH_WriteBlock
  7527  0759                     _FLASH_WriteBlock:	
  7528                           
  7529                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7530                           
  7531                           ;incstack = 0
  7532                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7533  0759  30E0               	movlw	224
  7534  075A  0020               	movlb	0	; select bank0
  7535  075B  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  7536  075C  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  7537  075D  303F               	movlw	63
  7538  075E  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  7539  075F  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  7540                           
  7541                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  7542  0760  3000               	movlw	0
  7543  0761  1B8B               	btfsc	11,7	;volatile
  7544  0762  3001               	movlw	1
  7545  0763  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  7546                           
  7547                           ;memory.c: 94: uint8_t i;
  7548                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  7549  0764  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  7550  0765  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  7551  0766  1D03               	skipz
  7552  0767  2F6A               	goto	u3575
  7553  0768  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  7554  0769  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  7555  076A                     u3575:	
  7556  076A  1D03               	btfss	3,2
  7557  076B  0008               	return
  7558                           
  7559                           ;memory.c: 99: }
  7560                           ;memory.c: 101: INTCONbits.GIE = 0;
  7561                           
  7562                           ;memory.c: 98: return -1;
  7563                           ;	Return value of _FLASH_WriteBlock is never used
  7564  076C  138B               	bcf	11,7	;volatile
  7565                           
  7566                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  7567  076D  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7568  076E  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  7569  076F  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7570  0770  00F3               	movwf	FLASH_EraseBlock@startAddr
  7571  0771  318A  2220  3187   	fcall	_FLASH_EraseBlock
  7572                           
  7573                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  7574  0774  0023               	movlb	3	; select bank3
  7575  0775  1315               	bcf	21,6	;volatile
  7576                           
  7577                           ;memory.c: 108: PMCON1bits.WREN = 1;
  7578  0776  1515               	bsf	21,2	;volatile
  7579                           
  7580                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  7581  0777  1695               	bsf	21,5	;volatile
  7582                           
  7583                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  7584  0778  0020               	movlb	0	; select bank0
  7585  0779  01A9               	clrf	FLASH_WriteBlock@i
  7586  077A  3020               	movlw	32
  7587  077B  0229               	subwf	FLASH_WriteBlock@i,w
  7588  077C  1803               	btfsc	3,0
  7589  077D  2FBB               	goto	l166
  7590  077E                     l4359:	
  7591                           
  7592                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  7593  077E  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7594  077F  0023               	movlb	3	; select bank3
  7595  0780  0091               	movwf	17	;volatile
  7596                           
  7597                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  7598  0781  0020               	movlb	0	; select bank0
  7599  0782  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7600  0783  0023               	movlb	3	; select bank3
  7601  0784  0092               	movwf	18	;volatile
  7602                           
  7603                           ;memory.c: 118: PMDATL = flashWordArray[i];
  7604  0785  0020               	movlb	0	; select bank0
  7605  0786  3529               	lslf	FLASH_WriteBlock@i,w
  7606  0787  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7607  0788  00A3               	movwf	??_FLASH_WriteBlock
  7608  0789  0823               	movf	??_FLASH_WriteBlock,w
  7609  078A  0086               	movwf	6
  7610  078B  3001               	movlw	1	; select bank2/3
  7611  078C  0087               	movwf	7
  7612  078D  0801               	movf	1,w
  7613  078E  0023               	movlb	3	; select bank3
  7614  078F  0093               	movwf	19	;volatile
  7615                           
  7616                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  7617  0790  0020               	movlb	0	; select bank0
  7618  0791  3529               	lslf	FLASH_WriteBlock@i,w
  7619  0792  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7620  0793  00A3               	movwf	??_FLASH_WriteBlock
  7621  0794  0823               	movf	??_FLASH_WriteBlock,w
  7622  0795  0086               	movwf	6
  7623  0796  3001               	movlw	1	; select bank2/3
  7624  0797  0087               	movwf	7
  7625  0798  3F40               	moviw [0]fsr1
  7626  0799  00A4               	movwf	??_FLASH_WriteBlock+1
  7627  079A  3F41               	moviw [1]fsr1
  7628  079B  00A5               	movwf	??_FLASH_WriteBlock+2
  7629  079C  0825               	movf	??_FLASH_WriteBlock+2,w
  7630  079D  0023               	movlb	3	; select bank3
  7631  079E  0094               	movwf	20	;volatile
  7632                           
  7633                           ;memory.c: 121: if (i == (32 - 1)) {
  7634  079F  301F               	movlw	31
  7635  07A0  0020               	movlb	0	; select bank0
  7636  07A1  0629               	xorwf	FLASH_WriteBlock@i,w
  7637  07A2  1D03               	btfss	3,2
  7638  07A3  2FA6               	goto	l4371
  7639                           
  7640                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  7641  07A4  0023               	movlb	3	; select bank3
  7642  07A5  1295               	bcf	21,5	;volatile
  7643  07A6                     l4371:	
  7644                           
  7645                           ;memory.c: 124: }
  7646                           ;memory.c: 126: PMCON2 = 0x55;
  7647  07A6  3055               	movlw	85
  7648  07A7  0023               	movlb	3	; select bank3
  7649  07A8  0096               	movwf	22	;volsfr
  7650                           
  7651                           ;memory.c: 127: PMCON2 = 0xAA;
  7652  07A9  30AA               	movlw	170
  7653  07AA  0096               	movwf	22	;volsfr
  7654                           
  7655                           ;memory.c: 128: PMCON1bits.WR = 1;
  7656  07AB  1495               	bsf	21,1	;volatile
  7657                           
  7658                           ;memory.c: 129: __nop();
  7659  07AC  0000               	nop
  7660                           
  7661                           ;memory.c: 130: __nop();
  7662  07AD  0000               	nop
  7663                           
  7664                           ;memory.c: 132: writeAddr++;
  7665  07AE  3001               	movlw	1
  7666  07AF  0020               	movlb	0	; select bank0
  7667  07B0  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  7668  07B1  3000               	movlw	0
  7669  07B2  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  7670  07B3  3001               	movlw	1
  7671  07B4  00A3               	movwf	??_FLASH_WriteBlock
  7672  07B5  0823               	movf	??_FLASH_WriteBlock,w
  7673  07B6  07A9               	addwf	FLASH_WriteBlock@i,f
  7674  07B7  3020               	movlw	32
  7675  07B8  0229               	subwf	FLASH_WriteBlock@i,w
  7676  07B9  1C03               	skipc
  7677  07BA  2F7E               	goto	l4359
  7678  07BB                     l166:	
  7679                           
  7680                           ;memory.c: 133: }
  7681                           ;memory.c: 135: PMCON1bits.WREN = 0;
  7682  07BB  0023               	movlb	3	; select bank3
  7683  07BC  1115               	bcf	21,2	;volatile
  7684                           
  7685                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  7686  07BD  0020               	movlb	0	; select bank0
  7687  07BE  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  7688  07BF  1C03               	skipc
  7689  07C0  138B               	bcf	11,7	;volatile
  7690  07C1  1803               	skipnc
  7691  07C2  178B               	bsf	11,7	;volatile
  7692  07C3  0008               	return
  7693  07C4                     __end_of_FLASH_WriteBlock:	
  7694                           ;memory.c: 138: return 0;
  7695                           ;	Return value of _FLASH_WriteBlock is never used
  7696                           
  7697                           
  7698                           	psect	text28
  7699  0A20                     __ptext28:	
  7700 ;; *************** function _FLASH_EraseBlock *****************
  7701 ;; Defined at:
  7702 ;;		line 141 in file "mcc_generated_files/memory.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  startAddr       2    3[COMMON] unsigned int 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;Total ram usage:        3 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    3
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_FLASH_WriteBlock
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _FLASH_EraseBlock
  7732  0A20                     _FLASH_EraseBlock:	
  7733                           
  7734                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  7738  0A20  3000               	movlw	0
  7739  0A21  1B8B               	btfsc	11,7	;volatile
  7740  0A22  3001               	movlw	1
  7741  0A23  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  7742                           
  7743                           ;memory.c: 145: INTCONbits.GIE = 0;
  7744  0A24  138B               	bcf	11,7	;volatile
  7745                           
  7746                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  7747  0A25  0873               	movf	FLASH_EraseBlock@startAddr,w
  7748  0A26  0023               	movlb	3	; select bank3
  7749  0A27  0091               	movwf	17	;volatile
  7750                           
  7751                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  7752  0A28  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  7753  0A29  0092               	movwf	18	;volatile
  7754                           
  7755                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  7756  0A2A  1315               	bcf	21,6	;volatile
  7757                           
  7758                           ;memory.c: 153: PMCON1bits.FREE = 1;
  7759  0A2B  1615               	bsf	21,4	;volatile
  7760                           
  7761                           ;memory.c: 154: PMCON1bits.WREN = 1;
  7762  0A2C  1515               	bsf	21,2	;volatile
  7763                           
  7764                           ;memory.c: 157: PMCON2 = 0x55;
  7765  0A2D  3055               	movlw	85
  7766  0A2E  0096               	movwf	22	;volsfr
  7767                           
  7768                           ;memory.c: 158: PMCON2 = 0xAA;
  7769  0A2F  30AA               	movlw	170
  7770  0A30  0096               	movwf	22	;volsfr
  7771                           
  7772                           ;memory.c: 159: PMCON1bits.WR = 1;
  7773  0A31  1495               	bsf	21,1	;volatile
  7774                           
  7775                           ;memory.c: 160: __nop();
  7776  0A32  0000               	nop
  7777                           
  7778                           ;memory.c: 161: __nop();
  7779  0A33  0000               	nop
  7780                           
  7781                           ;memory.c: 163: PMCON1bits.WREN = 0;
  7782  0A34  0023               	movlb	3	; select bank3
  7783  0A35  1115               	bcf	21,2	;volatile
  7784                           
  7785                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  7786  0A36  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  7787  0A37  1C03               	skipc
  7788  0A38  138B               	bcf	11,7	;volatile
  7789  0A39  1803               	skipnc
  7790  0A3A  178B               	bsf	11,7	;volatile
  7791  0A3B  0008               	return
  7792  0A3C                     __end_of_FLASH_EraseBlock:	
  7793                           
  7794                           	psect	text29
  7795  0983                     __ptext29:	
  7796 ;; *************** function _FLASH_ReadWord *****************
  7797 ;; Defined at:
  7798 ;;		line 58 in file "mcc_generated_files/memory.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  flashAddr       2    3[COMMON] unsigned int 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  2    3[COMMON] unsigned int 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;Total ram usage:        3 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    3
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_FLASH_WriteWord
  7823 ;;		_Key_Process
  7824 ;;		_Serach_Flash_Head
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function _FLASH_ReadWord
  7830  0983                     _FLASH_ReadWord:	
  7831                           
  7832                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  7836  0983  3000               	movlw	0
  7837  0984  1B8B               	btfsc	11,7	;volatile
  7838  0985  3001               	movlw	1
  7839  0986  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  7840                           
  7841                           ;memory.c: 61: INTCONbits.GIE = 0;
  7842  0987  138B               	bcf	11,7	;volatile
  7843                           
  7844                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  7845  0988  0873               	movf	FLASH_ReadWord@flashAddr,w
  7846  0989  0023               	movlb	3	; select bank3
  7847  098A  0091               	movwf	17	;volatile
  7848                           
  7849                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  7850  098B  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  7851  098C  0092               	movwf	18	;volatile
  7852                           
  7853                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  7854  098D  1315               	bcf	21,6	;volatile
  7855                           
  7856                           ;memory.c: 66: PMCON1bits.RD = 1;
  7857  098E  1415               	bsf	21,0	;volatile
  7858                           
  7859                           ;memory.c: 67: __nop();
  7860  098F  0000               	nop
  7861                           
  7862                           ;memory.c: 68: __nop();
  7863  0990  0000               	nop
  7864                           
  7865                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  7866  0991  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  7867  0992  1C03               	skipc
  7868  0993  138B               	bcf	11,7	;volatile
  7869  0994  1803               	skipnc
  7870  0995  178B               	bsf	11,7	;volatile
  7871                           
  7872                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  7873  0996  0023               	movlb	3	; select bank3
  7874  0997  0814               	movf	20,w	;volatile
  7875  0998  00F4               	movwf	?_FLASH_ReadWord+1
  7876  0999  0813               	movf	19,w	;volatile
  7877  099A  00F3               	movwf	?_FLASH_ReadWord
  7878  099B  0008               	return
  7879  099C                     __end_of_FLASH_ReadWord:	
  7880                           
  7881                           	psect	text30
  7882  0F9C                     __ptext30:	
  7883 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  7884 ;; Defined at:
  7885 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  p               1    wreg     PTR struct bq32k_regs
  7888 ;;		 -> rtc_tm(7), 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  7891 ;;		 -> rtc_tm(7), 
  7892 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      void 
  7895 ;; Registers used:
  7896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;Total ram usage:       13 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    5
  7909 ;; This function calls:
  7910 ;;		_I2C_Read_Buffer
  7911 ;;		_bcd2bin
  7912 ;; This function is called by:
  7913 ;;		_time_Display
  7914 ;;		_Calculate_Time
  7915 ;;		_Save_Write_time
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _Bq32k_Rtc_Read_Time
  7921  0F9C                     _Bq32k_Rtc_Read_Time:	
  7922                           
  7923                           ;incstack = 0
  7924                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7925                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  7926  0F9C  0020               	movlb	0	; select bank0
  7927  0F9D  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  7928                           
  7929                           ;bq32k.c: 32: unsigned char temp[10] ;
  7930                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  7931  0F9E  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  7932  0F9F  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7933  0FA0  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7934  0FA1  00F6               	movwf	I2C_Read_Buffer@buff
  7935  0FA2  3007               	movlw	7
  7936  0FA3  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  7937  0FA4  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  7938  0FA5  00F7               	movwf	I2C_Read_Buffer@Length
  7939  0FA6  3000               	movlw	0
  7940  0FA7  3186  266F  318F   	fcall	_I2C_Read_Buffer
  7941                           
  7942                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  7943  0FAA  0020               	movlb	0	; select bank0
  7944  0FAB  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  7945  0FAC  397F               	andlw	127
  7946  0FAD  3188  20E0  318F   	fcall	_bcd2bin
  7947  0FB0  0020               	movlb	0	; select bank0
  7948  0FB1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7949  0FB2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7950  0FB3  0086               	movwf	6
  7951  0FB4  0187               	clrf	7
  7952  0FB5  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7953  0FB6  0081               	movwf	1
  7954                           
  7955                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  7956  0FB7  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  7957  0FB8  397F               	andlw	127
  7958  0FB9  3188  20E0  318F   	fcall	_bcd2bin
  7959  0FBC  0020               	movlb	0	; select bank0
  7960  0FBD  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7961  0FBE  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  7962  0FBF  0086               	movwf	6
  7963  0FC0  0187               	clrf	7
  7964  0FC1  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7965  0FC2  0081               	movwf	1
  7966                           
  7967                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  7968  0FC3  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  7969  0FC4  393F               	andlw	63
  7970  0FC5  3188  20E0  318F   	fcall	_bcd2bin
  7971  0FC8  0020               	movlb	0	; select bank0
  7972  0FC9  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7973  0FCA  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7974  0FCB  3E02               	addlw	2
  7975  0FCC  0086               	movwf	6
  7976  0FCD  0187               	clrf	7
  7977  0FCE  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7978  0FCF  0081               	movwf	1
  7979                           
  7980                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  7981  0FD0  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  7982  0FD1  3188  20E0  318F   	fcall	_bcd2bin
  7983  0FD4  0020               	movlb	0	; select bank0
  7984  0FD5  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7985  0FD6  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7986  0FD7  3E03               	addlw	3
  7987  0FD8  0086               	movwf	6
  7988  0FD9  0187               	clrf	7
  7989  0FDA  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7990  0FDB  0081               	movwf	1
  7991                           
  7992                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  7993  0FDC  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  7994  0FDD  3188  20E0  318F   	fcall	_bcd2bin
  7995  0FE0  0020               	movlb	0	; select bank0
  7996  0FE1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7997  0FE2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7998  0FE3  3E04               	addlw	4
  7999  0FE4  0086               	movwf	6
  8000  0FE5  0187               	clrf	7
  8001  0FE6  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  8002  0FE7  0081               	movwf	1
  8003                           
  8004                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  8005  0FE8  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  8006  0FE9  3188  20E0  318F   	fcall	_bcd2bin
  8007  0FEC  0020               	movlb	0	; select bank0
  8008  0FED  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  8009  0FEE  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  8010  0FEF  3E05               	addlw	5
  8011  0FF0  0086               	movwf	6
  8012  0FF1  0187               	clrf	7
  8013  0FF2  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  8014  0FF3  0081               	movwf	1
  8015                           
  8016                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  8017  0FF4  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  8018  0FF5  3188  20E0         	fcall	_bcd2bin
  8019  0FF7  0020               	movlb	0	; select bank0
  8020  0FF8  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  8021  0FF9  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  8022  0FFA  3E06               	addlw	6
  8023  0FFB  0086               	movwf	6
  8024  0FFC  0187               	clrf	7
  8025  0FFD  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  8026  0FFE  0081               	movwf	1
  8027  0FFF  0008               	return
  8028  1000                     __end_of_Bq32k_Rtc_Read_Time:	
  8029                           
  8030                           	psect	text31
  8031  08E0                     __ptext31:	
  8032 ;; *************** function _bcd2bin *****************
  8033 ;; Defined at:
  8034 ;;		line 68 in file "mcc_generated_files/bq32k.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  val             1    wreg     unsigned char 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  val             1    7[COMMON] unsigned char 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      unsigned char 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2, status,0, pclath, cstack
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;Total ram usage:        4 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    4
  8055 ;; This function calls:
  8056 ;;		___bmul
  8057 ;; This function is called by:
  8058 ;;		_Bq32k_Rtc_Read_Time
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _bcd2bin
  8064  08E0                     _bcd2bin:	
  8065                           
  8066                           ;incstack = 0
  8067                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  8068                           ;bcd2bin@val stored from wreg
  8069  08E0  00F7               	movwf	bcd2bin@val
  8070                           
  8071                           ;bq32k.c: 70: return (val & 0x0f) + (val >> 4) * 10;
  8072  08E1  300F               	movlw	15
  8073  08E2  0577               	andwf	bcd2bin@val,w
  8074  08E3  0020               	movlb	0	; select bank0
  8075  08E4  00A0               	movwf	??_bcd2bin
  8076  08E5  300A               	movlw	10
  8077  08E6  00A1               	movwf	??_bcd2bin+1
  8078  08E7  0821               	movf	??_bcd2bin+1,w
  8079  08E8  00F3               	movwf	___bmul@multiplicand
  8080  08E9  0877               	movf	bcd2bin@val,w
  8081  08EA  00A2               	movwf	??_bcd2bin+2
  8082  08EB  3004               	movlw	4
  8083  08EC                     u3765:	
  8084  08EC  36A2               	lsrf	??_bcd2bin+2,f
  8085  08ED  0B89               	decfsz	9,f
  8086  08EE  28EC               	goto	u3765
  8087  08EF  0822               	movf	??_bcd2bin+2,w
  8088  08F0  3188  20CF         	fcall	___bmul
  8089  08F2  0020               	movlb	0	; select bank0
  8090  08F3  0720               	addwf	??_bcd2bin,w
  8091  08F4  0008               	return
  8092  08F5                     __end_of_bcd2bin:	
  8093                           
  8094                           	psect	text32
  8095  08CF                     __ptext32:	
  8096 ;; *************** function ___bmul *****************
  8097 ;; Defined at:
  8098 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  multiplier      1    wreg     unsigned char 
  8101 ;;  multiplicand    1    3[COMMON] unsigned char 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  multiplier      1    6[COMMON] unsigned char 
  8104 ;;  product         1    5[COMMON] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      unsigned char 
  8107 ;; Registers used:
  8108 ;;		wreg, status,2, status,0
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8114 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;Total ram usage:        4 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    3
  8121 ;; This function calls:
  8122 ;;		Nothing
  8123 ;; This function is called by:
  8124 ;;		_bcd2bin
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           
  8129                           ;psect for function ___bmul
  8130  08CF                     ___bmul:	
  8131                           
  8132                           ;incstack = 0
  8133                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8134                           ;___bmul@multiplier stored from wreg
  8135  08CF  00F6               	movwf	___bmul@multiplier
  8136  08D0  01F5               	clrf	___bmul@product
  8137  08D1                     l4465:	
  8138  08D1  1C76               	btfss	___bmul@multiplier,0
  8139  08D2  28D7               	goto	l4469
  8140  08D3  0873               	movf	___bmul@multiplicand,w
  8141  08D4  00F4               	movwf	??___bmul
  8142  08D5  0874               	movf	??___bmul,w
  8143  08D6  07F5               	addwf	___bmul@product,f
  8144  08D7                     l4469:	
  8145  08D7  1003               	clrc
  8146  08D8  0DF3               	rlf	___bmul@multiplicand,f
  8147  08D9  1003               	clrc
  8148  08DA  0CF6               	rrf	___bmul@multiplier,f
  8149  08DB  0876               	movf	___bmul@multiplier,w
  8150  08DC  1D03               	btfss	3,2
  8151  08DD  28D1               	goto	l4465
  8152  08DE  0875               	movf	___bmul@product,w
  8153  08DF  0008               	return
  8154  08E0                     __end_of___bmul:	
  8155                           
  8156                           	psect	text33
  8157  066F                     __ptext33:	
  8158 ;; *************** function _I2C_Read_Buffer *****************
  8159 ;; Defined at:
  8160 ;;		line 120 in file "mcc_generated_files/i2c.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  ADD             1    wreg     unsigned char 
  8163 ;;  buff            1    6[COMMON] PTR unsigned char 
  8164 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  8165 ;;  Length          1    7[COMMON] unsigned char 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  ADD             1    1[BANK0 ] unsigned char 
  8168 ;;  Flag            1    2[BANK0 ] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      unsigned char 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:        5 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    4
  8185 ;; This function calls:
  8186 ;;		_I2C_Receive_Byte
  8187 ;;		_I2C_Send_Byte
  8188 ;;		_I2C_Start
  8189 ;;		_I2C_Stop
  8190 ;; This function is called by:
  8191 ;;		_Bq32k_Rtc_Read_Time
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           
  8196                           ;psect for function _I2C_Read_Buffer
  8197  066F                     _I2C_Read_Buffer:	
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8201                           ;I2C_Read_Buffer@ADD stored from wreg
  8202  066F  0020               	movlb	0	; select bank0
  8203  0670  00A1               	movwf	I2C_Read_Buffer@ADD
  8204                           
  8205                           ;i2c.c: 122: unsigned char Flag=1;
  8206  0671  01A2               	clrf	I2C_Read_Buffer@Flag
  8207  0672  0AA2               	incf	I2C_Read_Buffer@Flag,f
  8208                           
  8209                           ;i2c.c: 124: I2C_Start();
  8210  0673  3189  2151  3186   	fcall	_I2C_Start
  8211                           
  8212                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  8213  0676  30D0               	movlw	208
  8214  0677  318D  25F6  3186   	fcall	_I2C_Send_Byte
  8215  067A  0020               	movlb	0	; select bank0
  8216  067B  00A0               	movwf	??_I2C_Read_Buffer
  8217  067C  0820               	movf	??_I2C_Read_Buffer,w
  8218  067D  00A2               	movwf	I2C_Read_Buffer@Flag
  8219                           
  8220                           ;i2c.c: 127: if(Flag)
  8221  067E  0822               	movf	I2C_Read_Buffer@Flag,w
  8222  067F  1D03               	btfss	3,2
  8223  0680  0008               	return
  8224                           
  8225                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  8226                           
  8227                           ;i2c.c: 128: return 0x01;
  8228                           ;	Return value of _I2C_Read_Buffer is never used
  8229  0681  0821               	movf	I2C_Read_Buffer@ADD,w
  8230  0682  318D  25F6  3186   	fcall	_I2C_Send_Byte
  8231  0685  0020               	movlb	0	; select bank0
  8232  0686  00A0               	movwf	??_I2C_Read_Buffer
  8233  0687  0820               	movf	??_I2C_Read_Buffer,w
  8234  0688  00A2               	movwf	I2C_Read_Buffer@Flag
  8235                           
  8236                           ;i2c.c: 131: if(Flag)
  8237  0689  0822               	movf	I2C_Read_Buffer@Flag,w
  8238  068A  1D03               	btfss	3,2
  8239  068B  0008               	return
  8240                           
  8241                           ;i2c.c: 134: I2C_Start();
  8242                           
  8243                           ;i2c.c: 132: return 0x01;
  8244                           ;	Return value of _I2C_Read_Buffer is never used
  8245  068C  3189  2151  3186   	fcall	_I2C_Start
  8246                           
  8247                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  8248  068F  30D1               	movlw	209
  8249  0690  318D  25F6  3186   	fcall	_I2C_Send_Byte
  8250  0693  0020               	movlb	0	; select bank0
  8251  0694  00A0               	movwf	??_I2C_Read_Buffer
  8252  0695  0820               	movf	??_I2C_Read_Buffer,w
  8253  0696  00A2               	movwf	I2C_Read_Buffer@Flag
  8254                           
  8255                           ;i2c.c: 136: if(Flag)
  8256  0697  0822               	movf	I2C_Read_Buffer@Flag,w
  8257  0698  1D03               	btfss	3,2
  8258  0699  0008               	return
  8259  069A                     l4533:	
  8260  069A  3002               	movlw	2
  8261  069B  0277               	subwf	I2C_Read_Buffer@Length,w
  8262  069C  1C03               	btfss	3,0
  8263  069D  2EC5               	goto	l4535
  8264                           
  8265                           ;i2c.c: 140: {
  8266                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  8267                           
  8268                           ;i2c.c: 139: while(Length>1)
  8269                           
  8270                           ;i2c.c: 137: return 0x01;
  8271                           ;	Return value of _I2C_Read_Buffer is never used
  8272  069E  318A  22FC  3186   	fcall	_I2C_Receive_Byte
  8273  06A1  0020               	movlb	0	; select bank0
  8274  06A2  00A0               	movwf	??_I2C_Read_Buffer
  8275  06A3  0876               	movf	I2C_Read_Buffer@buff,w
  8276  06A4  0086               	movwf	6
  8277  06A5  0187               	clrf	7
  8278  06A6  0820               	movf	??_I2C_Read_Buffer,w
  8279  06A7  0081               	movwf	1
  8280                           
  8281                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  8282  06A8  0022               	movlb	2	; select bank2
  8283  06A9  108D               	bcf	13,1	;volatile
  8284                           
  8285                           ;i2c.c: 144: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8286  06AA  3003               	movlw	3
  8287  06AB  0020               	movlb	0	; select bank0
  8288  06AC  00A0               	movwf	??_I2C_Read_Buffer
  8289  06AD                     u5327:	
  8290  06AD  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8291  06AE  2EAD               	goto	u5327
  8292                           
  8293                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  8294  06AF  0022               	movlb	2	; select bank2
  8295  06B0  140D               	bsf	13,0	;volatile
  8296                           
  8297                           ;i2c.c: 146: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8298  06B1  3003               	movlw	3
  8299  06B2  0020               	movlb	0	; select bank0
  8300  06B3  00A0               	movwf	??_I2C_Read_Buffer
  8301  06B4                     u5337:	
  8302  06B4  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8303  06B5  2EB4               	goto	u5337
  8304                           
  8305                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  8306  06B6  0022               	movlb	2	; select bank2
  8307  06B7  100D               	bcf	13,0	;volatile
  8308                           
  8309                           ;i2c.c: 148: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8310  06B8  3003               	movlw	3
  8311  06B9  0020               	movlb	0	; select bank0
  8312  06BA  00A0               	movwf	??_I2C_Read_Buffer
  8313  06BB                     u5347:	
  8314  06BB  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8315  06BC  2EBB               	goto	u5347
  8316                           
  8317                           ;i2c.c: 150: buff++;
  8318  06BD  3001               	movlw	1
  8319  06BE  0020               	movlb	0	; select bank0
  8320  06BF  00A0               	movwf	??_I2C_Read_Buffer
  8321  06C0  0820               	movf	??_I2C_Read_Buffer,w
  8322  06C1  07F6               	addwf	I2C_Read_Buffer@buff,f
  8323                           
  8324                           ;i2c.c: 151: Length--;
  8325  06C2  3001               	movlw	1
  8326  06C3  02F7               	subwf	I2C_Read_Buffer@Length,f
  8327  06C4  2E9A               	goto	l4533
  8328  06C5                     l4535:	
  8329                           
  8330                           ;i2c.c: 152: }
  8331                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  8332  06C5  318A  22FC  3186   	fcall	_I2C_Receive_Byte
  8333  06C8  0020               	movlb	0	; select bank0
  8334  06C9  00A0               	movwf	??_I2C_Read_Buffer
  8335  06CA  0876               	movf	I2C_Read_Buffer@buff,w
  8336  06CB  0086               	movwf	6
  8337  06CC  0187               	clrf	7
  8338  06CD  0820               	movf	??_I2C_Read_Buffer,w
  8339  06CE  0081               	movwf	1
  8340                           
  8341                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  8342  06CF  0022               	movlb	2	; select bank2
  8343  06D0  148D               	bsf	13,1	;volatile
  8344                           
  8345                           ;i2c.c: 156: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8346  06D1  3003               	movlw	3
  8347  06D2  0020               	movlb	0	; select bank0
  8348  06D3  00A0               	movwf	??_I2C_Read_Buffer
  8349  06D4                     u5357:	
  8350  06D4  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8351  06D5  2ED4               	goto	u5357
  8352                           
  8353                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  8354  06D6  0022               	movlb	2	; select bank2
  8355  06D7  140D               	bsf	13,0	;volatile
  8356                           
  8357                           ;i2c.c: 158: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8358  06D8  3003               	movlw	3
  8359  06D9  0020               	movlb	0	; select bank0
  8360  06DA  00A0               	movwf	??_I2C_Read_Buffer
  8361  06DB                     u5367:	
  8362  06DB  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8363  06DC  2EDB               	goto	u5367
  8364                           
  8365                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  8366  06DD  0022               	movlb	2	; select bank2
  8367  06DE  100D               	bcf	13,0	;volatile
  8368                           
  8369                           ;i2c.c: 160: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8370  06DF  3003               	movlw	3
  8371  06E0  0020               	movlb	0	; select bank0
  8372  06E1  00A0               	movwf	??_I2C_Read_Buffer
  8373  06E2                     u5377:	
  8374  06E2  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8375  06E3  2EE2               	goto	u5377
  8376                           
  8377                           ;i2c.c: 162: I2C_Stop();
  8378  06E4  3189  216A         	fcall	_I2C_Stop
  8379  06E6  0008               	return
  8380  06E7                     __end_of_I2C_Read_Buffer:	
  8381                           ;i2c.c: 164: return 0x00;
  8382                           ;	Return value of _I2C_Read_Buffer is never used
  8383                           
  8384                           
  8385                           	psect	text34
  8386  0AFC                     __ptext34:	
  8387 ;; *************** function _I2C_Receive_Byte *****************
  8388 ;; Defined at:
  8389 ;;		line 74 in file "mcc_generated_files/i2c.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  i               1    5[COMMON] unsigned char 
  8394 ;;  Data            1    4[COMMON] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      unsigned char 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:        3 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    3
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_I2C_Read_Buffer
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function _I2C_Receive_Byte
  8420  0AFC                     _I2C_Receive_Byte:	
  8421                           
  8422                           ;i2c.c: 76: unsigned char i,Data=0;
  8423                           
  8424                           ;incstack = 0
  8425                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  8426  0AFC  01F4               	clrf	I2C_Receive_Byte@Data
  8427                           
  8428                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  8429  0AFD  0022               	movlb	2	; select bank2
  8430  0AFE  148D               	bsf	13,1	;volatile
  8431                           
  8432                           ;i2c.c: 78: for(i=0;i<8;i++)
  8433  0AFF  01F5               	clrf	I2C_Receive_Byte@i
  8434  0B00  3008               	movlw	8
  8435  0B01  0275               	subwf	I2C_Receive_Byte@i,w
  8436  0B02  1803               	btfsc	3,0
  8437  0B03  2B24               	goto	l4451
  8438                           
  8439                           ;i2c.c: 79: {
  8440                           ;i2c.c: 80: Data <<= 1;
  8441  0B04  1003               	clrc
  8442  0B05                     L10:	
  8443  0B05  0DF4               	rlf	I2C_Receive_Byte@Data,f
  8444                           
  8445                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  8446  0B06  0022               	movlb	2	; select bank2
  8447  0B07  140D               	bsf	13,0	;volatile
  8448                           
  8449                           ;i2c.c: 82: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8450  0B08  3003               	movlw	3
  8451  0B09  00F3               	movwf	??_I2C_Receive_Byte
  8452  0B0A                     u5387:	
  8453  0B0A  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8454  0B0B  2B0A               	goto	u5387
  8455                           
  8456                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  8457  0B0C  0021               	movlb	1	; select bank1
  8458  0B0D  148D               	bsf	13,1	;volatile
  8459                           
  8460                           ;i2c.c: 84: if(RB1)
  8461  0B0E  0020               	movlb	0	; select bank0
  8462  0B0F  1C8D               	btfss	13,1	;volatile
  8463  0B10  2B14               	goto	l773
  8464                           
  8465                           ;i2c.c: 85: {
  8466                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  8467  0B11  0021               	movlb	1	; select bank1
  8468  0B12  108D               	bcf	13,1	;volatile
  8469                           
  8470                           ;i2c.c: 87: Data |= 0x01;
  8471  0B13  1474               	bsf	I2C_Receive_Byte@Data,0
  8472  0B14                     l773:	
  8473                           ;i2c.c: 88: }
  8474                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  8475                           
  8476  0B14  0021               	movlb	1	; select bank1
  8477  0B15  108D               	bcf	13,1	;volatile
  8478                           
  8479                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  8480  0B16  0022               	movlb	2	; select bank2
  8481  0B17  100D               	bcf	13,0	;volatile
  8482                           
  8483                           ;i2c.c: 91: _delay((unsigned long)((10)*(4000000/4000000.0)));
  8484  0B18  3003               	movlw	3
  8485  0B19  00F3               	movwf	??_I2C_Receive_Byte
  8486  0B1A                     u5397:	
  8487  0B1A  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8488  0B1B  2B1A               	goto	u5397
  8489  0B1C  3001               	movlw	1
  8490  0B1D  00F3               	movwf	??_I2C_Receive_Byte
  8491  0B1E  0873               	movf	??_I2C_Receive_Byte,w
  8492  0B1F  07F5               	addwf	I2C_Receive_Byte@i,f
  8493  0B20  3008               	movlw	8
  8494  0B21  0275               	subwf	I2C_Receive_Byte@i,w
  8495  0B22  1C03               	skipc
  8496  0B23  2B05               	goto	L10
  8497  0B24                     l4451:	
  8498                           
  8499                           ;i2c.c: 92: }
  8500                           ;i2c.c: 93: return Data;
  8501  0B24  0874               	movf	I2C_Receive_Byte@Data,w
  8502  0B25  0008               	return
  8503  0B26                     __end_of_I2C_Receive_Byte:	
  8504                           
  8505                           	psect	text35
  8506  089E                     __ptext35:	
  8507 ;; *************** function _maxim_clear_fault_status *****************
  8508 ;; Defined at:
  8509 ;;		line 155 in file "mcc_generated_files/max31856.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, pclath, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;Total ram usage:        1 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    5
  8530 ;; This function calls:
  8531 ;;		_maxim_31856_read_register
  8532 ;;		_maxim_31856_write_register
  8533 ;; This function is called by:
  8534 ;;		_temperature_display
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           
  8539                           ;psect for function _maxim_clear_fault_status
  8540  089E                     _maxim_clear_fault_status:	
  8541                           
  8542                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  8546  089E  3000               	movlw	0
  8547  089F  3188  20BE  3188   	fcall	_maxim_31856_read_register
  8548  08A2  00F7               	movwf	??_maxim_clear_fault_status
  8549  08A3  0877               	movf	??_maxim_clear_fault_status,w
  8550  08A4  00FA               	movwf	_uch_cr0
  8551                           
  8552                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  8553  08A5  14FA               	bsf	_uch_cr0,1
  8554                           
  8555                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  8556  08A6  087A               	movf	_uch_cr0,w
  8557  08A7  00F7               	movwf	??_maxim_clear_fault_status
  8558  08A8  0877               	movf	??_maxim_clear_fault_status,w
  8559  08A9  00F4               	movwf	maxim_31856_write_register@uch_register_value
  8560  08AA  3080               	movlw	128
  8561  08AB  3188  2091         	fcall	_maxim_31856_write_register
  8562  08AD  0008               	return
  8563  08AE                     __end_of_maxim_clear_fault_status:	
  8564                           
  8565                           	psect	text36
  8566  0B26                     __ptext36:	
  8567 ;; *************** function _err_Display *****************
  8568 ;; Defined at:
  8569 ;;		line 153 in file "mcc_generated_files/ht1621.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;		None
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  num             4    6[BANK0 ] unsigned char [4]
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;Total ram usage:        5 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    5
  8590 ;; This function calls:
  8591 ;;		_WriteAll_1621
  8592 ;; This function is called by:
  8593 ;;		_temperature_display
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           
  8598                           ;psect for function _err_Display
  8599  0B26                     _err_Display:	
  8600                           
  8601                           ;ht1621.c: 155: unsigned char num[4]={0};
  8602                           
  8603                           ;incstack = 0
  8604                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8605  0B26  0021               	movlb	1	; select bank1
  8606  0B27  0827               	movf	(err_Display@F2126+3)^(0+128),w
  8607  0B28  0020               	movlb	0	; select bank0
  8608  0B29  00A9               	movwf	err_Display@num+3
  8609  0B2A  0021               	movlb	1	; select bank1
  8610  0B2B  0826               	movf	(err_Display@F2126+2)^(0+128),w
  8611  0B2C  0020               	movlb	0	; select bank0
  8612  0B2D  00A8               	movwf	err_Display@num+2
  8613  0B2E  0021               	movlb	1	; select bank1
  8614  0B2F  0825               	movf	(err_Display@F2126+1)^(0+128),w
  8615  0B30  0020               	movlb	0	; select bank0
  8616  0B31  00A7               	movwf	err_Display@num+1
  8617  0B32  0021               	movlb	1	; select bank1
  8618  0B33  0824               	movf	err_Display@F2126^(0+128),w
  8619  0B34  0020               	movlb	0	; select bank0
  8620  0B35  00A6               	movwf	err_Display@num
  8621                           
  8622                           ;ht1621.c: 156: num[1] = Dis_TAB[0x10];
  8623  0B36  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  8624  0B37  0084               	movwf	4
  8625  0B38  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  8626  0B39  0085               	movwf	5
  8627  0B3A  0800               	movf	0,w	;code access
  8628  0B3B  00A5               	movwf	??_err_Display
  8629  0B3C  0825               	movf	??_err_Display,w
  8630  0B3D  00A7               	movwf	err_Display@num+1
  8631                           
  8632                           ;ht1621.c: 157: num[2] = Dis_TAB[0x0c];
  8633  0B3E  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  8634  0B3F  0084               	movwf	4
  8635  0B40  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  8636  0B41  0085               	movwf	5
  8637  0B42  0800               	movf	0,w	;code access
  8638  0B43  00A5               	movwf	??_err_Display
  8639  0B44  0825               	movf	??_err_Display,w
  8640  0B45  00A8               	movwf	err_Display@num+2
  8641                           
  8642                           ;ht1621.c: 158: WriteAll_1621(0, num, 4);
  8643  0B46  3026               	movlw	low err_Display@num
  8644  0B47  00A0               	movwf	WriteAll_1621@p
  8645  0B48  3000               	movlw	high err_Display@num
  8646  0B49  00A1               	movwf	WriteAll_1621@p+1
  8647  0B4A  3004               	movlw	4
  8648  0B4B  00A5               	movwf	??_err_Display
  8649  0B4C  0825               	movf	??_err_Display,w
  8650  0B4D  00A2               	movwf	WriteAll_1621@cnt
  8651  0B4E  3000               	movlw	0
  8652  0B4F  318C  240E         	fcall	_WriteAll_1621
  8653  0B51  0008               	return
  8654  0B52                     __end_of_err_Display:	
  8655                           
  8656                           	psect	text37
  8657  047D                     __ptext37:	
  8658 ;; *************** function _Tc_Display *****************
  8659 ;; Defined at:
  8660 ;;		line 110 in file "mcc_generated_files/ht1621.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;		None
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;  data            2   11[BANK0 ] unsigned int 
  8665 ;;  count           1   10[BANK0 ] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;Total ram usage:        4 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:    5
  8682 ;; This function calls:
  8683 ;;		_WriteAll_1621
  8684 ;;		___lwdiv
  8685 ;;		___lwmod
  8686 ;;		_memset
  8687 ;; This function is called by:
  8688 ;;		_temperature_display
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           
  8693                           ;psect for function _Tc_Display
  8694  047D                     _Tc_Display:	
  8695                           
  8696                           ;ht1621.c: 112: unsigned char count = 0;
  8697                           
  8698                           ;incstack = 0
  8699                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8700  047D  0020               	movlb	0	; select bank0
  8701  047E  01AA               	clrf	Tc_Display@count
  8702                           
  8703                           ;ht1621.c: 113: unsigned int data = temperature_int;
  8704  047F  0021               	movlb	1	; select bank1
  8705  0480  0833               	movf	(_temperature_int+1)^(0+128),w
  8706  0481  0020               	movlb	0	; select bank0
  8707  0482  00AC               	movwf	Tc_Display@data+1
  8708  0483  0021               	movlb	1	; select bank1
  8709  0484  0832               	movf	_temperature_int^(0+128),w
  8710  0485  0020               	movlb	0	; select bank0
  8711  0486  00AB               	movwf	Tc_Display@data
  8712                           
  8713                           ;ht1621.c: 114: memset(display_buff,0,4);
  8714  0487  3000               	movlw	0
  8715  0488  00F3               	movwf	memset@c
  8716  0489  00F4               	movwf	memset@c+1
  8717  048A  3004               	movlw	4
  8718  048B  00F5               	movwf	memset@n
  8719  048C  3000               	movlw	0
  8720  048D  00F6               	movwf	memset@n+1
  8721  048E  30E1               	movlw	(low (_display_buff| 0))& (0+255)
  8722  048F  318A  2205  3184   	fcall	_memset
  8723  0492                     l4969:	
  8724                           ;ht1621.c: 115: while(data)
  8725                           
  8726  0492  0020               	movlb	0	; select bank0
  8727  0493  082B               	movf	Tc_Display@data,w
  8728  0494  042C               	iorwf	Tc_Display@data+1,w
  8729  0495  1903               	btfsc	3,2
  8730  0496  2D11               	goto	l4977
  8731                           
  8732                           ;ht1621.c: 116: {
  8733                           ;ht1621.c: 117: count++;
  8734  0497  3001               	movlw	1
  8735  0498  0020               	movlb	0	; select bank0
  8736  0499  00A9               	movwf	??_Tc_Display
  8737  049A  0829               	movf	??_Tc_Display,w
  8738  049B  07AA               	addwf	Tc_Display@count,f
  8739                           
  8740                           ;ht1621.c: 118: data /=10;
  8741  049C  300A               	movlw	10
  8742  049D  00A1               	movwf	___lwdiv@divisor
  8743  049E  3000               	movlw	0
  8744  049F  00A2               	movwf	___lwdiv@divisor+1
  8745  04A0  082C               	movf	Tc_Display@data+1,w
  8746  04A1  00A4               	movwf	___lwdiv@dividend+1
  8747  04A2  082B               	movf	Tc_Display@data,w
  8748  04A3  00A3               	movwf	___lwdiv@dividend
  8749  04A4  318C  2442  3184   	fcall	___lwdiv
  8750  04A7  0020               	movlb	0	; select bank0
  8751  04A8  0822               	movf	?___lwdiv+1,w
  8752  04A9  00AC               	movwf	Tc_Display@data+1
  8753  04AA  0821               	movf	?___lwdiv,w
  8754  04AB  00AB               	movwf	Tc_Display@data
  8755  04AC  2C92               	goto	l4969
  8756  04AD                     l4971:	
  8757                           ;ht1621.c: 121: {
  8758                           ;ht1621.c: 122: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  8759                           
  8760                           ;ht1621.c: 119: }
  8761                           ;ht1621.c: 120: switch(count)
  8762                           
  8763  04AD  3064               	movlw	100
  8764  04AE  00A1               	movwf	___lwdiv@divisor
  8765  04AF  3000               	movlw	0
  8766  04B0  00A2               	movwf	___lwdiv@divisor+1
  8767  04B1  0021               	movlb	1	; select bank1
  8768  04B2  0833               	movf	(_temperature_int+1)^(0+128),w
  8769  04B3  0020               	movlb	0	; select bank0
  8770  04B4  00A4               	movwf	___lwdiv@dividend+1
  8771  04B5  0021               	movlb	1	; select bank1
  8772  04B6  0832               	movf	_temperature_int^(0+128),w
  8773  04B7  0020               	movlb	0	; select bank0
  8774  04B8  00A3               	movwf	___lwdiv@dividend
  8775  04B9  318C  2442  3184   	fcall	___lwdiv
  8776  04BC  0020               	movlb	0	; select bank0
  8777  04BD  0822               	movf	?___lwdiv+1,w
  8778  04BE  0085               	movwf	5
  8779  04BF  0821               	movf	?___lwdiv,w
  8780  04C0  0084               	movwf	4
  8781  04C1  3000               	movlw	low (_Dis_TAB| (0+32768))
  8782  04C2  0784               	addwf	4,f
  8783  04C3  3090               	movlw	high (_Dis_TAB| (0+32768))
  8784  04C4  3D85               	addwfc	5,f
  8785  04C5  0800               	movf	0,w	;code access
  8786  04C6  00A9               	movwf	??_Tc_Display
  8787  04C7  0829               	movf	??_Tc_Display,w
  8788  04C8  0021               	movlb	1	; select bank1
  8789  04C9  00E1               	movwf	_display_buff^(0+128)
  8790  04CA                     l687:	
  8791                           ;ht1621.c: 123: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  8792                           
  8793  04CA  300A               	movlw	10
  8794  04CB  0020               	movlb	0	; select bank0
  8795  04CC  00A1               	movwf	___lwdiv@divisor
  8796  04CD  3000               	movlw	0
  8797  04CE  00A2               	movwf	___lwdiv@divisor+1
  8798  04CF  0021               	movlb	1	; select bank1
  8799  04D0  0833               	movf	(_temperature_int+1)^(0+128),w
  8800  04D1  00F6               	movwf	___lwmod@dividend+1
  8801  04D2  0832               	movf	_temperature_int^(0+128),w
  8802  04D3  00F5               	movwf	___lwmod@dividend
  8803  04D4  3064               	movlw	100
  8804  04D5  00F3               	movwf	___lwmod@divisor
  8805  04D6  3000               	movlw	0
  8806  04D7  00F4               	movwf	___lwmod@divisor+1
  8807  04D8  318B  2352  3184   	fcall	___lwmod
  8808  04DB  0874               	movf	?___lwmod+1,w
  8809  04DC  0020               	movlb	0	; select bank0
  8810  04DD  00A4               	movwf	___lwdiv@dividend+1
  8811  04DE  0873               	movf	?___lwmod,w
  8812  04DF  00A3               	movwf	___lwdiv@dividend
  8813  04E0  318C  2442  3184   	fcall	___lwdiv
  8814  04E3  0020               	movlb	0	; select bank0
  8815  04E4  0822               	movf	?___lwdiv+1,w
  8816  04E5  0085               	movwf	5
  8817  04E6  0821               	movf	?___lwdiv,w
  8818  04E7  0084               	movwf	4
  8819  04E8  3000               	movlw	low (_Dis_TAB| (0+32768))
  8820  04E9  0784               	addwf	4,f
  8821  04EA  3090               	movlw	high (_Dis_TAB| (0+32768))
  8822  04EB  3D85               	addwfc	5,f
  8823  04EC  0800               	movf	0,w	;code access
  8824  04ED  00A9               	movwf	??_Tc_Display
  8825  04EE  0829               	movf	??_Tc_Display,w
  8826  04EF  0021               	movlb	1	; select bank1
  8827  04F0  00E2               	movwf	(_display_buff^(0+128)+1)
  8828  04F1                     l688:	
  8829                           ;ht1621.c: 124: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  8830                           
  8831  04F1  300A               	movlw	10
  8832  04F2  00F3               	movwf	___lwmod@divisor
  8833  04F3  3000               	movlw	0
  8834  04F4  00F4               	movwf	___lwmod@divisor+1
  8835  04F5  0021               	movlb	1	; select bank1
  8836  04F6  0833               	movf	(_temperature_int+1)^(0+128),w
  8837  04F7  00F6               	movwf	___lwmod@dividend+1
  8838  04F8  0832               	movf	_temperature_int^(0+128),w
  8839  04F9  00F5               	movwf	___lwmod@dividend
  8840  04FA  318B  2352  3184   	fcall	___lwmod
  8841  04FD  0874               	movf	?___lwmod+1,w
  8842  04FE  0085               	movwf	5
  8843  04FF  0873               	movf	?___lwmod,w
  8844  0500  0084               	movwf	4
  8845  0501  3000               	movlw	low (_Dis_TAB| (0+32768))
  8846  0502  0784               	addwf	4,f
  8847  0503  3090               	movlw	high (_Dis_TAB| (0+32768))
  8848  0504  3D85               	addwfc	5,f
  8849  0505  2D0A               	goto	L11
  8850  0506                     l4973:	
  8851                           ;ht1621.c: 125: case 0:display_buff[2] = Dis_TAB[0];
  8852                           
  8853  0506  3000               	movlw	low (_Dis_TAB| (0+32768))
  8854  0507  0084               	movwf	4
  8855  0508  3090               	movlw	high (_Dis_TAB| (0+32768))
  8856  0509  0085               	movwf	5
  8857  050A                     L11:	
  8858  050A  0800               	movf	0,w	;code access
  8859  050B  0020               	movlb	0	; select bank0
  8860  050C  00A9               	movwf	??_Tc_Display
  8861  050D  0829               	movf	??_Tc_Display,w
  8862  050E  0021               	movlb	1	; select bank1
  8863  050F  00E3               	movwf	(_display_buff^(0+128)+2)
  8864                           
  8865                           ;ht1621.c: 127: }
  8866                           
  8867                           ;ht1621.c: 126: default:break;
  8868  0510  2D20               	goto	l4979
  8869  0511                     l4977:	
  8870  0511  0020               	movlb	0	; select bank0
  8871  0512  082A               	movf	Tc_Display@count,w
  8872                           
  8873                           ; Switch size 1, requested type "space"
  8874                           ; Number of cases is 4, Range of values is 0 to 3
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte           13     7 (average)
  8878                           ; direct_byte           14     6 (fixed)
  8879                           ; jumptable            260     6 (fixed)
  8880                           ;	Chosen strategy is simple_byte
  8881  0513  3A00               	xorlw	0	; case 0
  8882  0514  1903               	skipnz
  8883  0515  2D06               	goto	l4973
  8884  0516  3A01               	xorlw	1	; case 1
  8885  0517  1903               	skipnz
  8886  0518  2CF1               	goto	l688
  8887  0519  3A03               	xorlw	3	; case 2
  8888  051A  1903               	skipnz
  8889  051B  2CCA               	goto	l687
  8890  051C  3A01               	xorlw	1	; case 3
  8891  051D  1903               	skipnz
  8892  051E  2CAD               	goto	l4971
  8893  051F  2D20               	goto	l4979
  8894  0520                     l4979:	
  8895                           
  8896                           ;ht1621.c: 128: if(temperature_sign == 1) display_buff[0]=0x20;
  8897  0520  0021               	movlb	1	; select bank1
  8898  0521  033A               	decf	_temperature_sign^(0+128),w
  8899  0522  1D03               	btfss	3,2
  8900  0523  2D2A               	goto	l4983
  8901  0524  3020               	movlw	32
  8902  0525  0020               	movlb	0	; select bank0
  8903  0526  00A9               	movwf	??_Tc_Display
  8904  0527  0829               	movf	??_Tc_Display,w
  8905  0528  0021               	movlb	1	; select bank1
  8906  0529  00E1               	movwf	_display_buff^(0+128)
  8907  052A                     l4983:	
  8908                           
  8909                           ;ht1621.c: 129: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  8910  052A  0020               	movlb	0	; select bank0
  8911  052B  086C               	movf	_temperature_decimal,w
  8912  052C  3E00               	addlw	low (_Dis_TAB| (0+32768))
  8913  052D  0084               	movwf	4
  8914  052E  3090               	movlw	high (_Dis_TAB| (0+32768))
  8915  052F  1803               	skipnc
  8916  0530  3E01               	addlw	1
  8917  0531  0085               	movwf	5
  8918  0532  0800               	movf	0,w	;code access
  8919  0533  3808               	iorlw	8
  8920  0534  00A9               	movwf	??_Tc_Display
  8921  0535  0829               	movf	??_Tc_Display,w
  8922  0536  0021               	movlb	1	; select bank1
  8923  0537  00E4               	movwf	(_display_buff^(0+128)+3)
  8924                           
  8925                           ;ht1621.c: 130: WriteAll_1621(0,display_buff,4);
  8926  0538  30E1               	movlw	low _display_buff
  8927  0539  0020               	movlb	0	; select bank0
  8928  053A  00A0               	movwf	WriteAll_1621@p
  8929  053B  3000               	movlw	high _display_buff
  8930  053C  00A1               	movwf	WriteAll_1621@p+1
  8931  053D  3004               	movlw	4
  8932  053E  00A9               	movwf	??_Tc_Display
  8933  053F  0829               	movf	??_Tc_Display,w
  8934  0540  00A2               	movwf	WriteAll_1621@cnt
  8935  0541  3000               	movlw	0
  8936  0542  318C  240E         	fcall	_WriteAll_1621
  8937  0544  0008               	return
  8938  0545                     __end_of_Tc_Display:	
  8939                           
  8940                           	psect	text38
  8941  0A05                     __ptext38:	
  8942 ;; *************** function _memset *****************
  8943 ;; Defined at:
  8944 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  p1              1    wreg     PTR void 
  8947 ;;		 -> display_buff(4), 
  8948 ;;  c               2    3[COMMON] int 
  8949 ;;  n               2    5[COMMON] unsigned int 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  p1              1    0[BANK0 ] PTR void 
  8952 ;;		 -> display_buff(4), 
  8953 ;;  p               1    1[BANK0 ] PTR unsigned char 
  8954 ;;		 -> display_buff(4), 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      PTR void 
  8957 ;; Registers used:
  8958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;Total ram usage:        7 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    3
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_Tc_Display
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function _memset
  8980  0A05                     _memset:	
  8981                           
  8982                           ;incstack = 0
  8983                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8984                           ;memset@p1 stored from wreg
  8985  0A05  0020               	movlb	0	; select bank0
  8986  0A06  00A0               	movwf	memset@p1
  8987  0A07  0820               	movf	memset@p1,w
  8988  0A08  00F7               	movwf	??_memset
  8989  0A09  0877               	movf	??_memset,w
  8990  0A0A  00A1               	movwf	memset@p
  8991  0A0B                     l4747:	
  8992  0A0B  3001               	movlw	1
  8993  0A0C  02F5               	subwf	memset@n,f
  8994  0A0D  3000               	movlw	0
  8995  0A0E  3BF6               	subwfb	memset@n+1,f
  8996  0A0F  0A75               	incf	memset@n,w
  8997  0A10  1903               	btfsc	3,2
  8998  0A11  0A76               	incf	memset@n+1,w
  8999  0A12  1903               	btfsc	3,2
  9000  0A13  0008               	return
  9001  0A14  0873               	movf	memset@c,w
  9002  0A15  00F7               	movwf	??_memset
  9003  0A16  0821               	movf	memset@p,w
  9004  0A17  0086               	movwf	6
  9005  0A18  0187               	clrf	7
  9006  0A19  0877               	movf	??_memset,w
  9007  0A1A  0081               	movwf	1
  9008  0A1B  3001               	movlw	1
  9009  0A1C  00F7               	movwf	??_memset
  9010  0A1D  0877               	movf	??_memset,w
  9011  0A1E  07A1               	addwf	memset@p,f
  9012  0A1F  2A0B               	goto	l4747
  9013  0A20                     __end_of_memset:	
  9014                           ;	Return value of _memset is never used
  9015                           
  9016                           
  9017                           	psect	text39
  9018  0B52                     __ptext39:	
  9019 ;; *************** function ___lwmod *****************
  9020 ;; Defined at:
  9021 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  divisor         2    3[COMMON] unsigned int 
  9024 ;;  dividend        2    5[COMMON] unsigned int 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  counter         1    0[BANK0 ] unsigned char 
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  2    3[COMMON] unsigned int 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;Total ram usage:        6 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    3
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_Tc_Display
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           
  9051                           ;psect for function ___lwmod
  9052  0B52                     ___lwmod:	
  9053                           
  9054                           ;incstack = 0
  9055                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9056  0B52  0873               	movf	___lwmod@divisor,w
  9057  0B53  0474               	iorwf	___lwmod@divisor+1,w
  9058  0B54  1903               	btfsc	3,2
  9059  0B55  2B7A               	goto	l4793
  9060  0B56  0020               	movlb	0	; select bank0
  9061  0B57  01A0               	clrf	___lwmod@counter
  9062  0B58  0AA0               	incf	___lwmod@counter,f
  9063  0B59                     l4783:	
  9064  0B59  1BF4               	btfsc	___lwmod@divisor+1,7
  9065  0B5A  2B65               	goto	l4785
  9066  0B5B  3001               	movlw	1
  9067  0B5C                     u4115:	
  9068  0B5C  35F3               	lslf	___lwmod@divisor,f
  9069  0B5D  0DF4               	rlf	___lwmod@divisor+1,f
  9070  0B5E  0B89               	decfsz	9,f
  9071  0B5F  2B5C               	goto	u4115
  9072  0B60  3001               	movlw	1
  9073  0B61  00F7               	movwf	??___lwmod
  9074  0B62  0877               	movf	??___lwmod,w
  9075  0B63  07A0               	addwf	___lwmod@counter,f
  9076  0B64  2B59               	goto	l4783
  9077  0B65                     l4785:	
  9078  0B65  0874               	movf	___lwmod@divisor+1,w
  9079  0B66  0276               	subwf	___lwmod@dividend+1,w
  9080  0B67  1D03               	skipz
  9081  0B68  2B6B               	goto	u4135
  9082  0B69  0873               	movf	___lwmod@divisor,w
  9083  0B6A  0275               	subwf	___lwmod@dividend,w
  9084  0B6B                     u4135:	
  9085  0B6B  1C03               	skipc
  9086  0B6C  2B71               	goto	l4789
  9087  0B6D  0873               	movf	___lwmod@divisor,w
  9088  0B6E  02F5               	subwf	___lwmod@dividend,f
  9089  0B6F  0874               	movf	___lwmod@divisor+1,w
  9090  0B70  3BF6               	subwfb	___lwmod@dividend+1,f
  9091  0B71                     l4789:	
  9092  0B71  3001               	movlw	1
  9093  0B72                     u4145:	
  9094  0B72  36F4               	lsrf	___lwmod@divisor+1,f
  9095  0B73  0CF3               	rrf	___lwmod@divisor,f
  9096  0B74  0B89               	decfsz	9,f
  9097  0B75  2B72               	goto	u4145
  9098  0B76  3001               	movlw	1
  9099  0B77  02A0               	subwf	___lwmod@counter,f
  9100  0B78  1D03               	btfss	3,2
  9101  0B79  2B65               	goto	l4785
  9102  0B7A                     l4793:	
  9103  0B7A  0876               	movf	___lwmod@dividend+1,w
  9104  0B7B  00F4               	movwf	?___lwmod+1
  9105  0B7C  0875               	movf	___lwmod@dividend,w
  9106  0B7D  00F3               	movwf	?___lwmod
  9107  0B7E  0008               	return
  9108  0B7F                     __end_of___lwmod:	
  9109                           
  9110                           	psect	text40
  9111  0C42                     __ptext40:	
  9112 ;; *************** function ___lwdiv *****************
  9113 ;; Defined at:
  9114 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  divisor         2    1[BANK0 ] unsigned int 
  9117 ;;  dividend        2    3[BANK0 ] unsigned int 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  quotient        2    7[BANK0 ] unsigned int 
  9120 ;;  counter         1    6[BANK0 ] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  2    1[BANK0 ] unsigned int 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;Total ram usage:        8 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    3
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_Tc_Display
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function ___lwdiv
  9146  0C42                     ___lwdiv:	
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9150  0C42  0020               	movlb	0	; select bank0
  9151  0C43  01A7               	clrf	___lwdiv@quotient
  9152  0C44  01A8               	clrf	___lwdiv@quotient+1
  9153  0C45  0821               	movf	___lwdiv@divisor,w
  9154  0C46  0422               	iorwf	___lwdiv@divisor+1,w
  9155  0C47  1903               	btfsc	3,2
  9156  0C48  2C72               	goto	l4771
  9157  0C49  01A6               	clrf	___lwdiv@counter
  9158  0C4A  0AA6               	incf	___lwdiv@counter,f
  9159  0C4B                     l4759:	
  9160  0C4B  1BA2               	btfsc	___lwdiv@divisor+1,7
  9161  0C4C  2C57               	goto	l4761
  9162  0C4D  3001               	movlw	1
  9163  0C4E                     u4045:	
  9164  0C4E  35A1               	lslf	___lwdiv@divisor,f
  9165  0C4F  0DA2               	rlf	___lwdiv@divisor+1,f
  9166  0C50  0B89               	decfsz	9,f
  9167  0C51  2C4E               	goto	u4045
  9168  0C52  3001               	movlw	1
  9169  0C53  00A5               	movwf	??___lwdiv
  9170  0C54  0825               	movf	??___lwdiv,w
  9171  0C55  07A6               	addwf	___lwdiv@counter,f
  9172  0C56  2C4B               	goto	l4759
  9173  0C57                     l4761:	
  9174  0C57  3001               	movlw	1
  9175  0C58                     u4065:	
  9176  0C58  35A7               	lslf	___lwdiv@quotient,f
  9177  0C59  0DA8               	rlf	___lwdiv@quotient+1,f
  9178  0C5A  0B89               	decfsz	9,f
  9179  0C5B  2C58               	goto	u4065
  9180  0C5C  0822               	movf	___lwdiv@divisor+1,w
  9181  0C5D  0224               	subwf	___lwdiv@dividend+1,w
  9182  0C5E  1D03               	skipz
  9183  0C5F  2C62               	goto	u4075
  9184  0C60  0821               	movf	___lwdiv@divisor,w
  9185  0C61  0223               	subwf	___lwdiv@dividend,w
  9186  0C62                     u4075:	
  9187  0C62  1C03               	skipc
  9188  0C63  2C69               	goto	l4767
  9189  0C64  0821               	movf	___lwdiv@divisor,w
  9190  0C65  02A3               	subwf	___lwdiv@dividend,f
  9191  0C66  0822               	movf	___lwdiv@divisor+1,w
  9192  0C67  3BA4               	subwfb	___lwdiv@dividend+1,f
  9193  0C68  1427               	bsf	___lwdiv@quotient,0
  9194  0C69                     l4767:	
  9195  0C69  3001               	movlw	1
  9196  0C6A                     u4085:	
  9197  0C6A  36A2               	lsrf	___lwdiv@divisor+1,f
  9198  0C6B  0CA1               	rrf	___lwdiv@divisor,f
  9199  0C6C  0B89               	decfsz	9,f
  9200  0C6D  2C6A               	goto	u4085
  9201  0C6E  3001               	movlw	1
  9202  0C6F  02A6               	subwf	___lwdiv@counter,f
  9203  0C70  1D03               	btfss	3,2
  9204  0C71  2C57               	goto	l4761
  9205  0C72                     l4771:	
  9206  0C72  0828               	movf	___lwdiv@quotient+1,w
  9207  0C73  00A2               	movwf	?___lwdiv+1
  9208  0C74  0827               	movf	___lwdiv@quotient,w
  9209  0C75  00A1               	movwf	?___lwdiv
  9210  0C76  0008               	return
  9211  0C77                     __end_of___lwdiv:	
  9212                           
  9213                           	psect	text41
  9214  0DAC                     __ptext41:	
  9215 ;; *************** function _one_temperature_trans *****************
  9216 ;; Defined at:
  9217 ;;		line 292 in file "mcc_generated_files/max31856.c"
  9218 ;; Parameters:    Size  Location     Type
  9219 ;;		None
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;Total ram usage:        2 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; Hardware stack levels required when called:    6
  9238 ;; This function calls:
  9239 ;;		_maxim_31856_read_nregisters
  9240 ;;		_maxim_start_conversion
  9241 ;; This function is called by:
  9242 ;;		_temperature_process
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           
  9247                           ;psect for function _one_temperature_trans
  9248  0DAC                     _one_temperature_trans:	
  9249                           
  9250                           ;max31856.c: 294: maxim_start_conversion((uint8_t) 0x40);
  9251                           
  9252                           ;incstack = 0
  9253                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9254  0DAC  3040               	movlw	64
  9255  0DAD  3189  21B5  318D   	fcall	_maxim_start_conversion
  9256                           
  9257                           ;max31856.c: 296: MAX31856Sec = 0;
  9258  0DB0  0021               	movlb	1	; select bank1
  9259  0DB1  01B9               	clrf	_MAX31856Sec^(0+128)
  9260                           
  9261                           ;max31856.c: 297: while( !(RB3 == 0 || MAX31856Sec > 30) ) asm("clrwdt");
  9262  0DB2  2DB4               	goto	l544
  9263  0DB3                     l545:	
  9264  0DB3  0064               	clrwdt	;# 
  9265  0DB4                     l544:	
  9266  0DB4  0020               	movlb	0	; select bank0
  9267  0DB5  1D8D               	btfss	13,3	;volatile
  9268  0DB6  2DBC               	goto	l5083
  9269  0DB7  301F               	movlw	31
  9270  0DB8  0021               	movlb	1	; select bank1
  9271  0DB9  0239               	subwf	_MAX31856Sec^(0+128),w
  9272  0DBA  1C03               	skipc
  9273  0DBB  2DB3               	goto	l545
  9274  0DBC                     l5083:	
  9275                           
  9276                           ;max31856.c: 298: if( MAX31856Sec > 30)
  9277  0DBC  301F               	movlw	31
  9278  0DBD  0021               	movlb	1	; select bank1
  9279  0DBE  0239               	subwf	_MAX31856Sec^(0+128),w
  9280  0DBF  1C03               	skipc
  9281  0DC0  2DC4               	goto	l5087
  9282                           
  9283                           ;max31856.c: 299: {
  9284                           ;max31856.c: 300: uch_sr = 0x01;
  9285  0DC1  01C3               	clrf	_uch_sr^(0+128)
  9286  0DC2  0AC3               	incf	_uch_sr^(0+128),f
  9287                           
  9288                           ;max31856.c: 301: }
  9289  0DC3  0008               	return
  9290  0DC4                     l5087:	
  9291                           
  9292                           ;max31856.c: 328: else
  9293                           ;max31856.c: 329: {
  9294                           ;max31856.c: 330: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  9295  0DC4  30C4               	movlw	(low (_uch_reg| 0))& (0+255)
  9296  0DC5  0020               	movlb	0	; select bank0
  9297  0DC6  00A8               	movwf	??_one_temperature_trans
  9298  0DC7  0828               	movf	??_one_temperature_trans,w
  9299  0DC8  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  9300  0DC9  3006               	movlw	6
  9301  0DCA  00A9               	movwf	??_one_temperature_trans+1
  9302  0DCB  0829               	movf	??_one_temperature_trans+1,w
  9303  0DCC  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  9304  0DCD  300A               	movlw	10
  9305  0DCE  3189  2139         	fcall	_maxim_31856_read_nregisters
  9306                           
  9307                           ;max31856.c: 331: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  9308  0DD0  0021               	movlb	1	; select bank1
  9309  0DD1  0844               	movf	_uch_reg^(0+128),w
  9310  0DD2  0020               	movlb	0	; select bank0
  9311  0DD3  00A8               	movwf	??_one_temperature_trans
  9312  0DD4  0828               	movf	??_one_temperature_trans,w
  9313  0DD5  0021               	movlb	1	; select bank1
  9314  0DD6  00BC               	movwf	_uch_cjth^(0+128)
  9315  0DD7  0845               	movf	(_uch_reg^(0+128)+1),w
  9316  0DD8  0020               	movlb	0	; select bank0
  9317  0DD9  00A8               	movwf	??_one_temperature_trans
  9318  0DDA  0828               	movf	??_one_temperature_trans,w
  9319  0DDB  0021               	movlb	1	; select bank1
  9320  0DDC  00BD               	movwf	_uch_cjtl^(0+128)
  9321                           
  9322                           ;max31856.c: 332: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  9323  0DDD  0846               	movf	(_uch_reg^(0+128)+2),w
  9324  0DDE  0020               	movlb	0	; select bank0
  9325  0DDF  00A8               	movwf	??_one_temperature_trans
  9326  0DE0  0828               	movf	??_one_temperature_trans,w
  9327  0DE1  0021               	movlb	1	; select bank1
  9328  0DE2  00BF               	movwf	_uch_ltcbh^(0+128)
  9329  0DE3  0847               	movf	(_uch_reg^(0+128)+3),w
  9330  0DE4  0020               	movlb	0	; select bank0
  9331  0DE5  00A8               	movwf	??_one_temperature_trans
  9332  0DE6  0828               	movf	??_one_temperature_trans,w
  9333  0DE7  0021               	movlb	1	; select bank1
  9334  0DE8  00C1               	movwf	_uch_ltcbm^(0+128)
  9335  0DE9  0848               	movf	(_uch_reg^(0+128)+4),w
  9336  0DEA  0020               	movlb	0	; select bank0
  9337  0DEB  00A8               	movwf	??_one_temperature_trans
  9338  0DEC  0828               	movf	??_one_temperature_trans,w
  9339  0DED  0021               	movlb	1	; select bank1
  9340  0DEE  00C0               	movwf	_uch_ltcbl^(0+128)
  9341                           
  9342                           ;max31856.c: 333: uch_sr=uch_reg[5];
  9343  0DEF  0849               	movf	(_uch_reg^(0+128)+5),w
  9344  0DF0  0020               	movlb	0	; select bank0
  9345  0DF1  00A8               	movwf	??_one_temperature_trans
  9346  0DF2  0828               	movf	??_one_temperature_trans,w
  9347  0DF3  0021               	movlb	1	; select bank1
  9348  0DF4  00C3               	movwf	_uch_sr^(0+128)
  9349  0DF5  0008               	return
  9350  0DF6                     __end_of_one_temperature_trans:	
  9351                           
  9352                           	psect	text42
  9353  09B5                     __ptext42:	
  9354 ;; *************** function _maxim_start_conversion *****************
  9355 ;; Defined at:
  9356 ;;		line 114 in file "mcc_generated_files/max31856.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  uch_conversi    1    wreg     unsigned char 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0, pclath, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;Total ram usage:        2 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    5
  9377 ;; This function calls:
  9378 ;;		_maxim_31856_read_register
  9379 ;;		_maxim_31856_write_register
  9380 ;; This function is called by:
  9381 ;;		_one_temperature_trans
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _maxim_start_conversion
  9387  09B5                     _maxim_start_conversion:	
  9388                           
  9389                           ;incstack = 0
  9390                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  9391                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  9392  09B5  0020               	movlb	0	; select bank0
  9393  09B6  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  9394                           
  9395                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  9396  09B7  3000               	movlw	0
  9397  09B8  3188  20BE  3189   	fcall	_maxim_31856_read_register
  9398  09BB  00F7               	movwf	??_maxim_start_conversion
  9399  09BC  0877               	movf	??_maxim_start_conversion,w
  9400  09BD  00FA               	movwf	_uch_cr0
  9401                           
  9402                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  9403  09BE  303F               	movlw	63
  9404  09BF  00F7               	movwf	??_maxim_start_conversion
  9405  09C0  0877               	movf	??_maxim_start_conversion,w
  9406  09C1  05FA               	andwf	_uch_cr0,f
  9407                           
  9408                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  9409  09C2  0020               	movlb	0	; select bank0
  9410  09C3  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  9411  09C4  00F7               	movwf	??_maxim_start_conversion
  9412  09C5  0877               	movf	??_maxim_start_conversion,w
  9413  09C6  04FA               	iorwf	_uch_cr0,f
  9414                           
  9415                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  9416  09C7  087A               	movf	_uch_cr0,w
  9417  09C8  00F7               	movwf	??_maxim_start_conversion
  9418  09C9  0877               	movf	??_maxim_start_conversion,w
  9419  09CA  00F4               	movwf	maxim_31856_write_register@uch_register_value
  9420  09CB  3080               	movlw	128
  9421  09CC  3188  2091         	fcall	_maxim_31856_write_register
  9422  09CE  0008               	return
  9423  09CF                     __end_of_maxim_start_conversion:	
  9424                           
  9425                           	psect	text43
  9426  0891                     __ptext43:	
  9427 ;; *************** function _maxim_31856_write_register *****************
  9428 ;; Defined at:
  9429 ;;		line 20 in file "mcc_generated_files/max31856.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  uch_register    1    wreg     unsigned char 
  9432 ;;  uch_register    1    4[COMMON] unsigned char 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  uch_register    1    5[COMMON] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9444 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9448 ;;Total ram usage:        2 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    4
  9451 ;; This function calls:
  9452 ;;		_SPI_Exchange8bit
  9453 ;; This function is called by:
  9454 ;;		_maxim_start_conversion
  9455 ;;		_maxim_clear_fault_status
  9456 ;;		_temperature_display
  9457 ;;		_maxim_31856_init
  9458 ;;		_maxim_stop_conversion
  9459 ;;		_maxim_disable_oc_fault_detection
  9460 ;;		_maxim_set_oc_fault_detection
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           
  9465                           ;psect for function _maxim_31856_write_register
  9466  0891                     _maxim_31856_write_register:	
  9467                           
  9468                           ;incstack = 0
  9469                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  9470                           ;maxim_31856_write_register@uch_register_address stored from wreg
  9471  0891  00F5               	movwf	maxim_31856_write_register@uch_register_address
  9472                           
  9473                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  9474  0892  0022               	movlb	2	; select bank2
  9475  0893  128C               	bcf	12,5	;volatile
  9476                           
  9477                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  9478  0894  0875               	movf	maxim_31856_write_register@uch_register_address,w
  9479  0895  3188  2073  3188   	fcall	_SPI_Exchange8bit
  9480                           
  9481                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  9482  0898  0874               	movf	maxim_31856_write_register@uch_register_value,w
  9483  0899  3188  2073         	fcall	_SPI_Exchange8bit
  9484                           
  9485                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  9486  089B  0022               	movlb	2	; select bank2
  9487  089C  168C               	bsf	12,5	;volatile
  9488  089D  0008               	return
  9489  089E                     __end_of_maxim_31856_write_register:	
  9490                           
  9491                           	psect	text44
  9492  08BE                     __ptext44:	
  9493 ;; *************** function _maxim_31856_read_register *****************
  9494 ;; Defined at:
  9495 ;;		line 34 in file "mcc_generated_files/max31856.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  uch_register    1    wreg     unsigned char 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  uch_register    1    5[COMMON] unsigned char 
  9500 ;;  uch_register    1    6[COMMON] unsigned char 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      unsigned char 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0, pclath, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        3 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    4
  9517 ;; This function calls:
  9518 ;;		_SPI_Exchange8bit
  9519 ;; This function is called by:
  9520 ;;		_maxim_start_conversion
  9521 ;;		_maxim_clear_fault_status
  9522 ;;		_maxim_stop_conversion
  9523 ;;		_maxim_disable_oc_fault_detection
  9524 ;;		_maxim_set_oc_fault_detection
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _maxim_31856_read_register
  9530  08BE                     _maxim_31856_read_register:	
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  9534                           ;maxim_31856_read_register@uch_register_address stored from wreg
  9535  08BE  00F5               	movwf	maxim_31856_read_register@uch_register_address
  9536                           
  9537                           ;max31856.c: 36: uint8_t uch_register_data;
  9538                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  9539  08BF  0022               	movlb	2	; select bank2
  9540  08C0  128C               	bcf	12,5	;volatile
  9541                           
  9542                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  9543  08C1  0875               	movf	maxim_31856_read_register@uch_register_address,w
  9544  08C2  3188  2073  3188   	fcall	_SPI_Exchange8bit
  9545                           
  9546                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  9547  08C5  30FF               	movlw	255
  9548  08C6  3188  2073         	fcall	_SPI_Exchange8bit
  9549  08C8  00F4               	movwf	??_maxim_31856_read_register
  9550  08C9  0874               	movf	??_maxim_31856_read_register,w
  9551  08CA  00F6               	movwf	maxim_31856_read_register@uch_register_data
  9552                           
  9553                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  9554  08CB  0022               	movlb	2	; select bank2
  9555  08CC  168C               	bsf	12,5	;volatile
  9556                           
  9557                           ;max31856.c: 41: return (uch_register_data);
  9558  08CD  0876               	movf	maxim_31856_read_register@uch_register_data,w
  9559  08CE  0008               	return
  9560  08CF                     __end_of_maxim_31856_read_register:	
  9561                           
  9562                           	psect	text45
  9563  0939                     __ptext45:	
  9564 ;; *************** function _maxim_31856_read_nregisters *****************
  9565 ;; Defined at:
  9566 ;;		line 50 in file "mcc_generated_files/max31856.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  uch_register    1    wreg     unsigned char 
  9569 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  9570 ;;		 -> uch_reg(8), 
  9571 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;  uch_register    1    7[BANK0 ] unsigned char 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:        5 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:    5
  9590 ;; This function calls:
  9591 ;;		_SPI_Exchange8bit
  9592 ;;		_SPI_Exchange8bitBuffer
  9593 ;; This function is called by:
  9594 ;;		_one_temperature_trans
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _maxim_31856_read_nregisters
  9600  0939                     _maxim_31856_read_nregisters:	
  9601                           
  9602                           ;incstack = 0
  9603                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9604                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  9605  0939  0020               	movlb	0	; select bank0
  9606  093A  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  9607                           
  9608                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  9609  093B  0022               	movlb	2	; select bank2
  9610  093C  128C               	bcf	12,5	;volatile
  9611                           
  9612                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  9613  093D  0020               	movlb	0	; select bank0
  9614  093E  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  9615  093F  3188  2073  3189   	fcall	_SPI_Exchange8bit
  9616                           
  9617                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  9618  0942  0020               	movlb	0	; select bank0
  9619  0943  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  9620  0944  00A5               	movwf	??_maxim_31856_read_nregisters
  9621  0945  0825               	movf	??_maxim_31856_read_nregisters,w
  9622  0946  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  9623  0947  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  9624  0948  00A6               	movwf	??_maxim_31856_read_nregisters+1
  9625  0949  0826               	movf	??_maxim_31856_read_nregisters+1,w
  9626  094A  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  9627  094B  3000               	movlw	0
  9628  094C  318E  2642         	fcall	_SPI_Exchange8bitBuffer
  9629                           
  9630                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  9631  094E  0022               	movlb	2	; select bank2
  9632  094F  168C               	bsf	12,5	;volatile
  9633  0950  0008               	return
  9634  0951                     __end_of_maxim_31856_read_nregisters:	
  9635                           
  9636                           	psect	text46
  9637  0E42                     __ptext46:	
  9638 ;; *************** function _SPI_Exchange8bitBuffer *****************
  9639 ;; Defined at:
  9640 ;;		line 89 in file "mcc_generated_files/spi.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  dataIn          1    wreg     PTR unsigned char 
  9643 ;;		 -> NULL(0), 
  9644 ;;  bufLen          1    4[COMMON] unsigned char 
  9645 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  9646 ;;		 -> uch_reg(8), 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  9649 ;;		 -> NULL(0), 
  9650 ;;  bytesWritten    1    7[COMMON] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      unsigned char 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;Total ram usage:        7 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    4
  9667 ;; This function calls:
  9668 ;;		_SPI_Exchange8bit
  9669 ;; This function is called by:
  9670 ;;		_maxim_31856_read_nregisters
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           
  9675                           ;psect for function _SPI_Exchange8bitBuffer
  9676  0E42                     _SPI_Exchange8bitBuffer:	
  9677                           
  9678                           ;incstack = 0
  9679                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9680                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  9681  0E42  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  9682                           
  9683                           ;spi.c: 90: uint8_t bytesWritten = 0;
  9684  0E43  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  9685                           
  9686                           ;spi.c: 92: if (bufLen != 0) {
  9687  0E44  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9688  0E45  1903               	btfsc	3,2
  9689  0E46  0008               	return
  9690                           
  9691                           ;spi.c: 93: if (dataIn != (0)) {
  9692  0E47  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  9693  0E48  1D03               	btfss	3,2
  9694  0E49  2E74               	goto	l4647
  9695  0E4A  2E79               	goto	l4649
  9696  0E4B                     l4639:	
  9697                           ;spi.c: 94: while (bytesWritten < bufLen) {
  9698                           
  9699                           
  9700                           ;spi.c: 95: if (dataOut == (0)) {
  9701  0E4B  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9702  0E4C  1D03               	btfss	3,2
  9703  0E4D  2E5A               	goto	l4643
  9704                           
  9705                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  9706  0E4E  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9707  0E4F  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9708  0E50  0020               	movlb	0	; select bank0
  9709  0E51  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9710  0E52  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9711  0E53  0086               	movwf	6
  9712  0E54  0187               	clrf	7
  9713  0E55  0801               	movf	1,w
  9714  0E56  3188  2073  318E   	fcall	_SPI_Exchange8bit
  9715                           
  9716                           ;spi.c: 97: } else {
  9717  0E59  2E6F               	goto	l4645
  9718  0E5A                     l4643:	
  9719                           
  9720                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  9721  0E5A  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9722  0E5B  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9723  0E5C  0020               	movlb	0	; select bank0
  9724  0E5D  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9725  0E5E  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9726  0E5F  0086               	movwf	6
  9727  0E60  0187               	clrf	7
  9728  0E61  0801               	movf	1,w
  9729  0E62  3188  2073  318E   	fcall	_SPI_Exchange8bit
  9730  0E65  0020               	movlb	0	; select bank0
  9731  0E66  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9732  0E67  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9733  0E68  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9734  0E69  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  9735  0E6A  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  9736  0E6B  0086               	movwf	6
  9737  0E6C  0187               	clrf	7
  9738  0E6D  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9739  0E6E  0081               	movwf	1
  9740  0E6F                     l4645:	
  9741                           
  9742                           ;spi.c: 99: }
  9743                           ;spi.c: 101: bytesWritten++;
  9744  0E6F  3001               	movlw	1
  9745  0E70  0020               	movlb	0	; select bank0
  9746  0E71  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9747  0E72  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9748  0E73  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9749  0E74                     l4647:	
  9750  0E74  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9751  0E75  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9752  0E76  1803               	btfsc	3,0
  9753  0E77  0008               	return
  9754  0E78  2E4B               	goto	l4639
  9755  0E79                     l4649:	
  9756                           ;spi.c: 102: }
  9757                           ;spi.c: 103: } else {
  9758                           
  9759                           
  9760                           ;spi.c: 104: if (dataOut != (0)) {
  9761  0E79  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9762  0E7A  1903               	btfsc	3,2
  9763  0E7B  0008               	return
  9764  0E7C                     l4657:	
  9765  0E7C  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9766  0E7D  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9767  0E7E  1803               	btfsc	3,0
  9768  0E7F  0008               	return
  9769                           
  9770                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  9771                           
  9772                           ;spi.c: 105: while (bytesWritten < bufLen) {
  9773  0E80  3000               	movlw	0
  9774  0E81  3188  2073  318E   	fcall	_SPI_Exchange8bit
  9775  0E84  0020               	movlb	0	; select bank0
  9776  0E85  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9777  0E86  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9778  0E87  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9779  0E88  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9780  0E89  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9781  0E8A  0086               	movwf	6
  9782  0E8B  0187               	clrf	7
  9783  0E8C  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9784  0E8D  0081               	movwf	1
  9785                           
  9786                           ;spi.c: 108: bytesWritten++;
  9787  0E8E  3001               	movlw	1
  9788  0E8F  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9789  0E90  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9790  0E91  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9791  0E92  2E7C               	goto	l4657
  9792  0E93                     __end_of_SPI_Exchange8bitBuffer:	
  9793                           ;spi.c: 109: }
  9794                           ;spi.c: 110: }
  9795                           ;spi.c: 111: }
  9796                           ;spi.c: 112: }
  9797                           ;spi.c: 114: return bytesWritten;
  9798                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  9799                           
  9800                           
  9801                           	psect	text47
  9802  0873                     __ptext47:	
  9803 ;; *************** function _SPI_Exchange8bit *****************
  9804 ;; Defined at:
  9805 ;;		line 77 in file "mcc_generated_files/spi.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  data            1    wreg     unsigned char 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;  data            1    3[COMMON] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      unsigned char 
  9812 ;; Registers used:
  9813 ;;		wreg
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        1 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    3
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_SPI_Exchange8bitBuffer
  9830 ;;		_maxim_31856_write_register
  9831 ;;		_maxim_31856_read_register
  9832 ;;		_maxim_31856_read_nregisters
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _SPI_Exchange8bit
  9838  0873                     _SPI_Exchange8bit:	
  9839                           
  9840                           ;incstack = 0
  9841                           ; Regs used in _SPI_Exchange8bit: [wreg]
  9842                           ;SPI_Exchange8bit@data stored from wreg
  9843  0873  00F3               	movwf	SPI_Exchange8bit@data
  9844                           
  9845                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  9846  0874  0024               	movlb	4	; select bank4
  9847  0875  1395               	bcf	21,7	;volatile
  9848                           
  9849                           ;spi.c: 81: SSPBUF = data;
  9850  0876  0873               	movf	SPI_Exchange8bit@data,w
  9851  0877  0091               	movwf	17	;volatile
  9852  0878                     l71:	
  9853                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  9854                           
  9855  0878  1C14               	btfss	20,0	;volatile
  9856  0879  2878               	goto	l71
  9857                           
  9858                           ;spi.c: 84: }
  9859                           ;spi.c: 86: return (SSPBUF);
  9860  087A  0811               	movf	17,w	;volatile
  9861  087B  0008               	return
  9862  087C                     __end_of_SPI_Exchange8bit:	
  9863                           
  9864                           	psect	text48
  9865  0BDD                     __ptext48:	
  9866 ;; *************** function _Two_Display *****************
  9867 ;; Defined at:
  9868 ;;		line 139 in file "mcc_generated_files/ht1621.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  number          1    wreg     unsigned char 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  number          1   10[BANK0 ] unsigned char 
  9873 ;;  num             4    6[BANK0 ] unsigned char [4]
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        6 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    5
  9890 ;; This function calls:
  9891 ;;		_WriteAll_1621
  9892 ;; This function is called by:
  9893 ;;		_temperature_process
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           
  9898                           ;psect for function _Two_Display
  9899  0BDD                     _Two_Display:	
  9900                           
  9901                           ;incstack = 0
  9902                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9903                           ;Two_Display@number stored from wreg
  9904  0BDD  0020               	movlb	0	; select bank0
  9905  0BDE  00AA               	movwf	Two_Display@number
  9906                           
  9907                           ;ht1621.c: 141: unsigned char num[4]={0};
  9908  0BDF  0021               	movlb	1	; select bank1
  9909  0BE0  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  9910  0BE1  0020               	movlb	0	; select bank0
  9911  0BE2  00A9               	movwf	Two_Display@num+3
  9912  0BE3  0021               	movlb	1	; select bank1
  9913  0BE4  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  9914  0BE5  0020               	movlb	0	; select bank0
  9915  0BE6  00A8               	movwf	Two_Display@num+2
  9916  0BE7  0021               	movlb	1	; select bank1
  9917  0BE8  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  9918  0BE9  0020               	movlb	0	; select bank0
  9919  0BEA  00A7               	movwf	Two_Display@num+1
  9920  0BEB  0021               	movlb	1	; select bank1
  9921  0BEC  0820               	movf	Two_Display@F2123^(0+128),w
  9922  0BED  0020               	movlb	0	; select bank0
  9923  0BEE  00A6               	movwf	Two_Display@num
  9924                           
  9925                           ;ht1621.c: 142: num[1] = Dis_TAB[0];
  9926  0BEF  3000               	movlw	low (_Dis_TAB| (0+32768))
  9927  0BF0  0084               	movwf	4
  9928  0BF1  3090               	movlw	high (_Dis_TAB| (0+32768))
  9929  0BF2  0085               	movwf	5
  9930  0BF3  0800               	movf	0,w	;code access
  9931  0BF4  00A5               	movwf	??_Two_Display
  9932  0BF5  0825               	movf	??_Two_Display,w
  9933  0BF6  00A7               	movwf	Two_Display@num+1
  9934                           
  9935                           ;ht1621.c: 143: num[2] = Dis_TAB[number];
  9936  0BF7  082A               	movf	Two_Display@number,w
  9937  0BF8  3E00               	addlw	low (_Dis_TAB| (0+32768))
  9938  0BF9  0084               	movwf	4
  9939  0BFA  3090               	movlw	high (_Dis_TAB| (0+32768))
  9940  0BFB  1803               	skipnc
  9941  0BFC  3E01               	addlw	1
  9942  0BFD  0085               	movwf	5
  9943  0BFE  0800               	movf	0,w	;code access
  9944  0BFF  00A5               	movwf	??_Two_Display
  9945  0C00  0825               	movf	??_Two_Display,w
  9946  0C01  00A8               	movwf	Two_Display@num+2
  9947                           
  9948                           ;ht1621.c: 144: WriteAll_1621(0, num, 4);
  9949  0C02  3026               	movlw	low Two_Display@num
  9950  0C03  00A0               	movwf	WriteAll_1621@p
  9951  0C04  3000               	movlw	high Two_Display@num
  9952  0C05  00A1               	movwf	WriteAll_1621@p+1
  9953  0C06  3004               	movlw	4
  9954  0C07  00A5               	movwf	??_Two_Display
  9955  0C08  0825               	movf	??_Two_Display,w
  9956  0C09  00A2               	movwf	WriteAll_1621@cnt
  9957  0C0A  3000               	movlw	0
  9958  0C0B  318C  240E         	fcall	_WriteAll_1621
  9959  0C0D  0008               	return
  9960  0C0E                     __end_of_Two_Display:	
  9961                           
  9962                           	psect	text49
  9963  0C0E                     __ptext49:	
  9964 ;; *************** function _WriteAll_1621 *****************
  9965 ;; Defined at:
  9966 ;;		line 91 in file "mcc_generated_files/ht1621.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  addr            1    wreg     unsigned char 
  9969 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9970 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  9971 ;;		 -> Dis_TAB(21), 
  9972 ;;  cnt             1    2[BANK0 ] unsigned char 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  addr            1    3[BANK0 ] unsigned char 
  9975 ;;  i               1    4[BANK0 ] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  1    wreg      void 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9985 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;Total ram usage:        6 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    4
  9992 ;; This function calls:
  9993 ;;		_SendBit_1621
  9994 ;;		_SendDataBit_1621
  9995 ;; This function is called by:
  9996 ;;		_main
  9997 ;;		_Tc_Display
  9998 ;;		_Two_Display
  9999 ;;		_err_Display
 10000 ;;		_time_Display
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           
 10005                           ;psect for function _WriteAll_1621
 10006  0C0E                     _WriteAll_1621:	
 10007                           
 10008                           ;incstack = 0
 10009                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10010                           ;WriteAll_1621@addr stored from wreg
 10011  0C0E  0020               	movlb	0	; select bank0
 10012  0C0F  00A3               	movwf	WriteAll_1621@addr
 10013                           
 10014                           ;ht1621.c: 93: unsigned char i;
 10015                           ;ht1621.c: 94: do { LATC0 = 0; } while(0);
 10016  0C10  0022               	movlb	2	; select bank2
 10017  0C11  100E               	bcf	14,0	;volatile
 10018                           
 10019                           ;ht1621.c: 95: SendBit_1621(0xa0,3);
 10020  0C12  3003               	movlw	3
 10021  0C13  00F7               	movwf	??_WriteAll_1621
 10022  0C14  0877               	movf	??_WriteAll_1621,w
 10023  0C15  00F3               	movwf	SendBit_1621@cnt
 10024  0C16  30A0               	movlw	160
 10025  0C17  318A  223C  318C   	fcall	_SendBit_1621
 10026                           
 10027                           ;ht1621.c: 96: SendBit_1621(addr,6);
 10028  0C1A  3006               	movlw	6
 10029  0C1B  00F7               	movwf	??_WriteAll_1621
 10030  0C1C  0877               	movf	??_WriteAll_1621,w
 10031  0C1D  00F3               	movwf	SendBit_1621@cnt
 10032  0C1E  0020               	movlb	0	; select bank0
 10033  0C1F  0823               	movf	WriteAll_1621@addr,w
 10034  0C20  318A  223C  318C   	fcall	_SendBit_1621
 10035                           
 10036                           ;ht1621.c: 97: for(i =0; i <cnt; i ++,p++)
 10037  0C23  0020               	movlb	0	; select bank0
 10038  0C24  01A4               	clrf	WriteAll_1621@i
 10039  0C25                     l4669:	
 10040  0C25  0822               	movf	WriteAll_1621@cnt,w
 10041  0C26  0224               	subwf	WriteAll_1621@i,w
 10042  0C27  1803               	btfsc	3,0
 10043  0C28  2C3F               	goto	l677
 10044                           
 10045                           ;ht1621.c: 98: {
 10046                           ;ht1621.c: 99: SendDataBit_1621(*p,8);
 10047  0C29  3008               	movlw	8
 10048  0C2A  00F7               	movwf	??_WriteAll_1621
 10049  0C2B  0877               	movf	??_WriteAll_1621,w
 10050  0C2C  00F3               	movwf	SendDataBit_1621@cnt
 10051  0C2D  0820               	movf	WriteAll_1621@p,w
 10052  0C2E  0084               	movwf	4
 10053  0C2F  0821               	movf	WriteAll_1621@p+1,w
 10054  0C30  0085               	movwf	5
 10055  0C31  0800               	movf	0,w	;code access
 10056  0C32  318A  225A  318C   	fcall	_SendDataBit_1621
 10057  0C35  3001               	movlw	1
 10058  0C36  00F7               	movwf	??_WriteAll_1621
 10059  0C37  0877               	movf	??_WriteAll_1621,w
 10060  0C38  0020               	movlb	0	; select bank0
 10061  0C39  07A4               	addwf	WriteAll_1621@i,f
 10062  0C3A  3001               	movlw	1
 10063  0C3B  07A0               	addwf	WriteAll_1621@p,f
 10064  0C3C  3000               	movlw	0
 10065  0C3D  3DA1               	addwfc	WriteAll_1621@p+1,f
 10066  0C3E  2C25               	goto	l4669
 10067  0C3F                     l677:	
 10068                           ;ht1621.c: 100: }
 10069                           ;ht1621.c: 101: do { LATC0 = 1; } while(0);
 10070                           
 10071  0C3F  0022               	movlb	2	; select bank2
 10072  0C40  140E               	bsf	14,0	;volatile
 10073  0C41  0008               	return
 10074  0C42                     __end_of_WriteAll_1621:	
 10075                           
 10076                           	psect	text50
 10077  0A5A                     __ptext50:	
 10078 ;; *************** function _SendDataBit_1621 *****************
 10079 ;; Defined at:
 10080 ;;		line 42 in file "mcc_generated_files/ht1621.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  data            1    wreg     unsigned char 
 10083 ;;  cnt             1    3[COMMON] unsigned char 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  data            1    5[COMMON] unsigned char 
 10086 ;;  i               1    6[COMMON] unsigned char 
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  1    wreg      void 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10096 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;Total ram usage:        4 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; Hardware stack levels required when called:    3
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		_WriteAll_1621
 10107 ;;		_Write_1621
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           
 10112                           ;psect for function _SendDataBit_1621
 10113  0A5A                     _SendDataBit_1621:	
 10114                           
 10115                           ;incstack = 0
 10116                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
 10117                           ;SendDataBit_1621@data stored from wreg
 10118  0A5A  00F5               	movwf	SendDataBit_1621@data
 10119                           
 10120                           ;ht1621.c: 44: unsigned char i;
 10121                           ;ht1621.c: 45: for(i =0; i <cnt; i ++)
 10122  0A5B  01F6               	clrf	SendDataBit_1621@i
 10123  0A5C                     l4597:	
 10124  0A5C  0873               	movf	SendDataBit_1621@cnt,w
 10125  0A5D  0276               	subwf	SendDataBit_1621@i,w
 10126  0A5E  1803               	btfsc	3,0
 10127  0A5F  0008               	return
 10128                           
 10129                           ;ht1621.c: 46: {
 10130                           ;ht1621.c: 47: if((data&0x01)==0) do { LATC2 = 0; } while(0);
 10131  0A60  1875               	btfsc	SendDataBit_1621@data,0
 10132  0A61  2A65               	goto	l648
 10133  0A62  0022               	movlb	2	; select bank2
 10134  0A63  110E               	bcf	14,2	;volatile
 10135  0A64  2A67               	goto	l650
 10136  0A65                     l648:	
 10137                           ;ht1621.c: 48: else do { LATC2 = 1; } while(0);
 10138                           
 10139  0A65  0022               	movlb	2	; select bank2
 10140  0A66  150E               	bsf	14,2	;volatile
 10141  0A67                     l650:	
 10142                           ;ht1621.c: 49: do { LATC1 = 0; } while(0);
 10143                           
 10144  0A67  108E               	bcf	14,1	;volatile
 10145                           
 10146                           ;ht1621.c: 50: _delay((unsigned long)((1)*(4000000/4000.0)));
 10147  0A68  30F9               	movlw	249
 10148  0A69  00F4               	movwf	??_SendDataBit_1621
 10149  0A6A                     u5407:	
 10150  0A6A  0000               	nop
 10151  0A6B  0BF4               	decfsz	??_SendDataBit_1621,f
 10152  0A6C  2A6A               	goto	u5407
 10153  0A6D  3200               	nop2	;nop
 10154  0A6E  0000               	nop
 10155                           
 10156                           ;ht1621.c: 51: do { LATC1 = 1; } while(0);
 10157  0A6F  0022               	movlb	2	; select bank2
 10158  0A70  148E               	bsf	14,1	;volatile
 10159                           
 10160                           ;ht1621.c: 52: data>>=1;
 10161  0A71  1003               	clrc
 10162  0A72  0CF5               	rrf	SendDataBit_1621@data,f
 10163  0A73  3001               	movlw	1
 10164  0A74  00F4               	movwf	??_SendDataBit_1621
 10165  0A75  0874               	movf	??_SendDataBit_1621,w
 10166  0A76  07F6               	addwf	SendDataBit_1621@i,f
 10167  0A77  2A5C               	goto	l4597
 10168  0A78                     __end_of_SendDataBit_1621:	
 10169                           
 10170                           	psect	text51
 10171  084B                     __ptext51:	
 10172 ;; *************** function _Set_start_flag *****************
 10173 ;; Defined at:
 10174 ;;		line 18 in file "mcc_generated_files/save.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		None
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    3
 10195 ;; This function calls:
 10196 ;;		Nothing
 10197 ;; This function is called by:
 10198 ;;		_Key_Process
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           
 10203                           ;psect for function _Set_start_flag
 10204  084B                     _Set_start_flag:	
 10205                           
 10206                           ;save.c: 20: Record_flag = 1;
 10207                           
 10208                           ;incstack = 0
 10209                           ; Regs used in _Set_start_flag: []
 10210  084B  0020               	movlb	0	; select bank0
 10211  084C  01EB               	clrf	_Record_flag
 10212  084D  0AEB               	incf	_Record_flag,f
 10213                           
 10214                           ;save.c: 21: do { LATA4 = 0; } while(0);
 10215  084E  0022               	movlb	2	; select bank2
 10216  084F  120C               	bcf	12,4	;volatile
 10217  0850  0008               	return
 10218  0851                     __end_of_Set_start_flag:	
 10219                           
 10220                           	psect	text52
 10221  083B                     __ptext52:	
 10222 ;; *************** function _Set_finish_flag *****************
 10223 ;; Defined at:
 10224 ;;		line 30 in file "mcc_generated_files/save.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		status,2
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    3
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_Key_Process
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           
 10253                           ;psect for function _Set_finish_flag
 10254  083B                     _Set_finish_flag:	
 10255                           
 10256                           ;save.c: 32: Record_flag = 0;
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _Set_finish_flag: [status,2]
 10260  083B  0020               	movlb	0	; select bank0
 10261  083C  01EB               	clrf	_Record_flag
 10262                           
 10263                           ;save.c: 33: do { LATA4 = 1; } while(0);
 10264  083D  0022               	movlb	2	; select bank2
 10265  083E  160C               	bsf	12,4	;volatile
 10266  083F  0008               	return
 10267  0840                     __end_of_Set_finish_flag:	
 10268                           
 10269                           	psect	text53
 10270  090A                     __ptext53:	
 10271 ;; *************** function _SendCmd_1621 *****************
 10272 ;; Defined at:
 10273 ;;		line 62 in file "mcc_generated_files/ht1621.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  command         1    wreg     unsigned char 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;  command         1    0[BANK0 ] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0, pclath, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;Total ram usage:        2 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    4
 10294 ;; This function calls:
 10295 ;;		_SendBit_1621
 10296 ;; This function is called by:
 10297 ;;		_main
 10298 ;;		_Key_Process
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           
 10303                           ;psect for function _SendCmd_1621
 10304  090A                     _SendCmd_1621:	
 10305                           
 10306                           ;incstack = 0
 10307                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
 10308                           ;SendCmd_1621@command stored from wreg
 10309  090A  0020               	movlb	0	; select bank0
 10310  090B  00A0               	movwf	SendCmd_1621@command
 10311                           
 10312                           ;ht1621.c: 64: do { LATC0 = 0; } while(0);
 10313  090C  0022               	movlb	2	; select bank2
 10314  090D  100E               	bcf	14,0	;volatile
 10315                           
 10316                           ;ht1621.c: 65: SendBit_1621(0x80,4);
 10317  090E  3004               	movlw	4
 10318  090F  00F7               	movwf	??_SendCmd_1621
 10319  0910  0877               	movf	??_SendCmd_1621,w
 10320  0911  00F3               	movwf	SendBit_1621@cnt
 10321  0912  3080               	movlw	128
 10322  0913  318A  223C  3189   	fcall	_SendBit_1621
 10323                           
 10324                           ;ht1621.c: 66: SendBit_1621(command,8);
 10325  0916  3008               	movlw	8
 10326  0917  00F7               	movwf	??_SendCmd_1621
 10327  0918  0877               	movf	??_SendCmd_1621,w
 10328  0919  00F3               	movwf	SendBit_1621@cnt
 10329  091A  0020               	movlb	0	; select bank0
 10330  091B  0820               	movf	SendCmd_1621@command,w
 10331  091C  318A  223C         	fcall	_SendBit_1621
 10332                           
 10333                           ;ht1621.c: 67: do { LATC0 = 1; } while(0);
 10334  091E  0022               	movlb	2	; select bank2
 10335  091F  140E               	bsf	14,0	;volatile
 10336  0920  0008               	return
 10337  0921                     __end_of_SendCmd_1621:	
 10338                           
 10339                           	psect	text54
 10340  0A3C                     __ptext54:	
 10341 ;; *************** function _SendBit_1621 *****************
 10342 ;; Defined at:
 10343 ;;		line 22 in file "mcc_generated_files/ht1621.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  data            1    wreg     unsigned char 
 10346 ;;  cnt             1    3[COMMON] unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  data            1    5[COMMON] unsigned char 
 10349 ;;  i               1    6[COMMON] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10359 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;Total ram usage:        4 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:    3
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_SendCmd_1621
 10370 ;;		_WriteAll_1621
 10371 ;;		_Write_1621
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           
 10376                           ;psect for function _SendBit_1621
 10377  0A3C                     _SendBit_1621:	
 10378                           
 10379                           ;incstack = 0
 10380                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
 10381                           ;SendBit_1621@data stored from wreg
 10382  0A3C  00F5               	movwf	SendBit_1621@data
 10383                           
 10384                           ;ht1621.c: 24: unsigned char i;
 10385                           ;ht1621.c: 25: for(i =0; i <cnt; i ++)
 10386  0A3D  01F6               	clrf	SendBit_1621@i
 10387  0A3E                     l4585:	
 10388  0A3E  0873               	movf	SendBit_1621@cnt,w
 10389  0A3F  0276               	subwf	SendBit_1621@i,w
 10390  0A40  1803               	btfsc	3,0
 10391  0A41  0008               	return
 10392                           
 10393                           ;ht1621.c: 26: {
 10394                           ;ht1621.c: 27: if((data&0x80)==0) do { LATC2 = 0; } while(0);
 10395  0A42  1BF5               	btfsc	SendBit_1621@data,7
 10396  0A43  2A47               	goto	l632
 10397  0A44  0022               	movlb	2	; select bank2
 10398  0A45  110E               	bcf	14,2	;volatile
 10399  0A46  2A49               	goto	l634
 10400  0A47                     l632:	
 10401                           ;ht1621.c: 28: else do { LATC2 = 1; } while(0);
 10402                           
 10403  0A47  0022               	movlb	2	; select bank2
 10404  0A48  150E               	bsf	14,2	;volatile
 10405  0A49                     l634:	
 10406                           ;ht1621.c: 29: do { LATC1 = 0; } while(0);
 10407                           
 10408  0A49  108E               	bcf	14,1	;volatile
 10409                           
 10410                           ;ht1621.c: 30: _delay((unsigned long)((1)*(4000000/4000.0)));
 10411  0A4A  30F9               	movlw	249
 10412  0A4B  00F4               	movwf	??_SendBit_1621
 10413  0A4C                     u5417:	
 10414  0A4C  0000               	nop
 10415  0A4D  0BF4               	decfsz	??_SendBit_1621,f
 10416  0A4E  2A4C               	goto	u5417
 10417  0A4F  3200               	nop2	;nop
 10418  0A50  0000               	nop
 10419                           
 10420                           ;ht1621.c: 31: do { LATC1 = 1; } while(0);
 10421  0A51  0022               	movlb	2	; select bank2
 10422  0A52  148E               	bsf	14,1	;volatile
 10423                           
 10424                           ;ht1621.c: 32: data<<=1;
 10425  0A53  1003               	clrc
 10426  0A54  0DF5               	rlf	SendBit_1621@data,f
 10427  0A55  3001               	movlw	1
 10428  0A56  00F4               	movwf	??_SendBit_1621
 10429  0A57  0874               	movf	??_SendBit_1621,w
 10430  0A58  07F6               	addwf	SendBit_1621@i,f
 10431  0A59  2A3E               	goto	l4585
 10432  0A5A                     __end_of_SendBit_1621:	
 10433                           
 10434                           	psect	text55
 10435  0AD9                     __ptext55:	
 10436 ;; *************** function _Key_Scan *****************
 10437 ;; Defined at:
 10438 ;;		line 20 in file "mcc_generated_files/key.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  Key_val         1    5[COMMON] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      unsigned char 
 10445 ;; Registers used:
 10446 ;;		wreg
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;Total ram usage:        3 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    3
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_Key_Process
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           
 10467                           ;psect for function _Key_Scan
 10468  0AD9                     _Key_Scan:	
 10469                           
 10470                           ;key.c: 22: unsigned char Key_val=0xff;
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _Key_Scan: [wreg]
 10474  0AD9  30FF               	movlw	255
 10475  0ADA  00F3               	movwf	??_Key_Scan
 10476  0ADB  0873               	movf	??_Key_Scan,w
 10477  0ADC  00F5               	movwf	Key_Scan@Key_val
 10478                           
 10479                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
 10480  0ADD  0020               	movlb	0	; select bank0
 10481  0ADE  1F8C               	btfss	12,7	;volatile
 10482  0ADF  2AE2               	goto	l5279
 10483  0AE0  1A8D               	btfsc	13,5	;volatile
 10484  0AE1  2AFA               	goto	l863
 10485  0AE2                     l5279:	
 10486                           
 10487                           ;key.c: 24: {
 10488                           ;key.c: 25: _delay((unsigned long)((10)*(4000000/4000.0)));
 10489  0AE2  300D               	movlw	13
 10490  0AE3  00F4               	movwf	??_Key_Scan+1
 10491  0AE4  30FB               	movlw	251
 10492  0AE5  00F3               	movwf	??_Key_Scan
 10493  0AE6                     u5427:	
 10494  0AE6  0BF3               	decfsz	??_Key_Scan,f
 10495  0AE7  2AE6               	goto	u5427
 10496  0AE8  0BF4               	decfsz	??_Key_Scan+1,f
 10497  0AE9  2AE6               	goto	u5427
 10498  0AEA  3200               	nop2
 10499                           
 10500                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
 10501  0AEB  0020               	movlb	0	; select bank0
 10502  0AEC  1F8C               	btfss	12,7	;volatile
 10503  0AED  2AF0               	goto	l868
 10504  0AEE  1A8D               	btfsc	13,5	;volatile
 10505  0AEF  2AFA               	goto	l863
 10506  0AF0                     l868:	
 10507                           
 10508                           ;key.c: 27: {
 10509                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10510  0AF0  1A8D               	btfsc	13,5	;volatile
 10511  0AF1  2AF4               	goto	l869
 10512  0AF2  01F5               	clrf	Key_Scan@Key_val
 10513  0AF3  0AF5               	incf	Key_Scan@Key_val,f
 10514  0AF4                     l869:	
 10515                           
 10516                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10517  0AF4  1B8C               	btfsc	12,7	;volatile
 10518  0AF5  2AFA               	goto	l863
 10519  0AF6  3002               	movlw	2
 10520  0AF7  00F3               	movwf	??_Key_Scan
 10521  0AF8  0873               	movf	??_Key_Scan,w
 10522  0AF9  00F5               	movwf	Key_Scan@Key_val
 10523  0AFA                     l863:	
 10524                           
 10525                           ;key.c: 30: }
 10526                           ;key.c: 31: }
 10527                           ;key.c: 32: return Key_val;
 10528  0AFA  0875               	movf	Key_Scan@Key_val,w
 10529  0AFB  0008               	return
 10530  0AFC                     __end_of_Key_Scan:	
 10531                           
 10532                           	psect	text56
 10533  0863                     __ptext56:	
 10534 ;; *************** function _EUSART_Write *****************
 10535 ;; Defined at:
 10536 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  txData          1    wreg     unsigned char 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  txData          1    3[COMMON] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      void 
 10543 ;; Registers used:
 10544 ;;		wreg
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;Total ram usage:        1 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    3
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_Key_Process
 10561 ;;		_EUSART_SendString
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _EUSART_Write
 10567  0863                     _EUSART_Write:	
 10568                           
 10569                           ;incstack = 0
 10570                           ; Regs used in _EUSART_Write: [wreg]
 10571                           ;EUSART_Write@txData stored from wreg
 10572  0863  00F3               	movwf	EUSART_Write@txData
 10573  0864                     l129:	
 10574                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10575                           
 10576  0864  0020               	movlb	0	; select bank0
 10577  0865  1E11               	btfss	17,4	;volatile
 10578  0866  2864               	goto	l129
 10579                           
 10580                           ;eusart.c: 93: }
 10581                           ;eusart.c: 95: TXREG = txData;
 10582  0867  0873               	movf	EUSART_Write@txData,w
 10583  0868  0023               	movlb	3	; select bank3
 10584  0869  009A               	movwf	26	;volatile
 10585  086A  0008               	return
 10586  086B                     __end_of_EUSART_Write:	
 10587                           
 10588                           	psect	text57
 10589  09EA                     __ptext57:	
 10590 ;; *************** function _Bq32k_Time_Init *****************
 10591 ;; Defined at:
 10592 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;		None
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10597 ;;  time            7    0        struct bq32k_regs
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      void 
 10600 ;; Registers used:
 10601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;Total ram usage:       12 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    5
 10614 ;; This function calls:
 10615 ;;		_I2C_Send_Buffer
 10616 ;; This function is called by:
 10617 ;;		_main
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           
 10622                           ;psect for function _Bq32k_Time_Init
 10623  09EA                     _Bq32k_Time_Init:	
 10624                           
 10625                           ;bq32k.c: 19: bq32k_t time;
 10626                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x50,0x23,0x02,0x08,0x07,0x16 };
 10627                           
 10628                           ;incstack = 0
 10629                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10630  09EA  30E5               	movlw	low Bq32k_Time_Init@F2018
 10631  09EB  0086               	movwf	6
 10632  09EC  3000               	movlw	high Bq32k_Time_Init@F2018
 10633  09ED  0087               	movwf	7
 10634  09EE  3027               	movlw	low Bq32k_Time_Init@temp
 10635  09EF  0084               	movwf	4
 10636  09F0  3000               	movlw	high Bq32k_Time_Init@temp
 10637  09F1  0085               	movwf	5
 10638  09F2  300A               	movlw	10
 10639  09F3  0020               	movlb	0	; select bank0
 10640  09F4  00A5               	movwf	??_Bq32k_Time_Init
 10641  09F5                     u4930:	
 10642  09F5  0016               	moviw fsr1++
 10643  09F6  001A               	movwi fsr0++
 10644  09F7  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10645  09F8  29F5               	goto	u4930
 10646                           
 10647                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10648  09F9  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10649  09FA  00A5               	movwf	??_Bq32k_Time_Init
 10650  09FB  0825               	movf	??_Bq32k_Time_Init,w
 10651  09FC  00F6               	movwf	I2C_Send_Buffer@buff
 10652  09FD  3007               	movlw	7
 10653  09FE  00A6               	movwf	??_Bq32k_Time_Init+1
 10654  09FF  0826               	movf	??_Bq32k_Time_Init+1,w
 10655  0A00  00F7               	movwf	I2C_Send_Buffer@Length
 10656  0A01  3000               	movlw	0
 10657  0A02  3187  27C4         	fcall	_I2C_Send_Buffer
 10658  0A04  0008               	return
 10659  0A05                     __end_of_Bq32k_Time_Init:	
 10660                           
 10661                           	psect	text58
 10662  07C4                     __ptext58:	
 10663 ;; *************** function _I2C_Send_Buffer *****************
 10664 ;; Defined at:
 10665 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  ADD             1    wreg     unsigned char 
 10668 ;;  buff            1    6[COMMON] PTR unsigned char 
 10669 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10670 ;;  Length          1    7[COMMON] unsigned char 
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;  ADD             1    2[BANK0 ] unsigned char 
 10673 ;;  Flag            1    4[BANK0 ] unsigned char 
 10674 ;;  i               1    3[BANK0 ] unsigned char 
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  1    wreg      unsigned char 
 10677 ;; Registers used:
 10678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10688 ;;Total ram usage:        7 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:    4
 10691 ;; This function calls:
 10692 ;;		_I2C_Send_Byte
 10693 ;;		_I2C_Start
 10694 ;;		_I2C_Stop
 10695 ;; This function is called by:
 10696 ;;		_Bq32k_Time_Init
 10697 ;;		_Bq32k_Rtc_Write_Time
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           
 10702                           ;psect for function _I2C_Send_Buffer
 10703  07C4                     _I2C_Send_Buffer:	
 10704                           
 10705                           ;incstack = 0
 10706                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10707                           ;I2C_Send_Buffer@ADD stored from wreg
 10708  07C4  0020               	movlb	0	; select bank0
 10709  07C5  00A2               	movwf	I2C_Send_Buffer@ADD
 10710                           
 10711                           ;i2c.c: 175: unsigned char Flag=1;
 10712  07C6  01A4               	clrf	I2C_Send_Buffer@Flag
 10713  07C7  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10714                           
 10715                           ;i2c.c: 176: unsigned char i;
 10716                           ;i2c.c: 178: I2C_Start();
 10717  07C8  3189  2151  3187   	fcall	_I2C_Start
 10718                           
 10719                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10720  07CB  30D0               	movlw	208
 10721  07CC  318D  25F6  3187   	fcall	_I2C_Send_Byte
 10722  07CF  0020               	movlb	0	; select bank0
 10723  07D0  00A0               	movwf	??_I2C_Send_Buffer
 10724  07D1  0820               	movf	??_I2C_Send_Buffer,w
 10725  07D2  00A4               	movwf	I2C_Send_Buffer@Flag
 10726                           
 10727                           ;i2c.c: 181: if(Flag)
 10728  07D3  0824               	movf	I2C_Send_Buffer@Flag,w
 10729  07D4  1D03               	btfss	3,2
 10730  07D5  0008               	return
 10731                           
 10732                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10733                           
 10734                           ;i2c.c: 182: return 0x01;
 10735                           ;	Return value of _I2C_Send_Buffer is never used
 10736  07D6  0822               	movf	I2C_Send_Buffer@ADD,w
 10737  07D7  318D  25F6  3187   	fcall	_I2C_Send_Byte
 10738  07DA  0020               	movlb	0	; select bank0
 10739  07DB  00A0               	movwf	??_I2C_Send_Buffer
 10740  07DC  0820               	movf	??_I2C_Send_Buffer,w
 10741  07DD  00A4               	movwf	I2C_Send_Buffer@Flag
 10742                           
 10743                           ;i2c.c: 185: if(Flag)
 10744  07DE  0824               	movf	I2C_Send_Buffer@Flag,w
 10745  07DF  1D03               	btfss	3,2
 10746  07E0  0008               	return
 10747                           
 10748                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10749                           
 10750                           ;i2c.c: 186: return 0x01;
 10751                           ;	Return value of _I2C_Send_Buffer is never used
 10752  07E1  01A3               	clrf	I2C_Send_Buffer@i
 10753  07E2                     l5267:	
 10754  07E2  0877               	movf	I2C_Send_Buffer@Length,w
 10755  07E3  0223               	subwf	I2C_Send_Buffer@i,w
 10756  07E4  1803               	btfsc	3,0
 10757  07E5  2FFC               	goto	l5269
 10758                           
 10759                           ;i2c.c: 189: {
 10760                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10761  07E6  0823               	movf	I2C_Send_Buffer@i,w
 10762  07E7  0776               	addwf	I2C_Send_Buffer@buff,w
 10763  07E8  00A0               	movwf	??_I2C_Send_Buffer
 10764  07E9  0820               	movf	??_I2C_Send_Buffer,w
 10765  07EA  0086               	movwf	6
 10766  07EB  0187               	clrf	7
 10767  07EC  0801               	movf	1,w
 10768  07ED  318D  25F6  3187   	fcall	_I2C_Send_Byte
 10769  07F0  0020               	movlb	0	; select bank0
 10770  07F1  00A1               	movwf	??_I2C_Send_Buffer+1
 10771  07F2  0821               	movf	??_I2C_Send_Buffer+1,w
 10772  07F3  00A4               	movwf	I2C_Send_Buffer@Flag
 10773                           
 10774                           ;i2c.c: 191: if(Flag)
 10775  07F4  0824               	movf	I2C_Send_Buffer@Flag,w
 10776  07F5  1D03               	btfss	3,2
 10777  07F6  0008               	return
 10778                           
 10779                           ;i2c.c: 192: return 0x01;
 10780                           ;	Return value of _I2C_Send_Buffer is never used
 10781  07F7  3001               	movlw	1
 10782  07F8  00A0               	movwf	??_I2C_Send_Buffer
 10783  07F9  0820               	movf	??_I2C_Send_Buffer,w
 10784  07FA  07A3               	addwf	I2C_Send_Buffer@i,f
 10785  07FB  2FE2               	goto	l5267
 10786  07FC                     l5269:	
 10787                           
 10788                           ;i2c.c: 193: }
 10789                           ;i2c.c: 194: I2C_Stop();
 10790  07FC  3189  216A         	fcall	_I2C_Stop
 10791  07FE  0008               	return
 10792  07FF                     __end_of_I2C_Send_Buffer:	
 10793                           ;i2c.c: 195: return 0x00;
 10794                           ;	Return value of _I2C_Send_Buffer is never used
 10795                           
 10796                           
 10797                           	psect	text59
 10798  096A                     __ptext59:	
 10799 ;; *************** function _I2C_Stop *****************
 10800 ;; Defined at:
 10801 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1    wreg      void 
 10808 ;; Registers used:
 10809 ;;		wreg
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;Total ram usage:        1 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    3
 10822 ;; This function calls:
 10823 ;;		Nothing
 10824 ;; This function is called by:
 10825 ;;		_I2C_Read_Buffer
 10826 ;;		_I2C_Send_Buffer
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           
 10831                           ;psect for function _I2C_Stop
 10832  096A                     _I2C_Stop:	
 10833                           
 10834                           ;incstack = 0
 10835                           ; Regs used in _I2C_Stop: [wreg]
 10836                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10837  096A  0022               	movlb	2	; select bank2
 10838  096B  100D               	bcf	13,0	;volatile
 10839                           
 10840                           ;i2c.c: 105: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10841  096C  3003               	movlw	3
 10842  096D  00F3               	movwf	??_I2C_Stop
 10843  096E                     u5437:	
 10844  096E  0BF3               	decfsz	??_I2C_Stop,f
 10845  096F  296E               	goto	u5437
 10846                           
 10847                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10848  0970  0022               	movlb	2	; select bank2
 10849  0971  108D               	bcf	13,1	;volatile
 10850                           
 10851                           ;i2c.c: 107: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10852  0972  3003               	movlw	3
 10853  0973  00F3               	movwf	??_I2C_Stop
 10854  0974                     u5447:	
 10855  0974  0BF3               	decfsz	??_I2C_Stop,f
 10856  0975  2974               	goto	u5447
 10857                           
 10858                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10859  0976  0022               	movlb	2	; select bank2
 10860  0977  140D               	bsf	13,0	;volatile
 10861                           
 10862                           ;i2c.c: 109: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10863  0978  3003               	movlw	3
 10864  0979  00F3               	movwf	??_I2C_Stop
 10865  097A                     u5457:	
 10866  097A  0BF3               	decfsz	??_I2C_Stop,f
 10867  097B  297A               	goto	u5457
 10868                           
 10869                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10870  097C  0022               	movlb	2	; select bank2
 10871  097D  148D               	bsf	13,1	;volatile
 10872                           
 10873                           ;i2c.c: 111: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10874  097E  3003               	movlw	3
 10875  097F  00F3               	movwf	??_I2C_Stop
 10876  0980                     u5467:	
 10877  0980  0BF3               	decfsz	??_I2C_Stop,f
 10878  0981  2980               	goto	u5467
 10879  0982  0008               	return
 10880  0983                     __end_of_I2C_Stop:	
 10881                           
 10882                           	psect	text60
 10883  0951                     __ptext60:	
 10884 ;; *************** function _I2C_Start *****************
 10885 ;; Defined at:
 10886 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        1 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    3
 10907 ;; This function calls:
 10908 ;;		Nothing
 10909 ;; This function is called by:
 10910 ;;		_I2C_Read_Buffer
 10911 ;;		_I2C_Send_Buffer
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           
 10916                           ;psect for function _I2C_Start
 10917  0951                     _I2C_Start:	
 10918                           
 10919                           ;incstack = 0
 10920                           ; Regs used in _I2C_Start: [wreg]
 10921                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10922  0951  0022               	movlb	2	; select bank2
 10923  0952  148D               	bsf	13,1	;volatile
 10924                           
 10925                           ;i2c.c: 19: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10926  0953  3003               	movlw	3
 10927  0954  00F3               	movwf	??_I2C_Start
 10928  0955                     u5477:	
 10929  0955  0BF3               	decfsz	??_I2C_Start,f
 10930  0956  2955               	goto	u5477
 10931                           
 10932                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10933  0957  0022               	movlb	2	; select bank2
 10934  0958  140D               	bsf	13,0	;volatile
 10935                           
 10936                           ;i2c.c: 21: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10937  0959  3003               	movlw	3
 10938  095A  00F3               	movwf	??_I2C_Start
 10939  095B                     u5487:	
 10940  095B  0BF3               	decfsz	??_I2C_Start,f
 10941  095C  295B               	goto	u5487
 10942                           
 10943                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10944  095D  0022               	movlb	2	; select bank2
 10945  095E  108D               	bcf	13,1	;volatile
 10946                           
 10947                           ;i2c.c: 23: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10948  095F  3003               	movlw	3
 10949  0960  00F3               	movwf	??_I2C_Start
 10950  0961                     u5497:	
 10951  0961  0BF3               	decfsz	??_I2C_Start,f
 10952  0962  2961               	goto	u5497
 10953                           
 10954                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10955  0963  0022               	movlb	2	; select bank2
 10956  0964  100D               	bcf	13,0	;volatile
 10957                           
 10958                           ;i2c.c: 25: _delay((unsigned long)((10)*(4000000/4000000.0)));
 10959  0965  3003               	movlw	3
 10960  0966  00F3               	movwf	??_I2C_Start
 10961  0967                     u5507:	
 10962  0967  0BF3               	decfsz	??_I2C_Start,f
 10963  0968  2967               	goto	u5507
 10964  0969  0008               	return
 10965  096A                     __end_of_I2C_Start:	
 10966                           
 10967                           	psect	text61
 10968  0DF6                     __ptext61:	
 10969 ;; *************** function _I2C_Send_Byte *****************
 10970 ;; Defined at:
 10971 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  Data            1    wreg     unsigned char 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  Data            1    4[COMMON] unsigned char 
 10976 ;;  i               1    5[COMMON] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      unsigned char 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        3 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    3
 10993 ;; This function calls:
 10994 ;;		Nothing
 10995 ;; This function is called by:
 10996 ;;		_I2C_Read_Buffer
 10997 ;;		_I2C_Send_Buffer
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           
 11002                           ;psect for function _I2C_Send_Byte
 11003  0DF6                     _I2C_Send_Byte:	
 11004                           
 11005                           ;incstack = 0
 11006                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 11007                           ;I2C_Send_Byte@Data stored from wreg
 11008  0DF6  00F4               	movwf	I2C_Send_Byte@Data
 11009                           
 11010                           ;i2c.c: 36: unsigned char i;
 11011                           ;i2c.c: 37: for(i=0;i<8;i++)
 11012  0DF7  01F5               	clrf	I2C_Send_Byte@i
 11013  0DF8  3008               	movlw	8
 11014  0DF9  0275               	subwf	I2C_Send_Byte@i,w
 11015  0DFA  1803               	btfsc	3,0
 11016  0DFB  2E1D               	goto	l744
 11017  0DFC                     l732:	
 11018                           
 11019                           ;i2c.c: 38: {
 11020                           ;i2c.c: 39: if(Data&0x80)
 11021  0DFC  1FF4               	btfss	I2C_Send_Byte@Data,7
 11022  0DFD  2E01               	goto	l738
 11023                           
 11024                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 11025  0DFE  0022               	movlb	2	; select bank2
 11026  0DFF  148D               	bsf	13,1	;volatile
 11027  0E00  2E03               	goto	l4401
 11028  0E01                     l738:	
 11029                           ;i2c.c: 41: else
 11030                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 11031                           
 11032  0E01  0022               	movlb	2	; select bank2
 11033  0E02  108D               	bcf	13,1	;volatile
 11034  0E03                     l4401:	
 11035                           
 11036                           ;i2c.c: 43: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11037  0E03  3003               	movlw	3
 11038  0E04  00F3               	movwf	??_I2C_Send_Byte
 11039  0E05                     u5517:	
 11040  0E05  0BF3               	decfsz	??_I2C_Send_Byte,f
 11041  0E06  2E05               	goto	u5517
 11042                           
 11043                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 11044  0E07  0022               	movlb	2	; select bank2
 11045  0E08  140D               	bsf	13,0	;volatile
 11046                           
 11047                           ;i2c.c: 45: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11048  0E09  3003               	movlw	3
 11049  0E0A  00F3               	movwf	??_I2C_Send_Byte
 11050  0E0B                     u5527:	
 11051  0E0B  0BF3               	decfsz	??_I2C_Send_Byte,f
 11052  0E0C  2E0B               	goto	u5527
 11053                           
 11054                           ;i2c.c: 46: Data<<=1;
 11055  0E0D  1003               	clrc
 11056  0E0E  0DF4               	rlf	I2C_Send_Byte@Data,f
 11057                           
 11058                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 11059  0E0F  0022               	movlb	2	; select bank2
 11060  0E10  100D               	bcf	13,0	;volatile
 11061                           
 11062                           ;i2c.c: 48: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11063  0E11  3003               	movlw	3
 11064  0E12  00F3               	movwf	??_I2C_Send_Byte
 11065  0E13                     u5537:	
 11066  0E13  0BF3               	decfsz	??_I2C_Send_Byte,f
 11067  0E14  2E13               	goto	u5537
 11068  0E15  3001               	movlw	1
 11069  0E16  00F3               	movwf	??_I2C_Send_Byte
 11070  0E17  0873               	movf	??_I2C_Send_Byte,w
 11071  0E18  07F5               	addwf	I2C_Send_Byte@i,f
 11072  0E19  3008               	movlw	8
 11073  0E1A  0275               	subwf	I2C_Send_Byte@i,w
 11074  0E1B  1C03               	skipc
 11075  0E1C  2DFC               	goto	l732
 11076  0E1D                     l744:	
 11077                           ;i2c.c: 49: }
 11078                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 11079                           
 11080  0E1D  0022               	movlb	2	; select bank2
 11081  0E1E  148D               	bsf	13,1	;volatile
 11082                           
 11083                           ;i2c.c: 51: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11084  0E1F  3003               	movlw	3
 11085  0E20  00F3               	movwf	??_I2C_Send_Byte
 11086  0E21                     u5547:	
 11087  0E21  0BF3               	decfsz	??_I2C_Send_Byte,f
 11088  0E22  2E21               	goto	u5547
 11089                           
 11090                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 11091  0E23  0022               	movlb	2	; select bank2
 11092  0E24  140D               	bsf	13,0	;volatile
 11093                           
 11094                           ;i2c.c: 53: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11095  0E25  3003               	movlw	3
 11096  0E26  00F3               	movwf	??_I2C_Send_Byte
 11097  0E27                     u5557:	
 11098  0E27  0BF3               	decfsz	??_I2C_Send_Byte,f
 11099  0E28  2E27               	goto	u5557
 11100                           
 11101                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 11102  0E29  0021               	movlb	1	; select bank1
 11103  0E2A  148D               	bsf	13,1	;volatile
 11104                           
 11105                           ;i2c.c: 55: if(RB1)
 11106  0E2B  0020               	movlb	0	; select bank0
 11107  0E2C  1C8D               	btfss	13,1	;volatile
 11108  0E2D  2E32               	goto	l754
 11109                           
 11110                           ;i2c.c: 56: {
 11111                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 11112  0E2E  0021               	movlb	1	; select bank1
 11113  0E2F  108D               	bcf	13,1	;volatile
 11114                           
 11115                           ;i2c.c: 58: return 0x01;
 11116  0E30  3001               	movlw	1
 11117  0E31  0008               	return
 11118  0E32                     l754:	
 11119                           ;i2c.c: 59: }
 11120                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 11121                           
 11122  0E32  0021               	movlb	1	; select bank1
 11123  0E33  108D               	bcf	13,1	;volatile
 11124                           
 11125                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 11126  0E34  0022               	movlb	2	; select bank2
 11127  0E35  100D               	bcf	13,0	;volatile
 11128                           
 11129                           ;i2c.c: 62: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11130  0E36  3003               	movlw	3
 11131  0E37  00F3               	movwf	??_I2C_Send_Byte
 11132  0E38                     u5567:	
 11133  0E38  0BF3               	decfsz	??_I2C_Send_Byte,f
 11134  0E39  2E38               	goto	u5567
 11135                           
 11136                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 11137  0E3A  0022               	movlb	2	; select bank2
 11138  0E3B  108D               	bcf	13,1	;volatile
 11139                           
 11140                           ;i2c.c: 64: _delay((unsigned long)((10)*(4000000/4000000.0)));
 11141  0E3C  3003               	movlw	3
 11142  0E3D  00F3               	movwf	??_I2C_Send_Byte
 11143  0E3E                     u5577:	
 11144  0E3E  0BF3               	decfsz	??_I2C_Send_Byte,f
 11145  0E3F  2E3E               	goto	u5577
 11146                           
 11147                           ;i2c.c: 65: return 0x00;
 11148  0E40  3000               	movlw	0
 11149  0E41  0008               	return
 11150  0E42                     __end_of_I2C_Send_Byte:	
 11151                           
 11152                           	psect	text62
 11153  0921                     __ptext62:	
 11154 ;; *************** function _ADC_GetConversion *****************
 11155 ;; Defined at:
 11156 ;;		line 106 in file "mcc_generated_files/adc.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;  channel         1    wreg     enum E1850
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;  channel         1    6[COMMON] enum E1850
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  2    3[COMMON] unsigned int 
 11163 ;; Registers used:
 11164 ;;		wreg, status,2, status,0
 11165 ;; Tracked objects:
 11166 ;;		On entry : 0/0
 11167 ;;		On exit  : 0/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;Total ram usage:        4 bytes
 11175 ;; Hardware stack levels used:    1
 11176 ;; Hardware stack levels required when called:    3
 11177 ;; This function calls:
 11178 ;;		Nothing
 11179 ;; This function is called by:
 11180 ;;		_main
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           
 11185                           ;psect for function _ADC_GetConversion
 11186  0921                     _ADC_GetConversion:	
 11187                           
 11188                           ;incstack = 0
 11189                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11190                           ;ADC_GetConversion@channel stored from wreg
 11191  0921  00F6               	movwf	ADC_GetConversion@channel
 11192                           
 11193                           ;adc.c: 108: ADCON0bits.CHS = channel;
 11194  0922  0876               	movf	ADC_GetConversion@channel,w
 11195  0923  00F5               	movwf	??_ADC_GetConversion
 11196  0924  0DF5               	rlf	??_ADC_GetConversion,f
 11197  0925  0DF5               	rlf	??_ADC_GetConversion,f
 11198  0926  0021               	movlb	1	; select bank1
 11199  0927  081D               	movf	29,w	;volatile
 11200  0928  0675               	xorwf	??_ADC_GetConversion,w
 11201  0929  3983               	andlw	-125
 11202  092A  0675               	xorwf	??_ADC_GetConversion,w
 11203  092B  009D               	movwf	29	;volatile
 11204                           
 11205                           ;adc.c: 111: ADCON0bits.ADON = 1;
 11206  092C  141D               	bsf	29,0	;volatile
 11207                           
 11208                           ;adc.c: 114: _delay((unsigned long)((5)*(4000000/4000000.0)));
 11209  092D  3200               	nop2	;2 cycle nop
 11210  092E  3200               	nop2	;2 cycle nop
 11211  092F  0000               	nop
 11212                           
 11213                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 11214  0930  0021               	movlb	1	; select bank1
 11215  0931  149D               	bsf	29,1	;volatile
 11216  0932                     l197:	
 11217                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 11218                           
 11219  0932  189D               	btfsc	29,1	;volatile
 11220  0933  2932               	goto	l197
 11221                           
 11222                           ;adc.c: 121: }
 11223                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 11224  0934  081C               	movf	28,w	;volatile
 11225  0935  00F4               	movwf	?_ADC_GetConversion+1
 11226  0936  081B               	movf	27,w	;volatile
 11227  0937  00F3               	movwf	?_ADC_GetConversion
 11228  0938  0008               	return
 11229  0939                     __end_of_ADC_GetConversion:	
 11230                           
 11231                           	psect	intentry
 11232  0004                     __pintentry:	
 11233 ;; *************** function _INTERRUPT_InterruptManager *****************
 11234 ;; Defined at:
 11235 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;		None
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;		None
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		wreg, status,2, status,0, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:    2
 11256 ;; This function calls:
 11257 ;;		_TMR0_ISR
 11258 ;; This function is called by:
 11259 ;;		Interrupt level 1
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263  0004                     _INTERRUPT_InterruptManager:	
 11264                           
 11265                           ;incstack = 0
 11266                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 11267  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11268  0005  3180               	pagesel	$
 11269  0006  0020               	movlb	0	; select bank0
 11270  0007  087F               	movf	127,w
 11271  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 11272                           
 11273                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 11274  0009  1A8B               	btfsc	11,5	;volatile
 11275  000A  1D0B               	btfss	11,2	;volatile
 11276  000B  280E               	goto	i1l254
 11277                           
 11278                           ;interrupt_manager.c: 55: TMR0_ISR();
 11279  000C  3189  21CF         	fcall	_TMR0_ISR
 11280  000E                     i1l254:	
 11281                           ;interrupt_manager.c: 56: } else {
 11282                           
 11283  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 11284  000F  0020               	movlb	0	; select bank0
 11285  0010  00FF               	movwf	127
 11286  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11287  0012  0009               	retfie
 11288  0013                     __end_of_INTERRUPT_InterruptManager:	
 11289                           
 11290                           	psect	text64
 11291  09CF                     __ptext64:	
 11292 ;; *************** function _TMR0_ISR *****************
 11293 ;; Defined at:
 11294 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2, status,0, pclath, cstack
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;Total ram usage:        1 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:    1
 11315 ;; This function calls:
 11316 ;;		_TMR0_CallBack
 11317 ;; This function is called by:
 11318 ;;		_INTERRUPT_InterruptManager
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           
 11323                           ;psect for function _TMR0_ISR
 11324  09CF                     _TMR0_ISR:	
 11325                           
 11326                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 11327                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 11328                           
 11329                           ;incstack = 0
 11330                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11331  09CF  110B               	bcf	11,2	;volatile
 11332                           
 11333                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 11334  09D0  0021               	movlb	1	; select bank1
 11335  09D1  086F               	movf	_timer0ReloadVal^(0+128),w	;volatile
 11336  09D2  0020               	movlb	0	; select bank0
 11337  09D3  0095               	movwf	21	;volatile
 11338                           
 11339                           ;tmr0.c: 111: MAX31856Sec++;
 11340  09D4  3001               	movlw	1
 11341  09D5  00F1               	movwf	??_TMR0_ISR
 11342  09D6  0871               	movf	??_TMR0_ISR,w
 11343  09D7  0021               	movlb	1	; select bank1
 11344  09D8  07B9               	addwf	_MAX31856Sec^(0+128),f
 11345                           
 11346                           ;tmr0.c: 114: if (++CountCallBack >= 100) {
 11347  09D9  3001               	movlw	1
 11348  09DA  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11349  09DB  3000               	movlw	0
 11350  09DC  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11351  09DD  3000               	movlw	0
 11352  09DE  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11353  09DF  3064               	movlw	100
 11354  09E0  1903               	skipnz
 11355  09E1  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11356  09E2  1C03               	skipc
 11357  09E3  0008               	return
 11358                           
 11359                           ;tmr0.c: 116: TMR0_CallBack();
 11360  09E4  3188  2045         	fcall	_TMR0_CallBack
 11361                           
 11362                           ;tmr0.c: 119: CountCallBack = 0;
 11363  09E6  0021               	movlb	1	; select bank1
 11364  09E7  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11365  09E8  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11366  09E9  0008               	return
 11367  09EA                     __end_of_TMR0_ISR:	
 11368                           
 11369                           	psect	text65
 11370  0845                     __ptext65:	
 11371 ;; *************** function _TMR0_CallBack *****************
 11372 ;; Defined at:
 11373 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      void 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;Total ram usage:        1 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_TMR0_ISR
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           
 11401                           ;psect for function _TMR0_CallBack
 11402  0845                     _TMR0_CallBack:	
 11403                           
 11404                           ;tmr0.c: 128: LongPressSec++;
 11405                           
 11406                           ;incstack = 0
 11407                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 11408  0845  3001               	movlw	1
 11409  0846  00F0               	movwf	??_TMR0_CallBack
 11410  0847  0870               	movf	??_TMR0_CallBack,w
 11411  0848  0021               	movlb	1	; select bank1
 11412  0849  07B8               	addwf	_LongPressSec^(0+128),f
 11413  084A  0008               	return
 11414  084B                     __end_of_TMR0_CallBack:	
 11415  007E                     btemp	set	126	;btemp
 11416  007E                     int$flags	set	126
 11417  007E                     wtemp	set	126
 11418  007E                     wtemp0	set	126
 11419  0080                     wtemp1	set	128
 11420  0082                     wtemp2	set	130
 11421  0084                     wtemp3	set	132
 11422  0086                     wtemp4	set	134
 11423  0088                     wtemp5	set	136
 11424  007F                     wtemp6	set	127
 11425  007E                     ttemp	set	126
 11426  007E                     ttemp0	set	126
 11427  0081                     ttemp1	set	129
 11428  0084                     ttemp2	set	132
 11429  0087                     ttemp3	set	135
 11430  007F                     ttemp4	set	127
 11431  007E                     ltemp	set	126
 11432  007E                     ltemp0	set	126
 11433  0082                     ltemp1	set	130
 11434  0086                     ltemp2	set	134
 11435  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     69      78
    BANK1            80      0      80
    BANK2            80      5      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_SendCmd_1621
    _main->_WriteAll_1621
    _Sleep_process->_Step_control
    _Serach_Flash_Head->_Write_Flash_finish
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_SendCmd_1621
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->_WriteAll_1621
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _Calculate_Time->_Write_Flash_finish
    _Calculate_Time->_Write_Flash_head
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _maxim_clear_fault_status->_maxim_31856_read_register
    _err_Display->_WriteAll_1621
    _Tc_Display->_WriteAll_1621
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _Two_Display->_WriteAll_1621
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Save_Write_time
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  115525
                                             66 BANK0      3     3      0
                                              0 BANK2      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _Sleep_process
                      _WriteAll_1621
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _Sleep_process                                        0     0      0       0
                       _Step_control
 ---------------------------------------------------------------------------------
 (2) _Step_control                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    6     6      0    3534
                                             19 BANK0      6     6      0
                     _FLASH_ReadWord
                 _Write_Flash_finish
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0   19272
                                             47 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   51130
                                             60 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   38200
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   28488
                                             59 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                12    12      0   20051
                                             47 BANK0     12    12      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0   14754
                                             25 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_time
                 _Write_Flash_finish
                   _Write_Flash_head
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_head                                     1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_finish                                   1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Save_Write_time                                      3     3      0    5897
                                             23 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      4     2      2    4429
                                             19 BANK0      4     2      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2904
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              5 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              5 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              7 COMMON     1     1      0
                                              0 BANK0      5     2      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     4     3      1     256
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         4     3      1     564
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_time
               _Bq32k_Rtc_Read_Time
                 _I2C_Read_Buffer
                   _I2C_Receive_Byte
                   _I2C_Send_Byte
                   _I2C_Start
                   _I2C_Stop
                 _bcd2bin
                   ___bmul
               _Save_Write_word
                 _FLASH_WriteWord
                   _FLASH_ReadWord
                   _FLASH_WriteBlock
                     _FLASH_EraseBlock
             _Write_Flash_finish
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             _Write_Flash_head
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_time
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
       _Write_Flash_finish
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       _Write_Flash_head
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _Sleep_process
     _Step_control
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           _Save_Write_time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_word
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
           _Write_Flash_finish
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           _Write_Flash_head
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Jul 14 09:56:59 2016

                        __end_of_I2C_Send_Buffer 07FF                                   _SPI_Initialize 0851  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 0878                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 083B  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00EF  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 0864                                              l166 07BB  
                                            l371 03CE                                              l540 0202  
                                            l532 01C7                                              l380 03FE  
                                            l197 0932                                              l517 00E4  
                                            l373 03D0                                              l390 046B  
                                            l535 01CF                                              l519 0191  
                                            l632 0A47                                              l544 0DB4  
                                            l545 0DB3                                              l537 01FA  
                                            l529 0175                                              l634 0A49  
                                            l650 0A67                                              l732 0DFC  
                                            l744 0E1D                                              l648 0A65  
                                            l904 05CB                                              l754 0E32  
                                            l738 0E01                                              l908 05D9  
                                            l677 0C3F                                              l773 0B14  
                                            l589 0CE3                                              l863 0AFA  
                                            l687 04CA                                              l688 04F1  
                                            l890 0593                                              l891 0592  
                                            l868 0AF0                                              l869 0AF4  
                                            l878 0554                                              l896 0597  
                                            _RB1 0069                                              _RB3 006B  
                                            _RB5 006D                                              _RA7 0067  
                                   ?_err_Display 0070                                     ___awmod@sign 0021  
                             _Write_Flash_finish 0B7F                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                               ?_FLASH_WriteWord 002A                           _maxim_start_conversion 09B5  
                 FLASH_WriteBlock@flashWordArray 0022                                     __CFG_LVP$OFF 0000  
                                           l1013 0F89                                             l1009 0F58  
                                           l1064 09AA                                             l1081 0A82  
                                           l5003 0E9E                                             l5021 0EBD  
                                           l5031 0ED8                                             l4401 0E03  
                                           l5121 0D0D                                             l5113 0CFD  
                                           l5009 0EA9                                             l5035 0EE0  
                                           l5027 0ECF                                             l5019 0EB1  
                                           l5051 0D78                                             l5117 0D05  
                                           l5109 0CF5                                             l5061 0D8A  
                                           l5221 0CBB                                             l5301 0AA3  
                                           l5047 0D71                                             l5223 0CBE  
                                           l5303 0AA4                                             l5073 0DA7  
                                           l5065 0D96                                             l5209 0CAE  
                                           l5241 0CD1                                             l5083 0DBC  
                                           l4451 0B24                                             l4371 07A6  
                                           l5059 0D7E                                             l5235 0CCB  
                                           l4533 069A                                             l5069 0D9F  
                                           l5237 0CCE                                             l5087 0DC4  
                                           l4535 06C5                                             l4359 077E  
                                           l5423 05C3                                             l5503 03D8  
                                           l4465 08D1                                             l4561 0C95  
                                           l4713 02E0                                             l5513 0400  
                                           l5267 07E2                                             l4643 0E5A  
                                           l4491 0D50                                             l4619 0A7B  
                                           l5419 05BC                                             l5451 0F6B  
                                           l5363 0F31                                             l5355 0F20  
                                           l5347 0F0E                                             l5269 07FC  
                                           l4645 0E6F                                             l4469 08D7  
                                           l4485 0D32                                             l4717 02E9  
                                           l4901 012D                                             l5381 055D  
                                           l5429 05D0                                             l5365 0F33  
                                           l5509 03ED                                             l5279 0AE2  
                                           l4639 0E4B                                             l4647 0E74  
                                           l4727 02F8                                             l4823 006C  
                                           l4585 0A3E                                             l4657 0E7C  
                                           l4649 0E79                                             l4761 0C57  
                                           l4737 03A7                                             l4905 013C  
                                           l5385 056A                                             l5377 0555  
                                           l4771 0C72                                             l4747 0A0B  
                                           l5395 0598                                             l5475 09B2  
                                           l5571 0470                                             l4597 0A5C  
                                           l4669 0C25                                             l4909 0150  
                                           l4853 00AB                                             l5557 0444  
                                           l4767 0C69                                             l4759 0C4B  
                                           l4783 0B59                                             l4927 018D  
                                           l5399 05A0                                             l4785 0B65  
                                           l4793 0B7A                                             l4945 01D8  
                                           l4857 00BF                                             l4849 009C  
                                           l5569 046D                                             l4971 04AD  
                                           l4875 00FC                                             l4789 0B71  
                                           l4973 0506                                             l4877 0101  
                                           l4983 052A                                             l4977 0511  
                                           l4969 0492                                             l4979 0520  
                            ?_Write_Flash_finish 0070                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u4200 0083                                             u4115 0B5C  
                                           u4300 0113                                             u4045 0C4E  
                                           u4310 0114                                             u4135 0B6B  
                                           u4065 0C58                                             u4145 0B72  
                                           u4075 0C62                                             u4085 0C6A  
                                           u4190 0082                                             u4255 00B1  
                                           u4365 0142                                             u5317 03C1  
                                           u5407 0A6A                                             u5327 06AD  
                                           u3575 076A                                             u4535 0EB4  
                                           u5417 0A4C                                             u5337 06B4  
                                           u5507 0967                                             u5427 0AE6  
                                           u5347 06BB                                             u4555 0EBE  
                                           u4635 0D81                                             u5517 0E05  
                                           u5437 096E                                             u5357 06D4  
                                           u3765 08EC                                             u4565 0EC8  
                                           u5527 0E0B                                             u5447 0974  
                                           u5367 06DB                                             u4575 0ED0  
                                           u4655 0D90                                             u5537 0E13  
                                           u5457 097A                                             u5377 06E2  
                                           u3865 0A83                                             u4665 0D97  
                                           u4930 09F5                                             u5547 0E21  
                                           u5467 0980                                             u5387 0B0A  
                                           u3875 0A88                                             u5557 0E27  
                                           u5477 0955                                             u5397 0B1A  
                                           u5567 0E38                                             u5487 095B  
                                           u5577 0E3E                                             u5497 0961  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                          __size_of_Set_start_flag 0006  
                         __size_of_WriteAll_1621 0034                                    ??_Key_Process 005C  
                                           _main 03A9                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 0983                                ?_FLASH_WriteBlock 0020  
                                  __CFG_BOREN$ON 0000                                             ltemp 007E  
                            SendCmd_1621@command 0020                                             start 0013  
                                           ttemp 007E                                             wtemp 007E  
                                __end_of_Dis_TAB 1015                           __end_of_SPI_Initialize 0857  
                             ??_FLASH_WriteBlock 0023                                 ?_I2C_Read_Buffer 0076  
                              ___bmul@multiplier 0076                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 0163                   __end_of_SPI_Exchange8bitBuffer 0E93  
                                time_Display@num 0033                             ??_Write_Flash_finish 0077  
                        __end_of_TMR0_Initialize 08BE                                  ?_FVR_Initialize 0070  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 0005  
                  __end_of_OSCILLATOR_Initialize 0845                                  __end_of_bcd2bin 08F5  
                                          ?_main 0070                                  __end_of___awdiv 0EE5  
                                __end_of___awmod 0DAC                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0C77  
                                          i1l254 000E                                  __end_of___lwmod 0B7F  
                                ___awdiv@counter 0020                                            u401m0 03A0  
                                          _RCREG 0199                                            _RCSTA 019D  
                                     _Flash_buff 0120                                            u383m0 06F4  
                                          u384m0 0701                                            u398m0 02D9  
                        ??_one_temperature_trans 0028                                ?_SendDataBit_1621 0073  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                                          _TXSTA 019E                                 __end_of_TMR0_ISR 09EA  
                             ??_SendDataBit_1621 0074                     __end_of_tc_temperature_trans 020B  
                                          main@i 0162                                __end_of_I2C_Start 096A  
                            _Bq32k_Rtc_Read_Time 0F9C                                  Tc_Display@count 002A  
                              WriteAll_1621@addr 0023                                            ltemp0 007E  
                                          ltemp1 0082                                            ltemp2 0086  
                                          ltemp3 0080                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                                            wtemp0 007E  
                                          wtemp1 0080                                            wtemp2 0082  
                                          wtemp3 0084                                            wtemp4 0086  
                                          wtemp5 0088                                            wtemp6 007F  
                         __size_of_I2C_Send_Byte 004C                                  _Cur_temperature 00B0  
                                     _Tc_Display 047D                                  ?_SPI_Initialize 0070  
                    __end_of_temperature_display 0D21                                  __initialization 0015  
                            __end_of_Key_Process 05DA                                 ?_I2C_Send_Buffer 0076  
                                   __end_of_main 047D                                   WriteAll_1621@i 0024  
                                 WriteAll_1621@p 0020                                 __end_of_Key_Scan 0AFC  
                                  main@data_temp 0160                                   ??_EUSART_Write 0073  
                           ?_Bq32k_Rtc_Read_Time 0070                      __end_of_temperature_process 0CE4  
                          __end_of_Sleep_process 09B5                                   __CFG_LPBOR$OFF 0000  
   maxim_31856_write_register@uch_register_value 0074                      ?_INTERRUPT_InterruptManager 0070  
                                  _WriteAll_1621 0C0E                                           ??_main 0062  
                                   Key_Process@i 0060   maxim_31856_write_register@uch_register_address 0075  
                        __size_of_FLASH_ReadWord 0019                          Bq32k_Rtc_Read_Time@temp 0025  
                              I2C_Receive_Byte@i 0075                         __end_of_SPI_Exchange8bit 087C  
                                         _ADCON0 009D                                           _ADCON1 009E  
                      FLASH_WriteBlock@writeAddr 0020                                           _ADRESH 009C  
                                         _ADRESL 009B                                 ___awdiv@dividend 0075  
                                         _APFCON 011D                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         _FVRCON 0117                                           _PMADRH 0192  
                                         _PMADRL 0191                                           _PMDATH 0194  
                                         _PMDATL 0193                                _temperature_value 0065  
                                         _PMCON2 0196                        __size_of_FLASH_EraseBlock 001C  
                                         _OSCCON 0099                                           _SPBRGH 019C  
                                         _SPBRGL 019B                         _Cur_temperature_time_ch1 00B6  
                       _Cur_temperature_time_ch2 00B7                                           _WDTPS0 04B9  
                                         _WDTPS1 04BA                                           _WDTPS2 04BB  
                                         _WDTPS3 04BC                                           _WDTPS4 04BD  
                                         _TRISB1 0469                                           _TRISB3 046B  
                                         _SSPBUF 0211                                    ?_SendCmd_1621 0070  
                                         _SWDTEN 04B8                                    ?_SendBit_1621 0073  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 09EA  
                               SendBit_1621@data 0075                                           ___bmul 08CF  
                                      ??_bcd2bin 0020                                           ___wmul 0A78  
                  FLASH_WriteWord@blockStartAddr 0030                                        ??___awdiv 0077  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0077  
                          ??_Bq32k_Rtc_Read_Time 0023                                        ??___lwdiv 0025  
                                      ??___lwmod 0077                     ?_maxim_31856_read_nregisters 0023  
                            FLASH_WriteWord@word 002D                                   ?_WriteAll_1621 0020  
                               ?_TMR0_Initialize 0070                                           _memset 0A05  
                              ?_I2C_Receive_Byte 0070                                 ___awdiv@quotient 0022  
                                ___awmod@divisor 0073                                           _uch_sr 00C3  
                                ___awmod@counter 0020                                           _rtc_tm 00DA  
                                _Set_finish_flag 083B                                    _I2C_Send_Byte 0DF6  
                             ??_I2C_Receive_Byte 0073                          FLASH_ReadWord@flashAddr 0073  
                                      ?_I2C_Stop 0070                     ??_maxim_31856_write_register 0075  
                          I2C_Read_Buffer@Length 0077                         ADC_GetConversion@channel 0076  
                           __size_of_err_Display 002C                            __end_of_TMR0_CallBack 084B  
                                     bcd2bin@val 0077                       ??_maxim_clear_fault_status 0077  
                                 _Set_start_flag 084B                                _SYSTEM_Initialize 08F5  
                                 ??_SendCmd_1621 0077                          __end_of__initialization 003B  
                                 ??_SendBit_1621 0074                                      _Key_Process 0545  
                             ?_SYSTEM_Initialize 0070                                      ?_Tc_Display 0070  
                             Calculate_Time@temp 0043                              ___bmul@multiplicand 0073  
                              time_Display@F2129 00A8             tc_temperature_trans@temperature_back 0053  
                                 __pcstackCOMMON 0070             tc_temperature_trans@temperature_temp 0059  
                                   __pidataBANK1 087C                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 003F                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074                                 FLASH_WriteWord@i 0032  
            __size_of_maxim_31856_write_register 000D                                    ?_Save_process 0070  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0025  
                        ?_maxim_start_conversion 0070                                   _OPTION_REGbits 0095  
                          TMR0_ISR@CountCallBack 00AC                                  _temperature_int 00B2  
                                     ??_I2C_Stop 0073                                    ??_Two_Display 0025  
                    FLASH_WriteBlock@GIEBitValue 0028                                 Two_Display@F2123 00A0  
                           I2C_Receive_Byte@Data 0074                           __end_of_Set_start_flag 0851  
                            I2C_Read_Buffer@Flag 0022                        __end_of_SYSTEM_Initialize 090A  
                      __size_of_Write_Flash_head 002F                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 0A05                                       __pbssBANK0 0065  
                                     __pbssBANK1 00A0                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                             __end_of_EUSART_Write 086B  
                                __CFG_VCAPEN$OFF 0000                                 ??_FVR_Initialize 0073  
                                     __pmaintext 03A9                                          ?___bmul 0073  
                        __end_of_Set_finish_flag 0840                            ?_tc_temperature_trans 0070  
                                    _Record_flag 006B                                  ??_WriteAll_1621 0077  
                                        ?___wmul 0073                                       ??_TMR0_ISR 0071  
                                 ??_Save_process 004F                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0073  
                 __end_of_maxim_start_conversion 09CF                        __size_of_FLASH_WriteBlock 006B  
                        __size_of_ADC_Initialize 0008                                   _FLASH_ReadWord 0983  
                            __size_of_Tc_Display 00C8                   __size_of_one_temperature_trans 004A  
                  __end_of_one_temperature_trans 0DF6                                          _OSCSTAT 009A  
                       __size_of_Save_Write_time 0072                                          _SSP1ADD 0212  
                       __size_of_Save_Write_word 0036                        _maxim_31856_read_register 08BE  
                                ?_Set_start_flag 0070             __size_of_maxim_31856_read_nregisters 0018  
                                     ??_Key_Scan 0073                                          _Dis_TAB 1000  
                               _FLASH_EraseBlock 0A20                                 ??_SPI_Initialize 0073  
                       __size_of_FLASH_WriteWord 0045                          __size_of_Calculate_Time 019E  
                            __end_of_Two_Display 0C0E                        __size_of_SendDataBit_1621 001E  
                                      _I2C_Start 0951  maxim_31856_read_nregisters@uch_register_address 0027  
                                      _CH1_state 00B4                                        _CH2_state 00B5  
                                        _bcd2bin 08E0                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 0E93  
                                        ___awmod 0D66                                  __size_of___wmul 001E  
                                        ___lwdiv 0C42                                          ___lwmod 0B52  
                                ??_I2C_Send_Byte 0073                      __size_of_Write_Flash_finish 002F  
                              I2C_Send_Byte@Data 0074                           __end_of_FLASH_ReadWord 099C  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 099C                                          __ptext2 0A96  
                                        __ptext3 0EE5                                          __ptext4 0F39  
                                        __ptext5 08F5                                          __ptext6 08AE  
                                        __ptext7 0851                                          __ptext8 0AB7  
                                        __ptext9 0840                             __end_of_SendCmd_1621 0921  
                           SendDataBit_1621@data 0075                             __end_of_SendBit_1621 0A5A  
             __end_of_maxim_31856_write_register 089E                       _maxim_31856_write_register 0891  
                          _OSCILLATOR_Initialize 0840                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 007A  
                                        _uch_cr1 00BE                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 00C4                 __end_of_maxim_clear_fault_status 08AE  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 085E  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 0857                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0021  
                                        initloop 0858                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 0886                           ??_tc_temperature_trans 004F  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0030  
                                      _RCSTAbits 019D                                 ?_Set_finish_flag 0070  
                          Serach_Flash_Head@data 0035                                     __pstringtext 1000  
                      FLASH_ReadWord@GIEBitValue 0075                                       _time_count 006D  
                                ?_FLASH_ReadWord 0073                     __size_of_temperature_display 003D  
                            ??_EUSART_Initialize 0073                                    ?_Step_control 0070  
                                   _display_buff 00E1                         __size_of_I2C_Send_Buffer 003B  
                               __CFG_FOSC$INTOSC 0000                     __size_of_temperature_process 0037  
                          __size_of_EUSART_Write 0008                                      _Two_Display 0BDD  
                              __size_of_I2C_Stop 0019                                 _Write_Flash_head 0BAE  
                            Bq32k_Time_Init@temp 0027                             __end_of_Save_process 0F9C  
                      __size_of_I2C_Receive_Byte 002A                             Key_Process@gKeyValue 005F  
                         __size_of_Sleep_process 0019                        __end_of_EUSART_Initialize 0891  
                            Calculate_Time@temp1 0047                              Calculate_Time@temp2 004B  
                              ??_Save_Write_time 0037                                     ?_Key_Process 0070  
                              ??_Save_Write_word 0035                         ??_SPI_Exchange8bitBuffer 0020  
                                   ??_Tc_Display 0029                      __end_of_Bq32k_Rtc_Read_Time 1000  
                              FLASH_WriteBlock@i 0029                                ??_FLASH_WriteWord 0076  
                   tc_temperature_trans@var_time 0057        maxim_start_conversion@uch_conversion_mode 0020  
                                 __end_of___bmul 08E0                                   __end_of___wmul 0A96  
                                   _EUSART_Write 0863                                __size_of_TMR0_ISR 001B  
                                 _ADC_Initialize 086B                                 _FLASH_WriteBlock 0759  
                                 ??_Step_control 0073                             Key_Process@data_temp 005D  
                         ?_OSCILLATOR_Initialize 0070                                   __end_of_memset 0A20  
                                 Tc_Display@data 002B                                 WriteAll_1621@cnt 0022  
                                  ??_err_Display 0025                              start_initialization 0015  
                       __size_of_TMR0_Initialize 0010                               __end_of_Tc_Display 0545  
                __size_of_PIN_MANAGER_Initialize 0022                                ??_I2C_Read_Buffer 0020  
                                 Two_Display@num 0026                                   _Calculate_Time 020B  
                               _SendDataBit_1621 0A5A                                      ??_I2C_Start 0073  
                              __size_of_Key_Scan 0023                                 _temperature_sign 00BA  
             __size_of_maxim_31856_read_register 0011                                  SendBit_1621@cnt 0073  
                                       ??___bmul 0074                __size_of_maxim_clear_fault_status 0010  
                      ?_maxim_clear_fault_status 0070                                         ??___wmul 0077  
                          __size_of_SendCmd_1621 0017                            __size_of_SendBit_1621 001E  
                            I2C_Send_Buffer@Flag 0024                           __size_of_TMR0_CallBack 0006  
                         __end_of_ADC_Initialize 0873                                      __pdataBANK1 00E5  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                    FLASH_EraseBlock@GIEBitValue 0075                         __end_of_FLASH_EraseBlock 0A3C  
                                  _Sleep_process 099C                                 ??_Set_start_flag 0073  
                                    __pbssCOMMON 0078                                  _CH1_temperature 0069  
                                      ___latbits 0003                                    __pcstackBANK0 0020  
                                  __pcstackBANK2 0160                             __end_of_time_Display 066F  
                  SPI_Exchange8bitBuffer@dataOut 0075                           __end_of_Calculate_Time 03A9  
                              ??_I2C_Send_Buffer 0020                              __end_of_err_Display 0B52  
                     __size_of_EUSART_Initialize 000B                               I2C_Read_Buffer@ADD 0021  
                                   _LongPressSec 00B8                                Two_Display@number 002A  
                                   _SendCmd_1621 090A                                     _SendBit_1621 0A3C  
                                      __pnvBANK1 00EF                  __size_of_SPI_Exchange8bitBuffer 0051  
                               ___lwdiv@dividend 0023                           _PIN_MANAGER_Initialize 0AB7  
                                    _MAX31856Sec 00B9                __end_of_maxim_31856_read_register 08CF  
                                       ?_bcd2bin 0070                                         ?___awdiv 0073  
                                       ?___awmod 0073              __end_of_maxim_31856_read_nregisters 0951  
                    _maxim_31856_read_nregisters 0939                                         ?___lwdiv 0021  
                                       ?___lwmod 0073                                  ?_ADC_Initialize 0070  
                              SendDataBit_1621@i 0076                                   ?_Sleep_process 0070  
                          __end_of_WriteAll_1621 0C42                     ??_INTERRUPT_InterruptManager 0072  
                    ?_maxim_31856_write_register 0074                                         _I2C_Stop 096A  
                          __size_of_Save_process 0063                                  _CH2_temperature 0078  
                               I2C_Send_Buffer@i 0023                                 __CFG_WDTE$SWDTEN 0000  
                               ___lwdiv@quotient 0027                                    _TMR0_CallBack 0845  
                                ?_Calculate_Time 0070                              _temperature_decimal 006C  
                          _one_temperature_trans 0DAC                                 _I2C_Receive_Byte 0AFC  
                            SendDataBit_1621@cnt 0073                         FLASH_WriteWord@flashAddr 002A  
                                 err_Display@num 0026                   FLASH_WriteBlock@blockStartAddr 0026  
          maxim_31856_read_nregisters@uch_nBytes 0024                              _temperature_display 0CE4  
                              ??_TMR0_Initialize 0073                                   ___wmul@product 0020  
                           __end_of_Step_control 0AB7                                        clear_ram0 085D  
                                      _uch_ltcbh 00BF                                        _uch_ltcbl 00C0  
                                      _uch_ltcbm 00C1                             __size_of_Key_Process 0095  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0CAD  
                                       _PIR1bits 0011                        FLASH_EraseBlock@startAddr 0073  
                               ??_FLASH_ReadWord 0075                        __size_of_SPI_Exchange8bit 0009  
                     __end_of_Write_Flash_finish 0BAE                                         _SSP1CON1 0215  
                                       _TMR0_ISR 09CF                         __end_of_Write_Flash_head 0BDD  
                                       _SSP1STAT 0214                                     _Save_process 0F39  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0E42  
                                     _ADCON0bits 009D                                ___wmul@multiplier 0073  
                        __size_of_FVR_Initialize 0004                           _SPI_Exchange8bitBuffer 0E42  
                                 _Cur_Save_Index 00AE                                      _err_Display 0B26  
                            Save_Write_word@data 0033                             ?_temperature_process 0070  
                                _Save_Write_time 06E7                                  _Save_Write_word 0C77  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                _FLASH_WriteWord 0D21                                         _Key_Scan 0AD9  
            maxim_31856_read_nregisters@uch_buff 0023                         __end_of_FLASH_WriteBlock 07C4  
                              _Serach_Flash_Head 0EE5                         __size_of_Bq32k_Time_Init 001B  
                             ?_Serach_Flash_Head 0070                                _ADC_GetConversion 0921  
                       ??_maxim_start_conversion 0077                               I2C_Send_Buffer@ADD 0022  
                                ??_Sleep_process 0074                    __size_of_tc_temperature_trans 01CC  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0037  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 005B                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 066F                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0033  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2126 00A4                         __end_of_SendDataBit_1621 0A78  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0021                                  ___lwdiv@counter 0026  
                                       __ptext10 0837                                         __ptext11 0886  
                                       __ptext20 020B                                         __ptext12 086B  
                                       __ptext21 0A78                                         __ptext13 0545  
                                       __ptext30 0F9C                                         __ptext22 0BAE  
                                       __ptext14 0CAD                                         __ptext31 08E0  
                                       __ptext23 0B7F                                         __ptext15 05DA  
                                       __ptext40 0C42                                         __ptext32 08CF  
                                       __ptext24 06E7                                         __ptext16 0D66  
                                       __ptext41 0DAC                                         __ptext33 066F  
                                       __ptext25 0C77                                         __ptext17 0E93  
                                       __ptext50 0A5A                                         __ptext42 09B5  
                                       __ptext34 0AFC                                         __ptext26 0D21  
                                       __ptext18 0CE4                                         __ptext51 084B  
                                       __ptext43 0891                                         __ptext35 089E  
                                       __ptext27 0759                                         __ptext19 003F  
                                       __ptext60 0951                                         __ptext52 083B  
                                       __ptext44 08BE                                         __ptext36 0B26  
                                       __ptext28 0A20                                         __ptext61 0DF6  
                                       __ptext53 090A                                         __ptext45 0939  
                                       __ptext37 047D                                         __ptext29 0983  
                                       __ptext62 0921                                         __ptext54 0A3C  
                                       __ptext46 0E42                                         __ptext38 0A05  
                                       __ptext55 0AD9                                         __ptext47 0873  
                                       __ptext39 0B52                                         __ptext64 09CF  
                                       __ptext56 0863                                         __ptext48 0BDD  
                                       __ptext65 0845                                         __ptext57 09EA  
                                       __ptext49 0C0E                                         __ptext58 07C4  
                                       __ptext59 096A                           ?_one_temperature_trans 0070  
                                   _SSP1CON1bits 0215                            FLASH_WriteWord@ramBuf 002C  
                          FLASH_WriteWord@offset 002F                        __end_of_Serach_Flash_Head 0F39  
                                  __size_of_main 00D4       maxim_31856_read_register@uch_register_data 0076  
                      __end_of_ADC_GetConversion 0939                                         _uch_cjth 00BC  
                                       _uch_cjtl 00BD                                         _uch_mask 00C2  
                           Save_process@var_time 0051                                         int$flags 007E  
                                   _time_Display 05DA                                         _tmr_flag 00BB  
             __end_of_INTERRUPT_InterruptManager 0013                       _INTERRUPT_InterruptManager 0004  
                   __size_of_Bq32k_Rtc_Read_Time 0064                                     _SSP1STATbits 0214  
                        __end_of_Save_Write_time 0759                          __end_of_Save_Write_word 0CAD  
                                _I2C_Send_Buffer 07C4                                ?_FLASH_EraseBlock 0073  
                             ??_FLASH_EraseBlock 0075                                       _INTCONbits 000B  
                        __end_of_FLASH_WriteWord 0D66                                  ??_TMR0_CallBack 0070  
                                     _FVRCONbits 0117                                  Key_Scan@Key_val 0075  
                                  SendBit_1621@i 0076                                         memset@p1 0020  
                          __size_of_Step_control 0021                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 06E7                                 _SPI_Exchange8bit 0873  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 0B26  
                         Serach_Flash_Head@count 0034                                ??_Bq32k_Time_Init 0025  
                                 _FVR_Initialize 0837                                     _rtc_save_ch1 00CC  
                                   _rtc_save_ch2 00D3                                       _OPTION_REG 0095  
                                   _Step_control 0A96                                 ??_Calculate_Time 0039  
                                ___lwmod@divisor 0073                                  _TMR0_Initialize 08AE  
                                ___lwmod@counter 0020         tc_temperature_trans@temperature_absolute 0055  
                              ??_Set_finish_flag 0073                               EUSART_Write@txData 0073  
                           __size_of_Two_Display 0031                   __end_of_PIN_MANAGER_Initialize 0AD9  
                     __size_of_Serach_Flash_Head 0054                             Bq32k_Time_Init@F2018 00E5  
                     __size_of_ADC_GetConversion 0018                         _maxim_clear_fault_status 089E  
