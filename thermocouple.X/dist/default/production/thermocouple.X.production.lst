

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jul 08 11:03:02 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020D                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0FE4                     	;# 
   185  0FE5                     	;# 
   186  0FE6                     	;# 
   187  0FE7                     	;# 
   188  0FE8                     	;# 
   189  0FE9                     	;# 
   190  0FEA                     	;# 
   191  0FEB                     	;# 
   192  0FED                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020D                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020D                     	;# 
   379  0210                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0095                     	;# 
   673  0096                     	;# 
   674  0097                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0291                     	;# 
   729  0291                     	;# 
   730  0292                     	;# 
   731  0293                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  008C                     	;# 
   778  008D                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020D                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0298                     	;# 
   844  0298                     	;# 
   845  0299                     	;# 
   846  029A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  008E                     	;# 
   891  0090                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009B                     	;# 
   901  009C                     	;# 
   902  009D                     	;# 
   903  009E                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0194                     	;# 
   919  0195                     	;# 
   920  0196                     	;# 
   921  0197                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0090                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018E                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0197                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  0394                     	;# 
  1070  0395                     	;# 
  1071  0396                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0090                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019C                     	;# 
  1151  019C                     	;# 
  1152  019D                     	;# 
  1153  019E                     	;# 
  1154  019F                     	;# 
  1155  020D                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0298                     	;# 
  1177  0298                     	;# 
  1178  0299                     	;# 
  1179  029A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  011D                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  018E                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019C                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020D                     	;# 
  1267  0210                     	;# 
  1268  0211                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0212                     	;# 
  1272  0213                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  0394                     	;# 
  1292  0395                     	;# 
  1293  0396                     	;# 
  1294  0FE4                     	;# 
  1295  0FE5                     	;# 
  1296  0FE6                     	;# 
  1297  0FE7                     	;# 
  1298  0FE8                     	;# 
  1299  0FE9                     	;# 
  1300  0FEA                     	;# 
  1301  0FEB                     	;# 
  1302  0FED                     	;# 
  1303  0FEE                     	;# 
  1304  0FEF                     	;# 
  1305  0000                     	;# 
  1306  0001                     	;# 
  1307  0002                     	;# 
  1308  0003                     	;# 
  1309  0004                     	;# 
  1310  0005                     	;# 
  1311  0006                     	;# 
  1312  0007                     	;# 
  1313  0008                     	;# 
  1314  0009                     	;# 
  1315  000A                     	;# 
  1316  000B                     	;# 
  1317  000C                     	;# 
  1318  000D                     	;# 
  1319  000E                     	;# 
  1320  0010                     	;# 
  1321  0011                     	;# 
  1322  0012                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0016                     	;# 
  1326  0017                     	;# 
  1327  0018                     	;# 
  1328  0019                     	;# 
  1329  001A                     	;# 
  1330  001B                     	;# 
  1331  001C                     	;# 
  1332  008C                     	;# 
  1333  008D                     	;# 
  1334  008E                     	;# 
  1335  0090                     	;# 
  1336  0091                     	;# 
  1337  0092                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0099                     	;# 
  1342  009A                     	;# 
  1343  009B                     	;# 
  1344  009B                     	;# 
  1345  009C                     	;# 
  1346  009D                     	;# 
  1347  009E                     	;# 
  1348  010C                     	;# 
  1349  010D                     	;# 
  1350  010E                     	;# 
  1351  0116                     	;# 
  1352  0117                     	;# 
  1353  011D                     	;# 
  1354  018C                     	;# 
  1355  018D                     	;# 
  1356  018E                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0194                     	;# 
  1363  0195                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0214                     	;# 
  1387  0215                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0216                     	;# 
  1391  0216                     	;# 
  1392  0217                     	;# 
  1393  0217                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  0394                     	;# 
  1403  0395                     	;# 
  1404  0396                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0095                     	;# 
  1450  0096                     	;# 
  1451  0097                     	;# 
  1452  0099                     	;# 
  1453  009A                     	;# 
  1454  009B                     	;# 
  1455  009B                     	;# 
  1456  009C                     	;# 
  1457  009D                     	;# 
  1458  009E                     	;# 
  1459  010C                     	;# 
  1460  010D                     	;# 
  1461  010E                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  011D                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0194                     	;# 
  1474  0195                     	;# 
  1475  0196                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019C                     	;# 
  1484  019C                     	;# 
  1485  019D                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  020D                     	;# 
  1489  0210                     	;# 
  1490  0211                     	;# 
  1491  0211                     	;# 
  1492  0212                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0214                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0216                     	;# 
  1502  0216                     	;# 
  1503  0217                     	;# 
  1504  0217                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  0394                     	;# 
  1514  0395                     	;# 
  1515  0396                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  008C                     	;# 
  1555  008D                     	;# 
  1556  008E                     	;# 
  1557  0090                     	;# 
  1558  0091                     	;# 
  1559  0092                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0099                     	;# 
  1564  009A                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020D                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0015                     	;# 
  1657  0016                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  0019                     	;# 
  1662  001A                     	;# 
  1663  001B                     	;# 
  1664  001C                     	;# 
  1665  008C                     	;# 
  1666  008D                     	;# 
  1667  008E                     	;# 
  1668  0090                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  010C                     	;# 
  1682  010D                     	;# 
  1683  010E                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  011D                     	;# 
  1687  018C                     	;# 
  1688  018D                     	;# 
  1689  018E                     	;# 
  1690  0191                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  019C                     	;# 
  1707  019D                     	;# 
  1708  019E                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0214                     	;# 
  1720  0215                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0291                     	;# 
  1728  0291                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  029A                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0015                     	;# 
  1768  0016                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001B                     	;# 
  1775  001C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  0090                     	;# 
  1780  0091                     	;# 
  1781  0092                     	;# 
  1782  0095                     	;# 
  1783  0096                     	;# 
  1784  0097                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0116                     	;# 
  1796  0117                     	;# 
  1797  011D                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  0191                     	;# 
  1802  0191                     	;# 
  1803  0192                     	;# 
  1804  0193                     	;# 
  1805  0193                     	;# 
  1806  0194                     	;# 
  1807  0195                     	;# 
  1808  0196                     	;# 
  1809  0197                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019D                     	;# 
  1819  019E                     	;# 
  1820  019F                     	;# 
  1821  020D                     	;# 
  1822  0210                     	;# 
  1823  0211                     	;# 
  1824  0211                     	;# 
  1825  0212                     	;# 
  1826  0212                     	;# 
  1827  0213                     	;# 
  1828  0213                     	;# 
  1829  0214                     	;# 
  1830  0214                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0216                     	;# 
  1835  0216                     	;# 
  1836  0217                     	;# 
  1837  0217                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0298                     	;# 
  1843  0298                     	;# 
  1844  0299                     	;# 
  1845  029A                     	;# 
  1846  0394                     	;# 
  1847  0395                     	;# 
  1848  0396                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0015                     	;# 
  1879  0016                     	;# 
  1880  0016                     	;# 
  1881  0017                     	;# 
  1882  0018                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  008E                     	;# 
  1890  0090                     	;# 
  1891  0091                     	;# 
  1892  0092                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0099                     	;# 
  1897  009A                     	;# 
  1898  009B                     	;# 
  1899  009B                     	;# 
  1900  009C                     	;# 
  1901  009D                     	;# 
  1902  009E                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  020D                     	;# 
  1933  0210                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0291                     	;# 
  1950  0291                     	;# 
  1951  0292                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  0394                     	;# 
  1958  0395                     	;# 
  1959  0396                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971                           
  1972                           	psect	idataBANK1
  1973  08A9                     __pidataBANK1:	
  1974                           
  1975                           ;initializer for Bq32k_Time_Init@F2018
  1976  08A9  3401               	retlw	1
  1977  08AA  3450               	retlw	80
  1978  08AB  3423               	retlw	35
  1979  08AC  3402               	retlw	2
  1980  08AD  3408               	retlw	8
  1981  08AE  3407               	retlw	7
  1982  08AF  3416               	retlw	22
  1983  08B0  3400               	retlw	0
  1984  08B1  3400               	retlw	0
  1985  08B2  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _Dis_TAB:	
  1990  1000  34D7               	retlw	215
  1991  1001  3450               	retlw	80
  1992  1002  34B5               	retlw	181
  1993  1003  34F1               	retlw	241
  1994  1004  3472               	retlw	114
  1995  1005  34E3               	retlw	227
  1996  1006  34E7               	retlw	231
  1997  1007  3451               	retlw	81
  1998  1008  34F7               	retlw	247
  1999  1009  34F3               	retlw	243
  2000  100A  3477               	retlw	119
  2001  100B  34E6               	retlw	230
  2002  100C  3487               	retlw	135
  2003  100D  34F4               	retlw	244
  2004  100E  34A7               	retlw	167
  2005  100F  3427               	retlw	39
  2006  1010  3457               	retlw	87
  2007  1011  3420               	retlw	32
  2008  1012  3420               	retlw	32
  2009  1013  3420               	retlw	32
  2010  1014  3420               	retlw	32
  2011  1015                     __end_of_Dis_TAB:	
  2012                           
  2013                           	psect	nvBANK1
  2014  00EB                     __pnvBANK1:	
  2015  00EB                     _timer0ReloadVal:	
  2016  00EB                     	ds	1
  2017  000B                     _INTCONbits	set	11
  2018  0011                     _PIR1bits	set	17
  2019  0015                     _TMR0	set	21
  2020  0067                     _RA7	set	103
  2021  0069                     _RB1	set	105
  2022  006B                     _RB3	set	107
  2023  006D                     _RB5	set	109
  2024  009D                     _ADCON0	set	157
  2025  009D                     _ADCON0bits	set	157
  2026  009E                     _ADCON1	set	158
  2027  009C                     _ADRESH	set	156
  2028  009B                     _ADRESL	set	155
  2029  0095                     _OPTION_REG	set	149
  2030  0095                     _OPTION_REGbits	set	149
  2031  0099                     _OSCCON	set	153
  2032  009A                     _OSCSTAT	set	154
  2033  008C                     _TRISA	set	140
  2034  008D                     _TRISB	set	141
  2035  008E                     _TRISC	set	142
  2036  0469                     _TRISB1	set	1129
  2037  046B                     _TRISB3	set	1131
  2038  011D                     _APFCON	set	285
  2039  0117                     _FVRCON	set	279
  2040  0117                     _FVRCONbits	set	279
  2041  010C                     _LATA	set	268
  2042  010D                     _LATB	set	269
  2043  010E                     _LATC	set	270
  2044  0860                     _LATA0	set	2144
  2045  0861                     _LATA1	set	2145
  2046  0862                     _LATA2	set	2146
  2047  0863                     _LATA3	set	2147
  2048  0864                     _LATA4	set	2148
  2049  0865                     _LATA5	set	2149
  2050  0868                     _LATB0	set	2152
  2051  0869                     _LATB1	set	2153
  2052  0870                     _LATC0	set	2160
  2053  0871                     _LATC1	set	2161
  2054  0872                     _LATC2	set	2162
  2055  018C                     _ANSELA	set	396
  2056  018D                     _ANSELB	set	397
  2057  018E                     _ANSELC	set	398
  2058  019F                     _BAUDCON	set	415
  2059  0192                     _PMADRH	set	402
  2060  0191                     _PMADRL	set	401
  2061  0195                     _PMCON1bits	set	405
  2062  0196                     _PMCON2	set	406
  2063  0194                     _PMDATH	set	404
  2064  0193                     _PMDATL	set	403
  2065  0199                     _RCREG	set	409
  2066  019D                     _RCSTA	set	413
  2067  019D                     _RCSTAbits	set	413
  2068  019C                     _SPBRGH	set	412
  2069  019B                     _SPBRGL	set	411
  2070  019A                     _TXREG	set	410
  2071  019E                     _TXSTA	set	414
  2072  0212                     _SSP1ADD	set	530
  2073  0215                     _SSP1CON1	set	533
  2074  0215                     _SSP1CON1bits	set	533
  2075  0214                     _SSP1STAT	set	532
  2076  0214                     _SSP1STATbits	set	532
  2077  0211                     _SSPBUF	set	529
  2078  020D                     _WPUB	set	525
  2079  0210                     _WPUE	set	528
  2080                           
  2081                           ; #config settings
  2082  0000                     
  2083                           	psect	cinit
  2084  0015                     start_initialization:	
  2085  0015                     __initialization:	
  2086                           
  2087                           ; Clear objects allocated to COMMON
  2088  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2089  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2090  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2091                           
  2092                           ; Clear objects allocated to BANK0
  2093  0018  3061               	movlw	low __pbssBANK0
  2094  0019  0084               	movwf	4
  2095  001A  3000               	movlw	high __pbssBANK0
  2096  001B  0085               	movwf	5
  2097  001C  300D               	movlw	13
  2098  001D  3188  208A  3180   	fcall	clear_ram0
  2099                           
  2100                           ; Clear objects allocated to BANK1
  2101  0020  30A0               	movlw	low __pbssBANK1
  2102  0021  0084               	movwf	4
  2103  0022  3000               	movlw	high __pbssBANK1
  2104  0023  0085               	movwf	5
  2105  0024  3041               	movlw	65
  2106  0025  3188  208A  3180   	fcall	clear_ram0
  2107                           
  2108                           ; Clear objects allocated to BANK2
  2109  0028  3020               	movlw	low __pbssBANK2
  2110  0029  0084               	movwf	4
  2111  002A  3001               	movlw	high __pbssBANK2
  2112  002B  0085               	movwf	5
  2113  002C  3040               	movlw	64
  2114  002D  3188  208A  3180   	fcall	clear_ram0
  2115                           
  2116                           ; Initialize objects allocated to BANK1
  2117  0030  30A9               	movlw	low __pidataBANK1
  2118  0031  0084               	movwf	4
  2119  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2120  0033  0085               	movwf	5
  2121  0034  30E1               	movlw	low __pdataBANK1
  2122  0035  0086               	movwf	6
  2123  0036  3000               	movlw	high __pdataBANK1
  2124  0037  0087               	movwf	7
  2125  0038  300A               	movlw	10
  2126  0039  3188  2084         	fcall	init_ram
  2127  003B                     end_of_initialization:	
  2128                           ;End of C runtime variable initialization code
  2129                           
  2130  003B                     __end_of__initialization:	
  2131  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2132  003C  0020               	movlb	0
  2133  003D  3183  2B88         	ljmp	_main	;jump to C main() function
  2134                           
  2135                           	psect	bssCOMMON
  2136  0078                     __pbssCOMMON:	
  2137  0078                     _temperature_int:	
  2138  0078                     	ds	2
  2139  007A                     _uch_cr0:	
  2140  007A                     	ds	1
  2141                           
  2142                           	psect	bssBANK0
  2143  0061                     __pbssBANK0:	
  2144  0061                     _temperature_value:	
  2145  0061                     	ds	4
  2146  0065                     _CH1_temperature:	
  2147  0065                     	ds	2
  2148  0067                     _CH2_temperature:	
  2149  0067                     	ds	2
  2150  0069                     _LongPressSec:	
  2151  0069                     	ds	1
  2152  006A                     _Record_flag:	
  2153  006A                     	ds	1
  2154  006B                     _temperature_decimal:	
  2155  006B                     	ds	1
  2156  006C                     _time_count:	
  2157  006C                     	ds	1
  2158  006D                     _uch_ltcbh:	
  2159  006D                     	ds	1
  2160                           
  2161                           	psect	bssBANK1
  2162  00A0                     __pbssBANK1:	
  2163  00A0                     Two_Display@F2123:	
  2164  00A0                     	ds	4
  2165  00A4                     err_Display@F2126:	
  2166  00A4                     	ds	4
  2167  00A8                     time_Display@F2129:	
  2168  00A8                     	ds	4
  2169  00AC                     TMR0_ISR@CountCallBack:	
  2170  00AC                     	ds	2
  2171  00AE                     _Cur_Save_Index:	
  2172  00AE                     	ds	2
  2173  00B0                     _Cur_temperature:	
  2174  00B0                     	ds	2
  2175  00B2                     _CH1_state:	
  2176  00B2                     	ds	1
  2177  00B3                     _CH2_state:	
  2178  00B3                     	ds	1
  2179  00B4                     _Cur_temperature_time_ch1:	
  2180  00B4                     	ds	1
  2181  00B5                     _Cur_temperature_time_ch2:	
  2182  00B5                     	ds	1
  2183  00B6                     _MAX31856Sec:	
  2184  00B6                     	ds	1
  2185  00B7                     _temperature_sign:	
  2186  00B7                     	ds	1
  2187  00B8                     _tmr_flag:	
  2188  00B8                     	ds	1
  2189  00B9                     _uch_cjth:	
  2190  00B9                     	ds	1
  2191  00BA                     _uch_cjtl:	
  2192  00BA                     	ds	1
  2193  00BB                     _uch_cr1:	
  2194  00BB                     	ds	1
  2195  00BC                     _uch_ltcbl:	
  2196  00BC                     	ds	1
  2197  00BD                     _uch_ltcbm:	
  2198  00BD                     	ds	1
  2199  00BE                     _uch_mask:	
  2200  00BE                     	ds	1
  2201  00BF                     _uch_sr:	
  2202  00BF                     	ds	1
  2203  00C0                     _uch_reg:	
  2204  00C0                     	ds	8
  2205  00C8                     _rtc_save_ch1:	
  2206  00C8                     	ds	7
  2207  00CF                     _rtc_save_ch2:	
  2208  00CF                     	ds	7
  2209  00D6                     _rtc_tm:	
  2210  00D6                     	ds	7
  2211  00DD                     _display_buff:	
  2212  00DD                     	ds	4
  2213                           
  2214                           	psect	dataBANK1
  2215  00E1                     __pdataBANK1:	
  2216  00E1                     Bq32k_Time_Init@F2018:	
  2217  00E1                     	ds	10
  2218                           
  2219                           	psect	bssBANK2
  2220  0120                     __pbssBANK2:	
  2221  0120                     _Flash_buff:	
  2222  0120                     	ds	64
  2223                           
  2224                           	psect	clrtext
  2225  088A                     clear_ram0:	
  2226                           ;	Called with FSR0 containing the base address, and
  2227                           ;	WREG with the size to clear
  2228                           
  2229  088A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2230  088B                     clrloop0:	
  2231  088B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2232  088C  3101               	addfsr 0,1
  2233  088D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2234  088E  288B               	goto	clrloop0	;have we reached the end yet?
  2235  088F  3400               	retlw	0	;all done for this memory range, return
  2236                           
  2237                           	psect	inittext
  2238  0884                     init_ram:	
  2239  0884  00FE               	movwf	126
  2240  0885                     initloop:	
  2241  0885  0012               	moviw fsr0++
  2242  0886  001E               	movwi fsr1++
  2243  0887  0BFE               	decfsz	126,f
  2244  0888  2885               	goto	initloop
  2245  0889  3400               	retlw	0
  2246                           
  2247                           	psect	cstackBANK2
  2248  0160                     __pcstackBANK2:	
  2249  0160                     main@data_temp:	
  2250                           
  2251                           ; 2 bytes @ 0x0
  2252  0160                     	ds	2
  2253  0162                     main@i:	
  2254                           
  2255                           ; 1 bytes @ 0x2
  2256  0162                     	ds	1
  2257  0163                     main@bat_data:	
  2258                           
  2259                           ; 2 bytes @ 0x3
  2260  0163                     	ds	2
  2261                           
  2262                           	psect	cstackCOMMON
  2263  0070                     __pcstackCOMMON:	
  2264  0070                     ?_OSCILLATOR_Initialize:	
  2265  0070                     ?_SPI_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_EUSART_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_ADC_Initialize:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_TMR0_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_FVR_Initialize:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_TMR0_CallBack:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_TMR0_CallBack:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_maxim_31856_init:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Bq32k_Time_Init:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_SendCmd_1621:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Serach_Flash_Head:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_temperature_process:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_Save_process:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_Calculate_Time:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_Tc_Display:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_err_Display:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_Two_Display:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_time_Display:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_Bq32k_Rtc_Read_Time:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_Set_start_flag:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_Write_Flash_head:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_Save_Write_time:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_Set_finish_flag:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_Write_Flash_finish:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_bcd2bin:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_PIN_MANAGER_Initialize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_SYSTEM_Initialize:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_SPI_Exchange8bit:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_EUSART_Write:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_TMR0_ISR:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_INTERRUPT_InterruptManager:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_maxim_31856_read_register:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_maxim_start_conversion:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_maxim_clear_fault_status:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_tc_temperature_trans:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_one_temperature_trans:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_temperature_display:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_I2C_Start:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_Send_Byte:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_I2C_Receive_Byte:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_I2C_Stop:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_Key_Scan:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_Key_Process:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397                           
  2398                           ; 2 bytes @ 0x0
  2399  0070                     	ds	1
  2400  0071                     ??_TMR0_ISR:	
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_INTERRUPT_InterruptManager:	
  2405                           
  2406                           ; 1 bytes @ 0x2
  2407  0072                     	ds	1
  2408  0073                     ??_OSCILLATOR_Initialize:	
  2409  0073                     ??_SPI_Initialize:	
  2410                           ; 1 bytes @ 0x3
  2411                           
  2412  0073                     ??_EUSART_Initialize:	
  2413                           ; 1 bytes @ 0x3
  2414                           
  2415  0073                     ??_ADC_Initialize:	
  2416                           ; 1 bytes @ 0x3
  2417                           
  2418  0073                     ??_TMR0_Initialize:	
  2419                           ; 1 bytes @ 0x3
  2420                           
  2421  0073                     ??_FVR_Initialize:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0073                     ?_FLASH_EraseBlock:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0073                     ?_memset:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0073                     ??_Set_start_flag:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0073                     ??_Set_finish_flag:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436  0073                     ??_PIN_MANAGER_Initialize:	
  2437                           ; 1 bytes @ 0x3
  2438                           
  2439  0073                     ??_SPI_Exchange8bit:	
  2440                           ; 1 bytes @ 0x3
  2441                           
  2442  0073                     ??_EUSART_Write:	
  2443                           ; 1 bytes @ 0x3
  2444                           
  2445  0073                     ?_SendBit_1621:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ?_SendDataBit_1621:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ??_I2C_Start:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ??_I2C_Send_Byte:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_I2C_Receive_Byte:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??_I2C_Stop:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     ??_Key_Scan:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     ?___bmul:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     ?_FLASH_ReadWord:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     ?_ADC_GetConversion:	
  2473                           ; 2 bytes @ 0x3
  2474                           
  2475  0073                     ?___wmul:	
  2476                           ; 2 bytes @ 0x3
  2477                           
  2478  0073                     ?___awdiv:	
  2479                           ; 2 bytes @ 0x3
  2480                           
  2481  0073                     ?___awmod:	
  2482                           ; 2 bytes @ 0x3
  2483                           
  2484  0073                     ?___lwmod:	
  2485                           ; 2 bytes @ 0x3
  2486                           
  2487  0073                     SPI_Exchange8bit@data:	
  2488                           ; 2 bytes @ 0x3
  2489                           
  2490  0073                     EUSART_Write@txData:	
  2491                           ; 1 bytes @ 0x3
  2492                           
  2493  0073                     SendBit_1621@cnt:	
  2494                           ; 1 bytes @ 0x3
  2495                           
  2496  0073                     SendDataBit_1621@cnt:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0073                     ___bmul@multiplicand:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0073                     FLASH_ReadWord@flashAddr:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0073                     FLASH_EraseBlock@startAddr:	
  2506                           ; 2 bytes @ 0x3
  2507                           
  2508  0073                     ___wmul@multiplier:	
  2509                           ; 2 bytes @ 0x3
  2510                           
  2511  0073                     ___awdiv@divisor:	
  2512                           ; 2 bytes @ 0x3
  2513                           
  2514  0073                     ___awmod@divisor:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0073                     ___lwmod@divisor:	
  2518                           ; 2 bytes @ 0x3
  2519                           
  2520  0073                     memset@c:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x3
  2525  0073                     	ds	1
  2526  0074                     ??_SYSTEM_Initialize:	
  2527  0074                     ?_SPI_Exchange8bitBuffer:	
  2528                           ; 1 bytes @ 0x4
  2529                           
  2530  0074                     ?_maxim_31856_write_register:	
  2531                           ; 1 bytes @ 0x4
  2532                           
  2533  0074                     ??_maxim_31856_read_register:	
  2534                           ; 1 bytes @ 0x4
  2535                           
  2536  0074                     ??_SendBit_1621:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  0074                     ??_SendDataBit_1621:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  0074                     ??___bmul:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2546                           ; 1 bytes @ 0x4
  2547                           
  2548  0074                     maxim_31856_write_register@uch_register_value:	
  2549                           ; 1 bytes @ 0x4
  2550                           
  2551  0074                     I2C_Send_Byte@Data:	
  2552                           ; 1 bytes @ 0x4
  2553                           
  2554  0074                     I2C_Receive_Byte@Data:	
  2555                           ; 1 bytes @ 0x4
  2556                           
  2557                           
  2558                           ; 1 bytes @ 0x4
  2559  0074                     	ds	1
  2560  0075                     ??_FLASH_EraseBlock:	
  2561  0075                     ??_FLASH_ReadWord:	
  2562                           ; 1 bytes @ 0x5
  2563                           
  2564  0075                     ??_ADC_GetConversion:	
  2565                           ; 1 bytes @ 0x5
  2566                           
  2567  0075                     ??_maxim_31856_write_register:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  0075                     FLASH_ReadWord@GIEBitValue:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     FLASH_EraseBlock@GIEBitValue:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579  0075                     maxim_31856_write_register@uch_register_address:	
  2580                           ; 1 bytes @ 0x5
  2581                           
  2582  0075                     maxim_31856_read_register@uch_register_address:	
  2583                           ; 1 bytes @ 0x5
  2584                           
  2585  0075                     I2C_Send_Byte@i:	
  2586                           ; 1 bytes @ 0x5
  2587                           
  2588  0075                     I2C_Receive_Byte@i:	
  2589                           ; 1 bytes @ 0x5
  2590                           
  2591  0075                     Key_Scan@Key_val:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0075                     ___bmul@product:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597  0075                     ___wmul@multiplicand:	
  2598                           ; 1 bytes @ 0x5
  2599                           
  2600  0075                     ___awdiv@dividend:	
  2601                           ; 2 bytes @ 0x5
  2602                           
  2603  0075                     ___awmod@dividend:	
  2604                           ; 2 bytes @ 0x5
  2605                           
  2606  0075                     ___lwmod@dividend:	
  2607                           ; 2 bytes @ 0x5
  2608                           
  2609  0075                     memset@n:	
  2610                           ; 2 bytes @ 0x5
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x5
  2614  0075                     	ds	1
  2615  0076                     ??_maxim_31856_init:	
  2616  0076                     ??_Serach_Flash_Head:	
  2617                           ; 1 bytes @ 0x6
  2618                           
  2619  0076                     ??_FLASH_WriteWord:	
  2620                           ; 1 bytes @ 0x6
  2621                           
  2622  0076                     ?_I2C_Read_Buffer:	
  2623                           ; 1 bytes @ 0x6
  2624                           
  2625  0076                     ?_I2C_Send_Buffer:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     ADC_GetConversion@channel:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     maxim_31856_read_register@uch_register_data:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     SendBit_1621@data:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640  0076                     SendDataBit_1621@data:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  0076                     I2C_Read_Buffer@buff:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0076                     I2C_Send_Buffer@buff:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649  0076                     ___bmul@multiplier:	
  2650                           ; 1 bytes @ 0x6
  2651                           
  2652                           
  2653                           ; 1 bytes @ 0x6
  2654  0076                     	ds	1
  2655  0077                     ??_Save_Write_word:	
  2656  0077                     ??_memset:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659  0077                     ??_Write_Flash_head:	
  2660                           ; 1 bytes @ 0x7
  2661                           
  2662  0077                     ??_Write_Flash_finish:	
  2663                           ; 1 bytes @ 0x7
  2664                           
  2665  0077                     ??_maxim_start_conversion:	
  2666                           ; 1 bytes @ 0x7
  2667                           
  2668  0077                     ??_maxim_clear_fault_status:	
  2669                           ; 1 bytes @ 0x7
  2670                           
  2671  0077                     ??___wmul:	
  2672                           ; 1 bytes @ 0x7
  2673                           
  2674  0077                     ??___awdiv:	
  2675                           ; 1 bytes @ 0x7
  2676                           
  2677  0077                     ??___awmod:	
  2678                           ; 1 bytes @ 0x7
  2679                           
  2680  0077                     ??___lwmod:	
  2681                           ; 1 bytes @ 0x7
  2682                           
  2683  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2684                           ; 1 bytes @ 0x7
  2685                           
  2686  0077                     SendBit_1621@i:	
  2687                           ; 1 bytes @ 0x7
  2688                           
  2689  0077                     SendDataBit_1621@i:	
  2690                           ; 1 bytes @ 0x7
  2691                           
  2692  0077                     I2C_Read_Buffer@Length:	
  2693                           ; 1 bytes @ 0x7
  2694                           
  2695  0077                     I2C_Send_Buffer@Length:	
  2696                           ; 1 bytes @ 0x7
  2697                           
  2698  0077                     bcd2bin@val:	
  2699                           ; 1 bytes @ 0x7
  2700                           
  2701                           
  2702                           ; 1 bytes @ 0x7
  2703  0077                     	ds	1
  2704  0078                     ??_temperature_process:	
  2705                           
  2706                           	psect	cstackBANK0
  2707  0020                     __pcstackBANK0:	
  2708                           ; 1 bytes @ 0x8
  2709                           
  2710  0020                     ?_FLASH_WriteBlock:	
  2711  0020                     ??_SendCmd_1621:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0020                     ?_WriteAll_1621:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0020                     ??_bcd2bin:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0020                     ??_SPI_Exchange8bitBuffer:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0020                     ??_I2C_Read_Buffer:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0020                     ??_I2C_Send_Buffer:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0020                     maxim_start_conversion@uch_conversion_mode:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0020                     ___awdiv@counter:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0020                     ___awmod@counter:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0020                     ___lwmod@counter:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0020                     memset@p1:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0020                     FLASH_WriteBlock@writeAddr:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0020                     WriteAll_1621@p:	
  2748                           ; 2 bytes @ 0x0
  2749                           
  2750  0020                     Serach_Flash_Head@data:	
  2751                           ; 2 bytes @ 0x0
  2752                           
  2753  0020                     ___wmul@product:	
  2754                           ; 2 bytes @ 0x0
  2755                           
  2756                           
  2757                           ; 2 bytes @ 0x0
  2758  0020                     	ds	1
  2759  0021                     ?___lwdiv:	
  2760  0021                     SendCmd_1621@command:	
  2761                           ; 2 bytes @ 0x1
  2762                           
  2763  0021                     I2C_Read_Buffer@ADD:	
  2764                           ; 1 bytes @ 0x1
  2765                           
  2766  0021                     ___awdiv@sign:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769  0021                     ___awmod@sign:	
  2770                           ; 1 bytes @ 0x1
  2771                           
  2772  0021                     memset@p:	
  2773                           ; 1 bytes @ 0x1
  2774                           
  2775  0021                     ___lwdiv@divisor:	
  2776                           ; 1 bytes @ 0x1
  2777                           
  2778                           
  2779                           ; 2 bytes @ 0x1
  2780  0021                     	ds	1
  2781  0022                     FLASH_WriteBlock@flashWordArray:	
  2782  0022                     WriteAll_1621@cnt:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     I2C_Read_Buffer@Flag:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     I2C_Send_Buffer@ADD:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791  0022                     Serach_Flash_Head@i:	
  2792                           ; 1 bytes @ 0x2
  2793                           
  2794  0022                     ___awdiv@quotient:	
  2795                           ; 2 bytes @ 0x2
  2796                           
  2797                           
  2798                           ; 2 bytes @ 0x2
  2799  0022                     	ds	1
  2800  0023                     ??_FLASH_WriteBlock:	
  2801  0023                     ??_WriteAll_1621:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     ??_Bq32k_Rtc_Read_Time:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     ?_maxim_31856_read_nregisters:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810  0023                     maxim_31856_read_nregisters@uch_buff:	
  2811                           ; 1 bytes @ 0x3
  2812                           
  2813  0023                     I2C_Send_Buffer@i:	
  2814                           ; 1 bytes @ 0x3
  2815                           
  2816  0023                     ___lwdiv@dividend:	
  2817                           ; 1 bytes @ 0x3
  2818                           
  2819                           
  2820                           ; 2 bytes @ 0x3
  2821  0023                     	ds	1
  2822  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2823  0024                     WriteAll_1621@addr:	
  2824                           ; 1 bytes @ 0x4
  2825                           
  2826  0024                     I2C_Send_Buffer@Flag:	
  2827                           ; 1 bytes @ 0x4
  2828                           
  2829                           
  2830                           ; 1 bytes @ 0x4
  2831  0024                     	ds	1
  2832  0025                     ??_Bq32k_Time_Init:	
  2833  0025                     ??_maxim_31856_read_nregisters:	
  2834                           ; 1 bytes @ 0x5
  2835                           
  2836  0025                     ??___lwdiv:	
  2837                           ; 1 bytes @ 0x5
  2838                           
  2839  0025                     WriteAll_1621@i:	
  2840                           ; 1 bytes @ 0x5
  2841                           
  2842  0025                     Bq32k_Rtc_Read_Time@temp:	
  2843                           ; 1 bytes @ 0x5
  2844                           
  2845                           
  2846                           ; 10 bytes @ 0x5
  2847  0025                     	ds	1
  2848  0026                     ??_err_Display:	
  2849  0026                     ??_Two_Display:	
  2850                           ; 1 bytes @ 0x6
  2851                           
  2852  0026                     ___lwdiv@counter:	
  2853                           ; 1 bytes @ 0x6
  2854                           
  2855  0026                     FLASH_WriteBlock@blockStartAddr:	
  2856                           ; 1 bytes @ 0x6
  2857                           
  2858                           
  2859                           ; 2 bytes @ 0x6
  2860  0026                     	ds	1
  2861  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2862  0027                     ___lwdiv@quotient:	
  2863                           ; 1 bytes @ 0x7
  2864                           
  2865  0027                     Two_Display@num:	
  2866                           ; 2 bytes @ 0x7
  2867                           
  2868  0027                     err_Display@num:	
  2869                           ; 4 bytes @ 0x7
  2870                           
  2871  0027                     Bq32k_Time_Init@temp:	
  2872                           ; 4 bytes @ 0x7
  2873                           
  2874                           
  2875                           ; 10 bytes @ 0x7
  2876  0027                     	ds	1
  2877  0028                     ??_one_temperature_trans:	
  2878  0028                     FLASH_WriteBlock@GIEBitValue:	
  2879                           ; 1 bytes @ 0x8
  2880                           
  2881                           
  2882                           ; 1 bytes @ 0x8
  2883  0028                     	ds	1
  2884  0029                     ??_Tc_Display:	
  2885  0029                     FLASH_WriteBlock@i:	
  2886                           ; 1 bytes @ 0x9
  2887                           
  2888                           
  2889                           ; 1 bytes @ 0x9
  2890  0029                     	ds	1
  2891  002A                     ?_FLASH_WriteWord:	
  2892  002A                     Tc_Display@count:	
  2893                           ; 1 bytes @ 0xA
  2894                           
  2895  002A                     FLASH_WriteWord@flashAddr:	
  2896                           ; 1 bytes @ 0xA
  2897                           
  2898                           
  2899                           ; 2 bytes @ 0xA
  2900  002A                     	ds	1
  2901  002B                     Two_Display@number:	
  2902  002B                     Tc_Display@data:	
  2903                           ; 1 bytes @ 0xB
  2904                           
  2905                           
  2906                           ; 2 bytes @ 0xB
  2907  002B                     	ds	1
  2908  002C                     FLASH_WriteWord@ramBuf:	
  2909                           
  2910                           ; 1 bytes @ 0xC
  2911  002C                     	ds	1
  2912  002D                     FLASH_WriteWord@word:	
  2913                           
  2914                           ; 2 bytes @ 0xD
  2915  002D                     	ds	2
  2916  002F                     FLASH_WriteWord@offset:	
  2917  002F                     Bq32k_Rtc_Read_Time@p:	
  2918                           ; 1 bytes @ 0xF
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0xF
  2922  002F                     	ds	1
  2923  0030                     ??_time_Display:	
  2924  0030                     FLASH_WriteWord@blockStartAddr:	
  2925                           ; 1 bytes @ 0x10
  2926                           
  2927                           
  2928                           ; 2 bytes @ 0x10
  2929  0030                     	ds	2
  2930  0032                     FLASH_WriteWord@i:	
  2931                           
  2932                           ; 1 bytes @ 0x12
  2933  0032                     	ds	1
  2934  0033                     ?_Save_Write_word:	
  2935  0033                     Save_Write_word@data:	
  2936                           ; 1 bytes @ 0x13
  2937                           
  2938  0033                     time_Display@num:	
  2939                           ; 2 bytes @ 0x13
  2940                           
  2941                           
  2942                           ; 4 bytes @ 0x13
  2943  0033                     	ds	2
  2944  0035                     ??_Save_Write_time:	
  2945                           
  2946                           ; 1 bytes @ 0x15
  2947  0035                     	ds	2
  2948  0037                     ??_Calculate_Time:	
  2949                           
  2950                           ; 1 bytes @ 0x17
  2951  0037                     	ds	10
  2952  0041                     Calculate_Time@temp:	
  2953                           
  2954                           ; 4 bytes @ 0x21
  2955  0041                     	ds	4
  2956  0045                     Calculate_Time@temp1:	
  2957                           
  2958                           ; 4 bytes @ 0x25
  2959  0045                     	ds	4
  2960  0049                     Calculate_Time@temp2:	
  2961                           
  2962                           ; 4 bytes @ 0x29
  2963  0049                     	ds	4
  2964  004D                     ??_Save_process:	
  2965  004D                     ??_tc_temperature_trans:	
  2966                           ; 1 bytes @ 0x2D
  2967                           
  2968                           
  2969                           ; 1 bytes @ 0x2D
  2970  004D                     	ds	2
  2971  004F                     Save_process@var_time:	
  2972                           
  2973                           ; 2 bytes @ 0x2F
  2974  004F                     	ds	2
  2975  0051                     tc_temperature_trans@temperature_absolute:	
  2976                           
  2977                           ; 2 bytes @ 0x31
  2978  0051                     	ds	2
  2979  0053                     tc_temperature_trans@var_time:	
  2980                           
  2981                           ; 2 bytes @ 0x33
  2982  0053                     	ds	2
  2983  0055                     tc_temperature_trans@temperature_temp:	
  2984                           
  2985                           ; 2 bytes @ 0x35
  2986  0055                     	ds	2
  2987  0057                     ??_temperature_display:	
  2988                           
  2989                           ; 1 bytes @ 0x37
  2990  0057                     	ds	1
  2991  0058                     ??_Key_Process:	
  2992                           
  2993                           ; 1 bytes @ 0x38
  2994  0058                     	ds	1
  2995  0059                     Key_Process@data_temp:	
  2996                           
  2997                           ; 2 bytes @ 0x39
  2998  0059                     	ds	2
  2999  005B                     Key_Process@gKeyValue:	
  3000                           
  3001                           ; 1 bytes @ 0x3B
  3002  005B                     	ds	1
  3003  005C                     Key_Process@i:	
  3004                           
  3005                           ; 2 bytes @ 0x3C
  3006  005C                     	ds	2
  3007  005E                     ??_main:	
  3008                           
  3009                           ; 1 bytes @ 0x3E
  3010  005E                     	ds	3
  3011                           
  3012                           	psect	maintext
  3013  0388                     __pmaintext:	
  3014 ;;
  3015 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3016 ;;
  3017 ;; *************** function _main *****************
  3018 ;; Defined at:
  3019 ;;		line 65 in file "main.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  bat_data        2    3[BANK2 ] unsigned int 
  3024 ;;  data_temp       2    0[BANK2 ] unsigned int 
  3025 ;;  i               1    2[BANK2 ] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : B1F/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Totals:         0       3       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;Total ram usage:        8 bytes
  3040 ;; Hardware stack levels required when called:   13
  3041 ;; This function calls:
  3042 ;;		_ADC_GetConversion
  3043 ;;		_Bq32k_Time_Init
  3044 ;;		_Key_Process
  3045 ;;		_SYSTEM_Initialize
  3046 ;;		_Save_process
  3047 ;;		_SendCmd_1621
  3048 ;;		_Serach_Flash_Head
  3049 ;;		_WriteAll_1621
  3050 ;;		_maxim_31856_init
  3051 ;;		_temperature_process
  3052 ;; This function is called by:
  3053 ;;		Startup code after reset
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _main
  3059  0388                     _main:	
  3060                           
  3061                           ;main.c: 67: unsigned char i=0;
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3065  0388  0022               	movlb	2	; select bank2
  3066  0389  01E2               	clrf	main@i^(0+256)
  3067                           
  3068                           ;main.c: 69: unsigned int bat_data = 0;
  3069  038A  01E3               	clrf	main@bat_data^(0+256)
  3070  038B  01E4               	clrf	(main@bat_data+1)^(0+256)
  3071                           
  3072                           ;main.c: 70: unsigned int data_temp = 0;
  3073  038C  01E0               	clrf	main@data_temp^(0+256)
  3074  038D  01E1               	clrf	(main@data_temp+1)^(0+256)
  3075                           
  3076                           ;main.c: 72: SYSTEM_Initialize();
  3077  038E  3189  2123  3183   	fcall	_SYSTEM_Initialize
  3078                           
  3079                           ;main.c: 73: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3080  0391  303D               	movlw	61
  3081  0392  0020               	movlb	0	; select bank0
  3082  0393  00E0               	movwf	??_main+2
  3083  0394  30E1               	movlw	225
  3084  0395  00DF               	movwf	??_main+1
  3085  0396  307A               	movlw	122
  3086  0397  00DE               	movwf	??_main
  3087  0398                     u5067:	
  3088  0398  0BDE               	decfsz	??_main,f
  3089  0399  2B98               	goto	u5067
  3090  039A  0BDF               	decfsz	??_main+1,f
  3091  039B  2B98               	goto	u5067
  3092  039C  0BE0               	decfsz	??_main+2,f
  3093  039D  2B98               	goto	u5067
  3094  039E  3200               	nop2
  3095                           
  3096                           ;main.c: 74: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3097  039F  0020               	movlb	0	; select bank0
  3098  03A0  1A8D               	btfsc	13,5	;volatile
  3099  03A1  2BA5               	goto	l370
  3100  03A2  0022               	movlb	2	; select bank2
  3101  03A3  150C               	bsf	12,2	;volatile
  3102  03A4  2BA7               	goto	l372
  3103  03A5                     l370:	
  3104                           ;main.c: 75: else do { LATA2 = 0; } while(0);
  3105                           
  3106  03A5  0022               	movlb	2	; select bank2
  3107  03A6  110C               	bcf	12,2	;volatile
  3108  03A7                     l372:	
  3109                           ;main.c: 76: do { LATA3 = 0; } while(0);
  3110                           
  3111  03A7  118C               	bcf	12,3	;volatile
  3112                           
  3113                           ;main.c: 79: bat_data = 0;
  3114  03A8  01E3               	clrf	main@bat_data^(0+256)
  3115  03A9  01E4               	clrf	(main@bat_data+1)^(0+256)
  3116                           
  3117                           ;main.c: 80: for(i=0;i<16;i++)
  3118  03AA  01E2               	clrf	main@i^(0+256)
  3119  03AB  3010               	movlw	16
  3120  03AC  0262               	subwf	main@i^(0+256),w
  3121  03AD  1803               	btfsc	3,0
  3122  03AE  2BC4               	goto	l5284
  3123  03AF                     l5278:	
  3124                           
  3125                           ;main.c: 81: {
  3126                           ;main.c: 82: bat_data = bat_data + ADC_GetConversion(ADC);
  3127  03AF  300B               	movlw	11
  3128  03B0  3189  21B3  3183   	fcall	_ADC_GetConversion
  3129  03B3  0022               	movlb	2	; select bank2
  3130  03B4  0863               	movf	main@bat_data^(0+256),w
  3131  03B5  0773               	addwf	?_ADC_GetConversion,w
  3132  03B6  00E3               	movwf	main@bat_data^(0+256)
  3133  03B7  0864               	movf	(main@bat_data+1)^(0+256),w
  3134  03B8  3D74               	addwfc	?_ADC_GetConversion+1,w
  3135  03B9  00E4               	movwf	(main@bat_data+1)^(0+256)
  3136  03BA  3001               	movlw	1
  3137  03BB  0020               	movlb	0	; select bank0
  3138  03BC  00DE               	movwf	??_main
  3139  03BD  085E               	movf	??_main,w
  3140  03BE  0022               	movlb	2	; select bank2
  3141  03BF  07E2               	addwf	main@i^(0+256),f
  3142  03C0  3010               	movlw	16
  3143  03C1  0262               	subwf	main@i^(0+256),w
  3144  03C2  1C03               	skipc
  3145  03C3  2BAF               	goto	l5278
  3146  03C4                     l5284:	
  3147                           
  3148                           ;main.c: 83: }
  3149                           ;main.c: 84: bat_data = bat_data>>4;
  3150  03C4  0E63               	swapf	main@bat_data^(0+256),w
  3151  03C5  390F               	andlw	15
  3152  03C6  00E3               	movwf	main@bat_data^(0+256)
  3153  03C7  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3154  03C8  39F0               	andlw	240
  3155  03C9  04E3               	iorwf	main@bat_data^(0+256),f
  3156  03CA  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3157  03CB  390F               	andlw	15
  3158  03CC  00E4               	movwf	(main@bat_data^(0+256)+1)
  3159                           
  3160                           ;main.c: 85: if( bat_data < 800)
  3161  03CD  3003               	movlw	3
  3162  03CE  0264               	subwf	(main@bat_data+1)^(0+256),w
  3163  03CF  3020               	movlw	32
  3164  03D0  1903               	skipnz
  3165  03D1  0263               	subwf	main@bat_data^(0+256),w
  3166  03D2  1803               	skipnc
  3167  03D3  2BD6               	goto	l5288
  3168                           
  3169                           ;main.c: 86: {
  3170                           ;main.c: 87: do { LATA2 = 0; } while(0);
  3171  03D4  110C               	bcf	12,2	;volatile
  3172  03D5                     l379:	
  3173                           ;main.c: 88: while(1);
  3174                           
  3175  03D5  2BD5               	goto	l379
  3176  03D6                     l5288:	
  3177                           
  3178                           ;main.c: 89: }
  3179                           ;main.c: 90: i = 0 ;
  3180  03D6  0022               	movlb	2	; select bank2
  3181  03D7  01E2               	clrf	main@i^(0+256)
  3182                           
  3183                           ;main.c: 91: bat_data = 0 ;
  3184  03D8  01E3               	clrf	main@bat_data^(0+256)
  3185  03D9  01E4               	clrf	(main@bat_data+1)^(0+256)
  3186                           
  3187                           ;main.c: 94: maxim_31856_init();
  3188  03DA  3187  2784  3183   	fcall	_maxim_31856_init
  3189                           
  3190                           ;main.c: 95: do { TRISB3 = 1; } while(0);
  3191  03DD  0021               	movlb	1	; select bank1
  3192  03DE  158D               	bsf	13,3	;volatile
  3193                           
  3194                           ;main.c: 96: Bq32k_Time_Init();
  3195  03DF  318A  2202  3183   	fcall	_Bq32k_Time_Init
  3196                           
  3197                           ;main.c: 97: SendCmd_1621(0x52);
  3198  03E2  3052               	movlw	82
  3199  03E3  3189  2138  3183   	fcall	_SendCmd_1621
  3200                           
  3201                           ;main.c: 98: SendCmd_1621(0X28);
  3202  03E6  3028               	movlw	40
  3203  03E7  3189  2138  3183   	fcall	_SendCmd_1621
  3204                           
  3205                           ;main.c: 99: SendCmd_1621(0x02);
  3206  03EA  3002               	movlw	2
  3207  03EB  3189  2138  3183   	fcall	_SendCmd_1621
  3208                           
  3209                           ;main.c: 100: SendCmd_1621(0x06);
  3210  03EE  3006               	movlw	6
  3211  03EF  3189  2138  3183   	fcall	_SendCmd_1621
  3212                           
  3213                           ;main.c: 102: WriteAll_1621(0,Dis_TAB+17,4);
  3214  03F2  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3215  03F3  0020               	movlb	0	; select bank0
  3216  03F4  00A0               	movwf	WriteAll_1621@p
  3217  03F5  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3218  03F6  00A1               	movwf	WriteAll_1621@p+1
  3219  03F7  3004               	movlw	4
  3220  03F8  00DE               	movwf	??_main
  3221  03F9  085E               	movf	??_main,w
  3222  03FA  00A2               	movwf	WriteAll_1621@cnt
  3223  03FB  3000               	movlw	0
  3224  03FC  318C  2495  3183   	fcall	_WriteAll_1621
  3225                           
  3226                           ;main.c: 104: time_count = 0;
  3227  03FF  0020               	movlb	0	; select bank0
  3228  0400  01EC               	clrf	_time_count
  3229                           
  3230                           ;main.c: 105: Record_flag = 0;
  3231  0401  01EA               	clrf	_Record_flag
  3232                           
  3233                           ;main.c: 106: Cur_temperature_time_ch1 = 0;
  3234  0402  0021               	movlb	1	; select bank1
  3235  0403  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
  3236                           
  3237                           ;main.c: 107: Cur_temperature_time_ch2 = 0;
  3238  0404  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
  3239                           
  3240                           ;main.c: 108: CH1_temperature = 0;
  3241  0405  0020               	movlb	0	; select bank0
  3242  0406  01E5               	clrf	_CH1_temperature
  3243  0407  01E6               	clrf	_CH1_temperature+1
  3244                           
  3245                           ;main.c: 109: CH2_temperature = 0;
  3246  0408  01E7               	clrf	_CH2_temperature
  3247  0409  01E8               	clrf	_CH2_temperature+1
  3248                           
  3249                           ;main.c: 110: CH1_state = 0;
  3250  040A  0021               	movlb	1	; select bank1
  3251  040B  01B2               	clrf	_CH1_state^(0+128)
  3252                           
  3253                           ;main.c: 111: CH2_state = 0;
  3254  040C  01B3               	clrf	_CH2_state^(0+128)
  3255                           
  3256                           ;main.c: 112: bat_data = 0;
  3257  040D  0022               	movlb	2	; select bank2
  3258  040E  01E3               	clrf	main@bat_data^(0+256)
  3259  040F  01E4               	clrf	(main@bat_data+1)^(0+256)
  3260                           
  3261                           ;main.c: 113: Cur_Save_Index = 0x2000;
  3262  0410  3000               	movlw	0
  3263  0411  0021               	movlb	1	; select bank1
  3264  0412  00AE               	movwf	_Cur_Save_Index^(0+128)
  3265  0413  3020               	movlw	32
  3266  0414  00AF               	movwf	(_Cur_Save_Index^(0+128)+1)
  3267                           
  3268                           ;main.c: 114: Serach_Flash_Head();
  3269  0415  318C  2461  3183   	fcall	_Serach_Flash_Head
  3270                           
  3271                           ;main.c: 139: (INTCONbits.GIE = 1);
  3272  0418  178B               	bsf	11,7	;volatile
  3273                           
  3274                           ;main.c: 142: (INTCONbits.PEIE = 1);
  3275  0419  170B               	bsf	11,6	;volatile
  3276  041A                     l5332:	
  3277                           ;main.c: 150: while (1)
  3278                           
  3279                           
  3280                           ;main.c: 151: {
  3281                           ;main.c: 156: bat_data = bat_data + ADC_GetConversion(ADC);
  3282  041A  300B               	movlw	11
  3283  041B  3189  21B3  3183   	fcall	_ADC_GetConversion
  3284  041E  0022               	movlb	2	; select bank2
  3285  041F  0863               	movf	main@bat_data^(0+256),w
  3286  0420  0773               	addwf	?_ADC_GetConversion,w
  3287  0421  00E3               	movwf	main@bat_data^(0+256)
  3288  0422  0864               	movf	(main@bat_data+1)^(0+256),w
  3289  0423  3D74               	addwfc	?_ADC_GetConversion+1,w
  3290  0424  00E4               	movwf	(main@bat_data+1)^(0+256)
  3291                           
  3292                           ;main.c: 157: i++;
  3293  0425  3001               	movlw	1
  3294  0426  0020               	movlb	0	; select bank0
  3295  0427  00DE               	movwf	??_main
  3296  0428  085E               	movf	??_main,w
  3297  0429  0022               	movlb	2	; select bank2
  3298  042A  07E2               	addwf	main@i^(0+256),f
  3299                           
  3300                           ;main.c: 158: if(i == 16)
  3301  042B  3010               	movlw	16
  3302  042C  0662               	xorwf	main@i^(0+256),w
  3303  042D  1D03               	btfss	3,2
  3304  042E  2C45               	goto	l5346
  3305                           
  3306                           ;main.c: 159: {
  3307                           ;main.c: 160: i = 0;
  3308  042F  01E2               	clrf	main@i^(0+256)
  3309                           
  3310                           ;main.c: 161: bat_data = bat_data>>4;
  3311  0430  0E63               	swapf	main@bat_data^(0+256),w
  3312  0431  390F               	andlw	15
  3313  0432  00E3               	movwf	main@bat_data^(0+256)
  3314  0433  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3315  0434  39F0               	andlw	240
  3316  0435  04E3               	iorwf	main@bat_data^(0+256),f
  3317  0436  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3318  0437  390F               	andlw	15
  3319  0438  00E4               	movwf	(main@bat_data^(0+256)+1)
  3320                           
  3321                           ;main.c: 162: if( bat_data < 800)
  3322  0439  3003               	movlw	3
  3323  043A  0264               	subwf	(main@bat_data+1)^(0+256),w
  3324  043B  3020               	movlw	32
  3325  043C  1903               	skipnz
  3326  043D  0263               	subwf	main@bat_data^(0+256),w
  3327  043E  1803               	skipnc
  3328  043F  2C42               	goto	l5344
  3329                           
  3330                           ;main.c: 163: {
  3331                           ;main.c: 164: do { LATA2 = 0; } while(0);
  3332  0440  110C               	bcf	12,2	;volatile
  3333  0441                     l389:	
  3334                           ;main.c: 165: while(1);
  3335                           
  3336  0441  2C41               	goto	l389
  3337  0442                     l5344:	
  3338                           
  3339                           ;main.c: 166: }
  3340                           ;main.c: 167: bat_data = 0;
  3341  0442  0022               	movlb	2	; select bank2
  3342  0443  01E3               	clrf	main@bat_data^(0+256)
  3343  0444  01E4               	clrf	(main@bat_data+1)^(0+256)
  3344  0445                     l5346:	
  3345                           
  3346                           ;main.c: 168: }
  3347                           ;main.c: 173: temperature_process();
  3348  0445  318C  242E  3183   	fcall	_temperature_process
  3349                           
  3350                           ;main.c: 174: Key_Process();
  3351  0448  3185  25A2  3183   	fcall	_Key_Process
  3352                           
  3353                           ;main.c: 175: Save_process();
  3354  044B  318F  2739  3183   	fcall	_Save_process
  3355  044E  2C1A               	goto	l5332
  3356  044F                     __end_of_main:	
  3357                           
  3358                           	psect	text1
  3359  0784                     __ptext1:	
  3360 ;; *************** function _maxim_31856_init *****************
  3361 ;; Defined at:
  3362 ;;		line 64 in file "mcc_generated_files/max31856.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0, pclath, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    5
  3383 ;; This function calls:
  3384 ;;		_maxim_31856_write_register
  3385 ;; This function is called by:
  3386 ;;		_main
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           
  3391                           ;psect for function _maxim_31856_init
  3392  0784                     _maxim_31856_init:	
  3393                           
  3394                           ;max31856.c: 67: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3395                           
  3396                           ;incstack = 0
  3397                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3398  0784  3015               	movlw	21
  3399  0785  00F6               	movwf	??_maxim_31856_init
  3400  0786  0876               	movf	??_maxim_31856_init,w
  3401  0787  00FA               	movwf	_uch_cr0
  3402                           
  3403                           ;max31856.c: 69: uch_cr1&= (uint8_t) 0x0F ;
  3404  0788  300F               	movlw	15
  3405  0789  00F6               	movwf	??_maxim_31856_init
  3406  078A  0876               	movf	??_maxim_31856_init,w
  3407  078B  0021               	movlb	1	; select bank1
  3408  078C  05BB               	andwf	_uch_cr1^(0+128),f
  3409                           
  3410                           ;max31856.c: 70: uch_cr1|=(uint8_t) 0x07;
  3411  078D  3007               	movlw	7
  3412  078E  00F6               	movwf	??_maxim_31856_init
  3413  078F  0876               	movf	??_maxim_31856_init,w
  3414  0790  04BB               	iorwf	_uch_cr1^(0+128),f
  3415                           
  3416                           ;max31856.c: 72: uch_mask=(uint8_t)0x00 ;
  3417  0791  01BE               	clrf	_uch_mask^(0+128)
  3418                           
  3419                           ;max31856.c: 74: maxim_31856_write_register(0x80, uch_cr0);
  3420  0792  087A               	movf	_uch_cr0,w
  3421  0793  00F6               	movwf	??_maxim_31856_init
  3422  0794  0876               	movf	??_maxim_31856_init,w
  3423  0795  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3424  0796  3080               	movlw	128
  3425  0797  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3426                           
  3427                           ;max31856.c: 75: maxim_31856_write_register(0x81, uch_cr1);
  3428  079A  0021               	movlb	1	; select bank1
  3429  079B  083B               	movf	_uch_cr1^(0+128),w
  3430  079C  00F6               	movwf	??_maxim_31856_init
  3431  079D  0876               	movf	??_maxim_31856_init,w
  3432  079E  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3433  079F  3081               	movlw	129
  3434  07A0  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3435                           
  3436                           ;max31856.c: 76: maxim_31856_write_register(0x82,uch_mask);
  3437  07A3  0021               	movlb	1	; select bank1
  3438  07A4  083E               	movf	_uch_mask^(0+128),w
  3439  07A5  00F6               	movwf	??_maxim_31856_init
  3440  07A6  0876               	movf	??_maxim_31856_init,w
  3441  07A7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3442  07A8  3082               	movlw	130
  3443  07A9  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3444                           
  3445                           ;max31856.c: 79: maxim_31856_write_register(0x83,0x7F);
  3446  07AC  307F               	movlw	127
  3447  07AD  00F6               	movwf	??_maxim_31856_init
  3448  07AE  0876               	movf	??_maxim_31856_init,w
  3449  07AF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3450  07B0  3083               	movlw	131
  3451  07B1  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3452                           
  3453                           ;max31856.c: 80: maxim_31856_write_register(0x84,0xC0);
  3454  07B4  30C0               	movlw	192
  3455  07B5  00F6               	movwf	??_maxim_31856_init
  3456  07B6  0876               	movf	??_maxim_31856_init,w
  3457  07B7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3458  07B8  3084               	movlw	132
  3459  07B9  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3460                           
  3461                           ;max31856.c: 82: maxim_31856_write_register(0x85,0x7F);
  3462  07BC  307F               	movlw	127
  3463  07BD  00F6               	movwf	??_maxim_31856_init
  3464  07BE  0876               	movf	??_maxim_31856_init,w
  3465  07BF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3466  07C0  3085               	movlw	133
  3467  07C1  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3468                           
  3469                           ;max31856.c: 83: maxim_31856_write_register(0x86,0xFF);
  3470  07C4  30FF               	movlw	255
  3471  07C5  00F6               	movwf	??_maxim_31856_init
  3472  07C6  0876               	movf	??_maxim_31856_init,w
  3473  07C7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3474  07C8  3086               	movlw	134
  3475  07C9  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3476                           
  3477                           ;max31856.c: 84: maxim_31856_write_register(0x87,0x80);
  3478  07CC  3080               	movlw	128
  3479  07CD  00F6               	movwf	??_maxim_31856_init
  3480  07CE  0876               	movf	??_maxim_31856_init,w
  3481  07CF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3482  07D0  3087               	movlw	135
  3483  07D1  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3484                           
  3485                           ;max31856.c: 85: maxim_31856_write_register(0x88,0x00);
  3486  07D4  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3487  07D5  3088               	movlw	136
  3488  07D6  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3489                           
  3490                           ;max31856.c: 87: maxim_31856_write_register(0x89,0x00);
  3491  07D9  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3492  07DA  3089               	movlw	137
  3493  07DB  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3494                           
  3495                           ;max31856.c: 91: maxim_31856_write_register(0x8A,0x00);
  3496  07DE  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3497  07DF  308A               	movlw	138
  3498  07E0  3188  20BF  3187   	fcall	_maxim_31856_write_register
  3499                           
  3500                           ;max31856.c: 92: maxim_31856_write_register(0x8B,0x00);
  3501  07E3  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3502  07E4  308B               	movlw	139
  3503  07E5  3188  20BF         	fcall	_maxim_31856_write_register
  3504  07E7  0008               	return
  3505  07E8                     __end_of_maxim_31856_init:	
  3506                           
  3507                           	psect	text2
  3508  0C61                     __ptext2:	
  3509 ;; *************** function _Serach_Flash_Head *****************
  3510 ;; Defined at:
  3511 ;;		line 42 in file "mcc_generated_files/save.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  i               2    2[BANK0 ] unsigned int 
  3516 ;;  data            2    0[BANK0 ] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;Total ram usage:        4 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    4
  3533 ;; This function calls:
  3534 ;;		_FLASH_ReadWord
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _Serach_Flash_Head
  3542  0C61                     _Serach_Flash_Head:	
  3543                           
  3544                           ;save.c: 44: unsigned int i=0;
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in _Serach_Flash_Head: [wreg+status,2+status,0+pclath+cstack]
  3548  0C61  0020               	movlb	0	; select bank0
  3549  0C62  01A2               	clrf	Serach_Flash_Head@i
  3550  0C63  01A3               	clrf	Serach_Flash_Head@i+1
  3551                           
  3552                           ;save.c: 45: unsigned int data=0;
  3553  0C64  01A0               	clrf	Serach_Flash_Head@data
  3554  0C65  01A1               	clrf	Serach_Flash_Head@data+1
  3555                           
  3556                           ;save.c: 46: for(i = 0x2000; i<16384;i++ )
  3557  0C66  3000               	movlw	0
  3558  0C67  00A2               	movwf	Serach_Flash_Head@i
  3559  0C68  3020               	movlw	32
  3560  0C69  00A3               	movwf	Serach_Flash_Head@i+1
  3561  0C6A                     L1:	
  3562  0C6A  3040               	movlw	64
  3563  0C6B  0223               	subwf	Serach_Flash_Head@i+1,w
  3564  0C6C  3000               	movlw	0
  3565  0C6D  1903               	skipnz
  3566  0C6E  0222               	subwf	Serach_Flash_Head@i,w
  3567  0C6F  1803               	btfsc	3,0
  3568  0C70  0008               	return
  3569                           
  3570                           ;save.c: 47: {
  3571                           ;save.c: 48: data = FLASH_ReadWord(i);
  3572  0C71  0823               	movf	Serach_Flash_Head@i+1,w
  3573  0C72  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3574  0C73  0822               	movf	Serach_Flash_Head@i,w
  3575  0C74  00F3               	movwf	FLASH_ReadWord@flashAddr
  3576  0C75  3189  219A  318C   	fcall	_FLASH_ReadWord
  3577  0C78  0874               	movf	?_FLASH_ReadWord+1,w
  3578  0C79  0020               	movlb	0	; select bank0
  3579  0C7A  00A1               	movwf	Serach_Flash_Head@data+1
  3580  0C7B  0873               	movf	?_FLASH_ReadWord,w
  3581  0C7C  00A0               	movwf	Serach_Flash_Head@data
  3582                           
  3583                           ;save.c: 49: if( data == 0x3fff)
  3584  0C7D  0A20               	incf	Serach_Flash_Head@data,w
  3585  0C7E  303F               	movlw	63
  3586  0C7F  1903               	skipnz
  3587  0C80  0621               	xorwf	Serach_Flash_Head@data+1,w
  3588  0C81  1D03               	btfss	3,2
  3589  0C82  2C8F               	goto	l5164
  3590                           
  3591                           ;save.c: 50: {
  3592                           ;save.c: 51: i++;
  3593  0C83  3001               	movlw	1
  3594  0C84  07A2               	addwf	Serach_Flash_Head@i,f
  3595  0C85  3000               	movlw	0
  3596  0C86  3DA3               	addwfc	Serach_Flash_Head@i+1,f
  3597                           
  3598                           ;save.c: 52: Cur_Save_Index = i;
  3599  0C87  0823               	movf	Serach_Flash_Head@i+1,w
  3600  0C88  0021               	movlb	1	; select bank1
  3601  0C89  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3602  0C8A  0020               	movlb	0	; select bank0
  3603  0C8B  0822               	movf	Serach_Flash_Head@i,w
  3604  0C8C  0021               	movlb	1	; select bank1
  3605  0C8D  00AE               	movwf	_Cur_Save_Index^(0+128)
  3606                           
  3607                           ;save.c: 53: break;
  3608  0C8E  0008               	return
  3609  0C8F                     l5164:	
  3610  0C8F  3001               	movlw	1
  3611  0C90  0020               	movlb	0	; select bank0
  3612  0C91  07A2               	addwf	Serach_Flash_Head@i,f
  3613  0C92  3000               	movlw	0
  3614  0C93  3DA3               	addwfc	Serach_Flash_Head@i+1,f
  3615  0C94  2C6A               	goto	L1
  3616  0C95                     __end_of_Serach_Flash_Head:	
  3617                           
  3618                           	psect	text3
  3619  0F39                     __ptext3:	
  3620 ;; *************** function _Save_process *****************
  3621 ;; Defined at:
  3622 ;;		line 92 in file "mcc_generated_files/save.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  var_time        2   47[BANK0 ] unsigned int 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;Total ram usage:        4 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    9
  3643 ;; This function calls:
  3644 ;;		_Calculate_Time
  3645 ;;		_Save_Write_word
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function _Save_process
  3653  0F39                     _Save_process:	
  3654                           
  3655                           ;save.c: 94: unsigned int var_time=0;
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3659  0F39  0020               	movlb	0	; select bank0
  3660  0F3A  01CF               	clrf	Save_process@var_time
  3661  0F3B  01D0               	clrf	Save_process@var_time+1
  3662                           
  3663                           ;save.c: 95: if( time_count == 1 && Record_flag == 1 )
  3664  0F3C  036C               	decf	_time_count,w
  3665  0F3D  1D03               	btfss	3,2
  3666  0F3E  2F6B               	goto	l5246
  3667  0F3F  036A               	decf	_Record_flag,w
  3668  0F40  1D03               	btfss	3,2
  3669  0F41  2F6B               	goto	l5246
  3670                           
  3671                           ;save.c: 96: {
  3672                           ;save.c: 97: if(Cur_temperature_time_ch1 > 120)
  3673  0F42  3079               	movlw	121
  3674  0F43  0021               	movlb	1	; select bank1
  3675  0F44  0234               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3676  0F45  1C03               	skipc
  3677  0F46  0008               	return
  3678                           
  3679                           ;save.c: 98: {
  3680                           ;save.c: 99: var_time = Calculate_Time();
  3681  0F47  3181  21E7  318F   	fcall	_Calculate_Time
  3682  0F4A  0020               	movlb	0	; select bank0
  3683  0F4B  00CD               	movwf	??_Save_process
  3684  0F4C  01CE               	clrf	??_Save_process+1
  3685  0F4D  084D               	movf	??_Save_process,w
  3686  0F4E  00CF               	movwf	Save_process@var_time
  3687  0F4F  084E               	movf	??_Save_process+1,w
  3688  0F50  00D0               	movwf	Save_process@var_time+1
  3689                           
  3690                           ;save.c: 100: var_time |= 0x100;
  3691  0F51  1450               	bsf	Save_process@var_time+1,0
  3692                           
  3693                           ;save.c: 101: if(CH1_state == 1) var_time |= 0x400;
  3694  0F52  0021               	movlb	1	; select bank1
  3695  0F53  0332               	decf	_CH1_state^(0+128),w
  3696  0F54  1D03               	btfss	3,2
  3697  0F55  2F58               	goto	l995
  3698  0F56  0020               	movlb	0	; select bank0
  3699  0F57  1550               	bsf	Save_process@var_time+1,2
  3700  0F58                     l995:	
  3701                           
  3702                           ;save.c: 103: var_time |= 0x1000;
  3703  0F58  0020               	movlb	0	; select bank0
  3704  0F59  1650               	bsf	Save_process@var_time+1,4
  3705                           
  3706                           ;save.c: 105: Save_Write_word(var_time);
  3707  0F5A  0850               	movf	Save_process@var_time+1,w
  3708  0F5B  00B4               	movwf	Save_Write_word@data+1
  3709  0F5C  084F               	movf	Save_process@var_time,w
  3710  0F5D  00B3               	movwf	Save_Write_word@data
  3711  0F5E  3187  27E8  318F   	fcall	_Save_Write_word
  3712                           
  3713                           ;save.c: 106: Save_Write_word(CH1_temperature);
  3714  0F61  0020               	movlb	0	; select bank0
  3715  0F62  0866               	movf	_CH1_temperature+1,w
  3716  0F63  00B4               	movwf	Save_Write_word@data+1
  3717  0F64  0865               	movf	_CH1_temperature,w
  3718  0F65  00B3               	movwf	Save_Write_word@data
  3719  0F66  3187  27E8         	fcall	_Save_Write_word
  3720                           
  3721                           ;save.c: 108: Cur_temperature_time_ch1 = 0;
  3722  0F68  0021               	movlb	1	; select bank1
  3723  0F69  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
  3724                           
  3725                           ;save.c: 109: }
  3726                           ;save.c: 110: }
  3727  0F6A  0008               	return
  3728  0F6B                     l5246:	
  3729                           
  3730                           ;save.c: 111: else if(time_count == 3 && Record_flag == 1)
  3731  0F6B  3003               	movlw	3
  3732  0F6C  0020               	movlb	0	; select bank0
  3733  0F6D  066C               	xorwf	_time_count,w
  3734  0F6E  1D03               	btfss	3,2
  3735  0F6F  0008               	return
  3736  0F70  036A               	decf	_Record_flag,w
  3737  0F71  1D03               	btfss	3,2
  3738  0F72  0008               	return
  3739                           
  3740                           ;save.c: 112: {
  3741                           ;save.c: 113: if(Cur_temperature_time_ch2 > 120)
  3742  0F73  3079               	movlw	121
  3743  0F74  0021               	movlb	1	; select bank1
  3744  0F75  0235               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3745  0F76  1C03               	skipc
  3746  0F77  0008               	return
  3747                           
  3748                           ;save.c: 114: {
  3749                           ;save.c: 115: var_time = Calculate_Time();
  3750  0F78  3181  21E7  318F   	fcall	_Calculate_Time
  3751  0F7B  0020               	movlb	0	; select bank0
  3752  0F7C  00CD               	movwf	??_Save_process
  3753  0F7D  01CE               	clrf	??_Save_process+1
  3754  0F7E  084D               	movf	??_Save_process,w
  3755  0F7F  00CF               	movwf	Save_process@var_time
  3756  0F80  084E               	movf	??_Save_process+1,w
  3757  0F81  00D0               	movwf	Save_process@var_time+1
  3758                           
  3759                           ;save.c: 116: var_time |= 0x200;
  3760  0F82  14D0               	bsf	Save_process@var_time+1,1
  3761                           
  3762                           ;save.c: 117: if(CH2_state == 1) var_time |= 0x800;
  3763  0F83  0021               	movlb	1	; select bank1
  3764  0F84  0333               	decf	_CH2_state^(0+128),w
  3765  0F85  1D03               	btfss	3,2
  3766  0F86  2F89               	goto	l999
  3767  0F87  0020               	movlb	0	; select bank0
  3768  0F88  15D0               	bsf	Save_process@var_time+1,3
  3769  0F89                     l999:	
  3770                           
  3771                           ;save.c: 119: var_time |= 0x1000;
  3772  0F89  0020               	movlb	0	; select bank0
  3773  0F8A  1650               	bsf	Save_process@var_time+1,4
  3774                           
  3775                           ;save.c: 121: Save_Write_word(var_time);
  3776  0F8B  0850               	movf	Save_process@var_time+1,w
  3777  0F8C  00B4               	movwf	Save_Write_word@data+1
  3778  0F8D  084F               	movf	Save_process@var_time,w
  3779  0F8E  00B3               	movwf	Save_Write_word@data
  3780  0F8F  3187  27E8  318F   	fcall	_Save_Write_word
  3781                           
  3782                           ;save.c: 122: Save_Write_word(CH2_temperature);
  3783  0F92  0020               	movlb	0	; select bank0
  3784  0F93  0868               	movf	_CH2_temperature+1,w
  3785  0F94  00B4               	movwf	Save_Write_word@data+1
  3786  0F95  0867               	movf	_CH2_temperature,w
  3787  0F96  00B3               	movwf	Save_Write_word@data
  3788  0F97  3187  27E8         	fcall	_Save_Write_word
  3789                           
  3790                           ;save.c: 124: Cur_temperature_time_ch2 = 0;
  3791  0F99  0021               	movlb	1	; select bank1
  3792  0F9A  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
  3793  0F9B  0008               	return
  3794  0F9C                     __end_of_Save_process:	
  3795                           
  3796                           	psect	text4
  3797  0923                     __ptext4:	
  3798 ;; *************** function _SYSTEM_Initialize *****************
  3799 ;; Defined at:
  3800 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0, pclath, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    4
  3821 ;; This function calls:
  3822 ;;		_ADC_Initialize
  3823 ;;		_EUSART_Initialize
  3824 ;;		_FVR_Initialize
  3825 ;;		_OSCILLATOR_Initialize
  3826 ;;		_PIN_MANAGER_Initialize
  3827 ;;		_SPI_Initialize
  3828 ;;		_TMR0_Initialize
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _SYSTEM_Initialize
  3836  0923                     _SYSTEM_Initialize:	
  3837                           
  3838                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3842  0923  3188  2073  3189   	fcall	_OSCILLATOR_Initialize
  3843                           
  3844                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3845  0926  318A  22B2  3189   	fcall	_PIN_MANAGER_Initialize
  3846                           
  3847                           ;mcc.c: 73: SPI_Initialize();
  3848  0929  3188  207E  3189   	fcall	_SPI_Initialize
  3849                           
  3850                           ;mcc.c: 74: EUSART_Initialize();
  3851  092C  3188  20B3  3189   	fcall	_EUSART_Initialize
  3852                           
  3853                           ;mcc.c: 75: ADC_Initialize();
  3854  092F  3188  2098  3189   	fcall	_ADC_Initialize
  3855                           
  3856                           ;mcc.c: 76: TMR0_Initialize();
  3857  0932  3188  20DC  3189   	fcall	_TMR0_Initialize
  3858                           
  3859                           ;mcc.c: 77: FVR_Initialize();
  3860  0935  3188  206A         	fcall	_FVR_Initialize
  3861  0937  0008               	return
  3862  0938                     __end_of_SYSTEM_Initialize:	
  3863                           
  3864                           	psect	text5
  3865  08DC                     __ptext5:	
  3866 ;; *************** function _TMR0_Initialize *****************
  3867 ;; Defined at:
  3868 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    3
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_SYSTEM_Initialize
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _TMR0_Initialize
  3898  08DC                     _TMR0_Initialize:	
  3899                           
  3900                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3904  08DC  0021               	movlb	1	; select bank1
  3905  08DD  0815               	movf	21,w	;volatile
  3906  08DE  39C0               	andlw	192
  3907  08DF  3817               	iorlw	23
  3908  08E0  0095               	movwf	21	;volatile
  3909                           
  3910                           ;tmr0.c: 73: TMR0 = 0x64;
  3911  08E1  3064               	movlw	100
  3912  08E2  0020               	movlb	0	; select bank0
  3913  08E3  0095               	movwf	21	;volatile
  3914                           
  3915                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3916  08E4  3064               	movlw	100
  3917  08E5  00F3               	movwf	??_TMR0_Initialize
  3918  08E6  0873               	movf	??_TMR0_Initialize,w
  3919  08E7  0021               	movlb	1	; select bank1
  3920  08E8  00EB               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3921                           
  3922                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3923  08E9  110B               	bcf	11,2	;volatile
  3924                           
  3925                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3926  08EA  168B               	bsf	11,5	;volatile
  3927  08EB  0008               	return
  3928  08EC                     __end_of_TMR0_Initialize:	
  3929                           
  3930                           	psect	text6
  3931  087E                     __ptext6:	
  3932 ;; *************** function _SPI_Initialize *****************
  3933 ;; Defined at:
  3934 ;;		line 64 in file "mcc_generated_files/spi.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_SYSTEM_Initialize
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           
  3963                           ;psect for function _SPI_Initialize
  3964  087E                     _SPI_Initialize:	
  3965                           
  3966                           ;spi.c: 68: SSP1STAT = 0x00;
  3967                           
  3968                           ;incstack = 0
  3969                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3970  087E  0024               	movlb	4	; select bank4
  3971  087F  0194               	clrf	20	;volatile
  3972                           
  3973                           ;spi.c: 71: SSP1CON1 = 0x30;
  3974  0880  3030               	movlw	48
  3975  0881  0095               	movwf	21	;volatile
  3976                           
  3977                           ;spi.c: 74: SSP1ADD = 0x00;
  3978  0882  0192               	clrf	18	;volatile
  3979  0883  0008               	return
  3980  0884                     __end_of_SPI_Initialize:	
  3981                           
  3982                           	psect	text7
  3983  0AB2                     __ptext7:	
  3984 ;; *************** function _PIN_MANAGER_Initialize *****************
  3985 ;; Defined at:
  3986 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    3
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_SYSTEM_Initialize
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _PIN_MANAGER_Initialize
  4016  0AB2                     _PIN_MANAGER_Initialize:	
  4017                           
  4018                           ;pin_manager.c: 51: LATA = 0x7B;
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4022  0AB2  307B               	movlw	123
  4023  0AB3  0022               	movlb	2	; select bank2
  4024  0AB4  008C               	movwf	12	;volatile
  4025                           
  4026                           ;pin_manager.c: 52: TRISA = 0x80;
  4027  0AB5  3080               	movlw	128
  4028  0AB6  0021               	movlb	1	; select bank1
  4029  0AB7  008C               	movwf	12	;volatile
  4030                           
  4031                           ;pin_manager.c: 53: ANSELA = 0x00;
  4032  0AB8  0023               	movlb	3	; select bank3
  4033  0AB9  018C               	clrf	12	;volatile
  4034                           
  4035                           ;pin_manager.c: 55: LATB = 0x00;
  4036  0ABA  0022               	movlb	2	; select bank2
  4037  0ABB  018D               	clrf	13	;volatile
  4038                           
  4039                           ;pin_manager.c: 56: TRISB = 0xFC;
  4040  0ABC  30FC               	movlw	252
  4041  0ABD  0021               	movlb	1	; select bank1
  4042  0ABE  008D               	movwf	13	;volatile
  4043                           
  4044                           ;pin_manager.c: 57: ANSELB = 0x10;
  4045  0ABF  3010               	movlw	16
  4046  0AC0  0023               	movlb	3	; select bank3
  4047  0AC1  008D               	movwf	13	;volatile
  4048                           
  4049                           ;pin_manager.c: 58: WPUB = 0x2C;
  4050  0AC2  302C               	movlw	44
  4051  0AC3  0024               	movlb	4	; select bank4
  4052  0AC4  008D               	movwf	13	;volatile
  4053                           
  4054                           ;pin_manager.c: 60: LATC = 0x07;
  4055  0AC5  3007               	movlw	7
  4056  0AC6  0022               	movlb	2	; select bank2
  4057  0AC7  008E               	movwf	14	;volatile
  4058                           
  4059                           ;pin_manager.c: 61: TRISC = 0xD0;
  4060  0AC8  30D0               	movlw	208
  4061  0AC9  0021               	movlb	1	; select bank1
  4062  0ACA  008E               	movwf	14	;volatile
  4063                           
  4064                           ;pin_manager.c: 62: ANSELC = 0x00;
  4065  0ACB  0023               	movlb	3	; select bank3
  4066  0ACC  018E               	clrf	14	;volatile
  4067                           
  4068                           ;pin_manager.c: 64: WPUE = 0x00;
  4069  0ACD  0024               	movlb	4	; select bank4
  4070  0ACE  0190               	clrf	16	;volatile
  4071                           
  4072                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4073  0ACF  0021               	movlb	1	; select bank1
  4074  0AD0  1395               	bcf	21,7	;volatile
  4075                           
  4076                           ;pin_manager.c: 68: APFCON = 0x00;
  4077  0AD1  0022               	movlb	2	; select bank2
  4078  0AD2  019D               	clrf	29	;volatile
  4079  0AD3  0008               	return
  4080  0AD4                     __end_of_PIN_MANAGER_Initialize:	
  4081                           
  4082                           	psect	text8
  4083  0873                     __ptext8:	
  4084 ;; *************** function _OSCILLATOR_Initialize *****************
  4085 ;; Defined at:
  4086 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    3
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_SYSTEM_Initialize
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _OSCILLATOR_Initialize
  4116  0873                     _OSCILLATOR_Initialize:	
  4117                           
  4118                           ;mcc.c: 82: OSCCON = 0x78;
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4122  0873  3078               	movlw	120
  4123  0874  0021               	movlb	1	; select bank1
  4124  0875  0099               	movwf	25	;volatile
  4125                           
  4126                           ;mcc.c: 84: OSCSTAT = 0x00;
  4127  0876  019A               	clrf	26	;volatile
  4128  0877  0008               	return
  4129  0878                     __end_of_OSCILLATOR_Initialize:	
  4130                           
  4131                           	psect	text9
  4132  086A                     __ptext9:	
  4133 ;; *************** function _FVR_Initialize *****************
  4134 ;; Defined at:
  4135 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    3
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_SYSTEM_Initialize
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function _FVR_Initialize
  4165  086A                     _FVR_Initialize:	
  4166                           
  4167                           ;fvr.c: 60: FVRCON = 0x82;
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _FVR_Initialize: [wreg]
  4171  086A  3082               	movlw	130
  4172  086B  0022               	movlb	2	; select bank2
  4173  086C  0097               	movwf	23	;volatile
  4174  086D  0008               	return
  4175  086E                     __end_of_FVR_Initialize:	
  4176                           
  4177                           	psect	text10
  4178  08B3                     __ptext10:	
  4179 ;; *************** function _EUSART_Initialize *****************
  4180 ;; Defined at:
  4181 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    3
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_SYSTEM_Initialize
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           
  4210                           ;psect for function _EUSART_Initialize
  4211  08B3                     _EUSART_Initialize:	
  4212                           
  4213                           ;eusart.c: 60: BAUDCON = 0x48;
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _EUSART_Initialize: [wreg]
  4217  08B3  3048               	movlw	72
  4218  08B4  0023               	movlb	3	; select bank3
  4219  08B5  009F               	movwf	31	;volatile
  4220                           
  4221                           ;eusart.c: 63: RCSTA = 0x80;
  4222  08B6  3080               	movlw	128
  4223  08B7  009D               	movwf	29	;volatile
  4224                           
  4225                           ;eusart.c: 66: TXSTA = 0x26;
  4226  08B8  3026               	movlw	38
  4227  08B9  009E               	movwf	30	;volatile
  4228                           
  4229                           ;eusart.c: 69: SPBRGL = 0xA0;
  4230  08BA  30A0               	movlw	160
  4231  08BB  009B               	movwf	27	;volatile
  4232                           
  4233                           ;eusart.c: 72: SPBRGH = 0x01;
  4234  08BC  3001               	movlw	1
  4235  08BD  009C               	movwf	28	;volatile
  4236  08BE  0008               	return
  4237  08BF                     __end_of_EUSART_Initialize:	
  4238                           
  4239                           	psect	text11
  4240  0898                     __ptext11:	
  4241 ;; *************** function _ADC_Initialize *****************
  4242 ;; Defined at:
  4243 ;;		line 65 in file "mcc_generated_files/adc.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_SYSTEM_Initialize
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _ADC_Initialize
  4273  0898                     _ADC_Initialize:	
  4274                           
  4275                           ;adc.c: 69: ADCON0 = 0x01;
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4279  0898  3001               	movlw	1
  4280  0899  0021               	movlb	1	; select bank1
  4281  089A  009D               	movwf	29	;volatile
  4282                           
  4283                           ;adc.c: 72: ADCON1 = 0xE3;
  4284  089B  30E3               	movlw	227
  4285  089C  009E               	movwf	30	;volatile
  4286                           
  4287                           ;adc.c: 75: ADRESL = 0x00;
  4288  089D  019B               	clrf	27	;volatile
  4289                           
  4290                           ;adc.c: 78: ADRESH = 0x00;
  4291  089E  019C               	clrf	28	;volatile
  4292  089F  0008               	return
  4293  08A0                     __end_of_ADC_Initialize:	
  4294                           
  4295                           	psect	text12
  4296  05A2                     __ptext12:	
  4297 ;; *************** function _Key_Process *****************
  4298 ;; Defined at:
  4299 ;;		line 42 in file "mcc_generated_files/key.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  i               2   60[BANK0 ] unsigned int 
  4304 ;;  data_temp       2   57[BANK0 ] unsigned int 
  4305 ;;  gKeyValue       1   59[BANK0 ] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  2  297[None  ] int 
  4308 ;; Registers used:
  4309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;Total ram usage:        6 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:   12
  4322 ;; This function calls:
  4323 ;;		_EUSART_Write
  4324 ;;		_FLASH_ReadWord
  4325 ;;		_Key_Scan
  4326 ;;		_Save_Write_time
  4327 ;;		_SendCmd_1621
  4328 ;;		_Set_finish_flag
  4329 ;;		_Set_start_flag
  4330 ;;		_Write_Flash_finish
  4331 ;;		_Write_Flash_head
  4332 ;;		_temperature_process
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _Key_Process
  4340  05A2                     _Key_Process:	
  4341                           
  4342                           ;key.c: 44: unsigned char gKeyValue=0;
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4346  05A2  0020               	movlb	0	; select bank0
  4347  05A3  01DB               	clrf	Key_Process@gKeyValue
  4348                           
  4349                           ;key.c: 46: unsigned int i;
  4350                           ;key.c: 47: unsigned int data_temp;
  4351                           ;key.c: 49: LongPressSec = 0;
  4352  05A4  01E9               	clrf	_LongPressSec
  4353                           
  4354                           ;key.c: 50: gKeyValue=Key_Scan();
  4355  05A5  318A  22D4  3185   	fcall	_Key_Scan
  4356  05A8  0020               	movlb	0	; select bank0
  4357  05A9  00D8               	movwf	??_Key_Process
  4358  05AA  0858               	movf	??_Key_Process,w
  4359  05AB  00DB               	movwf	Key_Process@gKeyValue
  4360                           
  4361                           ;key.c: 51: if(gKeyValue)
  4362  05AC  085B               	movf	Key_Process@gKeyValue,w
  4363  05AD  1903               	btfsc	3,2
  4364  05AE  0008               	return
  4365  05AF  2E25               	goto	l5224
  4366  05B0                     l5174:	
  4367                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) );
  4368                           
  4369                           ;key.c: 54: {
  4370                           ;key.c: 55: case 0x01:
  4371                           
  4372                           ;key.c: 52: {
  4373                           ;key.c: 53: switch(gKeyValue)
  4374                           
  4375  05B0  3003               	movlw	3
  4376  05B1  0269               	subwf	_LongPressSec,w
  4377  05B2  1803               	skipnc
  4378  05B3  2DB6               	goto	l5178
  4379  05B4  1E8D               	btfss	13,5	;volatile
  4380  05B5  2DB0               	goto	l5174
  4381  05B6                     l5178:	
  4382                           
  4383                           ;key.c: 57: if(LongPressSec > 2)
  4384  05B6  3003               	movlw	3
  4385  05B7  0269               	subwf	_LongPressSec,w
  4386  05B8  1C03               	skipc
  4387  05B9  2DC2               	goto	l5182
  4388                           
  4389                           ;key.c: 58: {
  4390                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4391  05BA  0022               	movlb	2	; select bank2
  4392  05BB  110C               	bcf	12,2	;volatile
  4393                           
  4394                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4395  05BC  158C               	bsf	12,3	;volatile
  4396                           
  4397                           ;key.c: 61: SendCmd_1621(0x04);
  4398  05BD  3004               	movlw	4
  4399  05BE  3189  2138  3185   	fcall	_SendCmd_1621
  4400                           
  4401                           ;key.c: 62: }
  4402  05C1  2DEF               	goto	l883
  4403  05C2                     l5182:	
  4404                           
  4405                           ;key.c: 64: else
  4406                           ;key.c: 65: {
  4407                           ;key.c: 66: for(i=0x2000;i<0x2000+1000;i++)
  4408  05C2  3000               	movlw	0
  4409  05C3  0020               	movlb	0	; select bank0
  4410  05C4  00DC               	movwf	Key_Process@i
  4411  05C5  3020               	movlw	32
  4412  05C6  00DD               	movwf	Key_Process@i+1
  4413  05C7  3023               	movlw	35
  4414  05C8  025D               	subwf	Key_Process@i+1,w
  4415  05C9  30E8               	movlw	232
  4416  05CA  1903               	skipnz
  4417  05CB  025C               	subwf	Key_Process@i,w
  4418  05CC  1803               	btfsc	3,0
  4419  05CD  2DEF               	goto	l883
  4420  05CE                     l5186:	
  4421                           
  4422                           ;key.c: 67: {
  4423                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4424  05CE  085D               	movf	Key_Process@i+1,w
  4425  05CF  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4426  05D0  085C               	movf	Key_Process@i,w
  4427  05D1  00F3               	movwf	FLASH_ReadWord@flashAddr
  4428  05D2  3189  219A  3185   	fcall	_FLASH_ReadWord
  4429  05D5  0874               	movf	?_FLASH_ReadWord+1,w
  4430  05D6  0020               	movlb	0	; select bank0
  4431  05D7  00DA               	movwf	Key_Process@data_temp+1
  4432  05D8  0873               	movf	?_FLASH_ReadWord,w
  4433  05D9  00D9               	movwf	Key_Process@data_temp
  4434                           
  4435                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4436  05DA  085A               	movf	Key_Process@data_temp+1,w
  4437  05DB  3188  2090  3185   	fcall	_EUSART_Write
  4438                           
  4439                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4440  05DE  0020               	movlb	0	; select bank0
  4441  05DF  0859               	movf	Key_Process@data_temp,w
  4442  05E0  3188  2090  3185   	fcall	_EUSART_Write
  4443  05E3  3001               	movlw	1
  4444  05E4  0020               	movlb	0	; select bank0
  4445  05E5  07DC               	addwf	Key_Process@i,f
  4446  05E6  3000               	movlw	0
  4447  05E7  3DDD               	addwfc	Key_Process@i+1,f
  4448  05E8  3023               	movlw	35
  4449  05E9  025D               	subwf	Key_Process@i+1,w
  4450  05EA  30E8               	movlw	232
  4451  05EB  1903               	skipnz
  4452  05EC  025C               	subwf	Key_Process@i,w
  4453  05ED  1C03               	skipc
  4454  05EE  2DCE               	goto	l5186
  4455  05EF                     l883:	
  4456                           ;key.c: 71: }
  4457                           ;key.c: 72: }
  4458                           ;key.c: 74: while(RB5 == 0);
  4459                           
  4460  05EF  0020               	movlb	0	; select bank0
  4461  05F0  1A8D               	btfsc	13,5	;volatile
  4462  05F1  0008               	return
  4463  05F2  2DEF               	goto	l883
  4464  05F3                     l5192:	
  4465                           ;key.c: 77: while( !(LongPressSec > 2 || RA7 == 1) );
  4466                           
  4467                           ;key.c: 76: case 0x02:
  4468                           
  4469                           ;key.c: 75: break;
  4470                           
  4471  05F3  3003               	movlw	3
  4472  05F4  0269               	subwf	_LongPressSec,w
  4473  05F5  1803               	skipnc
  4474  05F6  2DF9               	goto	l5196
  4475  05F7  1F8C               	btfss	12,7	;volatile
  4476  05F8  2DF3               	goto	l5192
  4477  05F9                     l5196:	
  4478                           
  4479                           ;key.c: 78: if(LongPressSec > 2)
  4480  05F9  3003               	movlw	3
  4481  05FA  0269               	subwf	_LongPressSec,w
  4482  05FB  1C03               	skipc
  4483  05FC  2E19               	goto	l5218
  4484                           
  4485                           ;key.c: 79: {
  4486                           ;key.c: 80: if(Record_flag == 0)
  4487  05FD  086A               	movf	_Record_flag,w
  4488  05FE  1D03               	btfss	3,2
  4489  05FF  2E12               	goto	l5214
  4490                           
  4491                           ;key.c: 81: {
  4492                           ;key.c: 82: Set_start_flag();
  4493  0600  3188  2078  3185   	fcall	_Set_start_flag
  4494                           
  4495                           ;key.c: 83: Write_Flash_head();
  4496  0603  318B  23CE  3185   	fcall	_Write_Flash_head
  4497                           
  4498                           ;key.c: 84: Save_Write_time();
  4499  0606  3186  26A7  3185   	fcall	_Save_Write_time
  4500                           
  4501                           ;key.c: 85: Cur_temperature_time_ch1 = 0;
  4502  0609  0021               	movlb	1	; select bank1
  4503  060A  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
  4504                           
  4505                           ;key.c: 86: Cur_temperature_time_ch2 = 0;
  4506  060B  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
  4507                           
  4508                           ;key.c: 87: CH1_temperature = 0;
  4509  060C  0020               	movlb	0	; select bank0
  4510  060D  01E5               	clrf	_CH1_temperature
  4511  060E  01E6               	clrf	_CH1_temperature+1
  4512                           
  4513                           ;key.c: 88: CH2_temperature = 0;
  4514  060F  01E7               	clrf	_CH2_temperature
  4515  0610  01E8               	clrf	_CH2_temperature+1
  4516                           
  4517                           ;key.c: 89: }
  4518  0611  2E21               	goto	l897
  4519  0612                     l5214:	
  4520                           
  4521                           ;key.c: 90: else
  4522                           ;key.c: 91: {
  4523                           ;key.c: 92: Set_finish_flag();
  4524  0612  3188  206E  3185   	fcall	_Set_finish_flag
  4525                           
  4526                           ;key.c: 93: Write_Flash_finish();
  4527  0615  318B  239F  3185   	fcall	_Write_Flash_finish
  4528                           
  4529                           ;key.c: 94: }
  4530                           ;key.c: 95: }
  4531  0618  2E21               	goto	l897
  4532  0619                     l5218:	
  4533                           
  4534                           ;key.c: 96: else
  4535                           ;key.c: 97: {
  4536                           ;key.c: 98: time_count = 5;
  4537  0619  3005               	movlw	5
  4538  061A  0020               	movlb	0	; select bank0
  4539  061B  00D8               	movwf	??_Key_Process
  4540  061C  0858               	movf	??_Key_Process,w
  4541  061D  00EC               	movwf	_time_count
  4542                           
  4543                           ;key.c: 99: temperature_process();
  4544  061E  318C  242E  3185   	fcall	_temperature_process
  4545  0621                     l897:	
  4546                           ;key.c: 100: }
  4547                           ;key.c: 101: while(RA7 == 0);
  4548                           
  4549  0621  0020               	movlb	0	; select bank0
  4550  0622  1B8C               	btfsc	12,7	;volatile
  4551  0623  0008               	return
  4552  0624  2E21               	goto	l897
  4553  0625                     l5224:	
  4554                           ;key.c: 104: }
  4555                           
  4556                           ;key.c: 103: default:break;
  4557                           
  4558                           ;key.c: 102: break;
  4559                           
  4560  0625  085B               	movf	Key_Process@gKeyValue,w
  4561                           
  4562                           ; Switch size 1, requested type "space"
  4563                           ; Number of cases is 2, Range of values is 1 to 2
  4564                           ; switch strategies available:
  4565                           ; Name         Instructions Cycles
  4566                           ; simple_byte            7     4 (average)
  4567                           ; direct_byte           13     9 (fixed)
  4568                           ; jumptable            263     9 (fixed)
  4569                           ;	Chosen strategy is simple_byte
  4570  0626  3A01               	xorlw	1	; case 1
  4571  0627  1903               	skipnz
  4572  0628  2DB0               	goto	l5174
  4573  0629  3A03               	xorlw	3	; case 2
  4574  062A  1903               	skipnz
  4575  062B  2DF3               	goto	l5192
  4576  062C  2E2E               	goto	l901
  4577  062D  0008               	return
  4578  062E                     l901:	
  4579  062E  0008               	return
  4580  062F                     __end_of_Key_Process:	
  4581                           
  4582                           	psect	text13
  4583  0C2E                     __ptext13:	
  4584 ;; *************** function _temperature_process *****************
  4585 ;; Defined at:
  4586 ;;		line 339 in file "mcc_generated_files/max31856.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;Total ram usage:        0 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:   11
  4607 ;; This function calls:
  4608 ;;		_Two_Display
  4609 ;;		_one_temperature_trans
  4610 ;;		_temperature_display
  4611 ;;		_time_Display
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;;		_Key_Process
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _temperature_process
  4620  0C2E                     _temperature_process:	
  4621                           
  4622                           ;max31856.c: 341: switch(time_count)
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4626  0C2E  2C4E               	goto	l5044
  4627  0C2F                     l5016:	
  4628                           ;max31856.c: 342: {
  4629                           ;max31856.c: 343: case 0:
  4630                           
  4631                           
  4632                           ;max31856.c: 344: Two_Display(1);
  4633  0C2F  3001               	movlw	1
  4634  0C30  318B  23FD  318C   	fcall	_Two_Display
  4635                           
  4636                           ;max31856.c: 345: do { LATA1 = 1; } while(0);
  4637  0C33  0022               	movlb	2	; select bank2
  4638  0C34  148C               	bsf	12,1	;volatile
  4639                           
  4640                           ;max31856.c: 346: do { LATA0 = 1; } while(0);
  4641  0C35  140C               	bsf	12,0	;volatile
  4642                           
  4643                           ;max31856.c: 347: do { LATA0 = 0; } while(0);
  4644  0C36  100C               	bcf	12,0	;volatile
  4645                           
  4646                           ;max31856.c: 348: one_temperature_trans();
  4647  0C37  318E  2602         	fcall	_one_temperature_trans
  4648                           
  4649                           ;max31856.c: 349: break;
  4650  0C39  0008               	return
  4651  0C3A                     l5026:	
  4652                           ;max31856.c: 350: case 1:
  4653                           
  4654                           
  4655                           ;max31856.c: 351: temperature_display();
  4656  0C3A  318D  253A         	fcall	_temperature_display
  4657                           
  4658                           ;max31856.c: 352: break;
  4659  0C3C  0008               	return
  4660  0C3D                     l5028:	
  4661                           ;max31856.c: 353: case 2:
  4662                           
  4663                           
  4664                           ;max31856.c: 354: Two_Display(2);
  4665  0C3D  3002               	movlw	2
  4666  0C3E  318B  23FD  318C   	fcall	_Two_Display
  4667                           
  4668                           ;max31856.c: 355: do { LATA0 = 1; } while(0);
  4669  0C41  0022               	movlb	2	; select bank2
  4670  0C42  140C               	bsf	12,0	;volatile
  4671                           
  4672                           ;max31856.c: 356: do { LATA1 = 1; } while(0);
  4673  0C43  148C               	bsf	12,1	;volatile
  4674                           
  4675                           ;max31856.c: 357: do { LATA1 = 0; } while(0);
  4676  0C44  108C               	bcf	12,1	;volatile
  4677                           
  4678                           ;max31856.c: 358: one_temperature_trans();
  4679  0C45  318E  2602         	fcall	_one_temperature_trans
  4680                           
  4681                           ;max31856.c: 359: break;
  4682  0C47  0008               	return
  4683  0C48                     l5038:	
  4684                           ;max31856.c: 360: case 3:
  4685                           
  4686                           
  4687                           ;max31856.c: 361: temperature_display();
  4688  0C48  318D  253A         	fcall	_temperature_display
  4689                           
  4690                           ;max31856.c: 362: break;
  4691  0C4A  0008               	return
  4692  0C4B                     l5040:	
  4693                           ;max31856.c: 363: case 5:
  4694                           
  4695                           
  4696                           ;max31856.c: 364: time_Display();
  4697  0C4B  3185  250D         	fcall	_time_Display
  4698                           
  4699                           ;max31856.c: 367: }
  4700                           
  4701                           ;max31856.c: 366: default:break;
  4702                           
  4703                           ;max31856.c: 365: break;
  4704  0C4D  0008               	return
  4705  0C4E                     l5044:	
  4706  0C4E  0020               	movlb	0	; select bank0
  4707  0C4F  086C               	movf	_time_count,w
  4708                           
  4709                           ; Switch size 1, requested type "space"
  4710                           ; Number of cases is 5, Range of values is 0 to 5
  4711                           ; switch strategies available:
  4712                           ; Name         Instructions Cycles
  4713                           ; simple_byte           16     9 (average)
  4714                           ; direct_byte           18     6 (fixed)
  4715                           ; jumptable            260     6 (fixed)
  4716                           ;	Chosen strategy is simple_byte
  4717  0C50  3A00               	xorlw	0	; case 0
  4718  0C51  1903               	skipnz
  4719  0C52  2C2F               	goto	l5016
  4720  0C53  3A01               	xorlw	1	; case 1
  4721  0C54  1903               	skipnz
  4722  0C55  2C3A               	goto	l5026
  4723  0C56  3A03               	xorlw	3	; case 2
  4724  0C57  1903               	skipnz
  4725  0C58  2C3D               	goto	l5028
  4726  0C59  3A01               	xorlw	1	; case 3
  4727  0C5A  1903               	skipnz
  4728  0C5B  2C48               	goto	l5038
  4729  0C5C  3A06               	xorlw	6	; case 5
  4730  0C5D  1903               	skipnz
  4731  0C5E  2C4B               	goto	l5040
  4732  0C5F  2C60               	goto	l582
  4733  0C60                     l582:	
  4734  0C60  0008               	return
  4735  0C61                     __end_of_temperature_process:	
  4736                           
  4737                           	psect	text14
  4738  050D                     __ptext14:	
  4739 ;; *************** function _time_Display *****************
  4740 ;; Defined at:
  4741 ;;		line 167 in file "mcc_generated_files/ht1621.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  num             4   19[BANK0 ] unsigned char [4]
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;Total ram usage:        7 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    6
  4762 ;; This function calls:
  4763 ;;		_Bq32k_Rtc_Read_Time
  4764 ;;		_WriteAll_1621
  4765 ;;		___awdiv
  4766 ;;		___awmod
  4767 ;; This function is called by:
  4768 ;;		_temperature_process
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _time_Display
  4774  050D                     _time_Display:	
  4775                           
  4776                           ;ht1621.c: 169: unsigned char num[4]={0};
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4780  050D  0021               	movlb	1	; select bank1
  4781  050E  082B               	movf	(time_Display@F2129+3)^(0+128),w
  4782  050F  0020               	movlb	0	; select bank0
  4783  0510  00B6               	movwf	time_Display@num+3
  4784  0511  0021               	movlb	1	; select bank1
  4785  0512  082A               	movf	(time_Display@F2129+2)^(0+128),w
  4786  0513  0020               	movlb	0	; select bank0
  4787  0514  00B5               	movwf	time_Display@num+2
  4788  0515  0021               	movlb	1	; select bank1
  4789  0516  0829               	movf	(time_Display@F2129+1)^(0+128),w
  4790  0517  0020               	movlb	0	; select bank0
  4791  0518  00B4               	movwf	time_Display@num+1
  4792  0519  0021               	movlb	1	; select bank1
  4793  051A  0828               	movf	time_Display@F2129^(0+128),w
  4794  051B  0020               	movlb	0	; select bank0
  4795  051C  00B3               	movwf	time_Display@num
  4796                           
  4797                           ;ht1621.c: 170: Bq32k_Rtc_Read_Time(&rtc_tm);
  4798  051D  30D6               	movlw	(low (_rtc_tm| 0))& (0+255)
  4799  051E  318F  279C  3185   	fcall	_Bq32k_Rtc_Read_Time
  4800                           
  4801                           ;ht1621.c: 171: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4802  0521  300A               	movlw	10
  4803  0522  00F3               	movwf	___awdiv@divisor
  4804  0523  3000               	movlw	0
  4805  0524  00F4               	movwf	___awdiv@divisor+1
  4806  0525  0021               	movlb	1	; select bank1
  4807  0526  0858               	movf	(_rtc_tm^(0+128)+2),w
  4808  0527  0020               	movlb	0	; select bank0
  4809  0528  00B0               	movwf	??_time_Display
  4810  0529  01B1               	clrf	??_time_Display+1
  4811  052A  0830               	movf	??_time_Display,w
  4812  052B  00F5               	movwf	___awdiv@dividend
  4813  052C  0831               	movf	??_time_Display+1,w
  4814  052D  00F6               	movwf	___awdiv@dividend+1
  4815  052E  318E  26E7  3185   	fcall	___awdiv
  4816  0531  0874               	movf	?___awdiv+1,w
  4817  0532  0085               	movwf	5
  4818  0533  0873               	movf	?___awdiv,w
  4819  0534  0084               	movwf	4
  4820  0535  3000               	movlw	low (_Dis_TAB| (0+32768))
  4821  0536  0784               	addwf	4,f
  4822  0537  3090               	movlw	high (_Dis_TAB| (0+32768))
  4823  0538  3D85               	addwfc	5,f
  4824  0539  0800               	movf	0,w	;code access
  4825  053A  0020               	movlb	0	; select bank0
  4826  053B  00B2               	movwf	??_time_Display+2
  4827  053C  0832               	movf	??_time_Display+2,w
  4828  053D  00B3               	movwf	time_Display@num
  4829                           
  4830                           ;ht1621.c: 172: num[0] |= 0x08;
  4831  053E  15B3               	bsf	time_Display@num,3
  4832                           
  4833                           ;ht1621.c: 173: num[1] = Dis_TAB[rtc_tm.hours % 10];
  4834  053F  300A               	movlw	10
  4835  0540  00F3               	movwf	___awmod@divisor
  4836  0541  3000               	movlw	0
  4837  0542  00F4               	movwf	___awmod@divisor+1
  4838  0543  0021               	movlb	1	; select bank1
  4839  0544  0858               	movf	(_rtc_tm^(0+128)+2),w
  4840  0545  0020               	movlb	0	; select bank0
  4841  0546  00B0               	movwf	??_time_Display
  4842  0547  01B1               	clrf	??_time_Display+1
  4843  0548  0830               	movf	??_time_Display,w
  4844  0549  00F5               	movwf	___awmod@dividend
  4845  054A  0831               	movf	??_time_Display+1,w
  4846  054B  00F6               	movwf	___awmod@dividend+1
  4847  054C  318D  25BC  3185   	fcall	___awmod
  4848  054F  0874               	movf	?___awmod+1,w
  4849  0550  0085               	movwf	5
  4850  0551  0873               	movf	?___awmod,w
  4851  0552  0084               	movwf	4
  4852  0553  3000               	movlw	low (_Dis_TAB| (0+32768))
  4853  0554  0784               	addwf	4,f
  4854  0555  3090               	movlw	high (_Dis_TAB| (0+32768))
  4855  0556  3D85               	addwfc	5,f
  4856  0557  0800               	movf	0,w	;code access
  4857  0558  0020               	movlb	0	; select bank0
  4858  0559  00B2               	movwf	??_time_Display+2
  4859  055A  0832               	movf	??_time_Display+2,w
  4860  055B  00B4               	movwf	time_Display@num+1
  4861                           
  4862                           ;ht1621.c: 174: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  4863  055C  300A               	movlw	10
  4864  055D  00F3               	movwf	___awdiv@divisor
  4865  055E  3000               	movlw	0
  4866  055F  00F4               	movwf	___awdiv@divisor+1
  4867  0560  0021               	movlb	1	; select bank1
  4868  0561  0857               	movf	(_rtc_tm^(0+128)+1),w
  4869  0562  0020               	movlb	0	; select bank0
  4870  0563  00B0               	movwf	??_time_Display
  4871  0564  01B1               	clrf	??_time_Display+1
  4872  0565  0830               	movf	??_time_Display,w
  4873  0566  00F5               	movwf	___awdiv@dividend
  4874  0567  0831               	movf	??_time_Display+1,w
  4875  0568  00F6               	movwf	___awdiv@dividend+1
  4876  0569  318E  26E7  3185   	fcall	___awdiv
  4877  056C  0874               	movf	?___awdiv+1,w
  4878  056D  0085               	movwf	5
  4879  056E  0873               	movf	?___awdiv,w
  4880  056F  0084               	movwf	4
  4881  0570  3000               	movlw	low (_Dis_TAB| (0+32768))
  4882  0571  0784               	addwf	4,f
  4883  0572  3090               	movlw	high (_Dis_TAB| (0+32768))
  4884  0573  3D85               	addwfc	5,f
  4885  0574  0800               	movf	0,w	;code access
  4886  0575  0020               	movlb	0	; select bank0
  4887  0576  00B2               	movwf	??_time_Display+2
  4888  0577  0832               	movf	??_time_Display+2,w
  4889  0578  00B5               	movwf	time_Display@num+2
  4890                           
  4891                           ;ht1621.c: 175: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  4892  0579  300A               	movlw	10
  4893  057A  00F3               	movwf	___awmod@divisor
  4894  057B  3000               	movlw	0
  4895  057C  00F4               	movwf	___awmod@divisor+1
  4896  057D  0021               	movlb	1	; select bank1
  4897  057E  0857               	movf	(_rtc_tm^(0+128)+1),w
  4898  057F  0020               	movlb	0	; select bank0
  4899  0580  00B0               	movwf	??_time_Display
  4900  0581  01B1               	clrf	??_time_Display+1
  4901  0582  0830               	movf	??_time_Display,w
  4902  0583  00F5               	movwf	___awmod@dividend
  4903  0584  0831               	movf	??_time_Display+1,w
  4904  0585  00F6               	movwf	___awmod@dividend+1
  4905  0586  318D  25BC  3185   	fcall	___awmod
  4906  0589  0874               	movf	?___awmod+1,w
  4907  058A  0085               	movwf	5
  4908  058B  0873               	movf	?___awmod,w
  4909  058C  0084               	movwf	4
  4910  058D  3000               	movlw	low (_Dis_TAB| (0+32768))
  4911  058E  0784               	addwf	4,f
  4912  058F  3090               	movlw	high (_Dis_TAB| (0+32768))
  4913  0590  3D85               	addwfc	5,f
  4914  0591  0800               	movf	0,w	;code access
  4915  0592  0020               	movlb	0	; select bank0
  4916  0593  00B2               	movwf	??_time_Display+2
  4917  0594  0832               	movf	??_time_Display+2,w
  4918  0595  00B6               	movwf	time_Display@num+3
  4919                           
  4920                           ;ht1621.c: 176: WriteAll_1621(0, num, 4);
  4921  0596  3033               	movlw	low time_Display@num
  4922  0597  00A0               	movwf	WriteAll_1621@p
  4923  0598  3000               	movlw	high time_Display@num
  4924  0599  00A1               	movwf	WriteAll_1621@p+1
  4925  059A  3004               	movlw	4
  4926  059B  00B0               	movwf	??_time_Display
  4927  059C  0830               	movf	??_time_Display,w
  4928  059D  00A2               	movwf	WriteAll_1621@cnt
  4929  059E  3000               	movlw	0
  4930  059F  318C  2495         	fcall	_WriteAll_1621
  4931  05A1  0008               	return
  4932  05A2                     __end_of_time_Display:	
  4933                           
  4934                           	psect	text15
  4935  0DBC                     __ptext15:	
  4936 ;; *************** function ___awmod *****************
  4937 ;; Defined at:
  4938 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  divisor         2    3[COMMON] int 
  4941 ;;  dividend        2    5[COMMON] int 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  sign            1    1[BANK0 ] unsigned char 
  4944 ;;  counter         1    0[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2    3[COMMON] int 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:        7 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    3
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_time_Display
  4965 ;;		_bin2bcd
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function ___awmod
  4971  0DBC                     ___awmod:	
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4975  0DBC  0020               	movlb	0	; select bank0
  4976  0DBD  01A1               	clrf	___awmod@sign
  4977  0DBE  1FF6               	btfss	___awmod@dividend+1,7
  4978  0DBF  2DC7               	goto	l4856
  4979  0DC0  09F5               	comf	___awmod@dividend,f
  4980  0DC1  09F6               	comf	___awmod@dividend+1,f
  4981  0DC2  0AF5               	incf	___awmod@dividend,f
  4982  0DC3  1903               	skipnz
  4983  0DC4  0AF6               	incf	___awmod@dividend+1,f
  4984  0DC5  01A1               	clrf	___awmod@sign
  4985  0DC6  0AA1               	incf	___awmod@sign,f
  4986  0DC7                     l4856:	
  4987  0DC7  1FF4               	btfss	___awmod@divisor+1,7
  4988  0DC8  2DCE               	goto	l4860
  4989  0DC9  09F3               	comf	___awmod@divisor,f
  4990  0DCA  09F4               	comf	___awmod@divisor+1,f
  4991  0DCB  0AF3               	incf	___awmod@divisor,f
  4992  0DCC  1903               	skipnz
  4993  0DCD  0AF4               	incf	___awmod@divisor+1,f
  4994  0DCE                     l4860:	
  4995  0DCE  0873               	movf	___awmod@divisor,w
  4996  0DCF  0474               	iorwf	___awmod@divisor+1,w
  4997  0DD0  1903               	btfsc	3,2
  4998  0DD1  2DF5               	goto	l4878
  4999  0DD2  01A0               	clrf	___awmod@counter
  5000  0DD3  0AA0               	incf	___awmod@counter,f
  5001  0DD4                     l4868:	
  5002  0DD4  1BF4               	btfsc	___awmod@divisor+1,7
  5003  0DD5  2DE0               	goto	l4870
  5004  0DD6  3001               	movlw	1
  5005  0DD7                     u4485:	
  5006  0DD7  35F3               	lslf	___awmod@divisor,f
  5007  0DD8  0DF4               	rlf	___awmod@divisor+1,f
  5008  0DD9  0B89               	decfsz	9,f
  5009  0DDA  2DD7               	goto	u4485
  5010  0DDB  3001               	movlw	1
  5011  0DDC  00F7               	movwf	??___awmod
  5012  0DDD  0877               	movf	??___awmod,w
  5013  0DDE  07A0               	addwf	___awmod@counter,f
  5014  0DDF  2DD4               	goto	l4868
  5015  0DE0                     l4870:	
  5016  0DE0  0874               	movf	___awmod@divisor+1,w
  5017  0DE1  0276               	subwf	___awmod@dividend+1,w
  5018  0DE2  1D03               	skipz
  5019  0DE3  2DE6               	goto	u4505
  5020  0DE4  0873               	movf	___awmod@divisor,w
  5021  0DE5  0275               	subwf	___awmod@dividend,w
  5022  0DE6                     u4505:	
  5023  0DE6  1C03               	skipc
  5024  0DE7  2DEC               	goto	l4874
  5025  0DE8  0873               	movf	___awmod@divisor,w
  5026  0DE9  02F5               	subwf	___awmod@dividend,f
  5027  0DEA  0874               	movf	___awmod@divisor+1,w
  5028  0DEB  3BF6               	subwfb	___awmod@dividend+1,f
  5029  0DEC                     l4874:	
  5030  0DEC  3001               	movlw	1
  5031  0DED                     u4515:	
  5032  0DED  36F4               	lsrf	___awmod@divisor+1,f
  5033  0DEE  0CF3               	rrf	___awmod@divisor,f
  5034  0DEF  0B89               	decfsz	9,f
  5035  0DF0  2DED               	goto	u4515
  5036  0DF1  3001               	movlw	1
  5037  0DF2  02A0               	subwf	___awmod@counter,f
  5038  0DF3  1D03               	btfss	3,2
  5039  0DF4  2DE0               	goto	l4870
  5040  0DF5                     l4878:	
  5041  0DF5  0821               	movf	___awmod@sign,w
  5042  0DF6  1903               	btfsc	3,2
  5043  0DF7  2DFD               	goto	l4882
  5044  0DF8  09F5               	comf	___awmod@dividend,f
  5045  0DF9  09F6               	comf	___awmod@dividend+1,f
  5046  0DFA  0AF5               	incf	___awmod@dividend,f
  5047  0DFB  1903               	skipnz
  5048  0DFC  0AF6               	incf	___awmod@dividend+1,f
  5049  0DFD                     l4882:	
  5050  0DFD  0876               	movf	___awmod@dividend+1,w
  5051  0DFE  00F4               	movwf	?___awmod+1
  5052  0DFF  0875               	movf	___awmod@dividend,w
  5053  0E00  00F3               	movwf	?___awmod
  5054  0E01  0008               	return
  5055  0E02                     __end_of___awmod:	
  5056                           
  5057                           	psect	text16
  5058  0EE7                     __ptext16:	
  5059 ;; *************** function ___awdiv *****************
  5060 ;; Defined at:
  5061 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  divisor         2    3[COMMON] int 
  5064 ;;  dividend        2    5[COMMON] int 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  quotient        2    2[BANK0 ] int 
  5067 ;;  sign            1    1[BANK0 ] unsigned char 
  5068 ;;  counter         1    0[BANK0 ] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  2    3[COMMON] int 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;Total ram usage:        9 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    3
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_time_Display
  5089 ;;		_bin2bcd
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           
  5094                           ;psect for function ___awdiv
  5095  0EE7                     ___awdiv:	
  5096                           
  5097                           ;incstack = 0
  5098                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5099  0EE7  0020               	movlb	0	; select bank0
  5100  0EE8  01A1               	clrf	___awdiv@sign
  5101  0EE9  1FF4               	btfss	___awdiv@divisor+1,7
  5102  0EEA  2EF2               	goto	l4812
  5103  0EEB  09F3               	comf	___awdiv@divisor,f
  5104  0EEC  09F4               	comf	___awdiv@divisor+1,f
  5105  0EED  0AF3               	incf	___awdiv@divisor,f
  5106  0EEE  1903               	skipnz
  5107  0EEF  0AF4               	incf	___awdiv@divisor+1,f
  5108  0EF0  01A1               	clrf	___awdiv@sign
  5109  0EF1  0AA1               	incf	___awdiv@sign,f
  5110  0EF2                     l4812:	
  5111  0EF2  1FF6               	btfss	___awdiv@dividend+1,7
  5112  0EF3  2EFD               	goto	l4818
  5113  0EF4  09F5               	comf	___awdiv@dividend,f
  5114  0EF5  09F6               	comf	___awdiv@dividend+1,f
  5115  0EF6  0AF5               	incf	___awdiv@dividend,f
  5116  0EF7  1903               	skipnz
  5117  0EF8  0AF6               	incf	___awdiv@dividend+1,f
  5118  0EF9  3001               	movlw	1
  5119  0EFA  00F7               	movwf	??___awdiv
  5120  0EFB  0877               	movf	??___awdiv,w
  5121  0EFC  06A1               	xorwf	___awdiv@sign,f
  5122  0EFD                     l4818:	
  5123  0EFD  01A2               	clrf	___awdiv@quotient
  5124  0EFE  01A3               	clrf	___awdiv@quotient+1
  5125  0EFF  0873               	movf	___awdiv@divisor,w
  5126  0F00  0474               	iorwf	___awdiv@divisor+1,w
  5127  0F01  1903               	btfsc	3,2
  5128  0F02  2F2C               	goto	l4840
  5129  0F03  01A0               	clrf	___awdiv@counter
  5130  0F04  0AA0               	incf	___awdiv@counter,f
  5131  0F05                     l4828:	
  5132  0F05  1BF4               	btfsc	___awdiv@divisor+1,7
  5133  0F06  2F11               	goto	l4830
  5134  0F07  3001               	movlw	1
  5135  0F08                     u4385:	
  5136  0F08  35F3               	lslf	___awdiv@divisor,f
  5137  0F09  0DF4               	rlf	___awdiv@divisor+1,f
  5138  0F0A  0B89               	decfsz	9,f
  5139  0F0B  2F08               	goto	u4385
  5140  0F0C  3001               	movlw	1
  5141  0F0D  00F7               	movwf	??___awdiv
  5142  0F0E  0877               	movf	??___awdiv,w
  5143  0F0F  07A0               	addwf	___awdiv@counter,f
  5144  0F10  2F05               	goto	l4828
  5145  0F11                     l4830:	
  5146  0F11  3001               	movlw	1
  5147  0F12                     u4405:	
  5148  0F12  35A2               	lslf	___awdiv@quotient,f
  5149  0F13  0DA3               	rlf	___awdiv@quotient+1,f
  5150  0F14  0B89               	decfsz	9,f
  5151  0F15  2F12               	goto	u4405
  5152  0F16  0874               	movf	___awdiv@divisor+1,w
  5153  0F17  0276               	subwf	___awdiv@dividend+1,w
  5154  0F18  1D03               	skipz
  5155  0F19  2F1C               	goto	u4415
  5156  0F1A  0873               	movf	___awdiv@divisor,w
  5157  0F1B  0275               	subwf	___awdiv@dividend,w
  5158  0F1C                     u4415:	
  5159  0F1C  1C03               	skipc
  5160  0F1D  2F23               	goto	l4836
  5161  0F1E  0873               	movf	___awdiv@divisor,w
  5162  0F1F  02F5               	subwf	___awdiv@dividend,f
  5163  0F20  0874               	movf	___awdiv@divisor+1,w
  5164  0F21  3BF6               	subwfb	___awdiv@dividend+1,f
  5165  0F22  1422               	bsf	___awdiv@quotient,0
  5166  0F23                     l4836:	
  5167  0F23  3001               	movlw	1
  5168  0F24                     u4425:	
  5169  0F24  36F4               	lsrf	___awdiv@divisor+1,f
  5170  0F25  0CF3               	rrf	___awdiv@divisor,f
  5171  0F26  0B89               	decfsz	9,f
  5172  0F27  2F24               	goto	u4425
  5173  0F28  3001               	movlw	1
  5174  0F29  02A0               	subwf	___awdiv@counter,f
  5175  0F2A  1D03               	btfss	3,2
  5176  0F2B  2F11               	goto	l4830
  5177  0F2C                     l4840:	
  5178  0F2C  0821               	movf	___awdiv@sign,w
  5179  0F2D  1903               	btfsc	3,2
  5180  0F2E  2F34               	goto	l4844
  5181  0F2F  09A2               	comf	___awdiv@quotient,f
  5182  0F30  09A3               	comf	___awdiv@quotient+1,f
  5183  0F31  0AA2               	incf	___awdiv@quotient,f
  5184  0F32  1903               	skipnz
  5185  0F33  0AA3               	incf	___awdiv@quotient+1,f
  5186  0F34                     l4844:	
  5187  0F34  0823               	movf	___awdiv@quotient+1,w
  5188  0F35  00F4               	movwf	?___awdiv+1
  5189  0F36  0822               	movf	___awdiv@quotient,w
  5190  0F37  00F3               	movwf	?___awdiv
  5191  0F38  0008               	return
  5192  0F39                     __end_of___awdiv:	
  5193                           
  5194                           	psect	text17
  5195  0D3A                     __ptext17:	
  5196 ;; *************** function _temperature_display *****************
  5197 ;; Defined at:
  5198 ;;		line 301 in file "mcc_generated_files/max31856.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;Total ram usage:        1 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:   10
  5219 ;; This function calls:
  5220 ;;		_Tc_Display
  5221 ;;		_err_Display
  5222 ;;		_maxim_31856_write_register
  5223 ;;		_maxim_clear_fault_status
  5224 ;;		_tc_temperature_trans
  5225 ;; This function is called by:
  5226 ;;		_temperature_process
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function _temperature_display
  5232  0D3A                     _temperature_display:	
  5233                           
  5234                           ;max31856.c: 303: if(uch_sr==(uint8_t)0x00)
  5235                           
  5236                           ;incstack = 0
  5237                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5238  0D3A  0021               	movlb	1	; select bank1
  5239  0D3B  083F               	movf	_uch_sr^(0+128),w
  5240  0D3C  1D03               	btfss	3,2
  5241  0D3D  2D53               	goto	l4922
  5242                           
  5243                           ;max31856.c: 304: {
  5244                           ;max31856.c: 305: tc_temperature_trans();
  5245  0D3E  3180  203F  318D   	fcall	_tc_temperature_trans
  5246                           
  5247                           ;max31856.c: 306: Tc_Display();
  5248  0D41  3184  244F  318D   	fcall	_Tc_Display
  5249                           
  5250                           ;max31856.c: 307: if(time_count == 1)
  5251  0D44  0020               	movlb	0	; select bank0
  5252  0D45  036C               	decf	_time_count,w
  5253  0D46  1D03               	btfss	3,2
  5254  0D47  2D4B               	goto	l4918
  5255                           
  5256                           ;max31856.c: 308: {
  5257                           ;max31856.c: 309: CH1_state = 0;
  5258  0D48  0021               	movlb	1	; select bank1
  5259  0D49  01B2               	clrf	_CH1_state^(0+128)
  5260                           
  5261                           ;max31856.c: 310: }
  5262  0D4A  0008               	return
  5263  0D4B                     l4918:	
  5264                           
  5265                           ;max31856.c: 311: else if(time_count == 3)
  5266  0D4B  3003               	movlw	3
  5267  0D4C  0020               	movlb	0	; select bank0
  5268  0D4D  066C               	xorwf	_time_count,w
  5269  0D4E  1D03               	btfss	3,2
  5270  0D4F  0008               	return
  5271                           
  5272                           ;max31856.c: 312: {
  5273                           ;max31856.c: 313: CH2_state = 0;
  5274  0D50  0021               	movlb	1	; select bank1
  5275  0D51  01B3               	clrf	_CH2_state^(0+128)
  5276                           
  5277                           ;max31856.c: 314: }
  5278                           ;max31856.c: 315: }
  5279  0D52  0008               	return
  5280  0D53                     l4922:	
  5281                           
  5282                           ;max31856.c: 316: else
  5283                           ;max31856.c: 317: {
  5284                           ;max31856.c: 318: if(time_count == 1)
  5285  0D53  0020               	movlb	0	; select bank0
  5286  0D54  036C               	decf	_time_count,w
  5287  0D55  1D03               	btfss	3,2
  5288  0D56  2D5B               	goto	l4926
  5289                           
  5290                           ;max31856.c: 319: {
  5291                           ;max31856.c: 320: CH1_state = 1;
  5292  0D57  0021               	movlb	1	; select bank1
  5293  0D58  01B2               	clrf	_CH1_state^(0+128)
  5294  0D59  0AB2               	incf	_CH1_state^(0+128),f
  5295                           
  5296                           ;max31856.c: 321: }
  5297  0D5A  2D63               	goto	l4930
  5298  0D5B                     l4926:	
  5299                           
  5300                           ;max31856.c: 322: else if(time_count == 3)
  5301  0D5B  3003               	movlw	3
  5302  0D5C  0020               	movlb	0	; select bank0
  5303  0D5D  066C               	xorwf	_time_count,w
  5304  0D5E  1D03               	btfss	3,2
  5305  0D5F  2D63               	goto	l4930
  5306                           
  5307                           ;max31856.c: 323: {
  5308                           ;max31856.c: 324: CH2_state = 1;
  5309  0D60  0021               	movlb	1	; select bank1
  5310  0D61  01B3               	clrf	_CH2_state^(0+128)
  5311  0D62  0AB3               	incf	_CH2_state^(0+128),f
  5312  0D63                     l4930:	
  5313                           
  5314                           ;max31856.c: 325: }
  5315                           ;max31856.c: 326: err_Display();
  5316  0D63  318B  2346  318D   	fcall	_err_Display
  5317                           
  5318                           ;max31856.c: 327: maxim_31856_write_register(0x82, 0xFF);
  5319  0D66  30FF               	movlw	255
  5320  0D67  0020               	movlb	0	; select bank0
  5321  0D68  00D7               	movwf	??_temperature_display
  5322  0D69  0857               	movf	??_temperature_display,w
  5323  0D6A  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5324  0D6B  3082               	movlw	130
  5325  0D6C  3188  20BF  318D   	fcall	_maxim_31856_write_register
  5326                           
  5327                           ;max31856.c: 328: maxim_clear_fault_status();
  5328  0D6F  3188  20CC  318D   	fcall	_maxim_clear_fault_status
  5329                           
  5330                           ;max31856.c: 329: maxim_31856_write_register(0x82, 0x00);
  5331  0D72  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5332  0D73  3082               	movlw	130
  5333  0D74  3188  20BF         	fcall	_maxim_31856_write_register
  5334  0D76  0008               	return
  5335  0D77                     __end_of_temperature_display:	
  5336                           
  5337                           	psect	text18
  5338  003F                     __ptext18:	
  5339 ;; *************** function _tc_temperature_trans *****************
  5340 ;; Defined at:
  5341 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  temperature_    2   53[BANK0 ] unsigned int 
  5346 ;;  var_time        2   51[BANK0 ] unsigned int 
  5347 ;;  temperature_    2   49[BANK0 ] unsigned int 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;Total ram usage:       10 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    9
  5364 ;; This function calls:
  5365 ;;		_Calculate_Time
  5366 ;;		_Save_Write_word
  5367 ;; This function is called by:
  5368 ;;		_temperature_display
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function _tc_temperature_trans
  5374  003F                     _tc_temperature_trans:	
  5375                           
  5376                           ;max31856.c: 170: unsigned int temperature_absolute = 0;
  5377                           
  5378                           ;incstack = 0
  5379                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5380  003F  0020               	movlb	0	; select bank0
  5381  0040  01D1               	clrf	tc_temperature_trans@temperature_absolute
  5382  0041  01D2               	clrf	tc_temperature_trans@temperature_absolute+1
  5383                           
  5384                           ;max31856.c: 171: unsigned int temperature_temp = 0;
  5385  0042  01D5               	clrf	tc_temperature_trans@temperature_temp
  5386  0043  01D6               	clrf	tc_temperature_trans@temperature_temp+1
  5387                           
  5388                           ;max31856.c: 172: unsigned int var_time=0;
  5389  0044  01D3               	clrf	tc_temperature_trans@var_time
  5390  0045  01D4               	clrf	tc_temperature_trans@var_time+1
  5391                           
  5392                           ;max31856.c: 173: temperature_value = 0;
  5393  0046  3000               	movlw	0
  5394  0047  00E4               	movwf	_temperature_value+3
  5395  0048  3000               	movlw	0
  5396  0049  00E3               	movwf	_temperature_value+2
  5397  004A  3000               	movlw	0
  5398  004B  00E2               	movwf	_temperature_value+1
  5399  004C  3000               	movlw	0
  5400  004D  00E1               	movwf	_temperature_value
  5401                           
  5402                           ;max31856.c: 174: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5403  004E  303F               	movlw	63
  5404  004F  056D               	andwf	_uch_ltcbh,w
  5405  0050  00CD               	movwf	??_tc_temperature_trans
  5406  0051  084D               	movf	??_tc_temperature_trans,w
  5407  0052  00CF               	movwf	??_tc_temperature_trans+2
  5408  0053  0021               	movlb	1	; select bank1
  5409  0054  083D               	movf	_uch_ltcbm^(0+128),w
  5410  0055  0020               	movlb	0	; select bank0
  5411  0056  00CE               	movwf	??_tc_temperature_trans+1
  5412  0057  0D4F               	rlf	??_tc_temperature_trans+2,w
  5413  0058  0CCF               	rrf	??_tc_temperature_trans+2,f
  5414  0059  0CCE               	rrf	??_tc_temperature_trans+1,f
  5415  005A  084E               	movf	??_tc_temperature_trans+1,w
  5416  005B  00E1               	movwf	_temperature_value
  5417  005C  084F               	movf	??_tc_temperature_trans+2,w
  5418  005D  00E2               	movwf	_temperature_value+1
  5419  005E  0D89               	rlf	9,f
  5420  005F  3B89               	subwfb	9,f
  5421  0060  0989               	comf	9,f
  5422  0061  00E3               	movwf	_temperature_value+2
  5423  0062  00E4               	movwf	_temperature_value+3
  5424                           
  5425                           ;max31856.c: 175: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5426  0063  1BED               	btfsc	_uch_ltcbh,7
  5427  0064  16E2               	bsf	_temperature_value+1,5
  5428                           
  5429                           ;max31856.c: 176: temperature_temp = temperature_value;
  5430  0065  0862               	movf	_temperature_value+1,w
  5431  0066  00D6               	movwf	tc_temperature_trans@temperature_temp+1
  5432  0067  0861               	movf	_temperature_value,w
  5433  0068  00D5               	movwf	tc_temperature_trans@temperature_temp
  5434                           
  5435                           ;max31856.c: 179: if(time_count == 1 && Record_flag == 1)
  5436  0069  036C               	decf	_time_count,w
  5437  006A  1D03               	btfss	3,2
  5438  006B  28F1               	goto	l4690
  5439  006C  036A               	decf	_Record_flag,w
  5440  006D  1D03               	btfss	3,2
  5441  006E  28F1               	goto	l4690
  5442                           
  5443                           ;max31856.c: 180: {
  5444                           ;max31856.c: 181: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5445  006F  3020               	movlw	32
  5446  0070  0656               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5447  0071  0455               	iorwf	tc_temperature_trans@temperature_temp,w
  5448  0072  1903               	btfsc	3,2
  5449  0073  2876               	goto	u4040
  5450  0074  3001               	movlw	1
  5451  0075  2877               	goto	u4050
  5452  0076                     u4040:	
  5453  0076  3000               	movlw	0
  5454  0077                     u4050:	
  5455  0077  00CD               	movwf	??_tc_temperature_trans
  5456  0078  01CE               	clrf	??_tc_temperature_trans+1
  5457  0079  0865               	movf	_CH1_temperature,w
  5458  007A  054D               	andwf	??_tc_temperature_trans,w
  5459  007B  00CF               	movwf	??_tc_temperature_trans+2
  5460  007C  0866               	movf	_CH1_temperature+1,w
  5461  007D  054E               	andwf	??_tc_temperature_trans+1,w
  5462  007E  00D0               	movwf	??_tc_temperature_trans+3
  5463  007F  1AD0               	btfsc	??_tc_temperature_trans+3,5
  5464  0080  28C7               	goto	L4
  5465                           
  5466                           ;max31856.c: 193: else
  5467                           ;max31856.c: 194: {
  5468                           ;max31856.c: 195: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5469                           
  5470                           ;max31856.c: 192: }
  5471                           
  5472                           ;max31856.c: 191: Cur_temperature_time_ch1 = 0;
  5473                           
  5474                           ;max31856.c: 190: Save_Write_word(temperature_value);
  5475                           
  5476                           ;max31856.c: 189: Save_Write_word(var_time);
  5477                           
  5478                           ;max31856.c: 187: var_time |= 0x2000;
  5479                           
  5480                           ;max31856.c: 185: if(CH1_state == 1) var_time |= 0x400;
  5481                           
  5482                           ;max31856.c: 184: var_time |= 0x100;
  5483                           
  5484                           ;max31856.c: 182: {
  5485                           ;max31856.c: 183: var_time = Calculate_Time();
  5486  0081  1EE6               	btfss	_CH1_temperature+1,5
  5487  0082  2890               	goto	l4664
  5488  0083  0965               	comf	_CH1_temperature,w
  5489  0084  00CD               	movwf	??_tc_temperature_trans
  5490  0085  0966               	comf	_CH1_temperature+1,w
  5491  0086  00CE               	movwf	??_tc_temperature_trans+1
  5492  0087  0ACD               	incf	??_tc_temperature_trans,f
  5493  0088  1903               	skipnz
  5494  0089  0ACE               	incf	??_tc_temperature_trans+1,f
  5495  008A  084D               	movf	??_tc_temperature_trans,w
  5496  008B  3E00               	addlw	0
  5497  008C  00E5               	movwf	_CH1_temperature
  5498  008D  3040               	movlw	64
  5499  008E  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5500  008F  00E6               	movwf	_CH1_temperature+1
  5501  0090                     l4664:	
  5502                           
  5503                           ;max31856.c: 196: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5504  0090  1ED6               	btfss	tc_temperature_trans@temperature_temp+1,5
  5505  0091  289F               	goto	l4668
  5506  0092  0955               	comf	tc_temperature_trans@temperature_temp,w
  5507  0093  00CD               	movwf	??_tc_temperature_trans
  5508  0094  0956               	comf	tc_temperature_trans@temperature_temp+1,w
  5509  0095  00CE               	movwf	??_tc_temperature_trans+1
  5510  0096  0ACD               	incf	??_tc_temperature_trans,f
  5511  0097  1903               	skipnz
  5512  0098  0ACE               	incf	??_tc_temperature_trans+1,f
  5513  0099  084D               	movf	??_tc_temperature_trans,w
  5514  009A  3E00               	addlw	0
  5515  009B  00D5               	movwf	tc_temperature_trans@temperature_temp
  5516  009C  3040               	movlw	64
  5517  009D  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5518  009E  00D6               	movwf	tc_temperature_trans@temperature_temp+1
  5519  009F                     l4668:	
  5520                           
  5521                           ;max31856.c: 197: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5522  009F  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5523  00A0  0266               	subwf	_CH1_temperature+1,w
  5524  00A1  1D03               	skipz
  5525  00A2  28A5               	goto	u4105
  5526  00A3  0855               	movf	tc_temperature_trans@temperature_temp,w
  5527  00A4  0265               	subwf	_CH1_temperature,w
  5528  00A5                     u4105:	
  5529  00A5  1803               	skipnc
  5530  00A6  28B3               	goto	l4672
  5531  00A7  0965               	comf	_CH1_temperature,w
  5532  00A8  00CD               	movwf	??_tc_temperature_trans
  5533  00A9  0966               	comf	_CH1_temperature+1,w
  5534  00AA  00CE               	movwf	??_tc_temperature_trans+1
  5535  00AB  0ACD               	incf	??_tc_temperature_trans,f
  5536  00AC  1903               	skipnz
  5537  00AD  0ACE               	incf	??_tc_temperature_trans+1,f
  5538  00AE  0855               	movf	tc_temperature_trans@temperature_temp,w
  5539  00AF  074D               	addwf	??_tc_temperature_trans,w
  5540  00B0  00D1               	movwf	tc_temperature_trans@temperature_absolute
  5541  00B1  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5542  00B2  28BE               	goto	L2
  5543  00B3                     l4672:	
  5544                           
  5545                           ;max31856.c: 198: else temperature_absolute = CH1_temperature - temperature_temp;
  5546  00B3  0955               	comf	tc_temperature_trans@temperature_temp,w
  5547  00B4  00CD               	movwf	??_tc_temperature_trans
  5548  00B5  0956               	comf	tc_temperature_trans@temperature_temp+1,w
  5549  00B6  00CE               	movwf	??_tc_temperature_trans+1
  5550  00B7  0ACD               	incf	??_tc_temperature_trans,f
  5551  00B8  1903               	skipnz
  5552  00B9  0ACE               	incf	??_tc_temperature_trans+1,f
  5553  00BA  0865               	movf	_CH1_temperature,w
  5554  00BB  074D               	addwf	??_tc_temperature_trans,w
  5555  00BC  00D1               	movwf	tc_temperature_trans@temperature_absolute
  5556  00BD  0866               	movf	_CH1_temperature+1,w
  5557  00BE                     L2:	
  5558  00BE  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5559  00BF  00D2               	movwf	tc_temperature_trans@temperature_absolute+1
  5560                           
  5561                           ;max31856.c: 199: if( temperature_absolute > 4)
  5562  00C0  3000               	movlw	0
  5563  00C1  0252               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5564  00C2  3005               	movlw	5
  5565  00C3  1903               	skipnz
  5566  00C4  0251               	subwf	tc_temperature_trans@temperature_absolute,w
  5567  00C5  1C03               	skipc
  5568  00C6  28EB               	goto	l4688
  5569  00C7                     L4:	
  5570                           
  5571                           ;max31856.c: 200: {
  5572                           ;max31856.c: 201: var_time = Calculate_Time();
  5573  00C7  3181  21E7  3180   	fcall	_Calculate_Time
  5574  00CA  0020               	movlb	0	; select bank0
  5575  00CB  00CD               	movwf	??_tc_temperature_trans
  5576  00CC  01CE               	clrf	??_tc_temperature_trans+1
  5577  00CD  084D               	movf	??_tc_temperature_trans,w
  5578  00CE  00D3               	movwf	tc_temperature_trans@var_time
  5579  00CF  084E               	movf	??_tc_temperature_trans+1,w
  5580  00D0  00D4               	movwf	tc_temperature_trans@var_time+1
  5581                           
  5582                           ;max31856.c: 202: var_time |= 0x100;
  5583  00D1  1454               	bsf	tc_temperature_trans@var_time+1,0
  5584                           
  5585                           ;max31856.c: 203: if(CH1_state == 1) var_time |= 0x400;
  5586  00D2  0021               	movlb	1	; select bank1
  5587  00D3  0332               	decf	_CH1_state^(0+128),w
  5588  00D4  1D03               	btfss	3,2
  5589  00D5  28D8               	goto	l516
  5590  00D6  0020               	movlb	0	; select bank0
  5591  00D7  1554               	bsf	tc_temperature_trans@var_time+1,2
  5592  00D8                     l516:	
  5593                           
  5594                           ;max31856.c: 205: var_time |= 0x2000;
  5595  00D8  0020               	movlb	0	; select bank0
  5596  00D9  16D4               	bsf	tc_temperature_trans@var_time+1,5
  5597                           
  5598                           ;max31856.c: 207: Save_Write_word(var_time);
  5599  00DA  0854               	movf	tc_temperature_trans@var_time+1,w
  5600  00DB  00B4               	movwf	Save_Write_word@data+1
  5601  00DC  0853               	movf	tc_temperature_trans@var_time,w
  5602  00DD  00B3               	movwf	Save_Write_word@data
  5603  00DE  3187  27E8  3180   	fcall	_Save_Write_word
  5604                           
  5605                           ;max31856.c: 208: Save_Write_word(temperature_value);
  5606  00E1  0020               	movlb	0	; select bank0
  5607  00E2  0862               	movf	_temperature_value+1,w
  5608  00E3  00B4               	movwf	Save_Write_word@data+1
  5609  00E4  0861               	movf	_temperature_value,w
  5610  00E5  00B3               	movwf	Save_Write_word@data
  5611  00E6  3187  27E8  3180   	fcall	_Save_Write_word
  5612                           
  5613                           ;max31856.c: 209: Cur_temperature_time_ch1 = 0;
  5614  00E9  0021               	movlb	1	; select bank1
  5615  00EA  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
  5616  00EB                     l4688:	
  5617                           
  5618                           ;max31856.c: 210: }
  5619                           ;max31856.c: 211: }
  5620                           ;max31856.c: 212: CH1_temperature = temperature_value;
  5621  00EB  0020               	movlb	0	; select bank0
  5622  00EC  0862               	movf	_temperature_value+1,w
  5623  00ED  00E6               	movwf	_CH1_temperature+1
  5624  00EE  0861               	movf	_temperature_value,w
  5625  00EF  00E5               	movwf	_CH1_temperature
  5626                           
  5627                           ;max31856.c: 213: }
  5628  00F0  2979               	goto	l4736
  5629  00F1                     l4690:	
  5630                           
  5631                           ;max31856.c: 214: else if( time_count == 3 && Record_flag == 1)
  5632  00F1  3003               	movlw	3
  5633  00F2  066C               	xorwf	_time_count,w
  5634  00F3  1D03               	btfss	3,2
  5635  00F4  2979               	goto	l4736
  5636  00F5  036A               	decf	_Record_flag,w
  5637  00F6  1D03               	btfss	3,2
  5638  00F7  2979               	goto	l4736
  5639                           
  5640                           ;max31856.c: 215: {
  5641                           ;max31856.c: 216: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5642  00F8  3020               	movlw	32
  5643  00F9  0656               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5644  00FA  0455               	iorwf	tc_temperature_trans@temperature_temp,w
  5645  00FB  1903               	btfsc	3,2
  5646  00FC  28FF               	goto	u4150
  5647  00FD  3001               	movlw	1
  5648  00FE  2900               	goto	u4160
  5649  00FF                     u4150:	
  5650  00FF  3000               	movlw	0
  5651  0100                     u4160:	
  5652  0100  00CD               	movwf	??_tc_temperature_trans
  5653  0101  01CE               	clrf	??_tc_temperature_trans+1
  5654  0102  0867               	movf	_CH2_temperature,w
  5655  0103  054D               	andwf	??_tc_temperature_trans,w
  5656  0104  00CF               	movwf	??_tc_temperature_trans+2
  5657  0105  0868               	movf	_CH2_temperature+1,w
  5658  0106  054E               	andwf	??_tc_temperature_trans+1,w
  5659  0107  00D0               	movwf	??_tc_temperature_trans+3
  5660  0108  1AD0               	btfsc	??_tc_temperature_trans+3,5
  5661  0109  2950               	goto	L5
  5662                           
  5663                           ;max31856.c: 228: else
  5664                           ;max31856.c: 229: {
  5665                           ;max31856.c: 230: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5666                           
  5667                           ;max31856.c: 227: }
  5668                           
  5669                           ;max31856.c: 226: Cur_temperature_time_ch2 = 0;
  5670                           
  5671                           ;max31856.c: 225: Save_Write_word(temperature_value);
  5672                           
  5673                           ;max31856.c: 224: Save_Write_word(var_time);
  5674                           
  5675                           ;max31856.c: 222: var_time |= 0x2000;
  5676                           
  5677                           ;max31856.c: 220: if(CH2_state == 1) var_time |= 0x800;
  5678                           
  5679                           ;max31856.c: 219: var_time |= 0x200;
  5680                           
  5681                           ;max31856.c: 217: {
  5682                           ;max31856.c: 218: var_time = Calculate_Time();
  5683  010A  1EE8               	btfss	_CH2_temperature+1,5
  5684  010B  2919               	goto	l4710
  5685  010C  0967               	comf	_CH2_temperature,w
  5686  010D  00CD               	movwf	??_tc_temperature_trans
  5687  010E  0968               	comf	_CH2_temperature+1,w
  5688  010F  00CE               	movwf	??_tc_temperature_trans+1
  5689  0110  0ACD               	incf	??_tc_temperature_trans,f
  5690  0111  1903               	skipnz
  5691  0112  0ACE               	incf	??_tc_temperature_trans+1,f
  5692  0113  084D               	movf	??_tc_temperature_trans,w
  5693  0114  3E00               	addlw	0
  5694  0115  00E7               	movwf	_CH2_temperature
  5695  0116  3040               	movlw	64
  5696  0117  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5697  0118  00E8               	movwf	_CH2_temperature+1
  5698  0119                     l4710:	
  5699                           
  5700                           ;max31856.c: 231: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5701  0119  1ED6               	btfss	tc_temperature_trans@temperature_temp+1,5
  5702  011A  2928               	goto	l4714
  5703  011B  0955               	comf	tc_temperature_trans@temperature_temp,w
  5704  011C  00CD               	movwf	??_tc_temperature_trans
  5705  011D  0956               	comf	tc_temperature_trans@temperature_temp+1,w
  5706  011E  00CE               	movwf	??_tc_temperature_trans+1
  5707  011F  0ACD               	incf	??_tc_temperature_trans,f
  5708  0120  1903               	skipnz
  5709  0121  0ACE               	incf	??_tc_temperature_trans+1,f
  5710  0122  084D               	movf	??_tc_temperature_trans,w
  5711  0123  3E00               	addlw	0
  5712  0124  00D5               	movwf	tc_temperature_trans@temperature_temp
  5713  0125  3040               	movlw	64
  5714  0126  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5715  0127  00D6               	movwf	tc_temperature_trans@temperature_temp+1
  5716  0128                     l4714:	
  5717                           
  5718                           ;max31856.c: 232: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  5719  0128  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5720  0129  0268               	subwf	_CH2_temperature+1,w
  5721  012A  1D03               	skipz
  5722  012B  292E               	goto	u4215
  5723  012C  0855               	movf	tc_temperature_trans@temperature_temp,w
  5724  012D  0267               	subwf	_CH2_temperature,w
  5725  012E                     u4215:	
  5726  012E  1803               	skipnc
  5727  012F  293C               	goto	l4718
  5728  0130  0967               	comf	_CH2_temperature,w
  5729  0131  00CD               	movwf	??_tc_temperature_trans
  5730  0132  0968               	comf	_CH2_temperature+1,w
  5731  0133  00CE               	movwf	??_tc_temperature_trans+1
  5732  0134  0ACD               	incf	??_tc_temperature_trans,f
  5733  0135  1903               	skipnz
  5734  0136  0ACE               	incf	??_tc_temperature_trans+1,f
  5735  0137  0855               	movf	tc_temperature_trans@temperature_temp,w
  5736  0138  074D               	addwf	??_tc_temperature_trans,w
  5737  0139  00D1               	movwf	tc_temperature_trans@temperature_absolute
  5738  013A  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5739  013B  2947               	goto	L3
  5740  013C                     l4718:	
  5741                           
  5742                           ;max31856.c: 233: else temperature_absolute = CH2_temperature - temperature_temp;
  5743  013C  0955               	comf	tc_temperature_trans@temperature_temp,w
  5744  013D  00CD               	movwf	??_tc_temperature_trans
  5745  013E  0956               	comf	tc_temperature_trans@temperature_temp+1,w
  5746  013F  00CE               	movwf	??_tc_temperature_trans+1
  5747  0140  0ACD               	incf	??_tc_temperature_trans,f
  5748  0141  1903               	skipnz
  5749  0142  0ACE               	incf	??_tc_temperature_trans+1,f
  5750  0143  0867               	movf	_CH2_temperature,w
  5751  0144  074D               	addwf	??_tc_temperature_trans,w
  5752  0145  00D1               	movwf	tc_temperature_trans@temperature_absolute
  5753  0146  0868               	movf	_CH2_temperature+1,w
  5754  0147                     L3:	
  5755  0147  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5756  0148  00D2               	movwf	tc_temperature_trans@temperature_absolute+1
  5757                           
  5758                           ;max31856.c: 234: if( temperature_absolute > 4)
  5759  0149  3000               	movlw	0
  5760  014A  0252               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5761  014B  3005               	movlw	5
  5762  014C  1903               	skipnz
  5763  014D  0251               	subwf	tc_temperature_trans@temperature_absolute,w
  5764  014E  1C03               	skipc
  5765  014F  2974               	goto	l4734
  5766  0150                     L5:	
  5767                           
  5768                           ;max31856.c: 235: {
  5769                           ;max31856.c: 236: var_time = Calculate_Time();
  5770  0150  3181  21E7  3180   	fcall	_Calculate_Time
  5771  0153  0020               	movlb	0	; select bank0
  5772  0154  00CD               	movwf	??_tc_temperature_trans
  5773  0155  01CE               	clrf	??_tc_temperature_trans+1
  5774  0156  084D               	movf	??_tc_temperature_trans,w
  5775  0157  00D3               	movwf	tc_temperature_trans@var_time
  5776  0158  084E               	movf	??_tc_temperature_trans+1,w
  5777  0159  00D4               	movwf	tc_temperature_trans@var_time+1
  5778                           
  5779                           ;max31856.c: 237: var_time |= 0x200;
  5780  015A  14D4               	bsf	tc_temperature_trans@var_time+1,1
  5781                           
  5782                           ;max31856.c: 238: if(CH2_state == 1) var_time |= 0x800;
  5783  015B  0021               	movlb	1	; select bank1
  5784  015C  0333               	decf	_CH2_state^(0+128),w
  5785  015D  1D03               	btfss	3,2
  5786  015E  2961               	goto	l527
  5787  015F  0020               	movlb	0	; select bank0
  5788  0160  15D4               	bsf	tc_temperature_trans@var_time+1,3
  5789  0161                     l527:	
  5790                           
  5791                           ;max31856.c: 240: var_time |= 0x2000;
  5792  0161  0020               	movlb	0	; select bank0
  5793  0162  16D4               	bsf	tc_temperature_trans@var_time+1,5
  5794                           
  5795                           ;max31856.c: 242: Save_Write_word(var_time);
  5796  0163  0854               	movf	tc_temperature_trans@var_time+1,w
  5797  0164  00B4               	movwf	Save_Write_word@data+1
  5798  0165  0853               	movf	tc_temperature_trans@var_time,w
  5799  0166  00B3               	movwf	Save_Write_word@data
  5800  0167  3187  27E8  3180   	fcall	_Save_Write_word
  5801                           
  5802                           ;max31856.c: 243: Save_Write_word(temperature_value);
  5803  016A  0020               	movlb	0	; select bank0
  5804  016B  0862               	movf	_temperature_value+1,w
  5805  016C  00B4               	movwf	Save_Write_word@data+1
  5806  016D  0861               	movf	_temperature_value,w
  5807  016E  00B3               	movwf	Save_Write_word@data
  5808  016F  3187  27E8  3180   	fcall	_Save_Write_word
  5809                           
  5810                           ;max31856.c: 244: Cur_temperature_time_ch2 = 0;
  5811  0172  0021               	movlb	1	; select bank1
  5812  0173  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
  5813  0174                     l4734:	
  5814                           
  5815                           ;max31856.c: 245: }
  5816                           ;max31856.c: 246: }
  5817                           ;max31856.c: 247: CH2_temperature = temperature_value;
  5818  0174  0020               	movlb	0	; select bank0
  5819  0175  0862               	movf	_temperature_value+1,w
  5820  0176  00E8               	movwf	_CH2_temperature+1
  5821  0177  0861               	movf	_temperature_value,w
  5822  0178  00E7               	movwf	_CH2_temperature
  5823  0179                     l4736:	
  5824                           
  5825                           ;max31856.c: 248: }
  5826                           ;max31856.c: 250: temperature_temp = temperature_value;
  5827  0179  0862               	movf	_temperature_value+1,w
  5828  017A  00D6               	movwf	tc_temperature_trans@temperature_temp+1
  5829  017B  0861               	movf	_temperature_value,w
  5830  017C  00D5               	movwf	tc_temperature_trans@temperature_temp
  5831                           
  5832                           ;max31856.c: 251: if((uch_ltcbh&0x80)==0x80)
  5833  017D  1FED               	btfss	_uch_ltcbh,7
  5834  017E  29BA               	goto	l4754
  5835                           
  5836                           ;max31856.c: 252: {
  5837                           ;max31856.c: 253: temperature_sign = 1;
  5838  017F  0021               	movlb	1	; select bank1
  5839  0180  01B7               	clrf	_temperature_sign^(0+128)
  5840  0181  0AB7               	incf	_temperature_sign^(0+128),f
  5841                           
  5842                           ;max31856.c: 254: temperature_temp=0x3FFF-temperature_temp + 1 ;
  5843  0182  0020               	movlb	0	; select bank0
  5844  0183  0955               	comf	tc_temperature_trans@temperature_temp,w
  5845  0184  00CD               	movwf	??_tc_temperature_trans
  5846  0185  0956               	comf	tc_temperature_trans@temperature_temp+1,w
  5847  0186  00CE               	movwf	??_tc_temperature_trans+1
  5848  0187  0ACD               	incf	??_tc_temperature_trans,f
  5849  0188  1903               	skipnz
  5850  0189  0ACE               	incf	??_tc_temperature_trans+1,f
  5851  018A  084D               	movf	??_tc_temperature_trans,w
  5852  018B  3E00               	addlw	0
  5853  018C  00D5               	movwf	tc_temperature_trans@temperature_temp
  5854  018D  3040               	movlw	64
  5855  018E  3D4E               	addwfc	??_tc_temperature_trans+1,w
  5856  018F  00D6               	movwf	tc_temperature_trans@temperature_temp+1
  5857                           
  5858                           ;max31856.c: 256: temperature_int = temperature_temp>>3;
  5859  0190  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5860  0191  00CE               	movwf	??_tc_temperature_trans+1
  5861  0192  0855               	movf	tc_temperature_trans@temperature_temp,w
  5862  0193  00CD               	movwf	??_tc_temperature_trans
  5863  0194  36CE               	lsrf	??_tc_temperature_trans+1,f
  5864  0195  0CCD               	rrf	??_tc_temperature_trans,f
  5865  0196  36CE               	lsrf	??_tc_temperature_trans+1,f
  5866  0197  0CCD               	rrf	??_tc_temperature_trans,f
  5867  0198  36CE               	lsrf	??_tc_temperature_trans+1,f
  5868  0199  0CCD               	rrf	??_tc_temperature_trans,f
  5869  019A  084D               	movf	??_tc_temperature_trans,w
  5870  019B  00F8               	movwf	_temperature_int
  5871  019C  084E               	movf	??_tc_temperature_trans+1,w
  5872  019D  00F9               	movwf	_temperature_int+1
  5873                           
  5874                           ;max31856.c: 257: temperature_decimal = temperature_temp & 0x07;
  5875  019E  0855               	movf	tc_temperature_trans@temperature_temp,w
  5876  019F  3907               	andlw	7
  5877  01A0  00CD               	movwf	??_tc_temperature_trans
  5878  01A1  084D               	movf	??_tc_temperature_trans,w
  5879  01A2  00EB               	movwf	_temperature_decimal
  5880                           
  5881                           ;max31856.c: 258: if(temperature_decimal > 3) temperature_decimal++;
  5882  01A3  3004               	movlw	4
  5883  01A4  026B               	subwf	_temperature_decimal,w
  5884  01A5  1C03               	skipc
  5885  01A6  29AB               	goto	l529
  5886  01A7  3001               	movlw	1
  5887  01A8  00CD               	movwf	??_tc_temperature_trans
  5888  01A9  084D               	movf	??_tc_temperature_trans,w
  5889  01AA  07EB               	addwf	_temperature_decimal,f
  5890  01AB                     l529:	
  5891                           
  5892                           ;max31856.c: 259: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5893  01AB  3003               	movlw	3
  5894  01AC  066B               	xorwf	_temperature_decimal,w
  5895  01AD  1903               	btfsc	3,2
  5896  01AE  29B3               	goto	l532
  5897  01AF  3008               	movlw	8
  5898  01B0  066B               	xorwf	_temperature_decimal,w
  5899  01B1  1D03               	btfss	3,2
  5900  01B2  0008               	return
  5901  01B3                     l532:	
  5902  01B3  1C78               	btfss	_temperature_int,0
  5903  01B4  0008               	return
  5904  01B5  3001               	movlw	1
  5905  01B6  00CD               	movwf	??_tc_temperature_trans
  5906  01B7  084D               	movf	??_tc_temperature_trans,w
  5907  01B8  07EB               	addwf	_temperature_decimal,f
  5908                           
  5909                           ;max31856.c: 260: }
  5910  01B9  0008               	return
  5911  01BA                     l4754:	
  5912                           
  5913                           ;max31856.c: 261: else
  5914                           ;max31856.c: 262: {
  5915                           ;max31856.c: 263: temperature_sign = 0;
  5916  01BA  0021               	movlb	1	; select bank1
  5917  01BB  01B7               	clrf	_temperature_sign^(0+128)
  5918                           
  5919                           ;max31856.c: 264: temperature_int = temperature_temp>>3;
  5920  01BC  0020               	movlb	0	; select bank0
  5921  01BD  0856               	movf	tc_temperature_trans@temperature_temp+1,w
  5922  01BE  00CE               	movwf	??_tc_temperature_trans+1
  5923  01BF  0855               	movf	tc_temperature_trans@temperature_temp,w
  5924  01C0  00CD               	movwf	??_tc_temperature_trans
  5925  01C1  36CE               	lsrf	??_tc_temperature_trans+1,f
  5926  01C2  0CCD               	rrf	??_tc_temperature_trans,f
  5927  01C3  36CE               	lsrf	??_tc_temperature_trans+1,f
  5928  01C4  0CCD               	rrf	??_tc_temperature_trans,f
  5929  01C5  36CE               	lsrf	??_tc_temperature_trans+1,f
  5930  01C6  0CCD               	rrf	??_tc_temperature_trans,f
  5931  01C7  084D               	movf	??_tc_temperature_trans,w
  5932  01C8  00F8               	movwf	_temperature_int
  5933  01C9  084E               	movf	??_tc_temperature_trans+1,w
  5934  01CA  00F9               	movwf	_temperature_int+1
  5935                           
  5936                           ;max31856.c: 265: temperature_decimal = temperature_temp & 0x07;
  5937  01CB  0855               	movf	tc_temperature_trans@temperature_temp,w
  5938  01CC  3907               	andlw	7
  5939  01CD  00CD               	movwf	??_tc_temperature_trans
  5940  01CE  084D               	movf	??_tc_temperature_trans,w
  5941  01CF  00EB               	movwf	_temperature_decimal
  5942                           
  5943                           ;max31856.c: 266: if(temperature_decimal > 3) temperature_decimal++;
  5944  01D0  3004               	movlw	4
  5945  01D1  026B               	subwf	_temperature_decimal,w
  5946  01D2  1C03               	skipc
  5947  01D3  29D8               	goto	l534
  5948  01D4  3001               	movlw	1
  5949  01D5  00CD               	movwf	??_tc_temperature_trans
  5950  01D6  084D               	movf	??_tc_temperature_trans,w
  5951  01D7  07EB               	addwf	_temperature_decimal,f
  5952  01D8                     l534:	
  5953                           
  5954                           ;max31856.c: 267: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5955  01D8  3004               	movlw	4
  5956  01D9  066B               	xorwf	_temperature_decimal,w
  5957  01DA  1903               	btfsc	3,2
  5958  01DB  29E0               	goto	l537
  5959  01DC  3008               	movlw	8
  5960  01DD  066B               	xorwf	_temperature_decimal,w
  5961  01DE  1D03               	btfss	3,2
  5962  01DF  0008               	return
  5963  01E0                     l537:	
  5964  01E0  1C78               	btfss	_temperature_int,0
  5965  01E1  0008               	return
  5966  01E2  3001               	movlw	1
  5967  01E3  00CD               	movwf	??_tc_temperature_trans
  5968  01E4  084D               	movf	??_tc_temperature_trans,w
  5969  01E5  07EB               	addwf	_temperature_decimal,f
  5970  01E6  0008               	return
  5971  01E7                     __end_of_tc_temperature_trans:	
  5972                           
  5973                           	psect	text19
  5974  01E7                     __ptext19:	
  5975 ;; *************** function _Calculate_Time *****************
  5976 ;; Defined at:
  5977 ;;		line 135 in file "mcc_generated_files/save.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  temp2           4   41[BANK0 ] unsigned long 
  5982 ;;  temp1           4   37[BANK0 ] unsigned long 
  5983 ;;  temp            4   33[BANK0 ] unsigned long 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:       22 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    8
  6000 ;; This function calls:
  6001 ;;		_Bq32k_Rtc_Read_Time
  6002 ;;		_Save_Write_time
  6003 ;;		_Write_Flash_finish
  6004 ;;		_Write_Flash_head
  6005 ;;		___wmul
  6006 ;; This function is called by:
  6007 ;;		_tc_temperature_trans
  6008 ;;		_Save_process
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function _Calculate_Time
  6014  01E7                     _Calculate_Time:	
  6015                           
  6016                           ;save.c: 137: unsigned long temp = 0 ;
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6020  01E7  3000               	movlw	0
  6021  01E8  0020               	movlb	0	; select bank0
  6022  01E9  00C4               	movwf	Calculate_Time@temp+3
  6023  01EA  3000               	movlw	0
  6024  01EB  00C3               	movwf	Calculate_Time@temp+2
  6025  01EC  3000               	movlw	0
  6026  01ED  00C2               	movwf	Calculate_Time@temp+1
  6027  01EE  3000               	movlw	0
  6028  01EF  00C1               	movwf	Calculate_Time@temp
  6029                           
  6030                           ;save.c: 138: unsigned long temp1 = 0 ;
  6031  01F0  3000               	movlw	0
  6032  01F1  00C8               	movwf	Calculate_Time@temp1+3
  6033  01F2  3000               	movlw	0
  6034  01F3  00C7               	movwf	Calculate_Time@temp1+2
  6035  01F4  3000               	movlw	0
  6036  01F5  00C6               	movwf	Calculate_Time@temp1+1
  6037  01F6  3000               	movlw	0
  6038  01F7  00C5               	movwf	Calculate_Time@temp1
  6039                           
  6040                           ;save.c: 139: unsigned long temp2 = 0 ;
  6041  01F8  3000               	movlw	0
  6042  01F9  00CC               	movwf	Calculate_Time@temp2+3
  6043  01FA  3000               	movlw	0
  6044  01FB  00CB               	movwf	Calculate_Time@temp2+2
  6045  01FC  3000               	movlw	0
  6046  01FD  00CA               	movwf	Calculate_Time@temp2+1
  6047  01FE  3000               	movlw	0
  6048  01FF  00C9               	movwf	Calculate_Time@temp2
  6049                           
  6050                           ;save.c: 140: Bq32k_Rtc_Read_Time(&rtc_tm);
  6051  0200  30D6               	movlw	(low (_rtc_tm| 0))& (0+255)
  6052  0201  318F  279C  3181   	fcall	_Bq32k_Rtc_Read_Time
  6053                           
  6054                           ;save.c: 141: if( time_count == 1 )
  6055  0204  0020               	movlb	0	; select bank0
  6056  0205  036C               	decf	_time_count,w
  6057  0206  1D03               	btfss	3,2
  6058  0207  2ABC               	goto	l4530
  6059                           
  6060                           ;save.c: 142: {
  6061                           ;save.c: 143: if(rtc_tm.date != rtc_save_ch1.date)
  6062  0208  0021               	movlb	1	; select bank1
  6063  0209  085A               	movf	(_rtc_tm^(0+128)+4),w
  6064  020A  064C               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6065  020B  1D03               	btfss	3,2
  6066  020C  2AC5               	goto	l4534
  6067                           
  6068                           ;save.c: 154: else
  6069                           ;save.c: 155: {
  6070                           ;save.c: 156: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6071                           
  6072                           ;save.c: 153: }
  6073                           
  6074                           ;save.c: 152: CH2_temperature = 0;
  6075                           
  6076                           ;save.c: 151: CH1_temperature = 0;
  6077                           
  6078                           ;save.c: 150: Cur_temperature_time_ch2 = 0;
  6079                           
  6080                           ;save.c: 149: Cur_temperature_time_ch1 = 0;
  6081                           
  6082                           ;save.c: 148: Save_Write_time();
  6083                           
  6084                           ;save.c: 147: Write_Flash_head();
  6085                           
  6086                           ;save.c: 144: {
  6087                           ;save.c: 146: Write_Flash_finish();
  6088  020D  0021               	movlb	1	; select bank1
  6089  020E  0856               	movf	_rtc_tm^(0+128),w
  6090  020F  0020               	movlb	0	; select bank0
  6091  0210  00B7               	movwf	??_Calculate_Time
  6092  0211  01B8               	clrf	??_Calculate_Time+1
  6093  0212  0021               	movlb	1	; select bank1
  6094  0213  0858               	movf	(_rtc_tm^(0+128)+2),w
  6095  0214  0020               	movlb	0	; select bank0
  6096  0215  00B9               	movwf	??_Calculate_Time+2
  6097  0216  01BA               	clrf	??_Calculate_Time+3
  6098  0217  0839               	movf	??_Calculate_Time+2,w
  6099  0218  00F3               	movwf	___wmul@multiplier
  6100  0219  083A               	movf	??_Calculate_Time+3,w
  6101  021A  00F4               	movwf	___wmul@multiplier+1
  6102  021B  3010               	movlw	16
  6103  021C  00F5               	movwf	___wmul@multiplicand
  6104  021D  300E               	movlw	14
  6105  021E  00F6               	movwf	___wmul@multiplicand+1
  6106  021F  318A  2254  3181   	fcall	___wmul
  6107  0222  0873               	movf	?___wmul,w
  6108  0223  0020               	movlb	0	; select bank0
  6109  0224  00BB               	movwf	??_Calculate_Time+4
  6110  0225  0874               	movf	?___wmul+1,w
  6111  0226  00BC               	movwf	??_Calculate_Time+5
  6112  0227  0021               	movlb	1	; select bank1
  6113  0228  0857               	movf	(_rtc_tm^(0+128)+1),w
  6114  0229  0020               	movlb	0	; select bank0
  6115  022A  00BD               	movwf	??_Calculate_Time+6
  6116  022B  01BE               	clrf	??_Calculate_Time+7
  6117  022C  083D               	movf	??_Calculate_Time+6,w
  6118  022D  00F3               	movwf	___wmul@multiplier
  6119  022E  083E               	movf	??_Calculate_Time+7,w
  6120  022F  00F4               	movwf	___wmul@multiplier+1
  6121  0230  303C               	movlw	60
  6122  0231  00F5               	movwf	___wmul@multiplicand
  6123  0232  3000               	movlw	0
  6124  0233  00F6               	movwf	___wmul@multiplicand+1
  6125  0234  318A  2254  3181   	fcall	___wmul
  6126  0237  0873               	movf	?___wmul,w
  6127  0238  0020               	movlb	0	; select bank0
  6128  0239  073B               	addwf	??_Calculate_Time+4,w
  6129  023A  00BF               	movwf	??_Calculate_Time+8
  6130  023B  0874               	movf	?___wmul+1,w
  6131  023C  3D3C               	addwfc	??_Calculate_Time+5,w
  6132  023D  00C0               	movwf	??_Calculate_Time+9
  6133  023E  0837               	movf	??_Calculate_Time,w
  6134  023F  073F               	addwf	??_Calculate_Time+8,w
  6135  0240  00C5               	movwf	Calculate_Time@temp1
  6136  0241  0838               	movf	??_Calculate_Time+1,w
  6137  0242  3D40               	addwfc	??_Calculate_Time+9,w
  6138  0243  00C6               	movwf	Calculate_Time@temp1+1
  6139  0244  01C7               	clrf	Calculate_Time@temp1+2
  6140  0245  1BC6               	btfsc	Calculate_Time@temp1+1,7
  6141  0246  03C7               	decf	Calculate_Time@temp1+2,f
  6142  0247  0847               	movf	Calculate_Time@temp1+2,w
  6143  0248  00C8               	movwf	Calculate_Time@temp1+3
  6144                           
  6145                           ;save.c: 157: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6146  0249  0021               	movlb	1	; select bank1
  6147  024A  0848               	movf	_rtc_save_ch1^(0+128),w
  6148  024B  0020               	movlb	0	; select bank0
  6149  024C  00B7               	movwf	??_Calculate_Time
  6150  024D  01B8               	clrf	??_Calculate_Time+1
  6151  024E  0021               	movlb	1	; select bank1
  6152  024F  084A               	movf	(_rtc_save_ch1^(0+128)+2),w
  6153  0250  0020               	movlb	0	; select bank0
  6154  0251  00B9               	movwf	??_Calculate_Time+2
  6155  0252  01BA               	clrf	??_Calculate_Time+3
  6156  0253  0839               	movf	??_Calculate_Time+2,w
  6157  0254  00F3               	movwf	___wmul@multiplier
  6158  0255  083A               	movf	??_Calculate_Time+3,w
  6159  0256  00F4               	movwf	___wmul@multiplier+1
  6160  0257  3010               	movlw	16
  6161  0258  00F5               	movwf	___wmul@multiplicand
  6162  0259  300E               	movlw	14
  6163  025A  00F6               	movwf	___wmul@multiplicand+1
  6164  025B  318A  2254  3181   	fcall	___wmul
  6165  025E  0873               	movf	?___wmul,w
  6166  025F  0020               	movlb	0	; select bank0
  6167  0260  00BB               	movwf	??_Calculate_Time+4
  6168  0261  0874               	movf	?___wmul+1,w
  6169  0262  00BC               	movwf	??_Calculate_Time+5
  6170  0263  0021               	movlb	1	; select bank1
  6171  0264  0849               	movf	(_rtc_save_ch1^(0+128)+1),w
  6172  0265  0020               	movlb	0	; select bank0
  6173  0266  00BD               	movwf	??_Calculate_Time+6
  6174  0267  01BE               	clrf	??_Calculate_Time+7
  6175  0268  083D               	movf	??_Calculate_Time+6,w
  6176  0269  00F3               	movwf	___wmul@multiplier
  6177  026A  083E               	movf	??_Calculate_Time+7,w
  6178  026B  00F4               	movwf	___wmul@multiplier+1
  6179  026C  303C               	movlw	60
  6180  026D  00F5               	movwf	___wmul@multiplicand
  6181  026E  3000               	movlw	0
  6182  026F  00F6               	movwf	___wmul@multiplicand+1
  6183  0270  318A  2254  3181   	fcall	___wmul
  6184  0273  0873               	movf	?___wmul,w
  6185  0274  0020               	movlb	0	; select bank0
  6186  0275  073B               	addwf	??_Calculate_Time+4,w
  6187  0276  00BF               	movwf	??_Calculate_Time+8
  6188  0277  0874               	movf	?___wmul+1,w
  6189  0278  3D3C               	addwfc	??_Calculate_Time+5,w
  6190  0279  00C0               	movwf	??_Calculate_Time+9
  6191  027A  0837               	movf	??_Calculate_Time,w
  6192  027B  073F               	addwf	??_Calculate_Time+8,w
  6193  027C  00C9               	movwf	Calculate_Time@temp2
  6194  027D  0838               	movf	??_Calculate_Time+1,w
  6195  027E  3D40               	addwfc	??_Calculate_Time+9,w
  6196  027F  00CA               	movwf	Calculate_Time@temp2+1
  6197  0280  01CB               	clrf	Calculate_Time@temp2+2
  6198  0281  1BCA               	btfsc	Calculate_Time@temp2+1,7
  6199  0282  03CB               	decf	Calculate_Time@temp2+2,f
  6200  0283  084B               	movf	Calculate_Time@temp2+2,w
  6201  0284  00CC               	movwf	Calculate_Time@temp2+3
  6202                           
  6203                           ;save.c: 158: temp = temp1 - temp2;
  6204  0285  0845               	movf	Calculate_Time@temp1,w
  6205  0286  00B7               	movwf	??_Calculate_Time
  6206  0287  0846               	movf	Calculate_Time@temp1+1,w
  6207  0288  00B8               	movwf	??_Calculate_Time+1
  6208  0289  0847               	movf	Calculate_Time@temp1+2,w
  6209  028A  00B9               	movwf	??_Calculate_Time+2
  6210  028B  0848               	movf	Calculate_Time@temp1+3,w
  6211  028C  00BA               	movwf	??_Calculate_Time+3
  6212  028D  0949               	comf	Calculate_Time@temp2,w
  6213  028E  00BB               	movwf	??_Calculate_Time+4
  6214  028F  094A               	comf	Calculate_Time@temp2+1,w
  6215  0290  00BC               	movwf	??_Calculate_Time+5
  6216  0291  094B               	comf	Calculate_Time@temp2+2,w
  6217  0292  00BD               	movwf	??_Calculate_Time+6
  6218  0293  094C               	comf	Calculate_Time@temp2+3,w
  6219  0294  00BE               	movwf	??_Calculate_Time+7
  6220  0295  0ABB               	incf	??_Calculate_Time+4,f
  6221  0296  1903               	skipnz
  6222  0297  0ABC               	incf	??_Calculate_Time+5,f
  6223  0298  1903               	skipnz
  6224  0299  0ABD               	incf	??_Calculate_Time+6,f
  6225  029A  1903               	skipnz
  6226  029B  0ABE               	incf	??_Calculate_Time+7,f
  6227  029C  083B               	movf	??_Calculate_Time+4,w
  6228  029D  07B7               	addwf	??_Calculate_Time,f
  6229  029E  083C               	movf	??_Calculate_Time+5,w
  6230  029F  3DB8               	addwfc	??_Calculate_Time+1,f
  6231  02A0  083D               	movf	??_Calculate_Time+6,w
  6232  02A1  3DB9               	addwfc	??_Calculate_Time+2,f
  6233  02A2  083E               	movf	??_Calculate_Time+7,w
  6234  02A3  3DBA               	addwfc	??_Calculate_Time+3,f
  6235  02A4  083A               	movf	??_Calculate_Time+3,w
  6236  02A5  00C4               	movwf	Calculate_Time@temp+3
  6237  02A6  0839               	movf	??_Calculate_Time+2,w
  6238  02A7  00C3               	movwf	Calculate_Time@temp+2
  6239  02A8  0838               	movf	??_Calculate_Time+1,w
  6240  02A9  00C2               	movwf	Calculate_Time@temp+1
  6241  02AA  0837               	movf	??_Calculate_Time,w
  6242  02AB  00C1               	movwf	Calculate_Time@temp
  6243                           
  6244                           ;save.c: 159: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6245  02AC  30C8               	movlw	low (_rtc_save_ch1| 0)
  6246  02AD  0086               	movwf	6
  6247  02AE  0187               	clrf	7
  6248  02AF  30D6               	movlw	low (_rtc_tm| 0)
  6249  02B0  0084               	movwf	4
  6250  02B1  0185               	clrf	5
  6251  02B2  3007               	movlw	7
  6252  02B3  0020               	movlb	0	; select bank0
  6253  02B4  00B7               	movwf	??_Calculate_Time
  6254  02B5                     u383m0:	
  6255  02B5  0012               	moviw fsr0++
  6256  02B6  001E               	movwi fsr1++
  6257  02B7  0BB7               	decfsz	??_Calculate_Time,f
  6258  02B8  2AB5               	goto	u383m0
  6259                           
  6260                           ;save.c: 160: return temp;
  6261  02B9  0020               	movlb	0	; select bank0
  6262  02BA  0841               	movf	Calculate_Time@temp,w
  6263  02BB  0008               	return
  6264  02BC                     l4530:	
  6265                           ;save.c: 161: }
  6266                           ;save.c: 162: }
  6267                           
  6268                           
  6269                           ;save.c: 163: else if( time_count == 3 )
  6270  02BC  3003               	movlw	3
  6271  02BD  066C               	xorwf	_time_count,w
  6272  02BE  1D03               	btfss	3,2
  6273  02BF  2B86               	goto	l4556
  6274                           
  6275                           ;save.c: 164: {
  6276                           ;save.c: 165: if(rtc_tm.date != rtc_save_ch2.date)
  6277  02C0  0021               	movlb	1	; select bank1
  6278  02C1  085A               	movf	(_rtc_tm^(0+128)+4),w
  6279  02C2  0653               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6280  02C3  1903               	skipnz
  6281  02C4  2AD7               	goto	l4546
  6282  02C5                     l4534:	
  6283                           
  6284                           ;save.c: 166: {
  6285                           ;save.c: 168: Write_Flash_finish();
  6286  02C5  318B  239F  3181   	fcall	_Write_Flash_finish
  6287                           
  6288                           ;save.c: 169: Write_Flash_head();
  6289  02C8  318B  23CE  3181   	fcall	_Write_Flash_head
  6290                           
  6291                           ;save.c: 170: Save_Write_time();
  6292  02CB  3186  26A7  3181   	fcall	_Save_Write_time
  6293                           
  6294                           ;save.c: 171: Cur_temperature_time_ch1 = 0;
  6295  02CE  0021               	movlb	1	; select bank1
  6296  02CF  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
  6297                           
  6298                           ;save.c: 172: Cur_temperature_time_ch2 = 0;
  6299  02D0  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
  6300                           
  6301                           ;save.c: 173: CH1_temperature = 0;
  6302  02D1  0020               	movlb	0	; select bank0
  6303  02D2  01E5               	clrf	_CH1_temperature
  6304  02D3  01E6               	clrf	_CH1_temperature+1
  6305                           
  6306                           ;save.c: 174: CH2_temperature = 0;
  6307  02D4  01E7               	clrf	_CH2_temperature
  6308  02D5  01E8               	clrf	_CH2_temperature+1
  6309                           
  6310                           ;save.c: 175: }
  6311  02D6  2B86               	goto	l4556
  6312  02D7                     l4546:	
  6313                           
  6314                           ;save.c: 176: else
  6315                           ;save.c: 177: {
  6316                           ;save.c: 178: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6317  02D7  0021               	movlb	1	; select bank1
  6318  02D8  0856               	movf	_rtc_tm^(0+128),w
  6319  02D9  0020               	movlb	0	; select bank0
  6320  02DA  00B7               	movwf	??_Calculate_Time
  6321  02DB  01B8               	clrf	??_Calculate_Time+1
  6322  02DC  0021               	movlb	1	; select bank1
  6323  02DD  0858               	movf	(_rtc_tm^(0+128)+2),w
  6324  02DE  0020               	movlb	0	; select bank0
  6325  02DF  00B9               	movwf	??_Calculate_Time+2
  6326  02E0  01BA               	clrf	??_Calculate_Time+3
  6327  02E1  0839               	movf	??_Calculate_Time+2,w
  6328  02E2  00F3               	movwf	___wmul@multiplier
  6329  02E3  083A               	movf	??_Calculate_Time+3,w
  6330  02E4  00F4               	movwf	___wmul@multiplier+1
  6331  02E5  3010               	movlw	16
  6332  02E6  00F5               	movwf	___wmul@multiplicand
  6333  02E7  300E               	movlw	14
  6334  02E8  00F6               	movwf	___wmul@multiplicand+1
  6335  02E9  318A  2254  3181   	fcall	___wmul
  6336  02EC  0873               	movf	?___wmul,w
  6337  02ED  0020               	movlb	0	; select bank0
  6338  02EE  00BB               	movwf	??_Calculate_Time+4
  6339  02EF  0874               	movf	?___wmul+1,w
  6340  02F0  00BC               	movwf	??_Calculate_Time+5
  6341  02F1  0021               	movlb	1	; select bank1
  6342  02F2  0857               	movf	(_rtc_tm^(0+128)+1),w
  6343  02F3  0020               	movlb	0	; select bank0
  6344  02F4  00BD               	movwf	??_Calculate_Time+6
  6345  02F5  01BE               	clrf	??_Calculate_Time+7
  6346  02F6  083D               	movf	??_Calculate_Time+6,w
  6347  02F7  00F3               	movwf	___wmul@multiplier
  6348  02F8  083E               	movf	??_Calculate_Time+7,w
  6349  02F9  00F4               	movwf	___wmul@multiplier+1
  6350  02FA  303C               	movlw	60
  6351  02FB  00F5               	movwf	___wmul@multiplicand
  6352  02FC  3000               	movlw	0
  6353  02FD  00F6               	movwf	___wmul@multiplicand+1
  6354  02FE  318A  2254  3181   	fcall	___wmul
  6355  0301  0873               	movf	?___wmul,w
  6356  0302  0020               	movlb	0	; select bank0
  6357  0303  073B               	addwf	??_Calculate_Time+4,w
  6358  0304  00BF               	movwf	??_Calculate_Time+8
  6359  0305  0874               	movf	?___wmul+1,w
  6360  0306  3D3C               	addwfc	??_Calculate_Time+5,w
  6361  0307  00C0               	movwf	??_Calculate_Time+9
  6362  0308  0837               	movf	??_Calculate_Time,w
  6363  0309  073F               	addwf	??_Calculate_Time+8,w
  6364  030A  00C5               	movwf	Calculate_Time@temp1
  6365  030B  0838               	movf	??_Calculate_Time+1,w
  6366  030C  3D40               	addwfc	??_Calculate_Time+9,w
  6367  030D  00C6               	movwf	Calculate_Time@temp1+1
  6368  030E  01C7               	clrf	Calculate_Time@temp1+2
  6369  030F  1BC6               	btfsc	Calculate_Time@temp1+1,7
  6370  0310  03C7               	decf	Calculate_Time@temp1+2,f
  6371  0311  0847               	movf	Calculate_Time@temp1+2,w
  6372  0312  00C8               	movwf	Calculate_Time@temp1+3
  6373                           
  6374                           ;save.c: 179: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6375  0313  0021               	movlb	1	; select bank1
  6376  0314  084F               	movf	_rtc_save_ch2^(0+128),w
  6377  0315  0020               	movlb	0	; select bank0
  6378  0316  00B7               	movwf	??_Calculate_Time
  6379  0317  01B8               	clrf	??_Calculate_Time+1
  6380  0318  0021               	movlb	1	; select bank1
  6381  0319  0851               	movf	(_rtc_save_ch2^(0+128)+2),w
  6382  031A  0020               	movlb	0	; select bank0
  6383  031B  00B9               	movwf	??_Calculate_Time+2
  6384  031C  01BA               	clrf	??_Calculate_Time+3
  6385  031D  0839               	movf	??_Calculate_Time+2,w
  6386  031E  00F3               	movwf	___wmul@multiplier
  6387  031F  083A               	movf	??_Calculate_Time+3,w
  6388  0320  00F4               	movwf	___wmul@multiplier+1
  6389  0321  3010               	movlw	16
  6390  0322  00F5               	movwf	___wmul@multiplicand
  6391  0323  300E               	movlw	14
  6392  0324  00F6               	movwf	___wmul@multiplicand+1
  6393  0325  318A  2254  3181   	fcall	___wmul
  6394  0328  0873               	movf	?___wmul,w
  6395  0329  0020               	movlb	0	; select bank0
  6396  032A  00BB               	movwf	??_Calculate_Time+4
  6397  032B  0874               	movf	?___wmul+1,w
  6398  032C  00BC               	movwf	??_Calculate_Time+5
  6399  032D  0021               	movlb	1	; select bank1
  6400  032E  0850               	movf	(_rtc_save_ch2^(0+128)+1),w
  6401  032F  0020               	movlb	0	; select bank0
  6402  0330  00BD               	movwf	??_Calculate_Time+6
  6403  0331  01BE               	clrf	??_Calculate_Time+7
  6404  0332  083D               	movf	??_Calculate_Time+6,w
  6405  0333  00F3               	movwf	___wmul@multiplier
  6406  0334  083E               	movf	??_Calculate_Time+7,w
  6407  0335  00F4               	movwf	___wmul@multiplier+1
  6408  0336  303C               	movlw	60
  6409  0337  00F5               	movwf	___wmul@multiplicand
  6410  0338  3000               	movlw	0
  6411  0339  00F6               	movwf	___wmul@multiplicand+1
  6412  033A  318A  2254  3181   	fcall	___wmul
  6413  033D  0873               	movf	?___wmul,w
  6414  033E  0020               	movlb	0	; select bank0
  6415  033F  073B               	addwf	??_Calculate_Time+4,w
  6416  0340  00BF               	movwf	??_Calculate_Time+8
  6417  0341  0874               	movf	?___wmul+1,w
  6418  0342  3D3C               	addwfc	??_Calculate_Time+5,w
  6419  0343  00C0               	movwf	??_Calculate_Time+9
  6420  0344  0837               	movf	??_Calculate_Time,w
  6421  0345  073F               	addwf	??_Calculate_Time+8,w
  6422  0346  00C9               	movwf	Calculate_Time@temp2
  6423  0347  0838               	movf	??_Calculate_Time+1,w
  6424  0348  3D40               	addwfc	??_Calculate_Time+9,w
  6425  0349  00CA               	movwf	Calculate_Time@temp2+1
  6426  034A  01CB               	clrf	Calculate_Time@temp2+2
  6427  034B  1BCA               	btfsc	Calculate_Time@temp2+1,7
  6428  034C  03CB               	decf	Calculate_Time@temp2+2,f
  6429  034D  084B               	movf	Calculate_Time@temp2+2,w
  6430  034E  00CC               	movwf	Calculate_Time@temp2+3
  6431                           
  6432                           ;save.c: 180: temp = temp1 - temp2;
  6433  034F  0845               	movf	Calculate_Time@temp1,w
  6434  0350  00B7               	movwf	??_Calculate_Time
  6435  0351  0846               	movf	Calculate_Time@temp1+1,w
  6436  0352  00B8               	movwf	??_Calculate_Time+1
  6437  0353  0847               	movf	Calculate_Time@temp1+2,w
  6438  0354  00B9               	movwf	??_Calculate_Time+2
  6439  0355  0848               	movf	Calculate_Time@temp1+3,w
  6440  0356  00BA               	movwf	??_Calculate_Time+3
  6441  0357  0949               	comf	Calculate_Time@temp2,w
  6442  0358  00BB               	movwf	??_Calculate_Time+4
  6443  0359  094A               	comf	Calculate_Time@temp2+1,w
  6444  035A  00BC               	movwf	??_Calculate_Time+5
  6445  035B  094B               	comf	Calculate_Time@temp2+2,w
  6446  035C  00BD               	movwf	??_Calculate_Time+6
  6447  035D  094C               	comf	Calculate_Time@temp2+3,w
  6448  035E  00BE               	movwf	??_Calculate_Time+7
  6449  035F  0ABB               	incf	??_Calculate_Time+4,f
  6450  0360  1903               	skipnz
  6451  0361  0ABC               	incf	??_Calculate_Time+5,f
  6452  0362  1903               	skipnz
  6453  0363  0ABD               	incf	??_Calculate_Time+6,f
  6454  0364  1903               	skipnz
  6455  0365  0ABE               	incf	??_Calculate_Time+7,f
  6456  0366  083B               	movf	??_Calculate_Time+4,w
  6457  0367  07B7               	addwf	??_Calculate_Time,f
  6458  0368  083C               	movf	??_Calculate_Time+5,w
  6459  0369  3DB8               	addwfc	??_Calculate_Time+1,f
  6460  036A  083D               	movf	??_Calculate_Time+6,w
  6461  036B  3DB9               	addwfc	??_Calculate_Time+2,f
  6462  036C  083E               	movf	??_Calculate_Time+7,w
  6463  036D  3DBA               	addwfc	??_Calculate_Time+3,f
  6464  036E  083A               	movf	??_Calculate_Time+3,w
  6465  036F  00C4               	movwf	Calculate_Time@temp+3
  6466  0370  0839               	movf	??_Calculate_Time+2,w
  6467  0371  00C3               	movwf	Calculate_Time@temp+2
  6468  0372  0838               	movf	??_Calculate_Time+1,w
  6469  0373  00C2               	movwf	Calculate_Time@temp+1
  6470  0374  0837               	movf	??_Calculate_Time,w
  6471  0375  00C1               	movwf	Calculate_Time@temp
  6472                           
  6473                           ;save.c: 181: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6474  0376  30CF               	movlw	low (_rtc_save_ch2| 0)
  6475  0377  0086               	movwf	6
  6476  0378  0187               	clrf	7
  6477  0379  30D6               	movlw	low (_rtc_tm| 0)
  6478  037A  0084               	movwf	4
  6479  037B  0185               	clrf	5
  6480  037C  3007               	movlw	7
  6481  037D  0020               	movlb	0	; select bank0
  6482  037E  00B7               	movwf	??_Calculate_Time
  6483  037F                     u386m0:	
  6484  037F  0012               	moviw fsr0++
  6485  0380  001E               	movwi fsr1++
  6486  0381  0BB7               	decfsz	??_Calculate_Time,f
  6487  0382  2B7F               	goto	u386m0
  6488                           
  6489                           ;save.c: 182: return temp;
  6490  0383  0020               	movlb	0	; select bank0
  6491  0384  0841               	movf	Calculate_Time@temp,w
  6492  0385  0008               	return
  6493  0386                     l4556:	
  6494                           
  6495                           ;save.c: 183: }
  6496                           ;save.c: 184: }
  6497                           ;save.c: 185: return 0;
  6498  0386  3000               	movlw	0
  6499  0387  0008               	return
  6500  0388                     __end_of_Calculate_Time:	
  6501                           
  6502                           	psect	text20
  6503  0A54                     __ptext20:	
  6504 ;; *************** function ___wmul *****************
  6505 ;; Defined at:
  6506 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  multiplier      2    3[COMMON] unsigned int 
  6509 ;;  multiplicand    2    5[COMMON] unsigned int 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  product         2    0[BANK0 ] unsigned int 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  2    3[COMMON] unsigned int 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;Total ram usage:        6 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    3
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_Calculate_Time
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function ___wmul
  6537  0A54                     ___wmul:	
  6538                           
  6539                           ;incstack = 0
  6540                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6541  0A54  0020               	movlb	0	; select bank0
  6542  0A55  01A0               	clrf	___wmul@product
  6543  0A56  01A1               	clrf	___wmul@product+1
  6544  0A57                     l4434:	
  6545  0A57  1C73               	btfss	___wmul@multiplier,0
  6546  0A58  2A5E               	goto	l1020
  6547  0A59  0875               	movf	___wmul@multiplicand,w
  6548  0A5A  0020               	movlb	0	; select bank0
  6549  0A5B  07A0               	addwf	___wmul@product,f
  6550  0A5C  0876               	movf	___wmul@multiplicand+1,w
  6551  0A5D  3DA1               	addwfc	___wmul@product+1,f
  6552  0A5E                     l1020:	
  6553  0A5E  3001               	movlw	1
  6554  0A5F                     u3715:	
  6555  0A5F  35F5               	lslf	___wmul@multiplicand,f
  6556  0A60  0DF6               	rlf	___wmul@multiplicand+1,f
  6557  0A61  0B89               	decfsz	9,f
  6558  0A62  2A5F               	goto	u3715
  6559  0A63  3001               	movlw	1
  6560  0A64                     u3725:	
  6561  0A64  36F4               	lsrf	___wmul@multiplier+1,f
  6562  0A65  0CF3               	rrf	___wmul@multiplier,f
  6563  0A66  0B89               	decfsz	9,f
  6564  0A67  2A64               	goto	u3725
  6565  0A68  0873               	movf	___wmul@multiplier,w
  6566  0A69  0474               	iorwf	___wmul@multiplier+1,w
  6567  0A6A  1D03               	btfss	3,2
  6568  0A6B  2A57               	goto	l4434
  6569  0A6C  0020               	movlb	0	; select bank0
  6570  0A6D  0821               	movf	___wmul@product+1,w
  6571  0A6E  00F4               	movwf	?___wmul+1
  6572  0A6F  0820               	movf	___wmul@product,w
  6573  0A70  00F3               	movwf	?___wmul
  6574  0A71  0008               	return
  6575  0A72                     __end_of___wmul:	
  6576                           
  6577                           	psect	text21
  6578  0BCE                     __ptext21:	
  6579 ;; *************** function _Write_Flash_head *****************
  6580 ;; Defined at:
  6581 ;;		line 64 in file "mcc_generated_files/save.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;		None
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;Total ram usage:        1 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    6
  6602 ;; This function calls:
  6603 ;;		_FLASH_WriteWord
  6604 ;; This function is called by:
  6605 ;;		_Key_Process
  6606 ;;		_Calculate_Time
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function _Write_Flash_head
  6612  0BCE                     _Write_Flash_head:	
  6613                           
  6614                           ;save.c: 66: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6618  0BCE  0021               	movlb	1	; select bank1
  6619  0BCF  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6620  0BD0  0020               	movlb	0	; select bank0
  6621  0BD1  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6622  0BD2  0021               	movlb	1	; select bank1
  6623  0BD3  082E               	movf	_Cur_Save_Index^(0+128),w
  6624  0BD4  0020               	movlb	0	; select bank0
  6625  0BD5  00AA               	movwf	FLASH_WriteWord@flashAddr
  6626  0BD6  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6627  0BD7  00F7               	movwf	??_Write_Flash_head
  6628  0BD8  0877               	movf	??_Write_Flash_head,w
  6629  0BD9  00AC               	movwf	FLASH_WriteWord@ramBuf
  6630  0BDA  30AA               	movlw	170
  6631  0BDB  00AD               	movwf	FLASH_WriteWord@word
  6632  0BDC  30AA               	movlw	170
  6633  0BDD  00AE               	movwf	FLASH_WriteWord@word+1
  6634  0BDE  318D  2577  318B   	fcall	_FLASH_WriteWord
  6635                           
  6636                           ;save.c: 67: Cur_Save_Index++;
  6637  0BE1  3001               	movlw	1
  6638  0BE2  0021               	movlb	1	; select bank1
  6639  0BE3  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6640  0BE4  3000               	movlw	0
  6641  0BE5  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6642                           
  6643                           ;save.c: 68: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6644  0BE6  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6645  0BE7  0020               	movlb	0	; select bank0
  6646  0BE8  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6647  0BE9  0021               	movlb	1	; select bank1
  6648  0BEA  082E               	movf	_Cur_Save_Index^(0+128),w
  6649  0BEB  0020               	movlb	0	; select bank0
  6650  0BEC  00AA               	movwf	FLASH_WriteWord@flashAddr
  6651  0BED  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6652  0BEE  00F7               	movwf	??_Write_Flash_head
  6653  0BEF  0877               	movf	??_Write_Flash_head,w
  6654  0BF0  00AC               	movwf	FLASH_WriteWord@ramBuf
  6655  0BF1  30AA               	movlw	170
  6656  0BF2  00AD               	movwf	FLASH_WriteWord@word
  6657  0BF3  30AA               	movlw	170
  6658  0BF4  00AE               	movwf	FLASH_WriteWord@word+1
  6659  0BF5  318D  2577         	fcall	_FLASH_WriteWord
  6660                           
  6661                           ;save.c: 69: Cur_Save_Index++;
  6662  0BF7  3001               	movlw	1
  6663  0BF8  0021               	movlb	1	; select bank1
  6664  0BF9  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6665  0BFA  3000               	movlw	0
  6666  0BFB  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6667  0BFC  0008               	return
  6668  0BFD                     __end_of_Write_Flash_head:	
  6669                           
  6670                           	psect	text22
  6671  0B9F                     __ptext22:	
  6672 ;; *************** function _Write_Flash_finish *****************
  6673 ;; Defined at:
  6674 ;;		line 78 in file "mcc_generated_files/save.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        1 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    6
  6695 ;; This function calls:
  6696 ;;		_FLASH_WriteWord
  6697 ;; This function is called by:
  6698 ;;		_Key_Process
  6699 ;;		_Calculate_Time
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _Write_Flash_finish
  6705  0B9F                     _Write_Flash_finish:	
  6706                           
  6707                           ;save.c: 80: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6711  0B9F  0021               	movlb	1	; select bank1
  6712  0BA0  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6713  0BA1  0020               	movlb	0	; select bank0
  6714  0BA2  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6715  0BA3  0021               	movlb	1	; select bank1
  6716  0BA4  082E               	movf	_Cur_Save_Index^(0+128),w
  6717  0BA5  0020               	movlb	0	; select bank0
  6718  0BA6  00AA               	movwf	FLASH_WriteWord@flashAddr
  6719  0BA7  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6720  0BA8  00F7               	movwf	??_Write_Flash_finish
  6721  0BA9  0877               	movf	??_Write_Flash_finish,w
  6722  0BAA  00AC               	movwf	FLASH_WriteWord@ramBuf
  6723  0BAB  3055               	movlw	85
  6724  0BAC  00AD               	movwf	FLASH_WriteWord@word
  6725  0BAD  3055               	movlw	85
  6726  0BAE  00AE               	movwf	FLASH_WriteWord@word+1
  6727  0BAF  318D  2577  318B   	fcall	_FLASH_WriteWord
  6728                           
  6729                           ;save.c: 81: Cur_Save_Index++;
  6730  0BB2  3001               	movlw	1
  6731  0BB3  0021               	movlb	1	; select bank1
  6732  0BB4  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6733  0BB5  3000               	movlw	0
  6734  0BB6  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6735                           
  6736                           ;save.c: 82: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6737  0BB7  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6738  0BB8  0020               	movlb	0	; select bank0
  6739  0BB9  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6740  0BBA  0021               	movlb	1	; select bank1
  6741  0BBB  082E               	movf	_Cur_Save_Index^(0+128),w
  6742  0BBC  0020               	movlb	0	; select bank0
  6743  0BBD  00AA               	movwf	FLASH_WriteWord@flashAddr
  6744  0BBE  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6745  0BBF  00F7               	movwf	??_Write_Flash_finish
  6746  0BC0  0877               	movf	??_Write_Flash_finish,w
  6747  0BC1  00AC               	movwf	FLASH_WriteWord@ramBuf
  6748  0BC2  3055               	movlw	85
  6749  0BC3  00AD               	movwf	FLASH_WriteWord@word
  6750  0BC4  3055               	movlw	85
  6751  0BC5  00AE               	movwf	FLASH_WriteWord@word+1
  6752  0BC6  318D  2577         	fcall	_FLASH_WriteWord
  6753                           
  6754                           ;save.c: 83: Cur_Save_Index++;
  6755  0BC8  3001               	movlw	1
  6756  0BC9  0021               	movlb	1	; select bank1
  6757  0BCA  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6758  0BCB  3000               	movlw	0
  6759  0BCC  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6760  0BCD  0008               	return
  6761  0BCE                     __end_of_Write_Flash_finish:	
  6762                           
  6763                           	psect	text23
  6764  06A7                     __ptext23:	
  6765 ;; *************** function _Save_Write_time *****************
  6766 ;; Defined at:
  6767 ;;		line 206 in file "mcc_generated_files/save.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  i               1    0        unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:        2 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    7
  6788 ;; This function calls:
  6789 ;;		_Bq32k_Rtc_Read_Time
  6790 ;;		_Save_Write_word
  6791 ;; This function is called by:
  6792 ;;		_Key_Process
  6793 ;;		_Calculate_Time
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _Save_Write_time
  6799  06A7                     _Save_Write_time:	
  6800                           
  6801                           ;save.c: 208: unsigned char i;
  6802                           ;save.c: 209: Bq32k_Rtc_Read_Time(&rtc_tm);
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6806  06A7  30D6               	movlw	(low (_rtc_tm| 0))& (0+255)
  6807  06A8  318F  279C  3186   	fcall	_Bq32k_Rtc_Read_Time
  6808                           
  6809                           ;save.c: 210: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6810  06AB  30C8               	movlw	low (_rtc_save_ch1| 0)
  6811  06AC  0086               	movwf	6
  6812  06AD  0187               	clrf	7
  6813  06AE  30D6               	movlw	low (_rtc_tm| 0)
  6814  06AF  0084               	movwf	4
  6815  06B0  0185               	clrf	5
  6816  06B1  3007               	movlw	7
  6817  06B2  0020               	movlb	0	; select bank0
  6818  06B3  00B5               	movwf	??_Save_Write_time
  6819  06B4                     u368m0:	
  6820  06B4  0012               	moviw fsr0++
  6821  06B5  001E               	movwi fsr1++
  6822  06B6  0BB5               	decfsz	??_Save_Write_time,f
  6823  06B7  2EB4               	goto	u368m0
  6824                           
  6825                           ;save.c: 211: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6826  06B8  30CF               	movlw	low (_rtc_save_ch2| 0)
  6827  06B9  0086               	movwf	6
  6828  06BA  0187               	clrf	7
  6829  06BB  30D6               	movlw	low (_rtc_tm| 0)
  6830  06BC  0084               	movwf	4
  6831  06BD  0185               	clrf	5
  6832  06BE  3007               	movlw	7
  6833  06BF  0020               	movlb	0	; select bank0
  6834  06C0  00B5               	movwf	??_Save_Write_time
  6835  06C1                     u369m0:	
  6836  06C1  0012               	moviw fsr0++
  6837  06C2  001E               	movwi fsr1++
  6838  06C3  0BB5               	decfsz	??_Save_Write_time,f
  6839  06C4  2EC1               	goto	u369m0
  6840                           
  6841                           ;save.c: 212: Save_Write_word( rtc_tm.years);
  6842  06C5  0021               	movlb	1	; select bank1
  6843  06C6  085C               	movf	(_rtc_tm^(0+128)+6),w
  6844  06C7  0020               	movlb	0	; select bank0
  6845  06C8  00B5               	movwf	??_Save_Write_time
  6846  06C9  01B6               	clrf	??_Save_Write_time+1
  6847  06CA  0835               	movf	??_Save_Write_time,w
  6848  06CB  00B3               	movwf	Save_Write_word@data
  6849  06CC  0836               	movf	??_Save_Write_time+1,w
  6850  06CD  00B4               	movwf	Save_Write_word@data+1
  6851  06CE  3187  27E8  3186   	fcall	_Save_Write_word
  6852                           
  6853                           ;save.c: 213: Save_Write_word( rtc_tm.month);
  6854  06D1  0021               	movlb	1	; select bank1
  6855  06D2  085B               	movf	(_rtc_tm^(0+128)+5),w
  6856  06D3  0020               	movlb	0	; select bank0
  6857  06D4  00B5               	movwf	??_Save_Write_time
  6858  06D5  01B6               	clrf	??_Save_Write_time+1
  6859  06D6  0835               	movf	??_Save_Write_time,w
  6860  06D7  00B3               	movwf	Save_Write_word@data
  6861  06D8  0836               	movf	??_Save_Write_time+1,w
  6862  06D9  00B4               	movwf	Save_Write_word@data+1
  6863  06DA  3187  27E8  3186   	fcall	_Save_Write_word
  6864                           
  6865                           ;save.c: 214: Save_Write_word( rtc_tm.date);
  6866  06DD  0021               	movlb	1	; select bank1
  6867  06DE  085A               	movf	(_rtc_tm^(0+128)+4),w
  6868  06DF  0020               	movlb	0	; select bank0
  6869  06E0  00B5               	movwf	??_Save_Write_time
  6870  06E1  01B6               	clrf	??_Save_Write_time+1
  6871  06E2  0835               	movf	??_Save_Write_time,w
  6872  06E3  00B3               	movwf	Save_Write_word@data
  6873  06E4  0836               	movf	??_Save_Write_time+1,w
  6874  06E5  00B4               	movwf	Save_Write_word@data+1
  6875  06E6  3187  27E8  3186   	fcall	_Save_Write_word
  6876                           
  6877                           ;save.c: 215: Save_Write_word( rtc_tm.hours);
  6878  06E9  0021               	movlb	1	; select bank1
  6879  06EA  0858               	movf	(_rtc_tm^(0+128)+2),w
  6880  06EB  0020               	movlb	0	; select bank0
  6881  06EC  00B5               	movwf	??_Save_Write_time
  6882  06ED  01B6               	clrf	??_Save_Write_time+1
  6883  06EE  0835               	movf	??_Save_Write_time,w
  6884  06EF  00B3               	movwf	Save_Write_word@data
  6885  06F0  0836               	movf	??_Save_Write_time+1,w
  6886  06F1  00B4               	movwf	Save_Write_word@data+1
  6887  06F2  3187  27E8  3186   	fcall	_Save_Write_word
  6888                           
  6889                           ;save.c: 216: Save_Write_word( rtc_tm.minutes);
  6890  06F5  0021               	movlb	1	; select bank1
  6891  06F6  0857               	movf	(_rtc_tm^(0+128)+1),w
  6892  06F7  0020               	movlb	0	; select bank0
  6893  06F8  00B5               	movwf	??_Save_Write_time
  6894  06F9  01B6               	clrf	??_Save_Write_time+1
  6895  06FA  0835               	movf	??_Save_Write_time,w
  6896  06FB  00B3               	movwf	Save_Write_word@data
  6897  06FC  0836               	movf	??_Save_Write_time+1,w
  6898  06FD  00B4               	movwf	Save_Write_word@data+1
  6899  06FE  3187  27E8  3186   	fcall	_Save_Write_word
  6900                           
  6901                           ;save.c: 217: Save_Write_word( rtc_tm.seconds);
  6902  0701  0021               	movlb	1	; select bank1
  6903  0702  0856               	movf	_rtc_tm^(0+128),w
  6904  0703  0020               	movlb	0	; select bank0
  6905  0704  00B5               	movwf	??_Save_Write_time
  6906  0705  01B6               	clrf	??_Save_Write_time+1
  6907  0706  0835               	movf	??_Save_Write_time,w
  6908  0707  00B3               	movwf	Save_Write_word@data
  6909  0708  0836               	movf	??_Save_Write_time+1,w
  6910  0709  00B4               	movwf	Save_Write_word@data+1
  6911  070A  3187  27E8  3186   	fcall	_Save_Write_word
  6912                           
  6913                           ;save.c: 218: Save_Write_word( rtc_tm.wday);
  6914  070D  0021               	movlb	1	; select bank1
  6915  070E  0859               	movf	(_rtc_tm^(0+128)+3),w
  6916  070F  0020               	movlb	0	; select bank0
  6917  0710  00B5               	movwf	??_Save_Write_time
  6918  0711  01B6               	clrf	??_Save_Write_time+1
  6919  0712  0835               	movf	??_Save_Write_time,w
  6920  0713  00B3               	movwf	Save_Write_word@data
  6921  0714  0836               	movf	??_Save_Write_time+1,w
  6922  0715  00B4               	movwf	Save_Write_word@data+1
  6923  0716  3187  27E8         	fcall	_Save_Write_word
  6924  0718  0008               	return
  6925  0719                     __end_of_Save_Write_time:	
  6926                           
  6927                           	psect	text24
  6928  07E8                     __ptext24:	
  6929 ;; *************** function _Save_Write_word *****************
  6930 ;; Defined at:
  6931 ;;		line 194 in file "mcc_generated_files/save.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  data            2   19[BANK0 ] unsigned int 
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;Total ram usage:        3 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    6
  6952 ;; This function calls:
  6953 ;;		_FLASH_WriteWord
  6954 ;; This function is called by:
  6955 ;;		_tc_temperature_trans
  6956 ;;		_Save_process
  6957 ;;		_Save_Write_time
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _Save_Write_word
  6963  07E8                     _Save_Write_word:	
  6964                           
  6965                           ;save.c: 196: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  6966                           
  6967                           ;incstack = 0
  6968                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6969  07E8  0021               	movlb	1	; select bank1
  6970  07E9  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6971  07EA  0020               	movlb	0	; select bank0
  6972  07EB  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6973  07EC  0021               	movlb	1	; select bank1
  6974  07ED  082E               	movf	_Cur_Save_Index^(0+128),w
  6975  07EE  0020               	movlb	0	; select bank0
  6976  07EF  00AA               	movwf	FLASH_WriteWord@flashAddr
  6977  07F0  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6978  07F1  00F7               	movwf	??_Save_Write_word
  6979  07F2  0877               	movf	??_Save_Write_word,w
  6980  07F3  00AC               	movwf	FLASH_WriteWord@ramBuf
  6981  07F4  0834               	movf	Save_Write_word@data+1,w
  6982  07F5  00AE               	movwf	FLASH_WriteWord@word+1
  6983  07F6  0833               	movf	Save_Write_word@data,w
  6984  07F7  00AD               	movwf	FLASH_WriteWord@word
  6985  07F8  318D  2577         	fcall	_FLASH_WriteWord
  6986                           
  6987                           ;save.c: 197: Cur_Save_Index++;
  6988  07FA  3001               	movlw	1
  6989  07FB  0021               	movlb	1	; select bank1
  6990  07FC  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6991  07FD  3000               	movlw	0
  6992  07FE  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6993  07FF  0008               	return
  6994  0800                     __end_of_Save_Write_word:	
  6995                           
  6996                           	psect	text25
  6997  0D77                     __ptext25:	
  6998 ;; *************** function _FLASH_WriteWord *****************
  6999 ;; Defined at:
  7000 ;;		line 74 in file "mcc_generated_files/memory.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  7003 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  7004 ;;		 -> Flash_buff(64), 
  7005 ;;  word            2   13[BANK0 ] unsigned int 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  7008 ;;  i               1   18[BANK0 ] unsigned char 
  7009 ;;  offset          1   15[BANK0 ] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7019 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7020 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7022 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7023 ;;Total ram usage:       10 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    5
  7026 ;; This function calls:
  7027 ;;		_FLASH_ReadWord
  7028 ;;		_FLASH_WriteBlock
  7029 ;; This function is called by:
  7030 ;;		_Write_Flash_head
  7031 ;;		_Write_Flash_finish
  7032 ;;		_Save_Write_word
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function _FLASH_WriteWord
  7038  0D77                     _FLASH_WriteWord:	
  7039                           
  7040                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7041                           
  7042                           ;incstack = 0
  7043                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7044  0D77  30E0               	movlw	224
  7045  0D78  0020               	movlb	0	; select bank0
  7046  0D79  052A               	andwf	FLASH_WriteWord@flashAddr,w
  7047  0D7A  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  7048  0D7B  303F               	movlw	63
  7049  0D7C  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  7050  0D7D  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  7051                           
  7052                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  7053  0D7E  082A               	movf	FLASH_WriteWord@flashAddr,w
  7054  0D7F  391F               	andlw	31
  7055  0D80  00F6               	movwf	??_FLASH_WriteWord
  7056  0D81  0876               	movf	??_FLASH_WriteWord,w
  7057  0D82  00AF               	movwf	FLASH_WriteWord@offset
  7058                           
  7059                           ;memory.c: 77: uint8_t i;
  7060                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  7061  0D83  01B2               	clrf	FLASH_WriteWord@i
  7062  0D84  3020               	movlw	32
  7063  0D85  0232               	subwf	FLASH_WriteWord@i,w
  7064  0D86  1803               	btfsc	3,0
  7065  0D87  2DA6               	goto	l4310
  7066  0D88                     l4304:	
  7067                           
  7068                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  7069  0D88  0832               	movf	FLASH_WriteWord@i,w
  7070  0D89  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  7071  0D8A  00F3               	movwf	FLASH_ReadWord@flashAddr
  7072  0D8B  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7073  0D8C  1803               	skipnc
  7074  0D8D  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  7075  0D8E  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  7076  0D8F  3189  219A  318D   	fcall	_FLASH_ReadWord
  7077  0D92  0020               	movlb	0	; select bank0
  7078  0D93  3532               	lslf	FLASH_WriteWord@i,w
  7079  0D94  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7080  0D95  00F6               	movwf	??_FLASH_WriteWord
  7081  0D96  0876               	movf	??_FLASH_WriteWord,w
  7082  0D97  0086               	movwf	6
  7083  0D98  3001               	movlw	1	; select bank2/3
  7084  0D99  0087               	movwf	7
  7085  0D9A  0873               	movf	?_FLASH_ReadWord,w
  7086  0D9B  3FC0               	movwi [0]fsr1
  7087  0D9C  0874               	movf	?_FLASH_ReadWord+1,w
  7088  0D9D  3FC1               	movwi [1]fsr1
  7089  0D9E  3001               	movlw	1
  7090  0D9F  00F6               	movwf	??_FLASH_WriteWord
  7091  0DA0  0876               	movf	??_FLASH_WriteWord,w
  7092  0DA1  07B2               	addwf	FLASH_WriteWord@i,f
  7093  0DA2  3020               	movlw	32
  7094  0DA3  0232               	subwf	FLASH_WriteWord@i,w
  7095  0DA4  1C03               	skipc
  7096  0DA5  2D88               	goto	l4304
  7097  0DA6                     l4310:	
  7098                           
  7099                           ;memory.c: 82: }
  7100                           ;memory.c: 85: ramBuf[offset] = word;
  7101  0DA6  352F               	lslf	FLASH_WriteWord@offset,w
  7102  0DA7  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7103  0DA8  00F6               	movwf	??_FLASH_WriteWord
  7104  0DA9  0876               	movf	??_FLASH_WriteWord,w
  7105  0DAA  0086               	movwf	6
  7106  0DAB  3001               	movlw	1	; select bank2/3
  7107  0DAC  0087               	movwf	7
  7108  0DAD  082D               	movf	FLASH_WriteWord@word,w
  7109  0DAE  3FC0               	movwi [0]fsr1
  7110  0DAF  082E               	movf	FLASH_WriteWord@word+1,w
  7111  0DB0  3FC1               	movwi [1]fsr1
  7112                           
  7113                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  7114  0DB1  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7115  0DB2  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  7116  0DB3  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  7117  0DB4  00A0               	movwf	FLASH_WriteBlock@writeAddr
  7118  0DB5  082C               	movf	FLASH_WriteWord@ramBuf,w
  7119  0DB6  00F6               	movwf	??_FLASH_WriteWord
  7120  0DB7  0876               	movf	??_FLASH_WriteWord,w
  7121  0DB8  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  7122  0DB9  3187  2719         	fcall	_FLASH_WriteBlock
  7123  0DBB  0008               	return
  7124  0DBC                     __end_of_FLASH_WriteWord:	
  7125                           
  7126                           	psect	text26
  7127  0719                     __ptext26:	
  7128 ;; *************** function _FLASH_WriteBlock *****************
  7129 ;; Defined at:
  7130 ;;		line 91 in file "mcc_generated_files/memory.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  7133 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  7134 ;;		 -> Flash_buff(64), 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  7137 ;;  i               1    9[BANK0 ] unsigned char 
  7138 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      char 
  7141 ;; Registers used:
  7142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;Total ram usage:       10 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; Hardware stack levels required when called:    4
  7155 ;; This function calls:
  7156 ;;		_FLASH_EraseBlock
  7157 ;; This function is called by:
  7158 ;;		_FLASH_WriteWord
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           
  7163                           ;psect for function _FLASH_WriteBlock
  7164  0719                     _FLASH_WriteBlock:	
  7165                           
  7166                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7170  0719  30E0               	movlw	224
  7171  071A  0020               	movlb	0	; select bank0
  7172  071B  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  7173  071C  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  7174  071D  303F               	movlw	63
  7175  071E  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  7176  071F  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  7177                           
  7178                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  7179  0720  3000               	movlw	0
  7180  0721  1B8B               	btfsc	11,7	;volatile
  7181  0722  3001               	movlw	1
  7182  0723  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  7183                           
  7184                           ;memory.c: 94: uint8_t i;
  7185                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  7186  0724  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  7187  0725  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  7188  0726  1D03               	skipz
  7189  0727  2F2A               	goto	u3435
  7190  0728  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  7191  0729  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  7192  072A                     u3435:	
  7193  072A  1D03               	btfss	3,2
  7194  072B  0008               	return
  7195                           
  7196                           ;memory.c: 99: }
  7197                           ;memory.c: 101: INTCONbits.GIE = 0;
  7198                           
  7199                           ;memory.c: 98: return -1;
  7200                           ;	Return value of _FLASH_WriteBlock is never used
  7201  072C  138B               	bcf	11,7	;volatile
  7202                           
  7203                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  7204  072D  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7205  072E  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  7206  072F  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7207  0730  00F3               	movwf	FLASH_EraseBlock@startAddr
  7208  0731  318A  2238  3187   	fcall	_FLASH_EraseBlock
  7209                           
  7210                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  7211  0734  0023               	movlb	3	; select bank3
  7212  0735  1315               	bcf	21,6	;volatile
  7213                           
  7214                           ;memory.c: 108: PMCON1bits.WREN = 1;
  7215  0736  1515               	bsf	21,2	;volatile
  7216                           
  7217                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  7218  0737  1695               	bsf	21,5	;volatile
  7219                           
  7220                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  7221  0738  0020               	movlb	0	; select bank0
  7222  0739  01A9               	clrf	FLASH_WriteBlock@i
  7223  073A  3020               	movlw	32
  7224  073B  0229               	subwf	FLASH_WriteBlock@i,w
  7225  073C  1803               	btfsc	3,0
  7226  073D  2F7B               	goto	l166
  7227  073E                     l4178:	
  7228                           
  7229                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  7230  073E  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7231  073F  0023               	movlb	3	; select bank3
  7232  0740  0091               	movwf	17	;volatile
  7233                           
  7234                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  7235  0741  0020               	movlb	0	; select bank0
  7236  0742  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7237  0743  0023               	movlb	3	; select bank3
  7238  0744  0092               	movwf	18	;volatile
  7239                           
  7240                           ;memory.c: 118: PMDATL = flashWordArray[i];
  7241  0745  0020               	movlb	0	; select bank0
  7242  0746  3529               	lslf	FLASH_WriteBlock@i,w
  7243  0747  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7244  0748  00A3               	movwf	??_FLASH_WriteBlock
  7245  0749  0823               	movf	??_FLASH_WriteBlock,w
  7246  074A  0086               	movwf	6
  7247  074B  3001               	movlw	1	; select bank2/3
  7248  074C  0087               	movwf	7
  7249  074D  0801               	movf	1,w
  7250  074E  0023               	movlb	3	; select bank3
  7251  074F  0093               	movwf	19	;volatile
  7252                           
  7253                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  7254  0750  0020               	movlb	0	; select bank0
  7255  0751  3529               	lslf	FLASH_WriteBlock@i,w
  7256  0752  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7257  0753  00A3               	movwf	??_FLASH_WriteBlock
  7258  0754  0823               	movf	??_FLASH_WriteBlock,w
  7259  0755  0086               	movwf	6
  7260  0756  3001               	movlw	1	; select bank2/3
  7261  0757  0087               	movwf	7
  7262  0758  3F40               	moviw [0]fsr1
  7263  0759  00A4               	movwf	??_FLASH_WriteBlock+1
  7264  075A  3F41               	moviw [1]fsr1
  7265  075B  00A5               	movwf	??_FLASH_WriteBlock+2
  7266  075C  0825               	movf	??_FLASH_WriteBlock+2,w
  7267  075D  0023               	movlb	3	; select bank3
  7268  075E  0094               	movwf	20	;volatile
  7269                           
  7270                           ;memory.c: 121: if (i == (32 - 1)) {
  7271  075F  301F               	movlw	31
  7272  0760  0020               	movlb	0	; select bank0
  7273  0761  0629               	xorwf	FLASH_WriteBlock@i,w
  7274  0762  1D03               	btfss	3,2
  7275  0763  2F66               	goto	l4190
  7276                           
  7277                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  7278  0764  0023               	movlb	3	; select bank3
  7279  0765  1295               	bcf	21,5	;volatile
  7280  0766                     l4190:	
  7281                           
  7282                           ;memory.c: 124: }
  7283                           ;memory.c: 126: PMCON2 = 0x55;
  7284  0766  3055               	movlw	85
  7285  0767  0023               	movlb	3	; select bank3
  7286  0768  0096               	movwf	22	;volsfr
  7287                           
  7288                           ;memory.c: 127: PMCON2 = 0xAA;
  7289  0769  30AA               	movlw	170
  7290  076A  0096               	movwf	22	;volsfr
  7291                           
  7292                           ;memory.c: 128: PMCON1bits.WR = 1;
  7293  076B  1495               	bsf	21,1	;volatile
  7294                           
  7295                           ;memory.c: 129: __nop();
  7296  076C  0000               	nop
  7297                           
  7298                           ;memory.c: 130: __nop();
  7299  076D  0000               	nop
  7300                           
  7301                           ;memory.c: 132: writeAddr++;
  7302  076E  3001               	movlw	1
  7303  076F  0020               	movlb	0	; select bank0
  7304  0770  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  7305  0771  3000               	movlw	0
  7306  0772  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  7307  0773  3001               	movlw	1
  7308  0774  00A3               	movwf	??_FLASH_WriteBlock
  7309  0775  0823               	movf	??_FLASH_WriteBlock,w
  7310  0776  07A9               	addwf	FLASH_WriteBlock@i,f
  7311  0777  3020               	movlw	32
  7312  0778  0229               	subwf	FLASH_WriteBlock@i,w
  7313  0779  1C03               	skipc
  7314  077A  2F3E               	goto	l4178
  7315  077B                     l166:	
  7316                           
  7317                           ;memory.c: 133: }
  7318                           ;memory.c: 135: PMCON1bits.WREN = 0;
  7319  077B  0023               	movlb	3	; select bank3
  7320  077C  1115               	bcf	21,2	;volatile
  7321                           
  7322                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  7323  077D  0020               	movlb	0	; select bank0
  7324  077E  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  7325  077F  1C03               	skipc
  7326  0780  138B               	bcf	11,7	;volatile
  7327  0781  1803               	skipnc
  7328  0782  178B               	bsf	11,7	;volatile
  7329  0783  0008               	return
  7330  0784                     __end_of_FLASH_WriteBlock:	
  7331                           ;memory.c: 138: return 0;
  7332                           ;	Return value of _FLASH_WriteBlock is never used
  7333                           
  7334                           
  7335                           	psect	text27
  7336  0A38                     __ptext27:	
  7337 ;; *************** function _FLASH_EraseBlock *****************
  7338 ;; Defined at:
  7339 ;;		line 141 in file "mcc_generated_files/memory.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  startAddr       2    3[COMMON] unsigned int 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;Total ram usage:        3 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    3
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_FLASH_WriteBlock
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _FLASH_EraseBlock
  7369  0A38                     _FLASH_EraseBlock:	
  7370                           
  7371                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  7375  0A38  3000               	movlw	0
  7376  0A39  1B8B               	btfsc	11,7	;volatile
  7377  0A3A  3001               	movlw	1
  7378  0A3B  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  7379                           
  7380                           ;memory.c: 145: INTCONbits.GIE = 0;
  7381  0A3C  138B               	bcf	11,7	;volatile
  7382                           
  7383                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  7384  0A3D  0873               	movf	FLASH_EraseBlock@startAddr,w
  7385  0A3E  0023               	movlb	3	; select bank3
  7386  0A3F  0091               	movwf	17	;volatile
  7387                           
  7388                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  7389  0A40  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  7390  0A41  0092               	movwf	18	;volatile
  7391                           
  7392                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  7393  0A42  1315               	bcf	21,6	;volatile
  7394                           
  7395                           ;memory.c: 153: PMCON1bits.FREE = 1;
  7396  0A43  1615               	bsf	21,4	;volatile
  7397                           
  7398                           ;memory.c: 154: PMCON1bits.WREN = 1;
  7399  0A44  1515               	bsf	21,2	;volatile
  7400                           
  7401                           ;memory.c: 157: PMCON2 = 0x55;
  7402  0A45  3055               	movlw	85
  7403  0A46  0096               	movwf	22	;volsfr
  7404                           
  7405                           ;memory.c: 158: PMCON2 = 0xAA;
  7406  0A47  30AA               	movlw	170
  7407  0A48  0096               	movwf	22	;volsfr
  7408                           
  7409                           ;memory.c: 159: PMCON1bits.WR = 1;
  7410  0A49  1495               	bsf	21,1	;volatile
  7411                           
  7412                           ;memory.c: 160: __nop();
  7413  0A4A  0000               	nop
  7414                           
  7415                           ;memory.c: 161: __nop();
  7416  0A4B  0000               	nop
  7417                           
  7418                           ;memory.c: 163: PMCON1bits.WREN = 0;
  7419  0A4C  0023               	movlb	3	; select bank3
  7420  0A4D  1115               	bcf	21,2	;volatile
  7421                           
  7422                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  7423  0A4E  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  7424  0A4F  1C03               	skipc
  7425  0A50  138B               	bcf	11,7	;volatile
  7426  0A51  1803               	skipnc
  7427  0A52  178B               	bsf	11,7	;volatile
  7428  0A53  0008               	return
  7429  0A54                     __end_of_FLASH_EraseBlock:	
  7430                           
  7431                           	psect	text28
  7432  099A                     __ptext28:	
  7433 ;; *************** function _FLASH_ReadWord *****************
  7434 ;; Defined at:
  7435 ;;		line 58 in file "mcc_generated_files/memory.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  flashAddr       2    3[COMMON] unsigned int 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2    3[COMMON] unsigned int 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;Total ram usage:        3 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    3
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_FLASH_WriteWord
  7460 ;;		_Key_Process
  7461 ;;		_Serach_Flash_Head
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function _FLASH_ReadWord
  7467  099A                     _FLASH_ReadWord:	
  7468                           
  7469                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  7473  099A  3000               	movlw	0
  7474  099B  1B8B               	btfsc	11,7	;volatile
  7475  099C  3001               	movlw	1
  7476  099D  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  7477                           
  7478                           ;memory.c: 61: INTCONbits.GIE = 0;
  7479  099E  138B               	bcf	11,7	;volatile
  7480                           
  7481                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  7482  099F  0873               	movf	FLASH_ReadWord@flashAddr,w
  7483  09A0  0023               	movlb	3	; select bank3
  7484  09A1  0091               	movwf	17	;volatile
  7485                           
  7486                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  7487  09A2  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  7488  09A3  0092               	movwf	18	;volatile
  7489                           
  7490                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  7491  09A4  1315               	bcf	21,6	;volatile
  7492                           
  7493                           ;memory.c: 66: PMCON1bits.RD = 1;
  7494  09A5  1415               	bsf	21,0	;volatile
  7495                           
  7496                           ;memory.c: 67: __nop();
  7497  09A6  0000               	nop
  7498                           
  7499                           ;memory.c: 68: __nop();
  7500  09A7  0000               	nop
  7501                           
  7502                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  7503  09A8  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  7504  09A9  1C03               	skipc
  7505  09AA  138B               	bcf	11,7	;volatile
  7506  09AB  1803               	skipnc
  7507  09AC  178B               	bsf	11,7	;volatile
  7508                           
  7509                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  7510  09AD  0023               	movlb	3	; select bank3
  7511  09AE  0814               	movf	20,w	;volatile
  7512  09AF  00F4               	movwf	?_FLASH_ReadWord+1
  7513  09B0  0813               	movf	19,w	;volatile
  7514  09B1  00F3               	movwf	?_FLASH_ReadWord
  7515  09B2  0008               	return
  7516  09B3                     __end_of_FLASH_ReadWord:	
  7517                           
  7518                           	psect	text29
  7519  0F9C                     __ptext29:	
  7520 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  7521 ;; Defined at:
  7522 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  p               1    wreg     PTR struct bq32k_regs
  7525 ;;		 -> rtc_tm(7), 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  7528 ;;		 -> rtc_tm(7), 
  7529 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7542 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;Total ram usage:       13 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    5
  7546 ;; This function calls:
  7547 ;;		_I2C_Read_Buffer
  7548 ;;		_bcd2bin
  7549 ;; This function is called by:
  7550 ;;		_time_Display
  7551 ;;		_Calculate_Time
  7552 ;;		_Save_Write_time
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           
  7557                           ;psect for function _Bq32k_Rtc_Read_Time
  7558  0F9C                     _Bq32k_Rtc_Read_Time:	
  7559                           
  7560                           ;incstack = 0
  7561                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7562                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  7563  0F9C  0020               	movlb	0	; select bank0
  7564  0F9D  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  7565                           
  7566                           ;bq32k.c: 32: unsigned char temp[10] ;
  7567                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  7568  0F9E  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  7569  0F9F  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7570  0FA0  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7571  0FA1  00F6               	movwf	I2C_Read_Buffer@buff
  7572  0FA2  3007               	movlw	7
  7573  0FA3  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  7574  0FA4  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  7575  0FA5  00F7               	movwf	I2C_Read_Buffer@Length
  7576  0FA6  3000               	movlw	0
  7577  0FA7  3186  262F  318F   	fcall	_I2C_Read_Buffer
  7578                           
  7579                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  7580  0FAA  0020               	movlb	0	; select bank0
  7581  0FAB  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  7582  0FAC  397F               	andlw	127
  7583  0FAD  3189  210E  318F   	fcall	_bcd2bin
  7584  0FB0  0020               	movlb	0	; select bank0
  7585  0FB1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7586  0FB2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7587  0FB3  0086               	movwf	6
  7588  0FB4  0187               	clrf	7
  7589  0FB5  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7590  0FB6  0081               	movwf	1
  7591                           
  7592                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  7593  0FB7  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  7594  0FB8  397F               	andlw	127
  7595  0FB9  3189  210E  318F   	fcall	_bcd2bin
  7596  0FBC  0020               	movlb	0	; select bank0
  7597  0FBD  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7598  0FBE  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  7599  0FBF  0086               	movwf	6
  7600  0FC0  0187               	clrf	7
  7601  0FC1  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7602  0FC2  0081               	movwf	1
  7603                           
  7604                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  7605  0FC3  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  7606  0FC4  393F               	andlw	63
  7607  0FC5  3189  210E  318F   	fcall	_bcd2bin
  7608  0FC8  0020               	movlb	0	; select bank0
  7609  0FC9  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7610  0FCA  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7611  0FCB  3E02               	addlw	2
  7612  0FCC  0086               	movwf	6
  7613  0FCD  0187               	clrf	7
  7614  0FCE  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7615  0FCF  0081               	movwf	1
  7616                           
  7617                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  7618  0FD0  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  7619  0FD1  3189  210E  318F   	fcall	_bcd2bin
  7620  0FD4  0020               	movlb	0	; select bank0
  7621  0FD5  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7622  0FD6  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7623  0FD7  3E03               	addlw	3
  7624  0FD8  0086               	movwf	6
  7625  0FD9  0187               	clrf	7
  7626  0FDA  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7627  0FDB  0081               	movwf	1
  7628                           
  7629                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  7630  0FDC  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  7631  0FDD  3189  210E  318F   	fcall	_bcd2bin
  7632  0FE0  0020               	movlb	0	; select bank0
  7633  0FE1  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7634  0FE2  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7635  0FE3  3E04               	addlw	4
  7636  0FE4  0086               	movwf	6
  7637  0FE5  0187               	clrf	7
  7638  0FE6  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7639  0FE7  0081               	movwf	1
  7640                           
  7641                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  7642  0FE8  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  7643  0FE9  3189  210E  318F   	fcall	_bcd2bin
  7644  0FEC  0020               	movlb	0	; select bank0
  7645  0FED  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7646  0FEE  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7647  0FEF  3E05               	addlw	5
  7648  0FF0  0086               	movwf	6
  7649  0FF1  0187               	clrf	7
  7650  0FF2  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7651  0FF3  0081               	movwf	1
  7652                           
  7653                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  7654  0FF4  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  7655  0FF5  3189  210E         	fcall	_bcd2bin
  7656  0FF7  0020               	movlb	0	; select bank0
  7657  0FF8  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7658  0FF9  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7659  0FFA  3E06               	addlw	6
  7660  0FFB  0086               	movwf	6
  7661  0FFC  0187               	clrf	7
  7662  0FFD  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7663  0FFE  0081               	movwf	1
  7664  0FFF  0008               	return
  7665  1000                     __end_of_Bq32k_Rtc_Read_Time:	
  7666                           
  7667                           	psect	text30
  7668  090E                     __ptext30:	
  7669 ;; *************** function _bcd2bin *****************
  7670 ;; Defined at:
  7671 ;;		line 68 in file "mcc_generated_files/bq32k.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  val             1    wreg     unsigned char 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  val             1    7[COMMON] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      unsigned char 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0, pclath, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;Total ram usage:        4 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    4
  7692 ;; This function calls:
  7693 ;;		___bmul
  7694 ;; This function is called by:
  7695 ;;		_Bq32k_Rtc_Read_Time
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _bcd2bin
  7701  090E                     _bcd2bin:	
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  7705                           ;bcd2bin@val stored from wreg
  7706  090E  00F7               	movwf	bcd2bin@val
  7707                           
  7708                           ;bq32k.c: 70: return (val & 0x0f) + (val >> 4) * 10;
  7709  090F  300F               	movlw	15
  7710  0910  0577               	andwf	bcd2bin@val,w
  7711  0911  0020               	movlb	0	; select bank0
  7712  0912  00A0               	movwf	??_bcd2bin
  7713  0913  300A               	movlw	10
  7714  0914  00A1               	movwf	??_bcd2bin+1
  7715  0915  0821               	movf	??_bcd2bin+1,w
  7716  0916  00F3               	movwf	___bmul@multiplicand
  7717  0917  0877               	movf	bcd2bin@val,w
  7718  0918  00A2               	movwf	??_bcd2bin+2
  7719  0919  3004               	movlw	4
  7720  091A                     u3625:	
  7721  091A  36A2               	lsrf	??_bcd2bin+2,f
  7722  091B  0B89               	decfsz	9,f
  7723  091C  291A               	goto	u3625
  7724  091D  0822               	movf	??_bcd2bin+2,w
  7725  091E  3188  20FD         	fcall	___bmul
  7726  0920  0020               	movlb	0	; select bank0
  7727  0921  0720               	addwf	??_bcd2bin,w
  7728  0922  0008               	return
  7729  0923                     __end_of_bcd2bin:	
  7730                           
  7731                           	psect	text31
  7732  08FD                     __ptext31:	
  7733 ;; *************** function ___bmul *****************
  7734 ;; Defined at:
  7735 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  multiplier      1    wreg     unsigned char 
  7738 ;;  multiplicand    1    3[COMMON] unsigned char 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  multiplier      1    6[COMMON] unsigned char 
  7741 ;;  product         1    5[COMMON] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      unsigned char 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7751 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7755 ;;Total ram usage:        4 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    3
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_bcd2bin
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           
  7766                           ;psect for function ___bmul
  7767  08FD                     ___bmul:	
  7768                           
  7769                           ;incstack = 0
  7770                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7771                           ;___bmul@multiplier stored from wreg
  7772  08FD  00F6               	movwf	___bmul@multiplier
  7773  08FE  01F5               	clrf	___bmul@product
  7774  08FF                     l4284:	
  7775  08FF  1C76               	btfss	___bmul@multiplier,0
  7776  0900  2905               	goto	l4288
  7777  0901  0873               	movf	___bmul@multiplicand,w
  7778  0902  00F4               	movwf	??___bmul
  7779  0903  0874               	movf	??___bmul,w
  7780  0904  07F5               	addwf	___bmul@product,f
  7781  0905                     l4288:	
  7782  0905  1003               	clrc
  7783  0906  0DF3               	rlf	___bmul@multiplicand,f
  7784  0907  1003               	clrc
  7785  0908  0CF6               	rrf	___bmul@multiplier,f
  7786  0909  0876               	movf	___bmul@multiplier,w
  7787  090A  1D03               	btfss	3,2
  7788  090B  28FF               	goto	l4284
  7789  090C  0875               	movf	___bmul@product,w
  7790  090D  0008               	return
  7791  090E                     __end_of___bmul:	
  7792                           
  7793                           	psect	text32
  7794  062F                     __ptext32:	
  7795 ;; *************** function _I2C_Read_Buffer *****************
  7796 ;; Defined at:
  7797 ;;		line 120 in file "mcc_generated_files/i2c.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  ADD             1    wreg     unsigned char 
  7800 ;;  buff            1    6[COMMON] PTR unsigned char 
  7801 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  7802 ;;  Length          1    7[COMMON] unsigned char 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  ADD             1    1[BANK0 ] unsigned char 
  7805 ;;  Flag            1    2[BANK0 ] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      unsigned char 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;Total ram usage:        5 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    4
  7822 ;; This function calls:
  7823 ;;		_I2C_Receive_Byte
  7824 ;;		_I2C_Send_Byte
  7825 ;;		_I2C_Start
  7826 ;;		_I2C_Stop
  7827 ;; This function is called by:
  7828 ;;		_Bq32k_Rtc_Read_Time
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function _I2C_Read_Buffer
  7834  062F                     _I2C_Read_Buffer:	
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7838                           ;I2C_Read_Buffer@ADD stored from wreg
  7839  062F  0020               	movlb	0	; select bank0
  7840  0630  00A1               	movwf	I2C_Read_Buffer@ADD
  7841                           
  7842                           ;i2c.c: 122: unsigned char Flag=1;
  7843  0631  01A2               	clrf	I2C_Read_Buffer@Flag
  7844  0632  0AA2               	incf	I2C_Read_Buffer@Flag,f
  7845                           
  7846                           ;i2c.c: 124: I2C_Start();
  7847  0633  3189  2168  3186   	fcall	_I2C_Start
  7848                           
  7849                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  7850  0636  30D0               	movlw	208
  7851  0637  318E  264A  3186   	fcall	_I2C_Send_Byte
  7852  063A  0020               	movlb	0	; select bank0
  7853  063B  00A0               	movwf	??_I2C_Read_Buffer
  7854  063C  0820               	movf	??_I2C_Read_Buffer,w
  7855  063D  00A2               	movwf	I2C_Read_Buffer@Flag
  7856                           
  7857                           ;i2c.c: 127: if(Flag)
  7858  063E  0822               	movf	I2C_Read_Buffer@Flag,w
  7859  063F  1D03               	btfss	3,2
  7860  0640  0008               	return
  7861                           
  7862                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  7863                           
  7864                           ;i2c.c: 128: return 0x01;
  7865                           ;	Return value of _I2C_Read_Buffer is never used
  7866  0641  0821               	movf	I2C_Read_Buffer@ADD,w
  7867  0642  318E  264A  3186   	fcall	_I2C_Send_Byte
  7868  0645  0020               	movlb	0	; select bank0
  7869  0646  00A0               	movwf	??_I2C_Read_Buffer
  7870  0647  0820               	movf	??_I2C_Read_Buffer,w
  7871  0648  00A2               	movwf	I2C_Read_Buffer@Flag
  7872                           
  7873                           ;i2c.c: 131: if(Flag)
  7874  0649  0822               	movf	I2C_Read_Buffer@Flag,w
  7875  064A  1D03               	btfss	3,2
  7876  064B  0008               	return
  7877                           
  7878                           ;i2c.c: 134: I2C_Start();
  7879                           
  7880                           ;i2c.c: 132: return 0x01;
  7881                           ;	Return value of _I2C_Read_Buffer is never used
  7882  064C  3189  2168  3186   	fcall	_I2C_Start
  7883                           
  7884                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  7885  064F  30D1               	movlw	209
  7886  0650  318E  264A  3186   	fcall	_I2C_Send_Byte
  7887  0653  0020               	movlb	0	; select bank0
  7888  0654  00A0               	movwf	??_I2C_Read_Buffer
  7889  0655  0820               	movf	??_I2C_Read_Buffer,w
  7890  0656  00A2               	movwf	I2C_Read_Buffer@Flag
  7891                           
  7892                           ;i2c.c: 136: if(Flag)
  7893  0657  0822               	movf	I2C_Read_Buffer@Flag,w
  7894  0658  1D03               	btfss	3,2
  7895  0659  0008               	return
  7896  065A                     l4352:	
  7897  065A  3002               	movlw	2
  7898  065B  0277               	subwf	I2C_Read_Buffer@Length,w
  7899  065C  1C03               	btfss	3,0
  7900  065D  2E85               	goto	l4354
  7901                           
  7902                           ;i2c.c: 140: {
  7903                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  7904                           
  7905                           ;i2c.c: 139: while(Length>1)
  7906                           
  7907                           ;i2c.c: 137: return 0x01;
  7908                           ;	Return value of _I2C_Read_Buffer is never used
  7909  065E  318B  231C  3186   	fcall	_I2C_Receive_Byte
  7910  0661  0020               	movlb	0	; select bank0
  7911  0662  00A0               	movwf	??_I2C_Read_Buffer
  7912  0663  0876               	movf	I2C_Read_Buffer@buff,w
  7913  0664  0086               	movwf	6
  7914  0665  0187               	clrf	7
  7915  0666  0820               	movf	??_I2C_Read_Buffer,w
  7916  0667  0081               	movwf	1
  7917                           
  7918                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  7919  0668  0022               	movlb	2	; select bank2
  7920  0669  108D               	bcf	13,1	;volatile
  7921                           
  7922                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7923  066A  300D               	movlw	13
  7924  066B  0020               	movlb	0	; select bank0
  7925  066C  00A0               	movwf	??_I2C_Read_Buffer
  7926  066D                     u5077:	
  7927  066D  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7928  066E  2E6D               	goto	u5077
  7929                           
  7930                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  7931  066F  0022               	movlb	2	; select bank2
  7932  0670  140D               	bsf	13,0	;volatile
  7933                           
  7934                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7935  0671  300D               	movlw	13
  7936  0672  0020               	movlb	0	; select bank0
  7937  0673  00A0               	movwf	??_I2C_Read_Buffer
  7938  0674                     u5087:	
  7939  0674  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7940  0675  2E74               	goto	u5087
  7941                           
  7942                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  7943  0676  0022               	movlb	2	; select bank2
  7944  0677  100D               	bcf	13,0	;volatile
  7945                           
  7946                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7947  0678  300D               	movlw	13
  7948  0679  0020               	movlb	0	; select bank0
  7949  067A  00A0               	movwf	??_I2C_Read_Buffer
  7950  067B                     u5097:	
  7951  067B  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7952  067C  2E7B               	goto	u5097
  7953                           
  7954                           ;i2c.c: 150: buff++;
  7955  067D  3001               	movlw	1
  7956  067E  0020               	movlb	0	; select bank0
  7957  067F  00A0               	movwf	??_I2C_Read_Buffer
  7958  0680  0820               	movf	??_I2C_Read_Buffer,w
  7959  0681  07F6               	addwf	I2C_Read_Buffer@buff,f
  7960                           
  7961                           ;i2c.c: 151: Length--;
  7962  0682  3001               	movlw	1
  7963  0683  02F7               	subwf	I2C_Read_Buffer@Length,f
  7964  0684  2E5A               	goto	l4352
  7965  0685                     l4354:	
  7966                           
  7967                           ;i2c.c: 152: }
  7968                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  7969  0685  318B  231C  3186   	fcall	_I2C_Receive_Byte
  7970  0688  0020               	movlb	0	; select bank0
  7971  0689  00A0               	movwf	??_I2C_Read_Buffer
  7972  068A  0876               	movf	I2C_Read_Buffer@buff,w
  7973  068B  0086               	movwf	6
  7974  068C  0187               	clrf	7
  7975  068D  0820               	movf	??_I2C_Read_Buffer,w
  7976  068E  0081               	movwf	1
  7977                           
  7978                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  7979  068F  0022               	movlb	2	; select bank2
  7980  0690  148D               	bsf	13,1	;volatile
  7981                           
  7982                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7983  0691  300D               	movlw	13
  7984  0692  0020               	movlb	0	; select bank0
  7985  0693  00A0               	movwf	??_I2C_Read_Buffer
  7986  0694                     u5107:	
  7987  0694  0BA0               	decfsz	??_I2C_Read_Buffer,f
  7988  0695  2E94               	goto	u5107
  7989                           
  7990                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  7991  0696  0022               	movlb	2	; select bank2
  7992  0697  140D               	bsf	13,0	;volatile
  7993                           
  7994                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7995  0698  300D               	movlw	13
  7996  0699  0020               	movlb	0	; select bank0
  7997  069A  00A0               	movwf	??_I2C_Read_Buffer
  7998  069B                     u5117:	
  7999  069B  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8000  069C  2E9B               	goto	u5117
  8001                           
  8002                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  8003  069D  0022               	movlb	2	; select bank2
  8004  069E  100D               	bcf	13,0	;volatile
  8005                           
  8006                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8007  069F  300D               	movlw	13
  8008  06A0  0020               	movlb	0	; select bank0
  8009  06A1  00A0               	movwf	??_I2C_Read_Buffer
  8010  06A2                     u5127:	
  8011  06A2  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8012  06A3  2EA2               	goto	u5127
  8013                           
  8014                           ;i2c.c: 162: I2C_Stop();
  8015  06A4  3189  2181         	fcall	_I2C_Stop
  8016  06A6  0008               	return
  8017  06A7                     __end_of_I2C_Read_Buffer:	
  8018                           ;i2c.c: 164: return 0x00;
  8019                           ;	Return value of _I2C_Read_Buffer is never used
  8020                           
  8021                           
  8022                           	psect	text33
  8023  0B1C                     __ptext33:	
  8024 ;; *************** function _I2C_Receive_Byte *****************
  8025 ;; Defined at:
  8026 ;;		line 74 in file "mcc_generated_files/i2c.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  i               1    5[COMMON] unsigned char 
  8031 ;;  Data            1    4[COMMON] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      unsigned char 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;Total ram usage:        3 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:    3
  8048 ;; This function calls:
  8049 ;;		Nothing
  8050 ;; This function is called by:
  8051 ;;		_I2C_Read_Buffer
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           
  8056                           ;psect for function _I2C_Receive_Byte
  8057  0B1C                     _I2C_Receive_Byte:	
  8058                           
  8059                           ;i2c.c: 76: unsigned char i,Data=0;
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  8063  0B1C  01F4               	clrf	I2C_Receive_Byte@Data
  8064                           
  8065                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  8066  0B1D  0022               	movlb	2	; select bank2
  8067  0B1E  148D               	bsf	13,1	;volatile
  8068                           
  8069                           ;i2c.c: 78: for(i=0;i<8;i++)
  8070  0B1F  01F5               	clrf	I2C_Receive_Byte@i
  8071  0B20  3008               	movlw	8
  8072  0B21  0275               	subwf	I2C_Receive_Byte@i,w
  8073  0B22  1803               	btfsc	3,0
  8074  0B23  2B44               	goto	l4270
  8075                           
  8076                           ;i2c.c: 79: {
  8077                           ;i2c.c: 80: Data <<= 1;
  8078  0B24  1003               	clrc
  8079  0B25                     L6:	
  8080  0B25  0DF4               	rlf	I2C_Receive_Byte@Data,f
  8081                           
  8082                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  8083  0B26  0022               	movlb	2	; select bank2
  8084  0B27  140D               	bsf	13,0	;volatile
  8085                           
  8086                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8087  0B28  300D               	movlw	13
  8088  0B29  00F3               	movwf	??_I2C_Receive_Byte
  8089  0B2A                     u5137:	
  8090  0B2A  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8091  0B2B  2B2A               	goto	u5137
  8092                           
  8093                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  8094  0B2C  0021               	movlb	1	; select bank1
  8095  0B2D  148D               	bsf	13,1	;volatile
  8096                           
  8097                           ;i2c.c: 84: if(RB1)
  8098  0B2E  0020               	movlb	0	; select bank0
  8099  0B2F  1C8D               	btfss	13,1	;volatile
  8100  0B30  2B34               	goto	l766
  8101                           
  8102                           ;i2c.c: 85: {
  8103                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  8104  0B31  0021               	movlb	1	; select bank1
  8105  0B32  108D               	bcf	13,1	;volatile
  8106                           
  8107                           ;i2c.c: 87: Data |= 0x01;
  8108  0B33  1474               	bsf	I2C_Receive_Byte@Data,0
  8109  0B34                     l766:	
  8110                           ;i2c.c: 88: }
  8111                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  8112                           
  8113  0B34  0021               	movlb	1	; select bank1
  8114  0B35  108D               	bcf	13,1	;volatile
  8115                           
  8116                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  8117  0B36  0022               	movlb	2	; select bank2
  8118  0B37  100D               	bcf	13,0	;volatile
  8119                           
  8120                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8121  0B38  300D               	movlw	13
  8122  0B39  00F3               	movwf	??_I2C_Receive_Byte
  8123  0B3A                     u5147:	
  8124  0B3A  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8125  0B3B  2B3A               	goto	u5147
  8126  0B3C  3001               	movlw	1
  8127  0B3D  00F3               	movwf	??_I2C_Receive_Byte
  8128  0B3E  0873               	movf	??_I2C_Receive_Byte,w
  8129  0B3F  07F5               	addwf	I2C_Receive_Byte@i,f
  8130  0B40  3008               	movlw	8
  8131  0B41  0275               	subwf	I2C_Receive_Byte@i,w
  8132  0B42  1C03               	skipc
  8133  0B43  2B25               	goto	L6
  8134  0B44                     l4270:	
  8135                           
  8136                           ;i2c.c: 92: }
  8137                           ;i2c.c: 93: return Data;
  8138  0B44  0874               	movf	I2C_Receive_Byte@Data,w
  8139  0B45  0008               	return
  8140  0B46                     __end_of_I2C_Receive_Byte:	
  8141                           
  8142                           	psect	text34
  8143  08CC                     __ptext34:	
  8144 ;; *************** function _maxim_clear_fault_status *****************
  8145 ;; Defined at:
  8146 ;;		line 155 in file "mcc_generated_files/max31856.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      void 
  8153 ;; Registers used:
  8154 ;;		wreg, status,2, status,0, pclath, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;Total ram usage:        1 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    5
  8167 ;; This function calls:
  8168 ;;		_maxim_31856_read_register
  8169 ;;		_maxim_31856_write_register
  8170 ;; This function is called by:
  8171 ;;		_temperature_display
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function _maxim_clear_fault_status
  8177  08CC                     _maxim_clear_fault_status:	
  8178                           
  8179                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  8180                           
  8181                           ;incstack = 0
  8182                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  8183  08CC  3000               	movlw	0
  8184  08CD  3188  20EC  3188   	fcall	_maxim_31856_read_register
  8185  08D0  00F7               	movwf	??_maxim_clear_fault_status
  8186  08D1  0877               	movf	??_maxim_clear_fault_status,w
  8187  08D2  00FA               	movwf	_uch_cr0
  8188                           
  8189                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  8190  08D3  14FA               	bsf	_uch_cr0,1
  8191                           
  8192                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  8193  08D4  087A               	movf	_uch_cr0,w
  8194  08D5  00F7               	movwf	??_maxim_clear_fault_status
  8195  08D6  0877               	movf	??_maxim_clear_fault_status,w
  8196  08D7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  8197  08D8  3080               	movlw	128
  8198  08D9  3188  20BF         	fcall	_maxim_31856_write_register
  8199  08DB  0008               	return
  8200  08DC                     __end_of_maxim_clear_fault_status:	
  8201                           
  8202                           	psect	text35
  8203  0B46                     __ptext35:	
  8204 ;; *************** function _err_Display *****************
  8205 ;; Defined at:
  8206 ;;		line 153 in file "mcc_generated_files/ht1621.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  num             4    7[BANK0 ] unsigned char [4]
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;Total ram usage:        5 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    5
  8227 ;; This function calls:
  8228 ;;		_WriteAll_1621
  8229 ;; This function is called by:
  8230 ;;		_temperature_display
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _err_Display
  8236  0B46                     _err_Display:	
  8237                           
  8238                           ;ht1621.c: 155: unsigned char num[4]={0};
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8242  0B46  0021               	movlb	1	; select bank1
  8243  0B47  0827               	movf	(err_Display@F2126+3)^(0+128),w
  8244  0B48  0020               	movlb	0	; select bank0
  8245  0B49  00AA               	movwf	err_Display@num+3
  8246  0B4A  0021               	movlb	1	; select bank1
  8247  0B4B  0826               	movf	(err_Display@F2126+2)^(0+128),w
  8248  0B4C  0020               	movlb	0	; select bank0
  8249  0B4D  00A9               	movwf	err_Display@num+2
  8250  0B4E  0021               	movlb	1	; select bank1
  8251  0B4F  0825               	movf	(err_Display@F2126+1)^(0+128),w
  8252  0B50  0020               	movlb	0	; select bank0
  8253  0B51  00A8               	movwf	err_Display@num+1
  8254  0B52  0021               	movlb	1	; select bank1
  8255  0B53  0824               	movf	err_Display@F2126^(0+128),w
  8256  0B54  0020               	movlb	0	; select bank0
  8257  0B55  00A7               	movwf	err_Display@num
  8258                           
  8259                           ;ht1621.c: 156: num[1] = Dis_TAB[0x10];
  8260  0B56  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  8261  0B57  0084               	movwf	4
  8262  0B58  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  8263  0B59  0085               	movwf	5
  8264  0B5A  0800               	movf	0,w	;code access
  8265  0B5B  00A6               	movwf	??_err_Display
  8266  0B5C  0826               	movf	??_err_Display,w
  8267  0B5D  00A8               	movwf	err_Display@num+1
  8268                           
  8269                           ;ht1621.c: 157: num[2] = Dis_TAB[0x0c];
  8270  0B5E  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  8271  0B5F  0084               	movwf	4
  8272  0B60  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  8273  0B61  0085               	movwf	5
  8274  0B62  0800               	movf	0,w	;code access
  8275  0B63  00A6               	movwf	??_err_Display
  8276  0B64  0826               	movf	??_err_Display,w
  8277  0B65  00A9               	movwf	err_Display@num+2
  8278                           
  8279                           ;ht1621.c: 158: WriteAll_1621(0, num, 4);
  8280  0B66  3027               	movlw	low err_Display@num
  8281  0B67  00A0               	movwf	WriteAll_1621@p
  8282  0B68  3000               	movlw	high err_Display@num
  8283  0B69  00A1               	movwf	WriteAll_1621@p+1
  8284  0B6A  3004               	movlw	4
  8285  0B6B  00A6               	movwf	??_err_Display
  8286  0B6C  0826               	movf	??_err_Display,w
  8287  0B6D  00A2               	movwf	WriteAll_1621@cnt
  8288  0B6E  3000               	movlw	0
  8289  0B6F  318C  2495         	fcall	_WriteAll_1621
  8290  0B71  0008               	return
  8291  0B72                     __end_of_err_Display:	
  8292                           
  8293                           	psect	text36
  8294  044F                     __ptext36:	
  8295 ;; *************** function _Tc_Display *****************
  8296 ;; Defined at:
  8297 ;;		line 110 in file "mcc_generated_files/ht1621.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  data            2   11[BANK0 ] unsigned int 
  8302 ;;  count           1   10[BANK0 ] unsigned char 
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;Total ram usage:        4 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:    5
  8319 ;; This function calls:
  8320 ;;		_WriteAll_1621
  8321 ;;		___lwdiv
  8322 ;;		___lwmod
  8323 ;;		_memset
  8324 ;; This function is called by:
  8325 ;;		_temperature_display
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           
  8330                           ;psect for function _Tc_Display
  8331  044F                     _Tc_Display:	
  8332                           
  8333                           ;ht1621.c: 112: unsigned char count = 0;
  8334                           
  8335                           ;incstack = 0
  8336                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8337  044F  0020               	movlb	0	; select bank0
  8338  0450  01AA               	clrf	Tc_Display@count
  8339                           
  8340                           ;ht1621.c: 113: unsigned int data = temperature_int;
  8341  0451  0879               	movf	_temperature_int+1,w
  8342  0452  00AC               	movwf	Tc_Display@data+1
  8343  0453  0878               	movf	_temperature_int,w
  8344  0454  00AB               	movwf	Tc_Display@data
  8345                           
  8346                           ;ht1621.c: 114: memset(display_buff,0,4);
  8347  0455  3000               	movlw	0
  8348  0456  00F3               	movwf	memset@c
  8349  0457  00F4               	movwf	memset@c+1
  8350  0458  3004               	movlw	4
  8351  0459  00F5               	movwf	memset@n
  8352  045A  3000               	movlw	0
  8353  045B  00F6               	movwf	memset@n+1
  8354  045C  30DD               	movlw	(low (_display_buff| 0))& (0+255)
  8355  045D  318A  221D  3184   	fcall	_memset
  8356  0460                     l4778:	
  8357                           ;ht1621.c: 115: while(data)
  8358                           
  8359  0460  0020               	movlb	0	; select bank0
  8360  0461  082B               	movf	Tc_Display@data,w
  8361  0462  042C               	iorwf	Tc_Display@data+1,w
  8362  0463  1903               	btfsc	3,2
  8363  0464  2CD9               	goto	l4786
  8364                           
  8365                           ;ht1621.c: 116: {
  8366                           ;ht1621.c: 117: count++;
  8367  0465  3001               	movlw	1
  8368  0466  0020               	movlb	0	; select bank0
  8369  0467  00A9               	movwf	??_Tc_Display
  8370  0468  0829               	movf	??_Tc_Display,w
  8371  0469  07AA               	addwf	Tc_Display@count,f
  8372                           
  8373                           ;ht1621.c: 118: data /=10;
  8374  046A  300A               	movlw	10
  8375  046B  00A1               	movwf	___lwdiv@divisor
  8376  046C  3000               	movlw	0
  8377  046D  00A2               	movwf	___lwdiv@divisor+1
  8378  046E  082C               	movf	Tc_Display@data+1,w
  8379  046F  00A4               	movwf	___lwdiv@dividend+1
  8380  0470  082B               	movf	Tc_Display@data,w
  8381  0471  00A3               	movwf	___lwdiv@dividend
  8382  0472  318C  24CA  3184   	fcall	___lwdiv
  8383  0475  0020               	movlb	0	; select bank0
  8384  0476  0822               	movf	?___lwdiv+1,w
  8385  0477  00AC               	movwf	Tc_Display@data+1
  8386  0478  0821               	movf	?___lwdiv,w
  8387  0479  00AB               	movwf	Tc_Display@data
  8388  047A  2C60               	goto	l4778
  8389  047B                     l4780:	
  8390                           ;ht1621.c: 121: {
  8391                           ;ht1621.c: 122: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  8392                           
  8393                           ;ht1621.c: 119: }
  8394                           ;ht1621.c: 120: switch(count)
  8395                           
  8396  047B  3064               	movlw	100
  8397  047C  00A1               	movwf	___lwdiv@divisor
  8398  047D  3000               	movlw	0
  8399  047E  00A2               	movwf	___lwdiv@divisor+1
  8400  047F  0879               	movf	_temperature_int+1,w
  8401  0480  00A4               	movwf	___lwdiv@dividend+1
  8402  0481  0878               	movf	_temperature_int,w
  8403  0482  00A3               	movwf	___lwdiv@dividend
  8404  0483  318C  24CA  3184   	fcall	___lwdiv
  8405  0486  0020               	movlb	0	; select bank0
  8406  0487  0822               	movf	?___lwdiv+1,w
  8407  0488  0085               	movwf	5
  8408  0489  0821               	movf	?___lwdiv,w
  8409  048A  0084               	movwf	4
  8410  048B  3000               	movlw	low (_Dis_TAB| (0+32768))
  8411  048C  0784               	addwf	4,f
  8412  048D  3090               	movlw	high (_Dis_TAB| (0+32768))
  8413  048E  3D85               	addwfc	5,f
  8414  048F  0800               	movf	0,w	;code access
  8415  0490  00A9               	movwf	??_Tc_Display
  8416  0491  0829               	movf	??_Tc_Display,w
  8417  0492  0021               	movlb	1	; select bank1
  8418  0493  00DD               	movwf	_display_buff^(0+128)
  8419  0494                     l680:	
  8420                           ;ht1621.c: 123: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  8421                           
  8422  0494  300A               	movlw	10
  8423  0495  0020               	movlb	0	; select bank0
  8424  0496  00A1               	movwf	___lwdiv@divisor
  8425  0497  3000               	movlw	0
  8426  0498  00A2               	movwf	___lwdiv@divisor+1
  8427  0499  0879               	movf	_temperature_int+1,w
  8428  049A  00F6               	movwf	___lwmod@dividend+1
  8429  049B  0878               	movf	_temperature_int,w
  8430  049C  00F5               	movwf	___lwmod@dividend
  8431  049D  3064               	movlw	100
  8432  049E  00F3               	movwf	___lwmod@divisor
  8433  049F  3000               	movlw	0
  8434  04A0  00F4               	movwf	___lwmod@divisor+1
  8435  04A1  318B  2372  3184   	fcall	___lwmod
  8436  04A4  0874               	movf	?___lwmod+1,w
  8437  04A5  0020               	movlb	0	; select bank0
  8438  04A6  00A4               	movwf	___lwdiv@dividend+1
  8439  04A7  0873               	movf	?___lwmod,w
  8440  04A8  00A3               	movwf	___lwdiv@dividend
  8441  04A9  318C  24CA  3184   	fcall	___lwdiv
  8442  04AC  0020               	movlb	0	; select bank0
  8443  04AD  0822               	movf	?___lwdiv+1,w
  8444  04AE  0085               	movwf	5
  8445  04AF  0821               	movf	?___lwdiv,w
  8446  04B0  0084               	movwf	4
  8447  04B1  3000               	movlw	low (_Dis_TAB| (0+32768))
  8448  04B2  0784               	addwf	4,f
  8449  04B3  3090               	movlw	high (_Dis_TAB| (0+32768))
  8450  04B4  3D85               	addwfc	5,f
  8451  04B5  0800               	movf	0,w	;code access
  8452  04B6  00A9               	movwf	??_Tc_Display
  8453  04B7  0829               	movf	??_Tc_Display,w
  8454  04B8  0021               	movlb	1	; select bank1
  8455  04B9  00DE               	movwf	(_display_buff^(0+128)+1)
  8456  04BA                     l681:	
  8457                           ;ht1621.c: 124: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  8458                           
  8459  04BA  300A               	movlw	10
  8460  04BB  00F3               	movwf	___lwmod@divisor
  8461  04BC  3000               	movlw	0
  8462  04BD  00F4               	movwf	___lwmod@divisor+1
  8463  04BE  0879               	movf	_temperature_int+1,w
  8464  04BF  00F6               	movwf	___lwmod@dividend+1
  8465  04C0  0878               	movf	_temperature_int,w
  8466  04C1  00F5               	movwf	___lwmod@dividend
  8467  04C2  318B  2372  3184   	fcall	___lwmod
  8468  04C5  0874               	movf	?___lwmod+1,w
  8469  04C6  0085               	movwf	5
  8470  04C7  0873               	movf	?___lwmod,w
  8471  04C8  0084               	movwf	4
  8472  04C9  3000               	movlw	low (_Dis_TAB| (0+32768))
  8473  04CA  0784               	addwf	4,f
  8474  04CB  3090               	movlw	high (_Dis_TAB| (0+32768))
  8475  04CC  3D85               	addwfc	5,f
  8476  04CD  2CD2               	goto	L7
  8477  04CE                     l4782:	
  8478                           ;ht1621.c: 125: case 0:display_buff[2] = Dis_TAB[0];
  8479                           
  8480  04CE  3000               	movlw	low (_Dis_TAB| (0+32768))
  8481  04CF  0084               	movwf	4
  8482  04D0  3090               	movlw	high (_Dis_TAB| (0+32768))
  8483  04D1  0085               	movwf	5
  8484  04D2                     L7:	
  8485  04D2  0800               	movf	0,w	;code access
  8486  04D3  0020               	movlb	0	; select bank0
  8487  04D4  00A9               	movwf	??_Tc_Display
  8488  04D5  0829               	movf	??_Tc_Display,w
  8489  04D6  0021               	movlb	1	; select bank1
  8490  04D7  00DF               	movwf	(_display_buff^(0+128)+2)
  8491                           
  8492                           ;ht1621.c: 127: }
  8493                           
  8494                           ;ht1621.c: 126: default:break;
  8495  04D8  2CE8               	goto	l4788
  8496  04D9                     l4786:	
  8497  04D9  0020               	movlb	0	; select bank0
  8498  04DA  082A               	movf	Tc_Display@count,w
  8499                           
  8500                           ; Switch size 1, requested type "space"
  8501                           ; Number of cases is 4, Range of values is 0 to 3
  8502                           ; switch strategies available:
  8503                           ; Name         Instructions Cycles
  8504                           ; simple_byte           13     7 (average)
  8505                           ; direct_byte           14     6 (fixed)
  8506                           ; jumptable            260     6 (fixed)
  8507                           ;	Chosen strategy is simple_byte
  8508  04DB  3A00               	xorlw	0	; case 0
  8509  04DC  1903               	skipnz
  8510  04DD  2CCE               	goto	l4782
  8511  04DE  3A01               	xorlw	1	; case 1
  8512  04DF  1903               	skipnz
  8513  04E0  2CBA               	goto	l681
  8514  04E1  3A03               	xorlw	3	; case 2
  8515  04E2  1903               	skipnz
  8516  04E3  2C94               	goto	l680
  8517  04E4  3A01               	xorlw	1	; case 3
  8518  04E5  1903               	skipnz
  8519  04E6  2C7B               	goto	l4780
  8520  04E7  2CE8               	goto	l4788
  8521  04E8                     l4788:	
  8522                           
  8523                           ;ht1621.c: 128: if(temperature_sign == 1) display_buff[0]=0x20;
  8524  04E8  0021               	movlb	1	; select bank1
  8525  04E9  0337               	decf	_temperature_sign^(0+128),w
  8526  04EA  1D03               	btfss	3,2
  8527  04EB  2CF2               	goto	l4792
  8528  04EC  3020               	movlw	32
  8529  04ED  0020               	movlb	0	; select bank0
  8530  04EE  00A9               	movwf	??_Tc_Display
  8531  04EF  0829               	movf	??_Tc_Display,w
  8532  04F0  0021               	movlb	1	; select bank1
  8533  04F1  00DD               	movwf	_display_buff^(0+128)
  8534  04F2                     l4792:	
  8535                           
  8536                           ;ht1621.c: 129: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  8537  04F2  0020               	movlb	0	; select bank0
  8538  04F3  086B               	movf	_temperature_decimal,w
  8539  04F4  3E00               	addlw	low (_Dis_TAB| (0+32768))
  8540  04F5  0084               	movwf	4
  8541  04F6  3090               	movlw	high (_Dis_TAB| (0+32768))
  8542  04F7  1803               	skipnc
  8543  04F8  3E01               	addlw	1
  8544  04F9  0085               	movwf	5
  8545  04FA  0800               	movf	0,w	;code access
  8546  04FB  3808               	iorlw	8
  8547  04FC  00A9               	movwf	??_Tc_Display
  8548  04FD  0829               	movf	??_Tc_Display,w
  8549  04FE  0021               	movlb	1	; select bank1
  8550  04FF  00E0               	movwf	(_display_buff^(0+128)+3)
  8551                           
  8552                           ;ht1621.c: 130: WriteAll_1621(0,display_buff,4);
  8553  0500  30DD               	movlw	low _display_buff
  8554  0501  0020               	movlb	0	; select bank0
  8555  0502  00A0               	movwf	WriteAll_1621@p
  8556  0503  3000               	movlw	high _display_buff
  8557  0504  00A1               	movwf	WriteAll_1621@p+1
  8558  0505  3004               	movlw	4
  8559  0506  00A9               	movwf	??_Tc_Display
  8560  0507  0829               	movf	??_Tc_Display,w
  8561  0508  00A2               	movwf	WriteAll_1621@cnt
  8562  0509  3000               	movlw	0
  8563  050A  318C  2495         	fcall	_WriteAll_1621
  8564  050C  0008               	return
  8565  050D                     __end_of_Tc_Display:	
  8566                           
  8567                           	psect	text37
  8568  0A1D                     __ptext37:	
  8569 ;; *************** function _memset *****************
  8570 ;; Defined at:
  8571 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  p1              1    wreg     PTR void 
  8574 ;;		 -> display_buff(4), 
  8575 ;;  c               2    3[COMMON] int 
  8576 ;;  n               2    5[COMMON] unsigned int 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  p1              1    0[BANK0 ] PTR void 
  8579 ;;		 -> display_buff(4), 
  8580 ;;  p               1    1[BANK0 ] PTR unsigned char 
  8581 ;;		 -> display_buff(4), 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      PTR void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;Total ram usage:        7 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    3
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_Tc_Display
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function _memset
  8607  0A1D                     _memset:	
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8611                           ;memset@p1 stored from wreg
  8612  0A1D  0020               	movlb	0	; select bank0
  8613  0A1E  00A0               	movwf	memset@p1
  8614  0A1F  0820               	movf	memset@p1,w
  8615  0A20  00F7               	movwf	??_memset
  8616  0A21  0877               	movf	??_memset,w
  8617  0A22  00A1               	movwf	memset@p
  8618  0A23                     l4566:	
  8619  0A23  3001               	movlw	1
  8620  0A24  02F5               	subwf	memset@n,f
  8621  0A25  3000               	movlw	0
  8622  0A26  3BF6               	subwfb	memset@n+1,f
  8623  0A27  0A75               	incf	memset@n,w
  8624  0A28  1903               	btfsc	3,2
  8625  0A29  0A76               	incf	memset@n+1,w
  8626  0A2A  1903               	btfsc	3,2
  8627  0A2B  0008               	return
  8628  0A2C  0873               	movf	memset@c,w
  8629  0A2D  00F7               	movwf	??_memset
  8630  0A2E  0821               	movf	memset@p,w
  8631  0A2F  0086               	movwf	6
  8632  0A30  0187               	clrf	7
  8633  0A31  0877               	movf	??_memset,w
  8634  0A32  0081               	movwf	1
  8635  0A33  3001               	movlw	1
  8636  0A34  00F7               	movwf	??_memset
  8637  0A35  0877               	movf	??_memset,w
  8638  0A36  07A1               	addwf	memset@p,f
  8639  0A37  2A23               	goto	l4566
  8640  0A38                     __end_of_memset:	
  8641                           ;	Return value of _memset is never used
  8642                           
  8643                           
  8644                           	psect	text38
  8645  0B72                     __ptext38:	
  8646 ;; *************** function ___lwmod *****************
  8647 ;; Defined at:
  8648 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  divisor         2    3[COMMON] unsigned int 
  8651 ;;  dividend        2    5[COMMON] unsigned int 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  counter         1    0[BANK0 ] unsigned char 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  2    3[COMMON] unsigned int 
  8656 ;; Registers used:
  8657 ;;		wreg, status,2, status,0
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;Total ram usage:        6 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:    3
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_Tc_Display
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           
  8678                           ;psect for function ___lwmod
  8679  0B72                     ___lwmod:	
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8683  0B72  0873               	movf	___lwmod@divisor,w
  8684  0B73  0474               	iorwf	___lwmod@divisor+1,w
  8685  0B74  1903               	btfsc	3,2
  8686  0B75  2B9A               	goto	l4612
  8687  0B76  0020               	movlb	0	; select bank0
  8688  0B77  01A0               	clrf	___lwmod@counter
  8689  0B78  0AA0               	incf	___lwmod@counter,f
  8690  0B79                     l4602:	
  8691  0B79  1BF4               	btfsc	___lwmod@divisor+1,7
  8692  0B7A  2B85               	goto	l4604
  8693  0B7B  3001               	movlw	1
  8694  0B7C                     u3965:	
  8695  0B7C  35F3               	lslf	___lwmod@divisor,f
  8696  0B7D  0DF4               	rlf	___lwmod@divisor+1,f
  8697  0B7E  0B89               	decfsz	9,f
  8698  0B7F  2B7C               	goto	u3965
  8699  0B80  3001               	movlw	1
  8700  0B81  00F7               	movwf	??___lwmod
  8701  0B82  0877               	movf	??___lwmod,w
  8702  0B83  07A0               	addwf	___lwmod@counter,f
  8703  0B84  2B79               	goto	l4602
  8704  0B85                     l4604:	
  8705  0B85  0874               	movf	___lwmod@divisor+1,w
  8706  0B86  0276               	subwf	___lwmod@dividend+1,w
  8707  0B87  1D03               	skipz
  8708  0B88  2B8B               	goto	u3985
  8709  0B89  0873               	movf	___lwmod@divisor,w
  8710  0B8A  0275               	subwf	___lwmod@dividend,w
  8711  0B8B                     u3985:	
  8712  0B8B  1C03               	skipc
  8713  0B8C  2B91               	goto	l4608
  8714  0B8D  0873               	movf	___lwmod@divisor,w
  8715  0B8E  02F5               	subwf	___lwmod@dividend,f
  8716  0B8F  0874               	movf	___lwmod@divisor+1,w
  8717  0B90  3BF6               	subwfb	___lwmod@dividend+1,f
  8718  0B91                     l4608:	
  8719  0B91  3001               	movlw	1
  8720  0B92                     u3995:	
  8721  0B92  36F4               	lsrf	___lwmod@divisor+1,f
  8722  0B93  0CF3               	rrf	___lwmod@divisor,f
  8723  0B94  0B89               	decfsz	9,f
  8724  0B95  2B92               	goto	u3995
  8725  0B96  3001               	movlw	1
  8726  0B97  02A0               	subwf	___lwmod@counter,f
  8727  0B98  1D03               	btfss	3,2
  8728  0B99  2B85               	goto	l4604
  8729  0B9A                     l4612:	
  8730  0B9A  0876               	movf	___lwmod@dividend+1,w
  8731  0B9B  00F4               	movwf	?___lwmod+1
  8732  0B9C  0875               	movf	___lwmod@dividend,w
  8733  0B9D  00F3               	movwf	?___lwmod
  8734  0B9E  0008               	return
  8735  0B9F                     __end_of___lwmod:	
  8736                           
  8737                           	psect	text39
  8738  0CCA                     __ptext39:	
  8739 ;; *************** function ___lwdiv *****************
  8740 ;; Defined at:
  8741 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  divisor         2    1[BANK0 ] unsigned int 
  8744 ;;  dividend        2    3[BANK0 ] unsigned int 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  quotient        2    7[BANK0 ] unsigned int 
  8747 ;;  counter         1    6[BANK0 ] unsigned char 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  2    1[BANK0 ] unsigned int 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;Total ram usage:        8 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    3
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_Tc_Display
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function ___lwdiv
  8773  0CCA                     ___lwdiv:	
  8774                           
  8775                           ;incstack = 0
  8776                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8777  0CCA  0020               	movlb	0	; select bank0
  8778  0CCB  01A7               	clrf	___lwdiv@quotient
  8779  0CCC  01A8               	clrf	___lwdiv@quotient+1
  8780  0CCD  0821               	movf	___lwdiv@divisor,w
  8781  0CCE  0422               	iorwf	___lwdiv@divisor+1,w
  8782  0CCF  1903               	btfsc	3,2
  8783  0CD0  2CFA               	goto	l4590
  8784  0CD1  01A6               	clrf	___lwdiv@counter
  8785  0CD2  0AA6               	incf	___lwdiv@counter,f
  8786  0CD3                     l4578:	
  8787  0CD3  1BA2               	btfsc	___lwdiv@divisor+1,7
  8788  0CD4  2CDF               	goto	l4580
  8789  0CD5  3001               	movlw	1
  8790  0CD6                     u3895:	
  8791  0CD6  35A1               	lslf	___lwdiv@divisor,f
  8792  0CD7  0DA2               	rlf	___lwdiv@divisor+1,f
  8793  0CD8  0B89               	decfsz	9,f
  8794  0CD9  2CD6               	goto	u3895
  8795  0CDA  3001               	movlw	1
  8796  0CDB  00A5               	movwf	??___lwdiv
  8797  0CDC  0825               	movf	??___lwdiv,w
  8798  0CDD  07A6               	addwf	___lwdiv@counter,f
  8799  0CDE  2CD3               	goto	l4578
  8800  0CDF                     l4580:	
  8801  0CDF  3001               	movlw	1
  8802  0CE0                     u3915:	
  8803  0CE0  35A7               	lslf	___lwdiv@quotient,f
  8804  0CE1  0DA8               	rlf	___lwdiv@quotient+1,f
  8805  0CE2  0B89               	decfsz	9,f
  8806  0CE3  2CE0               	goto	u3915
  8807  0CE4  0822               	movf	___lwdiv@divisor+1,w
  8808  0CE5  0224               	subwf	___lwdiv@dividend+1,w
  8809  0CE6  1D03               	skipz
  8810  0CE7  2CEA               	goto	u3925
  8811  0CE8  0821               	movf	___lwdiv@divisor,w
  8812  0CE9  0223               	subwf	___lwdiv@dividend,w
  8813  0CEA                     u3925:	
  8814  0CEA  1C03               	skipc
  8815  0CEB  2CF1               	goto	l4586
  8816  0CEC  0821               	movf	___lwdiv@divisor,w
  8817  0CED  02A3               	subwf	___lwdiv@dividend,f
  8818  0CEE  0822               	movf	___lwdiv@divisor+1,w
  8819  0CEF  3BA4               	subwfb	___lwdiv@dividend+1,f
  8820  0CF0  1427               	bsf	___lwdiv@quotient,0
  8821  0CF1                     l4586:	
  8822  0CF1  3001               	movlw	1
  8823  0CF2                     u3935:	
  8824  0CF2  36A2               	lsrf	___lwdiv@divisor+1,f
  8825  0CF3  0CA1               	rrf	___lwdiv@divisor,f
  8826  0CF4  0B89               	decfsz	9,f
  8827  0CF5  2CF2               	goto	u3935
  8828  0CF6  3001               	movlw	1
  8829  0CF7  02A6               	subwf	___lwdiv@counter,f
  8830  0CF8  1D03               	btfss	3,2
  8831  0CF9  2CDF               	goto	l4580
  8832  0CFA                     l4590:	
  8833  0CFA  0828               	movf	___lwdiv@quotient+1,w
  8834  0CFB  00A2               	movwf	?___lwdiv+1
  8835  0CFC  0827               	movf	___lwdiv@quotient,w
  8836  0CFD  00A1               	movwf	?___lwdiv
  8837  0CFE  0008               	return
  8838  0CFF                     __end_of___lwdiv:	
  8839                           
  8840                           	psect	text40
  8841  0E02                     __ptext40:	
  8842 ;; *************** function _one_temperature_trans *****************
  8843 ;; Defined at:
  8844 ;;		line 277 in file "mcc_generated_files/max31856.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:        2 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    6
  8865 ;; This function calls:
  8866 ;;		_maxim_31856_read_nregisters
  8867 ;;		_maxim_start_conversion
  8868 ;; This function is called by:
  8869 ;;		_temperature_process
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           
  8874                           ;psect for function _one_temperature_trans
  8875  0E02                     _one_temperature_trans:	
  8876                           
  8877                           ;max31856.c: 279: maxim_start_conversion((uint8_t) 0x40);
  8878                           
  8879                           ;incstack = 0
  8880                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8881  0E02  3040               	movlw	64
  8882  0E03  3189  21CD  318E   	fcall	_maxim_start_conversion
  8883                           
  8884                           ;max31856.c: 280: MAX31856Sec = 0;
  8885  0E06  0021               	movlb	1	; select bank1
  8886  0E07  01B6               	clrf	_MAX31856Sec^(0+128)
  8887  0E08                     l541:	
  8888                           ;max31856.c: 281: while( !(RB3 == 0 || MAX31856Sec > 30) ) ;
  8889                           
  8890  0E08  0020               	movlb	0	; select bank0
  8891  0E09  1D8D               	btfss	13,3	;volatile
  8892  0E0A  2E10               	goto	l4892
  8893  0E0B  301F               	movlw	31
  8894  0E0C  0021               	movlb	1	; select bank1
  8895  0E0D  0236               	subwf	_MAX31856Sec^(0+128),w
  8896  0E0E  1C03               	skipc
  8897  0E0F  2E08               	goto	l541
  8898  0E10                     l4892:	
  8899                           
  8900                           ;max31856.c: 282: if( MAX31856Sec > 30)
  8901  0E10  301F               	movlw	31
  8902  0E11  0021               	movlb	1	; select bank1
  8903  0E12  0236               	subwf	_MAX31856Sec^(0+128),w
  8904  0E13  1C03               	skipc
  8905  0E14  2E18               	goto	l4896
  8906                           
  8907                           ;max31856.c: 283: {
  8908                           ;max31856.c: 284: uch_sr = 0x01;
  8909  0E15  01BF               	clrf	_uch_sr^(0+128)
  8910  0E16  0ABF               	incf	_uch_sr^(0+128),f
  8911                           
  8912                           ;max31856.c: 285: }
  8913  0E17  0008               	return
  8914  0E18                     l4896:	
  8915                           
  8916                           ;max31856.c: 286: else
  8917                           ;max31856.c: 287: {
  8918                           ;max31856.c: 288: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  8919  0E18  30C0               	movlw	(low (_uch_reg| 0))& (0+255)
  8920  0E19  0020               	movlb	0	; select bank0
  8921  0E1A  00A8               	movwf	??_one_temperature_trans
  8922  0E1B  0828               	movf	??_one_temperature_trans,w
  8923  0E1C  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  8924  0E1D  3006               	movlw	6
  8925  0E1E  00A9               	movwf	??_one_temperature_trans+1
  8926  0E1F  0829               	movf	??_one_temperature_trans+1,w
  8927  0E20  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  8928  0E21  300A               	movlw	10
  8929  0E22  3189  2150         	fcall	_maxim_31856_read_nregisters
  8930                           
  8931                           ;max31856.c: 289: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  8932  0E24  0021               	movlb	1	; select bank1
  8933  0E25  0840               	movf	_uch_reg^(0+128),w
  8934  0E26  0020               	movlb	0	; select bank0
  8935  0E27  00A8               	movwf	??_one_temperature_trans
  8936  0E28  0828               	movf	??_one_temperature_trans,w
  8937  0E29  0021               	movlb	1	; select bank1
  8938  0E2A  00B9               	movwf	_uch_cjth^(0+128)
  8939  0E2B  0841               	movf	(_uch_reg^(0+128)+1),w
  8940  0E2C  0020               	movlb	0	; select bank0
  8941  0E2D  00A8               	movwf	??_one_temperature_trans
  8942  0E2E  0828               	movf	??_one_temperature_trans,w
  8943  0E2F  0021               	movlb	1	; select bank1
  8944  0E30  00BA               	movwf	_uch_cjtl^(0+128)
  8945                           
  8946                           ;max31856.c: 290: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  8947  0E31  0842               	movf	(_uch_reg^(0+128)+2),w
  8948  0E32  0020               	movlb	0	; select bank0
  8949  0E33  00A8               	movwf	??_one_temperature_trans
  8950  0E34  0828               	movf	??_one_temperature_trans,w
  8951  0E35  00ED               	movwf	_uch_ltcbh
  8952  0E36  0021               	movlb	1	; select bank1
  8953  0E37  0843               	movf	(_uch_reg^(0+128)+3),w
  8954  0E38  0020               	movlb	0	; select bank0
  8955  0E39  00A8               	movwf	??_one_temperature_trans
  8956  0E3A  0828               	movf	??_one_temperature_trans,w
  8957  0E3B  0021               	movlb	1	; select bank1
  8958  0E3C  00BD               	movwf	_uch_ltcbm^(0+128)
  8959  0E3D  0844               	movf	(_uch_reg^(0+128)+4),w
  8960  0E3E  0020               	movlb	0	; select bank0
  8961  0E3F  00A8               	movwf	??_one_temperature_trans
  8962  0E40  0828               	movf	??_one_temperature_trans,w
  8963  0E41  0021               	movlb	1	; select bank1
  8964  0E42  00BC               	movwf	_uch_ltcbl^(0+128)
  8965                           
  8966                           ;max31856.c: 291: uch_sr=uch_reg[5];
  8967  0E43  0845               	movf	(_uch_reg^(0+128)+5),w
  8968  0E44  0020               	movlb	0	; select bank0
  8969  0E45  00A8               	movwf	??_one_temperature_trans
  8970  0E46  0828               	movf	??_one_temperature_trans,w
  8971  0E47  0021               	movlb	1	; select bank1
  8972  0E48  00BF               	movwf	_uch_sr^(0+128)
  8973  0E49  0008               	return
  8974  0E4A                     __end_of_one_temperature_trans:	
  8975                           
  8976                           	psect	text41
  8977  09CD                     __ptext41:	
  8978 ;; *************** function _maxim_start_conversion *****************
  8979 ;; Defined at:
  8980 ;;		line 114 in file "mcc_generated_files/max31856.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  uch_conversi    1    wreg     unsigned char 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0, pclath, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    5
  9001 ;; This function calls:
  9002 ;;		_maxim_31856_read_register
  9003 ;;		_maxim_31856_write_register
  9004 ;; This function is called by:
  9005 ;;		_one_temperature_trans
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function _maxim_start_conversion
  9011  09CD                     _maxim_start_conversion:	
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  9015                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  9016  09CD  0020               	movlb	0	; select bank0
  9017  09CE  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  9018                           
  9019                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  9020  09CF  3000               	movlw	0
  9021  09D0  3188  20EC  3189   	fcall	_maxim_31856_read_register
  9022  09D3  00F7               	movwf	??_maxim_start_conversion
  9023  09D4  0877               	movf	??_maxim_start_conversion,w
  9024  09D5  00FA               	movwf	_uch_cr0
  9025                           
  9026                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  9027  09D6  303F               	movlw	63
  9028  09D7  00F7               	movwf	??_maxim_start_conversion
  9029  09D8  0877               	movf	??_maxim_start_conversion,w
  9030  09D9  05FA               	andwf	_uch_cr0,f
  9031                           
  9032                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  9033  09DA  0020               	movlb	0	; select bank0
  9034  09DB  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  9035  09DC  00F7               	movwf	??_maxim_start_conversion
  9036  09DD  0877               	movf	??_maxim_start_conversion,w
  9037  09DE  04FA               	iorwf	_uch_cr0,f
  9038                           
  9039                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  9040  09DF  087A               	movf	_uch_cr0,w
  9041  09E0  00F7               	movwf	??_maxim_start_conversion
  9042  09E1  0877               	movf	??_maxim_start_conversion,w
  9043  09E2  00F4               	movwf	maxim_31856_write_register@uch_register_value
  9044  09E3  3080               	movlw	128
  9045  09E4  3188  20BF         	fcall	_maxim_31856_write_register
  9046  09E6  0008               	return
  9047  09E7                     __end_of_maxim_start_conversion:	
  9048                           
  9049                           	psect	text42
  9050  08BF                     __ptext42:	
  9051 ;; *************** function _maxim_31856_write_register *****************
  9052 ;; Defined at:
  9053 ;;		line 20 in file "mcc_generated_files/max31856.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;  uch_register    1    wreg     unsigned char 
  9056 ;;  uch_register    1    4[COMMON] unsigned char 
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;  uch_register    1    5[COMMON] unsigned char 
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        2 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    4
  9075 ;; This function calls:
  9076 ;;		_SPI_Exchange8bit
  9077 ;; This function is called by:
  9078 ;;		_maxim_31856_init
  9079 ;;		_maxim_start_conversion
  9080 ;;		_maxim_clear_fault_status
  9081 ;;		_temperature_display
  9082 ;;		_maxim_stop_conversion
  9083 ;;		_maxim_disable_oc_fault_detection
  9084 ;;		_maxim_set_oc_fault_detection
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           
  9089                           ;psect for function _maxim_31856_write_register
  9090  08BF                     _maxim_31856_write_register:	
  9091                           
  9092                           ;incstack = 0
  9093                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  9094                           ;maxim_31856_write_register@uch_register_address stored from wreg
  9095  08BF  00F5               	movwf	maxim_31856_write_register@uch_register_address
  9096                           
  9097                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  9098  08C0  0022               	movlb	2	; select bank2
  9099  08C1  128C               	bcf	12,5	;volatile
  9100                           
  9101                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  9102  08C2  0875               	movf	maxim_31856_write_register@uch_register_address,w
  9103  08C3  3188  20A0  3188   	fcall	_SPI_Exchange8bit
  9104                           
  9105                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  9106  08C6  0874               	movf	maxim_31856_write_register@uch_register_value,w
  9107  08C7  3188  20A0         	fcall	_SPI_Exchange8bit
  9108                           
  9109                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  9110  08C9  0022               	movlb	2	; select bank2
  9111  08CA  168C               	bsf	12,5	;volatile
  9112  08CB  0008               	return
  9113  08CC                     __end_of_maxim_31856_write_register:	
  9114                           
  9115                           	psect	text43
  9116  08EC                     __ptext43:	
  9117 ;; *************** function _maxim_31856_read_register *****************
  9118 ;; Defined at:
  9119 ;;		line 34 in file "mcc_generated_files/max31856.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  uch_register    1    wreg     unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  uch_register    1    5[COMMON] unsigned char 
  9124 ;;  uch_register    1    6[COMMON] unsigned char 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      unsigned char 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, pclath, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9138 ;;Total ram usage:        3 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    4
  9141 ;; This function calls:
  9142 ;;		_SPI_Exchange8bit
  9143 ;; This function is called by:
  9144 ;;		_maxim_start_conversion
  9145 ;;		_maxim_clear_fault_status
  9146 ;;		_maxim_stop_conversion
  9147 ;;		_maxim_disable_oc_fault_detection
  9148 ;;		_maxim_set_oc_fault_detection
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _maxim_31856_read_register
  9154  08EC                     _maxim_31856_read_register:	
  9155                           
  9156                           ;incstack = 0
  9157                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  9158                           ;maxim_31856_read_register@uch_register_address stored from wreg
  9159  08EC  00F5               	movwf	maxim_31856_read_register@uch_register_address
  9160                           
  9161                           ;max31856.c: 36: uint8_t uch_register_data;
  9162                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  9163  08ED  0022               	movlb	2	; select bank2
  9164  08EE  128C               	bcf	12,5	;volatile
  9165                           
  9166                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  9167  08EF  0875               	movf	maxim_31856_read_register@uch_register_address,w
  9168  08F0  3188  20A0  3188   	fcall	_SPI_Exchange8bit
  9169                           
  9170                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  9171  08F3  30FF               	movlw	255
  9172  08F4  3188  20A0         	fcall	_SPI_Exchange8bit
  9173  08F6  00F4               	movwf	??_maxim_31856_read_register
  9174  08F7  0874               	movf	??_maxim_31856_read_register,w
  9175  08F8  00F6               	movwf	maxim_31856_read_register@uch_register_data
  9176                           
  9177                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  9178  08F9  0022               	movlb	2	; select bank2
  9179  08FA  168C               	bsf	12,5	;volatile
  9180                           
  9181                           ;max31856.c: 41: return (uch_register_data);
  9182  08FB  0876               	movf	maxim_31856_read_register@uch_register_data,w
  9183  08FC  0008               	return
  9184  08FD                     __end_of_maxim_31856_read_register:	
  9185                           
  9186                           	psect	text44
  9187  0950                     __ptext44:	
  9188 ;; *************** function _maxim_31856_read_nregisters *****************
  9189 ;; Defined at:
  9190 ;;		line 50 in file "mcc_generated_files/max31856.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  uch_register    1    wreg     unsigned char 
  9193 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  9194 ;;		 -> uch_reg(8), 
  9195 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  uch_register    1    7[BANK0 ] unsigned char 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;Total ram usage:        5 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    5
  9214 ;; This function calls:
  9215 ;;		_SPI_Exchange8bit
  9216 ;;		_SPI_Exchange8bitBuffer
  9217 ;; This function is called by:
  9218 ;;		_one_temperature_trans
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _maxim_31856_read_nregisters
  9224  0950                     _maxim_31856_read_nregisters:	
  9225                           
  9226                           ;incstack = 0
  9227                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9228                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  9229  0950  0020               	movlb	0	; select bank0
  9230  0951  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  9231                           
  9232                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  9233  0952  0022               	movlb	2	; select bank2
  9234  0953  128C               	bcf	12,5	;volatile
  9235                           
  9236                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  9237  0954  0020               	movlb	0	; select bank0
  9238  0955  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  9239  0956  3188  20A0  3189   	fcall	_SPI_Exchange8bit
  9240                           
  9241                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  9242  0959  0020               	movlb	0	; select bank0
  9243  095A  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  9244  095B  00A5               	movwf	??_maxim_31856_read_nregisters
  9245  095C  0825               	movf	??_maxim_31856_read_nregisters,w
  9246  095D  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  9247  095E  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  9248  095F  00A6               	movwf	??_maxim_31856_read_nregisters+1
  9249  0960  0826               	movf	??_maxim_31856_read_nregisters+1,w
  9250  0961  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  9251  0962  3000               	movlw	0
  9252  0963  318E  2696         	fcall	_SPI_Exchange8bitBuffer
  9253                           
  9254                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  9255  0965  0022               	movlb	2	; select bank2
  9256  0966  168C               	bsf	12,5	;volatile
  9257  0967  0008               	return
  9258  0968                     __end_of_maxim_31856_read_nregisters:	
  9259                           
  9260                           	psect	text45
  9261  0E96                     __ptext45:	
  9262 ;; *************** function _SPI_Exchange8bitBuffer *****************
  9263 ;; Defined at:
  9264 ;;		line 89 in file "mcc_generated_files/spi.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  dataIn          1    wreg     PTR unsigned char 
  9267 ;;		 -> NULL(0), 
  9268 ;;  bufLen          1    4[COMMON] unsigned char 
  9269 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  9270 ;;		 -> uch_reg(8), 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  9273 ;;		 -> NULL(0), 
  9274 ;;  bytesWritten    1    7[COMMON] unsigned char 
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      unsigned char 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;Total ram usage:        7 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    4
  9291 ;; This function calls:
  9292 ;;		_SPI_Exchange8bit
  9293 ;; This function is called by:
  9294 ;;		_maxim_31856_read_nregisters
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function _SPI_Exchange8bitBuffer
  9300  0E96                     _SPI_Exchange8bitBuffer:	
  9301                           
  9302                           ;incstack = 0
  9303                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9304                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  9305  0E96  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  9306                           
  9307                           ;spi.c: 90: uint8_t bytesWritten = 0;
  9308  0E97  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  9309                           
  9310                           ;spi.c: 92: if (bufLen != 0) {
  9311  0E98  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9312  0E99  1903               	btfsc	3,2
  9313  0E9A  0008               	return
  9314                           
  9315                           ;spi.c: 93: if (dataIn != (0)) {
  9316  0E9B  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  9317  0E9C  1D03               	btfss	3,2
  9318  0E9D  2EC8               	goto	l4462
  9319  0E9E  2ECD               	goto	l4464
  9320  0E9F                     l4454:	
  9321                           ;spi.c: 94: while (bytesWritten < bufLen) {
  9322                           
  9323                           
  9324                           ;spi.c: 95: if (dataOut == (0)) {
  9325  0E9F  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9326  0EA0  1D03               	btfss	3,2
  9327  0EA1  2EAE               	goto	l4458
  9328                           
  9329                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  9330  0EA2  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9331  0EA3  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9332  0EA4  0020               	movlb	0	; select bank0
  9333  0EA5  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9334  0EA6  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9335  0EA7  0086               	movwf	6
  9336  0EA8  0187               	clrf	7
  9337  0EA9  0801               	movf	1,w
  9338  0EAA  3188  20A0  318E   	fcall	_SPI_Exchange8bit
  9339                           
  9340                           ;spi.c: 97: } else {
  9341  0EAD  2EC3               	goto	l4460
  9342  0EAE                     l4458:	
  9343                           
  9344                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  9345  0EAE  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9346  0EAF  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9347  0EB0  0020               	movlb	0	; select bank0
  9348  0EB1  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9349  0EB2  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9350  0EB3  0086               	movwf	6
  9351  0EB4  0187               	clrf	7
  9352  0EB5  0801               	movf	1,w
  9353  0EB6  3188  20A0  318E   	fcall	_SPI_Exchange8bit
  9354  0EB9  0020               	movlb	0	; select bank0
  9355  0EBA  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9356  0EBB  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9357  0EBC  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9358  0EBD  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  9359  0EBE  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  9360  0EBF  0086               	movwf	6
  9361  0EC0  0187               	clrf	7
  9362  0EC1  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9363  0EC2  0081               	movwf	1
  9364  0EC3                     l4460:	
  9365                           
  9366                           ;spi.c: 99: }
  9367                           ;spi.c: 101: bytesWritten++;
  9368  0EC3  3001               	movlw	1
  9369  0EC4  0020               	movlb	0	; select bank0
  9370  0EC5  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9371  0EC6  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9372  0EC7  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9373  0EC8                     l4462:	
  9374  0EC8  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9375  0EC9  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9376  0ECA  1803               	btfsc	3,0
  9377  0ECB  0008               	return
  9378  0ECC  2E9F               	goto	l4454
  9379  0ECD                     l4464:	
  9380                           ;spi.c: 102: }
  9381                           ;spi.c: 103: } else {
  9382                           
  9383                           
  9384                           ;spi.c: 104: if (dataOut != (0)) {
  9385  0ECD  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9386  0ECE  1903               	btfsc	3,2
  9387  0ECF  0008               	return
  9388  0ED0                     l4472:	
  9389  0ED0  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9390  0ED1  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9391  0ED2  1803               	btfsc	3,0
  9392  0ED3  0008               	return
  9393                           
  9394                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  9395                           
  9396                           ;spi.c: 105: while (bytesWritten < bufLen) {
  9397  0ED4  3000               	movlw	0
  9398  0ED5  3188  20A0  318E   	fcall	_SPI_Exchange8bit
  9399  0ED8  0020               	movlb	0	; select bank0
  9400  0ED9  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9401  0EDA  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9402  0EDB  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9403  0EDC  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9404  0EDD  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9405  0EDE  0086               	movwf	6
  9406  0EDF  0187               	clrf	7
  9407  0EE0  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9408  0EE1  0081               	movwf	1
  9409                           
  9410                           ;spi.c: 108: bytesWritten++;
  9411  0EE2  3001               	movlw	1
  9412  0EE3  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9413  0EE4  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9414  0EE5  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9415  0EE6  2ED0               	goto	l4472
  9416  0EE7                     __end_of_SPI_Exchange8bitBuffer:	
  9417                           ;spi.c: 109: }
  9418                           ;spi.c: 110: }
  9419                           ;spi.c: 111: }
  9420                           ;spi.c: 112: }
  9421                           ;spi.c: 114: return bytesWritten;
  9422                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  9423                           
  9424                           
  9425                           	psect	text46
  9426  08A0                     __ptext46:	
  9427 ;; *************** function _SPI_Exchange8bit *****************
  9428 ;; Defined at:
  9429 ;;		line 77 in file "mcc_generated_files/spi.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  data            1    wreg     unsigned char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  data            1    3[COMMON] unsigned char 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      unsigned char 
  9436 ;; Registers used:
  9437 ;;		wreg
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;Total ram usage:        1 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    3
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_SPI_Exchange8bitBuffer
  9454 ;;		_maxim_31856_write_register
  9455 ;;		_maxim_31856_read_register
  9456 ;;		_maxim_31856_read_nregisters
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           
  9461                           ;psect for function _SPI_Exchange8bit
  9462  08A0                     _SPI_Exchange8bit:	
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in _SPI_Exchange8bit: [wreg]
  9466                           ;SPI_Exchange8bit@data stored from wreg
  9467  08A0  00F3               	movwf	SPI_Exchange8bit@data
  9468                           
  9469                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  9470  08A1  0024               	movlb	4	; select bank4
  9471  08A2  1395               	bcf	21,7	;volatile
  9472                           
  9473                           ;spi.c: 81: SSPBUF = data;
  9474  08A3  0873               	movf	SPI_Exchange8bit@data,w
  9475  08A4  0091               	movwf	17	;volatile
  9476  08A5                     l71:	
  9477                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  9478                           
  9479  08A5  1C14               	btfss	20,0	;volatile
  9480  08A6  28A5               	goto	l71
  9481                           
  9482                           ;spi.c: 84: }
  9483                           ;spi.c: 86: return (SSPBUF);
  9484  08A7  0811               	movf	17,w	;volatile
  9485  08A8  0008               	return
  9486  08A9                     __end_of_SPI_Exchange8bit:	
  9487                           
  9488                           	psect	text47
  9489  0BFD                     __ptext47:	
  9490 ;; *************** function _Two_Display *****************
  9491 ;; Defined at:
  9492 ;;		line 139 in file "mcc_generated_files/ht1621.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  number          1    wreg     unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  number          1   11[BANK0 ] unsigned char 
  9497 ;;  num             4    7[BANK0 ] unsigned char [4]
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        6 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    5
  9514 ;; This function calls:
  9515 ;;		_WriteAll_1621
  9516 ;; This function is called by:
  9517 ;;		_temperature_process
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function _Two_Display
  9523  0BFD                     _Two_Display:	
  9524                           
  9525                           ;incstack = 0
  9526                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9527                           ;Two_Display@number stored from wreg
  9528  0BFD  0020               	movlb	0	; select bank0
  9529  0BFE  00AB               	movwf	Two_Display@number
  9530                           
  9531                           ;ht1621.c: 141: unsigned char num[4]={0};
  9532  0BFF  0021               	movlb	1	; select bank1
  9533  0C00  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  9534  0C01  0020               	movlb	0	; select bank0
  9535  0C02  00AA               	movwf	Two_Display@num+3
  9536  0C03  0021               	movlb	1	; select bank1
  9537  0C04  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  9538  0C05  0020               	movlb	0	; select bank0
  9539  0C06  00A9               	movwf	Two_Display@num+2
  9540  0C07  0021               	movlb	1	; select bank1
  9541  0C08  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  9542  0C09  0020               	movlb	0	; select bank0
  9543  0C0A  00A8               	movwf	Two_Display@num+1
  9544  0C0B  0021               	movlb	1	; select bank1
  9545  0C0C  0820               	movf	Two_Display@F2123^(0+128),w
  9546  0C0D  0020               	movlb	0	; select bank0
  9547  0C0E  00A7               	movwf	Two_Display@num
  9548                           
  9549                           ;ht1621.c: 142: num[1] = Dis_TAB[0];
  9550  0C0F  3000               	movlw	low (_Dis_TAB| (0+32768))
  9551  0C10  0084               	movwf	4
  9552  0C11  3090               	movlw	high (_Dis_TAB| (0+32768))
  9553  0C12  0085               	movwf	5
  9554  0C13  0800               	movf	0,w	;code access
  9555  0C14  00A6               	movwf	??_Two_Display
  9556  0C15  0826               	movf	??_Two_Display,w
  9557  0C16  00A8               	movwf	Two_Display@num+1
  9558                           
  9559                           ;ht1621.c: 143: num[2] = Dis_TAB[number];
  9560  0C17  082B               	movf	Two_Display@number,w
  9561  0C18  3E00               	addlw	low (_Dis_TAB| (0+32768))
  9562  0C19  0084               	movwf	4
  9563  0C1A  3090               	movlw	high (_Dis_TAB| (0+32768))
  9564  0C1B  1803               	skipnc
  9565  0C1C  3E01               	addlw	1
  9566  0C1D  0085               	movwf	5
  9567  0C1E  0800               	movf	0,w	;code access
  9568  0C1F  00A6               	movwf	??_Two_Display
  9569  0C20  0826               	movf	??_Two_Display,w
  9570  0C21  00A9               	movwf	Two_Display@num+2
  9571                           
  9572                           ;ht1621.c: 144: WriteAll_1621(0, num, 4);
  9573  0C22  3027               	movlw	low Two_Display@num
  9574  0C23  00A0               	movwf	WriteAll_1621@p
  9575  0C24  3000               	movlw	high Two_Display@num
  9576  0C25  00A1               	movwf	WriteAll_1621@p+1
  9577  0C26  3004               	movlw	4
  9578  0C27  00A6               	movwf	??_Two_Display
  9579  0C28  0826               	movf	??_Two_Display,w
  9580  0C29  00A2               	movwf	WriteAll_1621@cnt
  9581  0C2A  3000               	movlw	0
  9582  0C2B  318C  2495         	fcall	_WriteAll_1621
  9583  0C2D  0008               	return
  9584  0C2E                     __end_of_Two_Display:	
  9585                           
  9586                           	psect	text48
  9587  0C95                     __ptext48:	
  9588 ;; *************** function _WriteAll_1621 *****************
  9589 ;; Defined at:
  9590 ;;		line 91 in file "mcc_generated_files/ht1621.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  addr            1    wreg     unsigned char 
  9593 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9594 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  9595 ;;		 -> Dis_TAB(21), 
  9596 ;;  cnt             1    2[BANK0 ] unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  addr            1    4[BANK0 ] unsigned char 
  9599 ;;  i               1    5[BANK0 ] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        6 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    4
  9616 ;; This function calls:
  9617 ;;		_SendBit_1621
  9618 ;;		_SendDataBit_1621
  9619 ;; This function is called by:
  9620 ;;		_main
  9621 ;;		_Tc_Display
  9622 ;;		_Two_Display
  9623 ;;		_err_Display
  9624 ;;		_time_Display
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           
  9629                           ;psect for function _WriteAll_1621
  9630  0C95                     _WriteAll_1621:	
  9631                           
  9632                           ;incstack = 0
  9633                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9634                           ;WriteAll_1621@addr stored from wreg
  9635  0C95  0020               	movlb	0	; select bank0
  9636  0C96  00A4               	movwf	WriteAll_1621@addr
  9637                           
  9638                           ;ht1621.c: 93: unsigned char i;
  9639                           ;ht1621.c: 94: do { LATC0 = 0; } while(0);
  9640  0C97  0022               	movlb	2	; select bank2
  9641  0C98  100E               	bcf	14,0	;volatile
  9642                           
  9643                           ;ht1621.c: 95: SendBit_1621(0xa0,3);
  9644  0C99  3003               	movlw	3
  9645  0C9A  0020               	movlb	0	; select bank0
  9646  0C9B  00A3               	movwf	??_WriteAll_1621
  9647  0C9C  0823               	movf	??_WriteAll_1621,w
  9648  0C9D  00F3               	movwf	SendBit_1621@cnt
  9649  0C9E  30A0               	movlw	160
  9650  0C9F  318A  2272  318C   	fcall	_SendBit_1621
  9651                           
  9652                           ;ht1621.c: 96: SendBit_1621(addr,6);
  9653  0CA2  3006               	movlw	6
  9654  0CA3  0020               	movlb	0	; select bank0
  9655  0CA4  00A3               	movwf	??_WriteAll_1621
  9656  0CA5  0823               	movf	??_WriteAll_1621,w
  9657  0CA6  00F3               	movwf	SendBit_1621@cnt
  9658  0CA7  0824               	movf	WriteAll_1621@addr,w
  9659  0CA8  318A  2272  318C   	fcall	_SendBit_1621
  9660                           
  9661                           ;ht1621.c: 97: for(i =0; i <cnt; i ++,p++)
  9662  0CAB  0020               	movlb	0	; select bank0
  9663  0CAC  01A5               	clrf	WriteAll_1621@i
  9664  0CAD                     l4484:	
  9665  0CAD  0822               	movf	WriteAll_1621@cnt,w
  9666  0CAE  0225               	subwf	WriteAll_1621@i,w
  9667  0CAF  1803               	btfsc	3,0
  9668  0CB0  2CC7               	goto	l670
  9669                           
  9670                           ;ht1621.c: 98: {
  9671                           ;ht1621.c: 99: SendDataBit_1621(*p,8);
  9672  0CB1  3008               	movlw	8
  9673  0CB2  00A3               	movwf	??_WriteAll_1621
  9674  0CB3  0823               	movf	??_WriteAll_1621,w
  9675  0CB4  00F3               	movwf	SendDataBit_1621@cnt
  9676  0CB5  0820               	movf	WriteAll_1621@p,w
  9677  0CB6  0084               	movwf	4
  9678  0CB7  0821               	movf	WriteAll_1621@p+1,w
  9679  0CB8  0085               	movwf	5
  9680  0CB9  0800               	movf	0,w	;code access
  9681  0CBA  318A  2292  318C   	fcall	_SendDataBit_1621
  9682  0CBD  3001               	movlw	1
  9683  0CBE  0020               	movlb	0	; select bank0
  9684  0CBF  00A3               	movwf	??_WriteAll_1621
  9685  0CC0  0823               	movf	??_WriteAll_1621,w
  9686  0CC1  07A5               	addwf	WriteAll_1621@i,f
  9687  0CC2  3001               	movlw	1
  9688  0CC3  07A0               	addwf	WriteAll_1621@p,f
  9689  0CC4  3000               	movlw	0
  9690  0CC5  3DA1               	addwfc	WriteAll_1621@p+1,f
  9691  0CC6  2CAD               	goto	l4484
  9692  0CC7                     l670:	
  9693                           ;ht1621.c: 100: }
  9694                           ;ht1621.c: 101: do { LATC0 = 1; } while(0);
  9695                           
  9696  0CC7  0022               	movlb	2	; select bank2
  9697  0CC8  140E               	bsf	14,0	;volatile
  9698  0CC9  0008               	return
  9699  0CCA                     __end_of_WriteAll_1621:	
  9700                           
  9701                           	psect	text49
  9702  0A92                     __ptext49:	
  9703 ;; *************** function _SendDataBit_1621 *****************
  9704 ;; Defined at:
  9705 ;;		line 42 in file "mcc_generated_files/ht1621.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  data            1    wreg     unsigned char 
  9708 ;;  cnt             1    3[COMMON] unsigned char 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  data            1    6[COMMON] unsigned char 
  9711 ;;  i               1    7[COMMON] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        5 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    3
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_WriteAll_1621
  9732 ;;		_Write_1621
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function _SendDataBit_1621
  9738  0A92                     _SendDataBit_1621:	
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  9742                           ;SendDataBit_1621@data stored from wreg
  9743  0A92  00F6               	movwf	SendDataBit_1621@data
  9744                           
  9745                           ;ht1621.c: 44: unsigned char i;
  9746                           ;ht1621.c: 45: for(i =0; i <cnt; i ++)
  9747  0A93  01F7               	clrf	SendDataBit_1621@i
  9748  0A94                     l4412:	
  9749  0A94  0873               	movf	SendDataBit_1621@cnt,w
  9750  0A95  0277               	subwf	SendDataBit_1621@i,w
  9751  0A96  1803               	btfsc	3,0
  9752  0A97  0008               	return
  9753                           
  9754                           ;ht1621.c: 46: {
  9755                           ;ht1621.c: 47: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  9756  0A98  1876               	btfsc	SendDataBit_1621@data,0
  9757  0A99  2A9D               	goto	l641
  9758  0A9A  0022               	movlb	2	; select bank2
  9759  0A9B  110E               	bcf	14,2	;volatile
  9760  0A9C  2A9F               	goto	l643
  9761  0A9D                     l641:	
  9762                           ;ht1621.c: 48: else do { LATC2 = 1; } while(0);
  9763                           
  9764  0A9D  0022               	movlb	2	; select bank2
  9765  0A9E  150E               	bsf	14,2	;volatile
  9766  0A9F                     l643:	
  9767                           ;ht1621.c: 49: do { LATC1 = 0; } while(0);
  9768                           
  9769  0A9F  108E               	bcf	14,1	;volatile
  9770                           
  9771                           ;ht1621.c: 50: _delay((unsigned long)((1)*(16000000/4000.0)));
  9772  0AA0  3006               	movlw	6
  9773  0AA1  00F5               	movwf	??_SendDataBit_1621+1
  9774  0AA2  3030               	movlw	48
  9775  0AA3  00F4               	movwf	??_SendDataBit_1621
  9776  0AA4                     u5157:	
  9777  0AA4  0BF4               	decfsz	??_SendDataBit_1621,f
  9778  0AA5  2AA4               	goto	u5157
  9779  0AA6  0BF5               	decfsz	??_SendDataBit_1621+1,f
  9780  0AA7  2AA4               	goto	u5157
  9781  0AA8  0000               	nop
  9782                           
  9783                           ;ht1621.c: 51: do { LATC1 = 1; } while(0);
  9784  0AA9  0022               	movlb	2	; select bank2
  9785  0AAA  148E               	bsf	14,1	;volatile
  9786                           
  9787                           ;ht1621.c: 52: data>>=1;
  9788  0AAB  1003               	clrc
  9789  0AAC  0CF6               	rrf	SendDataBit_1621@data,f
  9790  0AAD  3001               	movlw	1
  9791  0AAE  00F4               	movwf	??_SendDataBit_1621
  9792  0AAF  0874               	movf	??_SendDataBit_1621,w
  9793  0AB0  07F7               	addwf	SendDataBit_1621@i,f
  9794  0AB1  2A94               	goto	l4412
  9795  0AB2                     __end_of_SendDataBit_1621:	
  9796                           
  9797                           	psect	text50
  9798  0878                     __ptext50:	
  9799 ;; *************** function _Set_start_flag *****************
  9800 ;; Defined at:
  9801 ;;		line 18 in file "mcc_generated_files/save.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;		None
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;		None
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		None
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:        0 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    3
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_Key_Process
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           
  9830                           ;psect for function _Set_start_flag
  9831  0878                     _Set_start_flag:	
  9832                           
  9833                           ;save.c: 20: Record_flag = 1;
  9834                           
  9835                           ;incstack = 0
  9836                           ; Regs used in _Set_start_flag: []
  9837  0878  0020               	movlb	0	; select bank0
  9838  0879  01EA               	clrf	_Record_flag
  9839  087A  0AEA               	incf	_Record_flag,f
  9840                           
  9841                           ;save.c: 21: do { LATA4 = 0; } while(0);
  9842  087B  0022               	movlb	2	; select bank2
  9843  087C  120C               	bcf	12,4	;volatile
  9844  087D  0008               	return
  9845  087E                     __end_of_Set_start_flag:	
  9846                           
  9847                           	psect	text51
  9848  086E                     __ptext51:	
  9849 ;; *************** function _Set_finish_flag *****************
  9850 ;; Defined at:
  9851 ;;		line 30 in file "mcc_generated_files/save.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;		None
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		status,2
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9869 ;;Total ram usage:        0 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    3
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_Key_Process
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           
  9880                           ;psect for function _Set_finish_flag
  9881  086E                     _Set_finish_flag:	
  9882                           
  9883                           ;save.c: 32: Record_flag = 0;
  9884                           
  9885                           ;incstack = 0
  9886                           ; Regs used in _Set_finish_flag: [status,2]
  9887  086E  0020               	movlb	0	; select bank0
  9888  086F  01EA               	clrf	_Record_flag
  9889                           
  9890                           ;save.c: 33: do { LATA4 = 1; } while(0);
  9891  0870  0022               	movlb	2	; select bank2
  9892  0871  160C               	bsf	12,4	;volatile
  9893  0872  0008               	return
  9894  0873                     __end_of_Set_finish_flag:	
  9895                           
  9896                           	psect	text52
  9897  0938                     __ptext52:	
  9898 ;; *************** function _SendCmd_1621 *****************
  9899 ;; Defined at:
  9900 ;;		line 62 in file "mcc_generated_files/ht1621.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  command         1    wreg     unsigned char 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  command         1    1[BANK0 ] unsigned char 
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0, pclath, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;Total ram usage:        2 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; Hardware stack levels required when called:    4
  9921 ;; This function calls:
  9922 ;;		_SendBit_1621
  9923 ;; This function is called by:
  9924 ;;		_main
  9925 ;;		_Key_Process
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           
  9930                           ;psect for function _SendCmd_1621
  9931  0938                     _SendCmd_1621:	
  9932                           
  9933                           ;incstack = 0
  9934                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  9935                           ;SendCmd_1621@command stored from wreg
  9936  0938  0020               	movlb	0	; select bank0
  9937  0939  00A1               	movwf	SendCmd_1621@command
  9938                           
  9939                           ;ht1621.c: 64: do { LATC0 = 0; } while(0);
  9940  093A  0022               	movlb	2	; select bank2
  9941  093B  100E               	bcf	14,0	;volatile
  9942                           
  9943                           ;ht1621.c: 65: SendBit_1621(0x80,4);
  9944  093C  3004               	movlw	4
  9945  093D  0020               	movlb	0	; select bank0
  9946  093E  00A0               	movwf	??_SendCmd_1621
  9947  093F  0820               	movf	??_SendCmd_1621,w
  9948  0940  00F3               	movwf	SendBit_1621@cnt
  9949  0941  3080               	movlw	128
  9950  0942  318A  2272  3189   	fcall	_SendBit_1621
  9951                           
  9952                           ;ht1621.c: 66: SendBit_1621(command,8);
  9953  0945  3008               	movlw	8
  9954  0946  0020               	movlb	0	; select bank0
  9955  0947  00A0               	movwf	??_SendCmd_1621
  9956  0948  0820               	movf	??_SendCmd_1621,w
  9957  0949  00F3               	movwf	SendBit_1621@cnt
  9958  094A  0821               	movf	SendCmd_1621@command,w
  9959  094B  318A  2272         	fcall	_SendBit_1621
  9960                           
  9961                           ;ht1621.c: 67: do { LATC0 = 1; } while(0);
  9962  094D  0022               	movlb	2	; select bank2
  9963  094E  140E               	bsf	14,0	;volatile
  9964  094F  0008               	return
  9965  0950                     __end_of_SendCmd_1621:	
  9966                           
  9967                           	psect	text53
  9968  0A72                     __ptext53:	
  9969 ;; *************** function _SendBit_1621 *****************
  9970 ;; Defined at:
  9971 ;;		line 22 in file "mcc_generated_files/ht1621.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  data            1    wreg     unsigned char 
  9974 ;;  cnt             1    3[COMMON] unsigned char 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  data            1    6[COMMON] unsigned char 
  9977 ;;  i               1    7[COMMON] unsigned char 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, status,2, status,0
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        5 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    3
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_SendCmd_1621
  9998 ;;		_WriteAll_1621
  9999 ;;		_Write_1621
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           
 10004                           ;psect for function _SendBit_1621
 10005  0A72                     _SendBit_1621:	
 10006                           
 10007                           ;incstack = 0
 10008                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
 10009                           ;SendBit_1621@data stored from wreg
 10010  0A72  00F6               	movwf	SendBit_1621@data
 10011                           
 10012                           ;ht1621.c: 24: unsigned char i;
 10013                           ;ht1621.c: 25: for(i =0; i <cnt; i ++)
 10014  0A73  01F7               	clrf	SendBit_1621@i
 10015  0A74                     l4400:	
 10016  0A74  0873               	movf	SendBit_1621@cnt,w
 10017  0A75  0277               	subwf	SendBit_1621@i,w
 10018  0A76  1803               	btfsc	3,0
 10019  0A77  0008               	return
 10020                           
 10021                           ;ht1621.c: 26: {
 10022                           ;ht1621.c: 27: if((data&0x80)==0) do { LATC2 = 0; } while(0);
 10023  0A78  1BF6               	btfsc	SendBit_1621@data,7
 10024  0A79  2A7D               	goto	l625
 10025  0A7A  0022               	movlb	2	; select bank2
 10026  0A7B  110E               	bcf	14,2	;volatile
 10027  0A7C  2A7F               	goto	l627
 10028  0A7D                     l625:	
 10029                           ;ht1621.c: 28: else do { LATC2 = 1; } while(0);
 10030                           
 10031  0A7D  0022               	movlb	2	; select bank2
 10032  0A7E  150E               	bsf	14,2	;volatile
 10033  0A7F                     l627:	
 10034                           ;ht1621.c: 29: do { LATC1 = 0; } while(0);
 10035                           
 10036  0A7F  108E               	bcf	14,1	;volatile
 10037                           
 10038                           ;ht1621.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 10039  0A80  3006               	movlw	6
 10040  0A81  00F5               	movwf	??_SendBit_1621+1
 10041  0A82  3030               	movlw	48
 10042  0A83  00F4               	movwf	??_SendBit_1621
 10043  0A84                     u5167:	
 10044  0A84  0BF4               	decfsz	??_SendBit_1621,f
 10045  0A85  2A84               	goto	u5167
 10046  0A86  0BF5               	decfsz	??_SendBit_1621+1,f
 10047  0A87  2A84               	goto	u5167
 10048  0A88  0000               	nop
 10049                           
 10050                           ;ht1621.c: 31: do { LATC1 = 1; } while(0);
 10051  0A89  0022               	movlb	2	; select bank2
 10052  0A8A  148E               	bsf	14,1	;volatile
 10053                           
 10054                           ;ht1621.c: 32: data<<=1;
 10055  0A8B  1003               	clrc
 10056  0A8C  0DF6               	rlf	SendBit_1621@data,f
 10057  0A8D  3001               	movlw	1
 10058  0A8E  00F4               	movwf	??_SendBit_1621
 10059  0A8F  0874               	movf	??_SendBit_1621,w
 10060  0A90  07F7               	addwf	SendBit_1621@i,f
 10061  0A91  2A74               	goto	l4400
 10062  0A92                     __end_of_SendBit_1621:	
 10063                           
 10064                           	psect	text54
 10065  0AD4                     __ptext54:	
 10066 ;; *************** function _Key_Scan *****************
 10067 ;; Defined at:
 10068 ;;		line 20 in file "mcc_generated_files/key.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;		None
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  Key_val         1    5[COMMON] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      unsigned char 
 10075 ;; Registers used:
 10076 ;;		wreg
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;Total ram usage:        3 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    3
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_Key_Process
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function _Key_Scan
 10098  0AD4                     _Key_Scan:	
 10099                           
 10100                           ;key.c: 22: unsigned char Key_val=0xff;
 10101                           
 10102                           ;incstack = 0
 10103                           ; Regs used in _Key_Scan: [wreg]
 10104  0AD4  30FF               	movlw	255
 10105  0AD5  00F3               	movwf	??_Key_Scan
 10106  0AD6  0873               	movf	??_Key_Scan,w
 10107  0AD7  00F5               	movwf	Key_Scan@Key_val
 10108                           
 10109                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
 10110  0AD8  0020               	movlb	0	; select bank0
 10111  0AD9  1F8C               	btfss	12,7	;volatile
 10112  0ADA  2ADD               	goto	l5082
 10113  0ADB  1A8D               	btfsc	13,5	;volatile
 10114  0ADC  2AF5               	goto	l856
 10115  0ADD                     l5082:	
 10116                           
 10117                           ;key.c: 24: {
 10118                           ;key.c: 25: _delay((unsigned long)((10)*(16000000/4000.0)));
 10119  0ADD  3034               	movlw	52
 10120  0ADE  00F4               	movwf	??_Key_Scan+1
 10121  0ADF  30F1               	movlw	241
 10122  0AE0  00F3               	movwf	??_Key_Scan
 10123  0AE1                     u5177:	
 10124  0AE1  0BF3               	decfsz	??_Key_Scan,f
 10125  0AE2  2AE1               	goto	u5177
 10126  0AE3  0BF4               	decfsz	??_Key_Scan+1,f
 10127  0AE4  2AE1               	goto	u5177
 10128  0AE5  3200               	nop2
 10129                           
 10130                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
 10131  0AE6  0020               	movlb	0	; select bank0
 10132  0AE7  1F8C               	btfss	12,7	;volatile
 10133  0AE8  2AEB               	goto	l861
 10134  0AE9  1A8D               	btfsc	13,5	;volatile
 10135  0AEA  2AF5               	goto	l856
 10136  0AEB                     l861:	
 10137                           
 10138                           ;key.c: 27: {
 10139                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10140  0AEB  1A8D               	btfsc	13,5	;volatile
 10141  0AEC  2AEF               	goto	l862
 10142  0AED  01F5               	clrf	Key_Scan@Key_val
 10143  0AEE  0AF5               	incf	Key_Scan@Key_val,f
 10144  0AEF                     l862:	
 10145                           
 10146                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10147  0AEF  1B8C               	btfsc	12,7	;volatile
 10148  0AF0  2AF5               	goto	l856
 10149  0AF1  3002               	movlw	2
 10150  0AF2  00F3               	movwf	??_Key_Scan
 10151  0AF3  0873               	movf	??_Key_Scan,w
 10152  0AF4  00F5               	movwf	Key_Scan@Key_val
 10153  0AF5                     l856:	
 10154                           
 10155                           ;key.c: 30: }
 10156                           ;key.c: 31: }
 10157                           ;key.c: 32: return Key_val;
 10158  0AF5  0875               	movf	Key_Scan@Key_val,w
 10159  0AF6  0008               	return
 10160  0AF7                     __end_of_Key_Scan:	
 10161                           
 10162                           	psect	text55
 10163  0890                     __ptext55:	
 10164 ;; *************** function _EUSART_Write *****************
 10165 ;; Defined at:
 10166 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;  txData          1    wreg     unsigned char 
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  txData          1    3[COMMON] unsigned char 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      void 
 10173 ;; Registers used:
 10174 ;;		wreg
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;Total ram usage:        1 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    3
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_Key_Process
 10191 ;;		_EUSART_SendString
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           
 10196                           ;psect for function _EUSART_Write
 10197  0890                     _EUSART_Write:	
 10198                           
 10199                           ;incstack = 0
 10200                           ; Regs used in _EUSART_Write: [wreg]
 10201                           ;EUSART_Write@txData stored from wreg
 10202  0890  00F3               	movwf	EUSART_Write@txData
 10203  0891                     l129:	
 10204                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10205                           
 10206  0891  0020               	movlb	0	; select bank0
 10207  0892  1E11               	btfss	17,4	;volatile
 10208  0893  2891               	goto	l129
 10209                           
 10210                           ;eusart.c: 93: }
 10211                           ;eusart.c: 95: TXREG = txData;
 10212  0894  0873               	movf	EUSART_Write@txData,w
 10213  0895  0023               	movlb	3	; select bank3
 10214  0896  009A               	movwf	26	;volatile
 10215  0897  0008               	return
 10216  0898                     __end_of_EUSART_Write:	
 10217                           
 10218                           	psect	text56
 10219  0A02                     __ptext56:	
 10220 ;; *************** function _Bq32k_Time_Init *****************
 10221 ;; Defined at:
 10222 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10227 ;;  time            7    0        struct bq32k_regs
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;Total ram usage:       12 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:    5
 10244 ;; This function calls:
 10245 ;;		_I2C_Send_Buffer
 10246 ;; This function is called by:
 10247 ;;		_main
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           
 10252                           ;psect for function _Bq32k_Time_Init
 10253  0A02                     _Bq32k_Time_Init:	
 10254                           
 10255                           ;bq32k.c: 19: bq32k_t time;
 10256                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x50,0x23,0x02,0x08,0x07,0x16 };
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10260  0A02  30E1               	movlw	low Bq32k_Time_Init@F2018
 10261  0A03  0086               	movwf	6
 10262  0A04  3000               	movlw	high Bq32k_Time_Init@F2018
 10263  0A05  0087               	movwf	7
 10264  0A06  3027               	movlw	low Bq32k_Time_Init@temp
 10265  0A07  0084               	movwf	4
 10266  0A08  3000               	movlw	high Bq32k_Time_Init@temp
 10267  0A09  0085               	movwf	5
 10268  0A0A  300A               	movlw	10
 10269  0A0B  0020               	movlb	0	; select bank0
 10270  0A0C  00A5               	movwf	??_Bq32k_Time_Init
 10271  0A0D                     u4740:	
 10272  0A0D  0016               	moviw fsr1++
 10273  0A0E  001A               	movwi fsr0++
 10274  0A0F  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10275  0A10  2A0D               	goto	u4740
 10276                           
 10277                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10278  0A11  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10279  0A12  00A5               	movwf	??_Bq32k_Time_Init
 10280  0A13  0825               	movf	??_Bq32k_Time_Init,w
 10281  0A14  00F6               	movwf	I2C_Send_Buffer@buff
 10282  0A15  3007               	movlw	7
 10283  0A16  00A6               	movwf	??_Bq32k_Time_Init+1
 10284  0A17  0826               	movf	??_Bq32k_Time_Init+1,w
 10285  0A18  00F7               	movwf	I2C_Send_Buffer@Length
 10286  0A19  3000               	movlw	0
 10287  0A1A  318C  24FF         	fcall	_I2C_Send_Buffer
 10288  0A1C  0008               	return
 10289  0A1D                     __end_of_Bq32k_Time_Init:	
 10290                           
 10291                           	psect	text57
 10292  0CFF                     __ptext57:	
 10293 ;; *************** function _I2C_Send_Buffer *****************
 10294 ;; Defined at:
 10295 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  ADD             1    wreg     unsigned char 
 10298 ;;  buff            1    6[COMMON] PTR unsigned char 
 10299 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10300 ;;  Length          1    7[COMMON] unsigned char 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  ADD             1    2[BANK0 ] unsigned char 
 10303 ;;  Flag            1    4[BANK0 ] unsigned char 
 10304 ;;  i               1    3[BANK0 ] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      unsigned char 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;Total ram usage:        7 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:    4
 10321 ;; This function calls:
 10322 ;;		_I2C_Send_Byte
 10323 ;;		_I2C_Start
 10324 ;;		_I2C_Stop
 10325 ;; This function is called by:
 10326 ;;		_Bq32k_Time_Init
 10327 ;;		_Bq32k_Rtc_Write_Time
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           
 10332                           ;psect for function _I2C_Send_Buffer
 10333  0CFF                     _I2C_Send_Buffer:	
 10334                           
 10335                           ;incstack = 0
 10336                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10337                           ;I2C_Send_Buffer@ADD stored from wreg
 10338  0CFF  0020               	movlb	0	; select bank0
 10339  0D00  00A2               	movwf	I2C_Send_Buffer@ADD
 10340                           
 10341                           ;i2c.c: 175: unsigned char Flag=1;
 10342  0D01  01A4               	clrf	I2C_Send_Buffer@Flag
 10343  0D02  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10344                           
 10345                           ;i2c.c: 176: unsigned char i;
 10346                           ;i2c.c: 178: I2C_Start();
 10347  0D03  3189  2168  318C   	fcall	_I2C_Start
 10348                           
 10349                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10350  0D06  30D0               	movlw	208
 10351  0D07  318E  264A  318C   	fcall	_I2C_Send_Byte
 10352  0D0A  0020               	movlb	0	; select bank0
 10353  0D0B  00A0               	movwf	??_I2C_Send_Buffer
 10354  0D0C  0820               	movf	??_I2C_Send_Buffer,w
 10355  0D0D  00A4               	movwf	I2C_Send_Buffer@Flag
 10356                           
 10357                           ;i2c.c: 181: if(Flag)
 10358  0D0E  0824               	movf	I2C_Send_Buffer@Flag,w
 10359  0D0F  1D03               	btfss	3,2
 10360  0D10  0008               	return
 10361                           
 10362                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10363                           
 10364                           ;i2c.c: 182: return 0x01;
 10365                           ;	Return value of _I2C_Send_Buffer is never used
 10366  0D11  0822               	movf	I2C_Send_Buffer@ADD,w
 10367  0D12  318E  264A  318C   	fcall	_I2C_Send_Byte
 10368  0D15  0020               	movlb	0	; select bank0
 10369  0D16  00A0               	movwf	??_I2C_Send_Buffer
 10370  0D17  0820               	movf	??_I2C_Send_Buffer,w
 10371  0D18  00A4               	movwf	I2C_Send_Buffer@Flag
 10372                           
 10373                           ;i2c.c: 185: if(Flag)
 10374  0D19  0824               	movf	I2C_Send_Buffer@Flag,w
 10375  0D1A  1D03               	btfss	3,2
 10376  0D1B  0008               	return
 10377                           
 10378                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10379                           
 10380                           ;i2c.c: 186: return 0x01;
 10381                           ;	Return value of _I2C_Send_Buffer is never used
 10382  0D1C  01A3               	clrf	I2C_Send_Buffer@i
 10383  0D1D                     l5070:	
 10384  0D1D  0877               	movf	I2C_Send_Buffer@Length,w
 10385  0D1E  0223               	subwf	I2C_Send_Buffer@i,w
 10386  0D1F  1803               	btfsc	3,0
 10387  0D20  2D37               	goto	l5072
 10388                           
 10389                           ;i2c.c: 189: {
 10390                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10391  0D21  0823               	movf	I2C_Send_Buffer@i,w
 10392  0D22  0776               	addwf	I2C_Send_Buffer@buff,w
 10393  0D23  00A0               	movwf	??_I2C_Send_Buffer
 10394  0D24  0820               	movf	??_I2C_Send_Buffer,w
 10395  0D25  0086               	movwf	6
 10396  0D26  0187               	clrf	7
 10397  0D27  0801               	movf	1,w
 10398  0D28  318E  264A  318C   	fcall	_I2C_Send_Byte
 10399  0D2B  0020               	movlb	0	; select bank0
 10400  0D2C  00A1               	movwf	??_I2C_Send_Buffer+1
 10401  0D2D  0821               	movf	??_I2C_Send_Buffer+1,w
 10402  0D2E  00A4               	movwf	I2C_Send_Buffer@Flag
 10403                           
 10404                           ;i2c.c: 191: if(Flag)
 10405  0D2F  0824               	movf	I2C_Send_Buffer@Flag,w
 10406  0D30  1D03               	btfss	3,2
 10407  0D31  0008               	return
 10408                           
 10409                           ;i2c.c: 192: return 0x01;
 10410                           ;	Return value of _I2C_Send_Buffer is never used
 10411  0D32  3001               	movlw	1
 10412  0D33  00A0               	movwf	??_I2C_Send_Buffer
 10413  0D34  0820               	movf	??_I2C_Send_Buffer,w
 10414  0D35  07A3               	addwf	I2C_Send_Buffer@i,f
 10415  0D36  2D1D               	goto	l5070
 10416  0D37                     l5072:	
 10417                           
 10418                           ;i2c.c: 193: }
 10419                           ;i2c.c: 194: I2C_Stop();
 10420  0D37  3189  2181         	fcall	_I2C_Stop
 10421  0D39  0008               	return
 10422  0D3A                     __end_of_I2C_Send_Buffer:	
 10423                           ;i2c.c: 195: return 0x00;
 10424                           ;	Return value of _I2C_Send_Buffer is never used
 10425                           
 10426                           
 10427                           	psect	text58
 10428  0981                     __ptext58:	
 10429 ;; *************** function _I2C_Stop *****************
 10430 ;; Defined at:
 10431 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;Total ram usage:        1 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    3
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_I2C_Read_Buffer
 10456 ;;		_I2C_Send_Buffer
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _I2C_Stop
 10462  0981                     _I2C_Stop:	
 10463                           
 10464                           ;incstack = 0
 10465                           ; Regs used in _I2C_Stop: [wreg]
 10466                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10467  0981  0022               	movlb	2	; select bank2
 10468  0982  100D               	bcf	13,0	;volatile
 10469                           
 10470                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10471  0983  300D               	movlw	13
 10472  0984  00F3               	movwf	??_I2C_Stop
 10473  0985                     u5187:	
 10474  0985  0BF3               	decfsz	??_I2C_Stop,f
 10475  0986  2985               	goto	u5187
 10476                           
 10477                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10478  0987  0022               	movlb	2	; select bank2
 10479  0988  108D               	bcf	13,1	;volatile
 10480                           
 10481                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10482  0989  300D               	movlw	13
 10483  098A  00F3               	movwf	??_I2C_Stop
 10484  098B                     u5197:	
 10485  098B  0BF3               	decfsz	??_I2C_Stop,f
 10486  098C  298B               	goto	u5197
 10487                           
 10488                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10489  098D  0022               	movlb	2	; select bank2
 10490  098E  140D               	bsf	13,0	;volatile
 10491                           
 10492                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10493  098F  300D               	movlw	13
 10494  0990  00F3               	movwf	??_I2C_Stop
 10495  0991                     u5207:	
 10496  0991  0BF3               	decfsz	??_I2C_Stop,f
 10497  0992  2991               	goto	u5207
 10498                           
 10499                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10500  0993  0022               	movlb	2	; select bank2
 10501  0994  148D               	bsf	13,1	;volatile
 10502                           
 10503                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10504  0995  300D               	movlw	13
 10505  0996  00F3               	movwf	??_I2C_Stop
 10506  0997                     u5217:	
 10507  0997  0BF3               	decfsz	??_I2C_Stop,f
 10508  0998  2997               	goto	u5217
 10509  0999  0008               	return
 10510  099A                     __end_of_I2C_Stop:	
 10511                           
 10512                           	psect	text59
 10513  0968                     __ptext59:	
 10514 ;; *************** function _I2C_Start *****************
 10515 ;; Defined at:
 10516 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;Total ram usage:        1 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    3
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_I2C_Read_Buffer
 10541 ;;		_I2C_Send_Buffer
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _I2C_Start
 10547  0968                     _I2C_Start:	
 10548                           
 10549                           ;incstack = 0
 10550                           ; Regs used in _I2C_Start: [wreg]
 10551                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10552  0968  0022               	movlb	2	; select bank2
 10553  0969  148D               	bsf	13,1	;volatile
 10554                           
 10555                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10556  096A  300D               	movlw	13
 10557  096B  00F3               	movwf	??_I2C_Start
 10558  096C                     u5227:	
 10559  096C  0BF3               	decfsz	??_I2C_Start,f
 10560  096D  296C               	goto	u5227
 10561                           
 10562                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10563  096E  0022               	movlb	2	; select bank2
 10564  096F  140D               	bsf	13,0	;volatile
 10565                           
 10566                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10567  0970  300D               	movlw	13
 10568  0971  00F3               	movwf	??_I2C_Start
 10569  0972                     u5237:	
 10570  0972  0BF3               	decfsz	??_I2C_Start,f
 10571  0973  2972               	goto	u5237
 10572                           
 10573                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10574  0974  0022               	movlb	2	; select bank2
 10575  0975  108D               	bcf	13,1	;volatile
 10576                           
 10577                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10578  0976  300D               	movlw	13
 10579  0977  00F3               	movwf	??_I2C_Start
 10580  0978                     u5247:	
 10581  0978  0BF3               	decfsz	??_I2C_Start,f
 10582  0979  2978               	goto	u5247
 10583                           
 10584                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10585  097A  0022               	movlb	2	; select bank2
 10586  097B  100D               	bcf	13,0	;volatile
 10587                           
 10588                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10589  097C  300D               	movlw	13
 10590  097D  00F3               	movwf	??_I2C_Start
 10591  097E                     u5257:	
 10592  097E  0BF3               	decfsz	??_I2C_Start,f
 10593  097F  297E               	goto	u5257
 10594  0980  0008               	return
 10595  0981                     __end_of_I2C_Start:	
 10596                           
 10597                           	psect	text60
 10598  0E4A                     __ptext60:	
 10599 ;; *************** function _I2C_Send_Byte *****************
 10600 ;; Defined at:
 10601 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;  Data            1    wreg     unsigned char 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  Data            1    4[COMMON] unsigned char 
 10606 ;;  i               1    5[COMMON] unsigned char 
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      unsigned char 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;Total ram usage:        3 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; Hardware stack levels required when called:    3
 10623 ;; This function calls:
 10624 ;;		Nothing
 10625 ;; This function is called by:
 10626 ;;		_I2C_Read_Buffer
 10627 ;;		_I2C_Send_Buffer
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           
 10632                           ;psect for function _I2C_Send_Byte
 10633  0E4A                     _I2C_Send_Byte:	
 10634                           
 10635                           ;incstack = 0
 10636                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 10637                           ;I2C_Send_Byte@Data stored from wreg
 10638  0E4A  00F4               	movwf	I2C_Send_Byte@Data
 10639                           
 10640                           ;i2c.c: 36: unsigned char i;
 10641                           ;i2c.c: 37: for(i=0;i<8;i++)
 10642  0E4B  01F5               	clrf	I2C_Send_Byte@i
 10643  0E4C  3008               	movlw	8
 10644  0E4D  0275               	subwf	I2C_Send_Byte@i,w
 10645  0E4E  1803               	btfsc	3,0
 10646  0E4F  2E71               	goto	l737
 10647  0E50                     l725:	
 10648                           
 10649                           ;i2c.c: 38: {
 10650                           ;i2c.c: 39: if(Data&0x80)
 10651  0E50  1FF4               	btfss	I2C_Send_Byte@Data,7
 10652  0E51  2E55               	goto	l731
 10653                           
 10654                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 10655  0E52  0022               	movlb	2	; select bank2
 10656  0E53  148D               	bsf	13,1	;volatile
 10657  0E54  2E57               	goto	l4220
 10658  0E55                     l731:	
 10659                           ;i2c.c: 41: else
 10660                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 10661                           
 10662  0E55  0022               	movlb	2	; select bank2
 10663  0E56  108D               	bcf	13,1	;volatile
 10664  0E57                     l4220:	
 10665                           
 10666                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10667  0E57  300D               	movlw	13
 10668  0E58  00F3               	movwf	??_I2C_Send_Byte
 10669  0E59                     u5267:	
 10670  0E59  0BF3               	decfsz	??_I2C_Send_Byte,f
 10671  0E5A  2E59               	goto	u5267
 10672                           
 10673                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 10674  0E5B  0022               	movlb	2	; select bank2
 10675  0E5C  140D               	bsf	13,0	;volatile
 10676                           
 10677                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10678  0E5D  300D               	movlw	13
 10679  0E5E  00F3               	movwf	??_I2C_Send_Byte
 10680  0E5F                     u5277:	
 10681  0E5F  0BF3               	decfsz	??_I2C_Send_Byte,f
 10682  0E60  2E5F               	goto	u5277
 10683                           
 10684                           ;i2c.c: 46: Data<<=1;
 10685  0E61  1003               	clrc
 10686  0E62  0DF4               	rlf	I2C_Send_Byte@Data,f
 10687                           
 10688                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 10689  0E63  0022               	movlb	2	; select bank2
 10690  0E64  100D               	bcf	13,0	;volatile
 10691                           
 10692                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10693  0E65  300D               	movlw	13
 10694  0E66  00F3               	movwf	??_I2C_Send_Byte
 10695  0E67                     u5287:	
 10696  0E67  0BF3               	decfsz	??_I2C_Send_Byte,f
 10697  0E68  2E67               	goto	u5287
 10698  0E69  3001               	movlw	1
 10699  0E6A  00F3               	movwf	??_I2C_Send_Byte
 10700  0E6B  0873               	movf	??_I2C_Send_Byte,w
 10701  0E6C  07F5               	addwf	I2C_Send_Byte@i,f
 10702  0E6D  3008               	movlw	8
 10703  0E6E  0275               	subwf	I2C_Send_Byte@i,w
 10704  0E6F  1C03               	skipc
 10705  0E70  2E50               	goto	l725
 10706  0E71                     l737:	
 10707                           ;i2c.c: 49: }
 10708                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 10709                           
 10710  0E71  0022               	movlb	2	; select bank2
 10711  0E72  148D               	bsf	13,1	;volatile
 10712                           
 10713                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10714  0E73  300D               	movlw	13
 10715  0E74  00F3               	movwf	??_I2C_Send_Byte
 10716  0E75                     u5297:	
 10717  0E75  0BF3               	decfsz	??_I2C_Send_Byte,f
 10718  0E76  2E75               	goto	u5297
 10719                           
 10720                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 10721  0E77  0022               	movlb	2	; select bank2
 10722  0E78  140D               	bsf	13,0	;volatile
 10723                           
 10724                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10725  0E79  300D               	movlw	13
 10726  0E7A  00F3               	movwf	??_I2C_Send_Byte
 10727  0E7B                     u5307:	
 10728  0E7B  0BF3               	decfsz	??_I2C_Send_Byte,f
 10729  0E7C  2E7B               	goto	u5307
 10730                           
 10731                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 10732  0E7D  0021               	movlb	1	; select bank1
 10733  0E7E  148D               	bsf	13,1	;volatile
 10734                           
 10735                           ;i2c.c: 55: if(RB1)
 10736  0E7F  0020               	movlb	0	; select bank0
 10737  0E80  1C8D               	btfss	13,1	;volatile
 10738  0E81  2E86               	goto	l747
 10739                           
 10740                           ;i2c.c: 56: {
 10741                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 10742  0E82  0021               	movlb	1	; select bank1
 10743  0E83  108D               	bcf	13,1	;volatile
 10744                           
 10745                           ;i2c.c: 58: return 0x01;
 10746  0E84  3001               	movlw	1
 10747  0E85  0008               	return
 10748  0E86                     l747:	
 10749                           ;i2c.c: 59: }
 10750                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 10751                           
 10752  0E86  0021               	movlb	1	; select bank1
 10753  0E87  108D               	bcf	13,1	;volatile
 10754                           
 10755                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 10756  0E88  0022               	movlb	2	; select bank2
 10757  0E89  100D               	bcf	13,0	;volatile
 10758                           
 10759                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10760  0E8A  300D               	movlw	13
 10761  0E8B  00F3               	movwf	??_I2C_Send_Byte
 10762  0E8C                     u5317:	
 10763  0E8C  0BF3               	decfsz	??_I2C_Send_Byte,f
 10764  0E8D  2E8C               	goto	u5317
 10765                           
 10766                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 10767  0E8E  0022               	movlb	2	; select bank2
 10768  0E8F  108D               	bcf	13,1	;volatile
 10769                           
 10770                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10771  0E90  300D               	movlw	13
 10772  0E91  00F3               	movwf	??_I2C_Send_Byte
 10773  0E92                     u5327:	
 10774  0E92  0BF3               	decfsz	??_I2C_Send_Byte,f
 10775  0E93  2E92               	goto	u5327
 10776                           
 10777                           ;i2c.c: 65: return 0x00;
 10778  0E94  3000               	movlw	0
 10779  0E95  0008               	return
 10780  0E96                     __end_of_I2C_Send_Byte:	
 10781                           
 10782                           	psect	text61
 10783  09B3                     __ptext61:	
 10784 ;; *************** function _ADC_GetConversion *****************
 10785 ;; Defined at:
 10786 ;;		line 106 in file "mcc_generated_files/adc.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  channel         1    wreg     enum E1850
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  channel         1    6[COMMON] enum E1850
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  2    3[COMMON] unsigned int 
 10793 ;; Registers used:
 10794 ;;		wreg, status,2, status,0
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;Total ram usage:        4 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    3
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_main
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _ADC_GetConversion
 10816  09B3                     _ADC_GetConversion:	
 10817                           
 10818                           ;incstack = 0
 10819                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10820                           ;ADC_GetConversion@channel stored from wreg
 10821  09B3  00F6               	movwf	ADC_GetConversion@channel
 10822                           
 10823                           ;adc.c: 108: ADCON0bits.CHS = channel;
 10824  09B4  0876               	movf	ADC_GetConversion@channel,w
 10825  09B5  00F5               	movwf	??_ADC_GetConversion
 10826  09B6  0DF5               	rlf	??_ADC_GetConversion,f
 10827  09B7  0DF5               	rlf	??_ADC_GetConversion,f
 10828  09B8  0021               	movlb	1	; select bank1
 10829  09B9  081D               	movf	29,w	;volatile
 10830  09BA  0675               	xorwf	??_ADC_GetConversion,w
 10831  09BB  3983               	andlw	-125
 10832  09BC  0675               	xorwf	??_ADC_GetConversion,w
 10833  09BD  009D               	movwf	29	;volatile
 10834                           
 10835                           ;adc.c: 111: ADCON0bits.ADON = 1;
 10836  09BE  141D               	bsf	29,0	;volatile
 10837                           
 10838                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
 10839  09BF  3006               	movlw	6
 10840  09C0  00F5               	movwf	??_ADC_GetConversion
 10841  09C1                     u5337:	
 10842  09C1  0BF5               	decfsz	??_ADC_GetConversion,f
 10843  09C2  29C1               	goto	u5337
 10844  09C3  0000               	nop
 10845                           
 10846                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 10847  09C4  0021               	movlb	1	; select bank1
 10848  09C5  149D               	bsf	29,1	;volatile
 10849  09C6                     l197:	
 10850                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 10851                           
 10852  09C6  189D               	btfsc	29,1	;volatile
 10853  09C7  29C6               	goto	l197
 10854                           
 10855                           ;adc.c: 121: }
 10856                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 10857  09C8  081C               	movf	28,w	;volatile
 10858  09C9  00F4               	movwf	?_ADC_GetConversion+1
 10859  09CA  081B               	movf	27,w	;volatile
 10860  09CB  00F3               	movwf	?_ADC_GetConversion
 10861  09CC  0008               	return
 10862  09CD                     __end_of_ADC_GetConversion:	
 10863                           
 10864                           	psect	intentry
 10865  0004                     __pintentry:	
 10866 ;; *************** function _INTERRUPT_InterruptManager *****************
 10867 ;; Defined at:
 10868 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, pclath, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;Total ram usage:        1 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    2
 10889 ;; This function calls:
 10890 ;;		_TMR0_ISR
 10891 ;; This function is called by:
 10892 ;;		Interrupt level 1
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896  0004                     _INTERRUPT_InterruptManager:	
 10897                           
 10898                           ;incstack = 0
 10899                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10900  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10901  0005  3180               	pagesel	$
 10902  0006  0020               	movlb	0	; select bank0
 10903  0007  087F               	movf	127,w
 10904  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 10905                           
 10906                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 10907  0009  1A8B               	btfsc	11,5	;volatile
 10908  000A  1D0B               	btfss	11,2	;volatile
 10909  000B  280E               	goto	i1l255
 10910                           
 10911                           ;interrupt_manager.c: 55: TMR0_ISR();
 10912  000C  3189  21E7         	fcall	_TMR0_ISR
 10913  000E                     i1l255:	
 10914                           ;interrupt_manager.c: 56: } else {
 10915                           
 10916  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 10917  000F  0020               	movlb	0	; select bank0
 10918  0010  00FF               	movwf	127
 10919  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10920  0012  0009               	retfie
 10921  0013                     __end_of_INTERRUPT_InterruptManager:	
 10922                           
 10923                           	psect	text63
 10924  09E7                     __ptext63:	
 10925 ;; *************** function _TMR0_ISR *****************
 10926 ;; Defined at:
 10927 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;Total ram usage:        1 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    1
 10948 ;; This function calls:
 10949 ;;		_TMR0_CallBack
 10950 ;; This function is called by:
 10951 ;;		_INTERRUPT_InterruptManager
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           
 10956                           ;psect for function _TMR0_ISR
 10957  09E7                     _TMR0_ISR:	
 10958                           
 10959                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 10960                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 10961                           
 10962                           ;incstack = 0
 10963                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10964  09E7  110B               	bcf	11,2	;volatile
 10965                           
 10966                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 10967  09E8  0021               	movlb	1	; select bank1
 10968  09E9  086B               	movf	_timer0ReloadVal^(0+128),w	;volatile
 10969  09EA  0020               	movlb	0	; select bank0
 10970  09EB  0095               	movwf	21	;volatile
 10971                           
 10972                           ;tmr0.c: 111: MAX31856Sec++;
 10973  09EC  3001               	movlw	1
 10974  09ED  00F1               	movwf	??_TMR0_ISR
 10975  09EE  0871               	movf	??_TMR0_ISR,w
 10976  09EF  0021               	movlb	1	; select bank1
 10977  09F0  07B6               	addwf	_MAX31856Sec^(0+128),f
 10978                           
 10979                           ;tmr0.c: 114: if (++CountCallBack >= 50) {
 10980  09F1  3001               	movlw	1
 10981  09F2  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 10982  09F3  3000               	movlw	0
 10983  09F4  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 10984  09F5  3000               	movlw	0
 10985  09F6  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 10986  09F7  3032               	movlw	50
 10987  09F8  1903               	skipnz
 10988  09F9  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 10989  09FA  1C03               	skipc
 10990  09FB  0008               	return
 10991                           
 10992                           ;tmr0.c: 116: TMR0_CallBack();
 10993  09FC  318A  22F7         	fcall	_TMR0_CallBack
 10994                           
 10995                           ;tmr0.c: 119: CountCallBack = 0;
 10996  09FE  0021               	movlb	1	; select bank1
 10997  09FF  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 10998  0A00  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 10999  0A01  0008               	return
 11000  0A02                     __end_of_TMR0_ISR:	
 11001                           
 11002                           	psect	text64
 11003  0AF7                     __ptext64:	
 11004 ;; *************** function _TMR0_CallBack *****************
 11005 ;; Defined at:
 11006 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;		None
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  1    wreg      void 
 11013 ;; Registers used:
 11014 ;;		wreg, status,2, status,0
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11024 ;;Total ram usage:        1 bytes
 11025 ;; Hardware stack levels used:    1
 11026 ;; This function calls:
 11027 ;;		Nothing
 11028 ;; This function is called by:
 11029 ;;		_TMR0_ISR
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           
 11034                           ;psect for function _TMR0_CallBack
 11035  0AF7                     _TMR0_CallBack:	
 11036                           
 11037                           ;tmr0.c: 128: time_count++;
 11038                           
 11039                           ;incstack = 0
 11040                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 11041  0AF7  3001               	movlw	1
 11042  0AF8  00F0               	movwf	??_TMR0_CallBack
 11043  0AF9  0870               	movf	??_TMR0_CallBack,w
 11044  0AFA  0020               	movlb	0	; select bank0
 11045  0AFB  07EC               	addwf	_time_count,f
 11046                           
 11047                           ;tmr0.c: 129: if(time_count == 4 || time_count > 12) time_count = 0;
 11048  0AFC  3004               	movlw	4
 11049  0AFD  066C               	xorwf	_time_count,w
 11050  0AFE  1903               	btfsc	3,2
 11051  0AFF  2B04               	goto	i1l3688
 11052  0B00  300D               	movlw	13
 11053  0B01  026C               	subwf	_time_count,w
 11054  0B02  1C03               	skipc
 11055  0B03  2B05               	goto	i1l3690
 11056  0B04                     i1l3688:	
 11057  0B04  01EC               	clrf	_time_count
 11058  0B05                     i1l3690:	
 11059                           
 11060                           ;tmr0.c: 130: LongPressSec++;
 11061  0B05  3001               	movlw	1
 11062  0B06  00F0               	movwf	??_TMR0_CallBack
 11063  0B07  0870               	movf	??_TMR0_CallBack,w
 11064  0B08  07E9               	addwf	_LongPressSec,f
 11065                           
 11066                           ;tmr0.c: 132: Cur_temperature_time_ch1++;
 11067  0B09  3001               	movlw	1
 11068  0B0A  00F0               	movwf	??_TMR0_CallBack
 11069  0B0B  0870               	movf	??_TMR0_CallBack,w
 11070  0B0C  0021               	movlb	1	; select bank1
 11071  0B0D  07B4               	addwf	_Cur_temperature_time_ch1^(0+128),f
 11072                           
 11073                           ;tmr0.c: 133: if(Cur_temperature_time_ch1 > 130)
 11074  0B0E  3083               	movlw	131
 11075  0B0F  0234               	subwf	_Cur_temperature_time_ch1^(0+128),w
 11076  0B10  1803               	btfsc	3,0
 11077                           
 11078                           ;tmr0.c: 134: {
 11079                           ;tmr0.c: 135: Cur_temperature_time_ch1 = 0;
 11080  0B11  01B4               	clrf	_Cur_temperature_time_ch1^(0+128)
 11081                           
 11082                           ;tmr0.c: 136: }
 11083                           ;tmr0.c: 138: Cur_temperature_time_ch2++;
 11084  0B12  3001               	movlw	1
 11085  0B13  00F0               	movwf	??_TMR0_CallBack
 11086  0B14  0870               	movf	??_TMR0_CallBack,w
 11087  0B15  07B5               	addwf	_Cur_temperature_time_ch2^(0+128),f
 11088                           
 11089                           ;tmr0.c: 139: if(Cur_temperature_time_ch2 > 130)
 11090  0B16  3083               	movlw	131
 11091  0B17  0235               	subwf	_Cur_temperature_time_ch2^(0+128),w
 11092  0B18  1C03               	skipc
 11093  0B19  0008               	return
 11094                           
 11095                           ;tmr0.c: 140: {
 11096                           ;tmr0.c: 141: Cur_temperature_time_ch2= 0;
 11097  0B1A  01B5               	clrf	_Cur_temperature_time_ch2^(0+128)
 11098  0B1B  0008               	return
 11099  0B1C                     __end_of_TMR0_CallBack:	
 11100  007E                     btemp	set	126	;btemp
 11101  007E                     int$flags	set	126
 11102  007E                     wtemp	set	126
 11103  007E                     wtemp0	set	126
 11104  0080                     wtemp1	set	128
 11105  0082                     wtemp2	set	130
 11106  0084                     wtemp3	set	132
 11107  0086                     wtemp4	set	134
 11108  0088                     wtemp5	set	136
 11109  007F                     wtemp6	set	127
 11110  007E                     ttemp	set	126
 11111  007E                     ttemp0	set	126
 11112  0081                     ttemp1	set	129
 11113  0084                     ttemp2	set	132
 11114  0087                     ttemp3	set	135
 11115  007F                     ttemp4	set	127
 11116  007E                     ltemp	set	126
 11117  007E                     ltemp0	set	126
 11118  0082                     ltemp1	set	130
 11119  0086                     ltemp2	set	134
 11120  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     65      78
    BANK1            80      0      76
    BANK2            80      5      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_FLASH_ReadWord
    _Save_process->_Save_Write_word
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _tc_temperature_trans->_Save_Write_word
    _Calculate_Time->_Write_Flash_finish
    _Calculate_Time->_Write_Flash_head
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Save_Write_time
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  110223
                                             62 BANK0      3     3      0
                                              0 BANK2      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    4     4      0     500
                                              0 BANK0      4     4      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0   18286
                                             45 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   49349
                                             56 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   37143
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   27431
                                             55 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                10    10      0   18994
                                             45 BANK0     10    10      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0   14030
                                             23 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_time
                 _Write_Flash_finish
                   _Write_Flash_head
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_head                                     1     1      0    2673
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_finish                                   1     1      0    2673
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Save_Write_time                                      3     3      0    5635
                                             21 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      3     1      2    4167
                                              7 COMMON     1     1      0
                                             19 BANK0      2     0      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2673
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_time
               _Bq32k_Rtc_Read_Time
                 _I2C_Read_Buffer
                   _I2C_Receive_Byte
                   _I2C_Send_Byte
                   _I2C_Start
                   _I2C_Stop
                 _bcd2bin
                   ___bmul
               _Save_Write_word
                 _FLASH_WriteWord
                   _FLASH_ReadWord
                   _FLASH_WriteBlock
                     _FLASH_EraseBlock
             _Write_Flash_finish
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             _Write_Flash_head
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_time
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
       _Write_Flash_finish
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       _Write_Flash_head
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           _Save_Write_time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_word
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
           _Write_Flash_finish
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           _Write_Flash_head
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jul 08 11:03:02 2016

                        __end_of_I2C_Send_Buffer 0D3A                                   _SPI_Initialize 087E  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 08A5                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 086E  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00EB  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 0891                                              l166 077B  
                                            l370 03A5                                              l532 01B3  
                                            l516 00D8                                              l372 03A7  
                                            l197 09C6                                              l541 0E08  
                                            l534 01D8                                              l527 0161  
                                            l625 0A7D                                              l641 0A9D  
                                            l537 01E0                                              l529 01AB  
                                            l731 0E55                                              l627 0A7F  
                                            l643 0A9F                                              l379 03D5  
                                            l725 0E50                                              l901 062E  
                                            l389 0441                                              l670 0CC7  
                                            l582 0C60                                              l680 0494  
                                            l737 0E71                                              l681 04BA  
                                            l747 0E86                                              l861 0AEB  
                                            l862 0AEF                                              l766 0B34  
                                            l856 0AF5                                              l883 05EF  
                                            l897 0621                                              l995 0F58  
                                            l999 0F89                                              _RB1 0069  
                                            _RB3 006B                         __end_of_maxim_31856_init 07E8  
                                            _RB5 006D                                              _RA7 0067  
                                   ?_err_Display 0070                                     ___awmod@sign 0021  
                             _Write_Flash_finish 0B9F                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                               ?_FLASH_WriteWord 002A                           _maxim_start_conversion 09CD  
                 FLASH_WriteBlock@flashWordArray 0022                                     __CFG_LVP$OFF 0000  
                                           l1020 0A5E                                             l4220 0E57  
                                           l4310 0DA6                                             l4400 0A74  
                                           l4304 0D88                                             l5040 0C4B  
                                           l5016 0C2F                                             l5026 0C3A  
                                           l4412 0A94                                             l5028 0C3D  
                                           l5044 0C4E                                             l5070 0D1D  
                                           l4270 0B44                                             l4190 0766  
                                           l5038 0C48                                             l5214 0612  
                                           l5072 0D37                                             l4352 065A  
                                           l5224 0625                                             l5082 0ADD  
                                           l4602 0B79                                             l4354 0685  
                                           l4178 073E                                             l4434 0A57  
                                           l4530 02BC                                             l5218 0619  
                                           l4460 0EC3                                             l4604 0B85  
                                           l4612 0B9A                                             l4284 08FF  
                                           l5164 0C8F                                             l5332 041A  
                                           l4454 0E9F                                             l4462 0EC8  
                                           l4534 02C5                                             l4710 0119  
                                           l5182 05C2                                             l5174 05B0  
                                           l5246 0F6B                                             l4472 0ED0  
                                           l4464 0ECD                                             l4608 0B91  
                                           l4288 0905                                             l5192 05F3  
                                           l5344 0442                                             l4458 0EAE  
                                           l4546 02D7                                             l4714 0128  
                                           l5186 05CE                                             l5178 05B6  
                                           l5346 0445                                             l4484 0CAD  
                                           l4580 0CDF                                             l4556 0386  
                                           l4812 0EF2                                             l5196 05F9  
                                           l5284 03C4                                             l4590 0CFA  
                                           l4566 0A23                                             l4718 013C  
                                           l4734 0174                                             l4830 0F11  
                                           l5278 03AF                                             l4736 0179  
                                           l4672 00B3                                             l4664 0090  
                                           l4840 0F2C                                             l5288 03D6  
                                           l4586 0CF1                                             l4578 0CD3  
                                           l4754 01BA                                             l4690 00F1  
                                           l4930 0D63                                             l4922 0D53  
                                           l4818 0EFD                                             l4780 047B  
                                           l4668 009F                                             l4844 0F34  
                                           l4836 0F23                                             l4828 0F05  
                                           l4860 0DCE                                             l4782 04CE  
                                           l4926 0D5B                                             l4918 0D4B  
                                           l4870 0DE0                                             l4792 04F2  
                                           l4688 00EB                                             l4856 0DC7  
                                           l4786 04D9                                             l4778 0460  
                                           l4882 0DFD                                             l4874 0DEC  
                                           l4892 0E10                                             l4788 04E8  
                                           l4868 0DD4                                             l4878 0DF5  
                                           l4896 0E18                              ?_Write_Flash_finish 0070  
                                           _LATA 010C                                             _LATB 010D  
                                           _LATC 010E                                             u4040 0076  
                                           u4105 00A5                                             u4050 0077  
                                           u4150 00FF                                             u4215 012E  
                                           u4160 0100                                             u5107 0694  
                                           u3435 072A                                             u5117 069B  
                                           u4405 0F12                                             u5207 0991  
                                           u5127 06A2                                             u4415 0F1C  
                                           u5217 0997                                             u5137 0B2A  
                                           u3625 091A                                             u4425 0F24  
                                           u4505 0DE6                                             u5307 0E7B  
                                           u5227 096C                                             u5147 0B3A  
                                           u3715 0A5F                                             u4515 0DED  
                                           u5067 0398                                             u5317 0E8C  
                                           u5237 0972                                             u5157 0AA4  
                                           u5077 066D                                             u3725 0A64  
                                           u5327 0E92                                             u5247 0978  
                                           u5167 0A84                                             u5087 0674  
                                           u5337 09C1                                             u5257 097E  
                                           u5177 0AE1                                             u5097 067B  
                                           u4385 0F08                                             u5267 0E59  
                                           u5187 0985                                             u3915 0CE0  
                                           u4740 0A0D                                             u5277 0E5F  
                                           u5197 098B                                             u3925 0CEA  
                                           u4485 0DD7                                             u5287 0E67  
                                           u3935 0CF2                                             u5297 0E75  
                                           u3965 0B7C                                             u3895 0CD6  
                                           u3985 0B8B                                             u3995 0B92  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                          __size_of_Set_start_flag 0006  
                         __size_of_WriteAll_1621 0035                                    ??_Key_Process 0058  
                                           _main 0388                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 099A                                ?_FLASH_WriteBlock 0020  
                                  __CFG_BOREN$ON 0000                                             ltemp 007E  
                            SendCmd_1621@command 0021                                             start 0013  
                                           ttemp 007E                                             wtemp 007E  
                                __end_of_Dis_TAB 1015                           __end_of_SPI_Initialize 0884  
                             ??_FLASH_WriteBlock 0023                                 ?_I2C_Read_Buffer 0076  
                              ___bmul@multiplier 0076                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 0163                   __end_of_SPI_Exchange8bitBuffer 0EE7  
                                time_Display@num 0033                             ??_Write_Flash_finish 0077  
                        __end_of_TMR0_Initialize 08EC                                  ?_FVR_Initialize 0070  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 0005  
                  __end_of_OSCILLATOR_Initialize 0878                                  __end_of_bcd2bin 0923  
                                          ?_main 0070                                  __end_of___awdiv 0F39  
                                  __CFG_WDTE$OFF 0000                                  __end_of___awmod 0E02  
                                ___awdiv@divisor 0073                                            _LATA0 0860  
                                          _LATA1 0861                                            _LATB0 0868  
                                          _LATA2 0862                                            _LATB1 0869  
                                          _LATA3 0863                                            _LATC0 0870  
                                          _LATA4 0864                                            _LATC1 0871  
                                          _LATA5 0865                                            _LATC2 0872  
                                __end_of___lwdiv 0CFF                                            i1l255 000E  
                                __end_of___lwmod 0B9F                                  ___awdiv@counter 0020  
                                          _RCREG 0199                                            _RCSTA 019D  
                                     _Flash_buff 0120                                            u383m0 02B5  
                                          u368m0 06B4                                            u369m0 06C1  
                                          u386m0 037F                          ??_one_temperature_trans 0028  
                              ?_SendDataBit_1621 0073                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TXREG 019A                                            _TXSTA 019E  
                               __end_of_TMR0_ISR 0A02                               ??_SendDataBit_1621 0074  
                   __end_of_tc_temperature_trans 01E7                                            main@i 0162  
                              __end_of_I2C_Start 0981                              _Bq32k_Rtc_Read_Time 0F9C  
                                Tc_Display@count 002A                                WriteAll_1621@addr 0024  
                                          ltemp0 007E                                            ltemp1 0082  
                                          ltemp2 0086                                            ltemp3 0080  
                                          ttemp0 007E                                            ttemp1 0081  
                                          ttemp2 0084                                            ttemp3 0087  
                                          ttemp4 007F                                            status 0003  
                                          wtemp0 007E                                            wtemp1 0080  
                                          wtemp2 0082                                            wtemp3 0084  
                                          wtemp4 0086                                            wtemp5 0088  
                                          wtemp6 007F                           __size_of_I2C_Send_Byte 004C  
                                _Cur_temperature 00B0                                       _Tc_Display 044F  
                                ?_SPI_Initialize 0070                      __end_of_temperature_display 0D77  
                                __initialization 0015                              __end_of_Key_Process 062F  
                               ?_I2C_Send_Buffer 0076                                     __end_of_main 044F  
                                 WriteAll_1621@i 0025                                   WriteAll_1621@p 0020  
                               __end_of_Key_Scan 0AF7                                    main@data_temp 0160  
                                 ??_EUSART_Write 0073                             ?_Bq32k_Rtc_Read_Time 0070  
                    __end_of_temperature_process 0C61                                   __CFG_LPBOR$OFF 0000  
   maxim_31856_write_register@uch_register_value 0074                      ?_INTERRUPT_InterruptManager 0070  
                                  _WriteAll_1621 0C95                                           ??_main 005E  
                                   Key_Process@i 005C   maxim_31856_write_register@uch_register_address 0075  
                        __size_of_FLASH_ReadWord 0019                          Bq32k_Rtc_Read_Time@temp 0025  
                              I2C_Receive_Byte@i 0075                         __end_of_SPI_Exchange8bit 08A9  
                                         _ADCON0 009D                                           _ADCON1 009E  
                      FLASH_WriteBlock@writeAddr 0020                                           _ADRESH 009C  
                                         _ADRESL 009B                                 ___awdiv@dividend 0075  
                                         _APFCON 011D                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         i1l3690 0B05                                           i1l3688 0B04  
                                         _FVRCON 0117                                           _PMADRH 0192  
                                         _PMADRL 0191                                           _PMDATH 0194  
                                         _PMDATL 0193                                _temperature_value 0061  
                                         _PMCON2 0196                        __size_of_FLASH_EraseBlock 001C  
                                         _OSCCON 0099                                           _SPBRGH 019C  
                                         _SPBRGL 019B                         _Cur_temperature_time_ch1 00B4  
                       _Cur_temperature_time_ch2 00B5                                           _TRISB1 0469  
                                         _TRISB3 046B                                           _SSPBUF 0211  
                                  ?_SendCmd_1621 0070                                    ?_SendBit_1621 0073  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 0A02  
                               SendBit_1621@data 0076                                           ___bmul 08FD  
                                      ??_bcd2bin 0020                                           ___wmul 0A54  
                  FLASH_WriteWord@blockStartAddr 0030                                        ??___awdiv 0077  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0077  
                          ??_Bq32k_Rtc_Read_Time 0023                                        ??___lwdiv 0025  
                                      ??___lwmod 0077                     ?_maxim_31856_read_nregisters 0023  
                            FLASH_WriteWord@word 002D                                   ?_WriteAll_1621 0020  
                               ?_TMR0_Initialize 0070                                           _memset 0A1D  
                              ?_I2C_Receive_Byte 0070                                 ___awdiv@quotient 0022  
                                ___awmod@divisor 0073                                           _uch_sr 00BF  
                                ___awmod@counter 0020                                           _rtc_tm 00D6  
                                _Set_finish_flag 086E                                    _I2C_Send_Byte 0E4A  
                             ??_I2C_Receive_Byte 0073                          FLASH_ReadWord@flashAddr 0073  
                                      ?_I2C_Stop 0070                     ??_maxim_31856_write_register 0075  
                          I2C_Read_Buffer@Length 0077                         ADC_GetConversion@channel 0076  
                           __size_of_err_Display 002C                            __end_of_TMR0_CallBack 0B1C  
                                     bcd2bin@val 0077                       ??_maxim_clear_fault_status 0077  
                                 _Set_start_flag 0878                                _SYSTEM_Initialize 0923  
                                 ??_SendCmd_1621 0020                          __end_of__initialization 003B  
                                 ??_SendBit_1621 0074                                      _Key_Process 05A2  
                             ?_SYSTEM_Initialize 0070                                      ?_Tc_Display 0070  
                             Calculate_Time@temp 0041                              ___bmul@multiplicand 0073  
                              time_Display@F2129 00A8                                   __pcstackCOMMON 0070  
           tc_temperature_trans@temperature_temp 0055                                     __pidataBANK1 08A9  
                            ??_SYSTEM_Initialize 0074                             _tc_temperature_trans 003F  
                                      ?_TMR0_ISR 0070                      ??_maxim_31856_read_register 0074  
                               FLASH_WriteWord@i 0032              __size_of_maxim_31856_write_register 000D  
                                  ?_Save_process 0070                                   ?_I2C_Send_Byte 0070  
                  ??_maxim_31856_read_nregisters 0025                          ?_maxim_start_conversion 0070  
                              ?_maxim_31856_init 0070                                   _OPTION_REGbits 0095  
                          TMR0_ISR@CountCallBack 00AC                                  _temperature_int 0078  
                                     ??_I2C_Stop 0073                                    ??_Two_Display 0026  
                             ??_maxim_31856_init 0076                      FLASH_WriteBlock@GIEBitValue 0028  
                               Two_Display@F2123 00A0                             I2C_Receive_Byte@Data 0074  
                         __end_of_Set_start_flag 087E                              I2C_Read_Buffer@Flag 0022  
                      __end_of_SYSTEM_Initialize 0938                        __size_of_Write_Flash_head 002F  
                            I2C_Read_Buffer@buff 0076                          __end_of_Bq32k_Time_Init 0A1D  
                                     __pbssBANK0 0061                                       __pbssBANK1 00A0  
                                     __pbssBANK2 0120                                        ?_Key_Scan 0070  
                           __end_of_EUSART_Write 0898                                  __CFG_VCAPEN$OFF 0000  
                               ??_FVR_Initialize 0073                                       __pmaintext 0388  
                                        ?___bmul 0073                          __end_of_Set_finish_flag 0873  
                          ?_tc_temperature_trans 0070                                      _Record_flag 006A  
                                ??_WriteAll_1621 0023                                          ?___wmul 0073  
                                     ??_TMR0_ISR 0071                                   ??_Save_process 004D  
                                     __pintentry 0004                                          _BAUDCON 019F  
                                        ?_memset 0073                   __end_of_maxim_start_conversion 09E7  
                      __size_of_FLASH_WriteBlock 006B                          __size_of_ADC_Initialize 0008  
                                 _FLASH_ReadWord 099A                              __size_of_Tc_Display 00BE  
                 __size_of_one_temperature_trans 0048                    __end_of_one_temperature_trans 0E4A  
                                        _OSCSTAT 009A                         __size_of_Save_Write_time 0072  
                                        _SSP1ADD 0212                         __size_of_Save_Write_word 0018  
                      _maxim_31856_read_register 08EC                                  ?_Set_start_flag 0070  
           __size_of_maxim_31856_read_nregisters 0018                                       ??_Key_Scan 0073  
                                        _Dis_TAB 1000                                 _FLASH_EraseBlock 0A38  
                               ??_SPI_Initialize 0073                         __size_of_FLASH_WriteWord 0045  
                        __size_of_Calculate_Time 01A1                              __end_of_Two_Display 0C2E  
                      __size_of_SendDataBit_1621 0020                                        _I2C_Start 0968  
maxim_31856_read_nregisters@uch_register_address 0027                                        _CH1_state 00B2  
                                      _CH2_state 00B3                                          _bcd2bin 090E  
                                __size_of___bmul 0011                                    ?_time_Display 0070  
                                        ___awdiv 0EE7                                          ___awmod 0DBC  
                                __size_of___wmul 001E                                          ___lwdiv 0CCA  
                                        ___lwmod 0B72                                  ??_I2C_Send_Byte 0073  
                    __size_of_Write_Flash_finish 002F                                I2C_Send_Byte@Data 0074  
                         __end_of_FLASH_ReadWord 09B3                                  __size_of_memset 001B  
                       __size_of_I2C_Read_Buffer 0078                                          __ptext1 0784  
                                        __ptext2 0C61                                          __ptext3 0F39  
                                        __ptext4 0923                                          __ptext5 08DC  
                                        __ptext6 087E                                          __ptext7 0AB2  
                                        __ptext8 0873                                          __ptext9 086A  
                           __end_of_SendCmd_1621 0950                             SendDataBit_1621@data 0076  
                           __end_of_SendBit_1621 0A92               __end_of_maxim_31856_write_register 08CC  
                     _maxim_31856_write_register 08BF                            _OSCILLATOR_Initialize 0873  
                                 I2C_Send_Byte@i 0075                                 ___awmod@dividend 0075  
                                        _uch_cr0 007A                                          _uch_cr1 00BB  
                       ??_PIN_MANAGER_Initialize 0073                                          _uch_reg 00C0  
               __end_of_maxim_clear_fault_status 08DC                                ?_SPI_Exchange8bit 0070  
                          I2C_Send_Buffer@Length 0077                       __size_of_SYSTEM_Initialize 0015  
                                        clrloop0 088B                             end_of_initialization 003B  
                             ??_SPI_Exchange8bit 0073                             SPI_Exchange8bit@data 0073  
                               ?_Bq32k_Time_Init 0070                                          init_ram 0884  
                                        memset@c 0073                                          memset@n 0075  
                                        memset@p 0021                                          initloop 0885  
                                     ?_I2C_Start 0070                                _EUSART_Initialize 08B3  
                         ??_tc_temperature_trans 004D                               ?_EUSART_Initialize 0070  
                                 ??_time_Display 0030                                        _RCSTAbits 019D  
                               ?_Set_finish_flag 0070                            Serach_Flash_Head@data 0020  
                                   __pstringtext 1000                        FLASH_ReadWord@GIEBitValue 0075  
                                     _time_count 006C                                  ?_FLASH_ReadWord 0073  
                   __size_of_temperature_display 003D                              ??_EUSART_Initialize 0073  
                                   _display_buff 00DD                         __size_of_I2C_Send_Buffer 003B  
                               __CFG_FOSC$INTOSC 0000                     __size_of_temperature_process 0033  
                          __size_of_EUSART_Write 0008                                      _Two_Display 0BFD  
                              __size_of_I2C_Stop 0019                                 _Write_Flash_head 0BCE  
                            Bq32k_Time_Init@temp 0027                             __end_of_Save_process 0F9C  
                      __size_of_I2C_Receive_Byte 002A                             Key_Process@gKeyValue 005B  
                      __end_of_EUSART_Initialize 08BF                              Calculate_Time@temp1 0045  
                            Calculate_Time@temp2 0049                                ??_Save_Write_time 0035  
                                   ?_Key_Process 0070                                ??_Save_Write_word 0077  
                       ??_SPI_Exchange8bitBuffer 0020                                     ??_Tc_Display 0029  
                    __end_of_Bq32k_Rtc_Read_Time 1000                                FLASH_WriteBlock@i 0029  
                              ??_FLASH_WriteWord 0076                     tc_temperature_trans@var_time 0053  
      maxim_start_conversion@uch_conversion_mode 0020                                   __end_of___bmul 090E  
                                 __end_of___wmul 0A72                                     _EUSART_Write 0890  
                              __size_of_TMR0_ISR 001B                                   _ADC_Initialize 0898  
                               _FLASH_WriteBlock 0719                             Key_Process@data_temp 0059  
                         ?_OSCILLATOR_Initialize 0070                                   __end_of_memset 0A38  
                                 Tc_Display@data 002B                                 WriteAll_1621@cnt 0022  
                                  ??_err_Display 0026                              start_initialization 0015  
                       __size_of_TMR0_Initialize 0010                               __end_of_Tc_Display 050D  
                __size_of_PIN_MANAGER_Initialize 0022                                ??_I2C_Read_Buffer 0020  
                                 Two_Display@num 0027                                   _Calculate_Time 01E7  
                      __size_of_maxim_31856_init 0064                                 _SendDataBit_1621 0A92  
                                    ??_I2C_Start 0073                                __size_of_Key_Scan 0023  
                               _temperature_sign 00B7               __size_of_maxim_31856_read_register 0011  
                                SendBit_1621@cnt 0073                                         ??___bmul 0074  
              __size_of_maxim_clear_fault_status 0010                        ?_maxim_clear_fault_status 0070  
                                       ??___wmul 0077                            __size_of_SendCmd_1621 0018  
                          __size_of_SendBit_1621 0020                              I2C_Send_Buffer@Flag 0024  
                         __size_of_TMR0_CallBack 0025                           __end_of_ADC_Initialize 08A0  
                                    __pdataBANK1 00E1                              I2C_Send_Buffer@buff 0076  
                                       ??_memset 0077                      FLASH_EraseBlock@GIEBitValue 0075  
                       __end_of_FLASH_EraseBlock 0A54                                 ??_Set_start_flag 0073  
                                    __pbssCOMMON 0078                                  _CH1_temperature 0065  
                                      ___latbits 0003                                    __pcstackBANK0 0020  
                                  __pcstackBANK2 0160                             __end_of_time_Display 05A2  
                  SPI_Exchange8bitBuffer@dataOut 0075                           __end_of_Calculate_Time 0388  
                              ??_I2C_Send_Buffer 0020                              __end_of_err_Display 0B72  
                     __size_of_EUSART_Initialize 000C                               I2C_Read_Buffer@ADD 0021  
                                   _LongPressSec 0069                                Two_Display@number 002B  
                                   _SendCmd_1621 0938                                     _SendBit_1621 0A72  
                                      __pnvBANK1 00EB                  __size_of_SPI_Exchange8bitBuffer 0051  
                               ___lwdiv@dividend 0023                           _PIN_MANAGER_Initialize 0AB2  
                                    _MAX31856Sec 00B6                __end_of_maxim_31856_read_register 08FD  
                                       ?_bcd2bin 0070                                         ?___awdiv 0073  
                                       ?___awmod 0073              __end_of_maxim_31856_read_nregisters 0968  
                    _maxim_31856_read_nregisters 0950                                         ?___lwdiv 0021  
                                       ?___lwmod 0073                                  ?_ADC_Initialize 0070  
                              SendDataBit_1621@i 0077                            __end_of_WriteAll_1621 0CCA  
                   ??_INTERRUPT_InterruptManager 0072                      ?_maxim_31856_write_register 0074  
                                       _I2C_Stop 0981                            __size_of_Save_process 0063  
                                _CH2_temperature 0067                                 I2C_Send_Buffer@i 0023  
                               ___lwdiv@quotient 0027                                    _TMR0_CallBack 0AF7  
                                ?_Calculate_Time 0070                              _temperature_decimal 006B  
                          _one_temperature_trans 0E02                                 _I2C_Receive_Byte 0B1C  
                            SendDataBit_1621@cnt 0073                         FLASH_WriteWord@flashAddr 002A  
                                 err_Display@num 0027                   FLASH_WriteBlock@blockStartAddr 0026  
          maxim_31856_read_nregisters@uch_nBytes 0024                              _temperature_display 0D3A  
                              ??_TMR0_Initialize 0073                                   ___wmul@product 0020  
                                      clear_ram0 088A                                        _uch_ltcbh 006D  
                                      _uch_ltcbl 00BC                                        _uch_ltcbm 00BD  
                           __size_of_Key_Process 008D              __size_of_INTERRUPT_InterruptManager 000F  
                            _temperature_process 0C2E                                         _PIR1bits 0011  
                      FLASH_EraseBlock@startAddr 0073                                 ??_FLASH_ReadWord 0075  
                      __size_of_SPI_Exchange8bit 0009                       __end_of_Write_Flash_finish 0BCE  
                                       _SSP1CON1 0215                                         _TMR0_ISR 09E7  
                       __end_of_Write_Flash_head 0BFD                                         _SSP1STAT 0214  
                                   _Save_process 0F39                             ?_temperature_display 0070  
                          __end_of_I2C_Send_Byte 0E96                                       _ADCON0bits 009D  
                              ___wmul@multiplier 0073                          __size_of_FVR_Initialize 0004  
                         _SPI_Exchange8bitBuffer 0E96                                   _Cur_Save_Index 00AE  
                                    _err_Display 0B46                              Save_Write_word@data 0033  
                           ?_temperature_process 0070                                  _Save_Write_time 06A7  
                                _Save_Write_word 07E8                                     ?_Two_Display 0070  
                                 ?_TMR0_CallBack 0070                                  _FLASH_WriteWord 0D77  
                                       _Key_Scan 0AD4              maxim_31856_read_nregisters@uch_buff 0023  
                       __end_of_FLASH_WriteBlock 0784                                 _maxim_31856_init 0784  
                              _Serach_Flash_Head 0C61                         __size_of_Bq32k_Time_Init 001B  
                             ?_Serach_Flash_Head 0070                                _ADC_GetConversion 09B3  
                       ??_maxim_start_conversion 0077                               I2C_Send_Buffer@ADD 0022  
                  __size_of_tc_temperature_trans 01A8                          __size_of_SPI_Initialize 0006  
                               __size_of_bcd2bin 0015                          ??_OSCILLATOR_Initialize 0073  
                             Serach_Flash_Head@i 0022                               ?_ADC_GetConversion 0073  
                               __size_of___awdiv 0052                            ??_temperature_display 0057  
                               __size_of___awmod 0046                                  _I2C_Read_Buffer 062F  
                               __size_of___lwdiv 0035                                 __size_of___lwmod 002D  
                            ??_Serach_Flash_Head 0076                     SPI_Exchange8bitBuffer@dataIn 0076  
                   SPI_Exchange8bitBuffer@bufLen 0074                                 err_Display@F2126 00A4  
                       __end_of_SendDataBit_1621 0AB2                         __size_of_Set_finish_flag 0005  
                          __size_of_time_Display 0095                              ??_ADC_GetConversion 0075  
                          ??_temperature_process 0078                                  ___lwdiv@divisor 0021  
                                ___lwdiv@counter 0026                                         __ptext10 08B3  
                                       __ptext11 0898                                         __ptext20 0A54  
                                       __ptext12 05A2                                         __ptext21 0BCE  
                                       __ptext13 0C2E                                         __ptext30 090E  
                                       __ptext22 0B9F                                         __ptext14 050D  
                                       __ptext31 08FD                                         __ptext23 06A7  
                                       __ptext15 0DBC                                         __ptext40 0E02  
                                       __ptext32 062F                                         __ptext24 07E8  
                                       __ptext16 0EE7                                         __ptext41 09CD  
                                       __ptext33 0B1C                                         __ptext25 0D77  
                                       __ptext17 0D3A                                         __ptext50 0878  
                                       __ptext42 08BF                                         __ptext34 08CC  
                                       __ptext26 0719                                         __ptext18 003F  
                                       __ptext51 086E                                         __ptext43 08EC  
                                       __ptext35 0B46                                         __ptext27 0A38  
                                       __ptext19 01E7                                         __ptext60 0E4A  
                                       __ptext52 0938                                         __ptext44 0950  
                                       __ptext36 044F                                         __ptext28 099A  
                                       __ptext61 09B3                                         __ptext53 0A72  
                                       __ptext45 0E96                                         __ptext37 0A1D  
                                       __ptext29 0F9C                                         __ptext54 0AD4  
                                       __ptext46 08A0                                         __ptext38 0B72  
                                       __ptext63 09E7                                         __ptext55 0890  
                                       __ptext47 0BFD                                         __ptext39 0CCA  
                                       __ptext64 0AF7                                         __ptext56 0A02  
                                       __ptext48 0C95                                         __ptext57 0CFF  
                                       __ptext49 0A92                                         __ptext58 0981  
                                       __ptext59 0968                           ?_one_temperature_trans 0070  
                                   _SSP1CON1bits 0215                            FLASH_WriteWord@ramBuf 002C  
                          FLASH_WriteWord@offset 002F                        __end_of_Serach_Flash_Head 0C95  
                                  __size_of_main 00C7       maxim_31856_read_register@uch_register_data 0076  
                      __end_of_ADC_GetConversion 09CD                                         _uch_cjth 00B9  
                                       _uch_cjtl 00BA                                         _uch_mask 00BE  
                           Save_process@var_time 004F                                         int$flags 007E  
                                   _time_Display 050D                                         _tmr_flag 00B8  
             __end_of_INTERRUPT_InterruptManager 0013                       _INTERRUPT_InterruptManager 0004  
                   __size_of_Bq32k_Rtc_Read_Time 0064                                     _SSP1STATbits 0214  
                        __end_of_Save_Write_time 0719                          __end_of_Save_Write_word 0800  
                                _I2C_Send_Buffer 0CFF                                ?_FLASH_EraseBlock 0073  
                             ??_FLASH_EraseBlock 0075                                       _INTCONbits 000B  
                        __end_of_FLASH_WriteWord 0DBC                                  ??_TMR0_CallBack 0070  
                                     _FVRCONbits 0117                                  Key_Scan@Key_val 0075  
                                  SendBit_1621@i 0077                                         memset@p1 0020  
                                       intlevel1 0000                                       _PMCON1bits 0195  
                               ___lwmod@dividend 0075                          ?_PIN_MANAGER_Initialize 0070  
                              __CFG_CLKOUTEN$OFF 0000               SPI_Exchange8bitBuffer@bytesWritten 0077  
                               ??_ADC_Initialize 0073                          __end_of_I2C_Read_Buffer 06A7  
                               _SPI_Exchange8bit 08A0                  __size_of_maxim_start_conversion 001A  
                       __end_of_I2C_Receive_Byte 0B46                                ??_Bq32k_Time_Init 0025  
                                 _FVR_Initialize 086A                                     _rtc_save_ch1 00C8  
                                   _rtc_save_ch2 00CF                                       _OPTION_REG 0095  
                               ??_Calculate_Time 0037                                  ___lwmod@divisor 0073  
                                _TMR0_Initialize 08DC                                  ___lwmod@counter 0020  
       tc_temperature_trans@temperature_absolute 0051                                ??_Set_finish_flag 0073  
                             EUSART_Write@txData 0073                             __size_of_Two_Display 0031  
                 __end_of_PIN_MANAGER_Initialize 0AD4                       __size_of_Serach_Flash_Head 0034  
                           Bq32k_Time_Init@F2018 00E1                       __size_of_ADC_GetConversion 001A  
                       _maxim_clear_fault_status 08CC  
