

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jul 06 10:22:59 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	dabs	1,0x7E,2
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020D                     	;# 
   147  0210                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  0FE4                     	;# 
   175  0FE5                     	;# 
   176  0FE6                     	;# 
   177  0FE7                     	;# 
   178  0FE8                     	;# 
   179  0FE9                     	;# 
   180  0FEA                     	;# 
   181  0FEB                     	;# 
   182  0FED                     	;# 
   183  0FEE                     	;# 
   184  0FEF                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  018E                     	;# 
   237  0191                     	;# 
   238  0191                     	;# 
   239  0192                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0199                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020D                     	;# 
   258  0210                     	;# 
   259  0211                     	;# 
   260  0211                     	;# 
   261  0212                     	;# 
   262  0212                     	;# 
   263  0213                     	;# 
   264  0213                     	;# 
   265  0214                     	;# 
   266  0214                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0216                     	;# 
   271  0216                     	;# 
   272  0217                     	;# 
   273  0217                     	;# 
   274  0291                     	;# 
   275  0291                     	;# 
   276  0292                     	;# 
   277  0293                     	;# 
   278  0298                     	;# 
   279  0298                     	;# 
   280  0299                     	;# 
   281  029A                     	;# 
   282  0394                     	;# 
   283  0395                     	;# 
   284  0396                     	;# 
   285  0FE4                     	;# 
   286  0FE5                     	;# 
   287  0FE6                     	;# 
   288  0FE7                     	;# 
   289  0FE8                     	;# 
   290  0FE9                     	;# 
   291  0FEA                     	;# 
   292  0FEB                     	;# 
   293  0FED                     	;# 
   294  0FEE                     	;# 
   295  0FEF                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  011D                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  018E                     	;# 
   348  0191                     	;# 
   349  0191                     	;# 
   350  0192                     	;# 
   351  0193                     	;# 
   352  0193                     	;# 
   353  0194                     	;# 
   354  0195                     	;# 
   355  0196                     	;# 
   356  0197                     	;# 
   357  0199                     	;# 
   358  019A                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019B                     	;# 
   362  019B                     	;# 
   363  019C                     	;# 
   364  019C                     	;# 
   365  019D                     	;# 
   366  019E                     	;# 
   367  019F                     	;# 
   368  020D                     	;# 
   369  0210                     	;# 
   370  0211                     	;# 
   371  0211                     	;# 
   372  0212                     	;# 
   373  0212                     	;# 
   374  0213                     	;# 
   375  0213                     	;# 
   376  0214                     	;# 
   377  0214                     	;# 
   378  0215                     	;# 
   379  0215                     	;# 
   380  0215                     	;# 
   381  0216                     	;# 
   382  0216                     	;# 
   383  0217                     	;# 
   384  0217                     	;# 
   385  0291                     	;# 
   386  0291                     	;# 
   387  0292                     	;# 
   388  0293                     	;# 
   389  0298                     	;# 
   390  0298                     	;# 
   391  0299                     	;# 
   392  029A                     	;# 
   393  0394                     	;# 
   394  0395                     	;# 
   395  0396                     	;# 
   396  0FE4                     	;# 
   397  0FE5                     	;# 
   398  0FE6                     	;# 
   399  0FE7                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEF                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  011D                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  018E                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0197                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020D                     	;# 
   480  0210                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0291                     	;# 
   497  0291                     	;# 
   498  0292                     	;# 
   499  0293                     	;# 
   500  0298                     	;# 
   501  0298                     	;# 
   502  0299                     	;# 
   503  029A                     	;# 
   504  0394                     	;# 
   505  0395                     	;# 
   506  0396                     	;# 
   507  0FE4                     	;# 
   508  0FE5                     	;# 
   509  0FE6                     	;# 
   510  0FE7                     	;# 
   511  0FE8                     	;# 
   512  0FE9                     	;# 
   513  0FEA                     	;# 
   514  0FEB                     	;# 
   515  0FED                     	;# 
   516  0FEE                     	;# 
   517  0FEF                     	;# 
   518  0000                     	;# 
   519  0001                     	;# 
   520  0002                     	;# 
   521  0003                     	;# 
   522  0004                     	;# 
   523  0005                     	;# 
   524  0006                     	;# 
   525  0007                     	;# 
   526  0008                     	;# 
   527  0009                     	;# 
   528  000A                     	;# 
   529  000B                     	;# 
   530  000C                     	;# 
   531  000D                     	;# 
   532  000E                     	;# 
   533  0010                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  008C                     	;# 
   546  008D                     	;# 
   547  008E                     	;# 
   548  0090                     	;# 
   549  0091                     	;# 
   550  0092                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  0116                     	;# 
   565  0117                     	;# 
   566  011D                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  018E                     	;# 
   570  0191                     	;# 
   571  0191                     	;# 
   572  0192                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0197                     	;# 
   579  0199                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019C                     	;# 
   586  019C                     	;# 
   587  019D                     	;# 
   588  019E                     	;# 
   589  019F                     	;# 
   590  020D                     	;# 
   591  0210                     	;# 
   592  0211                     	;# 
   593  0211                     	;# 
   594  0212                     	;# 
   595  0212                     	;# 
   596  0213                     	;# 
   597  0213                     	;# 
   598  0214                     	;# 
   599  0214                     	;# 
   600  0215                     	;# 
   601  0215                     	;# 
   602  0215                     	;# 
   603  0216                     	;# 
   604  0216                     	;# 
   605  0217                     	;# 
   606  0217                     	;# 
   607  0291                     	;# 
   608  0291                     	;# 
   609  0292                     	;# 
   610  0293                     	;# 
   611  0298                     	;# 
   612  0298                     	;# 
   613  0299                     	;# 
   614  029A                     	;# 
   615  0394                     	;# 
   616  0395                     	;# 
   617  0396                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0016                     	;# 
   650  0017                     	;# 
   651  0018                     	;# 
   652  0019                     	;# 
   653  001A                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0092                     	;# 
   662  0095                     	;# 
   663  0096                     	;# 
   664  0097                     	;# 
   665  0099                     	;# 
   666  009A                     	;# 
   667  009B                     	;# 
   668  009B                     	;# 
   669  009C                     	;# 
   670  009D                     	;# 
   671  009E                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  0116                     	;# 
   676  0117                     	;# 
   677  011D                     	;# 
   678  018C                     	;# 
   679  018D                     	;# 
   680  018E                     	;# 
   681  0191                     	;# 
   682  0191                     	;# 
   683  0192                     	;# 
   684  0193                     	;# 
   685  0193                     	;# 
   686  0194                     	;# 
   687  0195                     	;# 
   688  0196                     	;# 
   689  0197                     	;# 
   690  0199                     	;# 
   691  019A                     	;# 
   692  019B                     	;# 
   693  019B                     	;# 
   694  019B                     	;# 
   695  019B                     	;# 
   696  019C                     	;# 
   697  019C                     	;# 
   698  019D                     	;# 
   699  019E                     	;# 
   700  019F                     	;# 
   701  020D                     	;# 
   702  0210                     	;# 
   703  0211                     	;# 
   704  0211                     	;# 
   705  0212                     	;# 
   706  0212                     	;# 
   707  0213                     	;# 
   708  0213                     	;# 
   709  0214                     	;# 
   710  0214                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0216                     	;# 
   715  0216                     	;# 
   716  0217                     	;# 
   717  0217                     	;# 
   718  0291                     	;# 
   719  0291                     	;# 
   720  0292                     	;# 
   721  0293                     	;# 
   722  0298                     	;# 
   723  0298                     	;# 
   724  0299                     	;# 
   725  029A                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEB                     	;# 
   737  0FED                     	;# 
   738  0FEE                     	;# 
   739  0FEF                     	;# 
   740  0000                     	;# 
   741  0001                     	;# 
   742  0002                     	;# 
   743  0003                     	;# 
   744  0004                     	;# 
   745  0005                     	;# 
   746  0006                     	;# 
   747  0007                     	;# 
   748  0008                     	;# 
   749  0009                     	;# 
   750  000A                     	;# 
   751  000B                     	;# 
   752  000C                     	;# 
   753  000D                     	;# 
   754  000E                     	;# 
   755  0010                     	;# 
   756  0011                     	;# 
   757  0012                     	;# 
   758  0015                     	;# 
   759  0016                     	;# 
   760  0016                     	;# 
   761  0017                     	;# 
   762  0018                     	;# 
   763  0019                     	;# 
   764  001A                     	;# 
   765  001B                     	;# 
   766  001C                     	;# 
   767  008C                     	;# 
   768  008D                     	;# 
   769  008E                     	;# 
   770  0090                     	;# 
   771  0091                     	;# 
   772  0092                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  0116                     	;# 
   787  0117                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  018D                     	;# 
   791  018E                     	;# 
   792  0191                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0193                     	;# 
   796  0193                     	;# 
   797  0194                     	;# 
   798  0195                     	;# 
   799  0196                     	;# 
   800  0197                     	;# 
   801  0199                     	;# 
   802  019A                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019C                     	;# 
   808  019C                     	;# 
   809  019D                     	;# 
   810  019E                     	;# 
   811  019F                     	;# 
   812  020D                     	;# 
   813  0210                     	;# 
   814  0211                     	;# 
   815  0211                     	;# 
   816  0212                     	;# 
   817  0212                     	;# 
   818  0213                     	;# 
   819  0213                     	;# 
   820  0214                     	;# 
   821  0214                     	;# 
   822  0215                     	;# 
   823  0215                     	;# 
   824  0215                     	;# 
   825  0216                     	;# 
   826  0216                     	;# 
   827  0217                     	;# 
   828  0217                     	;# 
   829  0291                     	;# 
   830  0291                     	;# 
   831  0292                     	;# 
   832  0293                     	;# 
   833  0298                     	;# 
   834  0298                     	;# 
   835  0299                     	;# 
   836  029A                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0FE4                     	;# 
   841  0FE5                     	;# 
   842  0FE6                     	;# 
   843  0FE7                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEF                     	;# 
   851  0000                     	;# 
   852  0001                     	;# 
   853  0002                     	;# 
   854  0003                     	;# 
   855  0004                     	;# 
   856  0005                     	;# 
   857  0006                     	;# 
   858  0007                     	;# 
   859  0008                     	;# 
   860  0009                     	;# 
   861  000A                     	;# 
   862  000B                     	;# 
   863  000C                     	;# 
   864  000D                     	;# 
   865  000E                     	;# 
   866  0010                     	;# 
   867  0011                     	;# 
   868  0012                     	;# 
   869  0015                     	;# 
   870  0016                     	;# 
   871  0016                     	;# 
   872  0017                     	;# 
   873  0018                     	;# 
   874  0019                     	;# 
   875  001A                     	;# 
   876  001B                     	;# 
   877  001C                     	;# 
   878  008C                     	;# 
   879  008D                     	;# 
   880  008E                     	;# 
   881  0090                     	;# 
   882  0091                     	;# 
   883  0092                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0099                     	;# 
   888  009A                     	;# 
   889  009B                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  010C                     	;# 
   895  010D                     	;# 
   896  010E                     	;# 
   897  0116                     	;# 
   898  0117                     	;# 
   899  011D                     	;# 
   900  018C                     	;# 
   901  018D                     	;# 
   902  018E                     	;# 
   903  0191                     	;# 
   904  0191                     	;# 
   905  0192                     	;# 
   906  0193                     	;# 
   907  0193                     	;# 
   908  0194                     	;# 
   909  0195                     	;# 
   910  0196                     	;# 
   911  0197                     	;# 
   912  0199                     	;# 
   913  019A                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019C                     	;# 
   919  019C                     	;# 
   920  019D                     	;# 
   921  019E                     	;# 
   922  019F                     	;# 
   923  020D                     	;# 
   924  0210                     	;# 
   925  0211                     	;# 
   926  0211                     	;# 
   927  0212                     	;# 
   928  0212                     	;# 
   929  0213                     	;# 
   930  0213                     	;# 
   931  0214                     	;# 
   932  0214                     	;# 
   933  0215                     	;# 
   934  0215                     	;# 
   935  0215                     	;# 
   936  0216                     	;# 
   937  0216                     	;# 
   938  0217                     	;# 
   939  0217                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0298                     	;# 
   945  0298                     	;# 
   946  0299                     	;# 
   947  029A                     	;# 
   948  0394                     	;# 
   949  0395                     	;# 
   950  0396                     	;# 
   951  0FE4                     	;# 
   952  0FE5                     	;# 
   953  0FE6                     	;# 
   954  0FE7                     	;# 
   955  0FE8                     	;# 
   956  0FE9                     	;# 
   957  0FEA                     	;# 
   958  0FEB                     	;# 
   959  0FED                     	;# 
   960  0FEE                     	;# 
   961  0FEF                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0008                     	;# 
   971  0009                     	;# 
   972  000A                     	;# 
   973  000B                     	;# 
   974  000C                     	;# 
   975  000D                     	;# 
   976  000E                     	;# 
   977  0010                     	;# 
   978  0011                     	;# 
   979  0012                     	;# 
   980  0015                     	;# 
   981  0016                     	;# 
   982  0016                     	;# 
   983  0017                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  001B                     	;# 
   988  001C                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0095                     	;# 
   996  0096                     	;# 
   997  0097                     	;# 
   998  0099                     	;# 
   999  009A                     	;# 
  1000  009B                     	;# 
  1001  009B                     	;# 
  1002  009C                     	;# 
  1003  009D                     	;# 
  1004  009E                     	;# 
  1005  010C                     	;# 
  1006  010D                     	;# 
  1007  010E                     	;# 
  1008  0116                     	;# 
  1009  0117                     	;# 
  1010  011D                     	;# 
  1011  018C                     	;# 
  1012  018D                     	;# 
  1013  018E                     	;# 
  1014  0191                     	;# 
  1015  0191                     	;# 
  1016  0192                     	;# 
  1017  0193                     	;# 
  1018  0193                     	;# 
  1019  0194                     	;# 
  1020  0195                     	;# 
  1021  0196                     	;# 
  1022  0197                     	;# 
  1023  0199                     	;# 
  1024  019A                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019C                     	;# 
  1030  019C                     	;# 
  1031  019D                     	;# 
  1032  019E                     	;# 
  1033  019F                     	;# 
  1034  020D                     	;# 
  1035  0210                     	;# 
  1036  0211                     	;# 
  1037  0211                     	;# 
  1038  0212                     	;# 
  1039  0212                     	;# 
  1040  0213                     	;# 
  1041  0213                     	;# 
  1042  0214                     	;# 
  1043  0214                     	;# 
  1044  0215                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0216                     	;# 
  1048  0216                     	;# 
  1049  0217                     	;# 
  1050  0217                     	;# 
  1051  0291                     	;# 
  1052  0291                     	;# 
  1053  0292                     	;# 
  1054  0293                     	;# 
  1055  0298                     	;# 
  1056  0298                     	;# 
  1057  0299                     	;# 
  1058  029A                     	;# 
  1059  0394                     	;# 
  1060  0395                     	;# 
  1061  0396                     	;# 
  1062  0FE4                     	;# 
  1063  0FE5                     	;# 
  1064  0FE6                     	;# 
  1065  0FE7                     	;# 
  1066  0FE8                     	;# 
  1067  0FE9                     	;# 
  1068  0FEA                     	;# 
  1069  0FEB                     	;# 
  1070  0FED                     	;# 
  1071  0FEE                     	;# 
  1072  0FEF                     	;# 
  1073  0000                     	;# 
  1074  0001                     	;# 
  1075  0002                     	;# 
  1076  0003                     	;# 
  1077  0004                     	;# 
  1078  0005                     	;# 
  1079  0006                     	;# 
  1080  0007                     	;# 
  1081  0008                     	;# 
  1082  0009                     	;# 
  1083  000A                     	;# 
  1084  000B                     	;# 
  1085  000C                     	;# 
  1086  000D                     	;# 
  1087  000E                     	;# 
  1088  0010                     	;# 
  1089  0011                     	;# 
  1090  0012                     	;# 
  1091  0015                     	;# 
  1092  0016                     	;# 
  1093  0016                     	;# 
  1094  0017                     	;# 
  1095  0018                     	;# 
  1096  0019                     	;# 
  1097  001A                     	;# 
  1098  001B                     	;# 
  1099  001C                     	;# 
  1100  008C                     	;# 
  1101  008D                     	;# 
  1102  008E                     	;# 
  1103  0090                     	;# 
  1104  0091                     	;# 
  1105  0092                     	;# 
  1106  0095                     	;# 
  1107  0096                     	;# 
  1108  0097                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  0116                     	;# 
  1120  0117                     	;# 
  1121  011D                     	;# 
  1122  018C                     	;# 
  1123  018D                     	;# 
  1124  018E                     	;# 
  1125  0191                     	;# 
  1126  0191                     	;# 
  1127  0192                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0194                     	;# 
  1131  0195                     	;# 
  1132  0196                     	;# 
  1133  0197                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019C                     	;# 
  1141  019C                     	;# 
  1142  019D                     	;# 
  1143  019E                     	;# 
  1144  019F                     	;# 
  1145  020D                     	;# 
  1146  0210                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0291                     	;# 
  1163  0291                     	;# 
  1164  0292                     	;# 
  1165  0293                     	;# 
  1166  0298                     	;# 
  1167  0298                     	;# 
  1168  0299                     	;# 
  1169  029A                     	;# 
  1170  0394                     	;# 
  1171  0395                     	;# 
  1172  0396                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  000E                     	;# 
  1199  0010                     	;# 
  1200  0011                     	;# 
  1201  0012                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  008E                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0097                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  0116                     	;# 
  1231  0117                     	;# 
  1232  011D                     	;# 
  1233  018C                     	;# 
  1234  018D                     	;# 
  1235  018E                     	;# 
  1236  0191                     	;# 
  1237  0191                     	;# 
  1238  0192                     	;# 
  1239  0193                     	;# 
  1240  0193                     	;# 
  1241  0194                     	;# 
  1242  0195                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019C                     	;# 
  1252  019C                     	;# 
  1253  019D                     	;# 
  1254  019E                     	;# 
  1255  019F                     	;# 
  1256  020D                     	;# 
  1257  0210                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0213                     	;# 
  1264  0214                     	;# 
  1265  0214                     	;# 
  1266  0215                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0216                     	;# 
  1270  0216                     	;# 
  1271  0217                     	;# 
  1272  0217                     	;# 
  1273  0291                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0293                     	;# 
  1277  0298                     	;# 
  1278  0298                     	;# 
  1279  0299                     	;# 
  1280  029A                     	;# 
  1281  0394                     	;# 
  1282  0395                     	;# 
  1283  0396                     	;# 
  1284  0FE4                     	;# 
  1285  0FE5                     	;# 
  1286  0FE6                     	;# 
  1287  0FE7                     	;# 
  1288  0FE8                     	;# 
  1289  0FE9                     	;# 
  1290  0FEA                     	;# 
  1291  0FEB                     	;# 
  1292  0FED                     	;# 
  1293  0FEE                     	;# 
  1294  0FEF                     	;# 
  1295  0000                     	;# 
  1296  0001                     	;# 
  1297  0002                     	;# 
  1298  0003                     	;# 
  1299  0004                     	;# 
  1300  0005                     	;# 
  1301  0006                     	;# 
  1302  0007                     	;# 
  1303  0008                     	;# 
  1304  0009                     	;# 
  1305  000A                     	;# 
  1306  000B                     	;# 
  1307  000C                     	;# 
  1308  000D                     	;# 
  1309  000E                     	;# 
  1310  0010                     	;# 
  1311  0011                     	;# 
  1312  0012                     	;# 
  1313  0015                     	;# 
  1314  0016                     	;# 
  1315  0016                     	;# 
  1316  0017                     	;# 
  1317  0018                     	;# 
  1318  0019                     	;# 
  1319  001A                     	;# 
  1320  001B                     	;# 
  1321  001C                     	;# 
  1322  008C                     	;# 
  1323  008D                     	;# 
  1324  008E                     	;# 
  1325  0090                     	;# 
  1326  0091                     	;# 
  1327  0092                     	;# 
  1328  0095                     	;# 
  1329  0096                     	;# 
  1330  0097                     	;# 
  1331  0099                     	;# 
  1332  009A                     	;# 
  1333  009B                     	;# 
  1334  009B                     	;# 
  1335  009C                     	;# 
  1336  009D                     	;# 
  1337  009E                     	;# 
  1338  010C                     	;# 
  1339  010D                     	;# 
  1340  010E                     	;# 
  1341  0116                     	;# 
  1342  0117                     	;# 
  1343  011D                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  0191                     	;# 
  1348  0191                     	;# 
  1349  0192                     	;# 
  1350  0193                     	;# 
  1351  0193                     	;# 
  1352  0194                     	;# 
  1353  0195                     	;# 
  1354  0196                     	;# 
  1355  0197                     	;# 
  1356  0199                     	;# 
  1357  019A                     	;# 
  1358  019B                     	;# 
  1359  019B                     	;# 
  1360  019B                     	;# 
  1361  019B                     	;# 
  1362  019C                     	;# 
  1363  019C                     	;# 
  1364  019D                     	;# 
  1365  019E                     	;# 
  1366  019F                     	;# 
  1367  020D                     	;# 
  1368  0210                     	;# 
  1369  0211                     	;# 
  1370  0211                     	;# 
  1371  0212                     	;# 
  1372  0212                     	;# 
  1373  0213                     	;# 
  1374  0213                     	;# 
  1375  0214                     	;# 
  1376  0214                     	;# 
  1377  0215                     	;# 
  1378  0215                     	;# 
  1379  0215                     	;# 
  1380  0216                     	;# 
  1381  0216                     	;# 
  1382  0217                     	;# 
  1383  0217                     	;# 
  1384  0291                     	;# 
  1385  0291                     	;# 
  1386  0292                     	;# 
  1387  0293                     	;# 
  1388  0298                     	;# 
  1389  0298                     	;# 
  1390  0299                     	;# 
  1391  029A                     	;# 
  1392  0394                     	;# 
  1393  0395                     	;# 
  1394  0396                     	;# 
  1395  0FE4                     	;# 
  1396  0FE5                     	;# 
  1397  0FE6                     	;# 
  1398  0FE7                     	;# 
  1399  0FE8                     	;# 
  1400  0FE9                     	;# 
  1401  0FEA                     	;# 
  1402  0FEB                     	;# 
  1403  0FED                     	;# 
  1404  0FEE                     	;# 
  1405  0FEF                     	;# 
  1406  0000                     	;# 
  1407  0001                     	;# 
  1408  0002                     	;# 
  1409  0003                     	;# 
  1410  0004                     	;# 
  1411  0005                     	;# 
  1412  0006                     	;# 
  1413  0007                     	;# 
  1414  0008                     	;# 
  1415  0009                     	;# 
  1416  000A                     	;# 
  1417  000B                     	;# 
  1418  000C                     	;# 
  1419  000D                     	;# 
  1420  000E                     	;# 
  1421  0010                     	;# 
  1422  0011                     	;# 
  1423  0012                     	;# 
  1424  0015                     	;# 
  1425  0016                     	;# 
  1426  0016                     	;# 
  1427  0017                     	;# 
  1428  0018                     	;# 
  1429  0019                     	;# 
  1430  001A                     	;# 
  1431  001B                     	;# 
  1432  001C                     	;# 
  1433  008C                     	;# 
  1434  008D                     	;# 
  1435  008E                     	;# 
  1436  0090                     	;# 
  1437  0091                     	;# 
  1438  0092                     	;# 
  1439  0095                     	;# 
  1440  0096                     	;# 
  1441  0097                     	;# 
  1442  0099                     	;# 
  1443  009A                     	;# 
  1444  009B                     	;# 
  1445  009B                     	;# 
  1446  009C                     	;# 
  1447  009D                     	;# 
  1448  009E                     	;# 
  1449  010C                     	;# 
  1450  010D                     	;# 
  1451  010E                     	;# 
  1452  0116                     	;# 
  1453  0117                     	;# 
  1454  011D                     	;# 
  1455  018C                     	;# 
  1456  018D                     	;# 
  1457  018E                     	;# 
  1458  0191                     	;# 
  1459  0191                     	;# 
  1460  0192                     	;# 
  1461  0193                     	;# 
  1462  0193                     	;# 
  1463  0194                     	;# 
  1464  0195                     	;# 
  1465  0196                     	;# 
  1466  0197                     	;# 
  1467  0199                     	;# 
  1468  019A                     	;# 
  1469  019B                     	;# 
  1470  019B                     	;# 
  1471  019B                     	;# 
  1472  019B                     	;# 
  1473  019C                     	;# 
  1474  019C                     	;# 
  1475  019D                     	;# 
  1476  019E                     	;# 
  1477  019F                     	;# 
  1478  020D                     	;# 
  1479  0210                     	;# 
  1480  0211                     	;# 
  1481  0211                     	;# 
  1482  0212                     	;# 
  1483  0212                     	;# 
  1484  0213                     	;# 
  1485  0213                     	;# 
  1486  0214                     	;# 
  1487  0214                     	;# 
  1488  0215                     	;# 
  1489  0215                     	;# 
  1490  0215                     	;# 
  1491  0216                     	;# 
  1492  0216                     	;# 
  1493  0217                     	;# 
  1494  0217                     	;# 
  1495  0291                     	;# 
  1496  0291                     	;# 
  1497  0292                     	;# 
  1498  0293                     	;# 
  1499  0298                     	;# 
  1500  0298                     	;# 
  1501  0299                     	;# 
  1502  029A                     	;# 
  1503  0394                     	;# 
  1504  0395                     	;# 
  1505  0396                     	;# 
  1506  0FE4                     	;# 
  1507  0FE5                     	;# 
  1508  0FE6                     	;# 
  1509  0FE7                     	;# 
  1510  0FE8                     	;# 
  1511  0FE9                     	;# 
  1512  0FEA                     	;# 
  1513  0FEB                     	;# 
  1514  0FED                     	;# 
  1515  0FEE                     	;# 
  1516  0FEF                     	;# 
  1517  0000                     	;# 
  1518  0001                     	;# 
  1519  0002                     	;# 
  1520  0003                     	;# 
  1521  0004                     	;# 
  1522  0005                     	;# 
  1523  0006                     	;# 
  1524  0007                     	;# 
  1525  0008                     	;# 
  1526  0009                     	;# 
  1527  000A                     	;# 
  1528  000B                     	;# 
  1529  000C                     	;# 
  1530  000D                     	;# 
  1531  000E                     	;# 
  1532  0010                     	;# 
  1533  0011                     	;# 
  1534  0012                     	;# 
  1535  0015                     	;# 
  1536  0016                     	;# 
  1537  0016                     	;# 
  1538  0017                     	;# 
  1539  0018                     	;# 
  1540  0019                     	;# 
  1541  001A                     	;# 
  1542  001B                     	;# 
  1543  001C                     	;# 
  1544  008C                     	;# 
  1545  008D                     	;# 
  1546  008E                     	;# 
  1547  0090                     	;# 
  1548  0091                     	;# 
  1549  0092                     	;# 
  1550  0095                     	;# 
  1551  0096                     	;# 
  1552  0097                     	;# 
  1553  0099                     	;# 
  1554  009A                     	;# 
  1555  009B                     	;# 
  1556  009B                     	;# 
  1557  009C                     	;# 
  1558  009D                     	;# 
  1559  009E                     	;# 
  1560  010C                     	;# 
  1561  010D                     	;# 
  1562  010E                     	;# 
  1563  0116                     	;# 
  1564  0117                     	;# 
  1565  011D                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  018E                     	;# 
  1569  0191                     	;# 
  1570  0191                     	;# 
  1571  0192                     	;# 
  1572  0193                     	;# 
  1573  0193                     	;# 
  1574  0194                     	;# 
  1575  0195                     	;# 
  1576  0196                     	;# 
  1577  0197                     	;# 
  1578  0199                     	;# 
  1579  019A                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019B                     	;# 
  1584  019C                     	;# 
  1585  019C                     	;# 
  1586  019D                     	;# 
  1587  019E                     	;# 
  1588  019F                     	;# 
  1589  020D                     	;# 
  1590  0210                     	;# 
  1591  0211                     	;# 
  1592  0211                     	;# 
  1593  0212                     	;# 
  1594  0212                     	;# 
  1595  0213                     	;# 
  1596  0213                     	;# 
  1597  0214                     	;# 
  1598  0214                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0216                     	;# 
  1603  0216                     	;# 
  1604  0217                     	;# 
  1605  0217                     	;# 
  1606  0291                     	;# 
  1607  0291                     	;# 
  1608  0292                     	;# 
  1609  0293                     	;# 
  1610  0298                     	;# 
  1611  0298                     	;# 
  1612  0299                     	;# 
  1613  029A                     	;# 
  1614  0394                     	;# 
  1615  0395                     	;# 
  1616  0396                     	;# 
  1617  0FE4                     	;# 
  1618  0FE5                     	;# 
  1619  0FE6                     	;# 
  1620  0FE7                     	;# 
  1621  0FE8                     	;# 
  1622  0FE9                     	;# 
  1623  0FEA                     	;# 
  1624  0FEB                     	;# 
  1625  0FED                     	;# 
  1626  0FEE                     	;# 
  1627  0FEF                     	;# 
  1628  0000                     	;# 
  1629  0001                     	;# 
  1630  0002                     	;# 
  1631  0003                     	;# 
  1632  0004                     	;# 
  1633  0005                     	;# 
  1634  0006                     	;# 
  1635  0007                     	;# 
  1636  0008                     	;# 
  1637  0009                     	;# 
  1638  000A                     	;# 
  1639  000B                     	;# 
  1640  000C                     	;# 
  1641  000D                     	;# 
  1642  000E                     	;# 
  1643  0010                     	;# 
  1644  0011                     	;# 
  1645  0012                     	;# 
  1646  0015                     	;# 
  1647  0016                     	;# 
  1648  0016                     	;# 
  1649  0017                     	;# 
  1650  0018                     	;# 
  1651  0019                     	;# 
  1652  001A                     	;# 
  1653  001B                     	;# 
  1654  001C                     	;# 
  1655  008C                     	;# 
  1656  008D                     	;# 
  1657  008E                     	;# 
  1658  0090                     	;# 
  1659  0091                     	;# 
  1660  0092                     	;# 
  1661  0095                     	;# 
  1662  0096                     	;# 
  1663  0097                     	;# 
  1664  0099                     	;# 
  1665  009A                     	;# 
  1666  009B                     	;# 
  1667  009B                     	;# 
  1668  009C                     	;# 
  1669  009D                     	;# 
  1670  009E                     	;# 
  1671  010C                     	;# 
  1672  010D                     	;# 
  1673  010E                     	;# 
  1674  0116                     	;# 
  1675  0117                     	;# 
  1676  011D                     	;# 
  1677  018C                     	;# 
  1678  018D                     	;# 
  1679  018E                     	;# 
  1680  0191                     	;# 
  1681  0191                     	;# 
  1682  0192                     	;# 
  1683  0193                     	;# 
  1684  0193                     	;# 
  1685  0194                     	;# 
  1686  0195                     	;# 
  1687  0196                     	;# 
  1688  0197                     	;# 
  1689  0199                     	;# 
  1690  019A                     	;# 
  1691  019B                     	;# 
  1692  019B                     	;# 
  1693  019B                     	;# 
  1694  019B                     	;# 
  1695  019C                     	;# 
  1696  019C                     	;# 
  1697  019D                     	;# 
  1698  019E                     	;# 
  1699  019F                     	;# 
  1700  020D                     	;# 
  1701  0210                     	;# 
  1702  0211                     	;# 
  1703  0211                     	;# 
  1704  0212                     	;# 
  1705  0212                     	;# 
  1706  0213                     	;# 
  1707  0213                     	;# 
  1708  0214                     	;# 
  1709  0214                     	;# 
  1710  0215                     	;# 
  1711  0215                     	;# 
  1712  0215                     	;# 
  1713  0216                     	;# 
  1714  0216                     	;# 
  1715  0217                     	;# 
  1716  0217                     	;# 
  1717  0291                     	;# 
  1718  0291                     	;# 
  1719  0292                     	;# 
  1720  0293                     	;# 
  1721  0298                     	;# 
  1722  0298                     	;# 
  1723  0299                     	;# 
  1724  029A                     	;# 
  1725  0394                     	;# 
  1726  0395                     	;# 
  1727  0396                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  0010                     	;# 
  1755  0011                     	;# 
  1756  0012                     	;# 
  1757  0015                     	;# 
  1758  0016                     	;# 
  1759  0016                     	;# 
  1760  0017                     	;# 
  1761  0018                     	;# 
  1762  0019                     	;# 
  1763  001A                     	;# 
  1764  001B                     	;# 
  1765  001C                     	;# 
  1766  008C                     	;# 
  1767  008D                     	;# 
  1768  008E                     	;# 
  1769  0090                     	;# 
  1770  0091                     	;# 
  1771  0092                     	;# 
  1772  0095                     	;# 
  1773  0096                     	;# 
  1774  0097                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  010C                     	;# 
  1783  010D                     	;# 
  1784  010E                     	;# 
  1785  0116                     	;# 
  1786  0117                     	;# 
  1787  011D                     	;# 
  1788  018C                     	;# 
  1789  018D                     	;# 
  1790  018E                     	;# 
  1791  0191                     	;# 
  1792  0191                     	;# 
  1793  0192                     	;# 
  1794  0193                     	;# 
  1795  0193                     	;# 
  1796  0194                     	;# 
  1797  0195                     	;# 
  1798  0196                     	;# 
  1799  0197                     	;# 
  1800  0199                     	;# 
  1801  019A                     	;# 
  1802  019B                     	;# 
  1803  019B                     	;# 
  1804  019B                     	;# 
  1805  019B                     	;# 
  1806  019C                     	;# 
  1807  019C                     	;# 
  1808  019D                     	;# 
  1809  019E                     	;# 
  1810  019F                     	;# 
  1811  020D                     	;# 
  1812  0210                     	;# 
  1813  0211                     	;# 
  1814  0211                     	;# 
  1815  0212                     	;# 
  1816  0212                     	;# 
  1817  0213                     	;# 
  1818  0213                     	;# 
  1819  0214                     	;# 
  1820  0214                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0215                     	;# 
  1824  0216                     	;# 
  1825  0216                     	;# 
  1826  0217                     	;# 
  1827  0217                     	;# 
  1828  0291                     	;# 
  1829  0291                     	;# 
  1830  0292                     	;# 
  1831  0293                     	;# 
  1832  0298                     	;# 
  1833  0298                     	;# 
  1834  0299                     	;# 
  1835  029A                     	;# 
  1836  0394                     	;# 
  1837  0395                     	;# 
  1838  0396                     	;# 
  1839  0FE4                     	;# 
  1840  0FE5                     	;# 
  1841  0FE6                     	;# 
  1842  0FE7                     	;# 
  1843  0FE8                     	;# 
  1844  0FE9                     	;# 
  1845  0FEA                     	;# 
  1846  0FEB                     	;# 
  1847  0FED                     	;# 
  1848  0FEE                     	;# 
  1849  0FEF                     	;# 
  1850  0000                     	;# 
  1851  0001                     	;# 
  1852  0002                     	;# 
  1853  0003                     	;# 
  1854  0004                     	;# 
  1855  0005                     	;# 
  1856  0006                     	;# 
  1857  0007                     	;# 
  1858  0008                     	;# 
  1859  0009                     	;# 
  1860  000A                     	;# 
  1861  000B                     	;# 
  1862  000C                     	;# 
  1863  000D                     	;# 
  1864  000E                     	;# 
  1865  0010                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0015                     	;# 
  1869  0016                     	;# 
  1870  0016                     	;# 
  1871  0017                     	;# 
  1872  0018                     	;# 
  1873  0019                     	;# 
  1874  001A                     	;# 
  1875  001B                     	;# 
  1876  001C                     	;# 
  1877  008C                     	;# 
  1878  008D                     	;# 
  1879  008E                     	;# 
  1880  0090                     	;# 
  1881  0091                     	;# 
  1882  0092                     	;# 
  1883  0095                     	;# 
  1884  0096                     	;# 
  1885  0097                     	;# 
  1886  0099                     	;# 
  1887  009A                     	;# 
  1888  009B                     	;# 
  1889  009B                     	;# 
  1890  009C                     	;# 
  1891  009D                     	;# 
  1892  009E                     	;# 
  1893  010C                     	;# 
  1894  010D                     	;# 
  1895  010E                     	;# 
  1896  0116                     	;# 
  1897  0117                     	;# 
  1898  011D                     	;# 
  1899  018C                     	;# 
  1900  018D                     	;# 
  1901  018E                     	;# 
  1902  0191                     	;# 
  1903  0191                     	;# 
  1904  0192                     	;# 
  1905  0193                     	;# 
  1906  0193                     	;# 
  1907  0194                     	;# 
  1908  0195                     	;# 
  1909  0196                     	;# 
  1910  0197                     	;# 
  1911  0199                     	;# 
  1912  019A                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019C                     	;# 
  1918  019C                     	;# 
  1919  019D                     	;# 
  1920  019E                     	;# 
  1921  019F                     	;# 
  1922  020D                     	;# 
  1923  0210                     	;# 
  1924  0211                     	;# 
  1925  0211                     	;# 
  1926  0212                     	;# 
  1927  0212                     	;# 
  1928  0213                     	;# 
  1929  0213                     	;# 
  1930  0214                     	;# 
  1931  0214                     	;# 
  1932  0215                     	;# 
  1933  0215                     	;# 
  1934  0215                     	;# 
  1935  0216                     	;# 
  1936  0216                     	;# 
  1937  0217                     	;# 
  1938  0217                     	;# 
  1939  0291                     	;# 
  1940  0291                     	;# 
  1941  0292                     	;# 
  1942  0293                     	;# 
  1943  0298                     	;# 
  1944  0298                     	;# 
  1945  0299                     	;# 
  1946  029A                     	;# 
  1947  0394                     	;# 
  1948  0395                     	;# 
  1949  0396                     	;# 
  1950  0FE4                     	;# 
  1951  0FE5                     	;# 
  1952  0FE6                     	;# 
  1953  0FE7                     	;# 
  1954  0FE8                     	;# 
  1955  0FE9                     	;# 
  1956  0FEA                     	;# 
  1957  0FEB                     	;# 
  1958  0FED                     	;# 
  1959  0FEE                     	;# 
  1960  0FEF                     	;# 
  1961                           
  1962                           	psect	idataBANK1
  1963  0DFF                     __pidataBANK1:	
  1964                           
  1965                           ;initializer for Bq32k_Time_Init@F2015
  1966  0DFF  3401               	retlw	1
  1967  0E00  3440               	retlw	64
  1968  0E01  3414               	retlw	20
  1969  0E02  3402               	retlw	2
  1970  0E03  3404               	retlw	4
  1971  0E04  3407               	retlw	7
  1972  0E05  3416               	retlw	22
  1973  0E06  3400               	retlw	0
  1974  0E07  3400               	retlw	0
  1975  0E08  3400               	retlw	0
  1976                           
  1977                           	psect	stringtext
  1978  1000                     __pstringtext:	
  1979  1000                     _Dis_TAB:	
  1980  1000  34D7               	retlw	215
  1981  1001  3450               	retlw	80
  1982  1002  34B5               	retlw	181
  1983  1003  34F1               	retlw	241
  1984  1004  3472               	retlw	114
  1985  1005  34E3               	retlw	227
  1986  1006  34E7               	retlw	231
  1987  1007  3451               	retlw	81
  1988  1008  34F7               	retlw	247
  1989  1009  34F3               	retlw	243
  1990  100A  3477               	retlw	119
  1991  100B  34E6               	retlw	230
  1992  100C  3487               	retlw	135
  1993  100D  34F4               	retlw	244
  1994  100E  34A7               	retlw	167
  1995  100F  3427               	retlw	39
  1996  1010  3457               	retlw	87
  1997  1011  3420               	retlw	32
  1998  1012  3420               	retlw	32
  1999  1013  3420               	retlw	32
  2000  1014  3420               	retlw	32
  2001  1015                     __end_of_Dis_TAB:	
  2002                           
  2003                           	psect	nvBANK0
  2004  006C                     __pnvBANK0:	
  2005  006C                     _timer0ReloadVal:	
  2006  006C                     	ds	1
  2007  000B                     _INTCONbits	set	11
  2008  0011                     _PIR1bits	set	17
  2009  0015                     _TMR0	set	21
  2010  0067                     _RA7	set	103
  2011  0069                     _RB1	set	105
  2012  006B                     _RB3	set	107
  2013  006D                     _RB5	set	109
  2014  009D                     _ADCON0	set	157
  2015  009D                     _ADCON0bits	set	157
  2016  009E                     _ADCON1	set	158
  2017  009C                     _ADRESH	set	156
  2018  009B                     _ADRESL	set	155
  2019  0095                     _OPTION_REG	set	149
  2020  0095                     _OPTION_REGbits	set	149
  2021  0099                     _OSCCON	set	153
  2022  009A                     _OSCSTAT	set	154
  2023  008C                     _TRISA	set	140
  2024  008D                     _TRISB	set	141
  2025  008E                     _TRISC	set	142
  2026  0469                     _TRISB1	set	1129
  2027  046B                     _TRISB3	set	1131
  2028  011D                     _APFCON	set	285
  2029  0117                     _FVRCON	set	279
  2030  0117                     _FVRCONbits	set	279
  2031  010C                     _LATA	set	268
  2032  010D                     _LATB	set	269
  2033  010E                     _LATC	set	270
  2034  0860                     _LATA0	set	2144
  2035  0861                     _LATA1	set	2145
  2036  0862                     _LATA2	set	2146
  2037  0863                     _LATA3	set	2147
  2038  0864                     _LATA4	set	2148
  2039  0865                     _LATA5	set	2149
  2040  0868                     _LATB0	set	2152
  2041  0869                     _LATB1	set	2153
  2042  0870                     _LATC0	set	2160
  2043  0871                     _LATC1	set	2161
  2044  0872                     _LATC2	set	2162
  2045  018C                     _ANSELA	set	396
  2046  018D                     _ANSELB	set	397
  2047  018E                     _ANSELC	set	398
  2048  019F                     _BAUDCON	set	415
  2049  0192                     _PMADRH	set	402
  2050  0191                     _PMADRL	set	401
  2051  0195                     _PMCON1bits	set	405
  2052  0196                     _PMCON2	set	406
  2053  0194                     _PMDATH	set	404
  2054  0193                     _PMDATL	set	403
  2055  0199                     _RCREG	set	409
  2056  019D                     _RCSTA	set	413
  2057  019D                     _RCSTAbits	set	413
  2058  019C                     _SPBRGH	set	412
  2059  019B                     _SPBRGL	set	411
  2060  019A                     _TXREG	set	410
  2061  019E                     _TXSTA	set	414
  2062  0212                     _SSP1ADD	set	530
  2063  0215                     _SSP1CON1	set	533
  2064  0215                     _SSP1CON1bits	set	533
  2065  0214                     _SSP1STAT	set	532
  2066  0214                     _SSP1STATbits	set	532
  2067  0211                     _SSPBUF	set	529
  2068  020D                     _WPUB	set	525
  2069  0210                     _WPUE	set	528
  2070                           
  2071                           ; #config settings
  2072  0000                     
  2073                           	psect	cinit
  2074  0015                     start_initialization:	
  2075  0015                     __initialization:	
  2076                           
  2077                           ; Clear objects allocated to COMMON
  2078  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2079  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2080  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2081                           
  2082                           ; Clear objects allocated to BANK0
  2083  0018  3020               	movlw	low __pbssBANK0
  2084  0019  0084               	movwf	4
  2085  001A  3000               	movlw	high __pbssBANK0
  2086  001B  0085               	movwf	5
  2087  001C  3030               	movlw	48
  2088  001D  318D  25E9  3180   	fcall	clear_ram0
  2089                           
  2090                           ; Clear objects allocated to BANK1
  2091  0020  30A0               	movlw	low __pbssBANK1
  2092  0021  0084               	movwf	4
  2093  0022  3000               	movlw	high __pbssBANK1
  2094  0023  0085               	movwf	5
  2095  0024  300F               	movlw	15
  2096  0025  318D  25E9  3180   	fcall	clear_ram0
  2097                           
  2098                           ; Clear objects allocated to BANK2
  2099  0028  3020               	movlw	low __pbssBANK2
  2100  0029  0084               	movwf	4
  2101  002A  3001               	movlw	high __pbssBANK2
  2102  002B  0085               	movwf	5
  2103  002C  3040               	movlw	64
  2104  002D  318D  25E9  3180   	fcall	clear_ram0
  2105                           
  2106                           ; Initialize objects allocated to BANK1
  2107  0030  30FF               	movlw	low __pidataBANK1
  2108  0031  0084               	movwf	4
  2109  0032  308D               	movlw	(high __pidataBANK1)| (0+128)
  2110  0033  0085               	movwf	5
  2111  0034  30AF               	movlw	low __pdataBANK1
  2112  0035  0086               	movwf	6
  2113  0036  3000               	movlw	high __pdataBANK1
  2114  0037  0087               	movwf	7
  2115  0038  300A               	movlw	10
  2116  0039  318D  25E3         	fcall	init_ram
  2117  003B                     end_of_initialization:	
  2118                           ;End of C runtime variable initialization code
  2119                           
  2120  003B                     __end_of__initialization:	
  2121  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2122  003C  0020               	movlb	0
  2123  003D  3180  283F         	ljmp	_main	;jump to C main() function
  2124                           
  2125                           	psect	bssCOMMON
  2126  0078                     __pbssCOMMON:	
  2127  0078                     _time_count:	
  2128  0078                     	ds	1
  2129  0079                     _uch_cr0:	
  2130  0079                     	ds	1
  2131  007A                     _uch_ltcbh:	
  2132  007A                     	ds	1
  2133                           
  2134                           	psect	bssBANK0
  2135  0020                     __pbssBANK0:	
  2136  0020                     Two_Display@F2120:	
  2137  0020                     	ds	4
  2138  0024                     _temperature_value:	
  2139  0024                     	ds	4
  2140  0028                     TMR0_ISR@CountCallBack:	
  2141  0028                     	ds	2
  2142  002A                     _CH1_temperature:	
  2143  002A                     	ds	2
  2144  002C                     _CH2_temperature:	
  2145  002C                     	ds	2
  2146  002E                     _Cur_Save_Index:	
  2147  002E                     	ds	2
  2148  0030                     _Cur_temperature:	
  2149  0030                     	ds	2
  2150  0032                     _temperature_int:	
  2151  0032                     	ds	2
  2152  0034                     _CH1_state:	
  2153  0034                     	ds	1
  2154  0035                     _CH2_state:	
  2155  0035                     	ds	1
  2156  0036                     _Cur_temperature_time:	
  2157  0036                     	ds	1
  2158  0037                     _LongPressSec:	
  2159  0037                     	ds	1
  2160  0038                     _MAX31856Sec:	
  2161  0038                     	ds	1
  2162  0039                     _Record_flag:	
  2163  0039                     	ds	1
  2164  003A                     _temperature_decimal:	
  2165  003A                     	ds	1
  2166  003B                     _temperature_sign:	
  2167  003B                     	ds	1
  2168  003C                     _tmr_flag:	
  2169  003C                     	ds	1
  2170  003D                     _uch_cjth:	
  2171  003D                     	ds	1
  2172  003E                     _uch_cjtl:	
  2173  003E                     	ds	1
  2174  003F                     _uch_cr1:	
  2175  003F                     	ds	1
  2176  0040                     _uch_ltcbl:	
  2177  0040                     	ds	1
  2178  0041                     _uch_ltcbm:	
  2179  0041                     	ds	1
  2180  0042                     _uch_mask:	
  2181  0042                     	ds	1
  2182  0043                     _uch_sr:	
  2183  0043                     	ds	1
  2184  0044                     _uch_reg:	
  2185  0044                     	ds	8
  2186  004C                     _display_buff:	
  2187  004C                     	ds	4
  2188                           
  2189                           	psect	bssBANK1
  2190  00A0                     __pbssBANK1:	
  2191  00A0                     err_Display@F2123:	
  2192  00A0                     	ds	4
  2193  00A4                     time_Display@F2126:	
  2194  00A4                     	ds	4
  2195  00A8                     _rtc_tm:	
  2196  00A8                     	ds	7
  2197                           
  2198                           	psect	dataBANK1
  2199  00AF                     __pdataBANK1:	
  2200  00AF                     Bq32k_Time_Init@F2015:	
  2201  00AF                     	ds	10
  2202                           
  2203                           	psect	bssBANK2
  2204  0120                     __pbssBANK2:	
  2205  0120                     _Flash_buff:	
  2206  0120                     	ds	64
  2207                           
  2208                           	psect	clrtext
  2209  0DE9                     clear_ram0:	
  2210                           ;	Called with FSR0 containing the base address, and
  2211                           ;	WREG with the size to clear
  2212                           
  2213  0DE9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2214  0DEA                     clrloop0:	
  2215  0DEA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2216  0DEB  3101               	addfsr 0,1
  2217  0DEC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2218  0DED  2DEA               	goto	clrloop0	;have we reached the end yet?
  2219  0DEE  3400               	retlw	0	;all done for this memory range, return
  2220                           
  2221                           	psect	inittext
  2222  0DE3                     init_ram:	
  2223  0DE3  00FE               	movwf	126
  2224  0DE4                     initloop:	
  2225  0DE4  0012               	moviw fsr0++
  2226  0DE5  001E               	movwi fsr1++
  2227  0DE6  0BFE               	decfsz	126,f
  2228  0DE7  2DE4               	goto	initloop
  2229  0DE8  3400               	retlw	0
  2230                           
  2231                           	psect	cstackBANK1
  2232  00B9                     __pcstackBANK1:	
  2233  00B9                     main@data_temp:	
  2234                           
  2235                           ; 2 bytes @ 0x0
  2236  00B9                     	ds	2
  2237  00BB                     main@i:	
  2238                           
  2239                           ; 1 bytes @ 0x2
  2240  00BB                     	ds	1
  2241  00BC                     main@bat_data:	
  2242                           
  2243                           ; 2 bytes @ 0x3
  2244  00BC                     	ds	2
  2245                           
  2246                           	psect	cstackCOMMON
  2247  0070                     __pcstackCOMMON:	
  2248  0070                     ?_OSCILLATOR_Initialize:	
  2249  0070                     ?_SPI_Initialize:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_EUSART_Initialize:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_ADC_Initialize:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_TMR0_Initialize:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_FVR_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_TMR0_CallBack:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ??_TMR0_CallBack:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_maxim_31856_init:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_Bq32k_Time_Init:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_SendCmd_1621:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_Serach_Flash_Head:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_temperature_process:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_Tc_Display:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_err_Display:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_Two_Display:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_time_Display:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_Bq32k_Rtc_Read_Time:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_Set_start_flag:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_Set_finish_flag:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_bcd2bin:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_PIN_MANAGER_Initialize:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_SYSTEM_Initialize:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_SPI_Exchange8bit:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_EUSART_Write:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_TMR0_ISR:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_INTERRUPT_InterruptManager:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_main:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_maxim_31856_read_register:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_maxim_start_conversion:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_maxim_clear_fault_status:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_tc_temperature_trans:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_one_temperature_trans:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_temperature_display:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_I2C_Start:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ?_I2C_Send_Byte:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_I2C_Receive_Byte:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_I2C_Stop:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_Key_Scan:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_Key_Process:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366                           
  2367                           ; 2 bytes @ 0x0
  2368  0070                     	ds	1
  2369  0071                     ??_TMR0_ISR:	
  2370                           
  2371                           ; 1 bytes @ 0x1
  2372  0071                     	ds	1
  2373  0072                     ??_INTERRUPT_InterruptManager:	
  2374                           
  2375                           ; 1 bytes @ 0x2
  2376  0072                     	ds	1
  2377  0073                     ??_OSCILLATOR_Initialize:	
  2378  0073                     ??_SPI_Initialize:	
  2379                           ; 1 bytes @ 0x3
  2380                           
  2381  0073                     ??_EUSART_Initialize:	
  2382                           ; 1 bytes @ 0x3
  2383                           
  2384  0073                     ??_ADC_Initialize:	
  2385                           ; 1 bytes @ 0x3
  2386                           
  2387  0073                     ??_TMR0_Initialize:	
  2388                           ; 1 bytes @ 0x3
  2389                           
  2390  0073                     ??_FVR_Initialize:	
  2391                           ; 1 bytes @ 0x3
  2392                           
  2393  0073                     ?_memset:	
  2394                           ; 1 bytes @ 0x3
  2395                           
  2396  0073                     ??_Set_start_flag:	
  2397                           ; 1 bytes @ 0x3
  2398                           
  2399  0073                     ??_Set_finish_flag:	
  2400                           ; 1 bytes @ 0x3
  2401                           
  2402  0073                     ??_PIN_MANAGER_Initialize:	
  2403                           ; 1 bytes @ 0x3
  2404                           
  2405  0073                     ??_SPI_Exchange8bit:	
  2406                           ; 1 bytes @ 0x3
  2407                           
  2408  0073                     ??_EUSART_Write:	
  2409                           ; 1 bytes @ 0x3
  2410                           
  2411  0073                     ?_SendBit_1621:	
  2412                           ; 1 bytes @ 0x3
  2413                           
  2414  0073                     ?_SendDataBit_1621:	
  2415                           ; 1 bytes @ 0x3
  2416                           
  2417  0073                     ??_I2C_Start:	
  2418                           ; 1 bytes @ 0x3
  2419                           
  2420  0073                     ??_I2C_Send_Byte:	
  2421                           ; 1 bytes @ 0x3
  2422                           
  2423  0073                     ??_I2C_Receive_Byte:	
  2424                           ; 1 bytes @ 0x3
  2425                           
  2426  0073                     ??_I2C_Stop:	
  2427                           ; 1 bytes @ 0x3
  2428                           
  2429  0073                     ??_Key_Scan:	
  2430                           ; 1 bytes @ 0x3
  2431                           
  2432  0073                     ?___bmul:	
  2433                           ; 1 bytes @ 0x3
  2434                           
  2435  0073                     ?_FLASH_ReadWord:	
  2436                           ; 1 bytes @ 0x3
  2437                           
  2438  0073                     ?_ADC_GetConversion:	
  2439                           ; 2 bytes @ 0x3
  2440                           
  2441  0073                     ?___awdiv:	
  2442                           ; 2 bytes @ 0x3
  2443                           
  2444  0073                     ?___awmod:	
  2445                           ; 2 bytes @ 0x3
  2446                           
  2447  0073                     ?___lwmod:	
  2448                           ; 2 bytes @ 0x3
  2449                           
  2450  0073                     SPI_Exchange8bit@data:	
  2451                           ; 2 bytes @ 0x3
  2452                           
  2453  0073                     EUSART_Write@txData:	
  2454                           ; 1 bytes @ 0x3
  2455                           
  2456  0073                     SendBit_1621@cnt:	
  2457                           ; 1 bytes @ 0x3
  2458                           
  2459  0073                     SendDataBit_1621@cnt:	
  2460                           ; 1 bytes @ 0x3
  2461                           
  2462  0073                     ___bmul@multiplicand:	
  2463                           ; 1 bytes @ 0x3
  2464                           
  2465  0073                     FLASH_ReadWord@flashAddr:	
  2466                           ; 1 bytes @ 0x3
  2467                           
  2468  0073                     ___awdiv@divisor:	
  2469                           ; 2 bytes @ 0x3
  2470                           
  2471  0073                     ___awmod@divisor:	
  2472                           ; 2 bytes @ 0x3
  2473                           
  2474  0073                     ___lwmod@divisor:	
  2475                           ; 2 bytes @ 0x3
  2476                           
  2477  0073                     memset@c:	
  2478                           ; 2 bytes @ 0x3
  2479                           
  2480                           
  2481                           ; 2 bytes @ 0x3
  2482  0073                     	ds	1
  2483  0074                     ??_SYSTEM_Initialize:	
  2484  0074                     ?_SPI_Exchange8bitBuffer:	
  2485                           ; 1 bytes @ 0x4
  2486                           
  2487  0074                     ?_maxim_31856_write_register:	
  2488                           ; 1 bytes @ 0x4
  2489                           
  2490  0074                     ??_maxim_31856_read_register:	
  2491                           ; 1 bytes @ 0x4
  2492                           
  2493  0074                     ??_SendBit_1621:	
  2494                           ; 1 bytes @ 0x4
  2495                           
  2496  0074                     ??_SendDataBit_1621:	
  2497                           ; 1 bytes @ 0x4
  2498                           
  2499  0074                     ??___bmul:	
  2500                           ; 1 bytes @ 0x4
  2501                           
  2502  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2503                           ; 1 bytes @ 0x4
  2504                           
  2505  0074                     maxim_31856_write_register@uch_register_value:	
  2506                           ; 1 bytes @ 0x4
  2507                           
  2508  0074                     I2C_Send_Byte@Data:	
  2509                           ; 1 bytes @ 0x4
  2510                           
  2511  0074                     I2C_Receive_Byte@Data:	
  2512                           ; 1 bytes @ 0x4
  2513                           
  2514                           
  2515                           ; 1 bytes @ 0x4
  2516  0074                     	ds	1
  2517  0075                     ??_FLASH_ReadWord:	
  2518  0075                     ??_ADC_GetConversion:	
  2519                           ; 1 bytes @ 0x5
  2520                           
  2521  0075                     ??_maxim_31856_write_register:	
  2522                           ; 1 bytes @ 0x5
  2523                           
  2524  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2525                           ; 1 bytes @ 0x5
  2526                           
  2527  0075                     FLASH_ReadWord@GIEBitValue:	
  2528                           ; 1 bytes @ 0x5
  2529                           
  2530  0075                     maxim_31856_write_register@uch_register_address:	
  2531                           ; 1 bytes @ 0x5
  2532                           
  2533  0075                     maxim_31856_read_register@uch_register_address:	
  2534                           ; 1 bytes @ 0x5
  2535                           
  2536  0075                     I2C_Send_Byte@i:	
  2537                           ; 1 bytes @ 0x5
  2538                           
  2539  0075                     I2C_Receive_Byte@i:	
  2540                           ; 1 bytes @ 0x5
  2541                           
  2542  0075                     Key_Scan@Key_val:	
  2543                           ; 1 bytes @ 0x5
  2544                           
  2545  0075                     ___bmul@product:	
  2546                           ; 1 bytes @ 0x5
  2547                           
  2548  0075                     ___awdiv@dividend:	
  2549                           ; 1 bytes @ 0x5
  2550                           
  2551  0075                     ___awmod@dividend:	
  2552                           ; 2 bytes @ 0x5
  2553                           
  2554  0075                     ___lwmod@dividend:	
  2555                           ; 2 bytes @ 0x5
  2556                           
  2557  0075                     memset@n:	
  2558                           ; 2 bytes @ 0x5
  2559                           
  2560                           
  2561                           ; 2 bytes @ 0x5
  2562  0075                     	ds	1
  2563  0076                     ??_maxim_31856_init:	
  2564  0076                     ??_Serach_Flash_Head:	
  2565                           ; 1 bytes @ 0x6
  2566                           
  2567  0076                     ?_I2C_Read_Buffer:	
  2568                           ; 1 bytes @ 0x6
  2569                           
  2570  0076                     ?_I2C_Send_Buffer:	
  2571                           ; 1 bytes @ 0x6
  2572                           
  2573  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2574                           ; 1 bytes @ 0x6
  2575                           
  2576  0076                     ADC_GetConversion@channel:	
  2577                           ; 1 bytes @ 0x6
  2578                           
  2579  0076                     maxim_31856_read_register@uch_register_data:	
  2580                           ; 1 bytes @ 0x6
  2581                           
  2582  0076                     SendBit_1621@data:	
  2583                           ; 1 bytes @ 0x6
  2584                           
  2585  0076                     SendDataBit_1621@data:	
  2586                           ; 1 bytes @ 0x6
  2587                           
  2588  0076                     I2C_Read_Buffer@buff:	
  2589                           ; 1 bytes @ 0x6
  2590                           
  2591  0076                     I2C_Send_Buffer@buff:	
  2592                           ; 1 bytes @ 0x6
  2593                           
  2594  0076                     ___bmul@multiplier:	
  2595                           ; 1 bytes @ 0x6
  2596                           
  2597                           
  2598                           ; 1 bytes @ 0x6
  2599  0076                     	ds	1
  2600  0077                     ??_memset:	
  2601  0077                     ??_maxim_start_conversion:	
  2602                           ; 1 bytes @ 0x7
  2603                           
  2604  0077                     ??_maxim_clear_fault_status:	
  2605                           ; 1 bytes @ 0x7
  2606                           
  2607  0077                     ??___awdiv:	
  2608                           ; 1 bytes @ 0x7
  2609                           
  2610  0077                     ??___awmod:	
  2611                           ; 1 bytes @ 0x7
  2612                           
  2613  0077                     ??___lwmod:	
  2614                           ; 1 bytes @ 0x7
  2615                           
  2616  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2617                           ; 1 bytes @ 0x7
  2618                           
  2619  0077                     SendBit_1621@i:	
  2620                           ; 1 bytes @ 0x7
  2621                           
  2622  0077                     SendDataBit_1621@i:	
  2623                           ; 1 bytes @ 0x7
  2624                           
  2625  0077                     I2C_Read_Buffer@Length:	
  2626                           ; 1 bytes @ 0x7
  2627                           
  2628  0077                     I2C_Send_Buffer@Length:	
  2629                           ; 1 bytes @ 0x7
  2630                           
  2631  0077                     bcd2bin@val:	
  2632                           ; 1 bytes @ 0x7
  2633                           
  2634                           
  2635                           ; 1 bytes @ 0x7
  2636  0077                     	ds	1
  2637  0078                     ??_temperature_process:	
  2638                           
  2639                           	psect	cstackBANK0
  2640  0050                     __pcstackBANK0:	
  2641                           ; 1 bytes @ 0x8
  2642                           
  2643  0050                     ??_SendCmd_1621:	
  2644  0050                     ?_WriteAll_1621:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0050                     ??_bcd2bin:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0050                     ??_SPI_Exchange8bitBuffer:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0050                     ??_tc_temperature_trans:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0050                     ??_I2C_Read_Buffer:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0050                     ??_I2C_Send_Buffer:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0050                     maxim_start_conversion@uch_conversion_mode:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0050                     ___awdiv@counter:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0050                     ___awmod@counter:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  0050                     ___lwmod@counter:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674  0050                     memset@p1:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677  0050                     WriteAll_1621@p:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680  0050                     Serach_Flash_Head@data:	
  2681                           ; 2 bytes @ 0x0
  2682                           
  2683                           
  2684                           ; 2 bytes @ 0x0
  2685  0050                     	ds	1
  2686  0051                     ?___lwdiv:	
  2687  0051                     SendCmd_1621@command:	
  2688                           ; 2 bytes @ 0x1
  2689                           
  2690  0051                     I2C_Read_Buffer@ADD:	
  2691                           ; 1 bytes @ 0x1
  2692                           
  2693  0051                     ___awdiv@sign:	
  2694                           ; 1 bytes @ 0x1
  2695                           
  2696  0051                     ___awmod@sign:	
  2697                           ; 1 bytes @ 0x1
  2698                           
  2699  0051                     memset@p:	
  2700                           ; 1 bytes @ 0x1
  2701                           
  2702  0051                     ___lwdiv@divisor:	
  2703                           ; 1 bytes @ 0x1
  2704                           
  2705                           
  2706                           ; 2 bytes @ 0x1
  2707  0051                     	ds	1
  2708  0052                     WriteAll_1621@cnt:	
  2709  0052                     I2C_Read_Buffer@Flag:	
  2710                           ; 1 bytes @ 0x2
  2711                           
  2712  0052                     I2C_Send_Buffer@ADD:	
  2713                           ; 1 bytes @ 0x2
  2714                           
  2715  0052                     Serach_Flash_Head@i:	
  2716                           ; 1 bytes @ 0x2
  2717                           
  2718  0052                     ___awdiv@quotient:	
  2719                           ; 2 bytes @ 0x2
  2720                           
  2721                           
  2722                           ; 2 bytes @ 0x2
  2723  0052                     	ds	1
  2724  0053                     ??_WriteAll_1621:	
  2725  0053                     ??_Bq32k_Rtc_Read_Time:	
  2726                           ; 1 bytes @ 0x3
  2727                           
  2728  0053                     ?_maxim_31856_read_nregisters:	
  2729                           ; 1 bytes @ 0x3
  2730                           
  2731  0053                     maxim_31856_read_nregisters@uch_buff:	
  2732                           ; 1 bytes @ 0x3
  2733                           
  2734  0053                     I2C_Send_Buffer@i:	
  2735                           ; 1 bytes @ 0x3
  2736                           
  2737  0053                     ___lwdiv@dividend:	
  2738                           ; 1 bytes @ 0x3
  2739                           
  2740                           
  2741                           ; 2 bytes @ 0x3
  2742  0053                     	ds	1
  2743  0054                     maxim_31856_read_nregisters@uch_nBytes:	
  2744  0054                     WriteAll_1621@addr:	
  2745                           ; 1 bytes @ 0x4
  2746                           
  2747  0054                     I2C_Send_Buffer@Flag:	
  2748                           ; 1 bytes @ 0x4
  2749                           
  2750                           
  2751                           ; 1 bytes @ 0x4
  2752  0054                     	ds	1
  2753  0055                     ??_Bq32k_Time_Init:	
  2754  0055                     ??_maxim_31856_read_nregisters:	
  2755                           ; 1 bytes @ 0x5
  2756                           
  2757  0055                     ??___lwdiv:	
  2758                           ; 1 bytes @ 0x5
  2759                           
  2760  0055                     WriteAll_1621@i:	
  2761                           ; 1 bytes @ 0x5
  2762                           
  2763  0055                     Bq32k_Rtc_Read_Time@temp:	
  2764                           ; 1 bytes @ 0x5
  2765                           
  2766                           
  2767                           ; 10 bytes @ 0x5
  2768  0055                     	ds	1
  2769  0056                     ??_err_Display:	
  2770  0056                     ??_Two_Display:	
  2771                           ; 1 bytes @ 0x6
  2772                           
  2773  0056                     ___lwdiv@counter:	
  2774                           ; 1 bytes @ 0x6
  2775                           
  2776                           
  2777                           ; 1 bytes @ 0x6
  2778  0056                     	ds	1
  2779  0057                     maxim_31856_read_nregisters@uch_register_address:	
  2780  0057                     ___lwdiv@quotient:	
  2781                           ; 1 bytes @ 0x7
  2782                           
  2783  0057                     Two_Display@num:	
  2784                           ; 2 bytes @ 0x7
  2785                           
  2786  0057                     err_Display@num:	
  2787                           ; 4 bytes @ 0x7
  2788                           
  2789  0057                     Bq32k_Time_Init@temp:	
  2790                           ; 4 bytes @ 0x7
  2791                           
  2792                           
  2793                           ; 10 bytes @ 0x7
  2794  0057                     	ds	1
  2795  0058                     ??_one_temperature_trans:	
  2796                           
  2797                           ; 1 bytes @ 0x8
  2798  0058                     	ds	1
  2799  0059                     ??_Tc_Display:	
  2800                           
  2801                           ; 1 bytes @ 0x9
  2802  0059                     	ds	1
  2803  005A                     Tc_Display@count:	
  2804                           
  2805                           ; 1 bytes @ 0xA
  2806  005A                     	ds	1
  2807  005B                     Two_Display@number:	
  2808  005B                     Tc_Display@data:	
  2809                           ; 1 bytes @ 0xB
  2810                           
  2811                           
  2812                           ; 2 bytes @ 0xB
  2813  005B                     	ds	2
  2814  005D                     ??_temperature_display:	
  2815                           
  2816                           ; 1 bytes @ 0xD
  2817  005D                     	ds	2
  2818  005F                     Bq32k_Rtc_Read_Time@p:	
  2819                           
  2820                           ; 1 bytes @ 0xF
  2821  005F                     	ds	1
  2822  0060                     ??_time_Display:	
  2823                           
  2824                           ; 1 bytes @ 0x10
  2825  0060                     	ds	3
  2826  0063                     time_Display@num:	
  2827                           
  2828                           ; 4 bytes @ 0x13
  2829  0063                     	ds	4
  2830  0067                     ??_Key_Process:	
  2831                           
  2832                           ; 1 bytes @ 0x17
  2833  0067                     	ds	1
  2834  0068                     Key_Process@gKeyValue:	
  2835                           
  2836                           ; 1 bytes @ 0x18
  2837  0068                     	ds	1
  2838  0069                     ??_main:	
  2839                           
  2840                           ; 1 bytes @ 0x19
  2841  0069                     	ds	3
  2842                           
  2843                           	psect	maintext
  2844  003F                     __pmaintext:	
  2845 ;;
  2846 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2847 ;;
  2848 ;; *************** function _main *****************
  2849 ;; Defined at:
  2850 ;;		line 65 in file "main.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  bat_data        2    3[BANK1 ] unsigned int 
  2855 ;;  data_temp       2    0[BANK1 ] unsigned int 
  2856 ;;  i               1    2[BANK1 ] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : B1F/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Totals:         0       3       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;Total ram usage:        8 bytes
  2871 ;; Hardware stack levels required when called:    9
  2872 ;; This function calls:
  2873 ;;		_ADC_GetConversion
  2874 ;;		_Bq32k_Time_Init
  2875 ;;		_EUSART_Write
  2876 ;;		_Key_Process
  2877 ;;		_SYSTEM_Initialize
  2878 ;;		_SendCmd_1621
  2879 ;;		_Serach_Flash_Head
  2880 ;;		_WriteAll_1621
  2881 ;;		_maxim_31856_init
  2882 ;;		_temperature_process
  2883 ;; This function is called by:
  2884 ;;		Startup code after reset
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _main
  2890  003F                     _main:	
  2891                           
  2892                           ;main.c: 67: unsigned char i=0;
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2896  003F  0021               	movlb	1	; select bank1
  2897  0040  01BB               	clrf	main@i^(0+128)
  2898                           
  2899                           ;main.c: 69: unsigned int bat_data = 0;
  2900  0041  01BC               	clrf	main@bat_data^(0+128)
  2901  0042  01BD               	clrf	(main@bat_data+1)^(0+128)
  2902                           
  2903                           ;main.c: 70: unsigned int data_temp = 0;
  2904  0043  01B9               	clrf	main@data_temp^(0+128)
  2905  0044  01BA               	clrf	(main@data_temp+1)^(0+128)
  2906                           
  2907                           ;main.c: 72: SYSTEM_Initialize();
  2908  0045  318E  268B  3180   	fcall	_SYSTEM_Initialize
  2909                           
  2910                           ;main.c: 73: _delay((unsigned long)((3000)*(16000000/4000.0)));
  2911  0048  303D               	movlw	61
  2912  0049  0020               	movlb	0	; select bank0
  2913  004A  00EB               	movwf	??_main+2
  2914  004B  30E1               	movlw	225
  2915  004C  00EA               	movwf	??_main+1
  2916  004D  307A               	movlw	122
  2917  004E  00E9               	movwf	??_main
  2918  004F                     u3727:	
  2919  004F  0BE9               	decfsz	??_main,f
  2920  0050  284F               	goto	u3727
  2921  0051  0BEA               	decfsz	??_main+1,f
  2922  0052  284F               	goto	u3727
  2923  0053  0BEB               	decfsz	??_main+2,f
  2924  0054  284F               	goto	u3727
  2925  0055  3200               	nop2
  2926                           
  2927                           ;main.c: 74: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  2928  0056  0020               	movlb	0	; select bank0
  2929  0057  1A8D               	btfsc	13,5	;volatile
  2930  0058  285C               	goto	l358
  2931  0059  0022               	movlb	2	; select bank2
  2932  005A  150C               	bsf	12,2	;volatile
  2933  005B  285E               	goto	l360
  2934  005C                     l358:	
  2935                           ;main.c: 75: else do { LATA2 = 0; } while(0);
  2936                           
  2937  005C  0022               	movlb	2	; select bank2
  2938  005D  110C               	bcf	12,2	;volatile
  2939  005E                     l360:	
  2940                           ;main.c: 76: do { LATA3 = 0; } while(0);
  2941                           
  2942  005E  118C               	bcf	12,3	;volatile
  2943                           
  2944                           ;main.c: 79: bat_data = 0;
  2945  005F  0021               	movlb	1	; select bank1
  2946  0060  01BC               	clrf	main@bat_data^(0+128)
  2947  0061  01BD               	clrf	(main@bat_data+1)^(0+128)
  2948                           
  2949                           ;main.c: 80: for(i=0;i<16;i++)
  2950  0062  01BB               	clrf	main@i^(0+128)
  2951  0063  3010               	movlw	16
  2952  0064  023B               	subwf	main@i^(0+128),w
  2953  0065  1803               	btfsc	3,0
  2954  0066  287C               	goto	l4305
  2955  0067                     l4299:	
  2956                           
  2957                           ;main.c: 81: {
  2958                           ;main.c: 82: bat_data = bat_data + ADC_GetConversion(ADC);
  2959  0067  300B               	movlw	11
  2960  0068  318F  2734  3180   	fcall	_ADC_GetConversion
  2961  006B  0021               	movlb	1	; select bank1
  2962  006C  083C               	movf	main@bat_data^(0+128),w
  2963  006D  0773               	addwf	?_ADC_GetConversion,w
  2964  006E  00BC               	movwf	main@bat_data^(0+128)
  2965  006F  083D               	movf	(main@bat_data+1)^(0+128),w
  2966  0070  3D74               	addwfc	?_ADC_GetConversion+1,w
  2967  0071  00BD               	movwf	(main@bat_data+1)^(0+128)
  2968  0072  3001               	movlw	1
  2969  0073  0020               	movlb	0	; select bank0
  2970  0074  00E9               	movwf	??_main
  2971  0075  0869               	movf	??_main,w
  2972  0076  0021               	movlb	1	; select bank1
  2973  0077  07BB               	addwf	main@i^(0+128),f
  2974  0078  3010               	movlw	16
  2975  0079  023B               	subwf	main@i^(0+128),w
  2976  007A  1C03               	skipc
  2977  007B  2867               	goto	l4299
  2978  007C                     l4305:	
  2979                           
  2980                           ;main.c: 83: }
  2981                           ;main.c: 84: bat_data = bat_data>>4;
  2982  007C  0E3C               	swapf	main@bat_data^(0+128),w
  2983  007D  390F               	andlw	15
  2984  007E  00BC               	movwf	main@bat_data^(0+128)
  2985  007F  0E3D               	swapf	(main@bat_data+1)^(0+128),w
  2986  0080  39F0               	andlw	240
  2987  0081  04BC               	iorwf	main@bat_data^(0+128),f
  2988  0082  0E3D               	swapf	(main@bat_data+1)^(0+128),w
  2989  0083  390F               	andlw	15
  2990  0084  00BD               	movwf	(main@bat_data^(0+128)+1)
  2991                           
  2992                           ;main.c: 85: if( bat_data < 800)
  2993  0085  3003               	movlw	3
  2994  0086  023D               	subwf	(main@bat_data+1)^(0+128),w
  2995  0087  3020               	movlw	32
  2996  0088  1903               	skipnz
  2997  0089  023C               	subwf	main@bat_data^(0+128),w
  2998  008A  1803               	skipnc
  2999  008B  288F               	goto	l4309
  3000                           
  3001                           ;main.c: 86: {
  3002                           ;main.c: 87: do { LATA2 = 0; } while(0);
  3003  008C  0022               	movlb	2	; select bank2
  3004  008D  110C               	bcf	12,2	;volatile
  3005  008E                     l367:	
  3006                           ;main.c: 88: while(1);
  3007                           
  3008  008E  288E               	goto	l367
  3009  008F                     l4309:	
  3010                           
  3011                           ;main.c: 89: }
  3012                           ;main.c: 90: i = 0 ;
  3013  008F  0021               	movlb	1	; select bank1
  3014  0090  01BB               	clrf	main@i^(0+128)
  3015                           
  3016                           ;main.c: 91: bat_data = 0 ;
  3017  0091  01BC               	clrf	main@bat_data^(0+128)
  3018  0092  01BD               	clrf	(main@bat_data+1)^(0+128)
  3019                           
  3020                           ;main.c: 94: maxim_31856_init();
  3021  0093  3183  2372  3180   	fcall	_maxim_31856_init
  3022                           
  3023                           ;main.c: 95: do { TRISB3 = 1; } while(0);
  3024  0096  0021               	movlb	1	; select bank1
  3025  0097  158D               	bsf	13,3	;volatile
  3026                           
  3027                           ;main.c: 96: Bq32k_Time_Init();
  3028  0098  318F  2768  3180   	fcall	_Bq32k_Time_Init
  3029                           
  3030                           ;main.c: 97: SendCmd_1621(0x52);
  3031  009B  3052               	movlw	82
  3032  009C  318E  26A0  3180   	fcall	_SendCmd_1621
  3033                           
  3034                           ;main.c: 98: SendCmd_1621(0X28);
  3035  009F  3028               	movlw	40
  3036  00A0  318E  26A0  3180   	fcall	_SendCmd_1621
  3037                           
  3038                           ;main.c: 99: SendCmd_1621(0x02);
  3039  00A3  3002               	movlw	2
  3040  00A4  318E  26A0  3180   	fcall	_SendCmd_1621
  3041                           
  3042                           ;main.c: 100: SendCmd_1621(0x06);
  3043  00A7  3006               	movlw	6
  3044  00A8  318E  26A0  3180   	fcall	_SendCmd_1621
  3045                           
  3046                           ;main.c: 102: WriteAll_1621(0,Dis_TAB+17,4);
  3047  00AB  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3048  00AC  0020               	movlb	0	; select bank0
  3049  00AD  00D0               	movwf	WriteAll_1621@p
  3050  00AE  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3051  00AF  00D1               	movwf	WriteAll_1621@p+1
  3052  00B0  3004               	movlw	4
  3053  00B1  00E9               	movwf	??_main
  3054  00B2  0869               	movf	??_main,w
  3055  00B3  00D2               	movwf	WriteAll_1621@cnt
  3056  00B4  3000               	movlw	0
  3057  00B5  3186  2665  3180   	fcall	_WriteAll_1621
  3058                           
  3059                           ;main.c: 104: time_count = 0;
  3060  00B8  01F8               	clrf	_time_count
  3061                           
  3062                           ;main.c: 105: Record_flag = 0;
  3063  00B9  0020               	movlb	0	; select bank0
  3064  00BA  01B9               	clrf	_Record_flag
  3065                           
  3066                           ;main.c: 106: Cur_temperature_time = 0;
  3067  00BB  01B6               	clrf	_Cur_temperature_time
  3068                           
  3069                           ;main.c: 107: bat_data = 0;
  3070  00BC  0021               	movlb	1	; select bank1
  3071  00BD  01BC               	clrf	main@bat_data^(0+128)
  3072  00BE  01BD               	clrf	(main@bat_data+1)^(0+128)
  3073                           
  3074                           ;main.c: 108: Cur_Save_Index = 0x2000;
  3075  00BF  3000               	movlw	0
  3076  00C0  0020               	movlb	0	; select bank0
  3077  00C1  00AE               	movwf	_Cur_Save_Index
  3078  00C2  3020               	movlw	32
  3079  00C3  00AF               	movwf	_Cur_Save_Index+1
  3080                           
  3081                           ;main.c: 109: Serach_Flash_Head();
  3082  00C4  3186  26CC  3180   	fcall	_Serach_Flash_Head
  3083                           
  3084                           ;main.c: 110: EUSART_Write(Cur_Save_Index>>8);
  3085  00C7  0020               	movlb	0	; select bank0
  3086  00C8  082F               	movf	_Cur_Save_Index+1,w
  3087  00C9  318D  25EF  3180   	fcall	_EUSART_Write
  3088                           
  3089                           ;main.c: 111: EUSART_Write(Cur_Save_Index&0XFF);
  3090  00CC  0020               	movlb	0	; select bank0
  3091  00CD  082E               	movf	_Cur_Save_Index,w
  3092  00CE  318D  25EF  3180   	fcall	_EUSART_Write
  3093                           
  3094                           ;main.c: 135: (INTCONbits.GIE = 1);
  3095  00D1  178B               	bsf	11,7	;volatile
  3096                           
  3097                           ;main.c: 138: (INTCONbits.PEIE = 1);
  3098  00D2  170B               	bsf	11,6	;volatile
  3099  00D3                     l4347:	
  3100                           ;main.c: 146: while (1)
  3101                           
  3102                           
  3103                           ;main.c: 147: {
  3104                           ;main.c: 152: bat_data = bat_data + ADC_GetConversion(ADC);
  3105  00D3  300B               	movlw	11
  3106  00D4  318F  2734  3180   	fcall	_ADC_GetConversion
  3107  00D7  0021               	movlb	1	; select bank1
  3108  00D8  083C               	movf	main@bat_data^(0+128),w
  3109  00D9  0773               	addwf	?_ADC_GetConversion,w
  3110  00DA  00BC               	movwf	main@bat_data^(0+128)
  3111  00DB  083D               	movf	(main@bat_data+1)^(0+128),w
  3112  00DC  3D74               	addwfc	?_ADC_GetConversion+1,w
  3113  00DD  00BD               	movwf	(main@bat_data+1)^(0+128)
  3114                           
  3115                           ;main.c: 153: i++;
  3116  00DE  3001               	movlw	1
  3117  00DF  0020               	movlb	0	; select bank0
  3118  00E0  00E9               	movwf	??_main
  3119  00E1  0869               	movf	??_main,w
  3120  00E2  0021               	movlb	1	; select bank1
  3121  00E3  07BB               	addwf	main@i^(0+128),f
  3122                           
  3123                           ;main.c: 154: if(i == 16)
  3124  00E4  3010               	movlw	16
  3125  00E5  063B               	xorwf	main@i^(0+128),w
  3126  00E6  1D03               	btfss	3,2
  3127  00E7  28FF               	goto	l4361
  3128                           
  3129                           ;main.c: 155: {
  3130                           ;main.c: 156: i = 0;
  3131  00E8  01BB               	clrf	main@i^(0+128)
  3132                           
  3133                           ;main.c: 157: bat_data = bat_data>>4;
  3134  00E9  0E3C               	swapf	main@bat_data^(0+128),w
  3135  00EA  390F               	andlw	15
  3136  00EB  00BC               	movwf	main@bat_data^(0+128)
  3137  00EC  0E3D               	swapf	(main@bat_data+1)^(0+128),w
  3138  00ED  39F0               	andlw	240
  3139  00EE  04BC               	iorwf	main@bat_data^(0+128),f
  3140  00EF  0E3D               	swapf	(main@bat_data+1)^(0+128),w
  3141  00F0  390F               	andlw	15
  3142  00F1  00BD               	movwf	(main@bat_data^(0+128)+1)
  3143                           
  3144                           ;main.c: 158: if( bat_data < 800)
  3145  00F2  3003               	movlw	3
  3146  00F3  023D               	subwf	(main@bat_data+1)^(0+128),w
  3147  00F4  3020               	movlw	32
  3148  00F5  1903               	skipnz
  3149  00F6  023C               	subwf	main@bat_data^(0+128),w
  3150  00F7  1803               	skipnc
  3151  00F8  28FC               	goto	l4359
  3152                           
  3153                           ;main.c: 159: {
  3154                           ;main.c: 160: do { LATA2 = 0; } while(0);
  3155  00F9  0022               	movlb	2	; select bank2
  3156  00FA  110C               	bcf	12,2	;volatile
  3157  00FB                     l377:	
  3158                           ;main.c: 161: while(1);
  3159                           
  3160  00FB  28FB               	goto	l377
  3161  00FC                     l4359:	
  3162                           
  3163                           ;main.c: 162: }
  3164                           ;main.c: 163: bat_data = 0;
  3165  00FC  0021               	movlb	1	; select bank1
  3166  00FD  01BC               	clrf	main@bat_data^(0+128)
  3167  00FE  01BD               	clrf	(main@bat_data+1)^(0+128)
  3168  00FF                     l4361:	
  3169                           
  3170                           ;main.c: 164: }
  3171                           ;main.c: 169: temperature_process();
  3172  00FF  3186  269A  3180   	fcall	_temperature_process
  3173                           
  3174                           ;main.c: 170: Key_Process();
  3175  0102  3184  24DD  3180   	fcall	_Key_Process
  3176  0105  28D3               	goto	l4347
  3177  0106                     __end_of_main:	
  3178                           
  3179                           	psect	text1
  3180  0372                     __ptext1:	
  3181 ;; *************** function _maxim_31856_init *****************
  3182 ;; Defined at:
  3183 ;;		line 63 in file "mcc_generated_files/max31856.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;Total ram usage:        1 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    5
  3204 ;; This function calls:
  3205 ;;		_maxim_31856_write_register
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           
  3212                           ;psect for function _maxim_31856_init
  3213  0372                     _maxim_31856_init:	
  3214                           
  3215                           ;max31856.c: 66: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3219  0372  3015               	movlw	21
  3220  0373  00F6               	movwf	??_maxim_31856_init
  3221  0374  0876               	movf	??_maxim_31856_init,w
  3222  0375  00F9               	movwf	_uch_cr0
  3223                           
  3224                           ;max31856.c: 68: uch_cr1&= (uint8_t) 0x0F ;
  3225  0376  300F               	movlw	15
  3226  0377  00F6               	movwf	??_maxim_31856_init
  3227  0378  0876               	movf	??_maxim_31856_init,w
  3228  0379  0020               	movlb	0	; select bank0
  3229  037A  05BF               	andwf	_uch_cr1,f
  3230                           
  3231                           ;max31856.c: 69: uch_cr1|=(uint8_t) 0x07;
  3232  037B  3007               	movlw	7
  3233  037C  00F6               	movwf	??_maxim_31856_init
  3234  037D  0876               	movf	??_maxim_31856_init,w
  3235  037E  04BF               	iorwf	_uch_cr1,f
  3236                           
  3237                           ;max31856.c: 71: uch_mask=(uint8_t)0x00 ;
  3238  037F  01C2               	clrf	_uch_mask
  3239                           
  3240                           ;max31856.c: 73: maxim_31856_write_register(0x80, uch_cr0);
  3241  0380  0879               	movf	_uch_cr0,w
  3242  0381  00F6               	movwf	??_maxim_31856_init
  3243  0382  0876               	movf	??_maxim_31856_init,w
  3244  0383  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3245  0384  3080               	movlw	128
  3246  0385  318E  2615  3183   	fcall	_maxim_31856_write_register
  3247                           
  3248                           ;max31856.c: 74: maxim_31856_write_register(0x81, uch_cr1);
  3249  0388  0020               	movlb	0	; select bank0
  3250  0389  083F               	movf	_uch_cr1,w
  3251  038A  00F6               	movwf	??_maxim_31856_init
  3252  038B  0876               	movf	??_maxim_31856_init,w
  3253  038C  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3254  038D  3081               	movlw	129
  3255  038E  318E  2615  3183   	fcall	_maxim_31856_write_register
  3256                           
  3257                           ;max31856.c: 75: maxim_31856_write_register(0x82,uch_mask);
  3258  0391  0020               	movlb	0	; select bank0
  3259  0392  0842               	movf	_uch_mask,w
  3260  0393  00F6               	movwf	??_maxim_31856_init
  3261  0394  0876               	movf	??_maxim_31856_init,w
  3262  0395  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3263  0396  3082               	movlw	130
  3264  0397  318E  2615  3183   	fcall	_maxim_31856_write_register
  3265                           
  3266                           ;max31856.c: 78: maxim_31856_write_register(0x83,0x7F);
  3267  039A  307F               	movlw	127
  3268  039B  00F6               	movwf	??_maxim_31856_init
  3269  039C  0876               	movf	??_maxim_31856_init,w
  3270  039D  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3271  039E  3083               	movlw	131
  3272  039F  318E  2615  3183   	fcall	_maxim_31856_write_register
  3273                           
  3274                           ;max31856.c: 79: maxim_31856_write_register(0x84,0xC0);
  3275  03A2  30C0               	movlw	192
  3276  03A3  00F6               	movwf	??_maxim_31856_init
  3277  03A4  0876               	movf	??_maxim_31856_init,w
  3278  03A5  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3279  03A6  3084               	movlw	132
  3280  03A7  318E  2615  3183   	fcall	_maxim_31856_write_register
  3281                           
  3282                           ;max31856.c: 81: maxim_31856_write_register(0x85,0x7F);
  3283  03AA  307F               	movlw	127
  3284  03AB  00F6               	movwf	??_maxim_31856_init
  3285  03AC  0876               	movf	??_maxim_31856_init,w
  3286  03AD  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3287  03AE  3085               	movlw	133
  3288  03AF  318E  2615  3183   	fcall	_maxim_31856_write_register
  3289                           
  3290                           ;max31856.c: 82: maxim_31856_write_register(0x86,0xFF);
  3291  03B2  30FF               	movlw	255
  3292  03B3  00F6               	movwf	??_maxim_31856_init
  3293  03B4  0876               	movf	??_maxim_31856_init,w
  3294  03B5  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3295  03B6  3086               	movlw	134
  3296  03B7  318E  2615  3183   	fcall	_maxim_31856_write_register
  3297                           
  3298                           ;max31856.c: 83: maxim_31856_write_register(0x87,0x80);
  3299  03BA  3080               	movlw	128
  3300  03BB  00F6               	movwf	??_maxim_31856_init
  3301  03BC  0876               	movf	??_maxim_31856_init,w
  3302  03BD  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3303  03BE  3087               	movlw	135
  3304  03BF  318E  2615  3183   	fcall	_maxim_31856_write_register
  3305                           
  3306                           ;max31856.c: 84: maxim_31856_write_register(0x88,0x00);
  3307  03C2  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3308  03C3  3088               	movlw	136
  3309  03C4  318E  2615  3183   	fcall	_maxim_31856_write_register
  3310                           
  3311                           ;max31856.c: 86: maxim_31856_write_register(0x89,0x00);
  3312  03C7  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3313  03C8  3089               	movlw	137
  3314  03C9  318E  2615  3183   	fcall	_maxim_31856_write_register
  3315                           
  3316                           ;max31856.c: 90: maxim_31856_write_register(0x8A,0x00);
  3317  03CC  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3318  03CD  308A               	movlw	138
  3319  03CE  318E  2615  3183   	fcall	_maxim_31856_write_register
  3320                           
  3321                           ;max31856.c: 91: maxim_31856_write_register(0x8B,0x00);
  3322  03D1  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3323  03D2  308B               	movlw	139
  3324  03D3  318E  2615         	fcall	_maxim_31856_write_register
  3325  03D5  0008               	return
  3326  03D6                     __end_of_maxim_31856_init:	
  3327                           
  3328                           	psect	text2
  3329  06CC                     __ptext2:	
  3330 ;; *************** function _Serach_Flash_Head *****************
  3331 ;; Defined at:
  3332 ;;		line 40 in file "mcc_generated_files/save.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  i               2    2[BANK0 ] unsigned int 
  3337 ;;  data            2    0[BANK0 ] unsigned int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    4
  3354 ;; This function calls:
  3355 ;;		_FLASH_ReadWord
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _Serach_Flash_Head
  3363  06CC                     _Serach_Flash_Head:	
  3364                           
  3365                           ;save.c: 42: unsigned int i=0;
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _Serach_Flash_Head: [wreg+status,2+status,0+pclath+cstack]
  3369  06CC  0020               	movlb	0	; select bank0
  3370  06CD  01D2               	clrf	Serach_Flash_Head@i
  3371  06CE  01D3               	clrf	Serach_Flash_Head@i+1
  3372                           
  3373                           ;save.c: 43: unsigned int data=0;
  3374  06CF  01D0               	clrf	Serach_Flash_Head@data
  3375  06D0  01D1               	clrf	Serach_Flash_Head@data+1
  3376                           
  3377                           ;save.c: 44: for(i = 0x2000; i<16384;i++ )
  3378  06D1  3000               	movlw	0
  3379  06D2  00D2               	movwf	Serach_Flash_Head@i
  3380  06D3  3020               	movlw	32
  3381  06D4  00D3               	movwf	Serach_Flash_Head@i+1
  3382  06D5                     L1:	
  3383  06D5  3040               	movlw	64
  3384  06D6  0253               	subwf	Serach_Flash_Head@i+1,w
  3385  06D7  3000               	movlw	0
  3386  06D8  1903               	skipnz
  3387  06D9  0252               	subwf	Serach_Flash_Head@i,w
  3388  06DA  1803               	btfsc	3,0
  3389  06DB  0008               	return
  3390                           
  3391                           ;save.c: 45: {
  3392                           ;save.c: 46: data = FLASH_ReadWord(i);
  3393  06DC  0853               	movf	Serach_Flash_Head@i+1,w
  3394  06DD  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3395  06DE  0852               	movf	Serach_Flash_Head@i,w
  3396  06DF  00F3               	movwf	FLASH_ReadWord@flashAddr
  3397  06E0  318F  271B  3186   	fcall	_FLASH_ReadWord
  3398  06E3  0874               	movf	?_FLASH_ReadWord+1,w
  3399  06E4  0020               	movlb	0	; select bank0
  3400  06E5  00D1               	movwf	Serach_Flash_Head@data+1
  3401  06E6  0873               	movf	?_FLASH_ReadWord,w
  3402  06E7  00D0               	movwf	Serach_Flash_Head@data
  3403                           
  3404                           ;save.c: 47: if( data == 0x3fff)
  3405  06E8  0A50               	incf	Serach_Flash_Head@data,w
  3406  06E9  303F               	movlw	63
  3407  06EA  1903               	skipnz
  3408  06EB  0651               	xorwf	Serach_Flash_Head@data+1,w
  3409  06EC  1D03               	btfss	3,2
  3410  06ED  2EF7               	goto	l4247
  3411                           
  3412                           ;save.c: 48: {
  3413                           ;save.c: 49: i++;
  3414  06EE  3001               	movlw	1
  3415  06EF  07D2               	addwf	Serach_Flash_Head@i,f
  3416  06F0  3000               	movlw	0
  3417  06F1  3DD3               	addwfc	Serach_Flash_Head@i+1,f
  3418                           
  3419                           ;save.c: 50: Cur_Save_Index = i;
  3420  06F2  0853               	movf	Serach_Flash_Head@i+1,w
  3421  06F3  00AF               	movwf	_Cur_Save_Index+1
  3422  06F4  0852               	movf	Serach_Flash_Head@i,w
  3423  06F5  00AE               	movwf	_Cur_Save_Index
  3424                           
  3425                           ;save.c: 51: break;
  3426  06F6  0008               	return
  3427  06F7                     l4247:	
  3428  06F7  3001               	movlw	1
  3429  06F8  07D2               	addwf	Serach_Flash_Head@i,f
  3430  06F9  3000               	movlw	0
  3431  06FA  3DD3               	addwfc	Serach_Flash_Head@i+1,f
  3432  06FB  2ED5               	goto	L1
  3433  06FC                     __end_of_Serach_Flash_Head:	
  3434                           
  3435                           	psect	text3
  3436  0F1B                     __ptext3:	
  3437 ;; *************** function _FLASH_ReadWord *****************
  3438 ;; Defined at:
  3439 ;;		line 58 in file "mcc_generated_files/memory.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  flashAddr       2    3[COMMON] unsigned int 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    3[COMMON] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;Total ram usage:        3 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_Serach_Flash_Head
  3464 ;;		_FLASH_WriteWord
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           
  3469                           ;psect for function _FLASH_ReadWord
  3470  0F1B                     _FLASH_ReadWord:	
  3471                           
  3472                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3476  0F1B  3000               	movlw	0
  3477  0F1C  1B8B               	btfsc	11,7	;volatile
  3478  0F1D  3001               	movlw	1
  3479  0F1E  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  3480                           
  3481                           ;memory.c: 61: INTCONbits.GIE = 0;
  3482  0F1F  138B               	bcf	11,7	;volatile
  3483                           
  3484                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  3485  0F20  0873               	movf	FLASH_ReadWord@flashAddr,w
  3486  0F21  0023               	movlb	3	; select bank3
  3487  0F22  0091               	movwf	17	;volatile
  3488                           
  3489                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  3490  0F23  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  3491  0F24  0092               	movwf	18	;volatile
  3492                           
  3493                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  3494  0F25  1315               	bcf	21,6	;volatile
  3495                           
  3496                           ;memory.c: 66: PMCON1bits.RD = 1;
  3497  0F26  1415               	bsf	21,0	;volatile
  3498                           
  3499                           ;memory.c: 67: __nop();
  3500  0F27  0000               	nop
  3501                           
  3502                           ;memory.c: 68: __nop();
  3503  0F28  0000               	nop
  3504                           
  3505                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  3506  0F29  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  3507  0F2A  1C03               	skipc
  3508  0F2B  138B               	bcf	11,7	;volatile
  3509  0F2C  1803               	skipnc
  3510  0F2D  178B               	bsf	11,7	;volatile
  3511                           
  3512                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  3513  0F2E  0023               	movlb	3	; select bank3
  3514  0F2F  0814               	movf	20,w	;volatile
  3515  0F30  00F4               	movwf	?_FLASH_ReadWord+1
  3516  0F31  0813               	movf	19,w	;volatile
  3517  0F32  00F3               	movwf	?_FLASH_ReadWord
  3518  0F33  0008               	return
  3519  0F34                     __end_of_FLASH_ReadWord:	
  3520                           
  3521                           	psect	text4
  3522  0E8B                     __ptext4:	
  3523 ;; *************** function _SYSTEM_Initialize *****************
  3524 ;; Defined at:
  3525 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    4
  3546 ;; This function calls:
  3547 ;;		_ADC_Initialize
  3548 ;;		_EUSART_Initialize
  3549 ;;		_FVR_Initialize
  3550 ;;		_OSCILLATOR_Initialize
  3551 ;;		_PIN_MANAGER_Initialize
  3552 ;;		_SPI_Initialize
  3553 ;;		_TMR0_Initialize
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _SYSTEM_Initialize
  3561  0E8B                     _SYSTEM_Initialize:	
  3562                           
  3563                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3567  0E8B  318D  25D2  318E   	fcall	_OSCILLATOR_Initialize
  3568                           
  3569                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3570  0E8E  318F  27DE  318E   	fcall	_PIN_MANAGER_Initialize
  3571                           
  3572                           ;mcc.c: 73: SPI_Initialize();
  3573  0E91  318D  25DD  318E   	fcall	_SPI_Initialize
  3574                           
  3575                           ;mcc.c: 74: EUSART_Initialize();
  3576  0E94  318E  2609  318E   	fcall	_EUSART_Initialize
  3577                           
  3578                           ;mcc.c: 75: ADC_Initialize();
  3579  0E97  318D  25F7  318E   	fcall	_ADC_Initialize
  3580                           
  3581                           ;mcc.c: 76: TMR0_Initialize();
  3582  0E9A  318E  2622  318E   	fcall	_TMR0_Initialize
  3583                           
  3584                           ;mcc.c: 77: FVR_Initialize();
  3585  0E9D  318D  25C9         	fcall	_FVR_Initialize
  3586  0E9F  0008               	return
  3587  0EA0                     __end_of_SYSTEM_Initialize:	
  3588                           
  3589                           	psect	text5
  3590  0E22                     __ptext5:	
  3591 ;; *************** function _TMR0_Initialize *****************
  3592 ;; Defined at:
  3593 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;Total ram usage:        1 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    3
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_SYSTEM_Initialize
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _TMR0_Initialize
  3623  0E22                     _TMR0_Initialize:	
  3624                           
  3625                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3629  0E22  0021               	movlb	1	; select bank1
  3630  0E23  0815               	movf	21,w	;volatile
  3631  0E24  39C0               	andlw	192
  3632  0E25  3817               	iorlw	23
  3633  0E26  0095               	movwf	21	;volatile
  3634                           
  3635                           ;tmr0.c: 73: TMR0 = 0x64;
  3636  0E27  3064               	movlw	100
  3637  0E28  0020               	movlb	0	; select bank0
  3638  0E29  0095               	movwf	21	;volatile
  3639                           
  3640                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3641  0E2A  3064               	movlw	100
  3642  0E2B  00F3               	movwf	??_TMR0_Initialize
  3643  0E2C  0873               	movf	??_TMR0_Initialize,w
  3644  0E2D  00EC               	movwf	_timer0ReloadVal	;volatile
  3645                           
  3646                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3647  0E2E  110B               	bcf	11,2	;volatile
  3648                           
  3649                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3650  0E2F  168B               	bsf	11,5	;volatile
  3651  0E30  0008               	return
  3652  0E31                     __end_of_TMR0_Initialize:	
  3653                           
  3654                           	psect	text6
  3655  0DDD                     __ptext6:	
  3656 ;; *************** function _SPI_Initialize *****************
  3657 ;; Defined at:
  3658 ;;		line 64 in file "mcc_generated_files/spi.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    3
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_SYSTEM_Initialize
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _SPI_Initialize
  3688  0DDD                     _SPI_Initialize:	
  3689                           
  3690                           ;spi.c: 68: SSP1STAT = 0x00;
  3691                           
  3692                           ;incstack = 0
  3693                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3694  0DDD  0024               	movlb	4	; select bank4
  3695  0DDE  0194               	clrf	20	;volatile
  3696                           
  3697                           ;spi.c: 71: SSP1CON1 = 0x30;
  3698  0DDF  3030               	movlw	48
  3699  0DE0  0095               	movwf	21	;volatile
  3700                           
  3701                           ;spi.c: 74: SSP1ADD = 0x00;
  3702  0DE1  0192               	clrf	18	;volatile
  3703  0DE2  0008               	return
  3704  0DE3                     __end_of_SPI_Initialize:	
  3705                           
  3706                           	psect	text7
  3707  0FDE                     __ptext7:	
  3708 ;; *************** function _PIN_MANAGER_Initialize *****************
  3709 ;; Defined at:
  3710 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    3
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_SYSTEM_Initialize
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _PIN_MANAGER_Initialize
  3740  0FDE                     _PIN_MANAGER_Initialize:	
  3741                           
  3742                           ;pin_manager.c: 51: LATA = 0x7B;
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3746  0FDE  307B               	movlw	123
  3747  0FDF  0022               	movlb	2	; select bank2
  3748  0FE0  008C               	movwf	12	;volatile
  3749                           
  3750                           ;pin_manager.c: 52: TRISA = 0x80;
  3751  0FE1  3080               	movlw	128
  3752  0FE2  0021               	movlb	1	; select bank1
  3753  0FE3  008C               	movwf	12	;volatile
  3754                           
  3755                           ;pin_manager.c: 53: ANSELA = 0x00;
  3756  0FE4  0023               	movlb	3	; select bank3
  3757  0FE5  018C               	clrf	12	;volatile
  3758                           
  3759                           ;pin_manager.c: 55: LATB = 0x00;
  3760  0FE6  0022               	movlb	2	; select bank2
  3761  0FE7  018D               	clrf	13	;volatile
  3762                           
  3763                           ;pin_manager.c: 56: TRISB = 0xFC;
  3764  0FE8  30FC               	movlw	252
  3765  0FE9  0021               	movlb	1	; select bank1
  3766  0FEA  008D               	movwf	13	;volatile
  3767                           
  3768                           ;pin_manager.c: 57: ANSELB = 0x10;
  3769  0FEB  3010               	movlw	16
  3770  0FEC  0023               	movlb	3	; select bank3
  3771  0FED  008D               	movwf	13	;volatile
  3772                           
  3773                           ;pin_manager.c: 58: WPUB = 0x2C;
  3774  0FEE  302C               	movlw	44
  3775  0FEF  0024               	movlb	4	; select bank4
  3776  0FF0  008D               	movwf	13	;volatile
  3777                           
  3778                           ;pin_manager.c: 60: LATC = 0x07;
  3779  0FF1  3007               	movlw	7
  3780  0FF2  0022               	movlb	2	; select bank2
  3781  0FF3  008E               	movwf	14	;volatile
  3782                           
  3783                           ;pin_manager.c: 61: TRISC = 0xD0;
  3784  0FF4  30D0               	movlw	208
  3785  0FF5  0021               	movlb	1	; select bank1
  3786  0FF6  008E               	movwf	14	;volatile
  3787                           
  3788                           ;pin_manager.c: 62: ANSELC = 0x00;
  3789  0FF7  0023               	movlb	3	; select bank3
  3790  0FF8  018E               	clrf	14	;volatile
  3791                           
  3792                           ;pin_manager.c: 64: WPUE = 0x00;
  3793  0FF9  0024               	movlb	4	; select bank4
  3794  0FFA  0190               	clrf	16	;volatile
  3795                           
  3796                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  3797  0FFB  0021               	movlb	1	; select bank1
  3798  0FFC  1395               	bcf	21,7	;volatile
  3799                           
  3800                           ;pin_manager.c: 68: APFCON = 0x00;
  3801  0FFD  0022               	movlb	2	; select bank2
  3802  0FFE  019D               	clrf	29	;volatile
  3803  0FFF  0008               	return
  3804  1000                     __end_of_PIN_MANAGER_Initialize:	
  3805                           
  3806                           	psect	text8
  3807  0DD2                     __ptext8:	
  3808 ;; *************** function _OSCILLATOR_Initialize *****************
  3809 ;; Defined at:
  3810 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    3
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_SYSTEM_Initialize
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function _OSCILLATOR_Initialize
  3840  0DD2                     _OSCILLATOR_Initialize:	
  3841                           
  3842                           ;mcc.c: 82: OSCCON = 0x78;
  3843                           
  3844                           ;incstack = 0
  3845                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3846  0DD2  3078               	movlw	120
  3847  0DD3  0021               	movlb	1	; select bank1
  3848  0DD4  0099               	movwf	25	;volatile
  3849                           
  3850                           ;mcc.c: 84: OSCSTAT = 0x00;
  3851  0DD5  019A               	clrf	26	;volatile
  3852  0DD6  0008               	return
  3853  0DD7                     __end_of_OSCILLATOR_Initialize:	
  3854                           
  3855                           	psect	text9
  3856  0DC9                     __ptext9:	
  3857 ;; *************** function _FVR_Initialize *****************
  3858 ;; Defined at:
  3859 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    3
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_SYSTEM_Initialize
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _FVR_Initialize
  3889  0DC9                     _FVR_Initialize:	
  3890                           
  3891                           ;fvr.c: 60: FVRCON = 0x82;
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _FVR_Initialize: [wreg]
  3895  0DC9  3082               	movlw	130
  3896  0DCA  0022               	movlb	2	; select bank2
  3897  0DCB  0097               	movwf	23	;volatile
  3898  0DCC  0008               	return
  3899  0DCD                     __end_of_FVR_Initialize:	
  3900                           
  3901                           	psect	text10
  3902  0E09                     __ptext10:	
  3903 ;; *************** function _EUSART_Initialize *****************
  3904 ;; Defined at:
  3905 ;;		line 56 in file "mcc_generated_files/eusart.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    3
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_SYSTEM_Initialize
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _EUSART_Initialize
  3935  0E09                     _EUSART_Initialize:	
  3936                           
  3937                           ;eusart.c: 60: BAUDCON = 0x48;
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _EUSART_Initialize: [wreg]
  3941  0E09  3048               	movlw	72
  3942  0E0A  0023               	movlb	3	; select bank3
  3943  0E0B  009F               	movwf	31	;volatile
  3944                           
  3945                           ;eusart.c: 63: RCSTA = 0x80;
  3946  0E0C  3080               	movlw	128
  3947  0E0D  009D               	movwf	29	;volatile
  3948                           
  3949                           ;eusart.c: 66: TXSTA = 0x26;
  3950  0E0E  3026               	movlw	38
  3951  0E0F  009E               	movwf	30	;volatile
  3952                           
  3953                           ;eusart.c: 69: SPBRGL = 0xA0;
  3954  0E10  30A0               	movlw	160
  3955  0E11  009B               	movwf	27	;volatile
  3956                           
  3957                           ;eusart.c: 72: SPBRGH = 0x01;
  3958  0E12  3001               	movlw	1
  3959  0E13  009C               	movwf	28	;volatile
  3960  0E14  0008               	return
  3961  0E15                     __end_of_EUSART_Initialize:	
  3962                           
  3963                           	psect	text11
  3964  0DF7                     __ptext11:	
  3965 ;; *************** function _ADC_Initialize *****************
  3966 ;; Defined at:
  3967 ;;		line 65 in file "mcc_generated_files/adc.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_SYSTEM_Initialize
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           
  3996                           ;psect for function _ADC_Initialize
  3997  0DF7                     _ADC_Initialize:	
  3998                           
  3999                           ;adc.c: 69: ADCON0 = 0x01;
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4003  0DF7  3001               	movlw	1
  4004  0DF8  0021               	movlb	1	; select bank1
  4005  0DF9  009D               	movwf	29	;volatile
  4006                           
  4007                           ;adc.c: 72: ADCON1 = 0xE3;
  4008  0DFA  30E3               	movlw	227
  4009  0DFB  009E               	movwf	30	;volatile
  4010                           
  4011                           ;adc.c: 75: ADRESL = 0x00;
  4012  0DFC  019B               	clrf	27	;volatile
  4013                           
  4014                           ;adc.c: 78: ADRESH = 0x00;
  4015  0DFD  019C               	clrf	28	;volatile
  4016  0DFE  0008               	return
  4017  0DFF                     __end_of_ADC_Initialize:	
  4018                           
  4019                           	psect	text12
  4020  04DD                     __ptext12:	
  4021 ;; *************** function _Key_Process *****************
  4022 ;; Defined at:
  4023 ;;		line 40 in file "mcc_generated_files/key.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  gKeyValue       1   24[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2  293[None  ] int 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    8
  4044 ;; This function calls:
  4045 ;;		_Key_Scan
  4046 ;;		_SendCmd_1621
  4047 ;;		_Set_finish_flag
  4048 ;;		_Set_start_flag
  4049 ;;		_temperature_process
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function _Key_Process
  4057  04DD                     _Key_Process:	
  4058                           
  4059                           ;key.c: 42: unsigned char gKeyValue=0;
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4063  04DD  0020               	movlb	0	; select bank0
  4064  04DE  01E8               	clrf	Key_Process@gKeyValue
  4065                           
  4066                           ;key.c: 43: LongPressSec = 0;
  4067  04DF  01B7               	clrf	_LongPressSec
  4068                           
  4069                           ;key.c: 44: gKeyValue=Key_Scan();
  4070  04E0  3187  27D4  3184   	fcall	_Key_Scan
  4071  04E3  0020               	movlb	0	; select bank0
  4072  04E4  00E7               	movwf	??_Key_Process
  4073  04E5  0867               	movf	??_Key_Process,w
  4074  04E6  00E8               	movwf	Key_Process@gKeyValue
  4075                           
  4076                           ;key.c: 45: if(gKeyValue)
  4077  04E7  0868               	movf	Key_Process@gKeyValue,w
  4078  04E8  1903               	btfsc	3,2
  4079  04E9  0008               	return
  4080  04EA  2D21               	goto	l4283
  4081  04EB                     l4257:	
  4082                           ;key.c: 50: while( !(LongPressSec > 2 || RB5 == 1) );
  4083                           
  4084                           ;key.c: 48: {
  4085                           ;key.c: 49: case 0x01:
  4086                           
  4087                           ;key.c: 46: {
  4088                           ;key.c: 47: switch(gKeyValue)
  4089                           
  4090  04EB  3003               	movlw	3
  4091  04EC  0237               	subwf	_LongPressSec,w
  4092  04ED  1803               	skipnc
  4093  04EE  2CF1               	goto	l4261
  4094  04EF  1E8D               	btfss	13,5	;volatile
  4095  04F0  2CEB               	goto	l4257
  4096  04F1                     l4261:	
  4097                           
  4098                           ;key.c: 51: if(LongPressSec > 2)
  4099  04F1  3003               	movlw	3
  4100  04F2  0237               	subwf	_LongPressSec,w
  4101  04F3  1C03               	skipc
  4102  04F4  2CFC               	goto	l818
  4103                           
  4104                           ;key.c: 52: {
  4105                           ;key.c: 53: do { LATA2 = 0; } while(0);
  4106  04F5  0022               	movlb	2	; select bank2
  4107  04F6  110C               	bcf	12,2	;volatile
  4108                           
  4109                           ;key.c: 54: do { LATA3 = 1; } while(0);
  4110  04F7  158C               	bsf	12,3	;volatile
  4111                           
  4112                           ;key.c: 55: SendCmd_1621(0x04);
  4113  04F8  3004               	movlw	4
  4114  04F9  318E  26A0  3184   	fcall	_SendCmd_1621
  4115  04FC                     l818:	
  4116                           ;key.c: 56: }
  4117                           ;key.c: 57: while(RB5 == 0);
  4118                           
  4119  04FC  0020               	movlb	0	; select bank0
  4120  04FD  1A8D               	btfsc	13,5	;volatile
  4121  04FE  0008               	return
  4122  04FF  2CFC               	goto	l818
  4123  0500                     l4265:	
  4124                           ;key.c: 60: while( !(LongPressSec > 2 || RA7 == 1) );
  4125                           
  4126                           ;key.c: 59: case 0x02:
  4127                           
  4128                           ;key.c: 58: break;
  4129                           
  4130  0500  3003               	movlw	3
  4131  0501  0237               	subwf	_LongPressSec,w
  4132  0502  1803               	skipnc
  4133  0503  2D06               	goto	l4269
  4134  0504  1F8C               	btfss	12,7	;volatile
  4135  0505  2D00               	goto	l4265
  4136  0506                     l4269:	
  4137                           
  4138                           ;key.c: 61: if(LongPressSec > 2)
  4139  0506  3003               	movlw	3
  4140  0507  0237               	subwf	_LongPressSec,w
  4141  0508  1C03               	skipc
  4142  0509  2D15               	goto	l4277
  4143                           
  4144                           ;key.c: 62: {
  4145                           ;key.c: 63: if(Record_flag == 0)
  4146  050A  0839               	movf	_Record_flag,w
  4147  050B  1D03               	btfss	3,2
  4148  050C  2D11               	goto	l4275
  4149                           
  4150                           ;key.c: 64: {
  4151                           ;key.c: 65: Set_start_flag();
  4152  050D  318D  25D7  3184   	fcall	_Set_start_flag
  4153                           
  4154                           ;key.c: 66: }
  4155  0510  2D1D               	goto	l832
  4156  0511                     l4275:	
  4157                           
  4158                           ;key.c: 67: else
  4159                           ;key.c: 68: {
  4160                           ;key.c: 69: Set_finish_flag();
  4161  0511  318D  25CD  3184   	fcall	_Set_finish_flag
  4162                           
  4163                           ;key.c: 70: }
  4164                           ;key.c: 71: }
  4165  0514  2D1D               	goto	l832
  4166  0515                     l4277:	
  4167                           
  4168                           ;key.c: 72: else
  4169                           ;key.c: 73: {
  4170                           ;key.c: 74: time_count = 5;
  4171  0515  3005               	movlw	5
  4172  0516  0020               	movlb	0	; select bank0
  4173  0517  00E7               	movwf	??_Key_Process
  4174  0518  0867               	movf	??_Key_Process,w
  4175  0519  00F8               	movwf	_time_count
  4176                           
  4177                           ;key.c: 75: temperature_process();
  4178  051A  3186  269A  3184   	fcall	_temperature_process
  4179  051D                     l832:	
  4180                           ;key.c: 76: }
  4181                           ;key.c: 77: while(RA7 == 0);
  4182                           
  4183  051D  0020               	movlb	0	; select bank0
  4184  051E  1B8C               	btfsc	12,7	;volatile
  4185  051F  0008               	return
  4186  0520  2D1D               	goto	l832
  4187  0521                     l4283:	
  4188                           ;key.c: 80: }
  4189                           
  4190                           ;key.c: 79: default:break;
  4191                           
  4192                           ;key.c: 78: break;
  4193                           
  4194  0521  0868               	movf	Key_Process@gKeyValue,w
  4195                           
  4196                           ; Switch size 1, requested type "space"
  4197                           ; Number of cases is 2, Range of values is 1 to 2
  4198                           ; switch strategies available:
  4199                           ; Name         Instructions Cycles
  4200                           ; simple_byte            7     4 (average)
  4201                           ; direct_byte           13     9 (fixed)
  4202                           ; jumptable            263     9 (fixed)
  4203                           ;	Chosen strategy is simple_byte
  4204  0522  3A01               	xorlw	1	; case 1
  4205  0523  1903               	skipnz
  4206  0524  2CEB               	goto	l4257
  4207  0525  3A03               	xorlw	3	; case 2
  4208  0526  1903               	skipnz
  4209  0527  2D00               	goto	l4265
  4210  0528  2D2A               	goto	l836
  4211  0529  0008               	return
  4212  052A                     l836:	
  4213  052A  0008               	return
  4214  052B                     __end_of_Key_Process:	
  4215                           
  4216                           	psect	text13
  4217  069A                     __ptext13:	
  4218 ;; *************** function _temperature_process *****************
  4219 ;; Defined at:
  4220 ;;		line 265 in file "mcc_generated_files/max31856.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    7
  4241 ;; This function calls:
  4242 ;;		_Two_Display
  4243 ;;		_one_temperature_trans
  4244 ;;		_temperature_display
  4245 ;;		_time_Display
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;;		_Key_Process
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _temperature_process
  4254  069A                     _temperature_process:	
  4255                           
  4256                           ;max31856.c: 267: switch(time_count)
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4260  069A  2EBA               	goto	l4105
  4261  069B                     l4077:	
  4262                           ;max31856.c: 268: {
  4263                           ;max31856.c: 269: case 0: Two_Display(1);
  4264                           
  4265  069B  3001               	movlw	1
  4266  069C  3187  27AB  3186   	fcall	_Two_Display
  4267                           
  4268                           ;max31856.c: 270: do { LATA1 = 1; } while(0);
  4269  069F  0022               	movlb	2	; select bank2
  4270  06A0  148C               	bsf	12,1	;volatile
  4271                           
  4272                           ;max31856.c: 271: do { LATA0 = 1; } while(0);
  4273  06A1  140C               	bsf	12,0	;volatile
  4274                           
  4275                           ;max31856.c: 272: do { LATA0 = 0; } while(0);
  4276  06A2  100C               	bcf	12,0	;volatile
  4277                           
  4278                           ;max31856.c: 273: one_temperature_trans();
  4279  06A3  3185  25F8         	fcall	_one_temperature_trans
  4280                           
  4281                           ;max31856.c: 274: break;
  4282  06A5  0008               	return
  4283  06A6                     l4087:	
  4284                           ;max31856.c: 275: case 1:
  4285                           
  4286                           
  4287                           ;max31856.c: 276: temperature_display();break;
  4288  06A6  3187  2729         	fcall	_temperature_display
  4289  06A8  0008               	return
  4290  06A9                     l4089:	
  4291                           ;max31856.c: 277: case 2: Two_Display(2);
  4292                           
  4293  06A9  3002               	movlw	2
  4294  06AA  3187  27AB  3186   	fcall	_Two_Display
  4295                           
  4296                           ;max31856.c: 278: do { LATA0 = 1; } while(0);
  4297  06AD  0022               	movlb	2	; select bank2
  4298  06AE  140C               	bsf	12,0	;volatile
  4299                           
  4300                           ;max31856.c: 279: do { LATA1 = 1; } while(0);
  4301  06AF  148C               	bsf	12,1	;volatile
  4302                           
  4303                           ;max31856.c: 280: do { LATA1 = 0; } while(0);
  4304  06B0  108C               	bcf	12,1	;volatile
  4305                           
  4306                           ;max31856.c: 281: one_temperature_trans();
  4307  06B1  3185  25F8         	fcall	_one_temperature_trans
  4308                           
  4309                           ;max31856.c: 282: break;
  4310  06B3  0008               	return
  4311  06B4                     l4099:	
  4312                           ;max31856.c: 283: case 3:
  4313                           
  4314                           
  4315                           ;max31856.c: 284: temperature_display();break;
  4316  06B4  3187  2729         	fcall	_temperature_display
  4317  06B6  0008               	return
  4318  06B7                     l4101:	
  4319                           ;max31856.c: 285: case 5: time_Display();break;
  4320                           
  4321  06B7  3182  2265         	fcall	_time_Display
  4322                           
  4323                           ;max31856.c: 287: }
  4324                           
  4325                           ;max31856.c: 286: default:break;
  4326  06B9  0008               	return
  4327  06BA                     l4105:	
  4328  06BA  0878               	movf	_time_count,w
  4329                           
  4330                           ; Switch size 1, requested type "space"
  4331                           ; Number of cases is 5, Range of values is 0 to 5
  4332                           ; switch strategies available:
  4333                           ; Name         Instructions Cycles
  4334                           ; simple_byte           16     9 (average)
  4335                           ; direct_byte           18     6 (fixed)
  4336                           ; jumptable            260     6 (fixed)
  4337                           ;	Chosen strategy is simple_byte
  4338  06BB  3A00               	xorlw	0	; case 0
  4339  06BC  1903               	skipnz
  4340  06BD  2E9B               	goto	l4077
  4341  06BE  3A01               	xorlw	1	; case 1
  4342  06BF  1903               	skipnz
  4343  06C0  2EA6               	goto	l4087
  4344  06C1  3A03               	xorlw	3	; case 2
  4345  06C2  1903               	skipnz
  4346  06C3  2EA9               	goto	l4089
  4347  06C4  3A01               	xorlw	1	; case 3
  4348  06C5  1903               	skipnz
  4349  06C6  2EB4               	goto	l4099
  4350  06C7  3A06               	xorlw	6	; case 5
  4351  06C8  1903               	skipnz
  4352  06C9  2EB7               	goto	l4101
  4353  06CA  2ECB               	goto	l539
  4354  06CB                     l539:	
  4355  06CB  0008               	return
  4356  06CC                     __end_of_temperature_process:	
  4357                           
  4358                           	psect	text14
  4359  0265                     __ptext14:	
  4360 ;; *************** function _time_Display *****************
  4361 ;; Defined at:
  4362 ;;		line 165 in file "mcc_generated_files/ht1621.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  num             4   19[BANK0 ] unsigned char [4]
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;Total ram usage:        7 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    6
  4383 ;; This function calls:
  4384 ;;		_Bq32k_Rtc_Read_Time
  4385 ;;		_WriteAll_1621
  4386 ;;		___awdiv
  4387 ;;		___awmod
  4388 ;; This function is called by:
  4389 ;;		_temperature_process
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _time_Display
  4395  0265                     _time_Display:	
  4396                           
  4397                           ;ht1621.c: 167: unsigned char num[4]={0};
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4401  0265  0021               	movlb	1	; select bank1
  4402  0266  0827               	movf	(time_Display@F2126+3)^(0+128),w
  4403  0267  0020               	movlb	0	; select bank0
  4404  0268  00E6               	movwf	time_Display@num+3
  4405  0269  0021               	movlb	1	; select bank1
  4406  026A  0826               	movf	(time_Display@F2126+2)^(0+128),w
  4407  026B  0020               	movlb	0	; select bank0
  4408  026C  00E5               	movwf	time_Display@num+2
  4409  026D  0021               	movlb	1	; select bank1
  4410  026E  0825               	movf	(time_Display@F2126+1)^(0+128),w
  4411  026F  0020               	movlb	0	; select bank0
  4412  0270  00E4               	movwf	time_Display@num+1
  4413  0271  0021               	movlb	1	; select bank1
  4414  0272  0824               	movf	time_Display@F2126^(0+128),w
  4415  0273  0020               	movlb	0	; select bank0
  4416  0274  00E3               	movwf	time_Display@num
  4417                           
  4418                           ;ht1621.c: 168: Bq32k_Rtc_Read_Time(&rtc_tm);
  4419  0275  30A8               	movlw	(low (_rtc_tm| 0))& (0+255)
  4420  0276  3183  23D6  3182   	fcall	_Bq32k_Rtc_Read_Time
  4421                           
  4422                           ;ht1621.c: 169: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4423  0279  300A               	movlw	10
  4424  027A  00F3               	movwf	___awdiv@divisor
  4425  027B  3000               	movlw	0
  4426  027C  00F4               	movwf	___awdiv@divisor+1
  4427  027D  0021               	movlb	1	; select bank1
  4428  027E  082A               	movf	(_rtc_tm^(0+128)+2),w
  4429  027F  0020               	movlb	0	; select bank0
  4430  0280  00E0               	movwf	??_time_Display
  4431  0281  01E1               	clrf	??_time_Display+1
  4432  0282  0860               	movf	??_time_Display,w
  4433  0283  00F5               	movwf	___awdiv@dividend
  4434  0284  0861               	movf	??_time_Display+1,w
  4435  0285  00F6               	movwf	___awdiv@dividend+1
  4436  0286  3184  243A  3182   	fcall	___awdiv
  4437  0289  0874               	movf	?___awdiv+1,w
  4438  028A  0085               	movwf	5
  4439  028B  0873               	movf	?___awdiv,w
  4440  028C  0084               	movwf	4
  4441  028D  3000               	movlw	low (_Dis_TAB| (0+32768))
  4442  028E  0784               	addwf	4,f
  4443  028F  3090               	movlw	high (_Dis_TAB| (0+32768))
  4444  0290  3D85               	addwfc	5,f
  4445  0291  0800               	movf	0,w	;code access
  4446  0292  0020               	movlb	0	; select bank0
  4447  0293  00E2               	movwf	??_time_Display+2
  4448  0294  0862               	movf	??_time_Display+2,w
  4449  0295  00E3               	movwf	time_Display@num
  4450                           
  4451                           ;ht1621.c: 170: num[0] |= 0x08;
  4452  0296  15E3               	bsf	time_Display@num,3
  4453                           
  4454                           ;ht1621.c: 171: num[1] = Dis_TAB[rtc_tm.hours % 10];
  4455  0297  300A               	movlw	10
  4456  0298  00F3               	movwf	___awmod@divisor
  4457  0299  3000               	movlw	0
  4458  029A  00F4               	movwf	___awmod@divisor+1
  4459  029B  0021               	movlb	1	; select bank1
  4460  029C  082A               	movf	(_rtc_tm^(0+128)+2),w
  4461  029D  0020               	movlb	0	; select bank0
  4462  029E  00E0               	movwf	??_time_Display
  4463  029F  01E1               	clrf	??_time_Display+1
  4464  02A0  0860               	movf	??_time_Display,w
  4465  02A1  00F5               	movwf	___awmod@dividend
  4466  02A2  0861               	movf	??_time_Display+1,w
  4467  02A3  00F6               	movwf	___awmod@dividend+1
  4468  02A4  3185  2577  3182   	fcall	___awmod
  4469  02A7  0874               	movf	?___awmod+1,w
  4470  02A8  0085               	movwf	5
  4471  02A9  0873               	movf	?___awmod,w
  4472  02AA  0084               	movwf	4
  4473  02AB  3000               	movlw	low (_Dis_TAB| (0+32768))
  4474  02AC  0784               	addwf	4,f
  4475  02AD  3090               	movlw	high (_Dis_TAB| (0+32768))
  4476  02AE  3D85               	addwfc	5,f
  4477  02AF  0800               	movf	0,w	;code access
  4478  02B0  0020               	movlb	0	; select bank0
  4479  02B1  00E2               	movwf	??_time_Display+2
  4480  02B2  0862               	movf	??_time_Display+2,w
  4481  02B3  00E4               	movwf	time_Display@num+1
  4482                           
  4483                           ;ht1621.c: 172: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  4484  02B4  300A               	movlw	10
  4485  02B5  00F3               	movwf	___awdiv@divisor
  4486  02B6  3000               	movlw	0
  4487  02B7  00F4               	movwf	___awdiv@divisor+1
  4488  02B8  0021               	movlb	1	; select bank1
  4489  02B9  0829               	movf	(_rtc_tm^(0+128)+1),w
  4490  02BA  0020               	movlb	0	; select bank0
  4491  02BB  00E0               	movwf	??_time_Display
  4492  02BC  01E1               	clrf	??_time_Display+1
  4493  02BD  0860               	movf	??_time_Display,w
  4494  02BE  00F5               	movwf	___awdiv@dividend
  4495  02BF  0861               	movf	??_time_Display+1,w
  4496  02C0  00F6               	movwf	___awdiv@dividend+1
  4497  02C1  3184  243A  3182   	fcall	___awdiv
  4498  02C4  0874               	movf	?___awdiv+1,w
  4499  02C5  0085               	movwf	5
  4500  02C6  0873               	movf	?___awdiv,w
  4501  02C7  0084               	movwf	4
  4502  02C8  3000               	movlw	low (_Dis_TAB| (0+32768))
  4503  02C9  0784               	addwf	4,f
  4504  02CA  3090               	movlw	high (_Dis_TAB| (0+32768))
  4505  02CB  3D85               	addwfc	5,f
  4506  02CC  0800               	movf	0,w	;code access
  4507  02CD  0020               	movlb	0	; select bank0
  4508  02CE  00E2               	movwf	??_time_Display+2
  4509  02CF  0862               	movf	??_time_Display+2,w
  4510  02D0  00E5               	movwf	time_Display@num+2
  4511                           
  4512                           ;ht1621.c: 173: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  4513  02D1  300A               	movlw	10
  4514  02D2  00F3               	movwf	___awmod@divisor
  4515  02D3  3000               	movlw	0
  4516  02D4  00F4               	movwf	___awmod@divisor+1
  4517  02D5  0021               	movlb	1	; select bank1
  4518  02D6  0829               	movf	(_rtc_tm^(0+128)+1),w
  4519  02D7  0020               	movlb	0	; select bank0
  4520  02D8  00E0               	movwf	??_time_Display
  4521  02D9  01E1               	clrf	??_time_Display+1
  4522  02DA  0860               	movf	??_time_Display,w
  4523  02DB  00F5               	movwf	___awmod@dividend
  4524  02DC  0861               	movf	??_time_Display+1,w
  4525  02DD  00F6               	movwf	___awmod@dividend+1
  4526  02DE  3185  2577  3182   	fcall	___awmod
  4527  02E1  0874               	movf	?___awmod+1,w
  4528  02E2  0085               	movwf	5
  4529  02E3  0873               	movf	?___awmod,w
  4530  02E4  0084               	movwf	4
  4531  02E5  3000               	movlw	low (_Dis_TAB| (0+32768))
  4532  02E6  0784               	addwf	4,f
  4533  02E7  3090               	movlw	high (_Dis_TAB| (0+32768))
  4534  02E8  3D85               	addwfc	5,f
  4535  02E9  0800               	movf	0,w	;code access
  4536  02EA  0020               	movlb	0	; select bank0
  4537  02EB  00E2               	movwf	??_time_Display+2
  4538  02EC  0862               	movf	??_time_Display+2,w
  4539  02ED  00E6               	movwf	time_Display@num+3
  4540                           
  4541                           ;ht1621.c: 174: WriteAll_1621(0, num, 4);
  4542  02EE  3063               	movlw	low time_Display@num
  4543  02EF  00D0               	movwf	WriteAll_1621@p
  4544  02F0  3000               	movlw	high time_Display@num
  4545  02F1  00D1               	movwf	WriteAll_1621@p+1
  4546  02F2  3004               	movlw	4
  4547  02F3  00E0               	movwf	??_time_Display
  4548  02F4  0860               	movf	??_time_Display,w
  4549  02F5  00D2               	movwf	WriteAll_1621@cnt
  4550  02F6  3000               	movlw	0
  4551  02F7  3186  2665         	fcall	_WriteAll_1621
  4552  02F9  0008               	return
  4553  02FA                     __end_of_time_Display:	
  4554                           
  4555                           	psect	text15
  4556  0577                     __ptext15:	
  4557 ;; *************** function ___awmod *****************
  4558 ;; Defined at:
  4559 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  divisor         2    3[COMMON] int 
  4562 ;;  dividend        2    5[COMMON] int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  sign            1    1[BANK0 ] unsigned char 
  4565 ;;  counter         1    0[BANK0 ] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2    3[COMMON] int 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        7 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    3
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_time_Display
  4586 ;;		_bin2bcd
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function ___awmod
  4592  0577                     ___awmod:	
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4596  0577  0020               	movlb	0	; select bank0
  4597  0578  01D1               	clrf	___awmod@sign
  4598  0579  1FF6               	btfss	___awmod@dividend+1,7
  4599  057A  2D82               	goto	l3905
  4600  057B  09F5               	comf	___awmod@dividend,f
  4601  057C  09F6               	comf	___awmod@dividend+1,f
  4602  057D  0AF5               	incf	___awmod@dividend,f
  4603  057E  1903               	skipnz
  4604  057F  0AF6               	incf	___awmod@dividend+1,f
  4605  0580  01D1               	clrf	___awmod@sign
  4606  0581  0AD1               	incf	___awmod@sign,f
  4607  0582                     l3905:	
  4608  0582  1FF4               	btfss	___awmod@divisor+1,7
  4609  0583  2D89               	goto	l3909
  4610  0584  09F3               	comf	___awmod@divisor,f
  4611  0585  09F4               	comf	___awmod@divisor+1,f
  4612  0586  0AF3               	incf	___awmod@divisor,f
  4613  0587  1903               	skipnz
  4614  0588  0AF4               	incf	___awmod@divisor+1,f
  4615  0589                     l3909:	
  4616  0589  0873               	movf	___awmod@divisor,w
  4617  058A  0474               	iorwf	___awmod@divisor+1,w
  4618  058B  1903               	btfsc	3,2
  4619  058C  2DB0               	goto	l3927
  4620  058D  01D0               	clrf	___awmod@counter
  4621  058E  0AD0               	incf	___awmod@counter,f
  4622  058F                     l3917:	
  4623  058F  1BF4               	btfsc	___awmod@divisor+1,7
  4624  0590  2D9B               	goto	l3919
  4625  0591  3001               	movlw	1
  4626  0592                     u3245:	
  4627  0592  35F3               	lslf	___awmod@divisor,f
  4628  0593  0DF4               	rlf	___awmod@divisor+1,f
  4629  0594  0B89               	decfsz	9,f
  4630  0595  2D92               	goto	u3245
  4631  0596  3001               	movlw	1
  4632  0597  00F7               	movwf	??___awmod
  4633  0598  0877               	movf	??___awmod,w
  4634  0599  07D0               	addwf	___awmod@counter,f
  4635  059A  2D8F               	goto	l3917
  4636  059B                     l3919:	
  4637  059B  0874               	movf	___awmod@divisor+1,w
  4638  059C  0276               	subwf	___awmod@dividend+1,w
  4639  059D  1D03               	skipz
  4640  059E  2DA1               	goto	u3265
  4641  059F  0873               	movf	___awmod@divisor,w
  4642  05A0  0275               	subwf	___awmod@dividend,w
  4643  05A1                     u3265:	
  4644  05A1  1C03               	skipc
  4645  05A2  2DA7               	goto	l3923
  4646  05A3  0873               	movf	___awmod@divisor,w
  4647  05A4  02F5               	subwf	___awmod@dividend,f
  4648  05A5  0874               	movf	___awmod@divisor+1,w
  4649  05A6  3BF6               	subwfb	___awmod@dividend+1,f
  4650  05A7                     l3923:	
  4651  05A7  3001               	movlw	1
  4652  05A8                     u3275:	
  4653  05A8  36F4               	lsrf	___awmod@divisor+1,f
  4654  05A9  0CF3               	rrf	___awmod@divisor,f
  4655  05AA  0B89               	decfsz	9,f
  4656  05AB  2DA8               	goto	u3275
  4657  05AC  3001               	movlw	1
  4658  05AD  02D0               	subwf	___awmod@counter,f
  4659  05AE  1D03               	btfss	3,2
  4660  05AF  2D9B               	goto	l3919
  4661  05B0                     l3927:	
  4662  05B0  0851               	movf	___awmod@sign,w
  4663  05B1  1903               	btfsc	3,2
  4664  05B2  2DB8               	goto	l3931
  4665  05B3  09F5               	comf	___awmod@dividend,f
  4666  05B4  09F6               	comf	___awmod@dividend+1,f
  4667  05B5  0AF5               	incf	___awmod@dividend,f
  4668  05B6  1903               	skipnz
  4669  05B7  0AF6               	incf	___awmod@dividend+1,f
  4670  05B8                     l3931:	
  4671  05B8  0876               	movf	___awmod@dividend+1,w
  4672  05B9  00F4               	movwf	?___awmod+1
  4673  05BA  0875               	movf	___awmod@dividend,w
  4674  05BB  00F3               	movwf	?___awmod
  4675  05BC  0008               	return
  4676  05BD                     __end_of___awmod:	
  4677                           
  4678                           	psect	text16
  4679  043A                     __ptext16:	
  4680 ;; *************** function ___awdiv *****************
  4681 ;; Defined at:
  4682 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  divisor         2    3[COMMON] int 
  4685 ;;  dividend        2    5[COMMON] int 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  quotient        2    2[BANK0 ] int 
  4688 ;;  sign            1    1[BANK0 ] unsigned char 
  4689 ;;  counter         1    0[BANK0 ] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2    3[COMMON] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4702 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;Total ram usage:        9 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    3
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_time_Display
  4710 ;;		_bin2bcd
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function ___awdiv
  4716  043A                     ___awdiv:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4720  043A  0020               	movlb	0	; select bank0
  4721  043B  01D1               	clrf	___awdiv@sign
  4722  043C  1FF4               	btfss	___awdiv@divisor+1,7
  4723  043D  2C45               	goto	l3861
  4724  043E  09F3               	comf	___awdiv@divisor,f
  4725  043F  09F4               	comf	___awdiv@divisor+1,f
  4726  0440  0AF3               	incf	___awdiv@divisor,f
  4727  0441  1903               	skipnz
  4728  0442  0AF4               	incf	___awdiv@divisor+1,f
  4729  0443  01D1               	clrf	___awdiv@sign
  4730  0444  0AD1               	incf	___awdiv@sign,f
  4731  0445                     l3861:	
  4732  0445  1FF6               	btfss	___awdiv@dividend+1,7
  4733  0446  2C50               	goto	l3867
  4734  0447  09F5               	comf	___awdiv@dividend,f
  4735  0448  09F6               	comf	___awdiv@dividend+1,f
  4736  0449  0AF5               	incf	___awdiv@dividend,f
  4737  044A  1903               	skipnz
  4738  044B  0AF6               	incf	___awdiv@dividend+1,f
  4739  044C  3001               	movlw	1
  4740  044D  00F7               	movwf	??___awdiv
  4741  044E  0877               	movf	??___awdiv,w
  4742  044F  06D1               	xorwf	___awdiv@sign,f
  4743  0450                     l3867:	
  4744  0450  01D2               	clrf	___awdiv@quotient
  4745  0451  01D3               	clrf	___awdiv@quotient+1
  4746  0452  0873               	movf	___awdiv@divisor,w
  4747  0453  0474               	iorwf	___awdiv@divisor+1,w
  4748  0454  1903               	btfsc	3,2
  4749  0455  2C7F               	goto	l3889
  4750  0456  01D0               	clrf	___awdiv@counter
  4751  0457  0AD0               	incf	___awdiv@counter,f
  4752  0458                     l3877:	
  4753  0458  1BF4               	btfsc	___awdiv@divisor+1,7
  4754  0459  2C64               	goto	l3879
  4755  045A  3001               	movlw	1
  4756  045B                     u3145:	
  4757  045B  35F3               	lslf	___awdiv@divisor,f
  4758  045C  0DF4               	rlf	___awdiv@divisor+1,f
  4759  045D  0B89               	decfsz	9,f
  4760  045E  2C5B               	goto	u3145
  4761  045F  3001               	movlw	1
  4762  0460  00F7               	movwf	??___awdiv
  4763  0461  0877               	movf	??___awdiv,w
  4764  0462  07D0               	addwf	___awdiv@counter,f
  4765  0463  2C58               	goto	l3877
  4766  0464                     l3879:	
  4767  0464  3001               	movlw	1
  4768  0465                     u3165:	
  4769  0465  35D2               	lslf	___awdiv@quotient,f
  4770  0466  0DD3               	rlf	___awdiv@quotient+1,f
  4771  0467  0B89               	decfsz	9,f
  4772  0468  2C65               	goto	u3165
  4773  0469  0874               	movf	___awdiv@divisor+1,w
  4774  046A  0276               	subwf	___awdiv@dividend+1,w
  4775  046B  1D03               	skipz
  4776  046C  2C6F               	goto	u3175
  4777  046D  0873               	movf	___awdiv@divisor,w
  4778  046E  0275               	subwf	___awdiv@dividend,w
  4779  046F                     u3175:	
  4780  046F  1C03               	skipc
  4781  0470  2C76               	goto	l3885
  4782  0471  0873               	movf	___awdiv@divisor,w
  4783  0472  02F5               	subwf	___awdiv@dividend,f
  4784  0473  0874               	movf	___awdiv@divisor+1,w
  4785  0474  3BF6               	subwfb	___awdiv@dividend+1,f
  4786  0475  1452               	bsf	___awdiv@quotient,0
  4787  0476                     l3885:	
  4788  0476  3001               	movlw	1
  4789  0477                     u3185:	
  4790  0477  36F4               	lsrf	___awdiv@divisor+1,f
  4791  0478  0CF3               	rrf	___awdiv@divisor,f
  4792  0479  0B89               	decfsz	9,f
  4793  047A  2C77               	goto	u3185
  4794  047B  3001               	movlw	1
  4795  047C  02D0               	subwf	___awdiv@counter,f
  4796  047D  1D03               	btfss	3,2
  4797  047E  2C64               	goto	l3879
  4798  047F                     l3889:	
  4799  047F  0851               	movf	___awdiv@sign,w
  4800  0480  1903               	btfsc	3,2
  4801  0481  2C87               	goto	l3893
  4802  0482  09D2               	comf	___awdiv@quotient,f
  4803  0483  09D3               	comf	___awdiv@quotient+1,f
  4804  0484  0AD2               	incf	___awdiv@quotient,f
  4805  0485  1903               	skipnz
  4806  0486  0AD3               	incf	___awdiv@quotient+1,f
  4807  0487                     l3893:	
  4808  0487  0853               	movf	___awdiv@quotient+1,w
  4809  0488  00F4               	movwf	?___awdiv+1
  4810  0489  0852               	movf	___awdiv@quotient,w
  4811  048A  00F3               	movwf	?___awdiv
  4812  048B  0008               	return
  4813  048C                     __end_of___awdiv:	
  4814                           
  4815                           	psect	text17
  4816  03D6                     __ptext17:	
  4817 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  4818 ;; Defined at:
  4819 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  p               1    wreg     PTR struct bq32k_regs
  4822 ;;		 -> rtc_tm(7), 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  4825 ;;		 -> rtc_tm(7), 
  4826 ;;  temp           10    5[BANK0 ] unsigned char [10]
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;Total ram usage:       13 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    5
  4843 ;; This function calls:
  4844 ;;		_I2C_Read_Buffer
  4845 ;;		_bcd2bin
  4846 ;; This function is called by:
  4847 ;;		_time_Display
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _Bq32k_Rtc_Read_Time
  4853  03D6                     _Bq32k_Rtc_Read_Time:	
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4857                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  4858  03D6  0020               	movlb	0	; select bank0
  4859  03D7  00DF               	movwf	Bq32k_Rtc_Read_Time@p
  4860                           
  4861                           ;bq32k.c: 32: unsigned char temp[10] ;
  4862                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  4863  03D8  3055               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  4864  03D9  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4865  03DA  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4866  03DB  00F6               	movwf	I2C_Read_Buffer@buff
  4867  03DC  3007               	movlw	7
  4868  03DD  00D4               	movwf	??_Bq32k_Rtc_Read_Time+1
  4869  03DE  0854               	movf	??_Bq32k_Rtc_Read_Time+1,w
  4870  03DF  00F7               	movwf	I2C_Read_Buffer@Length
  4871  03E0  3000               	movlw	0
  4872  03E1  3182  22FA  3183   	fcall	_I2C_Read_Buffer
  4873                           
  4874                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  4875  03E4  0020               	movlb	0	; select bank0
  4876  03E5  0855               	movf	Bq32k_Rtc_Read_Time@temp,w
  4877  03E6  397F               	andlw	127
  4878  03E7  318E  2676  3183   	fcall	_bcd2bin
  4879  03EA  0020               	movlb	0	; select bank0
  4880  03EB  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4881  03EC  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4882  03ED  0086               	movwf	6
  4883  03EE  0187               	clrf	7
  4884  03EF  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4885  03F0  0081               	movwf	1
  4886                           
  4887                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  4888  03F1  0856               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  4889  03F2  397F               	andlw	127
  4890  03F3  318E  2676  3183   	fcall	_bcd2bin
  4891  03F6  0020               	movlb	0	; select bank0
  4892  03F7  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4893  03F8  0A5F               	incf	Bq32k_Rtc_Read_Time@p,w
  4894  03F9  0086               	movwf	6
  4895  03FA  0187               	clrf	7
  4896  03FB  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4897  03FC  0081               	movwf	1
  4898                           
  4899                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  4900  03FD  0857               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  4901  03FE  393F               	andlw	63
  4902  03FF  318E  2676  3183   	fcall	_bcd2bin
  4903  0402  0020               	movlb	0	; select bank0
  4904  0403  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4905  0404  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4906  0405  3E02               	addlw	2
  4907  0406  0086               	movwf	6
  4908  0407  0187               	clrf	7
  4909  0408  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4910  0409  0081               	movwf	1
  4911                           
  4912                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  4913  040A  0858               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  4914  040B  318E  2676  3183   	fcall	_bcd2bin
  4915  040E  0020               	movlb	0	; select bank0
  4916  040F  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4917  0410  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4918  0411  3E03               	addlw	3
  4919  0412  0086               	movwf	6
  4920  0413  0187               	clrf	7
  4921  0414  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4922  0415  0081               	movwf	1
  4923                           
  4924                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  4925  0416  0859               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  4926  0417  318E  2676  3183   	fcall	_bcd2bin
  4927  041A  0020               	movlb	0	; select bank0
  4928  041B  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4929  041C  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4930  041D  3E04               	addlw	4
  4931  041E  0086               	movwf	6
  4932  041F  0187               	clrf	7
  4933  0420  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4934  0421  0081               	movwf	1
  4935                           
  4936                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  4937  0422  085A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  4938  0423  318E  2676  3183   	fcall	_bcd2bin
  4939  0426  0020               	movlb	0	; select bank0
  4940  0427  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4941  0428  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4942  0429  3E05               	addlw	5
  4943  042A  0086               	movwf	6
  4944  042B  0187               	clrf	7
  4945  042C  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4946  042D  0081               	movwf	1
  4947                           
  4948                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  4949  042E  085B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  4950  042F  318E  2676         	fcall	_bcd2bin
  4951  0431  0020               	movlb	0	; select bank0
  4952  0432  00D3               	movwf	??_Bq32k_Rtc_Read_Time
  4953  0433  085F               	movf	Bq32k_Rtc_Read_Time@p,w
  4954  0434  3E06               	addlw	6
  4955  0435  0086               	movwf	6
  4956  0436  0187               	clrf	7
  4957  0437  0853               	movf	??_Bq32k_Rtc_Read_Time,w
  4958  0438  0081               	movwf	1
  4959  0439  0008               	return
  4960  043A                     __end_of_Bq32k_Rtc_Read_Time:	
  4961                           
  4962                           	psect	text18
  4963  0E76                     __ptext18:	
  4964 ;; *************** function _bcd2bin *****************
  4965 ;; Defined at:
  4966 ;;		line 63 in file "mcc_generated_files/bq32k.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  val             1    wreg     unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  val             1    7[COMMON] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      unsigned char 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;Total ram usage:        4 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    4
  4987 ;; This function calls:
  4988 ;;		___bmul
  4989 ;; This function is called by:
  4990 ;;		_Bq32k_Rtc_Read_Time
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994                           
  4995                           ;psect for function _bcd2bin
  4996  0E76                     _bcd2bin:	
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  5000                           ;bcd2bin@val stored from wreg
  5001  0E76  00F7               	movwf	bcd2bin@val
  5002                           
  5003                           ;bq32k.c: 65: return (val & 0x0f) + (val >> 4) * 10;
  5004  0E77  300F               	movlw	15
  5005  0E78  0577               	andwf	bcd2bin@val,w
  5006  0E79  0020               	movlb	0	; select bank0
  5007  0E7A  00D0               	movwf	??_bcd2bin
  5008  0E7B  300A               	movlw	10
  5009  0E7C  00D1               	movwf	??_bcd2bin+1
  5010  0E7D  0851               	movf	??_bcd2bin+1,w
  5011  0E7E  00F3               	movwf	___bmul@multiplicand
  5012  0E7F  0877               	movf	bcd2bin@val,w
  5013  0E80  00D2               	movwf	??_bcd2bin+2
  5014  0E81  3004               	movlw	4
  5015  0E82                     u2815:	
  5016  0E82  36D2               	lsrf	??_bcd2bin+2,f
  5017  0E83  0B89               	decfsz	9,f
  5018  0E84  2E82               	goto	u2815
  5019  0E85  0852               	movf	??_bcd2bin+2,w
  5020  0E86  318E  2652         	fcall	___bmul
  5021  0E88  0020               	movlb	0	; select bank0
  5022  0E89  0750               	addwf	??_bcd2bin,w
  5023  0E8A  0008               	return
  5024  0E8B                     __end_of_bcd2bin:	
  5025                           
  5026                           	psect	text19
  5027  0E52                     __ptext19:	
  5028 ;; *************** function ___bmul *****************
  5029 ;; Defined at:
  5030 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  multiplier      1    wreg     unsigned char 
  5033 ;;  multiplicand    1    3[COMMON] unsigned char 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  multiplier      1    6[COMMON] unsigned char 
  5036 ;;  product         1    5[COMMON] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      unsigned char 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5046 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;Total ram usage:        4 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    3
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_bcd2bin
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           
  5061                           ;psect for function ___bmul
  5062  0E52                     ___bmul:	
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5066                           ;___bmul@multiplier stored from wreg
  5067  0E52  00F6               	movwf	___bmul@multiplier
  5068  0E53  01F5               	clrf	___bmul@product
  5069  0E54                     l3571:	
  5070  0E54  1C76               	btfss	___bmul@multiplier,0
  5071  0E55  2E5A               	goto	l3575
  5072  0E56  0873               	movf	___bmul@multiplicand,w
  5073  0E57  00F4               	movwf	??___bmul
  5074  0E58  0874               	movf	??___bmul,w
  5075  0E59  07F5               	addwf	___bmul@product,f
  5076  0E5A                     l3575:	
  5077  0E5A  1003               	clrc
  5078  0E5B  0DF3               	rlf	___bmul@multiplicand,f
  5079  0E5C  1003               	clrc
  5080  0E5D  0CF6               	rrf	___bmul@multiplier,f
  5081  0E5E  0876               	movf	___bmul@multiplier,w
  5082  0E5F  1D03               	btfss	3,2
  5083  0E60  2E54               	goto	l3571
  5084  0E61  0875               	movf	___bmul@product,w
  5085  0E62  0008               	return
  5086  0E63                     __end_of___bmul:	
  5087                           
  5088                           	psect	text20
  5089  02FA                     __ptext20:	
  5090 ;; *************** function _I2C_Read_Buffer *****************
  5091 ;; Defined at:
  5092 ;;		line 120 in file "mcc_generated_files/i2c.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  ADD             1    wreg     unsigned char 
  5095 ;;  buff            1    6[COMMON] PTR unsigned char 
  5096 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  5097 ;;  Length          1    7[COMMON] unsigned char 
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  ADD             1    1[BANK0 ] unsigned char 
  5100 ;;  Flag            1    2[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      unsigned char 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;Total ram usage:        5 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    4
  5117 ;; This function calls:
  5118 ;;		_I2C_Receive_Byte
  5119 ;;		_I2C_Send_Byte
  5120 ;;		_I2C_Start
  5121 ;;		_I2C_Stop
  5122 ;; This function is called by:
  5123 ;;		_Bq32k_Rtc_Read_Time
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function _I2C_Read_Buffer
  5129  02FA                     _I2C_Read_Buffer:	
  5130                           
  5131                           ;incstack = 0
  5132                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5133                           ;I2C_Read_Buffer@ADD stored from wreg
  5134  02FA  0020               	movlb	0	; select bank0
  5135  02FB  00D1               	movwf	I2C_Read_Buffer@ADD
  5136                           
  5137                           ;i2c.c: 122: unsigned char Flag=1;
  5138  02FC  01D2               	clrf	I2C_Read_Buffer@Flag
  5139  02FD  0AD2               	incf	I2C_Read_Buffer@Flag,f
  5140                           
  5141                           ;i2c.c: 124: I2C_Start();
  5142  02FE  318E  26E9  3182   	fcall	_I2C_Start
  5143                           
  5144                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  5145  0301  30D0               	movlw	208
  5146  0302  3185  252B  3182   	fcall	_I2C_Send_Byte
  5147  0305  0020               	movlb	0	; select bank0
  5148  0306  00D0               	movwf	??_I2C_Read_Buffer
  5149  0307  0850               	movf	??_I2C_Read_Buffer,w
  5150  0308  00D2               	movwf	I2C_Read_Buffer@Flag
  5151                           
  5152                           ;i2c.c: 127: if(Flag)
  5153  0309  0852               	movf	I2C_Read_Buffer@Flag,w
  5154  030A  1D03               	btfss	3,2
  5155  030B  0008               	return
  5156                           
  5157                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  5158                           
  5159                           ;i2c.c: 128: return 0x01;
  5160                           ;	Return value of _I2C_Read_Buffer is never used
  5161  030C  0851               	movf	I2C_Read_Buffer@ADD,w
  5162  030D  3185  252B  3182   	fcall	_I2C_Send_Byte
  5163  0310  0020               	movlb	0	; select bank0
  5164  0311  00D0               	movwf	??_I2C_Read_Buffer
  5165  0312  0850               	movf	??_I2C_Read_Buffer,w
  5166  0313  00D2               	movwf	I2C_Read_Buffer@Flag
  5167                           
  5168                           ;i2c.c: 131: if(Flag)
  5169  0314  0852               	movf	I2C_Read_Buffer@Flag,w
  5170  0315  1D03               	btfss	3,2
  5171  0316  0008               	return
  5172                           
  5173                           ;i2c.c: 134: I2C_Start();
  5174                           
  5175                           ;i2c.c: 132: return 0x01;
  5176                           ;	Return value of _I2C_Read_Buffer is never used
  5177  0317  318E  26E9  3182   	fcall	_I2C_Start
  5178                           
  5179                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  5180  031A  30D1               	movlw	209
  5181  031B  3185  252B  3182   	fcall	_I2C_Send_Byte
  5182  031E  0020               	movlb	0	; select bank0
  5183  031F  00D0               	movwf	??_I2C_Read_Buffer
  5184  0320  0850               	movf	??_I2C_Read_Buffer,w
  5185  0321  00D2               	movwf	I2C_Read_Buffer@Flag
  5186                           
  5187                           ;i2c.c: 136: if(Flag)
  5188  0322  0852               	movf	I2C_Read_Buffer@Flag,w
  5189  0323  1D03               	btfss	3,2
  5190  0324  0008               	return
  5191  0325                     l3683:	
  5192  0325  3002               	movlw	2
  5193  0326  0277               	subwf	I2C_Read_Buffer@Length,w
  5194  0327  1C03               	btfss	3,0
  5195  0328  2B50               	goto	l3685
  5196                           
  5197                           ;i2c.c: 140: {
  5198                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  5199                           
  5200                           ;i2c.c: 139: while(Length>1)
  5201                           
  5202                           ;i2c.c: 137: return 0x01;
  5203                           ;	Return value of _I2C_Read_Buffer is never used
  5204  0329  3187  2781  3182   	fcall	_I2C_Receive_Byte
  5205  032C  0020               	movlb	0	; select bank0
  5206  032D  00D0               	movwf	??_I2C_Read_Buffer
  5207  032E  0876               	movf	I2C_Read_Buffer@buff,w
  5208  032F  0086               	movwf	6
  5209  0330  0187               	clrf	7
  5210  0331  0850               	movf	??_I2C_Read_Buffer,w
  5211  0332  0081               	movwf	1
  5212                           
  5213                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  5214  0333  0022               	movlb	2	; select bank2
  5215  0334  108D               	bcf	13,1	;volatile
  5216                           
  5217                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5218  0335  300D               	movlw	13
  5219  0336  0020               	movlb	0	; select bank0
  5220  0337  00D0               	movwf	??_I2C_Read_Buffer
  5221  0338                     u3737:	
  5222  0338  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5223  0339  2B38               	goto	u3737
  5224                           
  5225                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  5226  033A  0022               	movlb	2	; select bank2
  5227  033B  140D               	bsf	13,0	;volatile
  5228                           
  5229                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5230  033C  300D               	movlw	13
  5231  033D  0020               	movlb	0	; select bank0
  5232  033E  00D0               	movwf	??_I2C_Read_Buffer
  5233  033F                     u3747:	
  5234  033F  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5235  0340  2B3F               	goto	u3747
  5236                           
  5237                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  5238  0341  0022               	movlb	2	; select bank2
  5239  0342  100D               	bcf	13,0	;volatile
  5240                           
  5241                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5242  0343  300D               	movlw	13
  5243  0344  0020               	movlb	0	; select bank0
  5244  0345  00D0               	movwf	??_I2C_Read_Buffer
  5245  0346                     u3757:	
  5246  0346  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5247  0347  2B46               	goto	u3757
  5248                           
  5249                           ;i2c.c: 150: buff++;
  5250  0348  3001               	movlw	1
  5251  0349  0020               	movlb	0	; select bank0
  5252  034A  00D0               	movwf	??_I2C_Read_Buffer
  5253  034B  0850               	movf	??_I2C_Read_Buffer,w
  5254  034C  07F6               	addwf	I2C_Read_Buffer@buff,f
  5255                           
  5256                           ;i2c.c: 151: Length--;
  5257  034D  3001               	movlw	1
  5258  034E  02F7               	subwf	I2C_Read_Buffer@Length,f
  5259  034F  2B25               	goto	l3683
  5260  0350                     l3685:	
  5261                           
  5262                           ;i2c.c: 152: }
  5263                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  5264  0350  3187  2781  3182   	fcall	_I2C_Receive_Byte
  5265  0353  0020               	movlb	0	; select bank0
  5266  0354  00D0               	movwf	??_I2C_Read_Buffer
  5267  0355  0876               	movf	I2C_Read_Buffer@buff,w
  5268  0356  0086               	movwf	6
  5269  0357  0187               	clrf	7
  5270  0358  0850               	movf	??_I2C_Read_Buffer,w
  5271  0359  0081               	movwf	1
  5272                           
  5273                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  5274  035A  0022               	movlb	2	; select bank2
  5275  035B  148D               	bsf	13,1	;volatile
  5276                           
  5277                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5278  035C  300D               	movlw	13
  5279  035D  0020               	movlb	0	; select bank0
  5280  035E  00D0               	movwf	??_I2C_Read_Buffer
  5281  035F                     u3767:	
  5282  035F  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5283  0360  2B5F               	goto	u3767
  5284                           
  5285                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  5286  0361  0022               	movlb	2	; select bank2
  5287  0362  140D               	bsf	13,0	;volatile
  5288                           
  5289                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5290  0363  300D               	movlw	13
  5291  0364  0020               	movlb	0	; select bank0
  5292  0365  00D0               	movwf	??_I2C_Read_Buffer
  5293  0366                     u3777:	
  5294  0366  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5295  0367  2B66               	goto	u3777
  5296                           
  5297                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  5298  0368  0022               	movlb	2	; select bank2
  5299  0369  100D               	bcf	13,0	;volatile
  5300                           
  5301                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5302  036A  300D               	movlw	13
  5303  036B  0020               	movlb	0	; select bank0
  5304  036C  00D0               	movwf	??_I2C_Read_Buffer
  5305  036D                     u3787:	
  5306  036D  0BD0               	decfsz	??_I2C_Read_Buffer,f
  5307  036E  2B6D               	goto	u3787
  5308                           
  5309                           ;i2c.c: 162: I2C_Stop();
  5310  036F  318F  2702         	fcall	_I2C_Stop
  5311  0371  0008               	return
  5312  0372                     __end_of_I2C_Read_Buffer:	
  5313                           ;i2c.c: 164: return 0x00;
  5314                           ;	Return value of _I2C_Read_Buffer is never used
  5315                           
  5316                           
  5317                           	psect	text21
  5318  0781                     __ptext21:	
  5319 ;; *************** function _I2C_Receive_Byte *****************
  5320 ;; Defined at:
  5321 ;;		line 74 in file "mcc_generated_files/i2c.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  i               1    5[COMMON] unsigned char 
  5326 ;;  Data            1    4[COMMON] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      unsigned char 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;Total ram usage:        3 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    3
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_I2C_Read_Buffer
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _I2C_Receive_Byte
  5352  0781                     _I2C_Receive_Byte:	
  5353                           
  5354                           ;i2c.c: 76: unsigned char i,Data=0;
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  5358  0781  01F4               	clrf	I2C_Receive_Byte@Data
  5359                           
  5360                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  5361  0782  0022               	movlb	2	; select bank2
  5362  0783  148D               	bsf	13,1	;volatile
  5363                           
  5364                           ;i2c.c: 78: for(i=0;i<8;i++)
  5365  0784  01F5               	clrf	I2C_Receive_Byte@i
  5366  0785  3008               	movlw	8
  5367  0786  0275               	subwf	I2C_Receive_Byte@i,w
  5368  0787  1803               	btfsc	3,0
  5369  0788  2FA9               	goto	l3557
  5370                           
  5371                           ;i2c.c: 79: {
  5372                           ;i2c.c: 80: Data <<= 1;
  5373  0789  1003               	clrc
  5374  078A                     L2:	
  5375  078A  0DF4               	rlf	I2C_Receive_Byte@Data,f
  5376                           
  5377                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  5378  078B  0022               	movlb	2	; select bank2
  5379  078C  140D               	bsf	13,0	;volatile
  5380                           
  5381                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5382  078D  300D               	movlw	13
  5383  078E  00F3               	movwf	??_I2C_Receive_Byte
  5384  078F                     u3797:	
  5385  078F  0BF3               	decfsz	??_I2C_Receive_Byte,f
  5386  0790  2F8F               	goto	u3797
  5387                           
  5388                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  5389  0791  0021               	movlb	1	; select bank1
  5390  0792  148D               	bsf	13,1	;volatile
  5391                           
  5392                           ;i2c.c: 84: if(RB1)
  5393  0793  0020               	movlb	0	; select bank0
  5394  0794  1C8D               	btfss	13,1	;volatile
  5395  0795  2F99               	goto	l722
  5396                           
  5397                           ;i2c.c: 85: {
  5398                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  5399  0796  0021               	movlb	1	; select bank1
  5400  0797  108D               	bcf	13,1	;volatile
  5401                           
  5402                           ;i2c.c: 87: Data |= 0x01;
  5403  0798  1474               	bsf	I2C_Receive_Byte@Data,0
  5404  0799                     l722:	
  5405                           ;i2c.c: 88: }
  5406                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  5407                           
  5408  0799  0021               	movlb	1	; select bank1
  5409  079A  108D               	bcf	13,1	;volatile
  5410                           
  5411                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  5412  079B  0022               	movlb	2	; select bank2
  5413  079C  100D               	bcf	13,0	;volatile
  5414                           
  5415                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5416  079D  300D               	movlw	13
  5417  079E  00F3               	movwf	??_I2C_Receive_Byte
  5418  079F                     u3807:	
  5419  079F  0BF3               	decfsz	??_I2C_Receive_Byte,f
  5420  07A0  2F9F               	goto	u3807
  5421  07A1  3001               	movlw	1
  5422  07A2  00F3               	movwf	??_I2C_Receive_Byte
  5423  07A3  0873               	movf	??_I2C_Receive_Byte,w
  5424  07A4  07F5               	addwf	I2C_Receive_Byte@i,f
  5425  07A5  3008               	movlw	8
  5426  07A6  0275               	subwf	I2C_Receive_Byte@i,w
  5427  07A7  1C03               	skipc
  5428  07A8  2F8A               	goto	L2
  5429  07A9                     l3557:	
  5430                           
  5431                           ;i2c.c: 92: }
  5432                           ;i2c.c: 93: return Data;
  5433  07A9  0874               	movf	I2C_Receive_Byte@Data,w
  5434  07AA  0008               	return
  5435  07AB                     __end_of_I2C_Receive_Byte:	
  5436                           
  5437                           	psect	text22
  5438  0729                     __ptext22:	
  5439 ;; *************** function _temperature_display *****************
  5440 ;; Defined at:
  5441 ;;		line 235 in file "mcc_generated_files/max31856.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    6
  5462 ;; This function calls:
  5463 ;;		_Tc_Display
  5464 ;;		_err_Display
  5465 ;;		_maxim_31856_write_register
  5466 ;;		_maxim_clear_fault_status
  5467 ;;		_tc_temperature_trans
  5468 ;; This function is called by:
  5469 ;;		_temperature_process
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _temperature_display
  5475  0729                     _temperature_display:	
  5476                           
  5477                           ;max31856.c: 237: if(uch_sr==(uint8_t)0x00)
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5481  0729  0020               	movlb	0	; select bank0
  5482  072A  0843               	movf	_uch_sr,w
  5483  072B  1D03               	btfss	3,2
  5484  072C  2F33               	goto	l3965
  5485                           
  5486                           ;max31856.c: 238: {
  5487                           ;max31856.c: 239: tc_temperature_trans();
  5488  072D  3181  2106  3187   	fcall	_tc_temperature_trans
  5489                           
  5490                           ;max31856.c: 240: Tc_Display();
  5491  0730  3181  21BE         	fcall	_Tc_Display
  5492                           
  5493                           ;max31856.c: 241: }
  5494  0732  0008               	return
  5495  0733                     l3965:	
  5496                           
  5497                           ;max31856.c: 242: else
  5498                           ;max31856.c: 243: {
  5499                           ;max31856.c: 244: if(time_count == 1)
  5500  0733  0378               	decf	_time_count,w
  5501  0734  1D03               	btfss	3,2
  5502  0735  2F3A               	goto	l3969
  5503                           
  5504                           ;max31856.c: 245: {
  5505                           ;max31856.c: 246: CH1_state = 1;
  5506  0736  0020               	movlb	0	; select bank0
  5507  0737  01B4               	clrf	_CH1_state
  5508  0738  0AB4               	incf	_CH1_state,f
  5509                           
  5510                           ;max31856.c: 247: }
  5511  0739  2F41               	goto	l3973
  5512  073A                     l3969:	
  5513                           
  5514                           ;max31856.c: 248: else if(time_count == 3)
  5515  073A  3003               	movlw	3
  5516  073B  0678               	xorwf	_time_count,w
  5517  073C  1D03               	btfss	3,2
  5518  073D  2F41               	goto	l3973
  5519                           
  5520                           ;max31856.c: 249: {
  5521                           ;max31856.c: 250: CH2_state = 1;
  5522  073E  0020               	movlb	0	; select bank0
  5523  073F  01B5               	clrf	_CH2_state
  5524  0740  0AB5               	incf	_CH2_state,f
  5525  0741                     l3973:	
  5526                           
  5527                           ;max31856.c: 251: }
  5528                           ;max31856.c: 252: err_Display();
  5529  0741  3187  2755  3187   	fcall	_err_Display
  5530                           
  5531                           ;max31856.c: 253: maxim_31856_write_register(0x82, 0xFF);
  5532  0744  30FF               	movlw	255
  5533  0745  0020               	movlb	0	; select bank0
  5534  0746  00DD               	movwf	??_temperature_display
  5535  0747  085D               	movf	??_temperature_display,w
  5536  0748  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5537  0749  3082               	movlw	130
  5538  074A  318E  2615  3187   	fcall	_maxim_31856_write_register
  5539                           
  5540                           ;max31856.c: 254: maxim_clear_fault_status();
  5541  074D  318E  2631  3187   	fcall	_maxim_clear_fault_status
  5542                           
  5543                           ;max31856.c: 255: maxim_31856_write_register(0x82, 0x00);
  5544  0750  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5545  0751  3082               	movlw	130
  5546  0752  318E  2615         	fcall	_maxim_31856_write_register
  5547  0754  0008               	return
  5548  0755                     __end_of_temperature_display:	
  5549                           
  5550                           	psect	text23
  5551  0106                     __ptext23:	
  5552 ;; *************** function _tc_temperature_trans *****************
  5553 ;; Defined at:
  5554 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;Total ram usage:        8 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    3
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_temperature_display
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _tc_temperature_trans
  5584  0106                     _tc_temperature_trans:	
  5585                           
  5586                           ;max31856.c: 170: temperature_value = 0;
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in _tc_temperature_trans: [wreg+status,2+status,0]
  5590  0106  3000               	movlw	0
  5591  0107  0020               	movlb	0	; select bank0
  5592  0108  00A7               	movwf	_temperature_value+3
  5593  0109  3000               	movlw	0
  5594  010A  00A6               	movwf	_temperature_value+2
  5595  010B  3000               	movlw	0
  5596  010C  00A5               	movwf	_temperature_value+1
  5597  010D  3000               	movlw	0
  5598  010E  00A4               	movwf	_temperature_value
  5599                           
  5600                           ;max31856.c: 171: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5601  010F  303F               	movlw	63
  5602  0110  057A               	andwf	_uch_ltcbh,w
  5603  0111  00D0               	movwf	??_tc_temperature_trans
  5604  0112  0850               	movf	??_tc_temperature_trans,w
  5605  0113  00D2               	movwf	??_tc_temperature_trans+2
  5606  0114  0841               	movf	_uch_ltcbm,w
  5607  0115  00D1               	movwf	??_tc_temperature_trans+1
  5608  0116  0D52               	rlf	??_tc_temperature_trans+2,w
  5609  0117  0CD2               	rrf	??_tc_temperature_trans+2,f
  5610  0118  0CD1               	rrf	??_tc_temperature_trans+1,f
  5611  0119  0851               	movf	??_tc_temperature_trans+1,w
  5612  011A  00A4               	movwf	_temperature_value
  5613  011B  0852               	movf	??_tc_temperature_trans+2,w
  5614  011C  00A5               	movwf	_temperature_value+1
  5615  011D  0D89               	rlf	9,f
  5616  011E  3B89               	subwfb	9,f
  5617  011F  0989               	comf	9,f
  5618  0120  00A6               	movwf	_temperature_value+2
  5619  0121  00A7               	movwf	_temperature_value+3
  5620                           
  5621                           ;max31856.c: 172: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5622  0122  1BFA               	btfsc	_uch_ltcbh,7
  5623  0123  16A5               	bsf	_temperature_value+1,5
  5624                           
  5625                           ;max31856.c: 174: if(time_count == 1)
  5626  0124  0378               	decf	_time_count,w
  5627  0125  1D03               	btfss	3,2
  5628  0126  292C               	goto	l3783
  5629                           
  5630                           ;max31856.c: 175: {
  5631                           ;max31856.c: 176: CH1_temperature= temperature_value;
  5632  0127  0825               	movf	_temperature_value+1,w
  5633  0128  00AB               	movwf	_CH1_temperature+1
  5634  0129  0824               	movf	_temperature_value,w
  5635  012A  00AA               	movwf	_CH1_temperature
  5636                           
  5637                           ;max31856.c: 177: }
  5638  012B  2934               	goto	l3787
  5639  012C                     l3783:	
  5640                           
  5641                           ;max31856.c: 178: else if(time_count == 3)
  5642  012C  3003               	movlw	3
  5643  012D  0678               	xorwf	_time_count,w
  5644  012E  1D03               	btfss	3,2
  5645  012F  2934               	goto	l3787
  5646                           
  5647                           ;max31856.c: 179: {
  5648                           ;max31856.c: 180: CH2_temperature= temperature_value;
  5649  0130  0825               	movf	_temperature_value+1,w
  5650  0131  00AD               	movwf	_CH2_temperature+1
  5651  0132  0824               	movf	_temperature_value,w
  5652  0133  00AC               	movwf	_CH2_temperature
  5653  0134                     l3787:	
  5654                           
  5655                           ;max31856.c: 181: }
  5656                           ;max31856.c: 183: if((uch_ltcbh&0x80)==0x80)
  5657  0134  1FFA               	btfss	_uch_ltcbh,7
  5658  0135  298E               	goto	l3803
  5659                           
  5660                           ;max31856.c: 184: {
  5661                           ;max31856.c: 185: temperature_sign = 1;
  5662  0136  01BB               	clrf	_temperature_sign
  5663  0137  0ABB               	incf	_temperature_sign,f
  5664                           
  5665                           ;max31856.c: 186: temperature_value=0x3FFF-temperature_value+1;
  5666  0138  3000               	movlw	0
  5667  0139  00D0               	movwf	??_tc_temperature_trans
  5668  013A  3040               	movlw	64
  5669  013B  00D1               	movwf	??_tc_temperature_trans+1
  5670  013C  3000               	movlw	0
  5671  013D  00D2               	movwf	??_tc_temperature_trans+2
  5672  013E  3000               	movlw	0
  5673  013F  00D3               	movwf	??_tc_temperature_trans+3
  5674  0140  0924               	comf	_temperature_value,w
  5675  0141  00D4               	movwf	??_tc_temperature_trans+4
  5676  0142  0925               	comf	_temperature_value+1,w
  5677  0143  00D5               	movwf	??_tc_temperature_trans+5
  5678  0144  0926               	comf	_temperature_value+2,w
  5679  0145  00D6               	movwf	??_tc_temperature_trans+6
  5680  0146  0927               	comf	_temperature_value+3,w
  5681  0147  00D7               	movwf	??_tc_temperature_trans+7
  5682  0148  0AD4               	incf	??_tc_temperature_trans+4,f
  5683  0149  1903               	skipnz
  5684  014A  0AD5               	incf	??_tc_temperature_trans+5,f
  5685  014B  1903               	skipnz
  5686  014C  0AD6               	incf	??_tc_temperature_trans+6,f
  5687  014D  1903               	skipnz
  5688  014E  0AD7               	incf	??_tc_temperature_trans+7,f
  5689  014F  0854               	movf	??_tc_temperature_trans+4,w
  5690  0150  07D0               	addwf	??_tc_temperature_trans,f
  5691  0151  0855               	movf	??_tc_temperature_trans+5,w
  5692  0152  3DD1               	addwfc	??_tc_temperature_trans+1,f
  5693  0153  0856               	movf	??_tc_temperature_trans+6,w
  5694  0154  3DD2               	addwfc	??_tc_temperature_trans+2,f
  5695  0155  0857               	movf	??_tc_temperature_trans+7,w
  5696  0156  3DD3               	addwfc	??_tc_temperature_trans+3,f
  5697  0157  0853               	movf	??_tc_temperature_trans+3,w
  5698  0158  00A7               	movwf	_temperature_value+3
  5699  0159  0852               	movf	??_tc_temperature_trans+2,w
  5700  015A  00A6               	movwf	_temperature_value+2
  5701  015B  0851               	movf	??_tc_temperature_trans+1,w
  5702  015C  00A5               	movwf	_temperature_value+1
  5703  015D  0850               	movf	??_tc_temperature_trans,w
  5704  015E  00A4               	movwf	_temperature_value
  5705                           
  5706                           ;max31856.c: 188: temperature_int = temperature_value>>3;
  5707  015F  0824               	movf	_temperature_value,w
  5708  0160  00D0               	movwf	??_tc_temperature_trans
  5709  0161  0825               	movf	_temperature_value+1,w
  5710  0162  00D1               	movwf	??_tc_temperature_trans+1
  5711  0163  0826               	movf	_temperature_value+2,w
  5712  0164  00D2               	movwf	??_tc_temperature_trans+2
  5713  0165  0827               	movf	_temperature_value+3,w
  5714  0166  00D3               	movwf	??_tc_temperature_trans+3
  5715  0167  3003               	movlw	3
  5716  0168                     u2995:	
  5717  0168  36D3               	lsrf	??_tc_temperature_trans+3,f
  5718  0169  0CD2               	rrf	??_tc_temperature_trans+2,f
  5719  016A  0CD1               	rrf	??_tc_temperature_trans+1,f
  5720  016B  0CD0               	rrf	??_tc_temperature_trans,f
  5721  016C  0B89               	decfsz	9,f
  5722  016D  2968               	goto	u2995
  5723  016E  0851               	movf	??_tc_temperature_trans+1,w
  5724  016F  00B3               	movwf	_temperature_int+1
  5725  0170  0850               	movf	??_tc_temperature_trans,w
  5726  0171  00B2               	movwf	_temperature_int
  5727                           
  5728                           ;max31856.c: 189: temperature_decimal = temperature_value & 0x07;
  5729  0172  0824               	movf	_temperature_value,w
  5730  0173  3907               	andlw	7
  5731  0174  00D0               	movwf	??_tc_temperature_trans
  5732  0175  0850               	movf	??_tc_temperature_trans,w
  5733  0176  00BA               	movwf	_temperature_decimal
  5734                           
  5735                           ;max31856.c: 190: if(temperature_decimal > 3) temperature_decimal++;
  5736  0177  3004               	movlw	4
  5737  0178  023A               	subwf	_temperature_decimal,w
  5738  0179  1C03               	skipc
  5739  017A  297F               	goto	l489
  5740  017B  3001               	movlw	1
  5741  017C  00D0               	movwf	??_tc_temperature_trans
  5742  017D  0850               	movf	??_tc_temperature_trans,w
  5743  017E  07BA               	addwf	_temperature_decimal,f
  5744  017F                     l489:	
  5745                           
  5746                           ;max31856.c: 191: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5747  017F  3003               	movlw	3
  5748  0180  063A               	xorwf	_temperature_decimal,w
  5749  0181  1903               	btfsc	3,2
  5750  0182  2987               	goto	l492
  5751  0183  3008               	movlw	8
  5752  0184  063A               	xorwf	_temperature_decimal,w
  5753  0185  1D03               	btfss	3,2
  5754  0186  0008               	return
  5755  0187                     l492:	
  5756  0187  1C32               	btfss	_temperature_int,0
  5757  0188  0008               	return
  5758  0189  3001               	movlw	1
  5759  018A  00D0               	movwf	??_tc_temperature_trans
  5760  018B  0850               	movf	??_tc_temperature_trans,w
  5761  018C  07BA               	addwf	_temperature_decimal,f
  5762                           
  5763                           ;max31856.c: 192: }
  5764  018D  0008               	return
  5765  018E                     l3803:	
  5766                           
  5767                           ;max31856.c: 193: else
  5768                           ;max31856.c: 194: {
  5769                           ;max31856.c: 195: temperature_sign = 0;
  5770  018E  01BB               	clrf	_temperature_sign
  5771                           
  5772                           ;max31856.c: 196: temperature_int = temperature_value>>3;
  5773  018F  0824               	movf	_temperature_value,w
  5774  0190  00D0               	movwf	??_tc_temperature_trans
  5775  0191  0825               	movf	_temperature_value+1,w
  5776  0192  00D1               	movwf	??_tc_temperature_trans+1
  5777  0193  0826               	movf	_temperature_value+2,w
  5778  0194  00D2               	movwf	??_tc_temperature_trans+2
  5779  0195  0827               	movf	_temperature_value+3,w
  5780  0196  00D3               	movwf	??_tc_temperature_trans+3
  5781  0197  3003               	movlw	3
  5782  0198                     u3045:	
  5783  0198  36D3               	lsrf	??_tc_temperature_trans+3,f
  5784  0199  0CD2               	rrf	??_tc_temperature_trans+2,f
  5785  019A  0CD1               	rrf	??_tc_temperature_trans+1,f
  5786  019B  0CD0               	rrf	??_tc_temperature_trans,f
  5787  019C  0B89               	decfsz	9,f
  5788  019D  2998               	goto	u3045
  5789  019E  0851               	movf	??_tc_temperature_trans+1,w
  5790  019F  00B3               	movwf	_temperature_int+1
  5791  01A0  0850               	movf	??_tc_temperature_trans,w
  5792  01A1  00B2               	movwf	_temperature_int
  5793                           
  5794                           ;max31856.c: 197: temperature_decimal = temperature_value & 0x07;
  5795  01A2  0824               	movf	_temperature_value,w
  5796  01A3  3907               	andlw	7
  5797  01A4  00D0               	movwf	??_tc_temperature_trans
  5798  01A5  0850               	movf	??_tc_temperature_trans,w
  5799  01A6  00BA               	movwf	_temperature_decimal
  5800                           
  5801                           ;max31856.c: 198: if(temperature_decimal > 3) temperature_decimal++;
  5802  01A7  3004               	movlw	4
  5803  01A8  023A               	subwf	_temperature_decimal,w
  5804  01A9  1C03               	skipc
  5805  01AA  29AF               	goto	l494
  5806  01AB  3001               	movlw	1
  5807  01AC  00D0               	movwf	??_tc_temperature_trans
  5808  01AD  0850               	movf	??_tc_temperature_trans,w
  5809  01AE  07BA               	addwf	_temperature_decimal,f
  5810  01AF                     l494:	
  5811                           
  5812                           ;max31856.c: 199: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5813  01AF  3004               	movlw	4
  5814  01B0  063A               	xorwf	_temperature_decimal,w
  5815  01B1  1903               	btfsc	3,2
  5816  01B2  29B7               	goto	l497
  5817  01B3  3008               	movlw	8
  5818  01B4  063A               	xorwf	_temperature_decimal,w
  5819  01B5  1D03               	btfss	3,2
  5820  01B6  0008               	return
  5821  01B7                     l497:	
  5822  01B7  1C32               	btfss	_temperature_int,0
  5823  01B8  0008               	return
  5824  01B9  3001               	movlw	1
  5825  01BA  00D0               	movwf	??_tc_temperature_trans
  5826  01BB  0850               	movf	??_tc_temperature_trans,w
  5827  01BC  07BA               	addwf	_temperature_decimal,f
  5828  01BD  0008               	return
  5829  01BE                     __end_of_tc_temperature_trans:	
  5830                           
  5831                           	psect	text24
  5832  0E31                     __ptext24:	
  5833 ;; *************** function _maxim_clear_fault_status *****************
  5834 ;; Defined at:
  5835 ;;		line 155 in file "mcc_generated_files/max31856.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;		None
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0, pclath, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;Total ram usage:        1 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    5
  5856 ;; This function calls:
  5857 ;;		_maxim_31856_read_register
  5858 ;;		_maxim_31856_write_register
  5859 ;; This function is called by:
  5860 ;;		_temperature_display
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _maxim_clear_fault_status
  5866  0E31                     _maxim_clear_fault_status:	
  5867                           
  5868                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  5872  0E31  3000               	movlw	0
  5873  0E32  318E  2641  318E   	fcall	_maxim_31856_read_register
  5874  0E35  00F7               	movwf	??_maxim_clear_fault_status
  5875  0E36  0877               	movf	??_maxim_clear_fault_status,w
  5876  0E37  00F9               	movwf	_uch_cr0
  5877                           
  5878                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  5879  0E38  14F9               	bsf	_uch_cr0,1
  5880                           
  5881                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  5882  0E39  0879               	movf	_uch_cr0,w
  5883  0E3A  00F7               	movwf	??_maxim_clear_fault_status
  5884  0E3B  0877               	movf	??_maxim_clear_fault_status,w
  5885  0E3C  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5886  0E3D  3080               	movlw	128
  5887  0E3E  318E  2615         	fcall	_maxim_31856_write_register
  5888  0E40  0008               	return
  5889  0E41                     __end_of_maxim_clear_fault_status:	
  5890                           
  5891                           	psect	text25
  5892  0755                     __ptext25:	
  5893 ;; *************** function _err_Display *****************
  5894 ;; Defined at:
  5895 ;;		line 151 in file "mcc_generated_files/ht1621.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  num             4    7[BANK0 ] unsigned char [4]
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;Total ram usage:        5 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    5
  5916 ;; This function calls:
  5917 ;;		_WriteAll_1621
  5918 ;; This function is called by:
  5919 ;;		_temperature_display
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           
  5924                           ;psect for function _err_Display
  5925  0755                     _err_Display:	
  5926                           
  5927                           ;ht1621.c: 153: unsigned char num[4]={0};
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5931  0755  0021               	movlb	1	; select bank1
  5932  0756  0823               	movf	(err_Display@F2123+3)^(0+128),w
  5933  0757  0020               	movlb	0	; select bank0
  5934  0758  00DA               	movwf	err_Display@num+3
  5935  0759  0021               	movlb	1	; select bank1
  5936  075A  0822               	movf	(err_Display@F2123+2)^(0+128),w
  5937  075B  0020               	movlb	0	; select bank0
  5938  075C  00D9               	movwf	err_Display@num+2
  5939  075D  0021               	movlb	1	; select bank1
  5940  075E  0821               	movf	(err_Display@F2123+1)^(0+128),w
  5941  075F  0020               	movlb	0	; select bank0
  5942  0760  00D8               	movwf	err_Display@num+1
  5943  0761  0021               	movlb	1	; select bank1
  5944  0762  0820               	movf	err_Display@F2123^(0+128),w
  5945  0763  0020               	movlb	0	; select bank0
  5946  0764  00D7               	movwf	err_Display@num
  5947                           
  5948                           ;ht1621.c: 154: num[1] = Dis_TAB[0x10];
  5949  0765  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  5950  0766  0084               	movwf	4
  5951  0767  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  5952  0768  0085               	movwf	5
  5953  0769  0800               	movf	0,w	;code access
  5954  076A  00D6               	movwf	??_err_Display
  5955  076B  0856               	movf	??_err_Display,w
  5956  076C  00D8               	movwf	err_Display@num+1
  5957                           
  5958                           ;ht1621.c: 155: num[2] = Dis_TAB[0x0c];
  5959  076D  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  5960  076E  0084               	movwf	4
  5961  076F  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  5962  0770  0085               	movwf	5
  5963  0771  0800               	movf	0,w	;code access
  5964  0772  00D6               	movwf	??_err_Display
  5965  0773  0856               	movf	??_err_Display,w
  5966  0774  00D9               	movwf	err_Display@num+2
  5967                           
  5968                           ;ht1621.c: 156: WriteAll_1621(0, num, 4);
  5969  0775  3057               	movlw	low err_Display@num
  5970  0776  00D0               	movwf	WriteAll_1621@p
  5971  0777  3000               	movlw	high err_Display@num
  5972  0778  00D1               	movwf	WriteAll_1621@p+1
  5973  0779  3004               	movlw	4
  5974  077A  00D6               	movwf	??_err_Display
  5975  077B  0856               	movf	??_err_Display,w
  5976  077C  00D2               	movwf	WriteAll_1621@cnt
  5977  077D  3000               	movlw	0
  5978  077E  3186  2665         	fcall	_WriteAll_1621
  5979  0780  0008               	return
  5980  0781                     __end_of_err_Display:	
  5981                           
  5982                           	psect	text26
  5983  01BE                     __ptext26:	
  5984 ;; *************** function _Tc_Display *****************
  5985 ;; Defined at:
  5986 ;;		line 109 in file "mcc_generated_files/ht1621.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  data            2   11[BANK0 ] unsigned int 
  5991 ;;  count           1   10[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;Total ram usage:        4 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    5
  6008 ;; This function calls:
  6009 ;;		_WriteAll_1621
  6010 ;;		___lwdiv
  6011 ;;		___lwmod
  6012 ;;		_memset
  6013 ;; This function is called by:
  6014 ;;		_temperature_display
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _Tc_Display
  6020  01BE                     _Tc_Display:	
  6021                           
  6022                           ;ht1621.c: 111: unsigned char count = 0;
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6026  01BE  0020               	movlb	0	; select bank0
  6027  01BF  01DA               	clrf	Tc_Display@count
  6028                           
  6029                           ;ht1621.c: 112: unsigned int data = temperature_int;
  6030  01C0  0833               	movf	_temperature_int+1,w
  6031  01C1  00DC               	movwf	Tc_Display@data+1
  6032  01C2  0832               	movf	_temperature_int,w
  6033  01C3  00DB               	movwf	Tc_Display@data
  6034                           
  6035                           ;ht1621.c: 113: memset(display_buff,0,4);
  6036  01C4  3000               	movlw	0
  6037  01C5  00F3               	movwf	memset@c
  6038  01C6  00F4               	movwf	memset@c+1
  6039  01C7  3004               	movlw	4
  6040  01C8  00F5               	movwf	memset@n
  6041  01C9  3000               	movlw	0
  6042  01CA  00F6               	movwf	memset@n+1
  6043  01CB  304C               	movlw	(low (_display_buff| 0))& (0+255)
  6044  01CC  318F  2783  3181   	fcall	_memset
  6045  01CF                     l3827:	
  6046                           ;ht1621.c: 114: while(data)
  6047                           
  6048  01CF  0020               	movlb	0	; select bank0
  6049  01D0  085B               	movf	Tc_Display@data,w
  6050  01D1  045C               	iorwf	Tc_Display@data+1,w
  6051  01D2  1903               	btfsc	3,2
  6052  01D3  2A3F               	goto	l3833
  6053                           
  6054                           ;ht1621.c: 115: {
  6055                           ;ht1621.c: 116: count++;
  6056  01D4  3001               	movlw	1
  6057  01D5  0020               	movlb	0	; select bank0
  6058  01D6  00D9               	movwf	??_Tc_Display
  6059  01D7  0859               	movf	??_Tc_Display,w
  6060  01D8  07DA               	addwf	Tc_Display@count,f
  6061                           
  6062                           ;ht1621.c: 117: data /=10;
  6063  01D9  300A               	movlw	10
  6064  01DA  00D1               	movwf	___lwdiv@divisor
  6065  01DB  3000               	movlw	0
  6066  01DC  00D2               	movwf	___lwdiv@divisor+1
  6067  01DD  085C               	movf	Tc_Display@data+1,w
  6068  01DE  00D4               	movwf	___lwdiv@dividend+1
  6069  01DF  085B               	movf	Tc_Display@data,w
  6070  01E0  00D3               	movwf	___lwdiv@dividend
  6071  01E1  3186  2630  3181   	fcall	___lwdiv
  6072  01E4  0020               	movlb	0	; select bank0
  6073  01E5  0852               	movf	?___lwdiv+1,w
  6074  01E6  00DC               	movwf	Tc_Display@data+1
  6075  01E7  0851               	movf	?___lwdiv,w
  6076  01E8  00DB               	movwf	Tc_Display@data
  6077  01E9  29CF               	goto	l3827
  6078  01EA                     l3829:	
  6079                           ;ht1621.c: 120: {
  6080                           ;ht1621.c: 121: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  6081                           
  6082                           ;ht1621.c: 118: }
  6083                           ;ht1621.c: 119: switch(count)
  6084                           
  6085  01EA  3064               	movlw	100
  6086  01EB  00D1               	movwf	___lwdiv@divisor
  6087  01EC  3000               	movlw	0
  6088  01ED  00D2               	movwf	___lwdiv@divisor+1
  6089  01EE  0833               	movf	_temperature_int+1,w
  6090  01EF  00D4               	movwf	___lwdiv@dividend+1
  6091  01F0  0832               	movf	_temperature_int,w
  6092  01F1  00D3               	movwf	___lwdiv@dividend
  6093  01F2  3186  2630  3181   	fcall	___lwdiv
  6094  01F5  0020               	movlb	0	; select bank0
  6095  01F6  0852               	movf	?___lwdiv+1,w
  6096  01F7  0085               	movwf	5
  6097  01F8  0851               	movf	?___lwdiv,w
  6098  01F9  0084               	movwf	4
  6099  01FA  3000               	movlw	low (_Dis_TAB| (0+32768))
  6100  01FB  0784               	addwf	4,f
  6101  01FC  3090               	movlw	high (_Dis_TAB| (0+32768))
  6102  01FD  3D85               	addwfc	5,f
  6103  01FE  0800               	movf	0,w	;code access
  6104  01FF  00D9               	movwf	??_Tc_Display
  6105  0200  0859               	movf	??_Tc_Display,w
  6106  0201  00CC               	movwf	_display_buff
  6107  0202                     l637:	
  6108                           ;ht1621.c: 122: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  6109                           
  6110  0202  300A               	movlw	10
  6111  0203  00D1               	movwf	___lwdiv@divisor
  6112  0204  3000               	movlw	0
  6113  0205  00D2               	movwf	___lwdiv@divisor+1
  6114  0206  0833               	movf	_temperature_int+1,w
  6115  0207  00F6               	movwf	___lwmod@dividend+1
  6116  0208  0832               	movf	_temperature_int,w
  6117  0209  00F5               	movwf	___lwmod@dividend
  6118  020A  3064               	movlw	100
  6119  020B  00F3               	movwf	___lwmod@divisor
  6120  020C  3000               	movlw	0
  6121  020D  00F4               	movwf	___lwmod@divisor+1
  6122  020E  3186  26FC  3181   	fcall	___lwmod
  6123  0211  0874               	movf	?___lwmod+1,w
  6124  0212  0020               	movlb	0	; select bank0
  6125  0213  00D4               	movwf	___lwdiv@dividend+1
  6126  0214  0873               	movf	?___lwmod,w
  6127  0215  00D3               	movwf	___lwdiv@dividend
  6128  0216  3186  2630  3181   	fcall	___lwdiv
  6129  0219  0020               	movlb	0	; select bank0
  6130  021A  0852               	movf	?___lwdiv+1,w
  6131  021B  0085               	movwf	5
  6132  021C  0851               	movf	?___lwdiv,w
  6133  021D  0084               	movwf	4
  6134  021E  3000               	movlw	low (_Dis_TAB| (0+32768))
  6135  021F  0784               	addwf	4,f
  6136  0220  3090               	movlw	high (_Dis_TAB| (0+32768))
  6137  0221  3D85               	addwfc	5,f
  6138  0222  0800               	movf	0,w	;code access
  6139  0223  00D9               	movwf	??_Tc_Display
  6140  0224  0859               	movf	??_Tc_Display,w
  6141  0225  00CD               	movwf	_display_buff+1
  6142  0226                     l638:	
  6143                           ;ht1621.c: 123: case 1:display_buff[2] = Dis_TAB[temperature_int%10];
  6144                           
  6145  0226  300A               	movlw	10
  6146  0227  00F3               	movwf	___lwmod@divisor
  6147  0228  3000               	movlw	0
  6148  0229  00F4               	movwf	___lwmod@divisor+1
  6149  022A  0833               	movf	_temperature_int+1,w
  6150  022B  00F6               	movwf	___lwmod@dividend+1
  6151  022C  0832               	movf	_temperature_int,w
  6152  022D  00F5               	movwf	___lwmod@dividend
  6153  022E  3186  26FC  3181   	fcall	___lwmod
  6154  0231  0874               	movf	?___lwmod+1,w
  6155  0232  0085               	movwf	5
  6156  0233  0873               	movf	?___lwmod,w
  6157  0234  0084               	movwf	4
  6158  0235  3000               	movlw	low (_Dis_TAB| (0+32768))
  6159  0236  0784               	addwf	4,f
  6160  0237  3090               	movlw	high (_Dis_TAB| (0+32768))
  6161  0238  3D85               	addwfc	5,f
  6162  0239  0800               	movf	0,w	;code access
  6163  023A  0020               	movlb	0	; select bank0
  6164  023B  00D9               	movwf	??_Tc_Display
  6165  023C  0859               	movf	??_Tc_Display,w
  6166  023D  00CE               	movwf	_display_buff+2
  6167                           
  6168                           ;ht1621.c: 125: }
  6169                           
  6170                           ;ht1621.c: 124: default:break;
  6171  023E  2A4A               	goto	l3835
  6172  023F                     l3833:	
  6173  023F  085A               	movf	Tc_Display@count,w
  6174                           
  6175                           ; Switch size 1, requested type "space"
  6176                           ; Number of cases is 3, Range of values is 1 to 3
  6177                           ; switch strategies available:
  6178                           ; Name         Instructions Cycles
  6179                           ; simple_byte           10     6 (average)
  6180                           ; direct_byte           15     9 (fixed)
  6181                           ; jumptable            263     9 (fixed)
  6182                           ;	Chosen strategy is simple_byte
  6183  0240  3A01               	xorlw	1	; case 1
  6184  0241  1903               	skipnz
  6185  0242  2A26               	goto	l638
  6186  0243  3A03               	xorlw	3	; case 2
  6187  0244  1903               	skipnz
  6188  0245  2A02               	goto	l637
  6189  0246  3A01               	xorlw	1	; case 3
  6190  0247  1903               	skipnz
  6191  0248  29EA               	goto	l3829
  6192  0249  2A4A               	goto	l3835
  6193  024A                     l3835:	
  6194                           
  6195                           ;ht1621.c: 126: if(temperature_sign == 1) display_buff[0]|=0x08;
  6196  024A  033B               	decf	_temperature_sign,w
  6197  024B  1903               	btfsc	3,2
  6198  024C  15CC               	bsf	_display_buff,3
  6199                           
  6200                           ;ht1621.c: 127: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  6201  024D  083A               	movf	_temperature_decimal,w
  6202  024E  3E00               	addlw	low (_Dis_TAB| (0+32768))
  6203  024F  0084               	movwf	4
  6204  0250  3090               	movlw	high (_Dis_TAB| (0+32768))
  6205  0251  1803               	skipnc
  6206  0252  3E01               	addlw	1
  6207  0253  0085               	movwf	5
  6208  0254  0800               	movf	0,w	;code access
  6209  0255  3808               	iorlw	8
  6210  0256  00D9               	movwf	??_Tc_Display
  6211  0257  0859               	movf	??_Tc_Display,w
  6212  0258  00CF               	movwf	_display_buff+3
  6213                           
  6214                           ;ht1621.c: 128: WriteAll_1621(0,display_buff,4);
  6215  0259  304C               	movlw	low _display_buff
  6216  025A  00D0               	movwf	WriteAll_1621@p
  6217  025B  3000               	movlw	high _display_buff
  6218  025C  00D1               	movwf	WriteAll_1621@p+1
  6219  025D  3004               	movlw	4
  6220  025E  00D9               	movwf	??_Tc_Display
  6221  025F  0859               	movf	??_Tc_Display,w
  6222  0260  00D2               	movwf	WriteAll_1621@cnt
  6223  0261  3000               	movlw	0
  6224  0262  3186  2665         	fcall	_WriteAll_1621
  6225  0264  0008               	return
  6226  0265                     __end_of_Tc_Display:	
  6227                           
  6228                           	psect	text27
  6229  0F83                     __ptext27:	
  6230 ;; *************** function _memset *****************
  6231 ;; Defined at:
  6232 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  p1              1    wreg     PTR void 
  6235 ;;		 -> display_buff(4), 
  6236 ;;  c               2    3[COMMON] int 
  6237 ;;  n               2    5[COMMON] unsigned int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  p1              1    0[BANK0 ] PTR void 
  6240 ;;		 -> display_buff(4), 
  6241 ;;  p               1    1[BANK0 ] PTR unsigned char 
  6242 ;;		 -> display_buff(4), 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      PTR void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;Total ram usage:        7 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    3
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_Tc_Display
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function _memset
  6268  0F83                     _memset:	
  6269                           
  6270                           ;incstack = 0
  6271                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6272                           ;memset@p1 stored from wreg
  6273  0F83  0020               	movlb	0	; select bank0
  6274  0F84  00D0               	movwf	memset@p1
  6275  0F85  0850               	movf	memset@p1,w
  6276  0F86  00F7               	movwf	??_memset
  6277  0F87  0877               	movf	??_memset,w
  6278  0F88  00D1               	movwf	memset@p
  6279  0F89                     l3643:	
  6280  0F89  3001               	movlw	1
  6281  0F8A  02F5               	subwf	memset@n,f
  6282  0F8B  3000               	movlw	0
  6283  0F8C  3BF6               	subwfb	memset@n+1,f
  6284  0F8D  0A75               	incf	memset@n,w
  6285  0F8E  1903               	btfsc	3,2
  6286  0F8F  0A76               	incf	memset@n+1,w
  6287  0F90  1903               	btfsc	3,2
  6288  0F91  0008               	return
  6289  0F92  0873               	movf	memset@c,w
  6290  0F93  00F7               	movwf	??_memset
  6291  0F94  0851               	movf	memset@p,w
  6292  0F95  0086               	movwf	6
  6293  0F96  0187               	clrf	7
  6294  0F97  0877               	movf	??_memset,w
  6295  0F98  0081               	movwf	1
  6296  0F99  3001               	movlw	1
  6297  0F9A  00F7               	movwf	??_memset
  6298  0F9B  0877               	movf	??_memset,w
  6299  0F9C  07D1               	addwf	memset@p,f
  6300  0F9D  2F89               	goto	l3643
  6301  0F9E                     __end_of_memset:	
  6302                           ;	Return value of _memset is never used
  6303                           
  6304                           
  6305                           	psect	text28
  6306  06FC                     __ptext28:	
  6307 ;; *************** function ___lwmod *****************
  6308 ;; Defined at:
  6309 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  divisor         2    3[COMMON] unsigned int 
  6312 ;;  dividend        2    5[COMMON] unsigned int 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  counter         1    0[BANK0 ] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  2    3[COMMON] unsigned int 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;Total ram usage:        6 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:    3
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_Tc_Display
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           
  6339                           ;psect for function ___lwmod
  6340  06FC                     ___lwmod:	
  6341                           
  6342                           ;incstack = 0
  6343                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6344  06FC  0873               	movf	___lwmod@divisor,w
  6345  06FD  0474               	iorwf	___lwmod@divisor+1,w
  6346  06FE  1903               	btfsc	3,2
  6347  06FF  2F24               	goto	l3751
  6348  0700  0020               	movlb	0	; select bank0
  6349  0701  01D0               	clrf	___lwmod@counter
  6350  0702  0AD0               	incf	___lwmod@counter,f
  6351  0703                     l3741:	
  6352  0703  1BF4               	btfsc	___lwmod@divisor+1,7
  6353  0704  2F0F               	goto	l3743
  6354  0705  3001               	movlw	1
  6355  0706                     u2905:	
  6356  0706  35F3               	lslf	___lwmod@divisor,f
  6357  0707  0DF4               	rlf	___lwmod@divisor+1,f
  6358  0708  0B89               	decfsz	9,f
  6359  0709  2F06               	goto	u2905
  6360  070A  3001               	movlw	1
  6361  070B  00F7               	movwf	??___lwmod
  6362  070C  0877               	movf	??___lwmod,w
  6363  070D  07D0               	addwf	___lwmod@counter,f
  6364  070E  2F03               	goto	l3741
  6365  070F                     l3743:	
  6366  070F  0874               	movf	___lwmod@divisor+1,w
  6367  0710  0276               	subwf	___lwmod@dividend+1,w
  6368  0711  1D03               	skipz
  6369  0712  2F15               	goto	u2925
  6370  0713  0873               	movf	___lwmod@divisor,w
  6371  0714  0275               	subwf	___lwmod@dividend,w
  6372  0715                     u2925:	
  6373  0715  1C03               	skipc
  6374  0716  2F1B               	goto	l3747
  6375  0717  0873               	movf	___lwmod@divisor,w
  6376  0718  02F5               	subwf	___lwmod@dividend,f
  6377  0719  0874               	movf	___lwmod@divisor+1,w
  6378  071A  3BF6               	subwfb	___lwmod@dividend+1,f
  6379  071B                     l3747:	
  6380  071B  3001               	movlw	1
  6381  071C                     u2935:	
  6382  071C  36F4               	lsrf	___lwmod@divisor+1,f
  6383  071D  0CF3               	rrf	___lwmod@divisor,f
  6384  071E  0B89               	decfsz	9,f
  6385  071F  2F1C               	goto	u2935
  6386  0720  3001               	movlw	1
  6387  0721  02D0               	subwf	___lwmod@counter,f
  6388  0722  1D03               	btfss	3,2
  6389  0723  2F0F               	goto	l3743
  6390  0724                     l3751:	
  6391  0724  0876               	movf	___lwmod@dividend+1,w
  6392  0725  00F4               	movwf	?___lwmod+1
  6393  0726  0875               	movf	___lwmod@dividend,w
  6394  0727  00F3               	movwf	?___lwmod
  6395  0728  0008               	return
  6396  0729                     __end_of___lwmod:	
  6397                           
  6398                           	psect	text29
  6399  0630                     __ptext29:	
  6400 ;; *************** function ___lwdiv *****************
  6401 ;; Defined at:
  6402 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  divisor         2    1[BANK0 ] unsigned int 
  6405 ;;  dividend        2    3[BANK0 ] unsigned int 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  quotient        2    7[BANK0 ] unsigned int 
  6408 ;;  counter         1    6[BANK0 ] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  2    1[BANK0 ] unsigned int 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;Total ram usage:        8 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    3
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_Tc_Display
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function ___lwdiv
  6434  0630                     ___lwdiv:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6438  0630  0020               	movlb	0	; select bank0
  6439  0631  01D7               	clrf	___lwdiv@quotient
  6440  0632  01D8               	clrf	___lwdiv@quotient+1
  6441  0633  0851               	movf	___lwdiv@divisor,w
  6442  0634  0452               	iorwf	___lwdiv@divisor+1,w
  6443  0635  1903               	btfsc	3,2
  6444  0636  2E60               	goto	l3729
  6445  0637  01D6               	clrf	___lwdiv@counter
  6446  0638  0AD6               	incf	___lwdiv@counter,f
  6447  0639                     l3717:	
  6448  0639  1BD2               	btfsc	___lwdiv@divisor+1,7
  6449  063A  2E45               	goto	l3719
  6450  063B  3001               	movlw	1
  6451  063C                     u2835:	
  6452  063C  35D1               	lslf	___lwdiv@divisor,f
  6453  063D  0DD2               	rlf	___lwdiv@divisor+1,f
  6454  063E  0B89               	decfsz	9,f
  6455  063F  2E3C               	goto	u2835
  6456  0640  3001               	movlw	1
  6457  0641  00D5               	movwf	??___lwdiv
  6458  0642  0855               	movf	??___lwdiv,w
  6459  0643  07D6               	addwf	___lwdiv@counter,f
  6460  0644  2E39               	goto	l3717
  6461  0645                     l3719:	
  6462  0645  3001               	movlw	1
  6463  0646                     u2855:	
  6464  0646  35D7               	lslf	___lwdiv@quotient,f
  6465  0647  0DD8               	rlf	___lwdiv@quotient+1,f
  6466  0648  0B89               	decfsz	9,f
  6467  0649  2E46               	goto	u2855
  6468  064A  0852               	movf	___lwdiv@divisor+1,w
  6469  064B  0254               	subwf	___lwdiv@dividend+1,w
  6470  064C  1D03               	skipz
  6471  064D  2E50               	goto	u2865
  6472  064E  0851               	movf	___lwdiv@divisor,w
  6473  064F  0253               	subwf	___lwdiv@dividend,w
  6474  0650                     u2865:	
  6475  0650  1C03               	skipc
  6476  0651  2E57               	goto	l3725
  6477  0652  0851               	movf	___lwdiv@divisor,w
  6478  0653  02D3               	subwf	___lwdiv@dividend,f
  6479  0654  0852               	movf	___lwdiv@divisor+1,w
  6480  0655  3BD4               	subwfb	___lwdiv@dividend+1,f
  6481  0656  1457               	bsf	___lwdiv@quotient,0
  6482  0657                     l3725:	
  6483  0657  3001               	movlw	1
  6484  0658                     u2875:	
  6485  0658  36D2               	lsrf	___lwdiv@divisor+1,f
  6486  0659  0CD1               	rrf	___lwdiv@divisor,f
  6487  065A  0B89               	decfsz	9,f
  6488  065B  2E58               	goto	u2875
  6489  065C  3001               	movlw	1
  6490  065D  02D6               	subwf	___lwdiv@counter,f
  6491  065E  1D03               	btfss	3,2
  6492  065F  2E45               	goto	l3719
  6493  0660                     l3729:	
  6494  0660  0858               	movf	___lwdiv@quotient+1,w
  6495  0661  00D2               	movwf	?___lwdiv+1
  6496  0662  0857               	movf	___lwdiv@quotient,w
  6497  0663  00D1               	movwf	?___lwdiv
  6498  0664  0008               	return
  6499  0665                     __end_of___lwdiv:	
  6500                           
  6501                           	psect	text30
  6502  05F8                     __ptext30:	
  6503 ;; *************** function _one_temperature_trans *****************
  6504 ;; Defined at:
  6505 ;;		line 210 in file "mcc_generated_files/max31856.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:        2 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    6
  6526 ;; This function calls:
  6527 ;;		_maxim_31856_read_nregisters
  6528 ;;		_maxim_start_conversion
  6529 ;; This function is called by:
  6530 ;;		_temperature_process
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _one_temperature_trans
  6536  05F8                     _one_temperature_trans:	
  6537                           
  6538                           ;max31856.c: 212: maxim_start_conversion((uint8_t) 0x40);
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6542  05F8  3040               	movlw	64
  6543  05F9  318F  274E  3185   	fcall	_maxim_start_conversion
  6544                           
  6545                           ;max31856.c: 213: MAX31856Sec = 0;
  6546  05FC  0020               	movlb	0	; select bank0
  6547  05FD  01B8               	clrf	_MAX31856Sec
  6548  05FE                     l501:	
  6549                           ;max31856.c: 214: while( !(RB3 == 0 || MAX31856Sec > 2) ) ;
  6550                           
  6551  05FE  1D8D               	btfss	13,3	;volatile
  6552  05FF  2E04               	goto	l3941
  6553  0600  3003               	movlw	3
  6554  0601  0238               	subwf	_MAX31856Sec,w
  6555  0602  1C03               	skipc
  6556  0603  2DFE               	goto	l501
  6557  0604                     l3941:	
  6558                           
  6559                           ;max31856.c: 215: if( MAX31856Sec > 2)
  6560  0604  3003               	movlw	3
  6561  0605  0238               	subwf	_MAX31856Sec,w
  6562  0606  1C03               	skipc
  6563  0607  2E0B               	goto	l3945
  6564                           
  6565                           ;max31856.c: 216: {
  6566                           ;max31856.c: 217: uch_sr = 0x01;
  6567  0608  01C3               	clrf	_uch_sr
  6568  0609  0AC3               	incf	_uch_sr,f
  6569                           
  6570                           ;max31856.c: 218: }
  6571  060A  0008               	return
  6572  060B                     l3945:	
  6573                           
  6574                           ;max31856.c: 219: else
  6575                           ;max31856.c: 220: {
  6576                           ;max31856.c: 221: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  6577  060B  3044               	movlw	(low (_uch_reg| 0))& (0+255)
  6578  060C  00D8               	movwf	??_one_temperature_trans
  6579  060D  0858               	movf	??_one_temperature_trans,w
  6580  060E  00D3               	movwf	maxim_31856_read_nregisters@uch_buff
  6581  060F  3006               	movlw	6
  6582  0610  00D9               	movwf	??_one_temperature_trans+1
  6583  0611  0859               	movf	??_one_temperature_trans+1,w
  6584  0612  00D4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  6585  0613  300A               	movlw	10
  6586  0614  318E  26B8         	fcall	_maxim_31856_read_nregisters
  6587                           
  6588                           ;max31856.c: 222: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  6589  0616  0020               	movlb	0	; select bank0
  6590  0617  0844               	movf	_uch_reg,w
  6591  0618  00D8               	movwf	??_one_temperature_trans
  6592  0619  0858               	movf	??_one_temperature_trans,w
  6593  061A  00BD               	movwf	_uch_cjth
  6594  061B  0845               	movf	_uch_reg+1,w
  6595  061C  00D8               	movwf	??_one_temperature_trans
  6596  061D  0858               	movf	??_one_temperature_trans,w
  6597  061E  00BE               	movwf	_uch_cjtl
  6598                           
  6599                           ;max31856.c: 223: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  6600  061F  0846               	movf	_uch_reg+2,w
  6601  0620  00D8               	movwf	??_one_temperature_trans
  6602  0621  0858               	movf	??_one_temperature_trans,w
  6603  0622  00FA               	movwf	_uch_ltcbh
  6604  0623  0847               	movf	_uch_reg+3,w
  6605  0624  00D8               	movwf	??_one_temperature_trans
  6606  0625  0858               	movf	??_one_temperature_trans,w
  6607  0626  00C1               	movwf	_uch_ltcbm
  6608  0627  0848               	movf	_uch_reg+4,w
  6609  0628  00D8               	movwf	??_one_temperature_trans
  6610  0629  0858               	movf	??_one_temperature_trans,w
  6611  062A  00C0               	movwf	_uch_ltcbl
  6612                           
  6613                           ;max31856.c: 224: uch_sr=uch_reg[5];
  6614  062B  0849               	movf	_uch_reg+5,w
  6615  062C  00D8               	movwf	??_one_temperature_trans
  6616  062D  0858               	movf	??_one_temperature_trans,w
  6617  062E  00C3               	movwf	_uch_sr
  6618  062F  0008               	return
  6619  0630                     __end_of_one_temperature_trans:	
  6620                           
  6621                           	psect	text31
  6622  0F4E                     __ptext31:	
  6623 ;; *************** function _maxim_start_conversion *****************
  6624 ;; Defined at:
  6625 ;;		line 114 in file "mcc_generated_files/max31856.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  uch_conversi    1    wreg     unsigned char 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, pclath, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:        2 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    5
  6646 ;; This function calls:
  6647 ;;		_maxim_31856_read_register
  6648 ;;		_maxim_31856_write_register
  6649 ;; This function is called by:
  6650 ;;		_one_temperature_trans
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _maxim_start_conversion
  6656  0F4E                     _maxim_start_conversion:	
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  6660                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  6661  0F4E  0020               	movlb	0	; select bank0
  6662  0F4F  00D0               	movwf	maxim_start_conversion@uch_conversion_mode
  6663                           
  6664                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  6665  0F50  3000               	movlw	0
  6666  0F51  318E  2641  318F   	fcall	_maxim_31856_read_register
  6667  0F54  00F7               	movwf	??_maxim_start_conversion
  6668  0F55  0877               	movf	??_maxim_start_conversion,w
  6669  0F56  00F9               	movwf	_uch_cr0
  6670                           
  6671                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  6672  0F57  303F               	movlw	63
  6673  0F58  00F7               	movwf	??_maxim_start_conversion
  6674  0F59  0877               	movf	??_maxim_start_conversion,w
  6675  0F5A  05F9               	andwf	_uch_cr0,f
  6676                           
  6677                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  6678  0F5B  0020               	movlb	0	; select bank0
  6679  0F5C  0850               	movf	maxim_start_conversion@uch_conversion_mode,w
  6680  0F5D  00F7               	movwf	??_maxim_start_conversion
  6681  0F5E  0877               	movf	??_maxim_start_conversion,w
  6682  0F5F  04F9               	iorwf	_uch_cr0,f
  6683                           
  6684                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  6685  0F60  0879               	movf	_uch_cr0,w
  6686  0F61  00F7               	movwf	??_maxim_start_conversion
  6687  0F62  0877               	movf	??_maxim_start_conversion,w
  6688  0F63  00F4               	movwf	maxim_31856_write_register@uch_register_value
  6689  0F64  3080               	movlw	128
  6690  0F65  318E  2615         	fcall	_maxim_31856_write_register
  6691  0F67  0008               	return
  6692  0F68                     __end_of_maxim_start_conversion:	
  6693                           
  6694                           	psect	text32
  6695  0E15                     __ptext32:	
  6696 ;; *************** function _maxim_31856_write_register *****************
  6697 ;; Defined at:
  6698 ;;		line 19 in file "mcc_generated_files/max31856.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  uch_register    1    wreg     unsigned char 
  6701 ;;  uch_register    1    4[COMMON] unsigned char 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  uch_register    1    5[COMMON] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, pclath, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;Total ram usage:        2 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    4
  6720 ;; This function calls:
  6721 ;;		_SPI_Exchange8bit
  6722 ;; This function is called by:
  6723 ;;		_maxim_31856_init
  6724 ;;		_maxim_start_conversion
  6725 ;;		_maxim_clear_fault_status
  6726 ;;		_temperature_display
  6727 ;;		_maxim_stop_conversion
  6728 ;;		_maxim_disable_oc_fault_detection
  6729 ;;		_maxim_set_oc_fault_detection
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _maxim_31856_write_register
  6735  0E15                     _maxim_31856_write_register:	
  6736                           
  6737                           ;incstack = 0
  6738                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  6739                           ;maxim_31856_write_register@uch_register_address stored from wreg
  6740  0E15  00F5               	movwf	maxim_31856_write_register@uch_register_address
  6741                           
  6742                           ;max31856.c: 21: do { LATA5 = 0; } while(0);
  6743  0E16  0022               	movlb	2	; select bank2
  6744  0E17  128C               	bcf	12,5	;volatile
  6745                           
  6746                           ;max31856.c: 22: SPI_Exchange8bit(uch_register_address);
  6747  0E18  0875               	movf	maxim_31856_write_register@uch_register_address,w
  6748  0E19  3187  27F7  318E   	fcall	_SPI_Exchange8bit
  6749                           
  6750                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_value);
  6751  0E1C  0874               	movf	maxim_31856_write_register@uch_register_value,w
  6752  0E1D  3187  27F7         	fcall	_SPI_Exchange8bit
  6753                           
  6754                           ;max31856.c: 24: do { LATA5 = 1; } while(0);
  6755  0E1F  0022               	movlb	2	; select bank2
  6756  0E20  168C               	bsf	12,5	;volatile
  6757  0E21  0008               	return
  6758  0E22                     __end_of_maxim_31856_write_register:	
  6759                           
  6760                           	psect	text33
  6761  0E41                     __ptext33:	
  6762 ;; *************** function _maxim_31856_read_register *****************
  6763 ;; Defined at:
  6764 ;;		line 33 in file "mcc_generated_files/max31856.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  uch_register    1    wreg     unsigned char 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  uch_register    1    5[COMMON] unsigned char 
  6769 ;;  uch_register    1    6[COMMON] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      unsigned char 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0, pclath, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;Total ram usage:        3 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    4
  6786 ;; This function calls:
  6787 ;;		_SPI_Exchange8bit
  6788 ;; This function is called by:
  6789 ;;		_maxim_start_conversion
  6790 ;;		_maxim_clear_fault_status
  6791 ;;		_maxim_stop_conversion
  6792 ;;		_maxim_disable_oc_fault_detection
  6793 ;;		_maxim_set_oc_fault_detection
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _maxim_31856_read_register
  6799  0E41                     _maxim_31856_read_register:	
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  6803                           ;maxim_31856_read_register@uch_register_address stored from wreg
  6804  0E41  00F5               	movwf	maxim_31856_read_register@uch_register_address
  6805                           
  6806                           ;max31856.c: 35: uint8_t uch_register_data;
  6807                           ;max31856.c: 36: do { LATA5 = 0; } while(0);
  6808  0E42  0022               	movlb	2	; select bank2
  6809  0E43  128C               	bcf	12,5	;volatile
  6810                           
  6811                           ;max31856.c: 37: SPI_Exchange8bit(uch_register_address);
  6812  0E44  0875               	movf	maxim_31856_read_register@uch_register_address,w
  6813  0E45  3187  27F7  318E   	fcall	_SPI_Exchange8bit
  6814                           
  6815                           ;max31856.c: 38: uch_register_data=SPI_Exchange8bit(0xff);
  6816  0E48  30FF               	movlw	255
  6817  0E49  3187  27F7         	fcall	_SPI_Exchange8bit
  6818  0E4B  00F4               	movwf	??_maxim_31856_read_register
  6819  0E4C  0874               	movf	??_maxim_31856_read_register,w
  6820  0E4D  00F6               	movwf	maxim_31856_read_register@uch_register_data
  6821                           
  6822                           ;max31856.c: 39: do { LATA5 = 1; } while(0);
  6823  0E4E  0022               	movlb	2	; select bank2
  6824  0E4F  168C               	bsf	12,5	;volatile
  6825                           
  6826                           ;max31856.c: 40: return (uch_register_data);
  6827  0E50  0876               	movf	maxim_31856_read_register@uch_register_data,w
  6828  0E51  0008               	return
  6829  0E52                     __end_of_maxim_31856_read_register:	
  6830                           
  6831                           	psect	text34
  6832  0EB8                     __ptext34:	
  6833 ;; *************** function _maxim_31856_read_nregisters *****************
  6834 ;; Defined at:
  6835 ;;		line 49 in file "mcc_generated_files/max31856.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  uch_register    1    wreg     unsigned char 
  6838 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  6839 ;;		 -> uch_reg(8), 
  6840 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  uch_register    1    7[BANK0 ] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;Total ram usage:        5 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    5
  6859 ;; This function calls:
  6860 ;;		_SPI_Exchange8bit
  6861 ;;		_SPI_Exchange8bitBuffer
  6862 ;; This function is called by:
  6863 ;;		_one_temperature_trans
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _maxim_31856_read_nregisters
  6869  0EB8                     _maxim_31856_read_nregisters:	
  6870                           
  6871                           ;incstack = 0
  6872                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6873                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  6874  0EB8  0020               	movlb	0	; select bank0
  6875  0EB9  00D7               	movwf	maxim_31856_read_nregisters@uch_register_address
  6876                           
  6877                           ;max31856.c: 51: do { LATA5 = 0; } while(0);
  6878  0EBA  0022               	movlb	2	; select bank2
  6879  0EBB  128C               	bcf	12,5	;volatile
  6880                           
  6881                           ;max31856.c: 52: SPI_Exchange8bit(uch_register_address);
  6882  0EBC  0020               	movlb	0	; select bank0
  6883  0EBD  0857               	movf	maxim_31856_read_nregisters@uch_register_address,w
  6884  0EBE  3187  27F7  318E   	fcall	_SPI_Exchange8bit
  6885                           
  6886                           ;max31856.c: 53: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  6887  0EC1  0020               	movlb	0	; select bank0
  6888  0EC2  0854               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  6889  0EC3  00D5               	movwf	??_maxim_31856_read_nregisters
  6890  0EC4  0855               	movf	??_maxim_31856_read_nregisters,w
  6891  0EC5  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  6892  0EC6  0853               	movf	maxim_31856_read_nregisters@uch_buff,w
  6893  0EC7  00D6               	movwf	??_maxim_31856_read_nregisters+1
  6894  0EC8  0856               	movf	??_maxim_31856_read_nregisters+1,w
  6895  0EC9  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  6896  0ECA  3000               	movlw	0
  6897  0ECB  3184  248C         	fcall	_SPI_Exchange8bitBuffer
  6898                           
  6899                           ;max31856.c: 54: do { LATA5 = 1; } while(0);
  6900  0ECD  0022               	movlb	2	; select bank2
  6901  0ECE  168C               	bsf	12,5	;volatile
  6902  0ECF  0008               	return
  6903  0ED0                     __end_of_maxim_31856_read_nregisters:	
  6904                           
  6905                           	psect	text35
  6906  048C                     __ptext35:	
  6907 ;; *************** function _SPI_Exchange8bitBuffer *****************
  6908 ;; Defined at:
  6909 ;;		line 89 in file "mcc_generated_files/spi.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  dataIn          1    wreg     PTR unsigned char 
  6912 ;;		 -> NULL(0), 
  6913 ;;  bufLen          1    4[COMMON] unsigned char 
  6914 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  6915 ;;		 -> uch_reg(8), 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  6918 ;;		 -> NULL(0), 
  6919 ;;  bytesWritten    1    7[COMMON] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      unsigned char 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;Total ram usage:        7 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    4
  6936 ;; This function calls:
  6937 ;;		_SPI_Exchange8bit
  6938 ;; This function is called by:
  6939 ;;		_maxim_31856_read_nregisters
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function _SPI_Exchange8bitBuffer
  6945  048C                     _SPI_Exchange8bitBuffer:	
  6946                           
  6947                           ;incstack = 0
  6948                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6949                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  6950  048C  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  6951                           
  6952                           ;spi.c: 90: uint8_t bytesWritten = 0;
  6953  048D  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  6954                           
  6955                           ;spi.c: 92: if (bufLen != 0) {
  6956  048E  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6957  048F  1903               	btfsc	3,2
  6958  0490  0008               	return
  6959                           
  6960                           ;spi.c: 93: if (dataIn != (0)) {
  6961  0491  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  6962  0492  1D03               	btfss	3,2
  6963  0493  2CBE               	goto	l3599
  6964  0494  2CC3               	goto	l3601
  6965  0495                     l3591:	
  6966                           ;spi.c: 94: while (bytesWritten < bufLen) {
  6967                           
  6968                           
  6969                           ;spi.c: 95: if (dataOut == (0)) {
  6970  0495  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  6971  0496  1D03               	btfss	3,2
  6972  0497  2CA4               	goto	l3595
  6973                           
  6974                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  6975  0498  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6976  0499  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6977  049A  0020               	movlb	0	; select bank0
  6978  049B  00D0               	movwf	??_SPI_Exchange8bitBuffer
  6979  049C  0850               	movf	??_SPI_Exchange8bitBuffer,w
  6980  049D  0086               	movwf	6
  6981  049E  0187               	clrf	7
  6982  049F  0801               	movf	1,w
  6983  04A0  3187  27F7  3184   	fcall	_SPI_Exchange8bit
  6984                           
  6985                           ;spi.c: 97: } else {
  6986  04A3  2CB9               	goto	l3597
  6987  04A4                     l3595:	
  6988                           
  6989                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  6990  04A4  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6991  04A5  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6992  04A6  0020               	movlb	0	; select bank0
  6993  04A7  00D0               	movwf	??_SPI_Exchange8bitBuffer
  6994  04A8  0850               	movf	??_SPI_Exchange8bitBuffer,w
  6995  04A9  0086               	movwf	6
  6996  04AA  0187               	clrf	7
  6997  04AB  0801               	movf	1,w
  6998  04AC  3187  27F7  3184   	fcall	_SPI_Exchange8bit
  6999  04AF  0020               	movlb	0	; select bank0
  7000  04B0  00D1               	movwf	??_SPI_Exchange8bitBuffer+1
  7001  04B1  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7002  04B2  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  7003  04B3  00D2               	movwf	??_SPI_Exchange8bitBuffer+2
  7004  04B4  0852               	movf	??_SPI_Exchange8bitBuffer+2,w
  7005  04B5  0086               	movwf	6
  7006  04B6  0187               	clrf	7
  7007  04B7  0851               	movf	??_SPI_Exchange8bitBuffer+1,w
  7008  04B8  0081               	movwf	1
  7009  04B9                     l3597:	
  7010                           
  7011                           ;spi.c: 99: }
  7012                           ;spi.c: 101: bytesWritten++;
  7013  04B9  3001               	movlw	1
  7014  04BA  0020               	movlb	0	; select bank0
  7015  04BB  00D0               	movwf	??_SPI_Exchange8bitBuffer
  7016  04BC  0850               	movf	??_SPI_Exchange8bitBuffer,w
  7017  04BD  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  7018  04BE                     l3599:	
  7019  04BE  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  7020  04BF  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  7021  04C0  1803               	btfsc	3,0
  7022  04C1  0008               	return
  7023  04C2  2C95               	goto	l3591
  7024  04C3                     l3601:	
  7025                           ;spi.c: 102: }
  7026                           ;spi.c: 103: } else {
  7027                           
  7028                           
  7029                           ;spi.c: 104: if (dataOut != (0)) {
  7030  04C3  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  7031  04C4  1903               	btfsc	3,2
  7032  04C5  0008               	return
  7033  04C6                     l3609:	
  7034  04C6  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  7035  04C7  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  7036  04C8  1803               	btfsc	3,0
  7037  04C9  0008               	return
  7038                           
  7039                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  7040                           
  7041                           ;spi.c: 105: while (bytesWritten < bufLen) {
  7042  04CA  3000               	movlw	0
  7043  04CB  3187  27F7  3184   	fcall	_SPI_Exchange8bit
  7044  04CE  0020               	movlb	0	; select bank0
  7045  04CF  00D0               	movwf	??_SPI_Exchange8bitBuffer
  7046  04D0  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  7047  04D1  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  7048  04D2  00D1               	movwf	??_SPI_Exchange8bitBuffer+1
  7049  04D3  0851               	movf	??_SPI_Exchange8bitBuffer+1,w
  7050  04D4  0086               	movwf	6
  7051  04D5  0187               	clrf	7
  7052  04D6  0850               	movf	??_SPI_Exchange8bitBuffer,w
  7053  04D7  0081               	movwf	1
  7054                           
  7055                           ;spi.c: 108: bytesWritten++;
  7056  04D8  3001               	movlw	1
  7057  04D9  00D0               	movwf	??_SPI_Exchange8bitBuffer
  7058  04DA  0850               	movf	??_SPI_Exchange8bitBuffer,w
  7059  04DB  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  7060  04DC  2CC6               	goto	l3609
  7061  04DD                     __end_of_SPI_Exchange8bitBuffer:	
  7062                           ;spi.c: 109: }
  7063                           ;spi.c: 110: }
  7064                           ;spi.c: 111: }
  7065                           ;spi.c: 112: }
  7066                           ;spi.c: 114: return bytesWritten;
  7067                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  7068                           
  7069                           
  7070                           	psect	text36
  7071  07F7                     __ptext36:	
  7072 ;; *************** function _SPI_Exchange8bit *****************
  7073 ;; Defined at:
  7074 ;;		line 77 in file "mcc_generated_files/spi.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  data            1    wreg     unsigned char 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  data            1    3[COMMON] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:        1 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    3
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_SPI_Exchange8bitBuffer
  7099 ;;		_maxim_31856_write_register
  7100 ;;		_maxim_31856_read_register
  7101 ;;		_maxim_31856_read_nregisters
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           
  7106                           ;psect for function _SPI_Exchange8bit
  7107  07F7                     _SPI_Exchange8bit:	
  7108                           
  7109                           ;incstack = 0
  7110                           ; Regs used in _SPI_Exchange8bit: [wreg]
  7111                           ;SPI_Exchange8bit@data stored from wreg
  7112  07F7  00F3               	movwf	SPI_Exchange8bit@data
  7113                           
  7114                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  7115  07F8  0024               	movlb	4	; select bank4
  7116  07F9  1395               	bcf	21,7	;volatile
  7117                           
  7118                           ;spi.c: 81: SSPBUF = data;
  7119  07FA  0873               	movf	SPI_Exchange8bit@data,w
  7120  07FB  0091               	movwf	17	;volatile
  7121  07FC                     l71:	
  7122                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  7123                           
  7124  07FC  1C14               	btfss	20,0	;volatile
  7125  07FD  2FFC               	goto	l71
  7126                           
  7127                           ;spi.c: 84: }
  7128                           ;spi.c: 86: return (SSPBUF);
  7129  07FE  0811               	movf	17,w	;volatile
  7130  07FF  0008               	return
  7131  0800                     __end_of_SPI_Exchange8bit:	
  7132                           
  7133                           	psect	text37
  7134  07AB                     __ptext37:	
  7135 ;; *************** function _Two_Display *****************
  7136 ;; Defined at:
  7137 ;;		line 137 in file "mcc_generated_files/ht1621.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  number          1    wreg     unsigned char 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  number          1   11[BANK0 ] unsigned char 
  7142 ;;  num             4    7[BANK0 ] unsigned char [4]
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;Total ram usage:        6 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    5
  7159 ;; This function calls:
  7160 ;;		_WriteAll_1621
  7161 ;; This function is called by:
  7162 ;;		_temperature_process
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           
  7167                           ;psect for function _Two_Display
  7168  07AB                     _Two_Display:	
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7172                           ;Two_Display@number stored from wreg
  7173  07AB  0020               	movlb	0	; select bank0
  7174  07AC  00DB               	movwf	Two_Display@number
  7175                           
  7176                           ;ht1621.c: 139: unsigned char num[4]={0};
  7177  07AD  0823               	movf	Two_Display@F2120+3,w
  7178  07AE  00DA               	movwf	Two_Display@num+3
  7179  07AF  0822               	movf	Two_Display@F2120+2,w
  7180  07B0  00D9               	movwf	Two_Display@num+2
  7181  07B1  0821               	movf	Two_Display@F2120+1,w
  7182  07B2  00D8               	movwf	Two_Display@num+1
  7183  07B3  0820               	movf	Two_Display@F2120,w
  7184  07B4  00D7               	movwf	Two_Display@num
  7185                           
  7186                           ;ht1621.c: 140: num[1] = Dis_TAB[0];
  7187  07B5  3000               	movlw	low (_Dis_TAB| (0+32768))
  7188  07B6  0084               	movwf	4
  7189  07B7  3090               	movlw	high (_Dis_TAB| (0+32768))
  7190  07B8  0085               	movwf	5
  7191  07B9  0800               	movf	0,w	;code access
  7192  07BA  00D6               	movwf	??_Two_Display
  7193  07BB  0856               	movf	??_Two_Display,w
  7194  07BC  00D8               	movwf	Two_Display@num+1
  7195                           
  7196                           ;ht1621.c: 141: num[2] = Dis_TAB[number];
  7197  07BD  085B               	movf	Two_Display@number,w
  7198  07BE  3E00               	addlw	low (_Dis_TAB| (0+32768))
  7199  07BF  0084               	movwf	4
  7200  07C0  3090               	movlw	high (_Dis_TAB| (0+32768))
  7201  07C1  1803               	skipnc
  7202  07C2  3E01               	addlw	1
  7203  07C3  0085               	movwf	5
  7204  07C4  0800               	movf	0,w	;code access
  7205  07C5  00D6               	movwf	??_Two_Display
  7206  07C6  0856               	movf	??_Two_Display,w
  7207  07C7  00D9               	movwf	Two_Display@num+2
  7208                           
  7209                           ;ht1621.c: 142: WriteAll_1621(0, num, 4);
  7210  07C8  3057               	movlw	low Two_Display@num
  7211  07C9  00D0               	movwf	WriteAll_1621@p
  7212  07CA  3000               	movlw	high Two_Display@num
  7213  07CB  00D1               	movwf	WriteAll_1621@p+1
  7214  07CC  3004               	movlw	4
  7215  07CD  00D6               	movwf	??_Two_Display
  7216  07CE  0856               	movf	??_Two_Display,w
  7217  07CF  00D2               	movwf	WriteAll_1621@cnt
  7218  07D0  3000               	movlw	0
  7219  07D1  3186  2665         	fcall	_WriteAll_1621
  7220  07D3  0008               	return
  7221  07D4                     __end_of_Two_Display:	
  7222                           
  7223                           	psect	text38
  7224  0665                     __ptext38:	
  7225 ;; *************** function _WriteAll_1621 *****************
  7226 ;; Defined at:
  7227 ;;		line 90 in file "mcc_generated_files/ht1621.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  addr            1    wreg     unsigned char 
  7230 ;;  p               2    0[BANK0 ] PTR unsigned char 
  7231 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  7232 ;;		 -> Dis_TAB(21), 
  7233 ;;  cnt             1    2[BANK0 ] unsigned char 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  addr            1    4[BANK0 ] unsigned char 
  7236 ;;  i               1    5[BANK0 ] unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7246 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;Total ram usage:        6 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    4
  7253 ;; This function calls:
  7254 ;;		_SendBit_1621
  7255 ;;		_SendDataBit_1621
  7256 ;; This function is called by:
  7257 ;;		_main
  7258 ;;		_Tc_Display
  7259 ;;		_Two_Display
  7260 ;;		_err_Display
  7261 ;;		_time_Display
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           
  7266                           ;psect for function _WriteAll_1621
  7267  0665                     _WriteAll_1621:	
  7268                           
  7269                           ;incstack = 0
  7270                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7271                           ;WriteAll_1621@addr stored from wreg
  7272  0665  0020               	movlb	0	; select bank0
  7273  0666  00D4               	movwf	WriteAll_1621@addr
  7274                           
  7275                           ;ht1621.c: 92: unsigned char i;
  7276                           ;ht1621.c: 93: do { LATC0 = 0; } while(0);
  7277  0667  0022               	movlb	2	; select bank2
  7278  0668  100E               	bcf	14,0	;volatile
  7279                           
  7280                           ;ht1621.c: 94: SendBit_1621(0xa0,3);
  7281  0669  3003               	movlw	3
  7282  066A  0020               	movlb	0	; select bank0
  7283  066B  00D3               	movwf	??_WriteAll_1621
  7284  066C  0853               	movf	??_WriteAll_1621,w
  7285  066D  00F3               	movwf	SendBit_1621@cnt
  7286  066E  30A0               	movlw	160
  7287  066F  318F  279E  3186   	fcall	_SendBit_1621
  7288                           
  7289                           ;ht1621.c: 95: SendBit_1621(addr,6);
  7290  0672  3006               	movlw	6
  7291  0673  0020               	movlb	0	; select bank0
  7292  0674  00D3               	movwf	??_WriteAll_1621
  7293  0675  0853               	movf	??_WriteAll_1621,w
  7294  0676  00F3               	movwf	SendBit_1621@cnt
  7295  0677  0854               	movf	WriteAll_1621@addr,w
  7296  0678  318F  279E  3186   	fcall	_SendBit_1621
  7297                           
  7298                           ;ht1621.c: 96: for(i =0; i <cnt; i ++,p++)
  7299  067B  0020               	movlb	0	; select bank0
  7300  067C  01D5               	clrf	WriteAll_1621@i
  7301  067D                     l3621:	
  7302  067D  0852               	movf	WriteAll_1621@cnt,w
  7303  067E  0255               	subwf	WriteAll_1621@i,w
  7304  067F  1803               	btfsc	3,0
  7305  0680  2E97               	goto	l627
  7306                           
  7307                           ;ht1621.c: 97: {
  7308                           ;ht1621.c: 98: SendDataBit_1621(*p,8);
  7309  0681  3008               	movlw	8
  7310  0682  00D3               	movwf	??_WriteAll_1621
  7311  0683  0853               	movf	??_WriteAll_1621,w
  7312  0684  00F3               	movwf	SendDataBit_1621@cnt
  7313  0685  0850               	movf	WriteAll_1621@p,w
  7314  0686  0084               	movwf	4
  7315  0687  0851               	movf	WriteAll_1621@p+1,w
  7316  0688  0085               	movwf	5
  7317  0689  0800               	movf	0,w	;code access
  7318  068A  318F  27BE  3186   	fcall	_SendDataBit_1621
  7319  068D  3001               	movlw	1
  7320  068E  0020               	movlb	0	; select bank0
  7321  068F  00D3               	movwf	??_WriteAll_1621
  7322  0690  0853               	movf	??_WriteAll_1621,w
  7323  0691  07D5               	addwf	WriteAll_1621@i,f
  7324  0692  3001               	movlw	1
  7325  0693  07D0               	addwf	WriteAll_1621@p,f
  7326  0694  3000               	movlw	0
  7327  0695  3DD1               	addwfc	WriteAll_1621@p+1,f
  7328  0696  2E7D               	goto	l3621
  7329  0697                     l627:	
  7330                           ;ht1621.c: 99: }
  7331                           ;ht1621.c: 100: do { LATC0 = 1; } while(0);
  7332                           
  7333  0697  0022               	movlb	2	; select bank2
  7334  0698  140E               	bsf	14,0	;volatile
  7335  0699  0008               	return
  7336  069A                     __end_of_WriteAll_1621:	
  7337                           
  7338                           	psect	text39
  7339  0FBE                     __ptext39:	
  7340 ;; *************** function _SendDataBit_1621 *****************
  7341 ;; Defined at:
  7342 ;;		line 41 in file "mcc_generated_files/ht1621.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  data            1    wreg     unsigned char 
  7345 ;;  cnt             1    3[COMMON] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  data            1    6[COMMON] unsigned char 
  7348 ;;  i               1    7[COMMON] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        5 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    3
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_WriteAll_1621
  7369 ;;		_Write_1621
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _SendDataBit_1621
  7375  0FBE                     _SendDataBit_1621:	
  7376                           
  7377                           ;incstack = 0
  7378                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  7379                           ;SendDataBit_1621@data stored from wreg
  7380  0FBE  00F6               	movwf	SendDataBit_1621@data
  7381                           
  7382                           ;ht1621.c: 43: unsigned char i;
  7383                           ;ht1621.c: 44: for(i =0; i <cnt; i ++)
  7384  0FBF  01F7               	clrf	SendDataBit_1621@i
  7385  0FC0                     l3491:	
  7386  0FC0  0873               	movf	SendDataBit_1621@cnt,w
  7387  0FC1  0277               	subwf	SendDataBit_1621@i,w
  7388  0FC2  1803               	btfsc	3,0
  7389  0FC3  0008               	return
  7390                           
  7391                           ;ht1621.c: 45: {
  7392                           ;ht1621.c: 46: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  7393  0FC4  1876               	btfsc	SendDataBit_1621@data,0
  7394  0FC5  2FC9               	goto	l598
  7395  0FC6  0022               	movlb	2	; select bank2
  7396  0FC7  110E               	bcf	14,2	;volatile
  7397  0FC8  2FCB               	goto	l600
  7398  0FC9                     l598:	
  7399                           ;ht1621.c: 47: else do { LATC2 = 1; } while(0);
  7400                           
  7401  0FC9  0022               	movlb	2	; select bank2
  7402  0FCA  150E               	bsf	14,2	;volatile
  7403  0FCB                     l600:	
  7404                           ;ht1621.c: 48: do { LATC1 = 0; } while(0);
  7405                           
  7406  0FCB  108E               	bcf	14,1	;volatile
  7407                           
  7408                           ;ht1621.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
  7409  0FCC  3006               	movlw	6
  7410  0FCD  00F5               	movwf	??_SendDataBit_1621+1
  7411  0FCE  3030               	movlw	48
  7412  0FCF  00F4               	movwf	??_SendDataBit_1621
  7413  0FD0                     u3817:	
  7414  0FD0  0BF4               	decfsz	??_SendDataBit_1621,f
  7415  0FD1  2FD0               	goto	u3817
  7416  0FD2  0BF5               	decfsz	??_SendDataBit_1621+1,f
  7417  0FD3  2FD0               	goto	u3817
  7418  0FD4  0000               	nop
  7419                           
  7420                           ;ht1621.c: 50: do { LATC1 = 1; } while(0);
  7421  0FD5  0022               	movlb	2	; select bank2
  7422  0FD6  148E               	bsf	14,1	;volatile
  7423                           
  7424                           ;ht1621.c: 51: data>>=1;
  7425  0FD7  1003               	clrc
  7426  0FD8  0CF6               	rrf	SendDataBit_1621@data,f
  7427  0FD9  3001               	movlw	1
  7428  0FDA  00F4               	movwf	??_SendDataBit_1621
  7429  0FDB  0874               	movf	??_SendDataBit_1621,w
  7430  0FDC  07F7               	addwf	SendDataBit_1621@i,f
  7431  0FDD  2FC0               	goto	l3491
  7432  0FDE                     __end_of_SendDataBit_1621:	
  7433                           
  7434                           	psect	text40
  7435  0DD7                     __ptext40:	
  7436 ;; *************** function _Set_start_flag *****************
  7437 ;; Defined at:
  7438 ;;		line 16 in file "mcc_generated_files/save.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;		None
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      void 
  7445 ;; Registers used:
  7446 ;;		None
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;Total ram usage:        0 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:    3
  7459 ;; This function calls:
  7460 ;;		Nothing
  7461 ;; This function is called by:
  7462 ;;		_Key_Process
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _Set_start_flag
  7468  0DD7                     _Set_start_flag:	
  7469                           
  7470                           ;save.c: 18: Record_flag = 1;
  7471                           
  7472                           ;incstack = 0
  7473                           ; Regs used in _Set_start_flag: []
  7474  0DD7  0020               	movlb	0	; select bank0
  7475  0DD8  01B9               	clrf	_Record_flag
  7476  0DD9  0AB9               	incf	_Record_flag,f
  7477                           
  7478                           ;save.c: 19: do { LATA4 = 0; } while(0);
  7479  0DDA  0022               	movlb	2	; select bank2
  7480  0DDB  120C               	bcf	12,4	;volatile
  7481  0DDC  0008               	return
  7482  0DDD                     __end_of_Set_start_flag:	
  7483                           
  7484                           	psect	text41
  7485  0DCD                     __ptext41:	
  7486 ;; *************** function _Set_finish_flag *****************
  7487 ;; Defined at:
  7488 ;;		line 28 in file "mcc_generated_files/save.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		status,2
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    3
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_Key_Process
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           
  7517                           ;psect for function _Set_finish_flag
  7518  0DCD                     _Set_finish_flag:	
  7519                           
  7520                           ;save.c: 30: Record_flag = 0;
  7521                           
  7522                           ;incstack = 0
  7523                           ; Regs used in _Set_finish_flag: [status,2]
  7524  0DCD  0020               	movlb	0	; select bank0
  7525  0DCE  01B9               	clrf	_Record_flag
  7526                           
  7527                           ;save.c: 31: do { LATA4 = 1; } while(0);
  7528  0DCF  0022               	movlb	2	; select bank2
  7529  0DD0  160C               	bsf	12,4	;volatile
  7530  0DD1  0008               	return
  7531  0DD2                     __end_of_Set_finish_flag:	
  7532                           
  7533                           	psect	text42
  7534  0EA0                     __ptext42:	
  7535 ;; *************** function _SendCmd_1621 *****************
  7536 ;; Defined at:
  7537 ;;		line 61 in file "mcc_generated_files/ht1621.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  command         1    wreg     unsigned char 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  command         1    1[BANK0 ] unsigned char 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0, pclath, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;Total ram usage:        2 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    4
  7558 ;; This function calls:
  7559 ;;		_SendBit_1621
  7560 ;; This function is called by:
  7561 ;;		_main
  7562 ;;		_Key_Process
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function _SendCmd_1621
  7568  0EA0                     _SendCmd_1621:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  7572                           ;SendCmd_1621@command stored from wreg
  7573  0EA0  0020               	movlb	0	; select bank0
  7574  0EA1  00D1               	movwf	SendCmd_1621@command
  7575                           
  7576                           ;ht1621.c: 63: do { LATC0 = 0; } while(0);
  7577  0EA2  0022               	movlb	2	; select bank2
  7578  0EA3  100E               	bcf	14,0	;volatile
  7579                           
  7580                           ;ht1621.c: 64: SendBit_1621(0x80,4);
  7581  0EA4  3004               	movlw	4
  7582  0EA5  0020               	movlb	0	; select bank0
  7583  0EA6  00D0               	movwf	??_SendCmd_1621
  7584  0EA7  0850               	movf	??_SendCmd_1621,w
  7585  0EA8  00F3               	movwf	SendBit_1621@cnt
  7586  0EA9  3080               	movlw	128
  7587  0EAA  318F  279E  318E   	fcall	_SendBit_1621
  7588                           
  7589                           ;ht1621.c: 65: SendBit_1621(command,8);
  7590  0EAD  3008               	movlw	8
  7591  0EAE  0020               	movlb	0	; select bank0
  7592  0EAF  00D0               	movwf	??_SendCmd_1621
  7593  0EB0  0850               	movf	??_SendCmd_1621,w
  7594  0EB1  00F3               	movwf	SendBit_1621@cnt
  7595  0EB2  0851               	movf	SendCmd_1621@command,w
  7596  0EB3  318F  279E         	fcall	_SendBit_1621
  7597                           
  7598                           ;ht1621.c: 66: do { LATC0 = 1; } while(0);
  7599  0EB5  0022               	movlb	2	; select bank2
  7600  0EB6  140E               	bsf	14,0	;volatile
  7601  0EB7  0008               	return
  7602  0EB8                     __end_of_SendCmd_1621:	
  7603                           
  7604                           	psect	text43
  7605  0F9E                     __ptext43:	
  7606 ;; *************** function _SendBit_1621 *****************
  7607 ;; Defined at:
  7608 ;;		line 21 in file "mcc_generated_files/ht1621.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  data            1    wreg     unsigned char 
  7611 ;;  cnt             1    3[COMMON] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  data            1    6[COMMON] unsigned char 
  7614 ;;  i               1    7[COMMON] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;Total ram usage:        5 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    3
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_SendCmd_1621
  7635 ;;		_WriteAll_1621
  7636 ;;		_Write_1621
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           
  7641                           ;psect for function _SendBit_1621
  7642  0F9E                     _SendBit_1621:	
  7643                           
  7644                           ;incstack = 0
  7645                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
  7646                           ;SendBit_1621@data stored from wreg
  7647  0F9E  00F6               	movwf	SendBit_1621@data
  7648                           
  7649                           ;ht1621.c: 23: unsigned char i;
  7650                           ;ht1621.c: 24: for(i =0; i <cnt; i ++)
  7651  0F9F  01F7               	clrf	SendBit_1621@i
  7652  0FA0                     l3479:	
  7653  0FA0  0873               	movf	SendBit_1621@cnt,w
  7654  0FA1  0277               	subwf	SendBit_1621@i,w
  7655  0FA2  1803               	btfsc	3,0
  7656  0FA3  0008               	return
  7657                           
  7658                           ;ht1621.c: 25: {
  7659                           ;ht1621.c: 26: if((data&0x80)==0) do { LATC2 = 0; } while(0);
  7660  0FA4  1BF6               	btfsc	SendBit_1621@data,7
  7661  0FA5  2FA9               	goto	l582
  7662  0FA6  0022               	movlb	2	; select bank2
  7663  0FA7  110E               	bcf	14,2	;volatile
  7664  0FA8  2FAB               	goto	l584
  7665  0FA9                     l582:	
  7666                           ;ht1621.c: 27: else do { LATC2 = 1; } while(0);
  7667                           
  7668  0FA9  0022               	movlb	2	; select bank2
  7669  0FAA  150E               	bsf	14,2	;volatile
  7670  0FAB                     l584:	
  7671                           ;ht1621.c: 28: do { LATC1 = 0; } while(0);
  7672                           
  7673  0FAB  108E               	bcf	14,1	;volatile
  7674                           
  7675                           ;ht1621.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  7676  0FAC  3006               	movlw	6
  7677  0FAD  00F5               	movwf	??_SendBit_1621+1
  7678  0FAE  3030               	movlw	48
  7679  0FAF  00F4               	movwf	??_SendBit_1621
  7680  0FB0                     u3827:	
  7681  0FB0  0BF4               	decfsz	??_SendBit_1621,f
  7682  0FB1  2FB0               	goto	u3827
  7683  0FB2  0BF5               	decfsz	??_SendBit_1621+1,f
  7684  0FB3  2FB0               	goto	u3827
  7685  0FB4  0000               	nop
  7686                           
  7687                           ;ht1621.c: 30: do { LATC1 = 1; } while(0);
  7688  0FB5  0022               	movlb	2	; select bank2
  7689  0FB6  148E               	bsf	14,1	;volatile
  7690                           
  7691                           ;ht1621.c: 31: data<<=1;
  7692  0FB7  1003               	clrc
  7693  0FB8  0DF6               	rlf	SendBit_1621@data,f
  7694  0FB9  3001               	movlw	1
  7695  0FBA  00F4               	movwf	??_SendBit_1621
  7696  0FBB  0874               	movf	??_SendBit_1621,w
  7697  0FBC  07F7               	addwf	SendBit_1621@i,f
  7698  0FBD  2FA0               	goto	l3479
  7699  0FBE                     __end_of_SendBit_1621:	
  7700                           
  7701                           	psect	text44
  7702  07D4                     __ptext44:	
  7703 ;; *************** function _Key_Scan *****************
  7704 ;; Defined at:
  7705 ;;		line 18 in file "mcc_generated_files/key.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  Key_val         1    5[COMMON] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  1    wreg      unsigned char 
  7712 ;; Registers used:
  7713 ;;		wreg
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        3 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    3
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_Key_Process
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _Key_Scan
  7735  07D4                     _Key_Scan:	
  7736                           
  7737                           ;key.c: 20: unsigned char Key_val=0xff;
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _Key_Scan: [wreg]
  7741  07D4  30FF               	movlw	255
  7742  07D5  00F3               	movwf	??_Key_Scan
  7743  07D6  0873               	movf	??_Key_Scan,w
  7744  07D7  00F5               	movwf	Key_Scan@Key_val
  7745                           
  7746                           ;key.c: 21: if( RA7 == 0 || RB5 == 0 )
  7747  07D8  0020               	movlb	0	; select bank0
  7748  07D9  1F8C               	btfss	12,7	;volatile
  7749  07DA  2FDD               	goto	l4143
  7750  07DB  1A8D               	btfsc	13,5	;volatile
  7751  07DC  2FF5               	goto	l794
  7752  07DD                     l4143:	
  7753                           
  7754                           ;key.c: 22: {
  7755                           ;key.c: 23: _delay((unsigned long)((10)*(16000000/4000.0)));
  7756  07DD  3034               	movlw	52
  7757  07DE  00F4               	movwf	??_Key_Scan+1
  7758  07DF  30F1               	movlw	241
  7759  07E0  00F3               	movwf	??_Key_Scan
  7760  07E1                     u3837:	
  7761  07E1  0BF3               	decfsz	??_Key_Scan,f
  7762  07E2  2FE1               	goto	u3837
  7763  07E3  0BF4               	decfsz	??_Key_Scan+1,f
  7764  07E4  2FE1               	goto	u3837
  7765  07E5  3200               	nop2
  7766                           
  7767                           ;key.c: 24: if( RA7 == 0 || RB5 == 0)
  7768  07E6  0020               	movlb	0	; select bank0
  7769  07E7  1F8C               	btfss	12,7	;volatile
  7770  07E8  2FEB               	goto	l799
  7771  07E9  1A8D               	btfsc	13,5	;volatile
  7772  07EA  2FF5               	goto	l794
  7773  07EB                     l799:	
  7774                           
  7775                           ;key.c: 25: {
  7776                           ;key.c: 26: if(RB5 == 0 ) Key_val = 0x01;
  7777  07EB  1A8D               	btfsc	13,5	;volatile
  7778  07EC  2FEF               	goto	l800
  7779  07ED  01F5               	clrf	Key_Scan@Key_val
  7780  07EE  0AF5               	incf	Key_Scan@Key_val,f
  7781  07EF                     l800:	
  7782                           
  7783                           ;key.c: 27: if(RA7 == 0 ) Key_val = 0x02;
  7784  07EF  1B8C               	btfsc	12,7	;volatile
  7785  07F0  2FF5               	goto	l794
  7786  07F1  3002               	movlw	2
  7787  07F2  00F3               	movwf	??_Key_Scan
  7788  07F3  0873               	movf	??_Key_Scan,w
  7789  07F4  00F5               	movwf	Key_Scan@Key_val
  7790  07F5                     l794:	
  7791                           
  7792                           ;key.c: 28: }
  7793                           ;key.c: 29: }
  7794                           ;key.c: 30: return Key_val;
  7795  07F5  0875               	movf	Key_Scan@Key_val,w
  7796  07F6  0008               	return
  7797  07F7                     __end_of_Key_Scan:	
  7798                           
  7799                           	psect	text45
  7800  0DEF                     __ptext45:	
  7801 ;; *************** function _EUSART_Write *****************
  7802 ;; Defined at:
  7803 ;;		line 91 in file "mcc_generated_files/eusart.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  txData          1    wreg     unsigned char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  txData          1    3[COMMON] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;Total ram usage:        1 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    3
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_main
  7828 ;;		_EUSART_SendString
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function _EUSART_Write
  7834  0DEF                     _EUSART_Write:	
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in _EUSART_Write: [wreg]
  7838                           ;EUSART_Write@txData stored from wreg
  7839  0DEF  00F3               	movwf	EUSART_Write@txData
  7840  0DF0                     l129:	
  7841                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  7842                           
  7843  0DF0  0020               	movlb	0	; select bank0
  7844  0DF1  1E11               	btfss	17,4	;volatile
  7845  0DF2  2DF0               	goto	l129
  7846                           
  7847                           ;eusart.c: 93: }
  7848                           ;eusart.c: 95: TXREG = txData;
  7849  0DF3  0873               	movf	EUSART_Write@txData,w
  7850  0DF4  0023               	movlb	3	; select bank3
  7851  0DF5  009A               	movwf	26	;volatile
  7852  0DF6  0008               	return
  7853  0DF7                     __end_of_EUSART_Write:	
  7854                           
  7855                           	psect	text46
  7856  0F68                     __ptext46:	
  7857 ;; *************** function _Bq32k_Time_Init *****************
  7858 ;; Defined at:
  7859 ;;		line 17 in file "mcc_generated_files/bq32k.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  temp           10    7[BANK0 ] unsigned char [10]
  7864 ;;  time            7    0        struct bq32k_regs
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:       12 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    5
  7881 ;; This function calls:
  7882 ;;		_I2C_Send_Buffer
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function _Bq32k_Time_Init
  7890  0F68                     _Bq32k_Time_Init:	
  7891                           
  7892                           ;bq32k.c: 19: bq32k_t time;
  7893                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x40,0x14,0x02,0x04,0x07,0x16 };
  7894                           
  7895                           ;incstack = 0
  7896                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7897  0F68  30AF               	movlw	low Bq32k_Time_Init@F2015
  7898  0F69  0086               	movwf	6
  7899  0F6A  3000               	movlw	high Bq32k_Time_Init@F2015
  7900  0F6B  0087               	movwf	7
  7901  0F6C  3057               	movlw	low Bq32k_Time_Init@temp
  7902  0F6D  0084               	movwf	4
  7903  0F6E  3000               	movlw	high Bq32k_Time_Init@temp
  7904  0F6F  0085               	movwf	5
  7905  0F70  300A               	movlw	10
  7906  0F71  0020               	movlb	0	; select bank0
  7907  0F72  00D5               	movwf	??_Bq32k_Time_Init
  7908  0F73                     u3500:	
  7909  0F73  0016               	moviw fsr1++
  7910  0F74  001A               	movwi fsr0++
  7911  0F75  0BD5               	decfsz	??_Bq32k_Time_Init,f
  7912  0F76  2F73               	goto	u3500
  7913                           
  7914                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
  7915  0F77  3057               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
  7916  0F78  00D5               	movwf	??_Bq32k_Time_Init
  7917  0F79  0855               	movf	??_Bq32k_Time_Init,w
  7918  0F7A  00F6               	movwf	I2C_Send_Buffer@buff
  7919  0F7B  3007               	movlw	7
  7920  0F7C  00D6               	movwf	??_Bq32k_Time_Init+1
  7921  0F7D  0856               	movf	??_Bq32k_Time_Init+1,w
  7922  0F7E  00F7               	movwf	I2C_Send_Buffer@Length
  7923  0F7F  3000               	movlw	0
  7924  0F80  3185  25BD         	fcall	_I2C_Send_Buffer
  7925  0F82  0008               	return
  7926  0F83                     __end_of_Bq32k_Time_Init:	
  7927                           
  7928                           	psect	text47
  7929  05BD                     __ptext47:	
  7930 ;; *************** function _I2C_Send_Buffer *****************
  7931 ;; Defined at:
  7932 ;;		line 173 in file "mcc_generated_files/i2c.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  ADD             1    wreg     unsigned char 
  7935 ;;  buff            1    6[COMMON] PTR unsigned char 
  7936 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
  7937 ;;  Length          1    7[COMMON] unsigned char 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  ADD             1    2[BANK0 ] unsigned char 
  7940 ;;  Flag            1    4[BANK0 ] unsigned char 
  7941 ;;  i               1    3[BANK0 ] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      unsigned char 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;Total ram usage:        7 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    4
  7958 ;; This function calls:
  7959 ;;		_I2C_Send_Byte
  7960 ;;		_I2C_Start
  7961 ;;		_I2C_Stop
  7962 ;; This function is called by:
  7963 ;;		_Bq32k_Time_Init
  7964 ;;		_Bq32k_Rtc_Write_Time
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function _I2C_Send_Buffer
  7970  05BD                     _I2C_Send_Buffer:	
  7971                           
  7972                           ;incstack = 0
  7973                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7974                           ;I2C_Send_Buffer@ADD stored from wreg
  7975  05BD  0020               	movlb	0	; select bank0
  7976  05BE  00D2               	movwf	I2C_Send_Buffer@ADD
  7977                           
  7978                           ;i2c.c: 175: unsigned char Flag=1;
  7979  05BF  01D4               	clrf	I2C_Send_Buffer@Flag
  7980  05C0  0AD4               	incf	I2C_Send_Buffer@Flag,f
  7981                           
  7982                           ;i2c.c: 176: unsigned char i;
  7983                           ;i2c.c: 178: I2C_Start();
  7984  05C1  318E  26E9  3185   	fcall	_I2C_Start
  7985                           
  7986                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
  7987  05C4  30D0               	movlw	208
  7988  05C5  3185  252B  3185   	fcall	_I2C_Send_Byte
  7989  05C8  0020               	movlb	0	; select bank0
  7990  05C9  00D0               	movwf	??_I2C_Send_Buffer
  7991  05CA  0850               	movf	??_I2C_Send_Buffer,w
  7992  05CB  00D4               	movwf	I2C_Send_Buffer@Flag
  7993                           
  7994                           ;i2c.c: 181: if(Flag)
  7995  05CC  0854               	movf	I2C_Send_Buffer@Flag,w
  7996  05CD  1D03               	btfss	3,2
  7997  05CE  0008               	return
  7998                           
  7999                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
  8000                           
  8001                           ;i2c.c: 182: return 0x01;
  8002                           ;	Return value of _I2C_Send_Buffer is never used
  8003  05CF  0852               	movf	I2C_Send_Buffer@ADD,w
  8004  05D0  3185  252B  3185   	fcall	_I2C_Send_Byte
  8005  05D3  0020               	movlb	0	; select bank0
  8006  05D4  00D0               	movwf	??_I2C_Send_Buffer
  8007  05D5  0850               	movf	??_I2C_Send_Buffer,w
  8008  05D6  00D4               	movwf	I2C_Send_Buffer@Flag
  8009                           
  8010                           ;i2c.c: 185: if(Flag)
  8011  05D7  0854               	movf	I2C_Send_Buffer@Flag,w
  8012  05D8  1D03               	btfss	3,2
  8013  05D9  0008               	return
  8014                           
  8015                           ;i2c.c: 188: for (i = 0; i<Length; i++)
  8016                           
  8017                           ;i2c.c: 186: return 0x01;
  8018                           ;	Return value of _I2C_Send_Buffer is never used
  8019  05DA  01D3               	clrf	I2C_Send_Buffer@i
  8020  05DB                     l4131:	
  8021  05DB  0877               	movf	I2C_Send_Buffer@Length,w
  8022  05DC  0253               	subwf	I2C_Send_Buffer@i,w
  8023  05DD  1803               	btfsc	3,0
  8024  05DE  2DF5               	goto	l4133
  8025                           
  8026                           ;i2c.c: 189: {
  8027                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
  8028  05DF  0853               	movf	I2C_Send_Buffer@i,w
  8029  05E0  0776               	addwf	I2C_Send_Buffer@buff,w
  8030  05E1  00D0               	movwf	??_I2C_Send_Buffer
  8031  05E2  0850               	movf	??_I2C_Send_Buffer,w
  8032  05E3  0086               	movwf	6
  8033  05E4  0187               	clrf	7
  8034  05E5  0801               	movf	1,w
  8035  05E6  3185  252B  3185   	fcall	_I2C_Send_Byte
  8036  05E9  0020               	movlb	0	; select bank0
  8037  05EA  00D1               	movwf	??_I2C_Send_Buffer+1
  8038  05EB  0851               	movf	??_I2C_Send_Buffer+1,w
  8039  05EC  00D4               	movwf	I2C_Send_Buffer@Flag
  8040                           
  8041                           ;i2c.c: 191: if(Flag)
  8042  05ED  0854               	movf	I2C_Send_Buffer@Flag,w
  8043  05EE  1D03               	btfss	3,2
  8044  05EF  0008               	return
  8045                           
  8046                           ;i2c.c: 192: return 0x01;
  8047                           ;	Return value of _I2C_Send_Buffer is never used
  8048  05F0  3001               	movlw	1
  8049  05F1  00D0               	movwf	??_I2C_Send_Buffer
  8050  05F2  0850               	movf	??_I2C_Send_Buffer,w
  8051  05F3  07D3               	addwf	I2C_Send_Buffer@i,f
  8052  05F4  2DDB               	goto	l4131
  8053  05F5                     l4133:	
  8054                           
  8055                           ;i2c.c: 193: }
  8056                           ;i2c.c: 194: I2C_Stop();
  8057  05F5  318F  2702         	fcall	_I2C_Stop
  8058  05F7  0008               	return
  8059  05F8                     __end_of_I2C_Send_Buffer:	
  8060                           ;i2c.c: 195: return 0x00;
  8061                           ;	Return value of _I2C_Send_Buffer is never used
  8062                           
  8063                           
  8064                           	psect	text48
  8065  0F02                     __ptext48:	
  8066 ;; *************** function _I2C_Stop *****************
  8067 ;; Defined at:
  8068 ;;		line 102 in file "mcc_generated_files/i2c.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;Total ram usage:        1 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    3
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_I2C_Read_Buffer
  8093 ;;		_I2C_Send_Buffer
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _I2C_Stop
  8099  0F02                     _I2C_Stop:	
  8100                           
  8101                           ;incstack = 0
  8102                           ; Regs used in _I2C_Stop: [wreg]
  8103                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
  8104  0F02  0022               	movlb	2	; select bank2
  8105  0F03  100D               	bcf	13,0	;volatile
  8106                           
  8107                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8108  0F04  300D               	movlw	13
  8109  0F05  00F3               	movwf	??_I2C_Stop
  8110  0F06                     u3847:	
  8111  0F06  0BF3               	decfsz	??_I2C_Stop,f
  8112  0F07  2F06               	goto	u3847
  8113                           
  8114                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
  8115  0F08  0022               	movlb	2	; select bank2
  8116  0F09  108D               	bcf	13,1	;volatile
  8117                           
  8118                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8119  0F0A  300D               	movlw	13
  8120  0F0B  00F3               	movwf	??_I2C_Stop
  8121  0F0C                     u3857:	
  8122  0F0C  0BF3               	decfsz	??_I2C_Stop,f
  8123  0F0D  2F0C               	goto	u3857
  8124                           
  8125                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
  8126  0F0E  0022               	movlb	2	; select bank2
  8127  0F0F  140D               	bsf	13,0	;volatile
  8128                           
  8129                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8130  0F10  300D               	movlw	13
  8131  0F11  00F3               	movwf	??_I2C_Stop
  8132  0F12                     u3867:	
  8133  0F12  0BF3               	decfsz	??_I2C_Stop,f
  8134  0F13  2F12               	goto	u3867
  8135                           
  8136                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
  8137  0F14  0022               	movlb	2	; select bank2
  8138  0F15  148D               	bsf	13,1	;volatile
  8139                           
  8140                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8141  0F16  300D               	movlw	13
  8142  0F17  00F3               	movwf	??_I2C_Stop
  8143  0F18                     u3877:	
  8144  0F18  0BF3               	decfsz	??_I2C_Stop,f
  8145  0F19  2F18               	goto	u3877
  8146  0F1A  0008               	return
  8147  0F1B                     __end_of_I2C_Stop:	
  8148                           
  8149                           	psect	text49
  8150  0EE9                     __ptext49:	
  8151 ;; *************** function _I2C_Start *****************
  8152 ;; Defined at:
  8153 ;;		line 16 in file "mcc_generated_files/i2c.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;		None
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;		None
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		wreg
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;Total ram usage:        1 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    3
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_I2C_Read_Buffer
  8178 ;;		_I2C_Send_Buffer
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _I2C_Start
  8184  0EE9                     _I2C_Start:	
  8185                           
  8186                           ;incstack = 0
  8187                           ; Regs used in _I2C_Start: [wreg]
  8188                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
  8189  0EE9  0022               	movlb	2	; select bank2
  8190  0EEA  148D               	bsf	13,1	;volatile
  8191                           
  8192                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8193  0EEB  300D               	movlw	13
  8194  0EEC  00F3               	movwf	??_I2C_Start
  8195  0EED                     u3887:	
  8196  0EED  0BF3               	decfsz	??_I2C_Start,f
  8197  0EEE  2EED               	goto	u3887
  8198                           
  8199                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
  8200  0EEF  0022               	movlb	2	; select bank2
  8201  0EF0  140D               	bsf	13,0	;volatile
  8202                           
  8203                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8204  0EF1  300D               	movlw	13
  8205  0EF2  00F3               	movwf	??_I2C_Start
  8206  0EF3                     u3897:	
  8207  0EF3  0BF3               	decfsz	??_I2C_Start,f
  8208  0EF4  2EF3               	goto	u3897
  8209                           
  8210                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
  8211  0EF5  0022               	movlb	2	; select bank2
  8212  0EF6  108D               	bcf	13,1	;volatile
  8213                           
  8214                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8215  0EF7  300D               	movlw	13
  8216  0EF8  00F3               	movwf	??_I2C_Start
  8217  0EF9                     u3907:	
  8218  0EF9  0BF3               	decfsz	??_I2C_Start,f
  8219  0EFA  2EF9               	goto	u3907
  8220                           
  8221                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
  8222  0EFB  0022               	movlb	2	; select bank2
  8223  0EFC  100D               	bcf	13,0	;volatile
  8224                           
  8225                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8226  0EFD  300D               	movlw	13
  8227  0EFE  00F3               	movwf	??_I2C_Start
  8228  0EFF                     u3917:	
  8229  0EFF  0BF3               	decfsz	??_I2C_Start,f
  8230  0F00  2EFF               	goto	u3917
  8231  0F01  0008               	return
  8232  0F02                     __end_of_I2C_Start:	
  8233                           
  8234                           	psect	text50
  8235  052B                     __ptext50:	
  8236 ;; *************** function _I2C_Send_Byte *****************
  8237 ;; Defined at:
  8238 ;;		line 34 in file "mcc_generated_files/i2c.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  Data            1    wreg     unsigned char 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  Data            1    4[COMMON] unsigned char 
  8243 ;;  i               1    5[COMMON] unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      unsigned char 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        3 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    3
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_I2C_Read_Buffer
  8264 ;;		_I2C_Send_Buffer
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _I2C_Send_Byte
  8270  052B                     _I2C_Send_Byte:	
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
  8274                           ;I2C_Send_Byte@Data stored from wreg
  8275  052B  00F4               	movwf	I2C_Send_Byte@Data
  8276                           
  8277                           ;i2c.c: 36: unsigned char i;
  8278                           ;i2c.c: 37: for(i=0;i<8;i++)
  8279  052C  01F5               	clrf	I2C_Send_Byte@i
  8280  052D  3008               	movlw	8
  8281  052E  0275               	subwf	I2C_Send_Byte@i,w
  8282  052F  1803               	btfsc	3,0
  8283  0530  2D52               	goto	l693
  8284  0531                     l681:	
  8285                           
  8286                           ;i2c.c: 38: {
  8287                           ;i2c.c: 39: if(Data&0x80)
  8288  0531  1FF4               	btfss	I2C_Send_Byte@Data,7
  8289  0532  2D36               	goto	l687
  8290                           
  8291                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
  8292  0533  0022               	movlb	2	; select bank2
  8293  0534  148D               	bsf	13,1	;volatile
  8294  0535  2D38               	goto	l3507
  8295  0536                     l687:	
  8296                           ;i2c.c: 41: else
  8297                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
  8298                           
  8299  0536  0022               	movlb	2	; select bank2
  8300  0537  108D               	bcf	13,1	;volatile
  8301  0538                     l3507:	
  8302                           
  8303                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8304  0538  300D               	movlw	13
  8305  0539  00F3               	movwf	??_I2C_Send_Byte
  8306  053A                     u3927:	
  8307  053A  0BF3               	decfsz	??_I2C_Send_Byte,f
  8308  053B  2D3A               	goto	u3927
  8309                           
  8310                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
  8311  053C  0022               	movlb	2	; select bank2
  8312  053D  140D               	bsf	13,0	;volatile
  8313                           
  8314                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8315  053E  300D               	movlw	13
  8316  053F  00F3               	movwf	??_I2C_Send_Byte
  8317  0540                     u3937:	
  8318  0540  0BF3               	decfsz	??_I2C_Send_Byte,f
  8319  0541  2D40               	goto	u3937
  8320                           
  8321                           ;i2c.c: 46: Data<<=1;
  8322  0542  1003               	clrc
  8323  0543  0DF4               	rlf	I2C_Send_Byte@Data,f
  8324                           
  8325                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
  8326  0544  0022               	movlb	2	; select bank2
  8327  0545  100D               	bcf	13,0	;volatile
  8328                           
  8329                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8330  0546  300D               	movlw	13
  8331  0547  00F3               	movwf	??_I2C_Send_Byte
  8332  0548                     u3947:	
  8333  0548  0BF3               	decfsz	??_I2C_Send_Byte,f
  8334  0549  2D48               	goto	u3947
  8335  054A  3001               	movlw	1
  8336  054B  00F3               	movwf	??_I2C_Send_Byte
  8337  054C  0873               	movf	??_I2C_Send_Byte,w
  8338  054D  07F5               	addwf	I2C_Send_Byte@i,f
  8339  054E  3008               	movlw	8
  8340  054F  0275               	subwf	I2C_Send_Byte@i,w
  8341  0550  1C03               	skipc
  8342  0551  2D31               	goto	l681
  8343  0552                     l693:	
  8344                           ;i2c.c: 49: }
  8345                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
  8346                           
  8347  0552  0022               	movlb	2	; select bank2
  8348  0553  148D               	bsf	13,1	;volatile
  8349                           
  8350                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8351  0554  300D               	movlw	13
  8352  0555  00F3               	movwf	??_I2C_Send_Byte
  8353  0556                     u3957:	
  8354  0556  0BF3               	decfsz	??_I2C_Send_Byte,f
  8355  0557  2D56               	goto	u3957
  8356                           
  8357                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
  8358  0558  0022               	movlb	2	; select bank2
  8359  0559  140D               	bsf	13,0	;volatile
  8360                           
  8361                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8362  055A  300D               	movlw	13
  8363  055B  00F3               	movwf	??_I2C_Send_Byte
  8364  055C                     u3967:	
  8365  055C  0BF3               	decfsz	??_I2C_Send_Byte,f
  8366  055D  2D5C               	goto	u3967
  8367                           
  8368                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
  8369  055E  0021               	movlb	1	; select bank1
  8370  055F  148D               	bsf	13,1	;volatile
  8371                           
  8372                           ;i2c.c: 55: if(RB1)
  8373  0560  0020               	movlb	0	; select bank0
  8374  0561  1C8D               	btfss	13,1	;volatile
  8375  0562  2D67               	goto	l703
  8376                           
  8377                           ;i2c.c: 56: {
  8378                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
  8379  0563  0021               	movlb	1	; select bank1
  8380  0564  108D               	bcf	13,1	;volatile
  8381                           
  8382                           ;i2c.c: 58: return 0x01;
  8383  0565  3001               	movlw	1
  8384  0566  0008               	return
  8385  0567                     l703:	
  8386                           ;i2c.c: 59: }
  8387                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
  8388                           
  8389  0567  0021               	movlb	1	; select bank1
  8390  0568  108D               	bcf	13,1	;volatile
  8391                           
  8392                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
  8393  0569  0022               	movlb	2	; select bank2
  8394  056A  100D               	bcf	13,0	;volatile
  8395                           
  8396                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8397  056B  300D               	movlw	13
  8398  056C  00F3               	movwf	??_I2C_Send_Byte
  8399  056D                     u3977:	
  8400  056D  0BF3               	decfsz	??_I2C_Send_Byte,f
  8401  056E  2D6D               	goto	u3977
  8402                           
  8403                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
  8404  056F  0022               	movlb	2	; select bank2
  8405  0570  108D               	bcf	13,1	;volatile
  8406                           
  8407                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8408  0571  300D               	movlw	13
  8409  0572  00F3               	movwf	??_I2C_Send_Byte
  8410  0573                     u3987:	
  8411  0573  0BF3               	decfsz	??_I2C_Send_Byte,f
  8412  0574  2D73               	goto	u3987
  8413                           
  8414                           ;i2c.c: 65: return 0x00;
  8415  0575  3000               	movlw	0
  8416  0576  0008               	return
  8417  0577                     __end_of_I2C_Send_Byte:	
  8418                           
  8419                           	psect	text51
  8420  0F34                     __ptext51:	
  8421 ;; *************** function _ADC_GetConversion *****************
  8422 ;; Defined at:
  8423 ;;		line 106 in file "mcc_generated_files/adc.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  channel         1    wreg     enum E1850
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;  channel         1    6[COMMON] enum E1850
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  2    3[COMMON] unsigned int 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;Total ram usage:        4 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    3
  8444 ;; This function calls:
  8445 ;;		Nothing
  8446 ;; This function is called by:
  8447 ;;		_main
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           
  8452                           ;psect for function _ADC_GetConversion
  8453  0F34                     _ADC_GetConversion:	
  8454                           
  8455                           ;incstack = 0
  8456                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8457                           ;ADC_GetConversion@channel stored from wreg
  8458  0F34  00F6               	movwf	ADC_GetConversion@channel
  8459                           
  8460                           ;adc.c: 108: ADCON0bits.CHS = channel;
  8461  0F35  0876               	movf	ADC_GetConversion@channel,w
  8462  0F36  00F5               	movwf	??_ADC_GetConversion
  8463  0F37  0DF5               	rlf	??_ADC_GetConversion,f
  8464  0F38  0DF5               	rlf	??_ADC_GetConversion,f
  8465  0F39  0021               	movlb	1	; select bank1
  8466  0F3A  081D               	movf	29,w	;volatile
  8467  0F3B  0675               	xorwf	??_ADC_GetConversion,w
  8468  0F3C  3983               	andlw	-125
  8469  0F3D  0675               	xorwf	??_ADC_GetConversion,w
  8470  0F3E  009D               	movwf	29	;volatile
  8471                           
  8472                           ;adc.c: 111: ADCON0bits.ADON = 1;
  8473  0F3F  141D               	bsf	29,0	;volatile
  8474                           
  8475                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
  8476  0F40  3006               	movlw	6
  8477  0F41  00F5               	movwf	??_ADC_GetConversion
  8478  0F42                     u3997:	
  8479  0F42  0BF5               	decfsz	??_ADC_GetConversion,f
  8480  0F43  2F42               	goto	u3997
  8481  0F44  0000               	nop
  8482                           
  8483                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  8484  0F45  0021               	movlb	1	; select bank1
  8485  0F46  149D               	bsf	29,1	;volatile
  8486  0F47                     l197:	
  8487                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
  8488                           
  8489  0F47  189D               	btfsc	29,1	;volatile
  8490  0F48  2F47               	goto	l197
  8491                           
  8492                           ;adc.c: 121: }
  8493                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  8494  0F49  081C               	movf	28,w	;volatile
  8495  0F4A  00F4               	movwf	?_ADC_GetConversion+1
  8496  0F4B  081B               	movf	27,w	;volatile
  8497  0F4C  00F3               	movwf	?_ADC_GetConversion
  8498  0F4D  0008               	return
  8499  0F4E                     __end_of_ADC_GetConversion:	
  8500                           
  8501                           	psect	intentry
  8502  0004                     __pintentry:	
  8503 ;; *************** function _INTERRUPT_InterruptManager *****************
  8504 ;; Defined at:
  8505 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:        1 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    2
  8526 ;; This function calls:
  8527 ;;		_TMR0_ISR
  8528 ;; This function is called by:
  8529 ;;		Interrupt level 1
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533  0004                     _INTERRUPT_InterruptManager:	
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8537  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8538  0005  3180               	pagesel	$
  8539  0006  0020               	movlb	0	; select bank0
  8540  0007  087F               	movf	127,w
  8541  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  8542                           
  8543                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  8544  0009  1A8B               	btfsc	11,5	;volatile
  8545  000A  1D0B               	btfss	11,2	;volatile
  8546  000B  280E               	goto	i1l249
  8547                           
  8548                           ;interrupt_manager.c: 55: TMR0_ISR();
  8549  000C  318E  26D0         	fcall	_TMR0_ISR
  8550  000E                     i1l249:	
  8551                           ;interrupt_manager.c: 56: } else {
  8552                           
  8553  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
  8554  000F  0020               	movlb	0	; select bank0
  8555  0010  00FF               	movwf	127
  8556  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8557  0012  0009               	retfie
  8558  0013                     __end_of_INTERRUPT_InterruptManager:	
  8559                           
  8560                           	psect	text53
  8561  0ED0                     __ptext53:	
  8562 ;; *************** function _TMR0_ISR *****************
  8563 ;; Defined at:
  8564 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;		None
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;Total ram usage:        1 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    1
  8585 ;; This function calls:
  8586 ;;		_TMR0_CallBack
  8587 ;; This function is called by:
  8588 ;;		_INTERRUPT_InterruptManager
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function _TMR0_ISR
  8594  0ED0                     _TMR0_ISR:	
  8595                           
  8596                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
  8597                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
  8598                           
  8599                           ;incstack = 0
  8600                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8601  0ED0  110B               	bcf	11,2	;volatile
  8602                           
  8603                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
  8604  0ED1  0020               	movlb	0	; select bank0
  8605  0ED2  086C               	movf	_timer0ReloadVal,w	;volatile
  8606  0ED3  0095               	movwf	21	;volatile
  8607                           
  8608                           ;tmr0.c: 111: MAX31856Sec++;
  8609  0ED4  3001               	movlw	1
  8610  0ED5  00F1               	movwf	??_TMR0_ISR
  8611  0ED6  0871               	movf	??_TMR0_ISR,w
  8612  0ED7  07B8               	addwf	_MAX31856Sec,f
  8613                           
  8614                           ;tmr0.c: 114: if (++CountCallBack >= 100) {
  8615  0ED8  3001               	movlw	1
  8616  0ED9  07A8               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  8617  0EDA  3000               	movlw	0
  8618  0EDB  3DA9               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  8619  0EDC  3000               	movlw	0
  8620  0EDD  0229               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  8621  0EDE  3064               	movlw	100
  8622  0EDF  1903               	skipnz
  8623  0EE0  0228               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  8624  0EE1  1C03               	skipc
  8625  0EE2  0008               	return
  8626                           
  8627                           ;tmr0.c: 116: TMR0_CallBack();
  8628  0EE3  318E  2663         	fcall	_TMR0_CallBack
  8629                           
  8630                           ;tmr0.c: 119: CountCallBack = 0;
  8631  0EE5  0020               	movlb	0	; select bank0
  8632  0EE6  01A8               	clrf	TMR0_ISR@CountCallBack	;volatile
  8633  0EE7  01A9               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  8634  0EE8  0008               	return
  8635  0EE9                     __end_of_TMR0_ISR:	
  8636                           
  8637                           	psect	text54
  8638  0E63                     __ptext54:	
  8639 ;; *************** function _TMR0_CallBack *****************
  8640 ;; Defined at:
  8641 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;		None
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;Total ram usage:        1 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_TMR0_ISR
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function _TMR0_CallBack
  8670  0E63                     _TMR0_CallBack:	
  8671                           
  8672                           ;tmr0.c: 128: time_count++;
  8673                           
  8674                           ;incstack = 0
  8675                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  8676  0E63  3001               	movlw	1
  8677  0E64  00F0               	movwf	??_TMR0_CallBack
  8678  0E65  0870               	movf	??_TMR0_CallBack,w
  8679  0E66  07F8               	addwf	_time_count,f
  8680                           
  8681                           ;tmr0.c: 129: if(time_count == 4 || time_count > 8) time_count = 0;
  8682  0E67  3004               	movlw	4
  8683  0E68  0678               	xorwf	_time_count,w
  8684  0E69  1903               	btfsc	3,2
  8685  0E6A  2E6F               	goto	i1l3087
  8686  0E6B  3009               	movlw	9
  8687  0E6C  0278               	subwf	_time_count,w
  8688  0E6D  1C03               	skipc
  8689  0E6E  2E70               	goto	i1l3089
  8690  0E6F                     i1l3087:	
  8691  0E6F  01F8               	clrf	_time_count
  8692  0E70                     i1l3089:	
  8693                           
  8694                           ;tmr0.c: 130: LongPressSec++;
  8695  0E70  3001               	movlw	1
  8696  0E71  00F0               	movwf	??_TMR0_CallBack
  8697  0E72  0870               	movf	??_TMR0_CallBack,w
  8698  0E73  0020               	movlb	0	; select bank0
  8699  0E74  07B7               	addwf	_LongPressSec,f
  8700  0E75  0008               	return
  8701  0E76                     __end_of_TMR0_CallBack:	
  8702  007E                     btemp	set	126	;btemp
  8703  007E                     int$flags	set	126
  8704  007E                     wtemp	set	126
  8705  007E                     wtemp0	set	126
  8706  0080                     wtemp1	set	128
  8707  0082                     wtemp2	set	130
  8708  0084                     wtemp3	set	132
  8709  0086                     wtemp4	set	134
  8710  0088                     wtemp5	set	136
  8711  007F                     wtemp6	set	127
  8712  007E                     ttemp	set	126
  8713  007E                     ttemp0	set	126
  8714  0081                     ttemp1	set	129
  8715  0084                     ttemp2	set	132
  8716  0087                     ttemp3	set	135
  8717  007F                     ttemp4	set	127
  8718  007E                     ltemp	set	126
  8719  007E                     ltemp0	set	126
  8720  0082                     ltemp1	set	130
  8721  0086                     ltemp2	set	134
  8722  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         130
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     28      77
    BANK1            80      5      30
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK0[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_FLASH_ReadWord
    _SYSTEM_Initialize->_TMR0_Initialize
    _time_Display->___awdiv
    _time_Display->___awmod
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _temperature_display->_maxim_clear_fault_status
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _temperature_process->_time_Display
    _time_Display->_Bq32k_Rtc_Read_Time
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _temperature_display->_Tc_Display
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   42268
                                             25 BANK0      3     3      0
                                              0 BANK1      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                       _EUSART_Write
                        _Key_Process
                  _SYSTEM_Initialize
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    4     4      0     423
                                              0 BANK0      4     4      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     250
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          2     2      0   18786
                                             23 BANK0      2     2      0
                           _Key_Scan
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   18083
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5081
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1402
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0    8437
                                             13 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                 8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _EUSART_Write
   _Key_Process
     _Key_Scan
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      1E       7       37.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jul 06 10:22:59 2016

                        __end_of_I2C_Send_Buffer 05F8                                   _SPI_Initialize 0DDD  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                               l71 07FC  
                           _Cur_temperature_time 0036                                     ___awdiv@sign 0051  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 0DCD  
                                _timer0ReloadVal 006C                             Bq32k_Rtc_Read_Time@p 005F  
                                            l129 0DF0                                              l501 05FE  
                                            l600 0FCB                                              l360 005E  
                                            l197 0F47                                              l358 005C  
                                            l703 0567                                              l367 008E  
                                            l800 07EF                                              l377 00FB  
                                            l722 0799                                              l627 0697  
                                            l539 06CB                                              l492 0187  
                                            l637 0202                                              l582 0FA9  
                                            l638 0226                                              l494 01AF  
                                            l584 0FAB                                              l832 051D  
                                            l681 0531                                              l497 01B7  
                                            l489 017F                                              l818 04FC  
                                            l836 052A                                              l693 0552  
                                            l598 0FC9                                              l687 0536  
                                            l794 07F5                                              l799 07EB  
                                            _RB1 0069                                              _RB3 006B  
                       __end_of_maxim_31856_init 03D6                                              _RB5 006D  
                                            _RA7 0067                                     ?_err_Display 0070  
                                   ___awmod@sign 0051                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                         _maxim_start_conversion 0F4E                                     __CFG_LVP$OFF 0000  
                                           l4101 06B7                                             l4105 06BA  
                                           l4131 05DB                                             l4133 05F5  
                                           l4143 07DD                                             l3601 04C3  
                                           l4305 007C                                             l3507 0538  
                                           l3621 067D                                             l4077 069B  
                                           l4261 04F1                                             l4309 008F  
                                           l4087 06A6                                             l4247 06F7  
                                           l3609 04C6                                             l4089 06A9  
                                           l4265 0500                                             l4257 04EB  
                                           l4361 00FF                                             l3491 0FC0  
                                           l3643 0F89                                             l3803 018E  
                                           l3571 0E54                                             l4099 06B4  
                                           l4275 0511                                             l4283 0521  
                                           l4347 00D3                                             l3725 0657  
                                           l3717 0639                                             l3741 0703  
                                           l3557 07A9                                             l4277 0515  
                                           l4269 0506                                             l3479 0FA0  
                                           l3591 0495                                             l3719 0645  
                                           l3743 070F                                             l3751 0724  
                                           l3575 0E5A                                             l4359 00FC  
                                           l3729 0660                                             l3833 023F  
                                           l3905 0582                                             l3595 04A4  
                                           l3747 071B                                             l3835 024A  
                                           l3827 01CF                                             l3683 0325  
                                           l3931 05B8                                             l3923 05A7  
                                           l4299 0067                                             l3597 04B9  
                                           l3941 0604                                             l3829 01EA  
                                           l3685 0350                                             l3861 0445  
                                           l3917 058F                                             l3909 0589  
                                           l3599 04BE                                             l3783 012C  
                                           l3919 059B                                             l3927 05B0  
                                           l3945 060B                                             l3787 0134  
                                           l3867 0450                                             l3973 0741  
                                           l3965 0733                                             l3893 0487  
                                           l3885 0476                                             l3877 0458  
                                           l3879 0464                                             l3969 073A  
                                           l3889 047F                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u3045 0198                                             u3145 045B  
                                           u3500 0F73                                             u3165 0465  
                                           u3245 0592                                             u3175 046F  
                                           u3185 0477                                             u3265 05A1  
                                           u3275 05A8                                             u2815 0E82  
                                           u2905 0706                                             u2835 063C  
                                           u2925 0715                                             u2855 0646  
                                           u2935 071C                                             u3807 079F  
                                           u3727 004F                                             u3817 0FD0  
                                           u2865 0650                                             u3737 0338  
                                           u3907 0EF9                                             u3827 0FB0  
                                           u2875 0658                                             u3747 033F  
                                           u3917 0EFF                                             u3837 07E1  
                                           u3757 0346                                             u3927 053A  
                                           u3847 0F06                                             u3767 035F  
                                           u3937 0540                                             u3857 0F0C  
                                           u3777 0366                                             u3947 0548  
                                           u3867 0F12                                             u2995 0168  
                                           u3787 036D                                             u3957 0556  
                                           u3877 0F18                                             u3797 078F  
                                           u3967 055C                                             u3887 0EED  
                                           u3977 056D                                             u3897 0EF3  
                                           u3987 0573                                             u3997 0F42  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                          __size_of_Set_start_flag 0006  
                         __size_of_WriteAll_1621 0035                                    ??_Key_Process 0067  
                                           _main 003F                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 0F1B                                    __CFG_BOREN$ON 0000  
                                           ltemp 007E                              SendCmd_1621@command 0051  
                                           start 0013                                             ttemp 007E  
                                           wtemp 007E                                  __end_of_Dis_TAB 1015  
                         __end_of_SPI_Initialize 0DE3                                 ?_I2C_Read_Buffer 0076  
                              ___bmul@multiplier 0076                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 00BC                   __end_of_SPI_Exchange8bitBuffer 04DD  
                                time_Display@num 0063                          __end_of_TMR0_Initialize 0E31  
                                ?_FVR_Initialize 0070                                    ?_EUSART_Write 0070  
                 __size_of_OSCILLATOR_Initialize 0005                    __end_of_OSCILLATOR_Initialize 0DD7  
                                __end_of_bcd2bin 0E8B                                            ?_main 0070  
                                __end_of___awdiv 048C                                    __CFG_WDTE$OFF 0000  
                                __end_of___awmod 05BD                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0665  
                                          i1l249 000E                                  __end_of___lwmod 0729  
                                ___awdiv@counter 0050                                            _RCREG 0199  
                                          _RCSTA 019D                                       _Flash_buff 0120  
                        ??_one_temperature_trans 0058                                ?_SendDataBit_1621 0073  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                                          _TXSTA 019E                                 __end_of_TMR0_ISR 0EE9  
                             ??_SendDataBit_1621 0074                     __end_of_tc_temperature_trans 01BE  
                                          main@i 00BB                                __end_of_I2C_Start 0F02  
                            _Bq32k_Rtc_Read_Time 03D6                                  Tc_Display@count 005A  
                              WriteAll_1621@addr 0054                                            ltemp0 007E  
                                          ltemp1 0082                                            ltemp2 0086  
                                          ltemp3 0080                                            ttemp0 007E  
                                          ttemp1 0081                                            ttemp2 0084  
                                          ttemp3 0087                                            ttemp4 007F  
                                          status 0003                                            wtemp0 007E  
                                          wtemp1 0080                                            wtemp2 0082  
                                          wtemp3 0084                                            wtemp4 0086  
                                          wtemp5 0088                                            wtemp6 007F  
                         __size_of_I2C_Send_Byte 004C                                  _Cur_temperature 0030  
                                     _Tc_Display 01BE                                  ?_SPI_Initialize 0070  
                    __end_of_temperature_display 0755                                  __initialization 0015  
                            __end_of_Key_Process 052B                                 ?_I2C_Send_Buffer 0076  
                                   __end_of_main 0106                                   WriteAll_1621@i 0055  
                                 WriteAll_1621@p 0050                                 __end_of_Key_Scan 07F7  
                                  main@data_temp 00B9                                   ??_EUSART_Write 0073  
                           ?_Bq32k_Rtc_Read_Time 0070                      __end_of_temperature_process 06CC  
                                 __CFG_LPBOR$OFF 0000     maxim_31856_write_register@uch_register_value 0074  
                    ?_INTERRUPT_InterruptManager 0070                                    _WriteAll_1621 0665  
                                         ??_main 0069   maxim_31856_write_register@uch_register_address 0075  
                        __size_of_FLASH_ReadWord 0019                          Bq32k_Rtc_Read_Time@temp 0055  
                              I2C_Receive_Byte@i 0075                         __end_of_SPI_Exchange8bit 0800  
                                         _ADCON0 009D                                           _ADCON1 009E  
                                         _ADRESH 009C                                           _ADRESL 009B  
                               ___awdiv@dividend 0075                                           _APFCON 011D  
                                         _ANSELA 018C                                           _ANSELB 018D  
                                         _ANSELC 018E                                           i1l3087 0E6F  
                                         i1l3089 0E70                                           _FVRCON 0117  
                                         _PMADRH 0192                                           _PMADRL 0191  
                                         _PMDATH 0194                                           _PMDATL 0193  
                              _temperature_value 0024                                           _PMCON2 0196  
                                         _OSCCON 0099                                           _SPBRGH 019C  
                                         _SPBRGL 019B                                           _TRISB1 0469  
                                         _TRISB3 046B                                           _SSPBUF 0211  
                                  ?_SendCmd_1621 0070                                    ?_SendBit_1621 0073  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 0F68  
                               SendBit_1621@data 0076                                           ___bmul 0E52  
                                      ??_bcd2bin 0050                                        ??___awdiv 0077  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0077  
                          ??_Bq32k_Rtc_Read_Time 0053                                        ??___lwdiv 0055  
                                      ??___lwmod 0077                     ?_maxim_31856_read_nregisters 0053  
                                 ?_WriteAll_1621 0050                                 ?_TMR0_Initialize 0070  
                                         _memset 0F83                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 0052                                  ___awmod@divisor 0073  
                                         _uch_sr 0043                                  ___awmod@counter 0050  
                                         _rtc_tm 00A8                                  _Set_finish_flag 0DCD  
                                  _I2C_Send_Byte 052B                               ??_I2C_Receive_Byte 0073  
                        FLASH_ReadWord@flashAddr 0073                                        ?_I2C_Stop 0070  
                   ??_maxim_31856_write_register 0075                            I2C_Read_Buffer@Length 0077  
                       ADC_GetConversion@channel 0076                             __size_of_err_Display 002C  
                          __end_of_TMR0_CallBack 0E76                                       bcd2bin@val 0077  
                     ??_maxim_clear_fault_status 0077                                   _Set_start_flag 0DD7  
                              _SYSTEM_Initialize 0E8B                                   ??_SendCmd_1621 0050  
                        __end_of__initialization 003B                                   ??_SendBit_1621 0074  
                                    _Key_Process 04DD                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                              ___bmul@multiplicand 0073  
                              time_Display@F2126 00A4                                   __pcstackCOMMON 0070  
                                   __pidataBANK1 0DFF                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 0106                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074              __size_of_maxim_31856_write_register 000D  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0055  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 0028  
                                _temperature_int 0032                                       ??_I2C_Stop 0073  
                                  ??_Two_Display 0056                               ??_maxim_31856_init 0076  
                               Two_Display@F2120 0020                             I2C_Receive_Byte@Data 0074  
                         __end_of_Set_start_flag 0DDD                              I2C_Read_Buffer@Flag 0052  
                      __end_of_SYSTEM_Initialize 0EA0                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 0F83                                       __pbssBANK0 0020  
                                     __pbssBANK1 00A0                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                             __end_of_EUSART_Write 0DF7  
                                __CFG_VCAPEN$OFF 0000                                 ??_FVR_Initialize 0073  
                                     __pmaintext 003F                                          ?___bmul 0073  
                        __end_of_Set_finish_flag 0DD2                            ?_tc_temperature_trans 0070  
                                    _Record_flag 0039                                  ??_WriteAll_1621 0053  
                                     ??_TMR0_ISR 0071                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0073  
                 __end_of_maxim_start_conversion 0F68                          __size_of_ADC_Initialize 0008  
                                 _FLASH_ReadWord 0F1B                              __size_of_Tc_Display 00A7  
                 __size_of_one_temperature_trans 0038                    __end_of_one_temperature_trans 0630  
                                        _OSCSTAT 009A                                          _SSP1ADD 0212  
                      _maxim_31856_read_register 0E41                                  ?_Set_start_flag 0070  
           __size_of_maxim_31856_read_nregisters 0018                                       ??_Key_Scan 0073  
                                        _Dis_TAB 1000                                 ??_SPI_Initialize 0073  
                            __end_of_Two_Display 07D4                        __size_of_SendDataBit_1621 0020  
                                      _I2C_Start 0EE9  maxim_31856_read_nregisters@uch_register_address 0057  
                                      _CH1_state 0034                                        _CH2_state 0035  
                                        _bcd2bin 0E76                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 043A  
                                        ___awmod 0577                                          ___lwdiv 0630  
                                        ___lwmod 06FC                                  ??_I2C_Send_Byte 0073  
                              I2C_Send_Byte@Data 0074                           __end_of_FLASH_ReadWord 0F34  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 0372                                          __ptext2 06CC  
                                        __ptext3 0F1B                                          __ptext4 0E8B  
                                        __ptext5 0E22                                          __ptext6 0DDD  
                                        __ptext7 0FDE                                          __ptext8 0DD2  
                                        __ptext9 0DC9                             __end_of_SendCmd_1621 0EB8  
                           SendDataBit_1621@data 0076                             __end_of_SendBit_1621 0FBE  
             __end_of_maxim_31856_write_register 0E22                       _maxim_31856_write_register 0E15  
                          _OSCILLATOR_Initialize 0DD2                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 0079  
                                        _uch_cr1 003F                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 0044                 __end_of_maxim_clear_fault_status 0E41  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 0DEA  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 0DE3                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0051  
                                        initloop 0DE4                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 0E09                           ??_tc_temperature_trans 0050  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0060  
                                      _RCSTAbits 019D                                 ?_Set_finish_flag 0070  
                          Serach_Flash_Head@data 0050                                     __pstringtext 1000  
                      FLASH_ReadWord@GIEBitValue 0075                                       _time_count 0078  
                                ?_FLASH_ReadWord 0073                     __size_of_temperature_display 002C  
                            ??_EUSART_Initialize 0073                                     _display_buff 004C  
                       __size_of_I2C_Send_Buffer 003B                                 __CFG_FOSC$INTOSC 0000  
                   __size_of_temperature_process 0032                            __size_of_EUSART_Write 0008  
                                    _Two_Display 07AB                                __size_of_I2C_Stop 0019  
                            Bq32k_Time_Init@temp 0057                        __size_of_I2C_Receive_Byte 002A  
                           Key_Process@gKeyValue 0068                        __end_of_EUSART_Initialize 0E15  
                                   ?_Key_Process 0070                         ??_SPI_Exchange8bitBuffer 0050  
                                   ??_Tc_Display 0059                      __end_of_Bq32k_Rtc_Read_Time 043A  
      maxim_start_conversion@uch_conversion_mode 0050                                   __end_of___bmul 0E63  
                                   _EUSART_Write 0DEF                                __size_of_TMR0_ISR 0019  
                                 _ADC_Initialize 0DF7                           ?_OSCILLATOR_Initialize 0070  
                                 __end_of_memset 0F9E                                   Tc_Display@data 005B  
                               WriteAll_1621@cnt 0052                                    ??_err_Display 0056  
                            start_initialization 0015                         __size_of_TMR0_Initialize 000F  
                             __end_of_Tc_Display 0265                  __size_of_PIN_MANAGER_Initialize 0022  
                              ??_I2C_Read_Buffer 0050                                   Two_Display@num 0057  
                      __size_of_maxim_31856_init 0064                                 _SendDataBit_1621 0FBE  
                                    ??_I2C_Start 0073                                __size_of_Key_Scan 0023  
                               _temperature_sign 003B               __size_of_maxim_31856_read_register 0011  
                                SendBit_1621@cnt 0073                                         ??___bmul 0074  
              __size_of_maxim_clear_fault_status 0010                        ?_maxim_clear_fault_status 0070  
                          __size_of_SendCmd_1621 0018                            __size_of_SendBit_1621 0020  
                            I2C_Send_Buffer@Flag 0054                           __size_of_TMR0_CallBack 0013  
                         __end_of_ADC_Initialize 0DFF                                      __pdataBANK1 00AF  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                               ??_Set_start_flag 0073                                      __pbssCOMMON 0078  
                                _CH1_temperature 002A                                        ___latbits 0003  
                                  __pcstackBANK0 0050                                    __pcstackBANK1 00B9  
                           __end_of_time_Display 02FA                    SPI_Exchange8bitBuffer@dataOut 0075  
                              ??_I2C_Send_Buffer 0050                              __end_of_err_Display 0781  
                     __size_of_EUSART_Initialize 000C                               I2C_Read_Buffer@ADD 0051  
                                   _LongPressSec 0037                                Two_Display@number 005B  
                                   _SendCmd_1621 0EA0                                     _SendBit_1621 0F9E  
                                      __pnvBANK0 006C                  __size_of_SPI_Exchange8bitBuffer 0051  
                               ___lwdiv@dividend 0053                           _PIN_MANAGER_Initialize 0FDE  
                                    _MAX31856Sec 0038                __end_of_maxim_31856_read_register 0E52  
                                       ?_bcd2bin 0070                                         ?___awdiv 0073  
                                       ?___awmod 0073              __end_of_maxim_31856_read_nregisters 0ED0  
                    _maxim_31856_read_nregisters 0EB8                                         ?___lwdiv 0051  
                                       ?___lwmod 0073                                  ?_ADC_Initialize 0070  
                              SendDataBit_1621@i 0077                            __end_of_WriteAll_1621 069A  
                   ??_INTERRUPT_InterruptManager 0072                      ?_maxim_31856_write_register 0074  
                                       _I2C_Stop 0F02                                  _CH2_temperature 002C  
                               I2C_Send_Buffer@i 0053                                 ___lwdiv@quotient 0057  
                                  _TMR0_CallBack 0E63                              _temperature_decimal 003A  
                          _one_temperature_trans 05F8                                 _I2C_Receive_Byte 0781  
                            SendDataBit_1621@cnt 0073                                   err_Display@num 0057  
          maxim_31856_read_nregisters@uch_nBytes 0054                              _temperature_display 0729  
                              ??_TMR0_Initialize 0073                                        clear_ram0 0DE9  
                                      _uch_ltcbh 007A                                        _uch_ltcbl 0040  
                                      _uch_ltcbm 0041                             __size_of_Key_Process 004E  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 069A  
                                       _PIR1bits 0011                                 ??_FLASH_ReadWord 0075  
                      __size_of_SPI_Exchange8bit 0009                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0ED0                                         _SSP1STAT 0214  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0577  
                                     _ADCON0bits 009D                          __size_of_FVR_Initialize 0004  
                         _SPI_Exchange8bitBuffer 048C                                   _Cur_Save_Index 002E  
                                    _err_Display 0755                             ?_temperature_process 0070  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                       _Key_Scan 07D4              maxim_31856_read_nregisters@uch_buff 0053  
                               _maxim_31856_init 0372                                _Serach_Flash_Head 06CC  
                       __size_of_Bq32k_Time_Init 001B                               ?_Serach_Flash_Head 0070  
                              _ADC_GetConversion 0F34                         ??_maxim_start_conversion 0077  
                             I2C_Send_Buffer@ADD 0052                    __size_of_tc_temperature_trans 00B8  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0052  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 005D                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 02FA                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0076  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2123 00A0                         __end_of_SendDataBit_1621 0FDE  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0051                                  ___lwdiv@counter 0056  
                                       __ptext10 0E09                                         __ptext11 0DF7  
                                       __ptext20 02FA                                         __ptext12 04DD  
                                       __ptext21 0781                                         __ptext13 069A  
                                       __ptext30 05F8                                         __ptext22 0729  
                                       __ptext14 0265                                         __ptext31 0F4E  
                                       __ptext23 0106                                         __ptext15 0577  
                                       __ptext40 0DD7                                         __ptext32 0E15  
                                       __ptext24 0E31                                         __ptext16 043A  
                                       __ptext41 0DCD                                         __ptext33 0E41  
                                       __ptext25 0755                                         __ptext17 03D6  
                                       __ptext50 052B                                         __ptext42 0EA0  
                                       __ptext34 0EB8                                         __ptext26 01BE  
                                       __ptext18 0E76                                         __ptext51 0F34  
                                       __ptext43 0F9E                                         __ptext35 048C  
                                       __ptext27 0F83                                         __ptext19 0E52  
                                       __ptext44 07D4                                         __ptext36 07F7  
                                       __ptext28 06FC                                         __ptext53 0ED0  
                                       __ptext45 0DEF                                         __ptext37 07AB  
                                       __ptext29 0630                                         __ptext54 0E63  
                                       __ptext46 0F68                                         __ptext38 0665  
                                       __ptext47 05BD                                         __ptext39 0FBE  
                                       __ptext48 0F02                                         __ptext49 0EE9  
                         ?_one_temperature_trans 0070                                     _SSP1CON1bits 0215  
                      __end_of_Serach_Flash_Head 06FC                                    __size_of_main 00C7  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 0F4E  
                                       _uch_cjth 003D                                         _uch_cjtl 003E  
                                       _uch_mask 0042                                         int$flags 007E  
                                   _time_Display 0265                                         _tmr_flag 003C  
             __end_of_INTERRUPT_InterruptManager 0013                       _INTERRUPT_InterruptManager 0004  
                   __size_of_Bq32k_Rtc_Read_Time 0064                                     _SSP1STATbits 0214  
                                _I2C_Send_Buffer 05BD                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0050                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 0372                                 _SPI_Exchange8bit 07F7  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 07AB  
                              ??_Bq32k_Time_Init 0055                                   _FVR_Initialize 0DC9  
                                     _OPTION_REG 0095                                  ___lwmod@divisor 0073  
                                _TMR0_Initialize 0E22                                  ___lwmod@counter 0050  
                              ??_Set_finish_flag 0073                               EUSART_Write@txData 0073  
                           __size_of_Two_Display 0029                   __end_of_PIN_MANAGER_Initialize 1000  
                     __size_of_Serach_Flash_Head 0030                             Bq32k_Time_Init@F2015 00AF  
                     __size_of_ADC_GetConversion 001A                         _maxim_clear_fault_status 0E31  
