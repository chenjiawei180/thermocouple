

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jul 12 14:57:06 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020D                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0FE4                     	;# 
   185  0FE5                     	;# 
   186  0FE6                     	;# 
   187  0FE7                     	;# 
   188  0FE8                     	;# 
   189  0FE9                     	;# 
   190  0FEA                     	;# 
   191  0FEB                     	;# 
   192  0FED                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020D                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020D                     	;# 
   379  0210                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0095                     	;# 
   673  0096                     	;# 
   674  0097                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0291                     	;# 
   729  0291                     	;# 
   730  0292                     	;# 
   731  0293                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  008C                     	;# 
   778  008D                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020D                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0298                     	;# 
   844  0298                     	;# 
   845  0299                     	;# 
   846  029A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  008E                     	;# 
   891  0090                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009B                     	;# 
   901  009C                     	;# 
   902  009D                     	;# 
   903  009E                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0194                     	;# 
   919  0195                     	;# 
   920  0196                     	;# 
   921  0197                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0090                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018E                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0197                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  0394                     	;# 
  1070  0395                     	;# 
  1071  0396                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0090                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019C                     	;# 
  1151  019C                     	;# 
  1152  019D                     	;# 
  1153  019E                     	;# 
  1154  019F                     	;# 
  1155  020D                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0298                     	;# 
  1177  0298                     	;# 
  1178  0299                     	;# 
  1179  029A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  011D                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  018E                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019C                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020D                     	;# 
  1267  0210                     	;# 
  1268  0211                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0212                     	;# 
  1272  0213                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  0394                     	;# 
  1292  0395                     	;# 
  1293  0396                     	;# 
  1294  0FE4                     	;# 
  1295  0FE5                     	;# 
  1296  0FE6                     	;# 
  1297  0FE7                     	;# 
  1298  0FE8                     	;# 
  1299  0FE9                     	;# 
  1300  0FEA                     	;# 
  1301  0FEB                     	;# 
  1302  0FED                     	;# 
  1303  0FEE                     	;# 
  1304  0FEF                     	;# 
  1305  0000                     	;# 
  1306  0001                     	;# 
  1307  0002                     	;# 
  1308  0003                     	;# 
  1309  0004                     	;# 
  1310  0005                     	;# 
  1311  0006                     	;# 
  1312  0007                     	;# 
  1313  0008                     	;# 
  1314  0009                     	;# 
  1315  000A                     	;# 
  1316  000B                     	;# 
  1317  000C                     	;# 
  1318  000D                     	;# 
  1319  000E                     	;# 
  1320  0010                     	;# 
  1321  0011                     	;# 
  1322  0012                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0016                     	;# 
  1326  0017                     	;# 
  1327  0018                     	;# 
  1328  0019                     	;# 
  1329  001A                     	;# 
  1330  001B                     	;# 
  1331  001C                     	;# 
  1332  008C                     	;# 
  1333  008D                     	;# 
  1334  008E                     	;# 
  1335  0090                     	;# 
  1336  0091                     	;# 
  1337  0092                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0099                     	;# 
  1342  009A                     	;# 
  1343  009B                     	;# 
  1344  009B                     	;# 
  1345  009C                     	;# 
  1346  009D                     	;# 
  1347  009E                     	;# 
  1348  010C                     	;# 
  1349  010D                     	;# 
  1350  010E                     	;# 
  1351  0116                     	;# 
  1352  0117                     	;# 
  1353  011D                     	;# 
  1354  018C                     	;# 
  1355  018D                     	;# 
  1356  018E                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0194                     	;# 
  1363  0195                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0214                     	;# 
  1387  0215                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0216                     	;# 
  1391  0216                     	;# 
  1392  0217                     	;# 
  1393  0217                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  0394                     	;# 
  1403  0395                     	;# 
  1404  0396                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0095                     	;# 
  1450  0096                     	;# 
  1451  0097                     	;# 
  1452  0099                     	;# 
  1453  009A                     	;# 
  1454  009B                     	;# 
  1455  009B                     	;# 
  1456  009C                     	;# 
  1457  009D                     	;# 
  1458  009E                     	;# 
  1459  010C                     	;# 
  1460  010D                     	;# 
  1461  010E                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  011D                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0194                     	;# 
  1474  0195                     	;# 
  1475  0196                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019C                     	;# 
  1484  019C                     	;# 
  1485  019D                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  020D                     	;# 
  1489  0210                     	;# 
  1490  0211                     	;# 
  1491  0211                     	;# 
  1492  0212                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0214                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0216                     	;# 
  1502  0216                     	;# 
  1503  0217                     	;# 
  1504  0217                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  0394                     	;# 
  1514  0395                     	;# 
  1515  0396                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  008C                     	;# 
  1555  008D                     	;# 
  1556  008E                     	;# 
  1557  0090                     	;# 
  1558  0091                     	;# 
  1559  0092                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0099                     	;# 
  1564  009A                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020D                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0015                     	;# 
  1657  0016                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  0019                     	;# 
  1662  001A                     	;# 
  1663  001B                     	;# 
  1664  001C                     	;# 
  1665  008C                     	;# 
  1666  008D                     	;# 
  1667  008E                     	;# 
  1668  0090                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  010C                     	;# 
  1682  010D                     	;# 
  1683  010E                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  011D                     	;# 
  1687  018C                     	;# 
  1688  018D                     	;# 
  1689  018E                     	;# 
  1690  0191                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  019C                     	;# 
  1707  019D                     	;# 
  1708  019E                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0214                     	;# 
  1720  0215                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0291                     	;# 
  1728  0291                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  029A                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0015                     	;# 
  1768  0016                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001B                     	;# 
  1775  001C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  0090                     	;# 
  1780  0091                     	;# 
  1781  0092                     	;# 
  1782  0095                     	;# 
  1783  0096                     	;# 
  1784  0097                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0116                     	;# 
  1796  0117                     	;# 
  1797  011D                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  0191                     	;# 
  1802  0191                     	;# 
  1803  0192                     	;# 
  1804  0193                     	;# 
  1805  0193                     	;# 
  1806  0194                     	;# 
  1807  0195                     	;# 
  1808  0196                     	;# 
  1809  0197                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019D                     	;# 
  1819  019E                     	;# 
  1820  019F                     	;# 
  1821  020D                     	;# 
  1822  0210                     	;# 
  1823  0211                     	;# 
  1824  0211                     	;# 
  1825  0212                     	;# 
  1826  0212                     	;# 
  1827  0213                     	;# 
  1828  0213                     	;# 
  1829  0214                     	;# 
  1830  0214                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0216                     	;# 
  1835  0216                     	;# 
  1836  0217                     	;# 
  1837  0217                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0298                     	;# 
  1843  0298                     	;# 
  1844  0299                     	;# 
  1845  029A                     	;# 
  1846  0394                     	;# 
  1847  0395                     	;# 
  1848  0396                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0015                     	;# 
  1879  0016                     	;# 
  1880  0016                     	;# 
  1881  0017                     	;# 
  1882  0018                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  008E                     	;# 
  1890  0090                     	;# 
  1891  0091                     	;# 
  1892  0092                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0099                     	;# 
  1897  009A                     	;# 
  1898  009B                     	;# 
  1899  009B                     	;# 
  1900  009C                     	;# 
  1901  009D                     	;# 
  1902  009E                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  020D                     	;# 
  1933  0210                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0291                     	;# 
  1950  0291                     	;# 
  1951  0292                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  0394                     	;# 
  1958  0395                     	;# 
  1959  0396                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971                           
  1972                           	psect	idataBANK1
  1973  082C                     __pidataBANK1:	
  1974                           
  1975                           ;initializer for Bq32k_Time_Init@F2018
  1976  082C  3401               	retlw	1
  1977  082D  3450               	retlw	80
  1978  082E  3423               	retlw	35
  1979  082F  3402               	retlw	2
  1980  0830  3408               	retlw	8
  1981  0831  3407               	retlw	7
  1982  0832  3416               	retlw	22
  1983  0833  3400               	retlw	0
  1984  0834  3400               	retlw	0
  1985  0835  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _Dis_TAB:	
  1990  1000  34D7               	retlw	215
  1991  1001  3450               	retlw	80
  1992  1002  34B5               	retlw	181
  1993  1003  34F1               	retlw	241
  1994  1004  3472               	retlw	114
  1995  1005  34E3               	retlw	227
  1996  1006  34E7               	retlw	231
  1997  1007  3451               	retlw	81
  1998  1008  34F7               	retlw	247
  1999  1009  34F3               	retlw	243
  2000  100A  3477               	retlw	119
  2001  100B  34E6               	retlw	230
  2002  100C  3487               	retlw	135
  2003  100D  34F4               	retlw	244
  2004  100E  34A7               	retlw	167
  2005  100F  3427               	retlw	39
  2006  1010  3457               	retlw	87
  2007  1011  3420               	retlw	32
  2008  1012  3420               	retlw	32
  2009  1013  3420               	retlw	32
  2010  1014  3420               	retlw	32
  2011  1015                     __end_of_Dis_TAB:	
  2012                           
  2013                           	psect	nvBANK1
  2014  00EF                     __pnvBANK1:	
  2015  00EF                     _timer0ReloadVal:	
  2016  00EF                     	ds	1
  2017  000B                     _INTCONbits	set	11
  2018  0011                     _PIR1bits	set	17
  2019  0015                     _TMR0	set	21
  2020  0067                     _RA7	set	103
  2021  0069                     _RB1	set	105
  2022  006B                     _RB3	set	107
  2023  006D                     _RB5	set	109
  2024  009D                     _ADCON0	set	157
  2025  009D                     _ADCON0bits	set	157
  2026  009E                     _ADCON1	set	158
  2027  009C                     _ADRESH	set	156
  2028  009B                     _ADRESL	set	155
  2029  0095                     _OPTION_REG	set	149
  2030  0095                     _OPTION_REGbits	set	149
  2031  0099                     _OSCCON	set	153
  2032  009A                     _OSCSTAT	set	154
  2033  008C                     _TRISA	set	140
  2034  008D                     _TRISB	set	141
  2035  008E                     _TRISC	set	142
  2036  04B8                     _SWDTEN	set	1208
  2037  0469                     _TRISB1	set	1129
  2038  046B                     _TRISB3	set	1131
  2039  04B9                     _WDTPS0	set	1209
  2040  04BA                     _WDTPS1	set	1210
  2041  04BB                     _WDTPS2	set	1211
  2042  04BC                     _WDTPS3	set	1212
  2043  04BD                     _WDTPS4	set	1213
  2044  011D                     _APFCON	set	285
  2045  0117                     _FVRCON	set	279
  2046  0117                     _FVRCONbits	set	279
  2047  010C                     _LATA	set	268
  2048  010D                     _LATB	set	269
  2049  010E                     _LATC	set	270
  2050  0860                     _LATA0	set	2144
  2051  0861                     _LATA1	set	2145
  2052  0862                     _LATA2	set	2146
  2053  0863                     _LATA3	set	2147
  2054  0864                     _LATA4	set	2148
  2055  0865                     _LATA5	set	2149
  2056  0868                     _LATB0	set	2152
  2057  0869                     _LATB1	set	2153
  2058  0870                     _LATC0	set	2160
  2059  0871                     _LATC1	set	2161
  2060  0872                     _LATC2	set	2162
  2061  018C                     _ANSELA	set	396
  2062  018D                     _ANSELB	set	397
  2063  018E                     _ANSELC	set	398
  2064  019F                     _BAUDCON	set	415
  2065  0192                     _PMADRH	set	402
  2066  0191                     _PMADRL	set	401
  2067  0195                     _PMCON1bits	set	405
  2068  0196                     _PMCON2	set	406
  2069  0194                     _PMDATH	set	404
  2070  0193                     _PMDATL	set	403
  2071  0199                     _RCREG	set	409
  2072  019D                     _RCSTA	set	413
  2073  019D                     _RCSTAbits	set	413
  2074  019C                     _SPBRGH	set	412
  2075  019B                     _SPBRGL	set	411
  2076  019A                     _TXREG	set	410
  2077  019E                     _TXSTA	set	414
  2078  0212                     _SSP1ADD	set	530
  2079  0215                     _SSP1CON1	set	533
  2080  0215                     _SSP1CON1bits	set	533
  2081  0214                     _SSP1STAT	set	532
  2082  0214                     _SSP1STATbits	set	532
  2083  0211                     _SSPBUF	set	529
  2084  020D                     _WPUB	set	525
  2085  0210                     _WPUE	set	528
  2086                           
  2087                           ; #config settings
  2088  0000                     
  2089                           	psect	cinit
  2090  0015                     start_initialization:	
  2091  0015                     __initialization:	
  2092                           
  2093                           ; Clear objects allocated to COMMON
  2094  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2095  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2096  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2097                           
  2098                           ; Clear objects allocated to BANK0
  2099  0018  3065               	movlw	low __pbssBANK0
  2100  0019  0084               	movwf	4
  2101  001A  3000               	movlw	high __pbssBANK0
  2102  001B  0085               	movwf	5
  2103  001C  3009               	movlw	9
  2104  001D  3188  200D  3180   	fcall	clear_ram0
  2105                           
  2106                           ; Clear objects allocated to BANK1
  2107  0020  30A0               	movlw	low __pbssBANK1
  2108  0021  0084               	movwf	4
  2109  0022  3000               	movlw	high __pbssBANK1
  2110  0023  0085               	movwf	5
  2111  0024  3045               	movlw	69
  2112  0025  3188  200D  3180   	fcall	clear_ram0
  2113                           
  2114                           ; Clear objects allocated to BANK2
  2115  0028  3020               	movlw	low __pbssBANK2
  2116  0029  0084               	movwf	4
  2117  002A  3001               	movlw	high __pbssBANK2
  2118  002B  0085               	movwf	5
  2119  002C  3040               	movlw	64
  2120  002D  3188  200D  3180   	fcall	clear_ram0
  2121                           
  2122                           ; Initialize objects allocated to BANK1
  2123  0030  302C               	movlw	low __pidataBANK1
  2124  0031  0084               	movwf	4
  2125  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2126  0033  0085               	movwf	5
  2127  0034  30E5               	movlw	low __pdataBANK1
  2128  0035  0086               	movwf	6
  2129  0036  3000               	movlw	high __pdataBANK1
  2130  0037  0087               	movwf	7
  2131  0038  300A               	movlw	10
  2132  0039  3188  2007         	fcall	init_ram
  2133  003B                     end_of_initialization:	
  2134                           ;End of C runtime variable initialization code
  2135                           
  2136  003B                     __end_of__initialization:	
  2137  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2138  003C  0020               	movlb	0
  2139  003D  3183  2BA9         	ljmp	_main	;jump to C main() function
  2140                           
  2141                           	psect	bssCOMMON
  2142  0078                     __pbssCOMMON:	
  2143  0078                     _CH2_temperature:	
  2144  0078                     	ds	2
  2145  007A                     _uch_cr0:	
  2146  007A                     	ds	1
  2147                           
  2148                           	psect	bssBANK0
  2149  0065                     __pbssBANK0:	
  2150  0065                     _temperature_value:	
  2151  0065                     	ds	4
  2152  0069                     _CH1_temperature:	
  2153  0069                     	ds	2
  2154  006B                     _Record_flag:	
  2155  006B                     	ds	1
  2156  006C                     _temperature_decimal:	
  2157  006C                     	ds	1
  2158  006D                     _time_count:	
  2159  006D                     	ds	1
  2160                           
  2161                           	psect	bssBANK1
  2162  00A0                     __pbssBANK1:	
  2163  00A0                     Two_Display@F2123:	
  2164  00A0                     	ds	4
  2165  00A4                     err_Display@F2126:	
  2166  00A4                     	ds	4
  2167  00A8                     time_Display@F2129:	
  2168  00A8                     	ds	4
  2169  00AC                     TMR0_ISR@CountCallBack:	
  2170  00AC                     	ds	2
  2171  00AE                     _Cur_Save_Index:	
  2172  00AE                     	ds	2
  2173  00B0                     _Cur_temperature:	
  2174  00B0                     	ds	2
  2175  00B2                     _temperature_int:	
  2176  00B2                     	ds	2
  2177  00B4                     _CH1_state:	
  2178  00B4                     	ds	1
  2179  00B5                     _CH2_state:	
  2180  00B5                     	ds	1
  2181  00B6                     _Cur_temperature_time_ch1:	
  2182  00B6                     	ds	1
  2183  00B7                     _Cur_temperature_time_ch2:	
  2184  00B7                     	ds	1
  2185  00B8                     _LongPressSec:	
  2186  00B8                     	ds	1
  2187  00B9                     _MAX31856Sec:	
  2188  00B9                     	ds	1
  2189  00BA                     _temperature_sign:	
  2190  00BA                     	ds	1
  2191  00BB                     _tmr_flag:	
  2192  00BB                     	ds	1
  2193  00BC                     _uch_cjth:	
  2194  00BC                     	ds	1
  2195  00BD                     _uch_cjtl:	
  2196  00BD                     	ds	1
  2197  00BE                     _uch_cr1:	
  2198  00BE                     	ds	1
  2199  00BF                     _uch_ltcbh:	
  2200  00BF                     	ds	1
  2201  00C0                     _uch_ltcbl:	
  2202  00C0                     	ds	1
  2203  00C1                     _uch_ltcbm:	
  2204  00C1                     	ds	1
  2205  00C2                     _uch_mask:	
  2206  00C2                     	ds	1
  2207  00C3                     _uch_sr:	
  2208  00C3                     	ds	1
  2209  00C4                     _uch_reg:	
  2210  00C4                     	ds	8
  2211  00CC                     _rtc_save_ch1:	
  2212  00CC                     	ds	7
  2213  00D3                     _rtc_save_ch2:	
  2214  00D3                     	ds	7
  2215  00DA                     _rtc_tm:	
  2216  00DA                     	ds	7
  2217  00E1                     _display_buff:	
  2218  00E1                     	ds	4
  2219                           
  2220                           	psect	dataBANK1
  2221  00E5                     __pdataBANK1:	
  2222  00E5                     Bq32k_Time_Init@F2018:	
  2223  00E5                     	ds	10
  2224                           
  2225                           	psect	bssBANK2
  2226  0120                     __pbssBANK2:	
  2227  0120                     _Flash_buff:	
  2228  0120                     	ds	64
  2229                           
  2230                           	psect	clrtext
  2231  080D                     clear_ram0:	
  2232                           ;	Called with FSR0 containing the base address, and
  2233                           ;	WREG with the size to clear
  2234                           
  2235  080D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2236  080E                     clrloop0:	
  2237  080E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2238  080F  3101               	addfsr 0,1
  2239  0810  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2240  0811  280E               	goto	clrloop0	;have we reached the end yet?
  2241  0812  3400               	retlw	0	;all done for this memory range, return
  2242                           
  2243                           	psect	inittext
  2244  0807                     init_ram:	
  2245  0807  00FE               	movwf	126
  2246  0808                     initloop:	
  2247  0808  0012               	moviw fsr0++
  2248  0809  001E               	movwi fsr1++
  2249  080A  0BFE               	decfsz	126,f
  2250  080B  2808               	goto	initloop
  2251  080C  3400               	retlw	0
  2252                           
  2253                           	psect	cstackBANK2
  2254  0160                     __pcstackBANK2:	
  2255  0160                     main@data_temp:	
  2256                           
  2257                           ; 2 bytes @ 0x0
  2258  0160                     	ds	2
  2259  0162                     main@i:	
  2260                           
  2261                           ; 1 bytes @ 0x2
  2262  0162                     	ds	1
  2263  0163                     main@bat_data:	
  2264                           
  2265                           ; 2 bytes @ 0x3
  2266  0163                     	ds	2
  2267                           
  2268                           	psect	cstackCOMMON
  2269  0070                     __pcstackCOMMON:	
  2270  0070                     ?_OSCILLATOR_Initialize:	
  2271  0070                     ?_SPI_Initialize:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_EUSART_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_ADC_Initialize:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_FVR_Initialize:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ?_TMR0_Initialize:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_maxim_31856_init:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Bq32k_Time_Init:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_SendCmd_1621:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Serach_Flash_Head:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_temperature_process:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_Save_process:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_Calculate_Time:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_Tc_Display:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_err_Display:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_Two_Display:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_time_Display:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_Bq32k_Rtc_Read_Time:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_Set_start_flag:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_Write_Flash_head:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_Save_Write_time:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_Set_finish_flag:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_Write_Flash_finish:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_bcd2bin:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_TMR0_CallBack:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ??_TMR0_CallBack:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_PIN_MANAGER_Initialize:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_SYSTEM_Initialize:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_SPI_Exchange8bit:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_EUSART_Write:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_maxim_31856_read_register:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_maxim_start_conversion:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_maxim_clear_fault_status:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_tc_temperature_trans:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_one_temperature_trans:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_temperature_display:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_I2C_Start:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_Send_Byte:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_I2C_Receive_Byte:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_I2C_Stop:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_Key_Scan:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_TMR0_ISR:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_INTERRUPT_InterruptManager:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_Key_Process:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403                           
  2404                           ; 2 bytes @ 0x0
  2405  0070                     	ds	1
  2406  0071                     ??_TMR0_ISR:	
  2407                           
  2408                           ; 1 bytes @ 0x1
  2409  0071                     	ds	1
  2410  0072                     ??_INTERRUPT_InterruptManager:	
  2411                           
  2412                           ; 1 bytes @ 0x2
  2413  0072                     	ds	1
  2414  0073                     ??_OSCILLATOR_Initialize:	
  2415  0073                     ??_SPI_Initialize:	
  2416                           ; 1 bytes @ 0x3
  2417                           
  2418  0073                     ??_EUSART_Initialize:	
  2419                           ; 1 bytes @ 0x3
  2420                           
  2421  0073                     ??_ADC_Initialize:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0073                     ??_FVR_Initialize:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0073                     ??_TMR0_Initialize:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0073                     ?_FLASH_EraseBlock:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0073                     ?_memset:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436  0073                     ??_Set_start_flag:	
  2437                           ; 1 bytes @ 0x3
  2438                           
  2439  0073                     ??_Set_finish_flag:	
  2440                           ; 1 bytes @ 0x3
  2441                           
  2442  0073                     ??_PIN_MANAGER_Initialize:	
  2443                           ; 1 bytes @ 0x3
  2444                           
  2445  0073                     ??_SPI_Exchange8bit:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ??_EUSART_Write:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ?_SendBit_1621:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ?_SendDataBit_1621:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_I2C_Start:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??_I2C_Send_Byte:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     ??_I2C_Receive_Byte:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     ??_I2C_Stop:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     ??_Key_Scan:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     ?___bmul:	
  2473                           ; 1 bytes @ 0x3
  2474                           
  2475  0073                     ?_FLASH_ReadWord:	
  2476                           ; 1 bytes @ 0x3
  2477                           
  2478  0073                     ?_ADC_GetConversion:	
  2479                           ; 2 bytes @ 0x3
  2480                           
  2481  0073                     ?___wmul:	
  2482                           ; 2 bytes @ 0x3
  2483                           
  2484  0073                     ?___awdiv:	
  2485                           ; 2 bytes @ 0x3
  2486                           
  2487  0073                     ?___awmod:	
  2488                           ; 2 bytes @ 0x3
  2489                           
  2490  0073                     ?___lwmod:	
  2491                           ; 2 bytes @ 0x3
  2492                           
  2493  0073                     SPI_Exchange8bit@data:	
  2494                           ; 2 bytes @ 0x3
  2495                           
  2496  0073                     EUSART_Write@txData:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0073                     SendBit_1621@cnt:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0073                     SendDataBit_1621@cnt:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0073                     ___bmul@multiplicand:	
  2506                           ; 1 bytes @ 0x3
  2507                           
  2508  0073                     FLASH_ReadWord@flashAddr:	
  2509                           ; 1 bytes @ 0x3
  2510                           
  2511  0073                     FLASH_EraseBlock@startAddr:	
  2512                           ; 2 bytes @ 0x3
  2513                           
  2514  0073                     ___wmul@multiplier:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0073                     ___awdiv@divisor:	
  2518                           ; 2 bytes @ 0x3
  2519                           
  2520  0073                     ___awmod@divisor:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523  0073                     ___lwmod@divisor:	
  2524                           ; 2 bytes @ 0x3
  2525                           
  2526  0073                     memset@c:	
  2527                           ; 2 bytes @ 0x3
  2528                           
  2529                           
  2530                           ; 2 bytes @ 0x3
  2531  0073                     	ds	1
  2532  0074                     ??_SYSTEM_Initialize:	
  2533  0074                     ?_SPI_Exchange8bitBuffer:	
  2534                           ; 1 bytes @ 0x4
  2535                           
  2536  0074                     ?_maxim_31856_write_register:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  0074                     ??_maxim_31856_read_register:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  0074                     ??_SendBit_1621:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545  0074                     ??_SendDataBit_1621:	
  2546                           ; 1 bytes @ 0x4
  2547                           
  2548  0074                     ??___bmul:	
  2549                           ; 1 bytes @ 0x4
  2550                           
  2551  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2552                           ; 1 bytes @ 0x4
  2553                           
  2554  0074                     maxim_31856_write_register@uch_register_value:	
  2555                           ; 1 bytes @ 0x4
  2556                           
  2557  0074                     I2C_Send_Byte@Data:	
  2558                           ; 1 bytes @ 0x4
  2559                           
  2560  0074                     I2C_Receive_Byte@Data:	
  2561                           ; 1 bytes @ 0x4
  2562                           
  2563                           
  2564                           ; 1 bytes @ 0x4
  2565  0074                     	ds	1
  2566  0075                     ??_FLASH_EraseBlock:	
  2567  0075                     ??_FLASH_ReadWord:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  0075                     ??_ADC_GetConversion:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  0075                     ??_maxim_31856_write_register:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579  0075                     FLASH_ReadWord@GIEBitValue:	
  2580                           ; 1 bytes @ 0x5
  2581                           
  2582  0075                     FLASH_EraseBlock@GIEBitValue:	
  2583                           ; 1 bytes @ 0x5
  2584                           
  2585  0075                     maxim_31856_write_register@uch_register_address:	
  2586                           ; 1 bytes @ 0x5
  2587                           
  2588  0075                     maxim_31856_read_register@uch_register_address:	
  2589                           ; 1 bytes @ 0x5
  2590                           
  2591  0075                     I2C_Send_Byte@i:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0075                     I2C_Receive_Byte@i:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597  0075                     Key_Scan@Key_val:	
  2598                           ; 1 bytes @ 0x5
  2599                           
  2600  0075                     ___bmul@product:	
  2601                           ; 1 bytes @ 0x5
  2602                           
  2603  0075                     ___wmul@multiplicand:	
  2604                           ; 1 bytes @ 0x5
  2605                           
  2606  0075                     ___awdiv@dividend:	
  2607                           ; 2 bytes @ 0x5
  2608                           
  2609  0075                     ___awmod@dividend:	
  2610                           ; 2 bytes @ 0x5
  2611                           
  2612  0075                     ___lwmod@dividend:	
  2613                           ; 2 bytes @ 0x5
  2614                           
  2615  0075                     memset@n:	
  2616                           ; 2 bytes @ 0x5
  2617                           
  2618                           
  2619                           ; 2 bytes @ 0x5
  2620  0075                     	ds	1
  2621  0076                     ??_maxim_31856_init:	
  2622  0076                     ??_FLASH_WriteWord:	
  2623                           ; 1 bytes @ 0x6
  2624                           
  2625  0076                     ?_I2C_Read_Buffer:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628  0076                     ?_I2C_Send_Buffer:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     ADC_GetConversion@channel:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     maxim_31856_read_register@uch_register_data:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640  0076                     SendBit_1621@data:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  0076                     SendDataBit_1621@data:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0076                     I2C_Read_Buffer@buff:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649  0076                     I2C_Send_Buffer@buff:	
  2650                           ; 1 bytes @ 0x6
  2651                           
  2652  0076                     ___bmul@multiplier:	
  2653                           ; 1 bytes @ 0x6
  2654                           
  2655                           
  2656                           ; 1 bytes @ 0x6
  2657  0076                     	ds	1
  2658  0077                     ??_memset:	
  2659  0077                     ??_Write_Flash_head:	
  2660                           ; 1 bytes @ 0x7
  2661                           
  2662  0077                     ??_Write_Flash_finish:	
  2663                           ; 1 bytes @ 0x7
  2664                           
  2665  0077                     ??_maxim_start_conversion:	
  2666                           ; 1 bytes @ 0x7
  2667                           
  2668  0077                     ??_maxim_clear_fault_status:	
  2669                           ; 1 bytes @ 0x7
  2670                           
  2671  0077                     ??___wmul:	
  2672                           ; 1 bytes @ 0x7
  2673                           
  2674  0077                     ??___awdiv:	
  2675                           ; 1 bytes @ 0x7
  2676                           
  2677  0077                     ??___awmod:	
  2678                           ; 1 bytes @ 0x7
  2679                           
  2680  0077                     ??___lwmod:	
  2681                           ; 1 bytes @ 0x7
  2682                           
  2683  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2684                           ; 1 bytes @ 0x7
  2685                           
  2686  0077                     SendBit_1621@i:	
  2687                           ; 1 bytes @ 0x7
  2688                           
  2689  0077                     SendDataBit_1621@i:	
  2690                           ; 1 bytes @ 0x7
  2691                           
  2692  0077                     I2C_Read_Buffer@Length:	
  2693                           ; 1 bytes @ 0x7
  2694                           
  2695  0077                     I2C_Send_Buffer@Length:	
  2696                           ; 1 bytes @ 0x7
  2697                           
  2698  0077                     bcd2bin@val:	
  2699                           ; 1 bytes @ 0x7
  2700                           
  2701                           
  2702                           ; 1 bytes @ 0x7
  2703  0077                     	ds	1
  2704  0078                     ??_temperature_process:	
  2705                           
  2706                           	psect	cstackBANK0
  2707  0020                     __pcstackBANK0:	
  2708                           ; 1 bytes @ 0x8
  2709                           
  2710  0020                     ?_FLASH_WriteBlock:	
  2711  0020                     ??_SendCmd_1621:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0020                     ?_WriteAll_1621:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0020                     ??_bcd2bin:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0020                     ??_SPI_Exchange8bitBuffer:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0020                     ??_I2C_Read_Buffer:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0020                     ??_I2C_Send_Buffer:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0020                     maxim_start_conversion@uch_conversion_mode:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0020                     ___awdiv@counter:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0020                     ___awmod@counter:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0020                     ___lwmod@counter:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0020                     memset@p1:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0020                     FLASH_WriteBlock@writeAddr:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0020                     WriteAll_1621@p:	
  2748                           ; 2 bytes @ 0x0
  2749                           
  2750  0020                     ___wmul@product:	
  2751                           ; 2 bytes @ 0x0
  2752                           
  2753                           
  2754                           ; 2 bytes @ 0x0
  2755  0020                     	ds	1
  2756  0021                     ?___lwdiv:	
  2757  0021                     SendCmd_1621@command:	
  2758                           ; 2 bytes @ 0x1
  2759                           
  2760  0021                     I2C_Read_Buffer@ADD:	
  2761                           ; 1 bytes @ 0x1
  2762                           
  2763  0021                     ___awdiv@sign:	
  2764                           ; 1 bytes @ 0x1
  2765                           
  2766  0021                     ___awmod@sign:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769  0021                     memset@p:	
  2770                           ; 1 bytes @ 0x1
  2771                           
  2772  0021                     ___lwdiv@divisor:	
  2773                           ; 1 bytes @ 0x1
  2774                           
  2775                           
  2776                           ; 2 bytes @ 0x1
  2777  0021                     	ds	1
  2778  0022                     FLASH_WriteBlock@flashWordArray:	
  2779  0022                     WriteAll_1621@cnt:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     I2C_Read_Buffer@Flag:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     I2C_Send_Buffer@ADD:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788  0022                     ___awdiv@quotient:	
  2789                           ; 1 bytes @ 0x2
  2790                           
  2791                           
  2792                           ; 2 bytes @ 0x2
  2793  0022                     	ds	1
  2794  0023                     ??_FLASH_WriteBlock:	
  2795  0023                     ??_WriteAll_1621:	
  2796                           ; 1 bytes @ 0x3
  2797                           
  2798  0023                     ??_Bq32k_Rtc_Read_Time:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     ?_maxim_31856_read_nregisters:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     maxim_31856_read_nregisters@uch_buff:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     I2C_Send_Buffer@i:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810  0023                     ___lwdiv@dividend:	
  2811                           ; 1 bytes @ 0x3
  2812                           
  2813                           
  2814                           ; 2 bytes @ 0x3
  2815  0023                     	ds	1
  2816  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2817  0024                     WriteAll_1621@addr:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820  0024                     I2C_Send_Buffer@Flag:	
  2821                           ; 1 bytes @ 0x4
  2822                           
  2823                           
  2824                           ; 1 bytes @ 0x4
  2825  0024                     	ds	1
  2826  0025                     ??_Bq32k_Time_Init:	
  2827  0025                     ??_maxim_31856_read_nregisters:	
  2828                           ; 1 bytes @ 0x5
  2829                           
  2830  0025                     ??___lwdiv:	
  2831                           ; 1 bytes @ 0x5
  2832                           
  2833  0025                     WriteAll_1621@i:	
  2834                           ; 1 bytes @ 0x5
  2835                           
  2836  0025                     Bq32k_Rtc_Read_Time@temp:	
  2837                           ; 1 bytes @ 0x5
  2838                           
  2839                           
  2840                           ; 10 bytes @ 0x5
  2841  0025                     	ds	1
  2842  0026                     ??_err_Display:	
  2843  0026                     ??_Two_Display:	
  2844                           ; 1 bytes @ 0x6
  2845                           
  2846  0026                     ___lwdiv@counter:	
  2847                           ; 1 bytes @ 0x6
  2848                           
  2849  0026                     FLASH_WriteBlock@blockStartAddr:	
  2850                           ; 1 bytes @ 0x6
  2851                           
  2852                           
  2853                           ; 2 bytes @ 0x6
  2854  0026                     	ds	1
  2855  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2856  0027                     ___lwdiv@quotient:	
  2857                           ; 1 bytes @ 0x7
  2858                           
  2859  0027                     Two_Display@num:	
  2860                           ; 2 bytes @ 0x7
  2861                           
  2862  0027                     err_Display@num:	
  2863                           ; 4 bytes @ 0x7
  2864                           
  2865  0027                     Bq32k_Time_Init@temp:	
  2866                           ; 4 bytes @ 0x7
  2867                           
  2868                           
  2869                           ; 10 bytes @ 0x7
  2870  0027                     	ds	1
  2871  0028                     ??_one_temperature_trans:	
  2872  0028                     FLASH_WriteBlock@GIEBitValue:	
  2873                           ; 1 bytes @ 0x8
  2874                           
  2875                           
  2876                           ; 1 bytes @ 0x8
  2877  0028                     	ds	1
  2878  0029                     ??_Tc_Display:	
  2879  0029                     FLASH_WriteBlock@i:	
  2880                           ; 1 bytes @ 0x9
  2881                           
  2882                           
  2883                           ; 1 bytes @ 0x9
  2884  0029                     	ds	1
  2885  002A                     ?_FLASH_WriteWord:	
  2886  002A                     Tc_Display@count:	
  2887                           ; 1 bytes @ 0xA
  2888                           
  2889  002A                     FLASH_WriteWord@flashAddr:	
  2890                           ; 1 bytes @ 0xA
  2891                           
  2892                           
  2893                           ; 2 bytes @ 0xA
  2894  002A                     	ds	1
  2895  002B                     Two_Display@number:	
  2896  002B                     Tc_Display@data:	
  2897                           ; 1 bytes @ 0xB
  2898                           
  2899                           
  2900                           ; 2 bytes @ 0xB
  2901  002B                     	ds	1
  2902  002C                     FLASH_WriteWord@ramBuf:	
  2903                           
  2904                           ; 1 bytes @ 0xC
  2905  002C                     	ds	1
  2906  002D                     FLASH_WriteWord@word:	
  2907                           
  2908                           ; 2 bytes @ 0xD
  2909  002D                     	ds	2
  2910  002F                     FLASH_WriteWord@offset:	
  2911  002F                     Bq32k_Rtc_Read_Time@p:	
  2912                           ; 1 bytes @ 0xF
  2913                           
  2914                           
  2915                           ; 1 bytes @ 0xF
  2916  002F                     	ds	1
  2917  0030                     ??_time_Display:	
  2918  0030                     FLASH_WriteWord@blockStartAddr:	
  2919                           ; 1 bytes @ 0x10
  2920                           
  2921                           
  2922                           ; 2 bytes @ 0x10
  2923  0030                     	ds	2
  2924  0032                     FLASH_WriteWord@i:	
  2925                           
  2926                           ; 1 bytes @ 0x12
  2927  0032                     	ds	1
  2928  0033                     ??_Serach_Flash_Head:	
  2929  0033                     ?_Save_Write_word:	
  2930                           ; 1 bytes @ 0x13
  2931                           
  2932  0033                     Save_Write_word@data:	
  2933                           ; 1 bytes @ 0x13
  2934                           
  2935  0033                     time_Display@num:	
  2936                           ; 2 bytes @ 0x13
  2937                           
  2938                           
  2939                           ; 4 bytes @ 0x13
  2940  0033                     	ds	1
  2941  0034                     Serach_Flash_Head@count:	
  2942                           
  2943                           ; 1 bytes @ 0x14
  2944  0034                     	ds	1
  2945  0035                     ??_Save_Write_word:	
  2946  0035                     Serach_Flash_Head@data:	
  2947                           ; 1 bytes @ 0x15
  2948                           
  2949                           
  2950                           ; 2 bytes @ 0x15
  2951  0035                     	ds	2
  2952  0037                     ??_Save_Write_time:	
  2953  0037                     Serach_Flash_Head@i:	
  2954                           ; 1 bytes @ 0x17
  2955                           
  2956                           
  2957                           ; 2 bytes @ 0x17
  2958  0037                     	ds	2
  2959  0039                     ??_Calculate_Time:	
  2960                           
  2961                           ; 1 bytes @ 0x19
  2962  0039                     	ds	10
  2963  0043                     Calculate_Time@temp:	
  2964                           
  2965                           ; 4 bytes @ 0x23
  2966  0043                     	ds	4
  2967  0047                     Calculate_Time@temp1:	
  2968                           
  2969                           ; 4 bytes @ 0x27
  2970  0047                     	ds	4
  2971  004B                     Calculate_Time@temp2:	
  2972                           
  2973                           ; 4 bytes @ 0x2B
  2974  004B                     	ds	4
  2975  004F                     ??_Save_process:	
  2976  004F                     ??_tc_temperature_trans:	
  2977                           ; 1 bytes @ 0x2F
  2978                           
  2979                           
  2980                           ; 1 bytes @ 0x2F
  2981  004F                     	ds	2
  2982  0051                     Save_process@var_time:	
  2983                           
  2984                           ; 2 bytes @ 0x31
  2985  0051                     	ds	2
  2986  0053                     tc_temperature_trans@temperature_back:	
  2987                           
  2988                           ; 2 bytes @ 0x33
  2989  0053                     	ds	2
  2990  0055                     tc_temperature_trans@temperature_absolute:	
  2991                           
  2992                           ; 2 bytes @ 0x35
  2993  0055                     	ds	2
  2994  0057                     tc_temperature_trans@var_time:	
  2995                           
  2996                           ; 2 bytes @ 0x37
  2997  0057                     	ds	2
  2998  0059                     tc_temperature_trans@temperature_temp:	
  2999                           
  3000                           ; 2 bytes @ 0x39
  3001  0059                     	ds	2
  3002  005B                     ??_temperature_display:	
  3003                           
  3004                           ; 1 bytes @ 0x3B
  3005  005B                     	ds	1
  3006  005C                     ??_Key_Process:	
  3007                           
  3008                           ; 1 bytes @ 0x3C
  3009  005C                     	ds	1
  3010  005D                     Key_Process@data_temp:	
  3011                           
  3012                           ; 2 bytes @ 0x3D
  3013  005D                     	ds	2
  3014  005F                     Key_Process@gKeyValue:	
  3015                           
  3016                           ; 1 bytes @ 0x3F
  3017  005F                     	ds	1
  3018  0060                     Key_Process@i:	
  3019                           
  3020                           ; 2 bytes @ 0x40
  3021  0060                     	ds	2
  3022  0062                     ??_main:	
  3023                           
  3024                           ; 1 bytes @ 0x42
  3025  0062                     	ds	3
  3026                           
  3027                           	psect	maintext
  3028  03A9                     __pmaintext:	
  3029 ;;
  3030 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3031 ;;
  3032 ;; *************** function _main *****************
  3033 ;; Defined at:
  3034 ;;		line 65 in file "main.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  bat_data        2    3[BANK2 ] unsigned int 
  3039 ;;  data_temp       2    0[BANK2 ] unsigned int 
  3040 ;;  i               1    2[BANK2 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : B1F/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         0       3       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        8 bytes
  3055 ;; Hardware stack levels required when called:   13
  3056 ;; This function calls:
  3057 ;;		_ADC_GetConversion
  3058 ;;		_Bq32k_Time_Init
  3059 ;;		_Key_Process
  3060 ;;		_SYSTEM_Initialize
  3061 ;;		_Save_process
  3062 ;;		_SendCmd_1621
  3063 ;;		_Serach_Flash_Head
  3064 ;;		_WriteAll_1621
  3065 ;;		_maxim_31856_init
  3066 ;;		_temperature_process
  3067 ;; This function is called by:
  3068 ;;		Startup code after reset
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _main
  3074  03A9                     _main:	
  3075                           
  3076                           ;main.c: 67: unsigned char i=0;
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3080  03A9  0022               	movlb	2	; select bank2
  3081  03AA  01E2               	clrf	main@i^(0+256)
  3082                           
  3083                           ;main.c: 69: unsigned int bat_data = 0;
  3084  03AB  01E3               	clrf	main@bat_data^(0+256)
  3085  03AC  01E4               	clrf	(main@bat_data+1)^(0+256)
  3086                           
  3087                           ;main.c: 70: unsigned int data_temp = 0;
  3088  03AD  01E0               	clrf	main@data_temp^(0+256)
  3089  03AE  01E1               	clrf	(main@data_temp+1)^(0+256)
  3090                           
  3091                           ;main.c: 71: SWDTEN = 0;
  3092  03AF  0021               	movlb	1	; select bank1
  3093  03B0  1017               	bcf	23,0	;volatile
  3094                           
  3095                           ;main.c: 72: WDTPS0 = 1;
  3096  03B1  1497               	bsf	23,1	;volatile
  3097                           
  3098                           ;main.c: 73: WDTPS1 = 0;
  3099  03B2  1117               	bcf	23,2	;volatile
  3100                           
  3101                           ;main.c: 74: WDTPS2 = 0;
  3102  03B3  1197               	bcf	23,3	;volatile
  3103                           
  3104                           ;main.c: 75: WDTPS3 = 1;
  3105  03B4  1617               	bsf	23,4	;volatile
  3106                           
  3107                           ;main.c: 76: WDTPS4 = 0;
  3108  03B5  1297               	bcf	23,5	;volatile
  3109  03B6  0064               	clrwdt	;# 
  3110                           
  3111                           ;main.c: 79: SYSTEM_Initialize();
  3112  03B7  3188  20A6  3183   	fcall	_SYSTEM_Initialize
  3113                           
  3114                           ;main.c: 80: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3115  03BA  303D               	movlw	61
  3116  03BB  0020               	movlb	0	; select bank0
  3117  03BC  00E4               	movwf	??_main+2
  3118  03BD  30E1               	movlw	225
  3119  03BE  00E3               	movwf	??_main+1
  3120  03BF  307A               	movlw	122
  3121  03C0  00E2               	movwf	??_main
  3122  03C1                     u5227:	
  3123  03C1  0BE2               	decfsz	??_main,f
  3124  03C2  2BC1               	goto	u5227
  3125  03C3  0BE3               	decfsz	??_main+1,f
  3126  03C4  2BC1               	goto	u5227
  3127  03C5  0BE4               	decfsz	??_main+2,f
  3128  03C6  2BC1               	goto	u5227
  3129  03C7  3200               	nop2
  3130                           
  3131                           ;main.c: 81: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3132  03C8  0020               	movlb	0	; select bank0
  3133  03C9  1A8D               	btfsc	13,5	;volatile
  3134  03CA  2BCE               	goto	l327
  3135  03CB  0022               	movlb	2	; select bank2
  3136  03CC  150C               	bsf	12,2	;volatile
  3137  03CD  2BD0               	goto	l329
  3138  03CE                     l327:	
  3139                           ;main.c: 82: else do { LATA2 = 0; } while(0);
  3140                           
  3141  03CE  0022               	movlb	2	; select bank2
  3142  03CF  110C               	bcf	12,2	;volatile
  3143  03D0                     l329:	
  3144                           ;main.c: 83: do { LATA3 = 0; } while(0);
  3145                           
  3146  03D0  118C               	bcf	12,3	;volatile
  3147                           
  3148                           ;main.c: 86: bat_data = 0;
  3149  03D1  01E3               	clrf	main@bat_data^(0+256)
  3150  03D2  01E4               	clrf	(main@bat_data+1)^(0+256)
  3151                           
  3152                           ;main.c: 87: for(i=0;i<16;i++)
  3153  03D3  01E2               	clrf	main@i^(0+256)
  3154  03D4  3010               	movlw	16
  3155  03D5  0262               	subwf	main@i^(0+256),w
  3156  03D6  1803               	btfsc	3,0
  3157  03D7  2BED               	goto	l5441
  3158  03D8                     l5435:	
  3159                           
  3160                           ;main.c: 88: {
  3161                           ;main.c: 89: bat_data = bat_data + ADC_GetConversion(ADC);
  3162  03D8  300B               	movlw	11
  3163  03D9  3189  2136  3183   	fcall	_ADC_GetConversion
  3164  03DC  0022               	movlb	2	; select bank2
  3165  03DD  0863               	movf	main@bat_data^(0+256),w
  3166  03DE  0773               	addwf	?_ADC_GetConversion,w
  3167  03DF  00E3               	movwf	main@bat_data^(0+256)
  3168  03E0  0864               	movf	(main@bat_data+1)^(0+256),w
  3169  03E1  3D74               	addwfc	?_ADC_GetConversion+1,w
  3170  03E2  00E4               	movwf	(main@bat_data+1)^(0+256)
  3171  03E3  3001               	movlw	1
  3172  03E4  0020               	movlb	0	; select bank0
  3173  03E5  00E2               	movwf	??_main
  3174  03E6  0862               	movf	??_main,w
  3175  03E7  0022               	movlb	2	; select bank2
  3176  03E8  07E2               	addwf	main@i^(0+256),f
  3177  03E9  3010               	movlw	16
  3178  03EA  0262               	subwf	main@i^(0+256),w
  3179  03EB  1C03               	skipc
  3180  03EC  2BD8               	goto	l5435
  3181  03ED                     l5441:	
  3182                           
  3183                           ;main.c: 90: }
  3184                           ;main.c: 91: bat_data = bat_data>>4;
  3185  03ED  0E63               	swapf	main@bat_data^(0+256),w
  3186  03EE  390F               	andlw	15
  3187  03EF  00E3               	movwf	main@bat_data^(0+256)
  3188  03F0  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3189  03F1  39F0               	andlw	240
  3190  03F2  04E3               	iorwf	main@bat_data^(0+256),f
  3191  03F3  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3192  03F4  390F               	andlw	15
  3193  03F5  00E4               	movwf	(main@bat_data^(0+256)+1)
  3194                           
  3195                           ;main.c: 92: if( bat_data < 800)
  3196  03F6  3003               	movlw	3
  3197  03F7  0264               	subwf	(main@bat_data+1)^(0+256),w
  3198  03F8  3020               	movlw	32
  3199  03F9  1903               	skipnz
  3200  03FA  0263               	subwf	main@bat_data^(0+256),w
  3201  03FB  1803               	skipnc
  3202  03FC  2C00               	goto	l5445
  3203                           
  3204                           ;main.c: 93: {
  3205                           ;main.c: 94: do { LATA2 = 0; } while(0);
  3206  03FD  110C               	bcf	12,2	;volatile
  3207  03FE                     l336:	
  3208                           ;main.c: 95: while(1)asm("clrwdt");
  3209                           
  3210  03FE  0064               	clrwdt	;# 
  3211  03FF  2BFE               	goto	l336
  3212  0400                     l5445:	
  3213                           
  3214                           ;main.c: 96: }
  3215                           ;main.c: 97: i = 0 ;
  3216  0400  0022               	movlb	2	; select bank2
  3217  0401  01E2               	clrf	main@i^(0+256)
  3218                           
  3219                           ;main.c: 98: bat_data = 0 ;
  3220  0402  01E3               	clrf	main@bat_data^(0+256)
  3221  0403  01E4               	clrf	(main@bat_data+1)^(0+256)
  3222                           
  3223                           ;main.c: 101: maxim_31856_init();
  3224  0404  318F  279C  3183   	fcall	_maxim_31856_init
  3225                           
  3226                           ;main.c: 102: do { TRISB3 = 1; } while(0);
  3227  0407  0021               	movlb	1	; select bank1
  3228  0408  158D               	bsf	13,3	;volatile
  3229                           
  3230                           ;main.c: 103: Bq32k_Time_Init();
  3231  0409  3189  216B  3183   	fcall	_Bq32k_Time_Init
  3232                           
  3233                           ;main.c: 104: SendCmd_1621(0x52);
  3234  040C  3052               	movlw	82
  3235  040D  3188  20BB  3183   	fcall	_SendCmd_1621
  3236                           
  3237                           ;main.c: 105: SendCmd_1621(0X28);
  3238  0410  3028               	movlw	40
  3239  0411  3188  20BB  3183   	fcall	_SendCmd_1621
  3240                           
  3241                           ;main.c: 106: SendCmd_1621(0x02);
  3242  0414  3002               	movlw	2
  3243  0415  3188  20BB  3183   	fcall	_SendCmd_1621
  3244                           
  3245                           ;main.c: 107: SendCmd_1621(0x06);
  3246  0418  3006               	movlw	6
  3247  0419  3188  20BB  3183   	fcall	_SendCmd_1621
  3248                           
  3249                           ;main.c: 109: WriteAll_1621(0,Dis_TAB+17,4);
  3250  041C  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3251  041D  0020               	movlb	0	; select bank0
  3252  041E  00A0               	movwf	WriteAll_1621@p
  3253  041F  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3254  0420  00A1               	movwf	WriteAll_1621@p+1
  3255  0421  3004               	movlw	4
  3256  0422  00E2               	movwf	??_main
  3257  0423  0862               	movf	??_main,w
  3258  0424  00A2               	movwf	WriteAll_1621@cnt
  3259  0425  3000               	movlw	0
  3260  0426  318B  23A5  3183   	fcall	_WriteAll_1621
  3261                           
  3262                           ;main.c: 111: time_count = 0;
  3263  0429  0020               	movlb	0	; select bank0
  3264  042A  01ED               	clrf	_time_count
  3265                           
  3266                           ;main.c: 112: Record_flag = 0;
  3267  042B  01EB               	clrf	_Record_flag
  3268                           
  3269                           ;main.c: 113: Cur_temperature_time_ch1 = 0;
  3270  042C  0021               	movlb	1	; select bank1
  3271  042D  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3272                           
  3273                           ;main.c: 114: Cur_temperature_time_ch2 = 0;
  3274  042E  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3275                           
  3276                           ;main.c: 115: CH1_temperature = 0;
  3277  042F  0020               	movlb	0	; select bank0
  3278  0430  01E9               	clrf	_CH1_temperature
  3279  0431  01EA               	clrf	_CH1_temperature+1
  3280                           
  3281                           ;main.c: 116: CH2_temperature = 0;
  3282  0432  01F8               	clrf	_CH2_temperature
  3283  0433  01F9               	clrf	_CH2_temperature+1
  3284                           
  3285                           ;main.c: 117: CH1_state = 0;
  3286  0434  0021               	movlb	1	; select bank1
  3287  0435  01B4               	clrf	_CH1_state^(0+128)
  3288                           
  3289                           ;main.c: 118: CH2_state = 0;
  3290  0436  01B5               	clrf	_CH2_state^(0+128)
  3291                           
  3292                           ;main.c: 119: bat_data = 0;
  3293  0437  0022               	movlb	2	; select bank2
  3294  0438  01E3               	clrf	main@bat_data^(0+256)
  3295  0439  01E4               	clrf	(main@bat_data+1)^(0+256)
  3296                           
  3297                           ;main.c: 120: Cur_Save_Index = 0x2000;
  3298  043A  3000               	movlw	0
  3299  043B  0021               	movlb	1	; select bank1
  3300  043C  00AE               	movwf	_Cur_Save_Index^(0+128)
  3301  043D  3020               	movlw	32
  3302  043E  00AF               	movwf	(_Cur_Save_Index^(0+128)+1)
  3303                           
  3304                           ;main.c: 121: Serach_Flash_Head();
  3305  043F  318E  2681  3183   	fcall	_Serach_Flash_Head
  3306  0442  0064               	clrwdt	;# 
  3307                           
  3308                           ;main.c: 123: SWDTEN = 1;
  3309  0443  0021               	movlb	1	; select bank1
  3310  0444  1417               	bsf	23,0	;volatile
  3311                           
  3312                           ;main.c: 148: (INTCONbits.GIE = 1);
  3313  0445  178B               	bsf	11,7	;volatile
  3314                           
  3315                           ;main.c: 151: (INTCONbits.PEIE = 1);
  3316  0446  170B               	bsf	11,6	;volatile
  3317  0447                     l5491:	
  3318                           ;main.c: 159: while (1)
  3319                           
  3320                           
  3321                           ;main.c: 160: {
  3322                           ;main.c: 165: bat_data = bat_data + ADC_GetConversion(ADC);
  3323  0447  300B               	movlw	11
  3324  0448  3189  2136  3183   	fcall	_ADC_GetConversion
  3325  044B  0022               	movlb	2	; select bank2
  3326  044C  0863               	movf	main@bat_data^(0+256),w
  3327  044D  0773               	addwf	?_ADC_GetConversion,w
  3328  044E  00E3               	movwf	main@bat_data^(0+256)
  3329  044F  0864               	movf	(main@bat_data+1)^(0+256),w
  3330  0450  3D74               	addwfc	?_ADC_GetConversion+1,w
  3331  0451  00E4               	movwf	(main@bat_data+1)^(0+256)
  3332                           
  3333                           ;main.c: 166: i++;
  3334  0452  3001               	movlw	1
  3335  0453  0020               	movlb	0	; select bank0
  3336  0454  00E2               	movwf	??_main
  3337  0455  0862               	movf	??_main,w
  3338  0456  0022               	movlb	2	; select bank2
  3339  0457  07E2               	addwf	main@i^(0+256),f
  3340                           
  3341                           ;main.c: 167: if(i == 16)
  3342  0458  3010               	movlw	16
  3343  0459  0662               	xorwf	main@i^(0+256),w
  3344  045A  1D03               	btfss	3,2
  3345  045B  2C73               	goto	l5505
  3346                           
  3347                           ;main.c: 168: {
  3348                           ;main.c: 169: i = 0;
  3349  045C  01E2               	clrf	main@i^(0+256)
  3350                           
  3351                           ;main.c: 170: bat_data = bat_data>>4;
  3352  045D  0E63               	swapf	main@bat_data^(0+256),w
  3353  045E  390F               	andlw	15
  3354  045F  00E3               	movwf	main@bat_data^(0+256)
  3355  0460  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3356  0461  39F0               	andlw	240
  3357  0462  04E3               	iorwf	main@bat_data^(0+256),f
  3358  0463  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3359  0464  390F               	andlw	15
  3360  0465  00E4               	movwf	(main@bat_data^(0+256)+1)
  3361                           
  3362                           ;main.c: 171: if( bat_data < 800)
  3363  0466  3003               	movlw	3
  3364  0467  0264               	subwf	(main@bat_data+1)^(0+256),w
  3365  0468  3020               	movlw	32
  3366  0469  1903               	skipnz
  3367  046A  0263               	subwf	main@bat_data^(0+256),w
  3368  046B  1803               	skipnc
  3369  046C  2C70               	goto	l5503
  3370                           
  3371                           ;main.c: 172: {
  3372                           ;main.c: 173: do { LATA2 = 0; } while(0);
  3373  046D  110C               	bcf	12,2	;volatile
  3374  046E                     l346:	
  3375                           ;main.c: 174: while(1)asm("clrwdt");
  3376                           
  3377  046E  0064               	clrwdt	;# 
  3378  046F  2C6E               	goto	l346
  3379  0470                     l5503:	
  3380                           
  3381                           ;main.c: 175: }
  3382                           ;main.c: 176: bat_data = 0;
  3383  0470  0022               	movlb	2	; select bank2
  3384  0471  01E3               	clrf	main@bat_data^(0+256)
  3385  0472  01E4               	clrf	(main@bat_data+1)^(0+256)
  3386  0473                     l5505:	
  3387                           
  3388                           ;main.c: 177: }
  3389                           ;main.c: 182: temperature_process();
  3390  0473  318B  2372  3183   	fcall	_temperature_process
  3391                           
  3392                           ;main.c: 183: Key_Process();
  3393  0476  3185  25FD  3183   	fcall	_Key_Process
  3394                           
  3395                           ;main.c: 184: Save_process();
  3396  0479  318E  26D5  3183   	fcall	_Save_process
  3397  047C  0063               	sleep	;# 
  3398                           
  3399                           ;main.c: 187: time_count++;
  3400  047D  3001               	movlw	1
  3401  047E  0020               	movlb	0	; select bank0
  3402  047F  00E2               	movwf	??_main
  3403  0480  0862               	movf	??_main,w
  3404  0481  07ED               	addwf	_time_count,f
  3405                           
  3406                           ;main.c: 188: if(time_count == 4 || time_count > 12) time_count = 0;
  3407  0482  3004               	movlw	4
  3408  0483  066D               	xorwf	_time_count,w
  3409  0484  1903               	btfsc	3,2
  3410  0485  2C8A               	goto	l5517
  3411  0486  300D               	movlw	13
  3412  0487  026D               	subwf	_time_count,w
  3413  0488  1C03               	skipc
  3414  0489  2C8B               	goto	l5519
  3415  048A                     l5517:	
  3416  048A  01ED               	clrf	_time_count
  3417  048B                     l5519:	
  3418                           
  3419                           ;main.c: 190: Cur_temperature_time_ch1++;
  3420  048B  3001               	movlw	1
  3421  048C  00E2               	movwf	??_main
  3422  048D  0862               	movf	??_main,w
  3423  048E  0021               	movlb	1	; select bank1
  3424  048F  07B6               	addwf	_Cur_temperature_time_ch1^(0+128),f
  3425                           
  3426                           ;main.c: 191: if(Cur_temperature_time_ch1 > 130)
  3427  0490  3083               	movlw	131
  3428  0491  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3429  0492  1803               	btfsc	3,0
  3430                           
  3431                           ;main.c: 192: {
  3432                           ;main.c: 193: Cur_temperature_time_ch1 = 0;
  3433  0493  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3434                           
  3435                           ;main.c: 194: }
  3436                           ;main.c: 196: Cur_temperature_time_ch2++;
  3437  0494  3001               	movlw	1
  3438  0495  0020               	movlb	0	; select bank0
  3439  0496  00E2               	movwf	??_main
  3440  0497  0862               	movf	??_main,w
  3441  0498  0021               	movlb	1	; select bank1
  3442  0499  07B7               	addwf	_Cur_temperature_time_ch2^(0+128),f
  3443                           
  3444                           ;main.c: 197: if(Cur_temperature_time_ch2 > 130)
  3445  049A  3083               	movlw	131
  3446  049B  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3447  049C  1C03               	skipc
  3448  049D  2C47               	goto	l5491
  3449                           
  3450                           ;main.c: 198: {
  3451                           ;main.c: 199: Cur_temperature_time_ch2= 0;
  3452  049E  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3453  049F  2C47               	goto	l5491
  3454  04A0                     __end_of_main:	
  3455                           
  3456                           	psect	text1
  3457  0F9C                     __ptext1:	
  3458 ;; *************** function _maxim_31856_init *****************
  3459 ;; Defined at:
  3460 ;;		line 64 in file "mcc_generated_files/max31856.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;Total ram usage:        1 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    5
  3481 ;; This function calls:
  3482 ;;		_maxim_31856_write_register
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _maxim_31856_init
  3490  0F9C                     _maxim_31856_init:	
  3491                           
  3492                           ;max31856.c: 67: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3496  0F9C  3015               	movlw	21
  3497  0F9D  00F6               	movwf	??_maxim_31856_init
  3498  0F9E  0876               	movf	??_maxim_31856_init,w
  3499  0F9F  00FA               	movwf	_uch_cr0
  3500                           
  3501                           ;max31856.c: 69: uch_cr1&= (uint8_t) 0x0F ;
  3502  0FA0  300F               	movlw	15
  3503  0FA1  00F6               	movwf	??_maxim_31856_init
  3504  0FA2  0876               	movf	??_maxim_31856_init,w
  3505  0FA3  0021               	movlb	1	; select bank1
  3506  0FA4  05BE               	andwf	_uch_cr1^(0+128),f
  3507                           
  3508                           ;max31856.c: 70: uch_cr1|=(uint8_t) 0x07;
  3509  0FA5  3007               	movlw	7
  3510  0FA6  00F6               	movwf	??_maxim_31856_init
  3511  0FA7  0876               	movf	??_maxim_31856_init,w
  3512  0FA8  04BE               	iorwf	_uch_cr1^(0+128),f
  3513                           
  3514                           ;max31856.c: 72: uch_mask=(uint8_t)0x00 ;
  3515  0FA9  01C2               	clrf	_uch_mask^(0+128)
  3516                           
  3517                           ;max31856.c: 74: maxim_31856_write_register(0x80, uch_cr0);
  3518  0FAA  087A               	movf	_uch_cr0,w
  3519  0FAB  00F6               	movwf	??_maxim_31856_init
  3520  0FAC  0876               	movf	??_maxim_31856_init,w
  3521  0FAD  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3522  0FAE  3080               	movlw	128
  3523  0FAF  3188  2042  318F   	fcall	_maxim_31856_write_register
  3524                           
  3525                           ;max31856.c: 75: maxim_31856_write_register(0x81, uch_cr1);
  3526  0FB2  0021               	movlb	1	; select bank1
  3527  0FB3  083E               	movf	_uch_cr1^(0+128),w
  3528  0FB4  00F6               	movwf	??_maxim_31856_init
  3529  0FB5  0876               	movf	??_maxim_31856_init,w
  3530  0FB6  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3531  0FB7  3081               	movlw	129
  3532  0FB8  3188  2042  318F   	fcall	_maxim_31856_write_register
  3533                           
  3534                           ;max31856.c: 76: maxim_31856_write_register(0x82,uch_mask);
  3535  0FBB  0021               	movlb	1	; select bank1
  3536  0FBC  0842               	movf	_uch_mask^(0+128),w
  3537  0FBD  00F6               	movwf	??_maxim_31856_init
  3538  0FBE  0876               	movf	??_maxim_31856_init,w
  3539  0FBF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3540  0FC0  3082               	movlw	130
  3541  0FC1  3188  2042  318F   	fcall	_maxim_31856_write_register
  3542                           
  3543                           ;max31856.c: 79: maxim_31856_write_register(0x83,0x7F);
  3544  0FC4  307F               	movlw	127
  3545  0FC5  00F6               	movwf	??_maxim_31856_init
  3546  0FC6  0876               	movf	??_maxim_31856_init,w
  3547  0FC7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3548  0FC8  3083               	movlw	131
  3549  0FC9  3188  2042  318F   	fcall	_maxim_31856_write_register
  3550                           
  3551                           ;max31856.c: 80: maxim_31856_write_register(0x84,0xC0);
  3552  0FCC  30C0               	movlw	192
  3553  0FCD  00F6               	movwf	??_maxim_31856_init
  3554  0FCE  0876               	movf	??_maxim_31856_init,w
  3555  0FCF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3556  0FD0  3084               	movlw	132
  3557  0FD1  3188  2042  318F   	fcall	_maxim_31856_write_register
  3558                           
  3559                           ;max31856.c: 82: maxim_31856_write_register(0x85,0x7F);
  3560  0FD4  307F               	movlw	127
  3561  0FD5  00F6               	movwf	??_maxim_31856_init
  3562  0FD6  0876               	movf	??_maxim_31856_init,w
  3563  0FD7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3564  0FD8  3085               	movlw	133
  3565  0FD9  3188  2042  318F   	fcall	_maxim_31856_write_register
  3566                           
  3567                           ;max31856.c: 83: maxim_31856_write_register(0x86,0xFF);
  3568  0FDC  30FF               	movlw	255
  3569  0FDD  00F6               	movwf	??_maxim_31856_init
  3570  0FDE  0876               	movf	??_maxim_31856_init,w
  3571  0FDF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3572  0FE0  3086               	movlw	134
  3573  0FE1  3188  2042  318F   	fcall	_maxim_31856_write_register
  3574                           
  3575                           ;max31856.c: 84: maxim_31856_write_register(0x87,0x80);
  3576  0FE4  3080               	movlw	128
  3577  0FE5  00F6               	movwf	??_maxim_31856_init
  3578  0FE6  0876               	movf	??_maxim_31856_init,w
  3579  0FE7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3580  0FE8  3087               	movlw	135
  3581  0FE9  3188  2042  318F   	fcall	_maxim_31856_write_register
  3582                           
  3583                           ;max31856.c: 85: maxim_31856_write_register(0x88,0x00);
  3584  0FEC  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3585  0FED  3088               	movlw	136
  3586  0FEE  3188  2042  318F   	fcall	_maxim_31856_write_register
  3587                           
  3588                           ;max31856.c: 87: maxim_31856_write_register(0x89,0x00);
  3589  0FF1  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3590  0FF2  3089               	movlw	137
  3591  0FF3  3188  2042  318F   	fcall	_maxim_31856_write_register
  3592                           
  3593                           ;max31856.c: 91: maxim_31856_write_register(0x8A,0x00);
  3594  0FF6  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3595  0FF7  308A               	movlw	138
  3596  0FF8  3188  2042  318F   	fcall	_maxim_31856_write_register
  3597                           
  3598                           ;max31856.c: 92: maxim_31856_write_register(0x8B,0x00);
  3599  0FFB  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3600  0FFC  308B               	movlw	139
  3601  0FFD  3188  2042         	fcall	_maxim_31856_write_register
  3602  0FFF  0008               	return
  3603  1000                     __end_of_maxim_31856_init:	
  3604                           
  3605                           	psect	text2
  3606  0E81                     __ptext2:	
  3607 ;; *************** function _Serach_Flash_Head *****************
  3608 ;; Defined at:
  3609 ;;		line 42 in file "mcc_generated_files/save.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  i               2   23[BANK0 ] unsigned int 
  3614 ;;  data            2   21[BANK0 ] unsigned int 
  3615 ;;  count           1   20[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    7
  3632 ;; This function calls:
  3633 ;;		_FLASH_ReadWord
  3634 ;;		_Write_Flash_finish
  3635 ;; This function is called by:
  3636 ;;		_main
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _Serach_Flash_Head
  3642  0E81                     _Serach_Flash_Head:	
  3643                           
  3644                           ;save.c: 44: unsigned int i=0;
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _Serach_Flash_Head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3648  0E81  0020               	movlb	0	; select bank0
  3649  0E82  01B7               	clrf	Serach_Flash_Head@i
  3650  0E83  01B8               	clrf	Serach_Flash_Head@i+1
  3651                           
  3652                           ;save.c: 45: unsigned int data=0;
  3653  0E84  01B5               	clrf	Serach_Flash_Head@data
  3654  0E85  01B6               	clrf	Serach_Flash_Head@data+1
  3655                           
  3656                           ;save.c: 46: unsigned char count =0;
  3657  0E86  01B4               	clrf	Serach_Flash_Head@count
  3658                           
  3659                           ;save.c: 47: for(i = 0x2000; i<16384;i++ )
  3660  0E87  3000               	movlw	0
  3661  0E88  00B7               	movwf	Serach_Flash_Head@i
  3662  0E89  3020               	movlw	32
  3663  0E8A  00B8               	movwf	Serach_Flash_Head@i+1
  3664  0E8B                     L1:	
  3665  0E8B  3040               	movlw	64
  3666  0E8C  0238               	subwf	Serach_Flash_Head@i+1,w
  3667  0E8D  3000               	movlw	0
  3668  0E8E  1903               	skipnz
  3669  0E8F  0237               	subwf	Serach_Flash_Head@i,w
  3670  0E90  1803               	btfsc	3,0
  3671  0E91  0008               	return
  3672                           
  3673                           ;save.c: 48: {
  3674                           ;save.c: 49: data = FLASH_ReadWord(i);
  3675  0E92  0838               	movf	Serach_Flash_Head@i+1,w
  3676  0E93  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3677  0E94  0837               	movf	Serach_Flash_Head@i,w
  3678  0E95  00F3               	movwf	FLASH_ReadWord@flashAddr
  3679  0E96  3189  211D  318E   	fcall	_FLASH_ReadWord
  3680  0E99  0874               	movf	?_FLASH_ReadWord+1,w
  3681  0E9A  0020               	movlb	0	; select bank0
  3682  0E9B  00B6               	movwf	Serach_Flash_Head@data+1
  3683  0E9C  0873               	movf	?_FLASH_ReadWord,w
  3684  0E9D  00B5               	movwf	Serach_Flash_Head@data
  3685                           
  3686                           ;save.c: 51: if( data == 0x1555 )
  3687  0E9E  3055               	movlw	85
  3688  0E9F  0635               	xorwf	Serach_Flash_Head@data,w
  3689  0EA0  3015               	movlw	21
  3690  0EA1  1903               	skipnz
  3691  0EA2  0636               	xorwf	Serach_Flash_Head@data+1,w
  3692  0EA3  1D03               	btfss	3,2
  3693  0EA4  2EAA               	goto	l5287
  3694                           
  3695                           ;save.c: 52: {
  3696                           ;save.c: 53: count++;
  3697  0EA5  3001               	movlw	1
  3698  0EA6  00B3               	movwf	??_Serach_Flash_Head
  3699  0EA7  0833               	movf	??_Serach_Flash_Head,w
  3700  0EA8  07B4               	addwf	Serach_Flash_Head@count,f
  3701                           
  3702                           ;save.c: 54: }
  3703  0EA9  2ECF               	goto	l5305
  3704  0EAA                     l5287:	
  3705                           
  3706                           ;save.c: 55: else
  3707                           ;save.c: 56: {
  3708                           ;save.c: 57: if( data == 0x3fff && count >1 )
  3709  0EAA  0A35               	incf	Serach_Flash_Head@data,w
  3710  0EAB  303F               	movlw	63
  3711  0EAC  1903               	skipnz
  3712  0EAD  0636               	xorwf	Serach_Flash_Head@data+1,w
  3713  0EAE  1D03               	btfss	3,2
  3714  0EAF  2EBC               	goto	l5295
  3715  0EB0  3002               	movlw	2
  3716  0EB1  0234               	subwf	Serach_Flash_Head@count,w
  3717  0EB2  1C03               	skipc
  3718  0EB3  2EBC               	goto	l5295
  3719                           
  3720                           ;save.c: 58: {
  3721                           ;save.c: 59: Cur_Save_Index = i;
  3722  0EB4  0838               	movf	Serach_Flash_Head@i+1,w
  3723  0EB5  0021               	movlb	1	; select bank1
  3724  0EB6  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3725  0EB7  0020               	movlb	0	; select bank0
  3726  0EB8  0837               	movf	Serach_Flash_Head@i,w
  3727  0EB9  0021               	movlb	1	; select bank1
  3728  0EBA  00AE               	movwf	_Cur_Save_Index^(0+128)
  3729                           
  3730                           ;save.c: 60: break;
  3731  0EBB  0008               	return
  3732  0EBC                     l5295:	
  3733                           ;save.c: 61: }
  3734                           
  3735                           
  3736                           ;save.c: 62: else if( data == 0x3fff )
  3737  0EBC  0020               	movlb	0	; select bank0
  3738  0EBD  0A35               	incf	Serach_Flash_Head@data,w
  3739  0EBE  303F               	movlw	63
  3740  0EBF  1903               	skipnz
  3741  0EC0  0636               	xorwf	Serach_Flash_Head@data+1,w
  3742  0EC1  1D03               	btfss	3,2
  3743  0EC2  2ECD               	goto	l5303
  3744                           
  3745                           ;save.c: 63: {
  3746                           ;save.c: 64: Cur_Save_Index = i;
  3747  0EC3  0838               	movf	Serach_Flash_Head@i+1,w
  3748  0EC4  0021               	movlb	1	; select bank1
  3749  0EC5  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3750  0EC6  0020               	movlb	0	; select bank0
  3751  0EC7  0837               	movf	Serach_Flash_Head@i,w
  3752  0EC8  0021               	movlb	1	; select bank1
  3753  0EC9  00AE               	movwf	_Cur_Save_Index^(0+128)
  3754                           
  3755                           ;save.c: 65: Write_Flash_finish();
  3756  0ECA  318A  22E3         	fcall	_Write_Flash_finish
  3757                           
  3758                           ;save.c: 66: break;
  3759  0ECC  0008               	return
  3760  0ECD                     l5303:	
  3761                           ;save.c: 67: }
  3762                           
  3763                           
  3764                           ;save.c: 68: else
  3765                           ;save.c: 69: {
  3766                           ;save.c: 70: count = 0;
  3767  0ECD  0020               	movlb	0	; select bank0
  3768  0ECE  01B4               	clrf	Serach_Flash_Head@count
  3769  0ECF                     l5305:	
  3770  0ECF  3001               	movlw	1
  3771  0ED0  0020               	movlb	0	; select bank0
  3772  0ED1  07B7               	addwf	Serach_Flash_Head@i,f
  3773  0ED2  3000               	movlw	0
  3774  0ED3  3DB8               	addwfc	Serach_Flash_Head@i+1,f
  3775  0ED4  2E8B               	goto	L1
  3776  0ED5                     __end_of_Serach_Flash_Head:	
  3777                           
  3778                           	psect	text3
  3779  0ED5                     __ptext3:	
  3780 ;; *************** function _Save_process *****************
  3781 ;; Defined at:
  3782 ;;		line 120 in file "mcc_generated_files/save.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  var_time        2   49[BANK0 ] unsigned int 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3800 ;;Total ram usage:        4 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    9
  3803 ;; This function calls:
  3804 ;;		_Calculate_Time
  3805 ;;		_Save_Write_word
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _Save_process
  3813  0ED5                     _Save_process:	
  3814                           
  3815                           ;save.c: 122: unsigned int var_time=0;
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3819  0ED5  0020               	movlb	0	; select bank0
  3820  0ED6  01D1               	clrf	Save_process@var_time
  3821  0ED7  01D2               	clrf	Save_process@var_time+1
  3822                           
  3823                           ;save.c: 123: if( time_count == 1 && Record_flag == 1 )
  3824  0ED8  036D               	decf	_time_count,w
  3825  0ED9  1D03               	btfss	3,2
  3826  0EDA  2F07               	goto	l5391
  3827  0EDB  036B               	decf	_Record_flag,w
  3828  0EDC  1D03               	btfss	3,2
  3829  0EDD  2F07               	goto	l5391
  3830                           
  3831                           ;save.c: 124: {
  3832                           ;save.c: 125: if(Cur_temperature_time_ch1 > 120)
  3833  0EDE  3079               	movlw	121
  3834  0EDF  0021               	movlb	1	; select bank1
  3835  0EE0  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3836  0EE1  1C03               	skipc
  3837  0EE2  0008               	return
  3838                           
  3839                           ;save.c: 126: {
  3840                           ;save.c: 127: var_time = Calculate_Time();
  3841  0EE3  3182  220B  318E   	fcall	_Calculate_Time
  3842  0EE6  0020               	movlb	0	; select bank0
  3843  0EE7  00CF               	movwf	??_Save_process
  3844  0EE8  01D0               	clrf	??_Save_process+1
  3845  0EE9  084F               	movf	??_Save_process,w
  3846  0EEA  00D1               	movwf	Save_process@var_time
  3847  0EEB  0850               	movf	??_Save_process+1,w
  3848  0EEC  00D2               	movwf	Save_process@var_time+1
  3849                           
  3850                           ;save.c: 128: var_time |= 0x100;
  3851  0EED  1452               	bsf	Save_process@var_time+1,0
  3852                           
  3853                           ;save.c: 129: if(CH1_state == 1) var_time |= 0x400;
  3854  0EEE  0021               	movlb	1	; select bank1
  3855  0EEF  0334               	decf	_CH1_state^(0+128),w
  3856  0EF0  1D03               	btfss	3,2
  3857  0EF1  2EF4               	goto	l966
  3858  0EF2  0020               	movlb	0	; select bank0
  3859  0EF3  1552               	bsf	Save_process@var_time+1,2
  3860  0EF4                     l966:	
  3861                           
  3862                           ;save.c: 131: var_time |= 0x1000;
  3863  0EF4  0020               	movlb	0	; select bank0
  3864  0EF5  1652               	bsf	Save_process@var_time+1,4
  3865                           
  3866                           ;save.c: 133: Save_Write_word(var_time);
  3867  0EF6  0852               	movf	Save_process@var_time+1,w
  3868  0EF7  00B4               	movwf	Save_Write_word@data+1
  3869  0EF8  0851               	movf	Save_process@var_time,w
  3870  0EF9  00B3               	movwf	Save_Write_word@data
  3871  0EFA  318C  240F  318E   	fcall	_Save_Write_word
  3872                           
  3873                           ;save.c: 134: Save_Write_word(CH1_temperature);
  3874  0EFD  0020               	movlb	0	; select bank0
  3875  0EFE  086A               	movf	_CH1_temperature+1,w
  3876  0EFF  00B4               	movwf	Save_Write_word@data+1
  3877  0F00  0869               	movf	_CH1_temperature,w
  3878  0F01  00B3               	movwf	Save_Write_word@data
  3879  0F02  318C  240F         	fcall	_Save_Write_word
  3880                           
  3881                           ;save.c: 136: Cur_temperature_time_ch1 = 0;
  3882  0F04  0021               	movlb	1	; select bank1
  3883  0F05  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3884                           
  3885                           ;save.c: 137: }
  3886                           ;save.c: 138: }
  3887  0F06  0008               	return
  3888  0F07                     l5391:	
  3889                           
  3890                           ;save.c: 139: else if(time_count == 3 && Record_flag == 1)
  3891  0F07  3003               	movlw	3
  3892  0F08  0020               	movlb	0	; select bank0
  3893  0F09  066D               	xorwf	_time_count,w
  3894  0F0A  1D03               	btfss	3,2
  3895  0F0B  0008               	return
  3896  0F0C  036B               	decf	_Record_flag,w
  3897  0F0D  1D03               	btfss	3,2
  3898  0F0E  0008               	return
  3899                           
  3900                           ;save.c: 140: {
  3901                           ;save.c: 141: if(Cur_temperature_time_ch2 > 120)
  3902  0F0F  3079               	movlw	121
  3903  0F10  0021               	movlb	1	; select bank1
  3904  0F11  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3905  0F12  1C03               	skipc
  3906  0F13  0008               	return
  3907                           
  3908                           ;save.c: 142: {
  3909                           ;save.c: 143: var_time = Calculate_Time();
  3910  0F14  3182  220B  318E   	fcall	_Calculate_Time
  3911  0F17  0020               	movlb	0	; select bank0
  3912  0F18  00CF               	movwf	??_Save_process
  3913  0F19  01D0               	clrf	??_Save_process+1
  3914  0F1A  084F               	movf	??_Save_process,w
  3915  0F1B  00D1               	movwf	Save_process@var_time
  3916  0F1C  0850               	movf	??_Save_process+1,w
  3917  0F1D  00D2               	movwf	Save_process@var_time+1
  3918                           
  3919                           ;save.c: 144: var_time |= 0x200;
  3920  0F1E  14D2               	bsf	Save_process@var_time+1,1
  3921                           
  3922                           ;save.c: 145: if(CH2_state == 1) var_time |= 0x800;
  3923  0F1F  0021               	movlb	1	; select bank1
  3924  0F20  0335               	decf	_CH2_state^(0+128),w
  3925  0F21  1D03               	btfss	3,2
  3926  0F22  2F25               	goto	l970
  3927  0F23  0020               	movlb	0	; select bank0
  3928  0F24  15D2               	bsf	Save_process@var_time+1,3
  3929  0F25                     l970:	
  3930                           
  3931                           ;save.c: 147: var_time |= 0x1000;
  3932  0F25  0020               	movlb	0	; select bank0
  3933  0F26  1652               	bsf	Save_process@var_time+1,4
  3934                           
  3935                           ;save.c: 149: Save_Write_word(var_time);
  3936  0F27  0852               	movf	Save_process@var_time+1,w
  3937  0F28  00B4               	movwf	Save_Write_word@data+1
  3938  0F29  0851               	movf	Save_process@var_time,w
  3939  0F2A  00B3               	movwf	Save_Write_word@data
  3940  0F2B  318C  240F  318E   	fcall	_Save_Write_word
  3941                           
  3942                           ;save.c: 150: Save_Write_word(CH2_temperature);
  3943  0F2E  0879               	movf	_CH2_temperature+1,w
  3944  0F2F  0020               	movlb	0	; select bank0
  3945  0F30  00B4               	movwf	Save_Write_word@data+1
  3946  0F31  0878               	movf	_CH2_temperature,w
  3947  0F32  00B3               	movwf	Save_Write_word@data
  3948  0F33  318C  240F         	fcall	_Save_Write_word
  3949                           
  3950                           ;save.c: 152: Cur_temperature_time_ch2 = 0;
  3951  0F35  0021               	movlb	1	; select bank1
  3952  0F36  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3953  0F37  0008               	return
  3954  0F38                     __end_of_Save_process:	
  3955                           
  3956                           	psect	text4
  3957  08A6                     __ptext4:	
  3958 ;; *************** function _SYSTEM_Initialize *****************
  3959 ;; Defined at:
  3960 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, pclath, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    4
  3981 ;; This function calls:
  3982 ;;		_ADC_Initialize
  3983 ;;		_EUSART_Initialize
  3984 ;;		_FVR_Initialize
  3985 ;;		_OSCILLATOR_Initialize
  3986 ;;		_PIN_MANAGER_Initialize
  3987 ;;		_SPI_Initialize
  3988 ;;		_TMR0_Initialize
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _SYSTEM_Initialize
  3996  08A6                     _SYSTEM_Initialize:	
  3997                           
  3998                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3999                           
  4000                           ;incstack = 0
  4001                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4002  08A6  3197  27EF  3188   	fcall	_OSCILLATOR_Initialize
  4003                           
  4004                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  4005  08A9  318A  221B  3188   	fcall	_PIN_MANAGER_Initialize
  4006                           
  4007                           ;mcc.c: 73: SPI_Initialize();
  4008  08AC  3188  2001  3188   	fcall	_SPI_Initialize
  4009                           
  4010                           ;mcc.c: 74: EUSART_Initialize();
  4011  08AF  3188  2036  3188   	fcall	_EUSART_Initialize
  4012                           
  4013                           ;mcc.c: 75: ADC_Initialize();
  4014  08B2  3188  201B  3188   	fcall	_ADC_Initialize
  4015                           
  4016                           ;mcc.c: 76: FVR_Initialize();
  4017  08B5  3197  27E6  3188   	fcall	_FVR_Initialize
  4018                           
  4019                           ;mcc.c: 77: TMR0_Initialize();
  4020  08B8  3188  205F         	fcall	_TMR0_Initialize
  4021  08BA  0008               	return
  4022  08BB                     __end_of_SYSTEM_Initialize:	
  4023                           
  4024                           	psect	text5
  4025  085F                     __ptext5:	
  4026 ;; *************** function _TMR0_Initialize *****************
  4027 ;; Defined at:
  4028 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    3
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_SYSTEM_Initialize
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _TMR0_Initialize
  4058  085F                     _TMR0_Initialize:	
  4059                           
  4060                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  4064  085F  0021               	movlb	1	; select bank1
  4065  0860  0815               	movf	21,w	;volatile
  4066  0861  39C0               	andlw	192
  4067  0862  3817               	iorlw	23
  4068  0863  0095               	movwf	21	;volatile
  4069                           
  4070                           ;tmr0.c: 73: TMR0 = 0x64;
  4071  0864  3064               	movlw	100
  4072  0865  0020               	movlb	0	; select bank0
  4073  0866  0095               	movwf	21	;volatile
  4074                           
  4075                           ;tmr0.c: 76: timer0ReloadVal = 100;
  4076  0867  3064               	movlw	100
  4077  0868  00F3               	movwf	??_TMR0_Initialize
  4078  0869  0873               	movf	??_TMR0_Initialize,w
  4079  086A  0021               	movlb	1	; select bank1
  4080  086B  00EF               	movwf	_timer0ReloadVal^(0+128)	;volatile
  4081                           
  4082                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  4083  086C  110B               	bcf	11,2	;volatile
  4084                           
  4085                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  4086  086D  168B               	bsf	11,5	;volatile
  4087  086E  0008               	return
  4088  086F                     __end_of_TMR0_Initialize:	
  4089                           
  4090                           	psect	text6
  4091  0801                     __ptext6:	
  4092 ;; *************** function _SPI_Initialize *****************
  4093 ;; Defined at:
  4094 ;;		line 64 in file "mcc_generated_files/spi.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;Total ram usage:        0 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    3
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_SYSTEM_Initialize
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _SPI_Initialize
  4124  0801                     _SPI_Initialize:	
  4125                           
  4126                           ;spi.c: 68: SSP1STAT = 0x00;
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  4130  0801  0024               	movlb	4	; select bank4
  4131  0802  0194               	clrf	20	;volatile
  4132                           
  4133                           ;spi.c: 71: SSP1CON1 = 0x30;
  4134  0803  3030               	movlw	48
  4135  0804  0095               	movwf	21	;volatile
  4136                           
  4137                           ;spi.c: 74: SSP1ADD = 0x00;
  4138  0805  0192               	clrf	18	;volatile
  4139  0806  0008               	return
  4140  0807                     __end_of_SPI_Initialize:	
  4141                           
  4142                           	psect	text7
  4143  0A1B                     __ptext7:	
  4144 ;; *************** function _PIN_MANAGER_Initialize *****************
  4145 ;; Defined at:
  4146 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    3
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_SYSTEM_Initialize
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _PIN_MANAGER_Initialize
  4176  0A1B                     _PIN_MANAGER_Initialize:	
  4177                           
  4178                           ;pin_manager.c: 51: LATA = 0x7B;
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4182  0A1B  307B               	movlw	123
  4183  0A1C  0022               	movlb	2	; select bank2
  4184  0A1D  008C               	movwf	12	;volatile
  4185                           
  4186                           ;pin_manager.c: 52: TRISA = 0x80;
  4187  0A1E  3080               	movlw	128
  4188  0A1F  0021               	movlb	1	; select bank1
  4189  0A20  008C               	movwf	12	;volatile
  4190                           
  4191                           ;pin_manager.c: 53: ANSELA = 0x00;
  4192  0A21  0023               	movlb	3	; select bank3
  4193  0A22  018C               	clrf	12	;volatile
  4194                           
  4195                           ;pin_manager.c: 55: LATB = 0x00;
  4196  0A23  0022               	movlb	2	; select bank2
  4197  0A24  018D               	clrf	13	;volatile
  4198                           
  4199                           ;pin_manager.c: 56: TRISB = 0xFC;
  4200  0A25  30FC               	movlw	252
  4201  0A26  0021               	movlb	1	; select bank1
  4202  0A27  008D               	movwf	13	;volatile
  4203                           
  4204                           ;pin_manager.c: 57: ANSELB = 0x10;
  4205  0A28  3010               	movlw	16
  4206  0A29  0023               	movlb	3	; select bank3
  4207  0A2A  008D               	movwf	13	;volatile
  4208                           
  4209                           ;pin_manager.c: 58: WPUB = 0x2C;
  4210  0A2B  302C               	movlw	44
  4211  0A2C  0024               	movlb	4	; select bank4
  4212  0A2D  008D               	movwf	13	;volatile
  4213                           
  4214                           ;pin_manager.c: 60: LATC = 0x07;
  4215  0A2E  3007               	movlw	7
  4216  0A2F  0022               	movlb	2	; select bank2
  4217  0A30  008E               	movwf	14	;volatile
  4218                           
  4219                           ;pin_manager.c: 61: TRISC = 0xD0;
  4220  0A31  30D0               	movlw	208
  4221  0A32  0021               	movlb	1	; select bank1
  4222  0A33  008E               	movwf	14	;volatile
  4223                           
  4224                           ;pin_manager.c: 62: ANSELC = 0x00;
  4225  0A34  0023               	movlb	3	; select bank3
  4226  0A35  018E               	clrf	14	;volatile
  4227                           
  4228                           ;pin_manager.c: 64: WPUE = 0x00;
  4229  0A36  0024               	movlb	4	; select bank4
  4230  0A37  0190               	clrf	16	;volatile
  4231                           
  4232                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4233  0A38  0021               	movlb	1	; select bank1
  4234  0A39  1395               	bcf	21,7	;volatile
  4235                           
  4236                           ;pin_manager.c: 68: APFCON = 0x00;
  4237  0A3A  0022               	movlb	2	; select bank2
  4238  0A3B  019D               	clrf	29	;volatile
  4239  0A3C  0008               	return
  4240  0A3D                     __end_of_PIN_MANAGER_Initialize:	
  4241                           
  4242                           	psect	text8
  4243  17EF                     __ptext8:	
  4244 ;; *************** function _OSCILLATOR_Initialize *****************
  4245 ;; Defined at:
  4246 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    3
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_SYSTEM_Initialize
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _OSCILLATOR_Initialize
  4276  17EF                     _OSCILLATOR_Initialize:	
  4277                           
  4278                           ;mcc.c: 82: OSCCON = 0x78;
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4282  17EF  3078               	movlw	120
  4283  17F0  0021               	movlb	1	; select bank1
  4284  17F1  0099               	movwf	25	;volatile
  4285                           
  4286                           ;mcc.c: 84: OSCSTAT = 0x00;
  4287  17F2  019A               	clrf	26	;volatile
  4288  17F3  0008               	return
  4289  17F4                     __end_of_OSCILLATOR_Initialize:	
  4290                           
  4291                           	psect	text9
  4292  17E6                     __ptext9:	
  4293 ;; *************** function _FVR_Initialize *****************
  4294 ;; Defined at:
  4295 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    3
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_SYSTEM_Initialize
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _FVR_Initialize
  4325  17E6                     _FVR_Initialize:	
  4326                           
  4327                           ;fvr.c: 60: FVRCON = 0x82;
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _FVR_Initialize: [wreg]
  4331  17E6  3082               	movlw	130
  4332  17E7  0022               	movlb	2	; select bank2
  4333  17E8  0097               	movwf	23	;volatile
  4334  17E9  0008               	return
  4335  17EA                     __end_of_FVR_Initialize:	
  4336                           
  4337                           	psect	text10
  4338  0836                     __ptext10:	
  4339 ;; *************** function _EUSART_Initialize *****************
  4340 ;; Defined at:
  4341 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_SYSTEM_Initialize
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _EUSART_Initialize
  4371  0836                     _EUSART_Initialize:	
  4372                           
  4373                           ;eusart.c: 60: BAUDCON = 0x48;
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in _EUSART_Initialize: [wreg]
  4377  0836  3048               	movlw	72
  4378  0837  0023               	movlb	3	; select bank3
  4379  0838  009F               	movwf	31	;volatile
  4380                           
  4381                           ;eusart.c: 63: RCSTA = 0x80;
  4382  0839  3080               	movlw	128
  4383  083A  009D               	movwf	29	;volatile
  4384                           
  4385                           ;eusart.c: 66: TXSTA = 0x26;
  4386  083B  3026               	movlw	38
  4387  083C  009E               	movwf	30	;volatile
  4388                           
  4389                           ;eusart.c: 69: SPBRGL = 0xA0;
  4390  083D  30A0               	movlw	160
  4391  083E  009B               	movwf	27	;volatile
  4392                           
  4393                           ;eusart.c: 72: SPBRGH = 0x01;
  4394  083F  3001               	movlw	1
  4395  0840  009C               	movwf	28	;volatile
  4396  0841  0008               	return
  4397  0842                     __end_of_EUSART_Initialize:	
  4398                           
  4399                           	psect	text11
  4400  081B                     __ptext11:	
  4401 ;; *************** function _ADC_Initialize *****************
  4402 ;; Defined at:
  4403 ;;		line 65 in file "mcc_generated_files/adc.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_SYSTEM_Initialize
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _ADC_Initialize
  4433  081B                     _ADC_Initialize:	
  4434                           
  4435                           ;adc.c: 69: ADCON0 = 0x01;
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4439  081B  3001               	movlw	1
  4440  081C  0021               	movlb	1	; select bank1
  4441  081D  009D               	movwf	29	;volatile
  4442                           
  4443                           ;adc.c: 72: ADCON1 = 0xE3;
  4444  081E  30E3               	movlw	227
  4445  081F  009E               	movwf	30	;volatile
  4446                           
  4447                           ;adc.c: 75: ADRESL = 0x00;
  4448  0820  019B               	clrf	27	;volatile
  4449                           
  4450                           ;adc.c: 78: ADRESH = 0x00;
  4451  0821  019C               	clrf	28	;volatile
  4452  0822  0008               	return
  4453  0823                     __end_of_ADC_Initialize:	
  4454                           
  4455                           	psect	text12
  4456  05FD                     __ptext12:	
  4457 ;; *************** function _Key_Process *****************
  4458 ;; Defined at:
  4459 ;;		line 42 in file "mcc_generated_files/key.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  i               2   64[BANK0 ] unsigned int 
  4464 ;;  data_temp       2   61[BANK0 ] unsigned int 
  4465 ;;  gKeyValue       1   63[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2  254[None  ] int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        6 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   12
  4482 ;; This function calls:
  4483 ;;		_EUSART_Write
  4484 ;;		_FLASH_ReadWord
  4485 ;;		_Key_Scan
  4486 ;;		_Save_Write_time
  4487 ;;		_SendCmd_1621
  4488 ;;		_Set_finish_flag
  4489 ;;		_Set_start_flag
  4490 ;;		_Write_Flash_finish
  4491 ;;		_Write_Flash_head
  4492 ;;		_temperature_process
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _Key_Process
  4500  05FD                     _Key_Process:	
  4501                           
  4502                           ;key.c: 44: unsigned char gKeyValue=0;
  4503                           
  4504                           ;incstack = 0
  4505                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4506  05FD  0020               	movlb	0	; select bank0
  4507  05FE  01DF               	clrf	Key_Process@gKeyValue
  4508                           
  4509                           ;key.c: 46: unsigned int i;
  4510                           ;key.c: 47: unsigned int data_temp;
  4511                           ;key.c: 49: LongPressSec = 0;
  4512  05FF  0021               	movlb	1	; select bank1
  4513  0600  01B8               	clrf	_LongPressSec^(0+128)
  4514                           
  4515                           ;key.c: 50: gKeyValue=Key_Scan();
  4516  0601  318A  223D  3185   	fcall	_Key_Scan
  4517  0604  0020               	movlb	0	; select bank0
  4518  0605  00DC               	movwf	??_Key_Process
  4519  0606  085C               	movf	??_Key_Process,w
  4520  0607  00DF               	movwf	Key_Process@gKeyValue
  4521                           
  4522                           ;key.c: 51: if(gKeyValue)
  4523  0608  085F               	movf	Key_Process@gKeyValue,w
  4524  0609  1903               	btfsc	3,2
  4525  060A  0008               	return
  4526  060B  2E87               	goto	l5369
  4527  060C                     l835:	
  4528                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) ) asm("clrwdt");
  4529                           
  4530                           ;key.c: 54: {
  4531                           ;key.c: 55: case 0x01:
  4532                           
  4533                           ;key.c: 52: {
  4534                           ;key.c: 53: switch(gKeyValue)
  4535                           
  4536  060C  0064               	clrwdt	;# 
  4537  060D                     l5317:	
  4538  060D  3003               	movlw	3
  4539  060E  0021               	movlb	1	; select bank1
  4540  060F  0238               	subwf	_LongPressSec^(0+128),w
  4541  0610  1803               	skipnc
  4542  0611  2E15               	goto	l5321
  4543  0612  0020               	movlb	0	; select bank0
  4544  0613  1E8D               	btfss	13,5	;volatile
  4545  0614  2E0C               	goto	l835
  4546  0615                     l5321:	
  4547                           
  4548                           ;key.c: 57: if(LongPressSec > 2)
  4549  0615  3003               	movlw	3
  4550  0616  0021               	movlb	1	; select bank1
  4551  0617  0238               	subwf	_LongPressSec^(0+128),w
  4552  0618  1C03               	skipc
  4553  0619  2E22               	goto	l5325
  4554                           
  4555                           ;key.c: 58: {
  4556                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4557  061A  0022               	movlb	2	; select bank2
  4558  061B  110C               	bcf	12,2	;volatile
  4559                           
  4560                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4561  061C  158C               	bsf	12,3	;volatile
  4562                           
  4563                           ;key.c: 61: SendCmd_1621(0x04);
  4564  061D  3004               	movlw	4
  4565  061E  3188  20BB  3185   	fcall	_SendCmd_1621
  4566                           
  4567                           ;key.c: 62: }
  4568  0621  2E4A               	goto	l847
  4569  0622                     l5325:	
  4570                           
  4571                           ;key.c: 64: else
  4572                           ;key.c: 65: {
  4573                           ;key.c: 66: for(i=0x1000;i<0x1000+1000;i++)
  4574  0622  3000               	movlw	0
  4575  0623  0020               	movlb	0	; select bank0
  4576  0624  00E0               	movwf	Key_Process@i
  4577  0625  3010               	movlw	16
  4578  0626  00E1               	movwf	Key_Process@i+1
  4579  0627                     L2:	
  4580  0627  3013               	movlw	19
  4581  0628  0261               	subwf	Key_Process@i+1,w
  4582  0629  30E8               	movlw	232
  4583  062A  1903               	skipnz
  4584  062B  0260               	subwf	Key_Process@i,w
  4585  062C  1803               	btfsc	3,0
  4586  062D  2E4A               	goto	l847
  4587                           
  4588                           ;key.c: 67: {
  4589                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4590  062E  0861               	movf	Key_Process@i+1,w
  4591  062F  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4592  0630  0860               	movf	Key_Process@i,w
  4593  0631  00F3               	movwf	FLASH_ReadWord@flashAddr
  4594  0632  3189  211D  3185   	fcall	_FLASH_ReadWord
  4595  0635  0874               	movf	?_FLASH_ReadWord+1,w
  4596  0636  0020               	movlb	0	; select bank0
  4597  0637  00DE               	movwf	Key_Process@data_temp+1
  4598  0638  0873               	movf	?_FLASH_ReadWord,w
  4599  0639  00DD               	movwf	Key_Process@data_temp
  4600                           
  4601                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4602  063A  085E               	movf	Key_Process@data_temp+1,w
  4603  063B  3188  2013  3185   	fcall	_EUSART_Write
  4604                           
  4605                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4606  063E  0020               	movlb	0	; select bank0
  4607  063F  085D               	movf	Key_Process@data_temp,w
  4608  0640  3188  2013  3185   	fcall	_EUSART_Write
  4609  0643  3001               	movlw	1
  4610  0644  0020               	movlb	0	; select bank0
  4611  0645  07E0               	addwf	Key_Process@i,f
  4612  0646  3000               	movlw	0
  4613  0647  3DE1               	addwfc	Key_Process@i+1,f
  4614  0648  2E27               	goto	L2
  4615  0649                     l848:	
  4616                           ;key.c: 71: }
  4617                           ;key.c: 72: }
  4618                           ;key.c: 74: while(RB5 == 0) asm("clrwdt");
  4619                           
  4620  0649  0064               	clrwdt	;# 
  4621  064A                     l847:	
  4622  064A  0020               	movlb	0	; select bank0
  4623  064B  1A8D               	btfsc	13,5	;volatile
  4624  064C  0008               	return
  4625  064D  2E49               	goto	l848
  4626  064E                     l853:	
  4627                           ;key.c: 77: while( !(LongPressSec > 2 || RA7 == 1) )asm("clrwdt");
  4628                           
  4629                           ;key.c: 76: case 0x02:
  4630                           
  4631                           ;key.c: 75: break;
  4632                           
  4633  064E  0064               	clrwdt	;# 
  4634  064F                     l5335:	
  4635  064F  3003               	movlw	3
  4636  0650  0021               	movlb	1	; select bank1
  4637  0651  0238               	subwf	_LongPressSec^(0+128),w
  4638  0652  1803               	skipnc
  4639  0653  2E57               	goto	l5339
  4640  0654  0020               	movlb	0	; select bank0
  4641  0655  1F8C               	btfss	12,7	;volatile
  4642  0656  2E4E               	goto	l853
  4643  0657                     l5339:	
  4644                           
  4645                           ;key.c: 78: if(LongPressSec > 2)
  4646  0657  3003               	movlw	3
  4647  0658  0021               	movlb	1	; select bank1
  4648  0659  0238               	subwf	_LongPressSec^(0+128),w
  4649  065A  1C03               	skipc
  4650  065B  2E7A               	goto	l5363
  4651                           
  4652                           ;key.c: 79: {
  4653                           ;key.c: 80: if(Record_flag == 0)
  4654  065C  0020               	movlb	0	; select bank0
  4655  065D  086B               	movf	_Record_flag,w
  4656  065E  1D03               	btfss	3,2
  4657  065F  2E73               	goto	l5359
  4658                           
  4659                           ;key.c: 81: {
  4660                           ;key.c: 82: Set_start_flag();
  4661  0660  3197  27FA  3185   	fcall	_Set_start_flag
  4662                           
  4663                           ;key.c: 83: Write_Flash_head();
  4664  0663  318B  2312  3185   	fcall	_Write_Flash_head
  4665                           
  4666                           ;key.c: 84: Save_Write_time();
  4667  0666  3187  2709  3185   	fcall	_Save_Write_time
  4668                           
  4669                           ;key.c: 85: Cur_temperature_time_ch1 = 0;
  4670  0669  0021               	movlb	1	; select bank1
  4671  066A  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  4672                           
  4673                           ;key.c: 86: Cur_temperature_time_ch2 = 0;
  4674  066B  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  4675                           
  4676                           ;key.c: 87: CH1_temperature = 0;
  4677  066C  0020               	movlb	0	; select bank0
  4678  066D  01E9               	clrf	_CH1_temperature
  4679  066E  01EA               	clrf	_CH1_temperature+1
  4680                           
  4681                           ;key.c: 88: CH2_temperature = 0;
  4682  066F  01F8               	clrf	_CH2_temperature
  4683  0670  01F9               	clrf	_CH2_temperature+1
  4684                           
  4685                           ;key.c: 89: time_count = 0;
  4686  0671  01ED               	clrf	_time_count
  4687                           
  4688                           ;key.c: 90: }
  4689  0672  2E82               	goto	l861
  4690  0673                     l5359:	
  4691                           
  4692                           ;key.c: 91: else
  4693                           ;key.c: 92: {
  4694                           ;key.c: 93: Set_finish_flag();
  4695  0673  3197  27EA  3185   	fcall	_Set_finish_flag
  4696                           
  4697                           ;key.c: 94: Write_Flash_finish();
  4698  0676  318A  22E3  3185   	fcall	_Write_Flash_finish
  4699                           
  4700                           ;key.c: 95: }
  4701                           ;key.c: 96: }
  4702  0679  2E82               	goto	l861
  4703  067A                     l5363:	
  4704                           
  4705                           ;key.c: 97: else
  4706                           ;key.c: 98: {
  4707                           ;key.c: 99: time_count = 5;
  4708  067A  3005               	movlw	5
  4709  067B  0020               	movlb	0	; select bank0
  4710  067C  00DC               	movwf	??_Key_Process
  4711  067D  085C               	movf	??_Key_Process,w
  4712  067E  00ED               	movwf	_time_count
  4713                           
  4714                           ;key.c: 100: temperature_process();
  4715  067F  318B  2372  3185   	fcall	_temperature_process
  4716  0682                     l861:	
  4717                           ;key.c: 101: }
  4718                           ;key.c: 102: while(RA7 == 0)asm("clrwdt");
  4719                           
  4720  0682  0020               	movlb	0	; select bank0
  4721  0683  1B8C               	btfsc	12,7	;volatile
  4722  0684  0008               	return
  4723  0685  0064               	clrwdt	;# 
  4724  0686  2E82               	goto	l861
  4725  0687                     l5369:	
  4726                           ;key.c: 105: }
  4727                           
  4728                           ;key.c: 104: default:break;
  4729                           
  4730                           ;key.c: 103: break;
  4731                           
  4732  0687  085F               	movf	Key_Process@gKeyValue,w
  4733                           
  4734                           ; Switch size 1, requested type "space"
  4735                           ; Number of cases is 2, Range of values is 1 to 2
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte            7     4 (average)
  4739                           ; direct_byte           13     9 (fixed)
  4740                           ; jumptable            263     9 (fixed)
  4741                           ;	Chosen strategy is simple_byte
  4742  0688  3A01               	xorlw	1	; case 1
  4743  0689  1903               	skipnz
  4744  068A  2E0D               	goto	l5317
  4745  068B  3A03               	xorlw	3	; case 2
  4746  068C  1903               	skipnz
  4747  068D  2E4F               	goto	l5335
  4748  068E  2E90               	goto	l865
  4749  068F  0008               	return
  4750  0690                     l865:	
  4751  0690  0008               	return
  4752  0691                     __end_of_Key_Process:	
  4753                           
  4754                           	psect	text13
  4755  0B72                     __ptext13:	
  4756 ;; *************** function _temperature_process *****************
  4757 ;; Defined at:
  4758 ;;		line 354 in file "mcc_generated_files/max31856.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;Total ram usage:        0 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:   11
  4779 ;; This function calls:
  4780 ;;		_Two_Display
  4781 ;;		_one_temperature_trans
  4782 ;;		_temperature_display
  4783 ;;		_time_Display
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;;		_Key_Process
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _temperature_process
  4792  0B72                     _temperature_process:	
  4793                           
  4794                           ;max31856.c: 356: switch(time_count)
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4798  0B72  2B92               	goto	l5167
  4799  0B73                     l5139:	
  4800                           ;max31856.c: 357: {
  4801                           ;max31856.c: 358: case 0:
  4802                           
  4803                           
  4804                           ;max31856.c: 359: Two_Display(1);
  4805  0B73  3001               	movlw	1
  4806  0B74  318B  2341  318B   	fcall	_Two_Display
  4807                           
  4808                           ;max31856.c: 360: do { LATA1 = 1; } while(0);
  4809  0B77  0022               	movlb	2	; select bank2
  4810  0B78  148C               	bsf	12,1	;volatile
  4811                           
  4812                           ;max31856.c: 361: do { LATA0 = 1; } while(0);
  4813  0B79  140C               	bsf	12,0	;volatile
  4814                           
  4815                           ;max31856.c: 362: do { LATA0 = 0; } while(0);
  4816  0B7A  100C               	bcf	12,0	;volatile
  4817                           
  4818                           ;max31856.c: 363: one_temperature_trans();
  4819  0B7B  318D  2548         	fcall	_one_temperature_trans
  4820                           
  4821                           ;max31856.c: 364: break;
  4822  0B7D  0008               	return
  4823  0B7E                     l5149:	
  4824                           ;max31856.c: 365: case 1:
  4825                           
  4826                           
  4827                           ;max31856.c: 366: temperature_display();
  4828  0B7E  318C  2480         	fcall	_temperature_display
  4829                           
  4830                           ;max31856.c: 367: break;
  4831  0B80  0008               	return
  4832  0B81                     l5151:	
  4833                           ;max31856.c: 368: case 2:
  4834                           
  4835                           
  4836                           ;max31856.c: 369: Two_Display(2);
  4837  0B81  3002               	movlw	2
  4838  0B82  318B  2341  318B   	fcall	_Two_Display
  4839                           
  4840                           ;max31856.c: 370: do { LATA0 = 1; } while(0);
  4841  0B85  0022               	movlb	2	; select bank2
  4842  0B86  140C               	bsf	12,0	;volatile
  4843                           
  4844                           ;max31856.c: 371: do { LATA1 = 1; } while(0);
  4845  0B87  148C               	bsf	12,1	;volatile
  4846                           
  4847                           ;max31856.c: 372: do { LATA1 = 0; } while(0);
  4848  0B88  108C               	bcf	12,1	;volatile
  4849                           
  4850                           ;max31856.c: 373: one_temperature_trans();
  4851  0B89  318D  2548         	fcall	_one_temperature_trans
  4852                           
  4853                           ;max31856.c: 374: break;
  4854  0B8B  0008               	return
  4855  0B8C                     l5161:	
  4856                           ;max31856.c: 375: case 3:
  4857                           
  4858                           
  4859                           ;max31856.c: 376: temperature_display();
  4860  0B8C  318C  2480         	fcall	_temperature_display
  4861                           
  4862                           ;max31856.c: 377: break;
  4863  0B8E  0008               	return
  4864  0B8F                     l5163:	
  4865                           ;max31856.c: 378: case 5:
  4866                           
  4867                           
  4868                           ;max31856.c: 379: time_Display();
  4869  0B8F  3185  2568         	fcall	_time_Display
  4870                           
  4871                           ;max31856.c: 382: }
  4872                           
  4873                           ;max31856.c: 381: default:break;
  4874                           
  4875                           ;max31856.c: 380: break;
  4876  0B91  0008               	return
  4877  0B92                     l5167:	
  4878  0B92  0020               	movlb	0	; select bank0
  4879  0B93  086D               	movf	_time_count,w
  4880                           
  4881                           ; Switch size 1, requested type "space"
  4882                           ; Number of cases is 5, Range of values is 0 to 5
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte           16     9 (average)
  4886                           ; direct_byte           18     6 (fixed)
  4887                           ; jumptable            260     6 (fixed)
  4888                           ;	Chosen strategy is simple_byte
  4889  0B94  3A00               	xorlw	0	; case 0
  4890  0B95  1903               	skipnz
  4891  0B96  2B73               	goto	l5139
  4892  0B97  3A01               	xorlw	1	; case 1
  4893  0B98  1903               	skipnz
  4894  0B99  2B7E               	goto	l5149
  4895  0B9A  3A03               	xorlw	3	; case 2
  4896  0B9B  1903               	skipnz
  4897  0B9C  2B81               	goto	l5151
  4898  0B9D  3A01               	xorlw	1	; case 3
  4899  0B9E  1903               	skipnz
  4900  0B9F  2B8C               	goto	l5161
  4901  0BA0  3A06               	xorlw	6	; case 5
  4902  0BA1  1903               	skipnz
  4903  0BA2  2B8F               	goto	l5163
  4904  0BA3  2BA4               	goto	l546
  4905  0BA4                     l546:	
  4906  0BA4  0008               	return
  4907  0BA5                     __end_of_temperature_process:	
  4908                           
  4909                           	psect	text14
  4910  0568                     __ptext14:	
  4911 ;; *************** function _time_Display *****************
  4912 ;; Defined at:
  4913 ;;		line 167 in file "mcc_generated_files/ht1621.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  num             4   19[BANK0 ] unsigned char [4]
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:        7 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    6
  4934 ;; This function calls:
  4935 ;;		_Bq32k_Rtc_Read_Time
  4936 ;;		_WriteAll_1621
  4937 ;;		___awdiv
  4938 ;;		___awmod
  4939 ;; This function is called by:
  4940 ;;		_temperature_process
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _time_Display
  4946  0568                     _time_Display:	
  4947                           
  4948                           ;ht1621.c: 169: unsigned char num[4]={0};
  4949                           
  4950                           ;incstack = 0
  4951                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4952  0568  0021               	movlb	1	; select bank1
  4953  0569  082B               	movf	(time_Display@F2129+3)^(0+128),w
  4954  056A  0020               	movlb	0	; select bank0
  4955  056B  00B6               	movwf	time_Display@num+3
  4956  056C  0021               	movlb	1	; select bank1
  4957  056D  082A               	movf	(time_Display@F2129+2)^(0+128),w
  4958  056E  0020               	movlb	0	; select bank0
  4959  056F  00B5               	movwf	time_Display@num+2
  4960  0570  0021               	movlb	1	; select bank1
  4961  0571  0829               	movf	(time_Display@F2129+1)^(0+128),w
  4962  0572  0020               	movlb	0	; select bank0
  4963  0573  00B4               	movwf	time_Display@num+1
  4964  0574  0021               	movlb	1	; select bank1
  4965  0575  0828               	movf	time_Display@F2129^(0+128),w
  4966  0576  0020               	movlb	0	; select bank0
  4967  0577  00B3               	movwf	time_Display@num
  4968                           
  4969                           ;ht1621.c: 170: Bq32k_Rtc_Read_Time(&rtc_tm);
  4970  0578  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  4971  0579  318F  2738  3185   	fcall	_Bq32k_Rtc_Read_Time
  4972                           
  4973                           ;ht1621.c: 171: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4974  057C  300A               	movlw	10
  4975  057D  00F3               	movwf	___awdiv@divisor
  4976  057E  3000               	movlw	0
  4977  057F  00F4               	movwf	___awdiv@divisor+1
  4978  0580  0021               	movlb	1	; select bank1
  4979  0581  085C               	movf	(_rtc_tm^(0+128)+2),w
  4980  0582  0020               	movlb	0	; select bank0
  4981  0583  00B0               	movwf	??_time_Display
  4982  0584  01B1               	clrf	??_time_Display+1
  4983  0585  0830               	movf	??_time_Display,w
  4984  0586  00F5               	movwf	___awdiv@dividend
  4985  0587  0831               	movf	??_time_Display+1,w
  4986  0588  00F6               	movwf	___awdiv@dividend+1
  4987  0589  318E  262F  3185   	fcall	___awdiv
  4988  058C  0874               	movf	?___awdiv+1,w
  4989  058D  0085               	movwf	5
  4990  058E  0873               	movf	?___awdiv,w
  4991  058F  0084               	movwf	4
  4992  0590  3000               	movlw	low (_Dis_TAB| (0+32768))
  4993  0591  0784               	addwf	4,f
  4994  0592  3090               	movlw	high (_Dis_TAB| (0+32768))
  4995  0593  3D85               	addwfc	5,f
  4996  0594  0800               	movf	0,w	;code access
  4997  0595  0020               	movlb	0	; select bank0
  4998  0596  00B2               	movwf	??_time_Display+2
  4999  0597  0832               	movf	??_time_Display+2,w
  5000  0598  00B3               	movwf	time_Display@num
  5001                           
  5002                           ;ht1621.c: 172: num[0] |= 0x08;
  5003  0599  15B3               	bsf	time_Display@num,3
  5004                           
  5005                           ;ht1621.c: 173: num[1] = Dis_TAB[rtc_tm.hours % 10];
  5006  059A  300A               	movlw	10
  5007  059B  00F3               	movwf	___awmod@divisor
  5008  059C  3000               	movlw	0
  5009  059D  00F4               	movwf	___awmod@divisor+1
  5010  059E  0021               	movlb	1	; select bank1
  5011  059F  085C               	movf	(_rtc_tm^(0+128)+2),w
  5012  05A0  0020               	movlb	0	; select bank0
  5013  05A1  00B0               	movwf	??_time_Display
  5014  05A2  01B1               	clrf	??_time_Display+1
  5015  05A3  0830               	movf	??_time_Display,w
  5016  05A4  00F5               	movwf	___awmod@dividend
  5017  05A5  0831               	movf	??_time_Display+1,w
  5018  05A6  00F6               	movwf	___awmod@dividend+1
  5019  05A7  318D  2502  3185   	fcall	___awmod
  5020  05AA  0874               	movf	?___awmod+1,w
  5021  05AB  0085               	movwf	5
  5022  05AC  0873               	movf	?___awmod,w
  5023  05AD  0084               	movwf	4
  5024  05AE  3000               	movlw	low (_Dis_TAB| (0+32768))
  5025  05AF  0784               	addwf	4,f
  5026  05B0  3090               	movlw	high (_Dis_TAB| (0+32768))
  5027  05B1  3D85               	addwfc	5,f
  5028  05B2  0800               	movf	0,w	;code access
  5029  05B3  0020               	movlb	0	; select bank0
  5030  05B4  00B2               	movwf	??_time_Display+2
  5031  05B5  0832               	movf	??_time_Display+2,w
  5032  05B6  00B4               	movwf	time_Display@num+1
  5033                           
  5034                           ;ht1621.c: 174: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  5035  05B7  300A               	movlw	10
  5036  05B8  00F3               	movwf	___awdiv@divisor
  5037  05B9  3000               	movlw	0
  5038  05BA  00F4               	movwf	___awdiv@divisor+1
  5039  05BB  0021               	movlb	1	; select bank1
  5040  05BC  085B               	movf	(_rtc_tm^(0+128)+1),w
  5041  05BD  0020               	movlb	0	; select bank0
  5042  05BE  00B0               	movwf	??_time_Display
  5043  05BF  01B1               	clrf	??_time_Display+1
  5044  05C0  0830               	movf	??_time_Display,w
  5045  05C1  00F5               	movwf	___awdiv@dividend
  5046  05C2  0831               	movf	??_time_Display+1,w
  5047  05C3  00F6               	movwf	___awdiv@dividend+1
  5048  05C4  318E  262F  3185   	fcall	___awdiv
  5049  05C7  0874               	movf	?___awdiv+1,w
  5050  05C8  0085               	movwf	5
  5051  05C9  0873               	movf	?___awdiv,w
  5052  05CA  0084               	movwf	4
  5053  05CB  3000               	movlw	low (_Dis_TAB| (0+32768))
  5054  05CC  0784               	addwf	4,f
  5055  05CD  3090               	movlw	high (_Dis_TAB| (0+32768))
  5056  05CE  3D85               	addwfc	5,f
  5057  05CF  0800               	movf	0,w	;code access
  5058  05D0  0020               	movlb	0	; select bank0
  5059  05D1  00B2               	movwf	??_time_Display+2
  5060  05D2  0832               	movf	??_time_Display+2,w
  5061  05D3  00B5               	movwf	time_Display@num+2
  5062                           
  5063                           ;ht1621.c: 175: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  5064  05D4  300A               	movlw	10
  5065  05D5  00F3               	movwf	___awmod@divisor
  5066  05D6  3000               	movlw	0
  5067  05D7  00F4               	movwf	___awmod@divisor+1
  5068  05D8  0021               	movlb	1	; select bank1
  5069  05D9  085B               	movf	(_rtc_tm^(0+128)+1),w
  5070  05DA  0020               	movlb	0	; select bank0
  5071  05DB  00B0               	movwf	??_time_Display
  5072  05DC  01B1               	clrf	??_time_Display+1
  5073  05DD  0830               	movf	??_time_Display,w
  5074  05DE  00F5               	movwf	___awmod@dividend
  5075  05DF  0831               	movf	??_time_Display+1,w
  5076  05E0  00F6               	movwf	___awmod@dividend+1
  5077  05E1  318D  2502  3185   	fcall	___awmod
  5078  05E4  0874               	movf	?___awmod+1,w
  5079  05E5  0085               	movwf	5
  5080  05E6  0873               	movf	?___awmod,w
  5081  05E7  0084               	movwf	4
  5082  05E8  3000               	movlw	low (_Dis_TAB| (0+32768))
  5083  05E9  0784               	addwf	4,f
  5084  05EA  3090               	movlw	high (_Dis_TAB| (0+32768))
  5085  05EB  3D85               	addwfc	5,f
  5086  05EC  0800               	movf	0,w	;code access
  5087  05ED  0020               	movlb	0	; select bank0
  5088  05EE  00B2               	movwf	??_time_Display+2
  5089  05EF  0832               	movf	??_time_Display+2,w
  5090  05F0  00B6               	movwf	time_Display@num+3
  5091                           
  5092                           ;ht1621.c: 176: WriteAll_1621(0, num, 4);
  5093  05F1  3033               	movlw	low time_Display@num
  5094  05F2  00A0               	movwf	WriteAll_1621@p
  5095  05F3  3000               	movlw	high time_Display@num
  5096  05F4  00A1               	movwf	WriteAll_1621@p+1
  5097  05F5  3004               	movlw	4
  5098  05F6  00B0               	movwf	??_time_Display
  5099  05F7  0830               	movf	??_time_Display,w
  5100  05F8  00A2               	movwf	WriteAll_1621@cnt
  5101  05F9  3000               	movlw	0
  5102  05FA  318B  23A5         	fcall	_WriteAll_1621
  5103  05FC  0008               	return
  5104  05FD                     __end_of_time_Display:	
  5105                           
  5106                           	psect	text15
  5107  0D02                     __ptext15:	
  5108 ;; *************** function ___awmod *****************
  5109 ;; Defined at:
  5110 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  divisor         2    3[COMMON] int 
  5113 ;;  dividend        2    5[COMMON] int 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  sign            1    1[BANK0 ] unsigned char 
  5116 ;;  counter         1    0[BANK0 ] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    3[COMMON] int 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;Total ram usage:        7 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    3
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_time_Display
  5137 ;;		_bin2bcd
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           
  5142                           ;psect for function ___awmod
  5143  0D02                     ___awmod:	
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5147  0D02  0020               	movlb	0	; select bank0
  5148  0D03  01A1               	clrf	___awmod@sign
  5149  0D04  1FF6               	btfss	___awmod@dividend+1,7
  5150  0D05  2D0D               	goto	l4979
  5151  0D06  09F5               	comf	___awmod@dividend,f
  5152  0D07  09F6               	comf	___awmod@dividend+1,f
  5153  0D08  0AF5               	incf	___awmod@dividend,f
  5154  0D09  1903               	skipnz
  5155  0D0A  0AF6               	incf	___awmod@dividend+1,f
  5156  0D0B  01A1               	clrf	___awmod@sign
  5157  0D0C  0AA1               	incf	___awmod@sign,f
  5158  0D0D                     l4979:	
  5159  0D0D  1FF4               	btfss	___awmod@divisor+1,7
  5160  0D0E  2D14               	goto	l4983
  5161  0D0F  09F3               	comf	___awmod@divisor,f
  5162  0D10  09F4               	comf	___awmod@divisor+1,f
  5163  0D11  0AF3               	incf	___awmod@divisor,f
  5164  0D12  1903               	skipnz
  5165  0D13  0AF4               	incf	___awmod@divisor+1,f
  5166  0D14                     l4983:	
  5167  0D14  0873               	movf	___awmod@divisor,w
  5168  0D15  0474               	iorwf	___awmod@divisor+1,w
  5169  0D16  1903               	btfsc	3,2
  5170  0D17  2D3B               	goto	l5001
  5171  0D18  01A0               	clrf	___awmod@counter
  5172  0D19  0AA0               	incf	___awmod@counter,f
  5173  0D1A                     l4991:	
  5174  0D1A  1BF4               	btfsc	___awmod@divisor+1,7
  5175  0D1B  2D26               	goto	l4993
  5176  0D1C  3001               	movlw	1
  5177  0D1D                     u4575:	
  5178  0D1D  35F3               	lslf	___awmod@divisor,f
  5179  0D1E  0DF4               	rlf	___awmod@divisor+1,f
  5180  0D1F  0B89               	decfsz	9,f
  5181  0D20  2D1D               	goto	u4575
  5182  0D21  3001               	movlw	1
  5183  0D22  00F7               	movwf	??___awmod
  5184  0D23  0877               	movf	??___awmod,w
  5185  0D24  07A0               	addwf	___awmod@counter,f
  5186  0D25  2D1A               	goto	l4991
  5187  0D26                     l4993:	
  5188  0D26  0874               	movf	___awmod@divisor+1,w
  5189  0D27  0276               	subwf	___awmod@dividend+1,w
  5190  0D28  1D03               	skipz
  5191  0D29  2D2C               	goto	u4595
  5192  0D2A  0873               	movf	___awmod@divisor,w
  5193  0D2B  0275               	subwf	___awmod@dividend,w
  5194  0D2C                     u4595:	
  5195  0D2C  1C03               	skipc
  5196  0D2D  2D32               	goto	l4997
  5197  0D2E  0873               	movf	___awmod@divisor,w
  5198  0D2F  02F5               	subwf	___awmod@dividend,f
  5199  0D30  0874               	movf	___awmod@divisor+1,w
  5200  0D31  3BF6               	subwfb	___awmod@dividend+1,f
  5201  0D32                     l4997:	
  5202  0D32  3001               	movlw	1
  5203  0D33                     u4605:	
  5204  0D33  36F4               	lsrf	___awmod@divisor+1,f
  5205  0D34  0CF3               	rrf	___awmod@divisor,f
  5206  0D35  0B89               	decfsz	9,f
  5207  0D36  2D33               	goto	u4605
  5208  0D37  3001               	movlw	1
  5209  0D38  02A0               	subwf	___awmod@counter,f
  5210  0D39  1D03               	btfss	3,2
  5211  0D3A  2D26               	goto	l4993
  5212  0D3B                     l5001:	
  5213  0D3B  0821               	movf	___awmod@sign,w
  5214  0D3C  1903               	btfsc	3,2
  5215  0D3D  2D43               	goto	l5005
  5216  0D3E  09F5               	comf	___awmod@dividend,f
  5217  0D3F  09F6               	comf	___awmod@dividend+1,f
  5218  0D40  0AF5               	incf	___awmod@dividend,f
  5219  0D41  1903               	skipnz
  5220  0D42  0AF6               	incf	___awmod@dividend+1,f
  5221  0D43                     l5005:	
  5222  0D43  0876               	movf	___awmod@dividend+1,w
  5223  0D44  00F4               	movwf	?___awmod+1
  5224  0D45  0875               	movf	___awmod@dividend,w
  5225  0D46  00F3               	movwf	?___awmod
  5226  0D47  0008               	return
  5227  0D48                     __end_of___awmod:	
  5228                           
  5229                           	psect	text16
  5230  0E2F                     __ptext16:	
  5231 ;; *************** function ___awdiv *****************
  5232 ;; Defined at:
  5233 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  divisor         2    3[COMMON] int 
  5236 ;;  dividend        2    5[COMMON] int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  quotient        2    2[BANK0 ] int 
  5239 ;;  sign            1    1[BANK0 ] unsigned char 
  5240 ;;  counter         1    0[BANK0 ] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2    3[COMMON] int 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;Total ram usage:        9 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_time_Display
  5261 ;;		_bin2bcd
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function ___awdiv
  5267  0E2F                     ___awdiv:	
  5268                           
  5269                           ;incstack = 0
  5270                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5271  0E2F  0020               	movlb	0	; select bank0
  5272  0E30  01A1               	clrf	___awdiv@sign
  5273  0E31  1FF4               	btfss	___awdiv@divisor+1,7
  5274  0E32  2E3A               	goto	l4935
  5275  0E33  09F3               	comf	___awdiv@divisor,f
  5276  0E34  09F4               	comf	___awdiv@divisor+1,f
  5277  0E35  0AF3               	incf	___awdiv@divisor,f
  5278  0E36  1903               	skipnz
  5279  0E37  0AF4               	incf	___awdiv@divisor+1,f
  5280  0E38  01A1               	clrf	___awdiv@sign
  5281  0E39  0AA1               	incf	___awdiv@sign,f
  5282  0E3A                     l4935:	
  5283  0E3A  1FF6               	btfss	___awdiv@dividend+1,7
  5284  0E3B  2E45               	goto	l4941
  5285  0E3C  09F5               	comf	___awdiv@dividend,f
  5286  0E3D  09F6               	comf	___awdiv@dividend+1,f
  5287  0E3E  0AF5               	incf	___awdiv@dividend,f
  5288  0E3F  1903               	skipnz
  5289  0E40  0AF6               	incf	___awdiv@dividend+1,f
  5290  0E41  3001               	movlw	1
  5291  0E42  00F7               	movwf	??___awdiv
  5292  0E43  0877               	movf	??___awdiv,w
  5293  0E44  06A1               	xorwf	___awdiv@sign,f
  5294  0E45                     l4941:	
  5295  0E45  01A2               	clrf	___awdiv@quotient
  5296  0E46  01A3               	clrf	___awdiv@quotient+1
  5297  0E47  0873               	movf	___awdiv@divisor,w
  5298  0E48  0474               	iorwf	___awdiv@divisor+1,w
  5299  0E49  1903               	btfsc	3,2
  5300  0E4A  2E74               	goto	l4963
  5301  0E4B  01A0               	clrf	___awdiv@counter
  5302  0E4C  0AA0               	incf	___awdiv@counter,f
  5303  0E4D                     l4951:	
  5304  0E4D  1BF4               	btfsc	___awdiv@divisor+1,7
  5305  0E4E  2E59               	goto	l4953
  5306  0E4F  3001               	movlw	1
  5307  0E50                     u4475:	
  5308  0E50  35F3               	lslf	___awdiv@divisor,f
  5309  0E51  0DF4               	rlf	___awdiv@divisor+1,f
  5310  0E52  0B89               	decfsz	9,f
  5311  0E53  2E50               	goto	u4475
  5312  0E54  3001               	movlw	1
  5313  0E55  00F7               	movwf	??___awdiv
  5314  0E56  0877               	movf	??___awdiv,w
  5315  0E57  07A0               	addwf	___awdiv@counter,f
  5316  0E58  2E4D               	goto	l4951
  5317  0E59                     l4953:	
  5318  0E59  3001               	movlw	1
  5319  0E5A                     u4495:	
  5320  0E5A  35A2               	lslf	___awdiv@quotient,f
  5321  0E5B  0DA3               	rlf	___awdiv@quotient+1,f
  5322  0E5C  0B89               	decfsz	9,f
  5323  0E5D  2E5A               	goto	u4495
  5324  0E5E  0874               	movf	___awdiv@divisor+1,w
  5325  0E5F  0276               	subwf	___awdiv@dividend+1,w
  5326  0E60  1D03               	skipz
  5327  0E61  2E64               	goto	u4505
  5328  0E62  0873               	movf	___awdiv@divisor,w
  5329  0E63  0275               	subwf	___awdiv@dividend,w
  5330  0E64                     u4505:	
  5331  0E64  1C03               	skipc
  5332  0E65  2E6B               	goto	l4959
  5333  0E66  0873               	movf	___awdiv@divisor,w
  5334  0E67  02F5               	subwf	___awdiv@dividend,f
  5335  0E68  0874               	movf	___awdiv@divisor+1,w
  5336  0E69  3BF6               	subwfb	___awdiv@dividend+1,f
  5337  0E6A  1422               	bsf	___awdiv@quotient,0
  5338  0E6B                     l4959:	
  5339  0E6B  3001               	movlw	1
  5340  0E6C                     u4515:	
  5341  0E6C  36F4               	lsrf	___awdiv@divisor+1,f
  5342  0E6D  0CF3               	rrf	___awdiv@divisor,f
  5343  0E6E  0B89               	decfsz	9,f
  5344  0E6F  2E6C               	goto	u4515
  5345  0E70  3001               	movlw	1
  5346  0E71  02A0               	subwf	___awdiv@counter,f
  5347  0E72  1D03               	btfss	3,2
  5348  0E73  2E59               	goto	l4953
  5349  0E74                     l4963:	
  5350  0E74  0821               	movf	___awdiv@sign,w
  5351  0E75  1903               	btfsc	3,2
  5352  0E76  2E7C               	goto	l4967
  5353  0E77  09A2               	comf	___awdiv@quotient,f
  5354  0E78  09A3               	comf	___awdiv@quotient+1,f
  5355  0E79  0AA2               	incf	___awdiv@quotient,f
  5356  0E7A  1903               	skipnz
  5357  0E7B  0AA3               	incf	___awdiv@quotient+1,f
  5358  0E7C                     l4967:	
  5359  0E7C  0823               	movf	___awdiv@quotient+1,w
  5360  0E7D  00F4               	movwf	?___awdiv+1
  5361  0E7E  0822               	movf	___awdiv@quotient,w
  5362  0E7F  00F3               	movwf	?___awdiv
  5363  0E80  0008               	return
  5364  0E81                     __end_of___awdiv:	
  5365                           
  5366                           	psect	text17
  5367  0C80                     __ptext17:	
  5368 ;; *************** function _temperature_display *****************
  5369 ;; Defined at:
  5370 ;;		line 316 in file "mcc_generated_files/max31856.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;Total ram usage:        1 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:   10
  5391 ;; This function calls:
  5392 ;;		_Tc_Display
  5393 ;;		_err_Display
  5394 ;;		_maxim_31856_write_register
  5395 ;;		_maxim_clear_fault_status
  5396 ;;		_tc_temperature_trans
  5397 ;; This function is called by:
  5398 ;;		_temperature_process
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _temperature_display
  5404  0C80                     _temperature_display:	
  5405                           
  5406                           ;max31856.c: 318: if(uch_sr==(uint8_t)0x00)
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5410  0C80  0021               	movlb	1	; select bank1
  5411  0C81  0843               	movf	_uch_sr^(0+128),w
  5412  0C82  1D03               	btfss	3,2
  5413  0C83  2C99               	goto	l5045
  5414                           
  5415                           ;max31856.c: 319: {
  5416                           ;max31856.c: 320: tc_temperature_trans();
  5417  0C84  3180  203F  318C   	fcall	_tc_temperature_trans
  5418                           
  5419                           ;max31856.c: 321: Tc_Display();
  5420  0C87  3184  24A0  318C   	fcall	_Tc_Display
  5421                           
  5422                           ;max31856.c: 322: if(time_count == 1)
  5423  0C8A  0020               	movlb	0	; select bank0
  5424  0C8B  036D               	decf	_time_count,w
  5425  0C8C  1D03               	btfss	3,2
  5426  0C8D  2C91               	goto	l5041
  5427                           
  5428                           ;max31856.c: 323: {
  5429                           ;max31856.c: 324: CH1_state = 0;
  5430  0C8E  0021               	movlb	1	; select bank1
  5431  0C8F  01B4               	clrf	_CH1_state^(0+128)
  5432                           
  5433                           ;max31856.c: 325: }
  5434  0C90  0008               	return
  5435  0C91                     l5041:	
  5436                           
  5437                           ;max31856.c: 326: else if(time_count == 3)
  5438  0C91  3003               	movlw	3
  5439  0C92  0020               	movlb	0	; select bank0
  5440  0C93  066D               	xorwf	_time_count,w
  5441  0C94  1D03               	btfss	3,2
  5442  0C95  0008               	return
  5443                           
  5444                           ;max31856.c: 327: {
  5445                           ;max31856.c: 328: CH2_state = 0;
  5446  0C96  0021               	movlb	1	; select bank1
  5447  0C97  01B5               	clrf	_CH2_state^(0+128)
  5448                           
  5449                           ;max31856.c: 329: }
  5450                           ;max31856.c: 330: }
  5451  0C98  0008               	return
  5452  0C99                     l5045:	
  5453                           
  5454                           ;max31856.c: 331: else
  5455                           ;max31856.c: 332: {
  5456                           ;max31856.c: 333: if(time_count == 1)
  5457  0C99  0020               	movlb	0	; select bank0
  5458  0C9A  036D               	decf	_time_count,w
  5459  0C9B  1D03               	btfss	3,2
  5460  0C9C  2CA1               	goto	l5049
  5461                           
  5462                           ;max31856.c: 334: {
  5463                           ;max31856.c: 335: CH1_state = 1;
  5464  0C9D  0021               	movlb	1	; select bank1
  5465  0C9E  01B4               	clrf	_CH1_state^(0+128)
  5466  0C9F  0AB4               	incf	_CH1_state^(0+128),f
  5467                           
  5468                           ;max31856.c: 336: }
  5469  0CA0  2CA9               	goto	l5053
  5470  0CA1                     l5049:	
  5471                           
  5472                           ;max31856.c: 337: else if(time_count == 3)
  5473  0CA1  3003               	movlw	3
  5474  0CA2  0020               	movlb	0	; select bank0
  5475  0CA3  066D               	xorwf	_time_count,w
  5476  0CA4  1D03               	btfss	3,2
  5477  0CA5  2CA9               	goto	l5053
  5478                           
  5479                           ;max31856.c: 338: {
  5480                           ;max31856.c: 339: CH2_state = 1;
  5481  0CA6  0021               	movlb	1	; select bank1
  5482  0CA7  01B5               	clrf	_CH2_state^(0+128)
  5483  0CA8  0AB5               	incf	_CH2_state^(0+128),f
  5484  0CA9                     l5053:	
  5485                           
  5486                           ;max31856.c: 340: }
  5487                           ;max31856.c: 341: err_Display();
  5488  0CA9  318A  228A  318C   	fcall	_err_Display
  5489                           
  5490                           ;max31856.c: 342: maxim_31856_write_register(0x82, 0xFF);
  5491  0CAC  30FF               	movlw	255
  5492  0CAD  0020               	movlb	0	; select bank0
  5493  0CAE  00DB               	movwf	??_temperature_display
  5494  0CAF  085B               	movf	??_temperature_display,w
  5495  0CB0  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5496  0CB1  3082               	movlw	130
  5497  0CB2  3188  2042  318C   	fcall	_maxim_31856_write_register
  5498                           
  5499                           ;max31856.c: 343: maxim_clear_fault_status();
  5500  0CB5  3188  204F  318C   	fcall	_maxim_clear_fault_status
  5501                           
  5502                           ;max31856.c: 344: maxim_31856_write_register(0x82, 0x00);
  5503  0CB8  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5504  0CB9  3082               	movlw	130
  5505  0CBA  3188  2042         	fcall	_maxim_31856_write_register
  5506  0CBC  0008               	return
  5507  0CBD                     __end_of_temperature_display:	
  5508                           
  5509                           	psect	text18
  5510  003F                     __ptext18:	
  5511 ;; *************** function _tc_temperature_trans *****************
  5512 ;; Defined at:
  5513 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  temperature_    2   57[BANK0 ] unsigned int 
  5518 ;;  var_time        2   55[BANK0 ] unsigned int 
  5519 ;;  temperature_    2   53[BANK0 ] unsigned int 
  5520 ;;  temperature_    2   51[BANK0 ] unsigned int 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;Total ram usage:       12 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    9
  5537 ;; This function calls:
  5538 ;;		_Calculate_Time
  5539 ;;		_Save_Write_word
  5540 ;; This function is called by:
  5541 ;;		_temperature_display
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function _tc_temperature_trans
  5547  003F                     _tc_temperature_trans:	
  5548                           
  5549                           ;max31856.c: 170: unsigned int temperature_absolute = 0;
  5550                           
  5551                           ;incstack = 0
  5552                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5553  003F  0020               	movlb	0	; select bank0
  5554  0040  01D5               	clrf	tc_temperature_trans@temperature_absolute
  5555  0041  01D6               	clrf	tc_temperature_trans@temperature_absolute+1
  5556                           
  5557                           ;max31856.c: 171: unsigned int temperature_temp = 0;
  5558  0042  01D9               	clrf	tc_temperature_trans@temperature_temp
  5559  0043  01DA               	clrf	tc_temperature_trans@temperature_temp+1
  5560                           
  5561                           ;max31856.c: 172: unsigned int temperature_back = 0;
  5562  0044  01D3               	clrf	tc_temperature_trans@temperature_back
  5563  0045  01D4               	clrf	tc_temperature_trans@temperature_back+1
  5564                           
  5565                           ;max31856.c: 173: unsigned int var_time=0;
  5566  0046  01D7               	clrf	tc_temperature_trans@var_time
  5567  0047  01D8               	clrf	tc_temperature_trans@var_time+1
  5568                           
  5569                           ;max31856.c: 174: temperature_value = 0;
  5570  0048  3000               	movlw	0
  5571  0049  00E8               	movwf	_temperature_value+3
  5572  004A  3000               	movlw	0
  5573  004B  00E7               	movwf	_temperature_value+2
  5574  004C  3000               	movlw	0
  5575  004D  00E6               	movwf	_temperature_value+1
  5576  004E  3000               	movlw	0
  5577  004F  00E5               	movwf	_temperature_value
  5578                           
  5579                           ;max31856.c: 175: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5580  0050  303F               	movlw	63
  5581  0051  0021               	movlb	1	; select bank1
  5582  0052  053F               	andwf	_uch_ltcbh^(0+128),w
  5583  0053  0020               	movlb	0	; select bank0
  5584  0054  00CF               	movwf	??_tc_temperature_trans
  5585  0055  084F               	movf	??_tc_temperature_trans,w
  5586  0056  00D1               	movwf	??_tc_temperature_trans+2
  5587  0057  0021               	movlb	1	; select bank1
  5588  0058  0841               	movf	_uch_ltcbm^(0+128),w
  5589  0059  0020               	movlb	0	; select bank0
  5590  005A  00D0               	movwf	??_tc_temperature_trans+1
  5591  005B  0D51               	rlf	??_tc_temperature_trans+2,w
  5592  005C  0CD1               	rrf	??_tc_temperature_trans+2,f
  5593  005D  0CD0               	rrf	??_tc_temperature_trans+1,f
  5594  005E  0850               	movf	??_tc_temperature_trans+1,w
  5595  005F  00E5               	movwf	_temperature_value
  5596  0060  0851               	movf	??_tc_temperature_trans+2,w
  5597  0061  00E6               	movwf	_temperature_value+1
  5598  0062  0D89               	rlf	9,f
  5599  0063  3B89               	subwfb	9,f
  5600  0064  0989               	comf	9,f
  5601  0065  00E7               	movwf	_temperature_value+2
  5602  0066  00E8               	movwf	_temperature_value+3
  5603                           
  5604                           ;max31856.c: 176: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5605  0067  0021               	movlb	1	; select bank1
  5606  0068  1FBF               	btfss	_uch_ltcbh^(0+128),7
  5607  0069  286C               	goto	l4755
  5608  006A  0020               	movlb	0	; select bank0
  5609  006B  16E6               	bsf	_temperature_value+1,5
  5610  006C                     l4755:	
  5611                           
  5612                           ;max31856.c: 177: temperature_temp = temperature_value;
  5613  006C  0020               	movlb	0	; select bank0
  5614  006D  0866               	movf	_temperature_value+1,w
  5615  006E  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5616  006F  0865               	movf	_temperature_value,w
  5617  0070  00D9               	movwf	tc_temperature_trans@temperature_temp
  5618                           
  5619                           ;max31856.c: 180: if(time_count == 1 && Record_flag == 1)
  5620  0071  036D               	decf	_time_count,w
  5621  0072  1D03               	btfss	3,2
  5622  0073  2901               	goto	l4809
  5623  0074  036B               	decf	_Record_flag,w
  5624  0075  1D03               	btfss	3,2
  5625  0076  2901               	goto	l4809
  5626                           
  5627                           ;max31856.c: 181: {
  5628                           ;max31856.c: 182: temperature_back = CH1_temperature;
  5629  0077  086A               	movf	_CH1_temperature+1,w
  5630  0078  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5631  0079  0869               	movf	_CH1_temperature,w
  5632  007A  00D3               	movwf	tc_temperature_trans@temperature_back
  5633                           
  5634                           ;max31856.c: 183: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5635  007B  3020               	movlw	32
  5636  007C  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5637  007D  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5638  007E  1903               	btfsc	3,2
  5639  007F  2882               	goto	u4130
  5640  0080  3001               	movlw	1
  5641  0081  2883               	goto	u4140
  5642  0082                     u4130:	
  5643  0082  3000               	movlw	0
  5644  0083                     u4140:	
  5645  0083  00CF               	movwf	??_tc_temperature_trans
  5646  0084  01D0               	clrf	??_tc_temperature_trans+1
  5647  0085  0869               	movf	_CH1_temperature,w
  5648  0086  054F               	andwf	??_tc_temperature_trans,w
  5649  0087  00D1               	movwf	??_tc_temperature_trans+2
  5650  0088  086A               	movf	_CH1_temperature+1,w
  5651  0089  0550               	andwf	??_tc_temperature_trans+1,w
  5652  008A  00D2               	movwf	??_tc_temperature_trans+3
  5653  008B  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5654  008C  28D3               	goto	L7
  5655                           
  5656                           ;max31856.c: 196: else
  5657                           ;max31856.c: 197: {
  5658                           ;max31856.c: 198: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5659                           
  5660                           ;max31856.c: 195: }
  5661                           
  5662                           ;max31856.c: 194: CH1_temperature = temperature_value;
  5663                           
  5664                           ;max31856.c: 193: Cur_temperature_time_ch1 = 0;
  5665                           
  5666                           ;max31856.c: 192: Save_Write_word(temperature_value);
  5667                           
  5668                           ;max31856.c: 191: Save_Write_word(var_time);
  5669                           
  5670                           ;max31856.c: 189: var_time |= 0x2000;
  5671                           
  5672                           ;max31856.c: 187: if(CH1_state == 1) var_time |= 0x400;
  5673                           
  5674                           ;max31856.c: 186: var_time |= 0x100;
  5675                           
  5676                           ;max31856.c: 184: {
  5677                           ;max31856.c: 185: var_time = Calculate_Time();
  5678  008D  1EEA               	btfss	_CH1_temperature+1,5
  5679  008E  289C               	goto	l4781
  5680  008F  0969               	comf	_CH1_temperature,w
  5681  0090  00CF               	movwf	??_tc_temperature_trans
  5682  0091  096A               	comf	_CH1_temperature+1,w
  5683  0092  00D0               	movwf	??_tc_temperature_trans+1
  5684  0093  0ACF               	incf	??_tc_temperature_trans,f
  5685  0094  1903               	skipnz
  5686  0095  0AD0               	incf	??_tc_temperature_trans+1,f
  5687  0096  084F               	movf	??_tc_temperature_trans,w
  5688  0097  3E00               	addlw	0
  5689  0098  00E9               	movwf	_CH1_temperature
  5690  0099  3040               	movlw	64
  5691  009A  3D50               	addwfc	??_tc_temperature_trans+1,w
  5692  009B  00EA               	movwf	_CH1_temperature+1
  5693  009C                     l4781:	
  5694                           
  5695                           ;max31856.c: 199: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5696  009C  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  5697  009D  28AB               	goto	l4785
  5698  009E  0959               	comf	tc_temperature_trans@temperature_temp,w
  5699  009F  00CF               	movwf	??_tc_temperature_trans
  5700  00A0  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5701  00A1  00D0               	movwf	??_tc_temperature_trans+1
  5702  00A2  0ACF               	incf	??_tc_temperature_trans,f
  5703  00A3  1903               	skipnz
  5704  00A4  0AD0               	incf	??_tc_temperature_trans+1,f
  5705  00A5  084F               	movf	??_tc_temperature_trans,w
  5706  00A6  3E00               	addlw	0
  5707  00A7  00D9               	movwf	tc_temperature_trans@temperature_temp
  5708  00A8  3040               	movlw	64
  5709  00A9  3D50               	addwfc	??_tc_temperature_trans+1,w
  5710  00AA  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5711  00AB                     l4785:	
  5712                           
  5713                           ;max31856.c: 200: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5714  00AB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5715  00AC  026A               	subwf	_CH1_temperature+1,w
  5716  00AD  1D03               	skipz
  5717  00AE  28B1               	goto	u4195
  5718  00AF  0859               	movf	tc_temperature_trans@temperature_temp,w
  5719  00B0  0269               	subwf	_CH1_temperature,w
  5720  00B1                     u4195:	
  5721  00B1  1803               	skipnc
  5722  00B2  28BF               	goto	l4789
  5723  00B3  0969               	comf	_CH1_temperature,w
  5724  00B4  00CF               	movwf	??_tc_temperature_trans
  5725  00B5  096A               	comf	_CH1_temperature+1,w
  5726  00B6  00D0               	movwf	??_tc_temperature_trans+1
  5727  00B7  0ACF               	incf	??_tc_temperature_trans,f
  5728  00B8  1903               	skipnz
  5729  00B9  0AD0               	incf	??_tc_temperature_trans+1,f
  5730  00BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  5731  00BB  074F               	addwf	??_tc_temperature_trans,w
  5732  00BC  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5733  00BD  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5734  00BE  28CA               	goto	L3
  5735  00BF                     l4789:	
  5736                           
  5737                           ;max31856.c: 201: else temperature_absolute = CH1_temperature - temperature_temp;
  5738  00BF  0959               	comf	tc_temperature_trans@temperature_temp,w
  5739  00C0  00CF               	movwf	??_tc_temperature_trans
  5740  00C1  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5741  00C2  00D0               	movwf	??_tc_temperature_trans+1
  5742  00C3  0ACF               	incf	??_tc_temperature_trans,f
  5743  00C4  1903               	skipnz
  5744  00C5  0AD0               	incf	??_tc_temperature_trans+1,f
  5745  00C6  0869               	movf	_CH1_temperature,w
  5746  00C7  074F               	addwf	??_tc_temperature_trans,w
  5747  00C8  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5748  00C9  086A               	movf	_CH1_temperature+1,w
  5749  00CA                     L3:	
  5750  00CA  3D50               	addwfc	??_tc_temperature_trans+1,w
  5751  00CB  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  5752                           
  5753                           ;max31856.c: 202: if( temperature_absolute > 4)
  5754  00CC  3000               	movlw	0
  5755  00CD  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5756  00CE  3005               	movlw	5
  5757  00CF  1903               	skipnz
  5758  00D0  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  5759  00D1  1C03               	skipc
  5760  00D2  28FC               	goto	l4807
  5761  00D3                     L7:	
  5762                           
  5763                           ;max31856.c: 203: {
  5764                           ;max31856.c: 204: var_time = Calculate_Time();
  5765  00D3  3182  220B  3180   	fcall	_Calculate_Time
  5766  00D6  0020               	movlb	0	; select bank0
  5767  00D7  00CF               	movwf	??_tc_temperature_trans
  5768  00D8  01D0               	clrf	??_tc_temperature_trans+1
  5769  00D9  084F               	movf	??_tc_temperature_trans,w
  5770  00DA  00D7               	movwf	tc_temperature_trans@var_time
  5771  00DB  0850               	movf	??_tc_temperature_trans+1,w
  5772  00DC  00D8               	movwf	tc_temperature_trans@var_time+1
  5773                           
  5774                           ;max31856.c: 205: var_time |= 0x100;
  5775  00DD  1458               	bsf	tc_temperature_trans@var_time+1,0
  5776                           
  5777                           ;max31856.c: 206: if(CH1_state == 1) var_time |= 0x400;
  5778  00DE  0021               	movlb	1	; select bank1
  5779  00DF  0334               	decf	_CH1_state^(0+128),w
  5780  00E0  1D03               	btfss	3,2
  5781  00E1  28E4               	goto	l478
  5782  00E2  0020               	movlb	0	; select bank0
  5783  00E3  1558               	bsf	tc_temperature_trans@var_time+1,2
  5784  00E4                     l478:	
  5785                           
  5786                           ;max31856.c: 208: var_time |= 0x2000;
  5787  00E4  0020               	movlb	0	; select bank0
  5788  00E5  16D8               	bsf	tc_temperature_trans@var_time+1,5
  5789                           
  5790                           ;max31856.c: 210: Save_Write_word(var_time);
  5791  00E6  0858               	movf	tc_temperature_trans@var_time+1,w
  5792  00E7  00B4               	movwf	Save_Write_word@data+1
  5793  00E8  0857               	movf	tc_temperature_trans@var_time,w
  5794  00E9  00B3               	movwf	Save_Write_word@data
  5795  00EA  318C  240F  3180   	fcall	_Save_Write_word
  5796                           
  5797                           ;max31856.c: 211: Save_Write_word(temperature_value);
  5798  00ED  0020               	movlb	0	; select bank0
  5799  00EE  0866               	movf	_temperature_value+1,w
  5800  00EF  00B4               	movwf	Save_Write_word@data+1
  5801  00F0  0865               	movf	_temperature_value,w
  5802  00F1  00B3               	movwf	Save_Write_word@data
  5803  00F2  318C  240F  3180   	fcall	_Save_Write_word
  5804                           
  5805                           ;max31856.c: 212: Cur_temperature_time_ch1 = 0;
  5806  00F5  0021               	movlb	1	; select bank1
  5807  00F6  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  5808                           
  5809                           ;max31856.c: 213: CH1_temperature = temperature_value;
  5810  00F7  0020               	movlb	0	; select bank0
  5811  00F8  0866               	movf	_temperature_value+1,w
  5812  00F9  00EA               	movwf	_CH1_temperature+1
  5813  00FA  0865               	movf	_temperature_value,w
  5814  00FB  28FF               	goto	L4
  5815  00FC                     l4807:	
  5816                           ;max31856.c: 214: }
  5817                           
  5818                           
  5819                           ;max31856.c: 215: else
  5820                           ;max31856.c: 216: {
  5821                           ;max31856.c: 217: CH1_temperature = temperature_back;
  5822  00FC  0854               	movf	tc_temperature_trans@temperature_back+1,w
  5823  00FD  00EA               	movwf	_CH1_temperature+1
  5824  00FE  0853               	movf	tc_temperature_trans@temperature_back,w
  5825  00FF                     L4:	
  5826  00FF  00E9               	movwf	_CH1_temperature
  5827                           
  5828                           ;max31856.c: 218: }
  5829                           ;max31856.c: 219: }
  5830                           ;max31856.c: 221: }
  5831  0100  2991               	goto	l480
  5832  0101                     l4809:	
  5833                           
  5834                           ;max31856.c: 222: else if( time_count == 3 && Record_flag == 1)
  5835  0101  3003               	movlw	3
  5836  0102  066D               	xorwf	_time_count,w
  5837  0103  1D03               	btfss	3,2
  5838  0104  2991               	goto	l480
  5839  0105  036B               	decf	_Record_flag,w
  5840  0106  1D03               	btfss	3,2
  5841  0107  2991               	goto	l480
  5842                           
  5843                           ;max31856.c: 223: {
  5844                           ;max31856.c: 224: temperature_back = CH2_temperature;
  5845  0108  0879               	movf	_CH2_temperature+1,w
  5846  0109  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5847  010A  0878               	movf	_CH2_temperature,w
  5848  010B  00D3               	movwf	tc_temperature_trans@temperature_back
  5849                           
  5850                           ;max31856.c: 225: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5851  010C  3020               	movlw	32
  5852  010D  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5853  010E  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5854  010F  1903               	btfsc	3,2
  5855  0110  2913               	goto	u4240
  5856  0111  3001               	movlw	1
  5857  0112  2914               	goto	u4250
  5858  0113                     u4240:	
  5859  0113  3000               	movlw	0
  5860  0114                     u4250:	
  5861  0114  00CF               	movwf	??_tc_temperature_trans
  5862  0115  01D0               	clrf	??_tc_temperature_trans+1
  5863  0116  0878               	movf	_CH2_temperature,w
  5864  0117  054F               	andwf	??_tc_temperature_trans,w
  5865  0118  00D1               	movwf	??_tc_temperature_trans+2
  5866  0119  0879               	movf	_CH2_temperature+1,w
  5867  011A  0550               	andwf	??_tc_temperature_trans+1,w
  5868  011B  00D2               	movwf	??_tc_temperature_trans+3
  5869  011C  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5870  011D  2964               	goto	L8
  5871                           
  5872                           ;max31856.c: 238: else
  5873                           ;max31856.c: 239: {
  5874                           ;max31856.c: 240: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5875                           
  5876                           ;max31856.c: 237: }
  5877                           
  5878                           ;max31856.c: 236: CH2_temperature = temperature_value;
  5879                           
  5880                           ;max31856.c: 235: Cur_temperature_time_ch2 = 0;
  5881                           
  5882                           ;max31856.c: 234: Save_Write_word(temperature_value);
  5883                           
  5884                           ;max31856.c: 233: Save_Write_word(var_time);
  5885                           
  5886                           ;max31856.c: 231: var_time |= 0x2000;
  5887                           
  5888                           ;max31856.c: 229: if(CH2_state == 1) var_time |= 0x800;
  5889                           
  5890                           ;max31856.c: 228: var_time |= 0x200;
  5891                           
  5892                           ;max31856.c: 226: {
  5893                           ;max31856.c: 227: var_time = Calculate_Time();
  5894  011E  1EF9               	btfss	_CH2_temperature+1,5
  5895  011F  292D               	goto	l4833
  5896  0120  0978               	comf	_CH2_temperature,w
  5897  0121  00CF               	movwf	??_tc_temperature_trans
  5898  0122  0979               	comf	_CH2_temperature+1,w
  5899  0123  00D0               	movwf	??_tc_temperature_trans+1
  5900  0124  0ACF               	incf	??_tc_temperature_trans,f
  5901  0125  1903               	skipnz
  5902  0126  0AD0               	incf	??_tc_temperature_trans+1,f
  5903  0127  084F               	movf	??_tc_temperature_trans,w
  5904  0128  3E00               	addlw	0
  5905  0129  00F8               	movwf	_CH2_temperature
  5906  012A  3040               	movlw	64
  5907  012B  3D50               	addwfc	??_tc_temperature_trans+1,w
  5908  012C  00F9               	movwf	_CH2_temperature+1
  5909  012D                     l4833:	
  5910                           
  5911                           ;max31856.c: 241: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5912  012D  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  5913  012E  293C               	goto	l4837
  5914  012F  0959               	comf	tc_temperature_trans@temperature_temp,w
  5915  0130  00CF               	movwf	??_tc_temperature_trans
  5916  0131  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5917  0132  00D0               	movwf	??_tc_temperature_trans+1
  5918  0133  0ACF               	incf	??_tc_temperature_trans,f
  5919  0134  1903               	skipnz
  5920  0135  0AD0               	incf	??_tc_temperature_trans+1,f
  5921  0136  084F               	movf	??_tc_temperature_trans,w
  5922  0137  3E00               	addlw	0
  5923  0138  00D9               	movwf	tc_temperature_trans@temperature_temp
  5924  0139  3040               	movlw	64
  5925  013A  3D50               	addwfc	??_tc_temperature_trans+1,w
  5926  013B  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5927  013C                     l4837:	
  5928                           
  5929                           ;max31856.c: 242: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  5930  013C  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5931  013D  0279               	subwf	_CH2_temperature+1,w
  5932  013E  1D03               	skipz
  5933  013F  2942               	goto	u4305
  5934  0140  0859               	movf	tc_temperature_trans@temperature_temp,w
  5935  0141  0278               	subwf	_CH2_temperature,w
  5936  0142                     u4305:	
  5937  0142  1803               	skipnc
  5938  0143  2950               	goto	l4841
  5939  0144  0978               	comf	_CH2_temperature,w
  5940  0145  00CF               	movwf	??_tc_temperature_trans
  5941  0146  0979               	comf	_CH2_temperature+1,w
  5942  0147  00D0               	movwf	??_tc_temperature_trans+1
  5943  0148  0ACF               	incf	??_tc_temperature_trans,f
  5944  0149  1903               	skipnz
  5945  014A  0AD0               	incf	??_tc_temperature_trans+1,f
  5946  014B  0859               	movf	tc_temperature_trans@temperature_temp,w
  5947  014C  074F               	addwf	??_tc_temperature_trans,w
  5948  014D  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5949  014E  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5950  014F  295B               	goto	L5
  5951  0150                     l4841:	
  5952                           
  5953                           ;max31856.c: 243: else temperature_absolute = CH2_temperature - temperature_temp;
  5954  0150  0959               	comf	tc_temperature_trans@temperature_temp,w
  5955  0151  00CF               	movwf	??_tc_temperature_trans
  5956  0152  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5957  0153  00D0               	movwf	??_tc_temperature_trans+1
  5958  0154  0ACF               	incf	??_tc_temperature_trans,f
  5959  0155  1903               	skipnz
  5960  0156  0AD0               	incf	??_tc_temperature_trans+1,f
  5961  0157  0878               	movf	_CH2_temperature,w
  5962  0158  074F               	addwf	??_tc_temperature_trans,w
  5963  0159  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5964  015A  0879               	movf	_CH2_temperature+1,w
  5965  015B                     L5:	
  5966  015B  3D50               	addwfc	??_tc_temperature_trans+1,w
  5967  015C  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  5968                           
  5969                           ;max31856.c: 244: if( temperature_absolute > 4)
  5970  015D  3000               	movlw	0
  5971  015E  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5972  015F  3005               	movlw	5
  5973  0160  1903               	skipnz
  5974  0161  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  5975  0162  1C03               	skipc
  5976  0163  298D               	goto	l4859
  5977  0164                     L8:	
  5978                           
  5979                           ;max31856.c: 245: {
  5980                           ;max31856.c: 246: var_time = Calculate_Time();
  5981  0164  3182  220B  3180   	fcall	_Calculate_Time
  5982  0167  0020               	movlb	0	; select bank0
  5983  0168  00CF               	movwf	??_tc_temperature_trans
  5984  0169  01D0               	clrf	??_tc_temperature_trans+1
  5985  016A  084F               	movf	??_tc_temperature_trans,w
  5986  016B  00D7               	movwf	tc_temperature_trans@var_time
  5987  016C  0850               	movf	??_tc_temperature_trans+1,w
  5988  016D  00D8               	movwf	tc_temperature_trans@var_time+1
  5989                           
  5990                           ;max31856.c: 247: var_time |= 0x200;
  5991  016E  14D8               	bsf	tc_temperature_trans@var_time+1,1
  5992                           
  5993                           ;max31856.c: 248: if(CH2_state == 1) var_time |= 0x800;
  5994  016F  0021               	movlb	1	; select bank1
  5995  0170  0335               	decf	_CH2_state^(0+128),w
  5996  0171  1D03               	btfss	3,2
  5997  0172  2975               	goto	l490
  5998  0173  0020               	movlb	0	; select bank0
  5999  0174  15D8               	bsf	tc_temperature_trans@var_time+1,3
  6000  0175                     l490:	
  6001                           
  6002                           ;max31856.c: 250: var_time |= 0x2000;
  6003  0175  0020               	movlb	0	; select bank0
  6004  0176  16D8               	bsf	tc_temperature_trans@var_time+1,5
  6005                           
  6006                           ;max31856.c: 252: Save_Write_word(var_time);
  6007  0177  0858               	movf	tc_temperature_trans@var_time+1,w
  6008  0178  00B4               	movwf	Save_Write_word@data+1
  6009  0179  0857               	movf	tc_temperature_trans@var_time,w
  6010  017A  00B3               	movwf	Save_Write_word@data
  6011  017B  318C  240F  3180   	fcall	_Save_Write_word
  6012                           
  6013                           ;max31856.c: 253: Save_Write_word(temperature_value);
  6014  017E  0020               	movlb	0	; select bank0
  6015  017F  0866               	movf	_temperature_value+1,w
  6016  0180  00B4               	movwf	Save_Write_word@data+1
  6017  0181  0865               	movf	_temperature_value,w
  6018  0182  00B3               	movwf	Save_Write_word@data
  6019  0183  318C  240F  3180   	fcall	_Save_Write_word
  6020                           
  6021                           ;max31856.c: 254: Cur_temperature_time_ch2 = 0;
  6022  0186  0021               	movlb	1	; select bank1
  6023  0187  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6024                           
  6025                           ;max31856.c: 255: CH2_temperature = temperature_value;
  6026  0188  0020               	movlb	0	; select bank0
  6027  0189  0866               	movf	_temperature_value+1,w
  6028  018A  00F9               	movwf	_CH2_temperature+1
  6029  018B  0865               	movf	_temperature_value,w
  6030  018C  2990               	goto	L6
  6031  018D                     l4859:	
  6032                           ;max31856.c: 256: }
  6033                           
  6034                           
  6035                           ;max31856.c: 257: else
  6036                           ;max31856.c: 258: {
  6037                           ;max31856.c: 259: CH2_temperature = temperature_back;
  6038  018D  0854               	movf	tc_temperature_trans@temperature_back+1,w
  6039  018E  00F9               	movwf	_CH2_temperature+1
  6040  018F  0853               	movf	tc_temperature_trans@temperature_back,w
  6041  0190                     L6:	
  6042  0190  00F8               	movwf	_CH2_temperature
  6043  0191                     l480:	
  6044                           
  6045                           ;max31856.c: 260: }
  6046                           ;max31856.c: 261: }
  6047                           ;max31856.c: 263: }
  6048                           ;max31856.c: 265: temperature_temp = temperature_value;
  6049  0191  0866               	movf	_temperature_value+1,w
  6050  0192  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  6051  0193  0865               	movf	_temperature_value,w
  6052  0194  00D9               	movwf	tc_temperature_trans@temperature_temp
  6053                           
  6054                           ;max31856.c: 266: if((uch_ltcbh&0x80)==0x80)
  6055  0195  0021               	movlb	1	; select bank1
  6056  0196  1FBF               	btfss	_uch_ltcbh^(0+128),7
  6057  0197  29D8               	goto	l4877
  6058                           
  6059                           ;max31856.c: 267: {
  6060                           ;max31856.c: 268: temperature_sign = 1;
  6061  0198  01BA               	clrf	_temperature_sign^(0+128)
  6062  0199  0ABA               	incf	_temperature_sign^(0+128),f
  6063                           
  6064                           ;max31856.c: 269: temperature_temp=0x3FFF-temperature_temp + 1 ;
  6065  019A  0020               	movlb	0	; select bank0
  6066  019B  0959               	comf	tc_temperature_trans@temperature_temp,w
  6067  019C  00CF               	movwf	??_tc_temperature_trans
  6068  019D  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  6069  019E  00D0               	movwf	??_tc_temperature_trans+1
  6070  019F  0ACF               	incf	??_tc_temperature_trans,f
  6071  01A0  1903               	skipnz
  6072  01A1  0AD0               	incf	??_tc_temperature_trans+1,f
  6073  01A2  084F               	movf	??_tc_temperature_trans,w
  6074  01A3  3E00               	addlw	0
  6075  01A4  00D9               	movwf	tc_temperature_trans@temperature_temp
  6076  01A5  3040               	movlw	64
  6077  01A6  3D50               	addwfc	??_tc_temperature_trans+1,w
  6078  01A7  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  6079                           
  6080                           ;max31856.c: 271: temperature_int = temperature_temp>>3;
  6081  01A8  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6082  01A9  00D0               	movwf	??_tc_temperature_trans+1
  6083  01AA  0859               	movf	tc_temperature_trans@temperature_temp,w
  6084  01AB  00CF               	movwf	??_tc_temperature_trans
  6085  01AC  36D0               	lsrf	??_tc_temperature_trans+1,f
  6086  01AD  0CCF               	rrf	??_tc_temperature_trans,f
  6087  01AE  36D0               	lsrf	??_tc_temperature_trans+1,f
  6088  01AF  0CCF               	rrf	??_tc_temperature_trans,f
  6089  01B0  36D0               	lsrf	??_tc_temperature_trans+1,f
  6090  01B1  0CCF               	rrf	??_tc_temperature_trans,f
  6091  01B2  084F               	movf	??_tc_temperature_trans,w
  6092  01B3  0021               	movlb	1	; select bank1
  6093  01B4  00B2               	movwf	_temperature_int^(0+128)
  6094  01B5  0020               	movlb	0	; select bank0
  6095  01B6  0850               	movf	??_tc_temperature_trans+1,w
  6096  01B7  0021               	movlb	1	; select bank1
  6097  01B8  00B3               	movwf	(_temperature_int+1)^(0+128)
  6098                           
  6099                           ;max31856.c: 272: temperature_decimal = temperature_temp & 0x07;
  6100  01B9  0020               	movlb	0	; select bank0
  6101  01BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  6102  01BB  3907               	andlw	7
  6103  01BC  00CF               	movwf	??_tc_temperature_trans
  6104  01BD  084F               	movf	??_tc_temperature_trans,w
  6105  01BE  00EC               	movwf	_temperature_decimal
  6106                           
  6107                           ;max31856.c: 273: if(temperature_decimal > 3) temperature_decimal++;
  6108  01BF  3004               	movlw	4
  6109  01C0  026C               	subwf	_temperature_decimal,w
  6110  01C1  1C03               	skipc
  6111  01C2  29C7               	goto	l493
  6112  01C3  3001               	movlw	1
  6113  01C4  00CF               	movwf	??_tc_temperature_trans
  6114  01C5  084F               	movf	??_tc_temperature_trans,w
  6115  01C6  07EC               	addwf	_temperature_decimal,f
  6116  01C7                     l493:	
  6117                           
  6118                           ;max31856.c: 274: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  6119  01C7  3003               	movlw	3
  6120  01C8  066C               	xorwf	_temperature_decimal,w
  6121  01C9  1903               	btfsc	3,2
  6122  01CA  29CF               	goto	l496
  6123  01CB  3008               	movlw	8
  6124  01CC  066C               	xorwf	_temperature_decimal,w
  6125  01CD  1D03               	btfss	3,2
  6126  01CE  0008               	return
  6127  01CF                     l496:	
  6128  01CF  0021               	movlb	1	; select bank1
  6129  01D0  1C32               	btfss	_temperature_int^(0+128),0
  6130  01D1  0008               	return
  6131  01D2  3001               	movlw	1
  6132  01D3  0020               	movlb	0	; select bank0
  6133  01D4  00CF               	movwf	??_tc_temperature_trans
  6134  01D5  084F               	movf	??_tc_temperature_trans,w
  6135  01D6  07EC               	addwf	_temperature_decimal,f
  6136                           
  6137                           ;max31856.c: 275: }
  6138  01D7  0008               	return
  6139  01D8                     l4877:	
  6140                           
  6141                           ;max31856.c: 276: else
  6142                           ;max31856.c: 277: {
  6143                           ;max31856.c: 278: temperature_sign = 0;
  6144  01D8  0021               	movlb	1	; select bank1
  6145  01D9  01BA               	clrf	_temperature_sign^(0+128)
  6146                           
  6147                           ;max31856.c: 279: temperature_int = temperature_temp>>3;
  6148  01DA  0020               	movlb	0	; select bank0
  6149  01DB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6150  01DC  00D0               	movwf	??_tc_temperature_trans+1
  6151  01DD  0859               	movf	tc_temperature_trans@temperature_temp,w
  6152  01DE  00CF               	movwf	??_tc_temperature_trans
  6153  01DF  36D0               	lsrf	??_tc_temperature_trans+1,f
  6154  01E0  0CCF               	rrf	??_tc_temperature_trans,f
  6155  01E1  36D0               	lsrf	??_tc_temperature_trans+1,f
  6156  01E2  0CCF               	rrf	??_tc_temperature_trans,f
  6157  01E3  36D0               	lsrf	??_tc_temperature_trans+1,f
  6158  01E4  0CCF               	rrf	??_tc_temperature_trans,f
  6159  01E5  084F               	movf	??_tc_temperature_trans,w
  6160  01E6  0021               	movlb	1	; select bank1
  6161  01E7  00B2               	movwf	_temperature_int^(0+128)
  6162  01E8  0020               	movlb	0	; select bank0
  6163  01E9  0850               	movf	??_tc_temperature_trans+1,w
  6164  01EA  0021               	movlb	1	; select bank1
  6165  01EB  00B3               	movwf	(_temperature_int+1)^(0+128)
  6166                           
  6167                           ;max31856.c: 280: temperature_decimal = temperature_temp & 0x07;
  6168  01EC  0020               	movlb	0	; select bank0
  6169  01ED  0859               	movf	tc_temperature_trans@temperature_temp,w
  6170  01EE  3907               	andlw	7
  6171  01EF  00CF               	movwf	??_tc_temperature_trans
  6172  01F0  084F               	movf	??_tc_temperature_trans,w
  6173  01F1  00EC               	movwf	_temperature_decimal
  6174                           
  6175                           ;max31856.c: 281: if(temperature_decimal > 3) temperature_decimal++;
  6176  01F2  3004               	movlw	4
  6177  01F3  026C               	subwf	_temperature_decimal,w
  6178  01F4  1C03               	skipc
  6179  01F5  29FA               	goto	l498
  6180  01F6  3001               	movlw	1
  6181  01F7  00CF               	movwf	??_tc_temperature_trans
  6182  01F8  084F               	movf	??_tc_temperature_trans,w
  6183  01F9  07EC               	addwf	_temperature_decimal,f
  6184  01FA                     l498:	
  6185                           
  6186                           ;max31856.c: 282: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  6187  01FA  3004               	movlw	4
  6188  01FB  066C               	xorwf	_temperature_decimal,w
  6189  01FC  1903               	btfsc	3,2
  6190  01FD  2A02               	goto	l501
  6191  01FE  3008               	movlw	8
  6192  01FF  066C               	xorwf	_temperature_decimal,w
  6193  0200  1D03               	btfss	3,2
  6194  0201  0008               	return
  6195  0202                     l501:	
  6196  0202  0021               	movlb	1	; select bank1
  6197  0203  1C32               	btfss	_temperature_int^(0+128),0
  6198  0204  0008               	return
  6199  0205  3001               	movlw	1
  6200  0206  0020               	movlb	0	; select bank0
  6201  0207  00CF               	movwf	??_tc_temperature_trans
  6202  0208  084F               	movf	??_tc_temperature_trans,w
  6203  0209  07EC               	addwf	_temperature_decimal,f
  6204  020A  0008               	return
  6205  020B                     __end_of_tc_temperature_trans:	
  6206                           
  6207                           	psect	text19
  6208  020B                     __ptext19:	
  6209 ;; *************** function _Calculate_Time *****************
  6210 ;; Defined at:
  6211 ;;		line 163 in file "mcc_generated_files/save.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  temp2           4   43[BANK0 ] unsigned long 
  6216 ;;  temp1           4   39[BANK0 ] unsigned long 
  6217 ;;  temp            4   35[BANK0 ] unsigned long 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      unsigned char 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;Total ram usage:       22 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    8
  6234 ;; This function calls:
  6235 ;;		_Bq32k_Rtc_Read_Time
  6236 ;;		_Save_Write_time
  6237 ;;		_Write_Flash_finish
  6238 ;;		_Write_Flash_head
  6239 ;;		___wmul
  6240 ;; This function is called by:
  6241 ;;		_tc_temperature_trans
  6242 ;;		_Save_process
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           
  6247                           ;psect for function _Calculate_Time
  6248  020B                     _Calculate_Time:	
  6249                           
  6250                           ;save.c: 165: unsigned long temp = 0 ;
  6251                           
  6252                           ;incstack = 0
  6253                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6254  020B  3000               	movlw	0
  6255  020C  0020               	movlb	0	; select bank0
  6256  020D  00C6               	movwf	Calculate_Time@temp+3
  6257  020E  3000               	movlw	0
  6258  020F  00C5               	movwf	Calculate_Time@temp+2
  6259  0210  3000               	movlw	0
  6260  0211  00C4               	movwf	Calculate_Time@temp+1
  6261  0212  3000               	movlw	0
  6262  0213  00C3               	movwf	Calculate_Time@temp
  6263                           
  6264                           ;save.c: 166: unsigned long temp1 = 0 ;
  6265  0214  3000               	movlw	0
  6266  0215  00CA               	movwf	Calculate_Time@temp1+3
  6267  0216  3000               	movlw	0
  6268  0217  00C9               	movwf	Calculate_Time@temp1+2
  6269  0218  3000               	movlw	0
  6270  0219  00C8               	movwf	Calculate_Time@temp1+1
  6271  021A  3000               	movlw	0
  6272  021B  00C7               	movwf	Calculate_Time@temp1
  6273                           
  6274                           ;save.c: 167: unsigned long temp2 = 0 ;
  6275  021C  3000               	movlw	0
  6276  021D  00CE               	movwf	Calculate_Time@temp2+3
  6277  021E  3000               	movlw	0
  6278  021F  00CD               	movwf	Calculate_Time@temp2+2
  6279  0220  3000               	movlw	0
  6280  0221  00CC               	movwf	Calculate_Time@temp2+1
  6281  0222  3000               	movlw	0
  6282  0223  00CB               	movwf	Calculate_Time@temp2
  6283                           
  6284                           ;save.c: 168: Bq32k_Rtc_Read_Time(&rtc_tm);
  6285  0224  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  6286  0225  318F  2738  3182   	fcall	_Bq32k_Rtc_Read_Time
  6287                           
  6288                           ;save.c: 169: if( time_count == 1 )
  6289  0228  0020               	movlb	0	; select bank0
  6290  0229  036D               	decf	_time_count,w
  6291  022A  1D03               	btfss	3,2
  6292  022B  2AE0               	goto	l4645
  6293                           
  6294                           ;save.c: 170: {
  6295                           ;save.c: 171: if(rtc_tm.date != rtc_save_ch1.date)
  6296  022C  0021               	movlb	1	; select bank1
  6297  022D  085E               	movf	(_rtc_tm^(0+128)+4),w
  6298  022E  0650               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6299  022F  1D03               	btfss	3,2
  6300  0230  2AE9               	goto	l4649
  6301                           
  6302                           ;save.c: 183: else
  6303                           ;save.c: 184: {
  6304                           ;save.c: 185: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6305                           
  6306                           ;save.c: 182: }
  6307                           
  6308                           ;save.c: 181: time_count = 0;
  6309                           
  6310                           ;save.c: 178: Cur_temperature_time_ch2 = 0;
  6311                           
  6312                           ;save.c: 177: Cur_temperature_time_ch1 = 0;
  6313                           
  6314                           ;save.c: 176: Save_Write_time();
  6315                           
  6316                           ;save.c: 175: Write_Flash_head();
  6317                           
  6318                           ;save.c: 172: {
  6319                           ;save.c: 174: Write_Flash_finish();
  6320  0231  0021               	movlb	1	; select bank1
  6321  0232  085A               	movf	_rtc_tm^(0+128),w
  6322  0233  0020               	movlb	0	; select bank0
  6323  0234  00B9               	movwf	??_Calculate_Time
  6324  0235  01BA               	clrf	??_Calculate_Time+1
  6325  0236  0021               	movlb	1	; select bank1
  6326  0237  085C               	movf	(_rtc_tm^(0+128)+2),w
  6327  0238  0020               	movlb	0	; select bank0
  6328  0239  00BB               	movwf	??_Calculate_Time+2
  6329  023A  01BC               	clrf	??_Calculate_Time+3
  6330  023B  083B               	movf	??_Calculate_Time+2,w
  6331  023C  00F3               	movwf	___wmul@multiplier
  6332  023D  083C               	movf	??_Calculate_Time+3,w
  6333  023E  00F4               	movwf	___wmul@multiplier+1
  6334  023F  3010               	movlw	16
  6335  0240  00F5               	movwf	___wmul@multiplicand
  6336  0241  300E               	movlw	14
  6337  0242  00F6               	movwf	___wmul@multiplicand+1
  6338  0243  3189  21BD  3182   	fcall	___wmul
  6339  0246  0873               	movf	?___wmul,w
  6340  0247  0020               	movlb	0	; select bank0
  6341  0248  00BD               	movwf	??_Calculate_Time+4
  6342  0249  0874               	movf	?___wmul+1,w
  6343  024A  00BE               	movwf	??_Calculate_Time+5
  6344  024B  0021               	movlb	1	; select bank1
  6345  024C  085B               	movf	(_rtc_tm^(0+128)+1),w
  6346  024D  0020               	movlb	0	; select bank0
  6347  024E  00BF               	movwf	??_Calculate_Time+6
  6348  024F  01C0               	clrf	??_Calculate_Time+7
  6349  0250  083F               	movf	??_Calculate_Time+6,w
  6350  0251  00F3               	movwf	___wmul@multiplier
  6351  0252  0840               	movf	??_Calculate_Time+7,w
  6352  0253  00F4               	movwf	___wmul@multiplier+1
  6353  0254  303C               	movlw	60
  6354  0255  00F5               	movwf	___wmul@multiplicand
  6355  0256  3000               	movlw	0
  6356  0257  00F6               	movwf	___wmul@multiplicand+1
  6357  0258  3189  21BD  3182   	fcall	___wmul
  6358  025B  0873               	movf	?___wmul,w
  6359  025C  0020               	movlb	0	; select bank0
  6360  025D  073D               	addwf	??_Calculate_Time+4,w
  6361  025E  00C1               	movwf	??_Calculate_Time+8
  6362  025F  0874               	movf	?___wmul+1,w
  6363  0260  3D3E               	addwfc	??_Calculate_Time+5,w
  6364  0261  00C2               	movwf	??_Calculate_Time+9
  6365  0262  0839               	movf	??_Calculate_Time,w
  6366  0263  0741               	addwf	??_Calculate_Time+8,w
  6367  0264  00C7               	movwf	Calculate_Time@temp1
  6368  0265  083A               	movf	??_Calculate_Time+1,w
  6369  0266  3D42               	addwfc	??_Calculate_Time+9,w
  6370  0267  00C8               	movwf	Calculate_Time@temp1+1
  6371  0268  01C9               	clrf	Calculate_Time@temp1+2
  6372  0269  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6373  026A  03C9               	decf	Calculate_Time@temp1+2,f
  6374  026B  0849               	movf	Calculate_Time@temp1+2,w
  6375  026C  00CA               	movwf	Calculate_Time@temp1+3
  6376                           
  6377                           ;save.c: 186: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6378  026D  0021               	movlb	1	; select bank1
  6379  026E  084C               	movf	_rtc_save_ch1^(0+128),w
  6380  026F  0020               	movlb	0	; select bank0
  6381  0270  00B9               	movwf	??_Calculate_Time
  6382  0271  01BA               	clrf	??_Calculate_Time+1
  6383  0272  0021               	movlb	1	; select bank1
  6384  0273  084E               	movf	(_rtc_save_ch1^(0+128)+2),w
  6385  0274  0020               	movlb	0	; select bank0
  6386  0275  00BB               	movwf	??_Calculate_Time+2
  6387  0276  01BC               	clrf	??_Calculate_Time+3
  6388  0277  083B               	movf	??_Calculate_Time+2,w
  6389  0278  00F3               	movwf	___wmul@multiplier
  6390  0279  083C               	movf	??_Calculate_Time+3,w
  6391  027A  00F4               	movwf	___wmul@multiplier+1
  6392  027B  3010               	movlw	16
  6393  027C  00F5               	movwf	___wmul@multiplicand
  6394  027D  300E               	movlw	14
  6395  027E  00F6               	movwf	___wmul@multiplicand+1
  6396  027F  3189  21BD  3182   	fcall	___wmul
  6397  0282  0873               	movf	?___wmul,w
  6398  0283  0020               	movlb	0	; select bank0
  6399  0284  00BD               	movwf	??_Calculate_Time+4
  6400  0285  0874               	movf	?___wmul+1,w
  6401  0286  00BE               	movwf	??_Calculate_Time+5
  6402  0287  0021               	movlb	1	; select bank1
  6403  0288  084D               	movf	(_rtc_save_ch1^(0+128)+1),w
  6404  0289  0020               	movlb	0	; select bank0
  6405  028A  00BF               	movwf	??_Calculate_Time+6
  6406  028B  01C0               	clrf	??_Calculate_Time+7
  6407  028C  083F               	movf	??_Calculate_Time+6,w
  6408  028D  00F3               	movwf	___wmul@multiplier
  6409  028E  0840               	movf	??_Calculate_Time+7,w
  6410  028F  00F4               	movwf	___wmul@multiplier+1
  6411  0290  303C               	movlw	60
  6412  0291  00F5               	movwf	___wmul@multiplicand
  6413  0292  3000               	movlw	0
  6414  0293  00F6               	movwf	___wmul@multiplicand+1
  6415  0294  3189  21BD  3182   	fcall	___wmul
  6416  0297  0873               	movf	?___wmul,w
  6417  0298  0020               	movlb	0	; select bank0
  6418  0299  073D               	addwf	??_Calculate_Time+4,w
  6419  029A  00C1               	movwf	??_Calculate_Time+8
  6420  029B  0874               	movf	?___wmul+1,w
  6421  029C  3D3E               	addwfc	??_Calculate_Time+5,w
  6422  029D  00C2               	movwf	??_Calculate_Time+9
  6423  029E  0839               	movf	??_Calculate_Time,w
  6424  029F  0741               	addwf	??_Calculate_Time+8,w
  6425  02A0  00CB               	movwf	Calculate_Time@temp2
  6426  02A1  083A               	movf	??_Calculate_Time+1,w
  6427  02A2  3D42               	addwfc	??_Calculate_Time+9,w
  6428  02A3  00CC               	movwf	Calculate_Time@temp2+1
  6429  02A4  01CD               	clrf	Calculate_Time@temp2+2
  6430  02A5  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6431  02A6  03CD               	decf	Calculate_Time@temp2+2,f
  6432  02A7  084D               	movf	Calculate_Time@temp2+2,w
  6433  02A8  00CE               	movwf	Calculate_Time@temp2+3
  6434                           
  6435                           ;save.c: 187: temp = temp1 - temp2;
  6436  02A9  0847               	movf	Calculate_Time@temp1,w
  6437  02AA  00B9               	movwf	??_Calculate_Time
  6438  02AB  0848               	movf	Calculate_Time@temp1+1,w
  6439  02AC  00BA               	movwf	??_Calculate_Time+1
  6440  02AD  0849               	movf	Calculate_Time@temp1+2,w
  6441  02AE  00BB               	movwf	??_Calculate_Time+2
  6442  02AF  084A               	movf	Calculate_Time@temp1+3,w
  6443  02B0  00BC               	movwf	??_Calculate_Time+3
  6444  02B1  094B               	comf	Calculate_Time@temp2,w
  6445  02B2  00BD               	movwf	??_Calculate_Time+4
  6446  02B3  094C               	comf	Calculate_Time@temp2+1,w
  6447  02B4  00BE               	movwf	??_Calculate_Time+5
  6448  02B5  094D               	comf	Calculate_Time@temp2+2,w
  6449  02B6  00BF               	movwf	??_Calculate_Time+6
  6450  02B7  094E               	comf	Calculate_Time@temp2+3,w
  6451  02B8  00C0               	movwf	??_Calculate_Time+7
  6452  02B9  0ABD               	incf	??_Calculate_Time+4,f
  6453  02BA  1903               	skipnz
  6454  02BB  0ABE               	incf	??_Calculate_Time+5,f
  6455  02BC  1903               	skipnz
  6456  02BD  0ABF               	incf	??_Calculate_Time+6,f
  6457  02BE  1903               	skipnz
  6458  02BF  0AC0               	incf	??_Calculate_Time+7,f
  6459  02C0  083D               	movf	??_Calculate_Time+4,w
  6460  02C1  07B9               	addwf	??_Calculate_Time,f
  6461  02C2  083E               	movf	??_Calculate_Time+5,w
  6462  02C3  3DBA               	addwfc	??_Calculate_Time+1,f
  6463  02C4  083F               	movf	??_Calculate_Time+6,w
  6464  02C5  3DBB               	addwfc	??_Calculate_Time+2,f
  6465  02C6  0840               	movf	??_Calculate_Time+7,w
  6466  02C7  3DBC               	addwfc	??_Calculate_Time+3,f
  6467  02C8  083C               	movf	??_Calculate_Time+3,w
  6468  02C9  00C6               	movwf	Calculate_Time@temp+3
  6469  02CA  083B               	movf	??_Calculate_Time+2,w
  6470  02CB  00C5               	movwf	Calculate_Time@temp+2
  6471  02CC  083A               	movf	??_Calculate_Time+1,w
  6472  02CD  00C4               	movwf	Calculate_Time@temp+1
  6473  02CE  0839               	movf	??_Calculate_Time,w
  6474  02CF  00C3               	movwf	Calculate_Time@temp
  6475                           
  6476                           ;save.c: 188: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6477  02D0  30CC               	movlw	low (_rtc_save_ch1| 0)
  6478  02D1  0086               	movwf	6
  6479  02D2  0187               	clrf	7
  6480  02D3  30DA               	movlw	low (_rtc_tm| 0)
  6481  02D4  0084               	movwf	4
  6482  02D5  0185               	clrf	5
  6483  02D6  3007               	movlw	7
  6484  02D7  0020               	movlb	0	; select bank0
  6485  02D8  00B9               	movwf	??_Calculate_Time
  6486  02D9                     u392m0:	
  6487  02D9  0012               	moviw fsr0++
  6488  02DA  001E               	movwi fsr1++
  6489  02DB  0BB9               	decfsz	??_Calculate_Time,f
  6490  02DC  2AD9               	goto	u392m0
  6491                           
  6492                           ;save.c: 189: return temp;
  6493  02DD  0020               	movlb	0	; select bank0
  6494  02DE  0843               	movf	Calculate_Time@temp,w
  6495  02DF  0008               	return
  6496  02E0                     l4645:	
  6497                           ;save.c: 190: }
  6498                           ;save.c: 191: }
  6499                           
  6500                           
  6501                           ;save.c: 192: else if( time_count == 3 )
  6502  02E0  3003               	movlw	3
  6503  02E1  066D               	xorwf	_time_count,w
  6504  02E2  1D03               	btfss	3,2
  6505  02E3  2BA7               	goto	l4669
  6506                           
  6507                           ;save.c: 193: {
  6508                           ;save.c: 194: if(rtc_tm.date != rtc_save_ch2.date)
  6509  02E4  0021               	movlb	1	; select bank1
  6510  02E5  085E               	movf	(_rtc_tm^(0+128)+4),w
  6511  02E6  0657               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6512  02E7  1903               	skipnz
  6513  02E8  2AF8               	goto	l4659
  6514  02E9                     l4649:	
  6515                           
  6516                           ;save.c: 195: {
  6517                           ;save.c: 197: Write_Flash_finish();
  6518  02E9  318A  22E3  3182   	fcall	_Write_Flash_finish
  6519                           
  6520                           ;save.c: 198: Write_Flash_head();
  6521  02EC  318B  2312  3182   	fcall	_Write_Flash_head
  6522                           
  6523                           ;save.c: 199: Save_Write_time();
  6524  02EF  3187  2709  3182   	fcall	_Save_Write_time
  6525                           
  6526                           ;save.c: 200: Cur_temperature_time_ch1 = 0;
  6527  02F2  0021               	movlb	1	; select bank1
  6528  02F3  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  6529                           
  6530                           ;save.c: 201: Cur_temperature_time_ch2 = 0;
  6531  02F4  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6532                           
  6533                           ;save.c: 204: time_count = 0;
  6534  02F5  0020               	movlb	0	; select bank0
  6535  02F6  01ED               	clrf	_time_count
  6536                           
  6537                           ;save.c: 205: }
  6538  02F7  2BA7               	goto	l4669
  6539  02F8                     l4659:	
  6540                           
  6541                           ;save.c: 206: else
  6542                           ;save.c: 207: {
  6543                           ;save.c: 208: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6544  02F8  0021               	movlb	1	; select bank1
  6545  02F9  085A               	movf	_rtc_tm^(0+128),w
  6546  02FA  0020               	movlb	0	; select bank0
  6547  02FB  00B9               	movwf	??_Calculate_Time
  6548  02FC  01BA               	clrf	??_Calculate_Time+1
  6549  02FD  0021               	movlb	1	; select bank1
  6550  02FE  085C               	movf	(_rtc_tm^(0+128)+2),w
  6551  02FF  0020               	movlb	0	; select bank0
  6552  0300  00BB               	movwf	??_Calculate_Time+2
  6553  0301  01BC               	clrf	??_Calculate_Time+3
  6554  0302  083B               	movf	??_Calculate_Time+2,w
  6555  0303  00F3               	movwf	___wmul@multiplier
  6556  0304  083C               	movf	??_Calculate_Time+3,w
  6557  0305  00F4               	movwf	___wmul@multiplier+1
  6558  0306  3010               	movlw	16
  6559  0307  00F5               	movwf	___wmul@multiplicand
  6560  0308  300E               	movlw	14
  6561  0309  00F6               	movwf	___wmul@multiplicand+1
  6562  030A  3189  21BD  3182   	fcall	___wmul
  6563  030D  0873               	movf	?___wmul,w
  6564  030E  0020               	movlb	0	; select bank0
  6565  030F  00BD               	movwf	??_Calculate_Time+4
  6566  0310  0874               	movf	?___wmul+1,w
  6567  0311  00BE               	movwf	??_Calculate_Time+5
  6568  0312  0021               	movlb	1	; select bank1
  6569  0313  085B               	movf	(_rtc_tm^(0+128)+1),w
  6570  0314  0020               	movlb	0	; select bank0
  6571  0315  00BF               	movwf	??_Calculate_Time+6
  6572  0316  01C0               	clrf	??_Calculate_Time+7
  6573  0317  083F               	movf	??_Calculate_Time+6,w
  6574  0318  00F3               	movwf	___wmul@multiplier
  6575  0319  0840               	movf	??_Calculate_Time+7,w
  6576  031A  00F4               	movwf	___wmul@multiplier+1
  6577  031B  303C               	movlw	60
  6578  031C  00F5               	movwf	___wmul@multiplicand
  6579  031D  3000               	movlw	0
  6580  031E  00F6               	movwf	___wmul@multiplicand+1
  6581  031F  3189  21BD  3182   	fcall	___wmul
  6582  0322  0873               	movf	?___wmul,w
  6583  0323  0020               	movlb	0	; select bank0
  6584  0324  073D               	addwf	??_Calculate_Time+4,w
  6585  0325  00C1               	movwf	??_Calculate_Time+8
  6586  0326  0874               	movf	?___wmul+1,w
  6587  0327  3D3E               	addwfc	??_Calculate_Time+5,w
  6588  0328  00C2               	movwf	??_Calculate_Time+9
  6589  0329  0839               	movf	??_Calculate_Time,w
  6590  032A  0741               	addwf	??_Calculate_Time+8,w
  6591  032B  00C7               	movwf	Calculate_Time@temp1
  6592  032C  083A               	movf	??_Calculate_Time+1,w
  6593  032D  3D42               	addwfc	??_Calculate_Time+9,w
  6594  032E  00C8               	movwf	Calculate_Time@temp1+1
  6595  032F  01C9               	clrf	Calculate_Time@temp1+2
  6596  0330  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6597  0331  03C9               	decf	Calculate_Time@temp1+2,f
  6598  0332  0849               	movf	Calculate_Time@temp1+2,w
  6599  0333  00CA               	movwf	Calculate_Time@temp1+3
  6600                           
  6601                           ;save.c: 209: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6602  0334  0021               	movlb	1	; select bank1
  6603  0335  0853               	movf	_rtc_save_ch2^(0+128),w
  6604  0336  0020               	movlb	0	; select bank0
  6605  0337  00B9               	movwf	??_Calculate_Time
  6606  0338  01BA               	clrf	??_Calculate_Time+1
  6607  0339  0021               	movlb	1	; select bank1
  6608  033A  0855               	movf	(_rtc_save_ch2^(0+128)+2),w
  6609  033B  0020               	movlb	0	; select bank0
  6610  033C  00BB               	movwf	??_Calculate_Time+2
  6611  033D  01BC               	clrf	??_Calculate_Time+3
  6612  033E  083B               	movf	??_Calculate_Time+2,w
  6613  033F  00F3               	movwf	___wmul@multiplier
  6614  0340  083C               	movf	??_Calculate_Time+3,w
  6615  0341  00F4               	movwf	___wmul@multiplier+1
  6616  0342  3010               	movlw	16
  6617  0343  00F5               	movwf	___wmul@multiplicand
  6618  0344  300E               	movlw	14
  6619  0345  00F6               	movwf	___wmul@multiplicand+1
  6620  0346  3189  21BD  3182   	fcall	___wmul
  6621  0349  0873               	movf	?___wmul,w
  6622  034A  0020               	movlb	0	; select bank0
  6623  034B  00BD               	movwf	??_Calculate_Time+4
  6624  034C  0874               	movf	?___wmul+1,w
  6625  034D  00BE               	movwf	??_Calculate_Time+5
  6626  034E  0021               	movlb	1	; select bank1
  6627  034F  0854               	movf	(_rtc_save_ch2^(0+128)+1),w
  6628  0350  0020               	movlb	0	; select bank0
  6629  0351  00BF               	movwf	??_Calculate_Time+6
  6630  0352  01C0               	clrf	??_Calculate_Time+7
  6631  0353  083F               	movf	??_Calculate_Time+6,w
  6632  0354  00F3               	movwf	___wmul@multiplier
  6633  0355  0840               	movf	??_Calculate_Time+7,w
  6634  0356  00F4               	movwf	___wmul@multiplier+1
  6635  0357  303C               	movlw	60
  6636  0358  00F5               	movwf	___wmul@multiplicand
  6637  0359  3000               	movlw	0
  6638  035A  00F6               	movwf	___wmul@multiplicand+1
  6639  035B  3189  21BD  3182   	fcall	___wmul
  6640  035E  0873               	movf	?___wmul,w
  6641  035F  0020               	movlb	0	; select bank0
  6642  0360  073D               	addwf	??_Calculate_Time+4,w
  6643  0361  00C1               	movwf	??_Calculate_Time+8
  6644  0362  0874               	movf	?___wmul+1,w
  6645  0363  3D3E               	addwfc	??_Calculate_Time+5,w
  6646  0364  00C2               	movwf	??_Calculate_Time+9
  6647  0365  0839               	movf	??_Calculate_Time,w
  6648  0366  0741               	addwf	??_Calculate_Time+8,w
  6649  0367  00CB               	movwf	Calculate_Time@temp2
  6650  0368  083A               	movf	??_Calculate_Time+1,w
  6651  0369  3D42               	addwfc	??_Calculate_Time+9,w
  6652  036A  00CC               	movwf	Calculate_Time@temp2+1
  6653  036B  01CD               	clrf	Calculate_Time@temp2+2
  6654  036C  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6655  036D  03CD               	decf	Calculate_Time@temp2+2,f
  6656  036E  084D               	movf	Calculate_Time@temp2+2,w
  6657  036F  00CE               	movwf	Calculate_Time@temp2+3
  6658                           
  6659                           ;save.c: 210: temp = temp1 - temp2;
  6660  0370  0847               	movf	Calculate_Time@temp1,w
  6661  0371  00B9               	movwf	??_Calculate_Time
  6662  0372  0848               	movf	Calculate_Time@temp1+1,w
  6663  0373  00BA               	movwf	??_Calculate_Time+1
  6664  0374  0849               	movf	Calculate_Time@temp1+2,w
  6665  0375  00BB               	movwf	??_Calculate_Time+2
  6666  0376  084A               	movf	Calculate_Time@temp1+3,w
  6667  0377  00BC               	movwf	??_Calculate_Time+3
  6668  0378  094B               	comf	Calculate_Time@temp2,w
  6669  0379  00BD               	movwf	??_Calculate_Time+4
  6670  037A  094C               	comf	Calculate_Time@temp2+1,w
  6671  037B  00BE               	movwf	??_Calculate_Time+5
  6672  037C  094D               	comf	Calculate_Time@temp2+2,w
  6673  037D  00BF               	movwf	??_Calculate_Time+6
  6674  037E  094E               	comf	Calculate_Time@temp2+3,w
  6675  037F  00C0               	movwf	??_Calculate_Time+7
  6676  0380  0ABD               	incf	??_Calculate_Time+4,f
  6677  0381  1903               	skipnz
  6678  0382  0ABE               	incf	??_Calculate_Time+5,f
  6679  0383  1903               	skipnz
  6680  0384  0ABF               	incf	??_Calculate_Time+6,f
  6681  0385  1903               	skipnz
  6682  0386  0AC0               	incf	??_Calculate_Time+7,f
  6683  0387  083D               	movf	??_Calculate_Time+4,w
  6684  0388  07B9               	addwf	??_Calculate_Time,f
  6685  0389  083E               	movf	??_Calculate_Time+5,w
  6686  038A  3DBA               	addwfc	??_Calculate_Time+1,f
  6687  038B  083F               	movf	??_Calculate_Time+6,w
  6688  038C  3DBB               	addwfc	??_Calculate_Time+2,f
  6689  038D  0840               	movf	??_Calculate_Time+7,w
  6690  038E  3DBC               	addwfc	??_Calculate_Time+3,f
  6691  038F  083C               	movf	??_Calculate_Time+3,w
  6692  0390  00C6               	movwf	Calculate_Time@temp+3
  6693  0391  083B               	movf	??_Calculate_Time+2,w
  6694  0392  00C5               	movwf	Calculate_Time@temp+2
  6695  0393  083A               	movf	??_Calculate_Time+1,w
  6696  0394  00C4               	movwf	Calculate_Time@temp+1
  6697  0395  0839               	movf	??_Calculate_Time,w
  6698  0396  00C3               	movwf	Calculate_Time@temp
  6699                           
  6700                           ;save.c: 211: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6701  0397  30D3               	movlw	low (_rtc_save_ch2| 0)
  6702  0398  0086               	movwf	6
  6703  0399  0187               	clrf	7
  6704  039A  30DA               	movlw	low (_rtc_tm| 0)
  6705  039B  0084               	movwf	4
  6706  039C  0185               	clrf	5
  6707  039D  3007               	movlw	7
  6708  039E  0020               	movlb	0	; select bank0
  6709  039F  00B9               	movwf	??_Calculate_Time
  6710  03A0                     u395m0:	
  6711  03A0  0012               	moviw fsr0++
  6712  03A1  001E               	movwi fsr1++
  6713  03A2  0BB9               	decfsz	??_Calculate_Time,f
  6714  03A3  2BA0               	goto	u395m0
  6715                           
  6716                           ;save.c: 212: return temp;
  6717  03A4  0020               	movlb	0	; select bank0
  6718  03A5  0843               	movf	Calculate_Time@temp,w
  6719  03A6  0008               	return
  6720  03A7                     l4669:	
  6721                           
  6722                           ;save.c: 213: }
  6723                           ;save.c: 214: }
  6724                           ;save.c: 215: return 0;
  6725  03A7  3000               	movlw	0
  6726  03A8  0008               	return
  6727  03A9                     __end_of_Calculate_Time:	
  6728                           
  6729                           	psect	text20
  6730  09BD                     __ptext20:	
  6731 ;; *************** function ___wmul *****************
  6732 ;; Defined at:
  6733 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  multiplier      2    3[COMMON] unsigned int 
  6736 ;;  multiplicand    2    5[COMMON] unsigned int 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  product         2    0[BANK0 ] unsigned int 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  2    3[COMMON] unsigned int 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;Total ram usage:        6 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    3
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_Calculate_Time
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           
  6763                           ;psect for function ___wmul
  6764  09BD                     ___wmul:	
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6768  09BD  0020               	movlb	0	; select bank0
  6769  09BE  01A0               	clrf	___wmul@product
  6770  09BF  01A1               	clrf	___wmul@product+1
  6771  09C0                     l4551:	
  6772  09C0  1C73               	btfss	___wmul@multiplier,0
  6773  09C1  29C7               	goto	l1037
  6774  09C2  0875               	movf	___wmul@multiplicand,w
  6775  09C3  0020               	movlb	0	; select bank0
  6776  09C4  07A0               	addwf	___wmul@product,f
  6777  09C5  0876               	movf	___wmul@multiplicand+1,w
  6778  09C6  3DA1               	addwfc	___wmul@product+1,f
  6779  09C7                     l1037:	
  6780  09C7  3001               	movlw	1
  6781  09C8                     u3805:	
  6782  09C8  35F5               	lslf	___wmul@multiplicand,f
  6783  09C9  0DF6               	rlf	___wmul@multiplicand+1,f
  6784  09CA  0B89               	decfsz	9,f
  6785  09CB  29C8               	goto	u3805
  6786  09CC  3001               	movlw	1
  6787  09CD                     u3815:	
  6788  09CD  36F4               	lsrf	___wmul@multiplier+1,f
  6789  09CE  0CF3               	rrf	___wmul@multiplier,f
  6790  09CF  0B89               	decfsz	9,f
  6791  09D0  29CD               	goto	u3815
  6792  09D1  0873               	movf	___wmul@multiplier,w
  6793  09D2  0474               	iorwf	___wmul@multiplier+1,w
  6794  09D3  1D03               	btfss	3,2
  6795  09D4  29C0               	goto	l4551
  6796  09D5  0020               	movlb	0	; select bank0
  6797  09D6  0821               	movf	___wmul@product+1,w
  6798  09D7  00F4               	movwf	?___wmul+1
  6799  09D8  0820               	movf	___wmul@product,w
  6800  09D9  00F3               	movwf	?___wmul
  6801  09DA  0008               	return
  6802  09DB                     __end_of___wmul:	
  6803                           
  6804                           	psect	text21
  6805  0B12                     __ptext21:	
  6806 ;; *************** function _Write_Flash_head *****************
  6807 ;; Defined at:
  6808 ;;		line 92 in file "mcc_generated_files/save.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;Total ram usage:        1 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    6
  6829 ;; This function calls:
  6830 ;;		_FLASH_WriteWord
  6831 ;; This function is called by:
  6832 ;;		_Key_Process
  6833 ;;		_Calculate_Time
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function _Write_Flash_head
  6839  0B12                     _Write_Flash_head:	
  6840                           
  6841                           ;save.c: 94: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6842                           
  6843                           ;incstack = 0
  6844                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6845  0B12  0021               	movlb	1	; select bank1
  6846  0B13  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6847  0B14  0020               	movlb	0	; select bank0
  6848  0B15  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6849  0B16  0021               	movlb	1	; select bank1
  6850  0B17  082E               	movf	_Cur_Save_Index^(0+128),w
  6851  0B18  0020               	movlb	0	; select bank0
  6852  0B19  00AA               	movwf	FLASH_WriteWord@flashAddr
  6853  0B1A  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6854  0B1B  00F7               	movwf	??_Write_Flash_head
  6855  0B1C  0877               	movf	??_Write_Flash_head,w
  6856  0B1D  00AC               	movwf	FLASH_WriteWord@ramBuf
  6857  0B1E  30AA               	movlw	170
  6858  0B1F  00AD               	movwf	FLASH_WriteWord@word
  6859  0B20  30AA               	movlw	170
  6860  0B21  00AE               	movwf	FLASH_WriteWord@word+1
  6861  0B22  318C  24BD  318B   	fcall	_FLASH_WriteWord
  6862                           
  6863                           ;save.c: 95: Cur_Save_Index++;
  6864  0B25  3001               	movlw	1
  6865  0B26  0021               	movlb	1	; select bank1
  6866  0B27  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6867  0B28  3000               	movlw	0
  6868  0B29  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6869                           
  6870                           ;save.c: 96: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6871  0B2A  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6872  0B2B  0020               	movlb	0	; select bank0
  6873  0B2C  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6874  0B2D  0021               	movlb	1	; select bank1
  6875  0B2E  082E               	movf	_Cur_Save_Index^(0+128),w
  6876  0B2F  0020               	movlb	0	; select bank0
  6877  0B30  00AA               	movwf	FLASH_WriteWord@flashAddr
  6878  0B31  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6879  0B32  00F7               	movwf	??_Write_Flash_head
  6880  0B33  0877               	movf	??_Write_Flash_head,w
  6881  0B34  00AC               	movwf	FLASH_WriteWord@ramBuf
  6882  0B35  30AA               	movlw	170
  6883  0B36  00AD               	movwf	FLASH_WriteWord@word
  6884  0B37  30AA               	movlw	170
  6885  0B38  00AE               	movwf	FLASH_WriteWord@word+1
  6886  0B39  318C  24BD         	fcall	_FLASH_WriteWord
  6887                           
  6888                           ;save.c: 97: Cur_Save_Index++;
  6889  0B3B  3001               	movlw	1
  6890  0B3C  0021               	movlb	1	; select bank1
  6891  0B3D  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6892  0B3E  3000               	movlw	0
  6893  0B3F  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6894  0B40  0008               	return
  6895  0B41                     __end_of_Write_Flash_head:	
  6896                           
  6897                           	psect	text22
  6898  0AE3                     __ptext22:	
  6899 ;; *************** function _Write_Flash_finish *****************
  6900 ;; Defined at:
  6901 ;;		line 106 in file "mcc_generated_files/save.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;		None
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6919 ;;Total ram usage:        1 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    6
  6922 ;; This function calls:
  6923 ;;		_FLASH_WriteWord
  6924 ;; This function is called by:
  6925 ;;		_Key_Process
  6926 ;;		_Serach_Flash_Head
  6927 ;;		_Calculate_Time
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _Write_Flash_finish
  6933  0AE3                     _Write_Flash_finish:	
  6934                           
  6935                           ;save.c: 108: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6939  0AE3  0021               	movlb	1	; select bank1
  6940  0AE4  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6941  0AE5  0020               	movlb	0	; select bank0
  6942  0AE6  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6943  0AE7  0021               	movlb	1	; select bank1
  6944  0AE8  082E               	movf	_Cur_Save_Index^(0+128),w
  6945  0AE9  0020               	movlb	0	; select bank0
  6946  0AEA  00AA               	movwf	FLASH_WriteWord@flashAddr
  6947  0AEB  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6948  0AEC  00F7               	movwf	??_Write_Flash_finish
  6949  0AED  0877               	movf	??_Write_Flash_finish,w
  6950  0AEE  00AC               	movwf	FLASH_WriteWord@ramBuf
  6951  0AEF  3055               	movlw	85
  6952  0AF0  00AD               	movwf	FLASH_WriteWord@word
  6953  0AF1  3055               	movlw	85
  6954  0AF2  00AE               	movwf	FLASH_WriteWord@word+1
  6955  0AF3  318C  24BD  318A   	fcall	_FLASH_WriteWord
  6956                           
  6957                           ;save.c: 109: Cur_Save_Index++;
  6958  0AF6  3001               	movlw	1
  6959  0AF7  0021               	movlb	1	; select bank1
  6960  0AF8  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6961  0AF9  3000               	movlw	0
  6962  0AFA  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6963                           
  6964                           ;save.c: 110: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6965  0AFB  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6966  0AFC  0020               	movlb	0	; select bank0
  6967  0AFD  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6968  0AFE  0021               	movlb	1	; select bank1
  6969  0AFF  082E               	movf	_Cur_Save_Index^(0+128),w
  6970  0B00  0020               	movlb	0	; select bank0
  6971  0B01  00AA               	movwf	FLASH_WriteWord@flashAddr
  6972  0B02  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6973  0B03  00F7               	movwf	??_Write_Flash_finish
  6974  0B04  0877               	movf	??_Write_Flash_finish,w
  6975  0B05  00AC               	movwf	FLASH_WriteWord@ramBuf
  6976  0B06  3055               	movlw	85
  6977  0B07  00AD               	movwf	FLASH_WriteWord@word
  6978  0B08  3055               	movlw	85
  6979  0B09  00AE               	movwf	FLASH_WriteWord@word+1
  6980  0B0A  318C  24BD         	fcall	_FLASH_WriteWord
  6981                           
  6982                           ;save.c: 111: Cur_Save_Index++;
  6983  0B0C  3001               	movlw	1
  6984  0B0D  0021               	movlb	1	; select bank1
  6985  0B0E  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6986  0B0F  3000               	movlw	0
  6987  0B10  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6988  0B11  0008               	return
  6989  0B12                     __end_of_Write_Flash_finish:	
  6990                           
  6991                           	psect	text23
  6992  0709                     __ptext23:	
  6993 ;; *************** function _Save_Write_time *****************
  6994 ;; Defined at:
  6995 ;;		line 239 in file "mcc_generated_files/save.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  i               1    0        unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;Total ram usage:        2 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    7
  7016 ;; This function calls:
  7017 ;;		_Bq32k_Rtc_Read_Time
  7018 ;;		_Save_Write_word
  7019 ;; This function is called by:
  7020 ;;		_Key_Process
  7021 ;;		_Calculate_Time
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _Save_Write_time
  7027  0709                     _Save_Write_time:	
  7028                           
  7029                           ;save.c: 241: unsigned char i;
  7030                           ;save.c: 242: Bq32k_Rtc_Read_Time(&rtc_tm);
  7031                           
  7032                           ;incstack = 0
  7033                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7034  0709  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  7035  070A  318F  2738  3187   	fcall	_Bq32k_Rtc_Read_Time
  7036                           
  7037                           ;save.c: 243: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  7038  070D  30CC               	movlw	low (_rtc_save_ch1| 0)
  7039  070E  0086               	movwf	6
  7040  070F  0187               	clrf	7
  7041  0710  30DA               	movlw	low (_rtc_tm| 0)
  7042  0711  0084               	movwf	4
  7043  0712  0185               	clrf	5
  7044  0713  3007               	movlw	7
  7045  0714  0020               	movlb	0	; select bank0
  7046  0715  00B7               	movwf	??_Save_Write_time
  7047  0716                     u377m0:	
  7048  0716  0012               	moviw fsr0++
  7049  0717  001E               	movwi fsr1++
  7050  0718  0BB7               	decfsz	??_Save_Write_time,f
  7051  0719  2F16               	goto	u377m0
  7052                           
  7053                           ;save.c: 244: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  7054  071A  30D3               	movlw	low (_rtc_save_ch2| 0)
  7055  071B  0086               	movwf	6
  7056  071C  0187               	clrf	7
  7057  071D  30DA               	movlw	low (_rtc_tm| 0)
  7058  071E  0084               	movwf	4
  7059  071F  0185               	clrf	5
  7060  0720  3007               	movlw	7
  7061  0721  0020               	movlb	0	; select bank0
  7062  0722  00B7               	movwf	??_Save_Write_time
  7063  0723                     u378m0:	
  7064  0723  0012               	moviw fsr0++
  7065  0724  001E               	movwi fsr1++
  7066  0725  0BB7               	decfsz	??_Save_Write_time,f
  7067  0726  2F23               	goto	u378m0
  7068                           
  7069                           ;save.c: 245: Save_Write_word( rtc_tm.years);
  7070  0727  0021               	movlb	1	; select bank1
  7071  0728  0860               	movf	(_rtc_tm^(0+128)+6),w
  7072  0729  0020               	movlb	0	; select bank0
  7073  072A  00B7               	movwf	??_Save_Write_time
  7074  072B  01B8               	clrf	??_Save_Write_time+1
  7075  072C  0837               	movf	??_Save_Write_time,w
  7076  072D  00B3               	movwf	Save_Write_word@data
  7077  072E  0838               	movf	??_Save_Write_time+1,w
  7078  072F  00B4               	movwf	Save_Write_word@data+1
  7079  0730  318C  240F  3187   	fcall	_Save_Write_word
  7080                           
  7081                           ;save.c: 246: Save_Write_word( rtc_tm.month);
  7082  0733  0021               	movlb	1	; select bank1
  7083  0734  085F               	movf	(_rtc_tm^(0+128)+5),w
  7084  0735  0020               	movlb	0	; select bank0
  7085  0736  00B7               	movwf	??_Save_Write_time
  7086  0737  01B8               	clrf	??_Save_Write_time+1
  7087  0738  0837               	movf	??_Save_Write_time,w
  7088  0739  00B3               	movwf	Save_Write_word@data
  7089  073A  0838               	movf	??_Save_Write_time+1,w
  7090  073B  00B4               	movwf	Save_Write_word@data+1
  7091  073C  318C  240F  3187   	fcall	_Save_Write_word
  7092                           
  7093                           ;save.c: 247: Save_Write_word( rtc_tm.date);
  7094  073F  0021               	movlb	1	; select bank1
  7095  0740  085E               	movf	(_rtc_tm^(0+128)+4),w
  7096  0741  0020               	movlb	0	; select bank0
  7097  0742  00B7               	movwf	??_Save_Write_time
  7098  0743  01B8               	clrf	??_Save_Write_time+1
  7099  0744  0837               	movf	??_Save_Write_time,w
  7100  0745  00B3               	movwf	Save_Write_word@data
  7101  0746  0838               	movf	??_Save_Write_time+1,w
  7102  0747  00B4               	movwf	Save_Write_word@data+1
  7103  0748  318C  240F  3187   	fcall	_Save_Write_word
  7104                           
  7105                           ;save.c: 248: Save_Write_word( rtc_tm.hours);
  7106  074B  0021               	movlb	1	; select bank1
  7107  074C  085C               	movf	(_rtc_tm^(0+128)+2),w
  7108  074D  0020               	movlb	0	; select bank0
  7109  074E  00B7               	movwf	??_Save_Write_time
  7110  074F  01B8               	clrf	??_Save_Write_time+1
  7111  0750  0837               	movf	??_Save_Write_time,w
  7112  0751  00B3               	movwf	Save_Write_word@data
  7113  0752  0838               	movf	??_Save_Write_time+1,w
  7114  0753  00B4               	movwf	Save_Write_word@data+1
  7115  0754  318C  240F  3187   	fcall	_Save_Write_word
  7116                           
  7117                           ;save.c: 249: Save_Write_word( rtc_tm.minutes);
  7118  0757  0021               	movlb	1	; select bank1
  7119  0758  085B               	movf	(_rtc_tm^(0+128)+1),w
  7120  0759  0020               	movlb	0	; select bank0
  7121  075A  00B7               	movwf	??_Save_Write_time
  7122  075B  01B8               	clrf	??_Save_Write_time+1
  7123  075C  0837               	movf	??_Save_Write_time,w
  7124  075D  00B3               	movwf	Save_Write_word@data
  7125  075E  0838               	movf	??_Save_Write_time+1,w
  7126  075F  00B4               	movwf	Save_Write_word@data+1
  7127  0760  318C  240F  3187   	fcall	_Save_Write_word
  7128                           
  7129                           ;save.c: 250: Save_Write_word( rtc_tm.seconds);
  7130  0763  0021               	movlb	1	; select bank1
  7131  0764  085A               	movf	_rtc_tm^(0+128),w
  7132  0765  0020               	movlb	0	; select bank0
  7133  0766  00B7               	movwf	??_Save_Write_time
  7134  0767  01B8               	clrf	??_Save_Write_time+1
  7135  0768  0837               	movf	??_Save_Write_time,w
  7136  0769  00B3               	movwf	Save_Write_word@data
  7137  076A  0838               	movf	??_Save_Write_time+1,w
  7138  076B  00B4               	movwf	Save_Write_word@data+1
  7139  076C  318C  240F  3187   	fcall	_Save_Write_word
  7140                           
  7141                           ;save.c: 251: Save_Write_word( rtc_tm.wday);
  7142  076F  0021               	movlb	1	; select bank1
  7143  0770  085D               	movf	(_rtc_tm^(0+128)+3),w
  7144  0771  0020               	movlb	0	; select bank0
  7145  0772  00B7               	movwf	??_Save_Write_time
  7146  0773  01B8               	clrf	??_Save_Write_time+1
  7147  0774  0837               	movf	??_Save_Write_time,w
  7148  0775  00B3               	movwf	Save_Write_word@data
  7149  0776  0838               	movf	??_Save_Write_time+1,w
  7150  0777  00B4               	movwf	Save_Write_word@data+1
  7151  0778  318C  240F         	fcall	_Save_Write_word
  7152  077A  0008               	return
  7153  077B                     __end_of_Save_Write_time:	
  7154                           
  7155                           	psect	text24
  7156  0C0F                     __ptext24:	
  7157 ;; *************** function _Save_Write_word *****************
  7158 ;; Defined at:
  7159 ;;		line 224 in file "mcc_generated_files/save.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  data            2   19[BANK0 ] unsigned int 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;Total ram usage:        4 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    6
  7180 ;; This function calls:
  7181 ;;		_FLASH_WriteWord
  7182 ;; This function is called by:
  7183 ;;		_tc_temperature_trans
  7184 ;;		_Save_process
  7185 ;;		_Save_Write_time
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function _Save_Write_word
  7191  0C0F                     _Save_Write_word:	
  7192                           
  7193                           ;save.c: 226: if( (data & 0x3fff) == 0x3fff)
  7194                           
  7195                           ;incstack = 0
  7196                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7197  0C0F  30FF               	movlw	255
  7198  0C10  0020               	movlb	0	; select bank0
  7199  0C11  0533               	andwf	Save_Write_word@data,w
  7200  0C12  00B5               	movwf	??_Save_Write_word
  7201  0C13  303F               	movlw	63
  7202  0C14  0534               	andwf	Save_Write_word@data+1,w
  7203  0C15  00B6               	movwf	??_Save_Write_word+1
  7204  0C16  0A35               	incf	??_Save_Write_word,w
  7205  0C17  303F               	movlw	63
  7206  0C18  1903               	skipnz
  7207  0C19  0636               	xorwf	??_Save_Write_word+1,w
  7208  0C1A  1D03               	btfss	3,2
  7209  0C1B  2C2D               	goto	l4493
  7210                           
  7211                           ;save.c: 227: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x3ffe);
  7212  0C1C  0021               	movlb	1	; select bank1
  7213  0C1D  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7214  0C1E  0020               	movlb	0	; select bank0
  7215  0C1F  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7216  0C20  0021               	movlb	1	; select bank1
  7217  0C21  082E               	movf	_Cur_Save_Index^(0+128),w
  7218  0C22  0020               	movlb	0	; select bank0
  7219  0C23  00AA               	movwf	FLASH_WriteWord@flashAddr
  7220  0C24  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7221  0C25  00B5               	movwf	??_Save_Write_word
  7222  0C26  0835               	movf	??_Save_Write_word,w
  7223  0C27  00AC               	movwf	FLASH_WriteWord@ramBuf
  7224  0C28  30FE               	movlw	254
  7225  0C29  00AD               	movwf	FLASH_WriteWord@word
  7226  0C2A  303F               	movlw	63
  7227  0C2B  00AE               	movwf	FLASH_WriteWord@word+1
  7228  0C2C  2C3D               	goto	L9
  7229  0C2D                     l4493:	
  7230                           
  7231                           ;save.c: 228: else
  7232                           ;save.c: 229: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  7233  0C2D  0021               	movlb	1	; select bank1
  7234  0C2E  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7235  0C2F  0020               	movlb	0	; select bank0
  7236  0C30  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7237  0C31  0021               	movlb	1	; select bank1
  7238  0C32  082E               	movf	_Cur_Save_Index^(0+128),w
  7239  0C33  0020               	movlb	0	; select bank0
  7240  0C34  00AA               	movwf	FLASH_WriteWord@flashAddr
  7241  0C35  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7242  0C36  00B5               	movwf	??_Save_Write_word
  7243  0C37  0835               	movf	??_Save_Write_word,w
  7244  0C38  00AC               	movwf	FLASH_WriteWord@ramBuf
  7245  0C39  0834               	movf	Save_Write_word@data+1,w
  7246  0C3A  00AE               	movwf	FLASH_WriteWord@word+1
  7247  0C3B  0833               	movf	Save_Write_word@data,w
  7248  0C3C  00AD               	movwf	FLASH_WriteWord@word
  7249  0C3D                     L9:	
  7250  0C3D  318C  24BD         	fcall	_FLASH_WriteWord
  7251                           
  7252                           ;save.c: 230: Cur_Save_Index++;
  7253  0C3F  3001               	movlw	1
  7254  0C40  0021               	movlb	1	; select bank1
  7255  0C41  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7256  0C42  3000               	movlw	0
  7257  0C43  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7258  0C44  0008               	return
  7259  0C45                     __end_of_Save_Write_word:	
  7260                           
  7261                           	psect	text25
  7262  0CBD                     __ptext25:	
  7263 ;; *************** function _FLASH_WriteWord *****************
  7264 ;; Defined at:
  7265 ;;		line 74 in file "mcc_generated_files/memory.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  7268 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  7269 ;;		 -> Flash_buff(64), 
  7270 ;;  word            2   13[BANK0 ] unsigned int 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  7273 ;;  i               1   18[BANK0 ] unsigned char 
  7274 ;;  offset          1   15[BANK0 ] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7284 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;Total ram usage:       10 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:    5
  7291 ;; This function calls:
  7292 ;;		_FLASH_ReadWord
  7293 ;;		_FLASH_WriteBlock
  7294 ;; This function is called by:
  7295 ;;		_Write_Flash_head
  7296 ;;		_Write_Flash_finish
  7297 ;;		_Save_Write_word
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           
  7302                           ;psect for function _FLASH_WriteWord
  7303  0CBD                     _FLASH_WriteWord:	
  7304                           
  7305                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7306                           
  7307                           ;incstack = 0
  7308                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7309  0CBD  30E0               	movlw	224
  7310  0CBE  0020               	movlb	0	; select bank0
  7311  0CBF  052A               	andwf	FLASH_WriteWord@flashAddr,w
  7312  0CC0  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  7313  0CC1  303F               	movlw	63
  7314  0CC2  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  7315  0CC3  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  7316                           
  7317                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  7318  0CC4  082A               	movf	FLASH_WriteWord@flashAddr,w
  7319  0CC5  391F               	andlw	31
  7320  0CC6  00F6               	movwf	??_FLASH_WriteWord
  7321  0CC7  0876               	movf	??_FLASH_WriteWord,w
  7322  0CC8  00AF               	movwf	FLASH_WriteWord@offset
  7323                           
  7324                           ;memory.c: 77: uint8_t i;
  7325                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  7326  0CC9  01B2               	clrf	FLASH_WriteWord@i
  7327  0CCA  3020               	movlw	32
  7328  0CCB  0232               	subwf	FLASH_WriteWord@i,w
  7329  0CCC  1803               	btfsc	3,0
  7330  0CCD  2CEC               	goto	l4423
  7331  0CCE                     l4417:	
  7332                           
  7333                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  7334  0CCE  0832               	movf	FLASH_WriteWord@i,w
  7335  0CCF  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  7336  0CD0  00F3               	movwf	FLASH_ReadWord@flashAddr
  7337  0CD1  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7338  0CD2  1803               	skipnc
  7339  0CD3  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  7340  0CD4  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  7341  0CD5  3189  211D  318C   	fcall	_FLASH_ReadWord
  7342  0CD8  0020               	movlb	0	; select bank0
  7343  0CD9  3532               	lslf	FLASH_WriteWord@i,w
  7344  0CDA  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7345  0CDB  00F6               	movwf	??_FLASH_WriteWord
  7346  0CDC  0876               	movf	??_FLASH_WriteWord,w
  7347  0CDD  0086               	movwf	6
  7348  0CDE  3001               	movlw	1	; select bank2/3
  7349  0CDF  0087               	movwf	7
  7350  0CE0  0873               	movf	?_FLASH_ReadWord,w
  7351  0CE1  3FC0               	movwi [0]fsr1
  7352  0CE2  0874               	movf	?_FLASH_ReadWord+1,w
  7353  0CE3  3FC1               	movwi [1]fsr1
  7354  0CE4  3001               	movlw	1
  7355  0CE5  00F6               	movwf	??_FLASH_WriteWord
  7356  0CE6  0876               	movf	??_FLASH_WriteWord,w
  7357  0CE7  07B2               	addwf	FLASH_WriteWord@i,f
  7358  0CE8  3020               	movlw	32
  7359  0CE9  0232               	subwf	FLASH_WriteWord@i,w
  7360  0CEA  1C03               	skipc
  7361  0CEB  2CCE               	goto	l4417
  7362  0CEC                     l4423:	
  7363                           
  7364                           ;memory.c: 82: }
  7365                           ;memory.c: 85: ramBuf[offset] = word;
  7366  0CEC  352F               	lslf	FLASH_WriteWord@offset,w
  7367  0CED  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7368  0CEE  00F6               	movwf	??_FLASH_WriteWord
  7369  0CEF  0876               	movf	??_FLASH_WriteWord,w
  7370  0CF0  0086               	movwf	6
  7371  0CF1  3001               	movlw	1	; select bank2/3
  7372  0CF2  0087               	movwf	7
  7373  0CF3  082D               	movf	FLASH_WriteWord@word,w
  7374  0CF4  3FC0               	movwi [0]fsr1
  7375  0CF5  082E               	movf	FLASH_WriteWord@word+1,w
  7376  0CF6  3FC1               	movwi [1]fsr1
  7377                           
  7378                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  7379  0CF7  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7380  0CF8  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  7381  0CF9  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  7382  0CFA  00A0               	movwf	FLASH_WriteBlock@writeAddr
  7383  0CFB  082C               	movf	FLASH_WriteWord@ramBuf,w
  7384  0CFC  00F6               	movwf	??_FLASH_WriteWord
  7385  0CFD  0876               	movf	??_FLASH_WriteWord,w
  7386  0CFE  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  7387  0CFF  3187  277B         	fcall	_FLASH_WriteBlock
  7388  0D01  0008               	return
  7389  0D02                     __end_of_FLASH_WriteWord:	
  7390                           
  7391                           	psect	text26
  7392  077B                     __ptext26:	
  7393 ;; *************** function _FLASH_WriteBlock *****************
  7394 ;; Defined at:
  7395 ;;		line 91 in file "mcc_generated_files/memory.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  7398 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  7399 ;;		 -> Flash_buff(64), 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  7402 ;;  i               1    9[BANK0 ] unsigned char 
  7403 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      char 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:       10 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    4
  7420 ;; This function calls:
  7421 ;;		_FLASH_EraseBlock
  7422 ;; This function is called by:
  7423 ;;		_FLASH_WriteWord
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           
  7428                           ;psect for function _FLASH_WriteBlock
  7429  077B                     _FLASH_WriteBlock:	
  7430                           
  7431                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7432                           
  7433                           ;incstack = 0
  7434                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7435  077B  30E0               	movlw	224
  7436  077C  0020               	movlb	0	; select bank0
  7437  077D  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  7438  077E  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  7439  077F  303F               	movlw	63
  7440  0780  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  7441  0781  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  7442                           
  7443                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  7444  0782  3000               	movlw	0
  7445  0783  1B8B               	btfsc	11,7	;volatile
  7446  0784  3001               	movlw	1
  7447  0785  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  7448                           
  7449                           ;memory.c: 94: uint8_t i;
  7450                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  7451  0786  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  7452  0787  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  7453  0788  1D03               	skipz
  7454  0789  2F8C               	goto	u3515
  7455  078A  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  7456  078B  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  7457  078C                     u3515:	
  7458  078C  1D03               	btfss	3,2
  7459  078D  0008               	return
  7460                           
  7461                           ;memory.c: 99: }
  7462                           ;memory.c: 101: INTCONbits.GIE = 0;
  7463                           
  7464                           ;memory.c: 98: return -1;
  7465                           ;	Return value of _FLASH_WriteBlock is never used
  7466  078E  138B               	bcf	11,7	;volatile
  7467                           
  7468                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  7469  078F  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7470  0790  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  7471  0791  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7472  0792  00F3               	movwf	FLASH_EraseBlock@startAddr
  7473  0793  3189  21A1  3187   	fcall	_FLASH_EraseBlock
  7474                           
  7475                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  7476  0796  0023               	movlb	3	; select bank3
  7477  0797  1315               	bcf	21,6	;volatile
  7478                           
  7479                           ;memory.c: 108: PMCON1bits.WREN = 1;
  7480  0798  1515               	bsf	21,2	;volatile
  7481                           
  7482                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  7483  0799  1695               	bsf	21,5	;volatile
  7484                           
  7485                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  7486  079A  0020               	movlb	0	; select bank0
  7487  079B  01A9               	clrf	FLASH_WriteBlock@i
  7488  079C  3020               	movlw	32
  7489  079D  0229               	subwf	FLASH_WriteBlock@i,w
  7490  079E  1803               	btfsc	3,0
  7491  079F  2FDD               	goto	l166
  7492  07A0                     l4291:	
  7493                           
  7494                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  7495  07A0  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7496  07A1  0023               	movlb	3	; select bank3
  7497  07A2  0091               	movwf	17	;volatile
  7498                           
  7499                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  7500  07A3  0020               	movlb	0	; select bank0
  7501  07A4  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7502  07A5  0023               	movlb	3	; select bank3
  7503  07A6  0092               	movwf	18	;volatile
  7504                           
  7505                           ;memory.c: 118: PMDATL = flashWordArray[i];
  7506  07A7  0020               	movlb	0	; select bank0
  7507  07A8  3529               	lslf	FLASH_WriteBlock@i,w
  7508  07A9  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7509  07AA  00A3               	movwf	??_FLASH_WriteBlock
  7510  07AB  0823               	movf	??_FLASH_WriteBlock,w
  7511  07AC  0086               	movwf	6
  7512  07AD  3001               	movlw	1	; select bank2/3
  7513  07AE  0087               	movwf	7
  7514  07AF  0801               	movf	1,w
  7515  07B0  0023               	movlb	3	; select bank3
  7516  07B1  0093               	movwf	19	;volatile
  7517                           
  7518                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  7519  07B2  0020               	movlb	0	; select bank0
  7520  07B3  3529               	lslf	FLASH_WriteBlock@i,w
  7521  07B4  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7522  07B5  00A3               	movwf	??_FLASH_WriteBlock
  7523  07B6  0823               	movf	??_FLASH_WriteBlock,w
  7524  07B7  0086               	movwf	6
  7525  07B8  3001               	movlw	1	; select bank2/3
  7526  07B9  0087               	movwf	7
  7527  07BA  3F40               	moviw [0]fsr1
  7528  07BB  00A4               	movwf	??_FLASH_WriteBlock+1
  7529  07BC  3F41               	moviw [1]fsr1
  7530  07BD  00A5               	movwf	??_FLASH_WriteBlock+2
  7531  07BE  0825               	movf	??_FLASH_WriteBlock+2,w
  7532  07BF  0023               	movlb	3	; select bank3
  7533  07C0  0094               	movwf	20	;volatile
  7534                           
  7535                           ;memory.c: 121: if (i == (32 - 1)) {
  7536  07C1  301F               	movlw	31
  7537  07C2  0020               	movlb	0	; select bank0
  7538  07C3  0629               	xorwf	FLASH_WriteBlock@i,w
  7539  07C4  1D03               	btfss	3,2
  7540  07C5  2FC8               	goto	l4303
  7541                           
  7542                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  7543  07C6  0023               	movlb	3	; select bank3
  7544  07C7  1295               	bcf	21,5	;volatile
  7545  07C8                     l4303:	
  7546                           
  7547                           ;memory.c: 124: }
  7548                           ;memory.c: 126: PMCON2 = 0x55;
  7549  07C8  3055               	movlw	85
  7550  07C9  0023               	movlb	3	; select bank3
  7551  07CA  0096               	movwf	22	;volsfr
  7552                           
  7553                           ;memory.c: 127: PMCON2 = 0xAA;
  7554  07CB  30AA               	movlw	170
  7555  07CC  0096               	movwf	22	;volsfr
  7556                           
  7557                           ;memory.c: 128: PMCON1bits.WR = 1;
  7558  07CD  1495               	bsf	21,1	;volatile
  7559                           
  7560                           ;memory.c: 129: __nop();
  7561  07CE  0000               	nop
  7562                           
  7563                           ;memory.c: 130: __nop();
  7564  07CF  0000               	nop
  7565                           
  7566                           ;memory.c: 132: writeAddr++;
  7567  07D0  3001               	movlw	1
  7568  07D1  0020               	movlb	0	; select bank0
  7569  07D2  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  7570  07D3  3000               	movlw	0
  7571  07D4  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  7572  07D5  3001               	movlw	1
  7573  07D6  00A3               	movwf	??_FLASH_WriteBlock
  7574  07D7  0823               	movf	??_FLASH_WriteBlock,w
  7575  07D8  07A9               	addwf	FLASH_WriteBlock@i,f
  7576  07D9  3020               	movlw	32
  7577  07DA  0229               	subwf	FLASH_WriteBlock@i,w
  7578  07DB  1C03               	skipc
  7579  07DC  2FA0               	goto	l4291
  7580  07DD                     l166:	
  7581                           
  7582                           ;memory.c: 133: }
  7583                           ;memory.c: 135: PMCON1bits.WREN = 0;
  7584  07DD  0023               	movlb	3	; select bank3
  7585  07DE  1115               	bcf	21,2	;volatile
  7586                           
  7587                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  7588  07DF  0020               	movlb	0	; select bank0
  7589  07E0  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  7590  07E1  1C03               	skipc
  7591  07E2  138B               	bcf	11,7	;volatile
  7592  07E3  1803               	skipnc
  7593  07E4  178B               	bsf	11,7	;volatile
  7594  07E5  0008               	return
  7595  07E6                     __end_of_FLASH_WriteBlock:	
  7596                           ;memory.c: 138: return 0;
  7597                           ;	Return value of _FLASH_WriteBlock is never used
  7598                           
  7599                           
  7600                           	psect	text27
  7601  09A1                     __ptext27:	
  7602 ;; *************** function _FLASH_EraseBlock *****************
  7603 ;; Defined at:
  7604 ;;		line 141 in file "mcc_generated_files/memory.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  startAddr       2    3[COMMON] unsigned int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;Total ram usage:        3 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    3
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_FLASH_WriteBlock
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           
  7633                           ;psect for function _FLASH_EraseBlock
  7634  09A1                     _FLASH_EraseBlock:	
  7635                           
  7636                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  7637                           
  7638                           ;incstack = 0
  7639                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  7640  09A1  3000               	movlw	0
  7641  09A2  1B8B               	btfsc	11,7	;volatile
  7642  09A3  3001               	movlw	1
  7643  09A4  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  7644                           
  7645                           ;memory.c: 145: INTCONbits.GIE = 0;
  7646  09A5  138B               	bcf	11,7	;volatile
  7647                           
  7648                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  7649  09A6  0873               	movf	FLASH_EraseBlock@startAddr,w
  7650  09A7  0023               	movlb	3	; select bank3
  7651  09A8  0091               	movwf	17	;volatile
  7652                           
  7653                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  7654  09A9  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  7655  09AA  0092               	movwf	18	;volatile
  7656                           
  7657                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  7658  09AB  1315               	bcf	21,6	;volatile
  7659                           
  7660                           ;memory.c: 153: PMCON1bits.FREE = 1;
  7661  09AC  1615               	bsf	21,4	;volatile
  7662                           
  7663                           ;memory.c: 154: PMCON1bits.WREN = 1;
  7664  09AD  1515               	bsf	21,2	;volatile
  7665                           
  7666                           ;memory.c: 157: PMCON2 = 0x55;
  7667  09AE  3055               	movlw	85
  7668  09AF  0096               	movwf	22	;volsfr
  7669                           
  7670                           ;memory.c: 158: PMCON2 = 0xAA;
  7671  09B0  30AA               	movlw	170
  7672  09B1  0096               	movwf	22	;volsfr
  7673                           
  7674                           ;memory.c: 159: PMCON1bits.WR = 1;
  7675  09B2  1495               	bsf	21,1	;volatile
  7676                           
  7677                           ;memory.c: 160: __nop();
  7678  09B3  0000               	nop
  7679                           
  7680                           ;memory.c: 161: __nop();
  7681  09B4  0000               	nop
  7682                           
  7683                           ;memory.c: 163: PMCON1bits.WREN = 0;
  7684  09B5  0023               	movlb	3	; select bank3
  7685  09B6  1115               	bcf	21,2	;volatile
  7686                           
  7687                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  7688  09B7  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  7689  09B8  1C03               	skipc
  7690  09B9  138B               	bcf	11,7	;volatile
  7691  09BA  1803               	skipnc
  7692  09BB  178B               	bsf	11,7	;volatile
  7693  09BC  0008               	return
  7694  09BD                     __end_of_FLASH_EraseBlock:	
  7695                           
  7696                           	psect	text28
  7697  091D                     __ptext28:	
  7698 ;; *************** function _FLASH_ReadWord *****************
  7699 ;; Defined at:
  7700 ;;		line 58 in file "mcc_generated_files/memory.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  flashAddr       2    3[COMMON] unsigned int 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2    3[COMMON] unsigned int 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        3 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    3
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_FLASH_WriteWord
  7725 ;;		_Key_Process
  7726 ;;		_Serach_Flash_Head
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _FLASH_ReadWord
  7732  091D                     _FLASH_ReadWord:	
  7733                           
  7734                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  7738  091D  3000               	movlw	0
  7739  091E  1B8B               	btfsc	11,7	;volatile
  7740  091F  3001               	movlw	1
  7741  0920  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  7742                           
  7743                           ;memory.c: 61: INTCONbits.GIE = 0;
  7744  0921  138B               	bcf	11,7	;volatile
  7745                           
  7746                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  7747  0922  0873               	movf	FLASH_ReadWord@flashAddr,w
  7748  0923  0023               	movlb	3	; select bank3
  7749  0924  0091               	movwf	17	;volatile
  7750                           
  7751                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  7752  0925  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  7753  0926  0092               	movwf	18	;volatile
  7754                           
  7755                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  7756  0927  1315               	bcf	21,6	;volatile
  7757                           
  7758                           ;memory.c: 66: PMCON1bits.RD = 1;
  7759  0928  1415               	bsf	21,0	;volatile
  7760                           
  7761                           ;memory.c: 67: __nop();
  7762  0929  0000               	nop
  7763                           
  7764                           ;memory.c: 68: __nop();
  7765  092A  0000               	nop
  7766                           
  7767                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  7768  092B  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  7769  092C  1C03               	skipc
  7770  092D  138B               	bcf	11,7	;volatile
  7771  092E  1803               	skipnc
  7772  092F  178B               	bsf	11,7	;volatile
  7773                           
  7774                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  7775  0930  0023               	movlb	3	; select bank3
  7776  0931  0814               	movf	20,w	;volatile
  7777  0932  00F4               	movwf	?_FLASH_ReadWord+1
  7778  0933  0813               	movf	19,w	;volatile
  7779  0934  00F3               	movwf	?_FLASH_ReadWord
  7780  0935  0008               	return
  7781  0936                     __end_of_FLASH_ReadWord:	
  7782                           
  7783                           	psect	text29
  7784  0F38                     __ptext29:	
  7785 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  7786 ;; Defined at:
  7787 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  p               1    wreg     PTR struct bq32k_regs
  7790 ;;		 -> rtc_tm(7), 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  7793 ;;		 -> rtc_tm(7), 
  7794 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:       13 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    5
  7811 ;; This function calls:
  7812 ;;		_I2C_Read_Buffer
  7813 ;;		_bcd2bin
  7814 ;; This function is called by:
  7815 ;;		_time_Display
  7816 ;;		_Calculate_Time
  7817 ;;		_Save_Write_time
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function _Bq32k_Rtc_Read_Time
  7823  0F38                     _Bq32k_Rtc_Read_Time:	
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7827                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  7828  0F38  0020               	movlb	0	; select bank0
  7829  0F39  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  7830                           
  7831                           ;bq32k.c: 32: unsigned char temp[10] ;
  7832                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  7833  0F3A  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  7834  0F3B  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7835  0F3C  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7836  0F3D  00F6               	movwf	I2C_Read_Buffer@buff
  7837  0F3E  3007               	movlw	7
  7838  0F3F  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  7839  0F40  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  7840  0F41  00F7               	movwf	I2C_Read_Buffer@Length
  7841  0F42  3000               	movlw	0
  7842  0F43  3186  2691  318F   	fcall	_I2C_Read_Buffer
  7843                           
  7844                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  7845  0F46  0020               	movlb	0	; select bank0
  7846  0F47  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  7847  0F48  397F               	andlw	127
  7848  0F49  3188  2091  318F   	fcall	_bcd2bin
  7849  0F4C  0020               	movlb	0	; select bank0
  7850  0F4D  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7851  0F4E  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7852  0F4F  0086               	movwf	6
  7853  0F50  0187               	clrf	7
  7854  0F51  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7855  0F52  0081               	movwf	1
  7856                           
  7857                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  7858  0F53  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  7859  0F54  397F               	andlw	127
  7860  0F55  3188  2091  318F   	fcall	_bcd2bin
  7861  0F58  0020               	movlb	0	; select bank0
  7862  0F59  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7863  0F5A  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  7864  0F5B  0086               	movwf	6
  7865  0F5C  0187               	clrf	7
  7866  0F5D  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7867  0F5E  0081               	movwf	1
  7868                           
  7869                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  7870  0F5F  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  7871  0F60  393F               	andlw	63
  7872  0F61  3188  2091  318F   	fcall	_bcd2bin
  7873  0F64  0020               	movlb	0	; select bank0
  7874  0F65  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7875  0F66  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7876  0F67  3E02               	addlw	2
  7877  0F68  0086               	movwf	6
  7878  0F69  0187               	clrf	7
  7879  0F6A  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7880  0F6B  0081               	movwf	1
  7881                           
  7882                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  7883  0F6C  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  7884  0F6D  3188  2091  318F   	fcall	_bcd2bin
  7885  0F70  0020               	movlb	0	; select bank0
  7886  0F71  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7887  0F72  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7888  0F73  3E03               	addlw	3
  7889  0F74  0086               	movwf	6
  7890  0F75  0187               	clrf	7
  7891  0F76  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7892  0F77  0081               	movwf	1
  7893                           
  7894                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  7895  0F78  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  7896  0F79  3188  2091  318F   	fcall	_bcd2bin
  7897  0F7C  0020               	movlb	0	; select bank0
  7898  0F7D  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7899  0F7E  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7900  0F7F  3E04               	addlw	4
  7901  0F80  0086               	movwf	6
  7902  0F81  0187               	clrf	7
  7903  0F82  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7904  0F83  0081               	movwf	1
  7905                           
  7906                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  7907  0F84  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  7908  0F85  3188  2091  318F   	fcall	_bcd2bin
  7909  0F88  0020               	movlb	0	; select bank0
  7910  0F89  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7911  0F8A  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7912  0F8B  3E05               	addlw	5
  7913  0F8C  0086               	movwf	6
  7914  0F8D  0187               	clrf	7
  7915  0F8E  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7916  0F8F  0081               	movwf	1
  7917                           
  7918                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  7919  0F90  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  7920  0F91  3188  2091         	fcall	_bcd2bin
  7921  0F93  0020               	movlb	0	; select bank0
  7922  0F94  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7923  0F95  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7924  0F96  3E06               	addlw	6
  7925  0F97  0086               	movwf	6
  7926  0F98  0187               	clrf	7
  7927  0F99  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7928  0F9A  0081               	movwf	1
  7929  0F9B  0008               	return
  7930  0F9C                     __end_of_Bq32k_Rtc_Read_Time:	
  7931                           
  7932                           	psect	text30
  7933  0891                     __ptext30:	
  7934 ;; *************** function _bcd2bin *****************
  7935 ;; Defined at:
  7936 ;;		line 68 in file "mcc_generated_files/bq32k.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  val             1    wreg     unsigned char 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  val             1    7[COMMON] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      unsigned char 
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, pclath, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;Total ram usage:        4 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    4
  7957 ;; This function calls:
  7958 ;;		___bmul
  7959 ;; This function is called by:
  7960 ;;		_Bq32k_Rtc_Read_Time
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           
  7965                           ;psect for function _bcd2bin
  7966  0891                     _bcd2bin:	
  7967                           
  7968                           ;incstack = 0
  7969                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  7970                           ;bcd2bin@val stored from wreg
  7971  0891  00F7               	movwf	bcd2bin@val
  7972                           
  7973                           ;bq32k.c: 70: return (val & 0x0f) + (val >> 4) * 10;
  7974  0892  300F               	movlw	15
  7975  0893  0577               	andwf	bcd2bin@val,w
  7976  0894  0020               	movlb	0	; select bank0
  7977  0895  00A0               	movwf	??_bcd2bin
  7978  0896  300A               	movlw	10
  7979  0897  00A1               	movwf	??_bcd2bin+1
  7980  0898  0821               	movf	??_bcd2bin+1,w
  7981  0899  00F3               	movwf	___bmul@multiplicand
  7982  089A  0877               	movf	bcd2bin@val,w
  7983  089B  00A2               	movwf	??_bcd2bin+2
  7984  089C  3004               	movlw	4
  7985  089D                     u3705:	
  7986  089D  36A2               	lsrf	??_bcd2bin+2,f
  7987  089E  0B89               	decfsz	9,f
  7988  089F  289D               	goto	u3705
  7989  08A0  0822               	movf	??_bcd2bin+2,w
  7990  08A1  3188  2080         	fcall	___bmul
  7991  08A3  0020               	movlb	0	; select bank0
  7992  08A4  0720               	addwf	??_bcd2bin,w
  7993  08A5  0008               	return
  7994  08A6                     __end_of_bcd2bin:	
  7995                           
  7996                           	psect	text31
  7997  0880                     __ptext31:	
  7998 ;; *************** function ___bmul *****************
  7999 ;; Defined at:
  8000 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  multiplier      1    wreg     unsigned char 
  8003 ;;  multiplicand    1    3[COMMON] unsigned char 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  multiplier      1    6[COMMON] unsigned char 
  8006 ;;  product         1    5[COMMON] unsigned char 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      unsigned char 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8016 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;Total ram usage:        4 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    3
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_bcd2bin
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           
  8031                           ;psect for function ___bmul
  8032  0880                     ___bmul:	
  8033                           
  8034                           ;incstack = 0
  8035                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8036                           ;___bmul@multiplier stored from wreg
  8037  0880  00F6               	movwf	___bmul@multiplier
  8038  0881  01F5               	clrf	___bmul@product
  8039  0882                     l4397:	
  8040  0882  1C76               	btfss	___bmul@multiplier,0
  8041  0883  2888               	goto	l4401
  8042  0884  0873               	movf	___bmul@multiplicand,w
  8043  0885  00F4               	movwf	??___bmul
  8044  0886  0874               	movf	??___bmul,w
  8045  0887  07F5               	addwf	___bmul@product,f
  8046  0888                     l4401:	
  8047  0888  1003               	clrc
  8048  0889  0DF3               	rlf	___bmul@multiplicand,f
  8049  088A  1003               	clrc
  8050  088B  0CF6               	rrf	___bmul@multiplier,f
  8051  088C  0876               	movf	___bmul@multiplier,w
  8052  088D  1D03               	btfss	3,2
  8053  088E  2882               	goto	l4397
  8054  088F  0875               	movf	___bmul@product,w
  8055  0890  0008               	return
  8056  0891                     __end_of___bmul:	
  8057                           
  8058                           	psect	text32
  8059  0691                     __ptext32:	
  8060 ;; *************** function _I2C_Read_Buffer *****************
  8061 ;; Defined at:
  8062 ;;		line 120 in file "mcc_generated_files/i2c.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  ADD             1    wreg     unsigned char 
  8065 ;;  buff            1    6[COMMON] PTR unsigned char 
  8066 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  8067 ;;  Length          1    7[COMMON] unsigned char 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  ADD             1    1[BANK0 ] unsigned char 
  8070 ;;  Flag            1    2[BANK0 ] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      unsigned char 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;Total ram usage:        5 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    4
  8087 ;; This function calls:
  8088 ;;		_I2C_Receive_Byte
  8089 ;;		_I2C_Send_Byte
  8090 ;;		_I2C_Start
  8091 ;;		_I2C_Stop
  8092 ;; This function is called by:
  8093 ;;		_Bq32k_Rtc_Read_Time
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _I2C_Read_Buffer
  8099  0691                     _I2C_Read_Buffer:	
  8100                           
  8101                           ;incstack = 0
  8102                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8103                           ;I2C_Read_Buffer@ADD stored from wreg
  8104  0691  0020               	movlb	0	; select bank0
  8105  0692  00A1               	movwf	I2C_Read_Buffer@ADD
  8106                           
  8107                           ;i2c.c: 122: unsigned char Flag=1;
  8108  0693  01A2               	clrf	I2C_Read_Buffer@Flag
  8109  0694  0AA2               	incf	I2C_Read_Buffer@Flag,f
  8110                           
  8111                           ;i2c.c: 124: I2C_Start();
  8112  0695  3188  20EB  3186   	fcall	_I2C_Start
  8113                           
  8114                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  8115  0698  30D0               	movlw	208
  8116  0699  318D  2592  3186   	fcall	_I2C_Send_Byte
  8117  069C  0020               	movlb	0	; select bank0
  8118  069D  00A0               	movwf	??_I2C_Read_Buffer
  8119  069E  0820               	movf	??_I2C_Read_Buffer,w
  8120  069F  00A2               	movwf	I2C_Read_Buffer@Flag
  8121                           
  8122                           ;i2c.c: 127: if(Flag)
  8123  06A0  0822               	movf	I2C_Read_Buffer@Flag,w
  8124  06A1  1D03               	btfss	3,2
  8125  06A2  0008               	return
  8126                           
  8127                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  8128                           
  8129                           ;i2c.c: 128: return 0x01;
  8130                           ;	Return value of _I2C_Read_Buffer is never used
  8131  06A3  0821               	movf	I2C_Read_Buffer@ADD,w
  8132  06A4  318D  2592  3186   	fcall	_I2C_Send_Byte
  8133  06A7  0020               	movlb	0	; select bank0
  8134  06A8  00A0               	movwf	??_I2C_Read_Buffer
  8135  06A9  0820               	movf	??_I2C_Read_Buffer,w
  8136  06AA  00A2               	movwf	I2C_Read_Buffer@Flag
  8137                           
  8138                           ;i2c.c: 131: if(Flag)
  8139  06AB  0822               	movf	I2C_Read_Buffer@Flag,w
  8140  06AC  1D03               	btfss	3,2
  8141  06AD  0008               	return
  8142                           
  8143                           ;i2c.c: 134: I2C_Start();
  8144                           
  8145                           ;i2c.c: 132: return 0x01;
  8146                           ;	Return value of _I2C_Read_Buffer is never used
  8147  06AE  3188  20EB  3186   	fcall	_I2C_Start
  8148                           
  8149                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  8150  06B1  30D1               	movlw	209
  8151  06B2  318D  2592  3186   	fcall	_I2C_Send_Byte
  8152  06B5  0020               	movlb	0	; select bank0
  8153  06B6  00A0               	movwf	??_I2C_Read_Buffer
  8154  06B7  0820               	movf	??_I2C_Read_Buffer,w
  8155  06B8  00A2               	movwf	I2C_Read_Buffer@Flag
  8156                           
  8157                           ;i2c.c: 136: if(Flag)
  8158  06B9  0822               	movf	I2C_Read_Buffer@Flag,w
  8159  06BA  1D03               	btfss	3,2
  8160  06BB  0008               	return
  8161  06BC                     l4465:	
  8162  06BC  3002               	movlw	2
  8163  06BD  0277               	subwf	I2C_Read_Buffer@Length,w
  8164  06BE  1C03               	btfss	3,0
  8165  06BF  2EE7               	goto	l4467
  8166                           
  8167                           ;i2c.c: 140: {
  8168                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  8169                           
  8170                           ;i2c.c: 139: while(Length>1)
  8171                           
  8172                           ;i2c.c: 137: return 0x01;
  8173                           ;	Return value of _I2C_Read_Buffer is never used
  8174  06C0  318A  2260  3186   	fcall	_I2C_Receive_Byte
  8175  06C3  0020               	movlb	0	; select bank0
  8176  06C4  00A0               	movwf	??_I2C_Read_Buffer
  8177  06C5  0876               	movf	I2C_Read_Buffer@buff,w
  8178  06C6  0086               	movwf	6
  8179  06C7  0187               	clrf	7
  8180  06C8  0820               	movf	??_I2C_Read_Buffer,w
  8181  06C9  0081               	movwf	1
  8182                           
  8183                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  8184  06CA  0022               	movlb	2	; select bank2
  8185  06CB  108D               	bcf	13,1	;volatile
  8186                           
  8187                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8188  06CC  300D               	movlw	13
  8189  06CD  0020               	movlb	0	; select bank0
  8190  06CE  00A0               	movwf	??_I2C_Read_Buffer
  8191  06CF                     u5237:	
  8192  06CF  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8193  06D0  2ECF               	goto	u5237
  8194                           
  8195                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  8196  06D1  0022               	movlb	2	; select bank2
  8197  06D2  140D               	bsf	13,0	;volatile
  8198                           
  8199                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8200  06D3  300D               	movlw	13
  8201  06D4  0020               	movlb	0	; select bank0
  8202  06D5  00A0               	movwf	??_I2C_Read_Buffer
  8203  06D6                     u5247:	
  8204  06D6  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8205  06D7  2ED6               	goto	u5247
  8206                           
  8207                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  8208  06D8  0022               	movlb	2	; select bank2
  8209  06D9  100D               	bcf	13,0	;volatile
  8210                           
  8211                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8212  06DA  300D               	movlw	13
  8213  06DB  0020               	movlb	0	; select bank0
  8214  06DC  00A0               	movwf	??_I2C_Read_Buffer
  8215  06DD                     u5257:	
  8216  06DD  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8217  06DE  2EDD               	goto	u5257
  8218                           
  8219                           ;i2c.c: 150: buff++;
  8220  06DF  3001               	movlw	1
  8221  06E0  0020               	movlb	0	; select bank0
  8222  06E1  00A0               	movwf	??_I2C_Read_Buffer
  8223  06E2  0820               	movf	??_I2C_Read_Buffer,w
  8224  06E3  07F6               	addwf	I2C_Read_Buffer@buff,f
  8225                           
  8226                           ;i2c.c: 151: Length--;
  8227  06E4  3001               	movlw	1
  8228  06E5  02F7               	subwf	I2C_Read_Buffer@Length,f
  8229  06E6  2EBC               	goto	l4465
  8230  06E7                     l4467:	
  8231                           
  8232                           ;i2c.c: 152: }
  8233                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  8234  06E7  318A  2260  3186   	fcall	_I2C_Receive_Byte
  8235  06EA  0020               	movlb	0	; select bank0
  8236  06EB  00A0               	movwf	??_I2C_Read_Buffer
  8237  06EC  0876               	movf	I2C_Read_Buffer@buff,w
  8238  06ED  0086               	movwf	6
  8239  06EE  0187               	clrf	7
  8240  06EF  0820               	movf	??_I2C_Read_Buffer,w
  8241  06F0  0081               	movwf	1
  8242                           
  8243                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  8244  06F1  0022               	movlb	2	; select bank2
  8245  06F2  148D               	bsf	13,1	;volatile
  8246                           
  8247                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8248  06F3  300D               	movlw	13
  8249  06F4  0020               	movlb	0	; select bank0
  8250  06F5  00A0               	movwf	??_I2C_Read_Buffer
  8251  06F6                     u5267:	
  8252  06F6  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8253  06F7  2EF6               	goto	u5267
  8254                           
  8255                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  8256  06F8  0022               	movlb	2	; select bank2
  8257  06F9  140D               	bsf	13,0	;volatile
  8258                           
  8259                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8260  06FA  300D               	movlw	13
  8261  06FB  0020               	movlb	0	; select bank0
  8262  06FC  00A0               	movwf	??_I2C_Read_Buffer
  8263  06FD                     u5277:	
  8264  06FD  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8265  06FE  2EFD               	goto	u5277
  8266                           
  8267                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  8268  06FF  0022               	movlb	2	; select bank2
  8269  0700  100D               	bcf	13,0	;volatile
  8270                           
  8271                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8272  0701  300D               	movlw	13
  8273  0702  0020               	movlb	0	; select bank0
  8274  0703  00A0               	movwf	??_I2C_Read_Buffer
  8275  0704                     u5287:	
  8276  0704  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8277  0705  2F04               	goto	u5287
  8278                           
  8279                           ;i2c.c: 162: I2C_Stop();
  8280  0706  3189  2104         	fcall	_I2C_Stop
  8281  0708  0008               	return
  8282  0709                     __end_of_I2C_Read_Buffer:	
  8283                           ;i2c.c: 164: return 0x00;
  8284                           ;	Return value of _I2C_Read_Buffer is never used
  8285                           
  8286                           
  8287                           	psect	text33
  8288  0A60                     __ptext33:	
  8289 ;; *************** function _I2C_Receive_Byte *****************
  8290 ;; Defined at:
  8291 ;;		line 74 in file "mcc_generated_files/i2c.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  i               1    5[COMMON] unsigned char 
  8296 ;;  Data            1    4[COMMON] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      unsigned char 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;Total ram usage:        3 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    3
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_I2C_Read_Buffer
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _I2C_Receive_Byte
  8322  0A60                     _I2C_Receive_Byte:	
  8323                           
  8324                           ;i2c.c: 76: unsigned char i,Data=0;
  8325                           
  8326                           ;incstack = 0
  8327                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  8328  0A60  01F4               	clrf	I2C_Receive_Byte@Data
  8329                           
  8330                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  8331  0A61  0022               	movlb	2	; select bank2
  8332  0A62  148D               	bsf	13,1	;volatile
  8333                           
  8334                           ;i2c.c: 78: for(i=0;i<8;i++)
  8335  0A63  01F5               	clrf	I2C_Receive_Byte@i
  8336  0A64  3008               	movlw	8
  8337  0A65  0275               	subwf	I2C_Receive_Byte@i,w
  8338  0A66  1803               	btfsc	3,0
  8339  0A67  2A88               	goto	l4383
  8340                           
  8341                           ;i2c.c: 79: {
  8342                           ;i2c.c: 80: Data <<= 1;
  8343  0A68  1003               	clrc
  8344  0A69                     L10:	
  8345  0A69  0DF4               	rlf	I2C_Receive_Byte@Data,f
  8346                           
  8347                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  8348  0A6A  0022               	movlb	2	; select bank2
  8349  0A6B  140D               	bsf	13,0	;volatile
  8350                           
  8351                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8352  0A6C  300D               	movlw	13
  8353  0A6D  00F3               	movwf	??_I2C_Receive_Byte
  8354  0A6E                     u5297:	
  8355  0A6E  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8356  0A6F  2A6E               	goto	u5297
  8357                           
  8358                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  8359  0A70  0021               	movlb	1	; select bank1
  8360  0A71  148D               	bsf	13,1	;volatile
  8361                           
  8362                           ;i2c.c: 84: if(RB1)
  8363  0A72  0020               	movlb	0	; select bank0
  8364  0A73  1C8D               	btfss	13,1	;volatile
  8365  0A74  2A78               	goto	l730
  8366                           
  8367                           ;i2c.c: 85: {
  8368                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  8369  0A75  0021               	movlb	1	; select bank1
  8370  0A76  108D               	bcf	13,1	;volatile
  8371                           
  8372                           ;i2c.c: 87: Data |= 0x01;
  8373  0A77  1474               	bsf	I2C_Receive_Byte@Data,0
  8374  0A78                     l730:	
  8375                           ;i2c.c: 88: }
  8376                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  8377                           
  8378  0A78  0021               	movlb	1	; select bank1
  8379  0A79  108D               	bcf	13,1	;volatile
  8380                           
  8381                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  8382  0A7A  0022               	movlb	2	; select bank2
  8383  0A7B  100D               	bcf	13,0	;volatile
  8384                           
  8385                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8386  0A7C  300D               	movlw	13
  8387  0A7D  00F3               	movwf	??_I2C_Receive_Byte
  8388  0A7E                     u5307:	
  8389  0A7E  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8390  0A7F  2A7E               	goto	u5307
  8391  0A80  3001               	movlw	1
  8392  0A81  00F3               	movwf	??_I2C_Receive_Byte
  8393  0A82  0873               	movf	??_I2C_Receive_Byte,w
  8394  0A83  07F5               	addwf	I2C_Receive_Byte@i,f
  8395  0A84  3008               	movlw	8
  8396  0A85  0275               	subwf	I2C_Receive_Byte@i,w
  8397  0A86  1C03               	skipc
  8398  0A87  2A69               	goto	L10
  8399  0A88                     l4383:	
  8400                           
  8401                           ;i2c.c: 92: }
  8402                           ;i2c.c: 93: return Data;
  8403  0A88  0874               	movf	I2C_Receive_Byte@Data,w
  8404  0A89  0008               	return
  8405  0A8A                     __end_of_I2C_Receive_Byte:	
  8406                           
  8407                           	psect	text34
  8408  084F                     __ptext34:	
  8409 ;; *************** function _maxim_clear_fault_status *****************
  8410 ;; Defined at:
  8411 ;;		line 155 in file "mcc_generated_files/max31856.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;Total ram usage:        1 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    5
  8432 ;; This function calls:
  8433 ;;		_maxim_31856_read_register
  8434 ;;		_maxim_31856_write_register
  8435 ;; This function is called by:
  8436 ;;		_temperature_display
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function _maxim_clear_fault_status
  8442  084F                     _maxim_clear_fault_status:	
  8443                           
  8444                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  8445                           
  8446                           ;incstack = 0
  8447                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  8448  084F  3000               	movlw	0
  8449  0850  3188  206F  3188   	fcall	_maxim_31856_read_register
  8450  0853  00F7               	movwf	??_maxim_clear_fault_status
  8451  0854  0877               	movf	??_maxim_clear_fault_status,w
  8452  0855  00FA               	movwf	_uch_cr0
  8453                           
  8454                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  8455  0856  14FA               	bsf	_uch_cr0,1
  8456                           
  8457                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  8458  0857  087A               	movf	_uch_cr0,w
  8459  0858  00F7               	movwf	??_maxim_clear_fault_status
  8460  0859  0877               	movf	??_maxim_clear_fault_status,w
  8461  085A  00F4               	movwf	maxim_31856_write_register@uch_register_value
  8462  085B  3080               	movlw	128
  8463  085C  3188  2042         	fcall	_maxim_31856_write_register
  8464  085E  0008               	return
  8465  085F                     __end_of_maxim_clear_fault_status:	
  8466                           
  8467                           	psect	text35
  8468  0A8A                     __ptext35:	
  8469 ;; *************** function _err_Display *****************
  8470 ;; Defined at:
  8471 ;;		line 153 in file "mcc_generated_files/ht1621.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  num             4    7[BANK0 ] unsigned char [4]
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;Total ram usage:        5 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    5
  8492 ;; This function calls:
  8493 ;;		_WriteAll_1621
  8494 ;; This function is called by:
  8495 ;;		_temperature_display
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _err_Display
  8501  0A8A                     _err_Display:	
  8502                           
  8503                           ;ht1621.c: 155: unsigned char num[4]={0};
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8507  0A8A  0021               	movlb	1	; select bank1
  8508  0A8B  0827               	movf	(err_Display@F2126+3)^(0+128),w
  8509  0A8C  0020               	movlb	0	; select bank0
  8510  0A8D  00AA               	movwf	err_Display@num+3
  8511  0A8E  0021               	movlb	1	; select bank1
  8512  0A8F  0826               	movf	(err_Display@F2126+2)^(0+128),w
  8513  0A90  0020               	movlb	0	; select bank0
  8514  0A91  00A9               	movwf	err_Display@num+2
  8515  0A92  0021               	movlb	1	; select bank1
  8516  0A93  0825               	movf	(err_Display@F2126+1)^(0+128),w
  8517  0A94  0020               	movlb	0	; select bank0
  8518  0A95  00A8               	movwf	err_Display@num+1
  8519  0A96  0021               	movlb	1	; select bank1
  8520  0A97  0824               	movf	err_Display@F2126^(0+128),w
  8521  0A98  0020               	movlb	0	; select bank0
  8522  0A99  00A7               	movwf	err_Display@num
  8523                           
  8524                           ;ht1621.c: 156: num[1] = Dis_TAB[0x10];
  8525  0A9A  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  8526  0A9B  0084               	movwf	4
  8527  0A9C  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  8528  0A9D  0085               	movwf	5
  8529  0A9E  0800               	movf	0,w	;code access
  8530  0A9F  00A6               	movwf	??_err_Display
  8531  0AA0  0826               	movf	??_err_Display,w
  8532  0AA1  00A8               	movwf	err_Display@num+1
  8533                           
  8534                           ;ht1621.c: 157: num[2] = Dis_TAB[0x0c];
  8535  0AA2  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  8536  0AA3  0084               	movwf	4
  8537  0AA4  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  8538  0AA5  0085               	movwf	5
  8539  0AA6  0800               	movf	0,w	;code access
  8540  0AA7  00A6               	movwf	??_err_Display
  8541  0AA8  0826               	movf	??_err_Display,w
  8542  0AA9  00A9               	movwf	err_Display@num+2
  8543                           
  8544                           ;ht1621.c: 158: WriteAll_1621(0, num, 4);
  8545  0AAA  3027               	movlw	low err_Display@num
  8546  0AAB  00A0               	movwf	WriteAll_1621@p
  8547  0AAC  3000               	movlw	high err_Display@num
  8548  0AAD  00A1               	movwf	WriteAll_1621@p+1
  8549  0AAE  3004               	movlw	4
  8550  0AAF  00A6               	movwf	??_err_Display
  8551  0AB0  0826               	movf	??_err_Display,w
  8552  0AB1  00A2               	movwf	WriteAll_1621@cnt
  8553  0AB2  3000               	movlw	0
  8554  0AB3  318B  23A5         	fcall	_WriteAll_1621
  8555  0AB5  0008               	return
  8556  0AB6                     __end_of_err_Display:	
  8557                           
  8558                           	psect	text36
  8559  04A0                     __ptext36:	
  8560 ;; *************** function _Tc_Display *****************
  8561 ;; Defined at:
  8562 ;;		line 110 in file "mcc_generated_files/ht1621.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;		None
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  data            2   11[BANK0 ] unsigned int 
  8567 ;;  count           1   10[BANK0 ] unsigned char 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;Total ram usage:        4 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    5
  8584 ;; This function calls:
  8585 ;;		_WriteAll_1621
  8586 ;;		___lwdiv
  8587 ;;		___lwmod
  8588 ;;		_memset
  8589 ;; This function is called by:
  8590 ;;		_temperature_display
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           
  8595                           ;psect for function _Tc_Display
  8596  04A0                     _Tc_Display:	
  8597                           
  8598                           ;ht1621.c: 112: unsigned char count = 0;
  8599                           
  8600                           ;incstack = 0
  8601                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8602  04A0  0020               	movlb	0	; select bank0
  8603  04A1  01AA               	clrf	Tc_Display@count
  8604                           
  8605                           ;ht1621.c: 113: unsigned int data = temperature_int;
  8606  04A2  0021               	movlb	1	; select bank1
  8607  04A3  0833               	movf	(_temperature_int+1)^(0+128),w
  8608  04A4  0020               	movlb	0	; select bank0
  8609  04A5  00AC               	movwf	Tc_Display@data+1
  8610  04A6  0021               	movlb	1	; select bank1
  8611  04A7  0832               	movf	_temperature_int^(0+128),w
  8612  04A8  0020               	movlb	0	; select bank0
  8613  04A9  00AB               	movwf	Tc_Display@data
  8614                           
  8615                           ;ht1621.c: 114: memset(display_buff,0,4);
  8616  04AA  3000               	movlw	0
  8617  04AB  00F3               	movwf	memset@c
  8618  04AC  00F4               	movwf	memset@c+1
  8619  04AD  3004               	movlw	4
  8620  04AE  00F5               	movwf	memset@n
  8621  04AF  3000               	movlw	0
  8622  04B0  00F6               	movwf	memset@n+1
  8623  04B1  30E1               	movlw	(low (_display_buff| 0))& (0+255)
  8624  04B2  3189  2186  3184   	fcall	_memset
  8625  04B5                     l4901:	
  8626                           ;ht1621.c: 115: while(data)
  8627                           
  8628  04B5  0020               	movlb	0	; select bank0
  8629  04B6  082B               	movf	Tc_Display@data,w
  8630  04B7  042C               	iorwf	Tc_Display@data+1,w
  8631  04B8  1903               	btfsc	3,2
  8632  04B9  2D34               	goto	l4909
  8633                           
  8634                           ;ht1621.c: 116: {
  8635                           ;ht1621.c: 117: count++;
  8636  04BA  3001               	movlw	1
  8637  04BB  0020               	movlb	0	; select bank0
  8638  04BC  00A9               	movwf	??_Tc_Display
  8639  04BD  0829               	movf	??_Tc_Display,w
  8640  04BE  07AA               	addwf	Tc_Display@count,f
  8641                           
  8642                           ;ht1621.c: 118: data /=10;
  8643  04BF  300A               	movlw	10
  8644  04C0  00A1               	movwf	___lwdiv@divisor
  8645  04C1  3000               	movlw	0
  8646  04C2  00A2               	movwf	___lwdiv@divisor+1
  8647  04C3  082C               	movf	Tc_Display@data+1,w
  8648  04C4  00A4               	movwf	___lwdiv@dividend+1
  8649  04C5  082B               	movf	Tc_Display@data,w
  8650  04C6  00A3               	movwf	___lwdiv@dividend
  8651  04C7  318B  23DA  3184   	fcall	___lwdiv
  8652  04CA  0020               	movlb	0	; select bank0
  8653  04CB  0822               	movf	?___lwdiv+1,w
  8654  04CC  00AC               	movwf	Tc_Display@data+1
  8655  04CD  0821               	movf	?___lwdiv,w
  8656  04CE  00AB               	movwf	Tc_Display@data
  8657  04CF  2CB5               	goto	l4901
  8658  04D0                     l4903:	
  8659                           ;ht1621.c: 121: {
  8660                           ;ht1621.c: 122: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  8661                           
  8662                           ;ht1621.c: 119: }
  8663                           ;ht1621.c: 120: switch(count)
  8664                           
  8665  04D0  3064               	movlw	100
  8666  04D1  00A1               	movwf	___lwdiv@divisor
  8667  04D2  3000               	movlw	0
  8668  04D3  00A2               	movwf	___lwdiv@divisor+1
  8669  04D4  0021               	movlb	1	; select bank1
  8670  04D5  0833               	movf	(_temperature_int+1)^(0+128),w
  8671  04D6  0020               	movlb	0	; select bank0
  8672  04D7  00A4               	movwf	___lwdiv@dividend+1
  8673  04D8  0021               	movlb	1	; select bank1
  8674  04D9  0832               	movf	_temperature_int^(0+128),w
  8675  04DA  0020               	movlb	0	; select bank0
  8676  04DB  00A3               	movwf	___lwdiv@dividend
  8677  04DC  318B  23DA  3184   	fcall	___lwdiv
  8678  04DF  0020               	movlb	0	; select bank0
  8679  04E0  0822               	movf	?___lwdiv+1,w
  8680  04E1  0085               	movwf	5
  8681  04E2  0821               	movf	?___lwdiv,w
  8682  04E3  0084               	movwf	4
  8683  04E4  3000               	movlw	low (_Dis_TAB| (0+32768))
  8684  04E5  0784               	addwf	4,f
  8685  04E6  3090               	movlw	high (_Dis_TAB| (0+32768))
  8686  04E7  3D85               	addwfc	5,f
  8687  04E8  0800               	movf	0,w	;code access
  8688  04E9  00A9               	movwf	??_Tc_Display
  8689  04EA  0829               	movf	??_Tc_Display,w
  8690  04EB  0021               	movlb	1	; select bank1
  8691  04EC  00E1               	movwf	_display_buff^(0+128)
  8692  04ED                     l644:	
  8693                           ;ht1621.c: 123: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  8694                           
  8695  04ED  300A               	movlw	10
  8696  04EE  0020               	movlb	0	; select bank0
  8697  04EF  00A1               	movwf	___lwdiv@divisor
  8698  04F0  3000               	movlw	0
  8699  04F1  00A2               	movwf	___lwdiv@divisor+1
  8700  04F2  0021               	movlb	1	; select bank1
  8701  04F3  0833               	movf	(_temperature_int+1)^(0+128),w
  8702  04F4  00F6               	movwf	___lwmod@dividend+1
  8703  04F5  0832               	movf	_temperature_int^(0+128),w
  8704  04F6  00F5               	movwf	___lwmod@dividend
  8705  04F7  3064               	movlw	100
  8706  04F8  00F3               	movwf	___lwmod@divisor
  8707  04F9  3000               	movlw	0
  8708  04FA  00F4               	movwf	___lwmod@divisor+1
  8709  04FB  318A  22B6  3184   	fcall	___lwmod
  8710  04FE  0874               	movf	?___lwmod+1,w
  8711  04FF  0020               	movlb	0	; select bank0
  8712  0500  00A4               	movwf	___lwdiv@dividend+1
  8713  0501  0873               	movf	?___lwmod,w
  8714  0502  00A3               	movwf	___lwdiv@dividend
  8715  0503  318B  23DA  3184   	fcall	___lwdiv
  8716  0506  0020               	movlb	0	; select bank0
  8717  0507  0822               	movf	?___lwdiv+1,w
  8718  0508  0085               	movwf	5
  8719  0509  0821               	movf	?___lwdiv,w
  8720  050A  0084               	movwf	4
  8721  050B  3000               	movlw	low (_Dis_TAB| (0+32768))
  8722  050C  0784               	addwf	4,f
  8723  050D  3090               	movlw	high (_Dis_TAB| (0+32768))
  8724  050E  3D85               	addwfc	5,f
  8725  050F  0800               	movf	0,w	;code access
  8726  0510  00A9               	movwf	??_Tc_Display
  8727  0511  0829               	movf	??_Tc_Display,w
  8728  0512  0021               	movlb	1	; select bank1
  8729  0513  00E2               	movwf	(_display_buff^(0+128)+1)
  8730  0514                     l645:	
  8731                           ;ht1621.c: 124: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  8732                           
  8733  0514  300A               	movlw	10
  8734  0515  00F3               	movwf	___lwmod@divisor
  8735  0516  3000               	movlw	0
  8736  0517  00F4               	movwf	___lwmod@divisor+1
  8737  0518  0021               	movlb	1	; select bank1
  8738  0519  0833               	movf	(_temperature_int+1)^(0+128),w
  8739  051A  00F6               	movwf	___lwmod@dividend+1
  8740  051B  0832               	movf	_temperature_int^(0+128),w
  8741  051C  00F5               	movwf	___lwmod@dividend
  8742  051D  318A  22B6  3184   	fcall	___lwmod
  8743  0520  0874               	movf	?___lwmod+1,w
  8744  0521  0085               	movwf	5
  8745  0522  0873               	movf	?___lwmod,w
  8746  0523  0084               	movwf	4
  8747  0524  3000               	movlw	low (_Dis_TAB| (0+32768))
  8748  0525  0784               	addwf	4,f
  8749  0526  3090               	movlw	high (_Dis_TAB| (0+32768))
  8750  0527  3D85               	addwfc	5,f
  8751  0528  2D2D               	goto	L11
  8752  0529                     l4905:	
  8753                           ;ht1621.c: 125: case 0:display_buff[2] = Dis_TAB[0];
  8754                           
  8755  0529  3000               	movlw	low (_Dis_TAB| (0+32768))
  8756  052A  0084               	movwf	4
  8757  052B  3090               	movlw	high (_Dis_TAB| (0+32768))
  8758  052C  0085               	movwf	5
  8759  052D                     L11:	
  8760  052D  0800               	movf	0,w	;code access
  8761  052E  0020               	movlb	0	; select bank0
  8762  052F  00A9               	movwf	??_Tc_Display
  8763  0530  0829               	movf	??_Tc_Display,w
  8764  0531  0021               	movlb	1	; select bank1
  8765  0532  00E3               	movwf	(_display_buff^(0+128)+2)
  8766                           
  8767                           ;ht1621.c: 127: }
  8768                           
  8769                           ;ht1621.c: 126: default:break;
  8770  0533  2D43               	goto	l4911
  8771  0534                     l4909:	
  8772  0534  0020               	movlb	0	; select bank0
  8773  0535  082A               	movf	Tc_Display@count,w
  8774                           
  8775                           ; Switch size 1, requested type "space"
  8776                           ; Number of cases is 4, Range of values is 0 to 3
  8777                           ; switch strategies available:
  8778                           ; Name         Instructions Cycles
  8779                           ; simple_byte           13     7 (average)
  8780                           ; direct_byte           14     6 (fixed)
  8781                           ; jumptable            260     6 (fixed)
  8782                           ;	Chosen strategy is simple_byte
  8783  0536  3A00               	xorlw	0	; case 0
  8784  0537  1903               	skipnz
  8785  0538  2D29               	goto	l4905
  8786  0539  3A01               	xorlw	1	; case 1
  8787  053A  1903               	skipnz
  8788  053B  2D14               	goto	l645
  8789  053C  3A03               	xorlw	3	; case 2
  8790  053D  1903               	skipnz
  8791  053E  2CED               	goto	l644
  8792  053F  3A01               	xorlw	1	; case 3
  8793  0540  1903               	skipnz
  8794  0541  2CD0               	goto	l4903
  8795  0542  2D43               	goto	l4911
  8796  0543                     l4911:	
  8797                           
  8798                           ;ht1621.c: 128: if(temperature_sign == 1) display_buff[0]=0x20;
  8799  0543  0021               	movlb	1	; select bank1
  8800  0544  033A               	decf	_temperature_sign^(0+128),w
  8801  0545  1D03               	btfss	3,2
  8802  0546  2D4D               	goto	l4915
  8803  0547  3020               	movlw	32
  8804  0548  0020               	movlb	0	; select bank0
  8805  0549  00A9               	movwf	??_Tc_Display
  8806  054A  0829               	movf	??_Tc_Display,w
  8807  054B  0021               	movlb	1	; select bank1
  8808  054C  00E1               	movwf	_display_buff^(0+128)
  8809  054D                     l4915:	
  8810                           
  8811                           ;ht1621.c: 129: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  8812  054D  0020               	movlb	0	; select bank0
  8813  054E  086C               	movf	_temperature_decimal,w
  8814  054F  3E00               	addlw	low (_Dis_TAB| (0+32768))
  8815  0550  0084               	movwf	4
  8816  0551  3090               	movlw	high (_Dis_TAB| (0+32768))
  8817  0552  1803               	skipnc
  8818  0553  3E01               	addlw	1
  8819  0554  0085               	movwf	5
  8820  0555  0800               	movf	0,w	;code access
  8821  0556  3808               	iorlw	8
  8822  0557  00A9               	movwf	??_Tc_Display
  8823  0558  0829               	movf	??_Tc_Display,w
  8824  0559  0021               	movlb	1	; select bank1
  8825  055A  00E4               	movwf	(_display_buff^(0+128)+3)
  8826                           
  8827                           ;ht1621.c: 130: WriteAll_1621(0,display_buff,4);
  8828  055B  30E1               	movlw	low _display_buff
  8829  055C  0020               	movlb	0	; select bank0
  8830  055D  00A0               	movwf	WriteAll_1621@p
  8831  055E  3000               	movlw	high _display_buff
  8832  055F  00A1               	movwf	WriteAll_1621@p+1
  8833  0560  3004               	movlw	4
  8834  0561  00A9               	movwf	??_Tc_Display
  8835  0562  0829               	movf	??_Tc_Display,w
  8836  0563  00A2               	movwf	WriteAll_1621@cnt
  8837  0564  3000               	movlw	0
  8838  0565  318B  23A5         	fcall	_WriteAll_1621
  8839  0567  0008               	return
  8840  0568                     __end_of_Tc_Display:	
  8841                           
  8842                           	psect	text37
  8843  0986                     __ptext37:	
  8844 ;; *************** function _memset *****************
  8845 ;; Defined at:
  8846 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  p1              1    wreg     PTR void 
  8849 ;;		 -> display_buff(4), 
  8850 ;;  c               2    3[COMMON] int 
  8851 ;;  n               2    5[COMMON] unsigned int 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;  p1              1    0[BANK0 ] PTR void 
  8854 ;;		 -> display_buff(4), 
  8855 ;;  p               1    1[BANK0 ] PTR unsigned char 
  8856 ;;		 -> display_buff(4), 
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      PTR void 
  8859 ;; Registers used:
  8860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;Total ram usage:        7 bytes
  8871 ;; Hardware stack levels used:    1
  8872 ;; Hardware stack levels required when called:    3
  8873 ;; This function calls:
  8874 ;;		Nothing
  8875 ;; This function is called by:
  8876 ;;		_Tc_Display
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           
  8881                           ;psect for function _memset
  8882  0986                     _memset:	
  8883                           
  8884                           ;incstack = 0
  8885                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8886                           ;memset@p1 stored from wreg
  8887  0986  0020               	movlb	0	; select bank0
  8888  0987  00A0               	movwf	memset@p1
  8889  0988  0820               	movf	memset@p1,w
  8890  0989  00F7               	movwf	??_memset
  8891  098A  0877               	movf	??_memset,w
  8892  098B  00A1               	movwf	memset@p
  8893  098C                     l4679:	
  8894  098C  3001               	movlw	1
  8895  098D  02F5               	subwf	memset@n,f
  8896  098E  3000               	movlw	0
  8897  098F  3BF6               	subwfb	memset@n+1,f
  8898  0990  0A75               	incf	memset@n,w
  8899  0991  1903               	btfsc	3,2
  8900  0992  0A76               	incf	memset@n+1,w
  8901  0993  1903               	btfsc	3,2
  8902  0994  0008               	return
  8903  0995  0873               	movf	memset@c,w
  8904  0996  00F7               	movwf	??_memset
  8905  0997  0821               	movf	memset@p,w
  8906  0998  0086               	movwf	6
  8907  0999  0187               	clrf	7
  8908  099A  0877               	movf	??_memset,w
  8909  099B  0081               	movwf	1
  8910  099C  3001               	movlw	1
  8911  099D  00F7               	movwf	??_memset
  8912  099E  0877               	movf	??_memset,w
  8913  099F  07A1               	addwf	memset@p,f
  8914  09A0  298C               	goto	l4679
  8915  09A1                     __end_of_memset:	
  8916                           ;	Return value of _memset is never used
  8917                           
  8918                           
  8919                           	psect	text38
  8920  0AB6                     __ptext38:	
  8921 ;; *************** function ___lwmod *****************
  8922 ;; Defined at:
  8923 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  divisor         2    3[COMMON] unsigned int 
  8926 ;;  dividend        2    5[COMMON] unsigned int 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;  counter         1    0[BANK0 ] unsigned char 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  2    3[COMMON] unsigned int 
  8931 ;; Registers used:
  8932 ;;		wreg, status,2, status,0
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;Total ram usage:        6 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    3
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_Tc_Display
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function ___lwmod
  8954  0AB6                     ___lwmod:	
  8955                           
  8956                           ;incstack = 0
  8957                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8958  0AB6  0873               	movf	___lwmod@divisor,w
  8959  0AB7  0474               	iorwf	___lwmod@divisor+1,w
  8960  0AB8  1903               	btfsc	3,2
  8961  0AB9  2ADE               	goto	l4725
  8962  0ABA  0020               	movlb	0	; select bank0
  8963  0ABB  01A0               	clrf	___lwmod@counter
  8964  0ABC  0AA0               	incf	___lwmod@counter,f
  8965  0ABD                     l4715:	
  8966  0ABD  1BF4               	btfsc	___lwmod@divisor+1,7
  8967  0ABE  2AC9               	goto	l4717
  8968  0ABF  3001               	movlw	1
  8969  0AC0                     u4055:	
  8970  0AC0  35F3               	lslf	___lwmod@divisor,f
  8971  0AC1  0DF4               	rlf	___lwmod@divisor+1,f
  8972  0AC2  0B89               	decfsz	9,f
  8973  0AC3  2AC0               	goto	u4055
  8974  0AC4  3001               	movlw	1
  8975  0AC5  00F7               	movwf	??___lwmod
  8976  0AC6  0877               	movf	??___lwmod,w
  8977  0AC7  07A0               	addwf	___lwmod@counter,f
  8978  0AC8  2ABD               	goto	l4715
  8979  0AC9                     l4717:	
  8980  0AC9  0874               	movf	___lwmod@divisor+1,w
  8981  0ACA  0276               	subwf	___lwmod@dividend+1,w
  8982  0ACB  1D03               	skipz
  8983  0ACC  2ACF               	goto	u4075
  8984  0ACD  0873               	movf	___lwmod@divisor,w
  8985  0ACE  0275               	subwf	___lwmod@dividend,w
  8986  0ACF                     u4075:	
  8987  0ACF  1C03               	skipc
  8988  0AD0  2AD5               	goto	l4721
  8989  0AD1  0873               	movf	___lwmod@divisor,w
  8990  0AD2  02F5               	subwf	___lwmod@dividend,f
  8991  0AD3  0874               	movf	___lwmod@divisor+1,w
  8992  0AD4  3BF6               	subwfb	___lwmod@dividend+1,f
  8993  0AD5                     l4721:	
  8994  0AD5  3001               	movlw	1
  8995  0AD6                     u4085:	
  8996  0AD6  36F4               	lsrf	___lwmod@divisor+1,f
  8997  0AD7  0CF3               	rrf	___lwmod@divisor,f
  8998  0AD8  0B89               	decfsz	9,f
  8999  0AD9  2AD6               	goto	u4085
  9000  0ADA  3001               	movlw	1
  9001  0ADB  02A0               	subwf	___lwmod@counter,f
  9002  0ADC  1D03               	btfss	3,2
  9003  0ADD  2AC9               	goto	l4717
  9004  0ADE                     l4725:	
  9005  0ADE  0876               	movf	___lwmod@dividend+1,w
  9006  0ADF  00F4               	movwf	?___lwmod+1
  9007  0AE0  0875               	movf	___lwmod@dividend,w
  9008  0AE1  00F3               	movwf	?___lwmod
  9009  0AE2  0008               	return
  9010  0AE3                     __end_of___lwmod:	
  9011                           
  9012                           	psect	text39
  9013  0BDA                     __ptext39:	
  9014 ;; *************** function ___lwdiv *****************
  9015 ;; Defined at:
  9016 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  divisor         2    1[BANK0 ] unsigned int 
  9019 ;;  dividend        2    3[BANK0 ] unsigned int 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  quotient        2    7[BANK0 ] unsigned int 
  9022 ;;  counter         1    6[BANK0 ] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2    1[BANK0 ] unsigned int 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:        8 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    3
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_Tc_Display
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function ___lwdiv
  9048  0BDA                     ___lwdiv:	
  9049                           
  9050                           ;incstack = 0
  9051                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9052  0BDA  0020               	movlb	0	; select bank0
  9053  0BDB  01A7               	clrf	___lwdiv@quotient
  9054  0BDC  01A8               	clrf	___lwdiv@quotient+1
  9055  0BDD  0821               	movf	___lwdiv@divisor,w
  9056  0BDE  0422               	iorwf	___lwdiv@divisor+1,w
  9057  0BDF  1903               	btfsc	3,2
  9058  0BE0  2C0A               	goto	l4703
  9059  0BE1  01A6               	clrf	___lwdiv@counter
  9060  0BE2  0AA6               	incf	___lwdiv@counter,f
  9061  0BE3                     l4691:	
  9062  0BE3  1BA2               	btfsc	___lwdiv@divisor+1,7
  9063  0BE4  2BEF               	goto	l4693
  9064  0BE5  3001               	movlw	1
  9065  0BE6                     u3985:	
  9066  0BE6  35A1               	lslf	___lwdiv@divisor,f
  9067  0BE7  0DA2               	rlf	___lwdiv@divisor+1,f
  9068  0BE8  0B89               	decfsz	9,f
  9069  0BE9  2BE6               	goto	u3985
  9070  0BEA  3001               	movlw	1
  9071  0BEB  00A5               	movwf	??___lwdiv
  9072  0BEC  0825               	movf	??___lwdiv,w
  9073  0BED  07A6               	addwf	___lwdiv@counter,f
  9074  0BEE  2BE3               	goto	l4691
  9075  0BEF                     l4693:	
  9076  0BEF  3001               	movlw	1
  9077  0BF0                     u4005:	
  9078  0BF0  35A7               	lslf	___lwdiv@quotient,f
  9079  0BF1  0DA8               	rlf	___lwdiv@quotient+1,f
  9080  0BF2  0B89               	decfsz	9,f
  9081  0BF3  2BF0               	goto	u4005
  9082  0BF4  0822               	movf	___lwdiv@divisor+1,w
  9083  0BF5  0224               	subwf	___lwdiv@dividend+1,w
  9084  0BF6  1D03               	skipz
  9085  0BF7  2BFA               	goto	u4015
  9086  0BF8  0821               	movf	___lwdiv@divisor,w
  9087  0BF9  0223               	subwf	___lwdiv@dividend,w
  9088  0BFA                     u4015:	
  9089  0BFA  1C03               	skipc
  9090  0BFB  2C01               	goto	l4699
  9091  0BFC  0821               	movf	___lwdiv@divisor,w
  9092  0BFD  02A3               	subwf	___lwdiv@dividend,f
  9093  0BFE  0822               	movf	___lwdiv@divisor+1,w
  9094  0BFF  3BA4               	subwfb	___lwdiv@dividend+1,f
  9095  0C00  1427               	bsf	___lwdiv@quotient,0
  9096  0C01                     l4699:	
  9097  0C01  3001               	movlw	1
  9098  0C02                     u4025:	
  9099  0C02  36A2               	lsrf	___lwdiv@divisor+1,f
  9100  0C03  0CA1               	rrf	___lwdiv@divisor,f
  9101  0C04  0B89               	decfsz	9,f
  9102  0C05  2C02               	goto	u4025
  9103  0C06  3001               	movlw	1
  9104  0C07  02A6               	subwf	___lwdiv@counter,f
  9105  0C08  1D03               	btfss	3,2
  9106  0C09  2BEF               	goto	l4693
  9107  0C0A                     l4703:	
  9108  0C0A  0828               	movf	___lwdiv@quotient+1,w
  9109  0C0B  00A2               	movwf	?___lwdiv+1
  9110  0C0C  0827               	movf	___lwdiv@quotient,w
  9111  0C0D  00A1               	movwf	?___lwdiv
  9112  0C0E  0008               	return
  9113  0C0F                     __end_of___lwdiv:	
  9114                           
  9115                           	psect	text40
  9116  0D48                     __ptext40:	
  9117 ;; *************** function _one_temperature_trans *****************
  9118 ;; Defined at:
  9119 ;;		line 292 in file "mcc_generated_files/max31856.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;Total ram usage:        2 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:    6
  9140 ;; This function calls:
  9141 ;;		_maxim_31856_read_nregisters
  9142 ;;		_maxim_start_conversion
  9143 ;; This function is called by:
  9144 ;;		_temperature_process
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           
  9149                           ;psect for function _one_temperature_trans
  9150  0D48                     _one_temperature_trans:	
  9151                           
  9152                           ;max31856.c: 294: maxim_start_conversion((uint8_t) 0x40);
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9156  0D48  3040               	movlw	64
  9157  0D49  3187  27E6  318D   	fcall	_maxim_start_conversion
  9158                           
  9159                           ;max31856.c: 295: MAX31856Sec = 0;
  9160  0D4C  0021               	movlb	1	; select bank1
  9161  0D4D  01B9               	clrf	_MAX31856Sec^(0+128)
  9162                           
  9163                           ;max31856.c: 296: while( !(RB3 == 0 || MAX31856Sec > 30) ) asm("clrwdt");
  9164  0D4E  2D50               	goto	l505
  9165  0D4F                     l506:	
  9166  0D4F  0064               	clrwdt	;# 
  9167  0D50                     l505:	
  9168  0D50  0020               	movlb	0	; select bank0
  9169  0D51  1D8D               	btfss	13,3	;volatile
  9170  0D52  2D58               	goto	l5015
  9171  0D53  301F               	movlw	31
  9172  0D54  0021               	movlb	1	; select bank1
  9173  0D55  0239               	subwf	_MAX31856Sec^(0+128),w
  9174  0D56  1C03               	skipc
  9175  0D57  2D4F               	goto	l506
  9176  0D58                     l5015:	
  9177                           
  9178                           ;max31856.c: 297: if( MAX31856Sec > 30)
  9179  0D58  301F               	movlw	31
  9180  0D59  0021               	movlb	1	; select bank1
  9181  0D5A  0239               	subwf	_MAX31856Sec^(0+128),w
  9182  0D5B  1C03               	skipc
  9183  0D5C  2D60               	goto	l5019
  9184                           
  9185                           ;max31856.c: 298: {
  9186                           ;max31856.c: 299: uch_sr = 0x01;
  9187  0D5D  01C3               	clrf	_uch_sr^(0+128)
  9188  0D5E  0AC3               	incf	_uch_sr^(0+128),f
  9189                           
  9190                           ;max31856.c: 300: }
  9191  0D5F  0008               	return
  9192  0D60                     l5019:	
  9193                           
  9194                           ;max31856.c: 301: else
  9195                           ;max31856.c: 302: {
  9196                           ;max31856.c: 303: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  9197  0D60  30C4               	movlw	(low (_uch_reg| 0))& (0+255)
  9198  0D61  0020               	movlb	0	; select bank0
  9199  0D62  00A8               	movwf	??_one_temperature_trans
  9200  0D63  0828               	movf	??_one_temperature_trans,w
  9201  0D64  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  9202  0D65  3006               	movlw	6
  9203  0D66  00A9               	movwf	??_one_temperature_trans+1
  9204  0D67  0829               	movf	??_one_temperature_trans+1,w
  9205  0D68  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  9206  0D69  300A               	movlw	10
  9207  0D6A  3188  20D3         	fcall	_maxim_31856_read_nregisters
  9208                           
  9209                           ;max31856.c: 304: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  9210  0D6C  0021               	movlb	1	; select bank1
  9211  0D6D  0844               	movf	_uch_reg^(0+128),w
  9212  0D6E  0020               	movlb	0	; select bank0
  9213  0D6F  00A8               	movwf	??_one_temperature_trans
  9214  0D70  0828               	movf	??_one_temperature_trans,w
  9215  0D71  0021               	movlb	1	; select bank1
  9216  0D72  00BC               	movwf	_uch_cjth^(0+128)
  9217  0D73  0845               	movf	(_uch_reg^(0+128)+1),w
  9218  0D74  0020               	movlb	0	; select bank0
  9219  0D75  00A8               	movwf	??_one_temperature_trans
  9220  0D76  0828               	movf	??_one_temperature_trans,w
  9221  0D77  0021               	movlb	1	; select bank1
  9222  0D78  00BD               	movwf	_uch_cjtl^(0+128)
  9223                           
  9224                           ;max31856.c: 305: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  9225  0D79  0846               	movf	(_uch_reg^(0+128)+2),w
  9226  0D7A  0020               	movlb	0	; select bank0
  9227  0D7B  00A8               	movwf	??_one_temperature_trans
  9228  0D7C  0828               	movf	??_one_temperature_trans,w
  9229  0D7D  0021               	movlb	1	; select bank1
  9230  0D7E  00BF               	movwf	_uch_ltcbh^(0+128)
  9231  0D7F  0847               	movf	(_uch_reg^(0+128)+3),w
  9232  0D80  0020               	movlb	0	; select bank0
  9233  0D81  00A8               	movwf	??_one_temperature_trans
  9234  0D82  0828               	movf	??_one_temperature_trans,w
  9235  0D83  0021               	movlb	1	; select bank1
  9236  0D84  00C1               	movwf	_uch_ltcbm^(0+128)
  9237  0D85  0848               	movf	(_uch_reg^(0+128)+4),w
  9238  0D86  0020               	movlb	0	; select bank0
  9239  0D87  00A8               	movwf	??_one_temperature_trans
  9240  0D88  0828               	movf	??_one_temperature_trans,w
  9241  0D89  0021               	movlb	1	; select bank1
  9242  0D8A  00C0               	movwf	_uch_ltcbl^(0+128)
  9243                           
  9244                           ;max31856.c: 306: uch_sr=uch_reg[5];
  9245  0D8B  0849               	movf	(_uch_reg^(0+128)+5),w
  9246  0D8C  0020               	movlb	0	; select bank0
  9247  0D8D  00A8               	movwf	??_one_temperature_trans
  9248  0D8E  0828               	movf	??_one_temperature_trans,w
  9249  0D8F  0021               	movlb	1	; select bank1
  9250  0D90  00C3               	movwf	_uch_sr^(0+128)
  9251  0D91  0008               	return
  9252  0D92                     __end_of_one_temperature_trans:	
  9253                           
  9254                           	psect	text41
  9255  07E6                     __ptext41:	
  9256 ;; *************** function _maxim_start_conversion *****************
  9257 ;; Defined at:
  9258 ;;		line 114 in file "mcc_generated_files/max31856.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  uch_conversi    1    wreg     unsigned char 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		wreg, status,2, status,0, pclath, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9275 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;Total ram usage:        2 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:    5
  9279 ;; This function calls:
  9280 ;;		_maxim_31856_read_register
  9281 ;;		_maxim_31856_write_register
  9282 ;; This function is called by:
  9283 ;;		_one_temperature_trans
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function _maxim_start_conversion
  9289  07E6                     _maxim_start_conversion:	
  9290                           
  9291                           ;incstack = 0
  9292                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  9293                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  9294  07E6  0020               	movlb	0	; select bank0
  9295  07E7  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  9296                           
  9297                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  9298  07E8  3000               	movlw	0
  9299  07E9  3188  206F  3187   	fcall	_maxim_31856_read_register
  9300  07EC  00F7               	movwf	??_maxim_start_conversion
  9301  07ED  0877               	movf	??_maxim_start_conversion,w
  9302  07EE  00FA               	movwf	_uch_cr0
  9303                           
  9304                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  9305  07EF  303F               	movlw	63
  9306  07F0  00F7               	movwf	??_maxim_start_conversion
  9307  07F1  0877               	movf	??_maxim_start_conversion,w
  9308  07F2  05FA               	andwf	_uch_cr0,f
  9309                           
  9310                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  9311  07F3  0020               	movlb	0	; select bank0
  9312  07F4  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  9313  07F5  00F7               	movwf	??_maxim_start_conversion
  9314  07F6  0877               	movf	??_maxim_start_conversion,w
  9315  07F7  04FA               	iorwf	_uch_cr0,f
  9316                           
  9317                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  9318  07F8  087A               	movf	_uch_cr0,w
  9319  07F9  00F7               	movwf	??_maxim_start_conversion
  9320  07FA  0877               	movf	??_maxim_start_conversion,w
  9321  07FB  00F4               	movwf	maxim_31856_write_register@uch_register_value
  9322  07FC  3080               	movlw	128
  9323  07FD  3188  2042         	fcall	_maxim_31856_write_register
  9324  07FF  0008               	return
  9325  0800                     __end_of_maxim_start_conversion:	
  9326                           
  9327                           	psect	text42
  9328  0842                     __ptext42:	
  9329 ;; *************** function _maxim_31856_write_register *****************
  9330 ;; Defined at:
  9331 ;;		line 20 in file "mcc_generated_files/max31856.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  uch_register    1    wreg     unsigned char 
  9334 ;;  uch_register    1    4[COMMON] unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  uch_register    1    5[COMMON] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        2 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    4
  9353 ;; This function calls:
  9354 ;;		_SPI_Exchange8bit
  9355 ;; This function is called by:
  9356 ;;		_maxim_31856_init
  9357 ;;		_maxim_start_conversion
  9358 ;;		_maxim_clear_fault_status
  9359 ;;		_temperature_display
  9360 ;;		_maxim_stop_conversion
  9361 ;;		_maxim_disable_oc_fault_detection
  9362 ;;		_maxim_set_oc_fault_detection
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           
  9367                           ;psect for function _maxim_31856_write_register
  9368  0842                     _maxim_31856_write_register:	
  9369                           
  9370                           ;incstack = 0
  9371                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  9372                           ;maxim_31856_write_register@uch_register_address stored from wreg
  9373  0842  00F5               	movwf	maxim_31856_write_register@uch_register_address
  9374                           
  9375                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  9376  0843  0022               	movlb	2	; select bank2
  9377  0844  128C               	bcf	12,5	;volatile
  9378                           
  9379                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  9380  0845  0875               	movf	maxim_31856_write_register@uch_register_address,w
  9381  0846  3188  2023  3188   	fcall	_SPI_Exchange8bit
  9382                           
  9383                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  9384  0849  0874               	movf	maxim_31856_write_register@uch_register_value,w
  9385  084A  3188  2023         	fcall	_SPI_Exchange8bit
  9386                           
  9387                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  9388  084C  0022               	movlb	2	; select bank2
  9389  084D  168C               	bsf	12,5	;volatile
  9390  084E  0008               	return
  9391  084F                     __end_of_maxim_31856_write_register:	
  9392                           
  9393                           	psect	text43
  9394  086F                     __ptext43:	
  9395 ;; *************** function _maxim_31856_read_register *****************
  9396 ;; Defined at:
  9397 ;;		line 34 in file "mcc_generated_files/max31856.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  uch_register    1    wreg     unsigned char 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  uch_register    1    5[COMMON] unsigned char 
  9402 ;;  uch_register    1    6[COMMON] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      unsigned char 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, pclath, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;Total ram usage:        3 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    4
  9419 ;; This function calls:
  9420 ;;		_SPI_Exchange8bit
  9421 ;; This function is called by:
  9422 ;;		_maxim_start_conversion
  9423 ;;		_maxim_clear_fault_status
  9424 ;;		_maxim_stop_conversion
  9425 ;;		_maxim_disable_oc_fault_detection
  9426 ;;		_maxim_set_oc_fault_detection
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _maxim_31856_read_register
  9432  086F                     _maxim_31856_read_register:	
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  9436                           ;maxim_31856_read_register@uch_register_address stored from wreg
  9437  086F  00F5               	movwf	maxim_31856_read_register@uch_register_address
  9438                           
  9439                           ;max31856.c: 36: uint8_t uch_register_data;
  9440                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  9441  0870  0022               	movlb	2	; select bank2
  9442  0871  128C               	bcf	12,5	;volatile
  9443                           
  9444                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  9445  0872  0875               	movf	maxim_31856_read_register@uch_register_address,w
  9446  0873  3188  2023  3188   	fcall	_SPI_Exchange8bit
  9447                           
  9448                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  9449  0876  30FF               	movlw	255
  9450  0877  3188  2023         	fcall	_SPI_Exchange8bit
  9451  0879  00F4               	movwf	??_maxim_31856_read_register
  9452  087A  0874               	movf	??_maxim_31856_read_register,w
  9453  087B  00F6               	movwf	maxim_31856_read_register@uch_register_data
  9454                           
  9455                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  9456  087C  0022               	movlb	2	; select bank2
  9457  087D  168C               	bsf	12,5	;volatile
  9458                           
  9459                           ;max31856.c: 41: return (uch_register_data);
  9460  087E  0876               	movf	maxim_31856_read_register@uch_register_data,w
  9461  087F  0008               	return
  9462  0880                     __end_of_maxim_31856_read_register:	
  9463                           
  9464                           	psect	text44
  9465  08D3                     __ptext44:	
  9466 ;; *************** function _maxim_31856_read_nregisters *****************
  9467 ;; Defined at:
  9468 ;;		line 50 in file "mcc_generated_files/max31856.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  uch_register    1    wreg     unsigned char 
  9471 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  9472 ;;		 -> uch_reg(8), 
  9473 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  uch_register    1    7[BANK0 ] unsigned char 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      void 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;Total ram usage:        5 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    5
  9492 ;; This function calls:
  9493 ;;		_SPI_Exchange8bit
  9494 ;;		_SPI_Exchange8bitBuffer
  9495 ;; This function is called by:
  9496 ;;		_one_temperature_trans
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _maxim_31856_read_nregisters
  9502  08D3                     _maxim_31856_read_nregisters:	
  9503                           
  9504                           ;incstack = 0
  9505                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9506                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  9507  08D3  0020               	movlb	0	; select bank0
  9508  08D4  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  9509                           
  9510                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  9511  08D5  0022               	movlb	2	; select bank2
  9512  08D6  128C               	bcf	12,5	;volatile
  9513                           
  9514                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  9515  08D7  0020               	movlb	0	; select bank0
  9516  08D8  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  9517  08D9  3188  2023  3188   	fcall	_SPI_Exchange8bit
  9518                           
  9519                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  9520  08DC  0020               	movlb	0	; select bank0
  9521  08DD  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  9522  08DE  00A5               	movwf	??_maxim_31856_read_nregisters
  9523  08DF  0825               	movf	??_maxim_31856_read_nregisters,w
  9524  08E0  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  9525  08E1  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  9526  08E2  00A6               	movwf	??_maxim_31856_read_nregisters+1
  9527  08E3  0826               	movf	??_maxim_31856_read_nregisters+1,w
  9528  08E4  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  9529  08E5  3000               	movlw	0
  9530  08E6  318D  25DE         	fcall	_SPI_Exchange8bitBuffer
  9531                           
  9532                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  9533  08E8  0022               	movlb	2	; select bank2
  9534  08E9  168C               	bsf	12,5	;volatile
  9535  08EA  0008               	return
  9536  08EB                     __end_of_maxim_31856_read_nregisters:	
  9537                           
  9538                           	psect	text45
  9539  0DDE                     __ptext45:	
  9540 ;; *************** function _SPI_Exchange8bitBuffer *****************
  9541 ;; Defined at:
  9542 ;;		line 89 in file "mcc_generated_files/spi.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  dataIn          1    wreg     PTR unsigned char 
  9545 ;;		 -> NULL(0), 
  9546 ;;  bufLen          1    4[COMMON] unsigned char 
  9547 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  9548 ;;		 -> uch_reg(8), 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  9551 ;;		 -> NULL(0), 
  9552 ;;  bytesWritten    1    7[COMMON] unsigned char 
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      unsigned char 
  9555 ;; Registers used:
  9556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;Total ram usage:        7 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    4
  9569 ;; This function calls:
  9570 ;;		_SPI_Exchange8bit
  9571 ;; This function is called by:
  9572 ;;		_maxim_31856_read_nregisters
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _SPI_Exchange8bitBuffer
  9578  0DDE                     _SPI_Exchange8bitBuffer:	
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9582                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  9583  0DDE  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  9584                           
  9585                           ;spi.c: 90: uint8_t bytesWritten = 0;
  9586  0DDF  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  9587                           
  9588                           ;spi.c: 92: if (bufLen != 0) {
  9589  0DE0  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9590  0DE1  1903               	btfsc	3,2
  9591  0DE2  0008               	return
  9592                           
  9593                           ;spi.c: 93: if (dataIn != (0)) {
  9594  0DE3  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  9595  0DE4  1D03               	btfss	3,2
  9596  0DE5  2E10               	goto	l4579
  9597  0DE6  2E15               	goto	l4581
  9598  0DE7                     l4571:	
  9599                           ;spi.c: 94: while (bytesWritten < bufLen) {
  9600                           
  9601                           
  9602                           ;spi.c: 95: if (dataOut == (0)) {
  9603  0DE7  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9604  0DE8  1D03               	btfss	3,2
  9605  0DE9  2DF6               	goto	l4575
  9606                           
  9607                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  9608  0DEA  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9609  0DEB  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9610  0DEC  0020               	movlb	0	; select bank0
  9611  0DED  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9612  0DEE  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9613  0DEF  0086               	movwf	6
  9614  0DF0  0187               	clrf	7
  9615  0DF1  0801               	movf	1,w
  9616  0DF2  3188  2023  318D   	fcall	_SPI_Exchange8bit
  9617                           
  9618                           ;spi.c: 97: } else {
  9619  0DF5  2E0B               	goto	l4577
  9620  0DF6                     l4575:	
  9621                           
  9622                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  9623  0DF6  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9624  0DF7  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9625  0DF8  0020               	movlb	0	; select bank0
  9626  0DF9  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9627  0DFA  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9628  0DFB  0086               	movwf	6
  9629  0DFC  0187               	clrf	7
  9630  0DFD  0801               	movf	1,w
  9631  0DFE  3188  2023  318D   	fcall	_SPI_Exchange8bit
  9632  0E01  0020               	movlb	0	; select bank0
  9633  0E02  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9634  0E03  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9635  0E04  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9636  0E05  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  9637  0E06  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  9638  0E07  0086               	movwf	6
  9639  0E08  0187               	clrf	7
  9640  0E09  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9641  0E0A  0081               	movwf	1
  9642  0E0B                     l4577:	
  9643                           
  9644                           ;spi.c: 99: }
  9645                           ;spi.c: 101: bytesWritten++;
  9646  0E0B  3001               	movlw	1
  9647  0E0C  0020               	movlb	0	; select bank0
  9648  0E0D  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9649  0E0E  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9650  0E0F  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9651  0E10                     l4579:	
  9652  0E10  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9653  0E11  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9654  0E12  1803               	btfsc	3,0
  9655  0E13  0008               	return
  9656  0E14  2DE7               	goto	l4571
  9657  0E15                     l4581:	
  9658                           ;spi.c: 102: }
  9659                           ;spi.c: 103: } else {
  9660                           
  9661                           
  9662                           ;spi.c: 104: if (dataOut != (0)) {
  9663  0E15  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9664  0E16  1903               	btfsc	3,2
  9665  0E17  0008               	return
  9666  0E18                     l4589:	
  9667  0E18  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9668  0E19  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9669  0E1A  1803               	btfsc	3,0
  9670  0E1B  0008               	return
  9671                           
  9672                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  9673                           
  9674                           ;spi.c: 105: while (bytesWritten < bufLen) {
  9675  0E1C  3000               	movlw	0
  9676  0E1D  3188  2023  318D   	fcall	_SPI_Exchange8bit
  9677  0E20  0020               	movlb	0	; select bank0
  9678  0E21  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9679  0E22  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9680  0E23  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9681  0E24  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9682  0E25  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9683  0E26  0086               	movwf	6
  9684  0E27  0187               	clrf	7
  9685  0E28  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9686  0E29  0081               	movwf	1
  9687                           
  9688                           ;spi.c: 108: bytesWritten++;
  9689  0E2A  3001               	movlw	1
  9690  0E2B  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9691  0E2C  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9692  0E2D  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9693  0E2E  2E18               	goto	l4589
  9694  0E2F                     __end_of_SPI_Exchange8bitBuffer:	
  9695                           ;spi.c: 109: }
  9696                           ;spi.c: 110: }
  9697                           ;spi.c: 111: }
  9698                           ;spi.c: 112: }
  9699                           ;spi.c: 114: return bytesWritten;
  9700                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  9701                           
  9702                           
  9703                           	psect	text46
  9704  0823                     __ptext46:	
  9705 ;; *************** function _SPI_Exchange8bit *****************
  9706 ;; Defined at:
  9707 ;;		line 77 in file "mcc_generated_files/spi.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  data            1    wreg     unsigned char 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;  data            1    3[COMMON] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      unsigned char 
  9714 ;; Registers used:
  9715 ;;		wreg
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        1 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    3
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_SPI_Exchange8bitBuffer
  9732 ;;		_maxim_31856_write_register
  9733 ;;		_maxim_31856_read_register
  9734 ;;		_maxim_31856_read_nregisters
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           
  9739                           ;psect for function _SPI_Exchange8bit
  9740  0823                     _SPI_Exchange8bit:	
  9741                           
  9742                           ;incstack = 0
  9743                           ; Regs used in _SPI_Exchange8bit: [wreg]
  9744                           ;SPI_Exchange8bit@data stored from wreg
  9745  0823  00F3               	movwf	SPI_Exchange8bit@data
  9746                           
  9747                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  9748  0824  0024               	movlb	4	; select bank4
  9749  0825  1395               	bcf	21,7	;volatile
  9750                           
  9751                           ;spi.c: 81: SSPBUF = data;
  9752  0826  0873               	movf	SPI_Exchange8bit@data,w
  9753  0827  0091               	movwf	17	;volatile
  9754  0828                     l71:	
  9755                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  9756                           
  9757  0828  1C14               	btfss	20,0	;volatile
  9758  0829  2828               	goto	l71
  9759                           
  9760                           ;spi.c: 84: }
  9761                           ;spi.c: 86: return (SSPBUF);
  9762  082A  0811               	movf	17,w	;volatile
  9763  082B  0008               	return
  9764  082C                     __end_of_SPI_Exchange8bit:	
  9765                           
  9766                           	psect	text47
  9767  0B41                     __ptext47:	
  9768 ;; *************** function _Two_Display *****************
  9769 ;; Defined at:
  9770 ;;		line 139 in file "mcc_generated_files/ht1621.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  number          1    wreg     unsigned char 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  number          1   11[BANK0 ] unsigned char 
  9775 ;;  num             4    7[BANK0 ] unsigned char [4]
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;Total ram usage:        6 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    5
  9792 ;; This function calls:
  9793 ;;		_WriteAll_1621
  9794 ;; This function is called by:
  9795 ;;		_temperature_process
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _Two_Display
  9801  0B41                     _Two_Display:	
  9802                           
  9803                           ;incstack = 0
  9804                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9805                           ;Two_Display@number stored from wreg
  9806  0B41  0020               	movlb	0	; select bank0
  9807  0B42  00AB               	movwf	Two_Display@number
  9808                           
  9809                           ;ht1621.c: 141: unsigned char num[4]={0};
  9810  0B43  0021               	movlb	1	; select bank1
  9811  0B44  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  9812  0B45  0020               	movlb	0	; select bank0
  9813  0B46  00AA               	movwf	Two_Display@num+3
  9814  0B47  0021               	movlb	1	; select bank1
  9815  0B48  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  9816  0B49  0020               	movlb	0	; select bank0
  9817  0B4A  00A9               	movwf	Two_Display@num+2
  9818  0B4B  0021               	movlb	1	; select bank1
  9819  0B4C  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  9820  0B4D  0020               	movlb	0	; select bank0
  9821  0B4E  00A8               	movwf	Two_Display@num+1
  9822  0B4F  0021               	movlb	1	; select bank1
  9823  0B50  0820               	movf	Two_Display@F2123^(0+128),w
  9824  0B51  0020               	movlb	0	; select bank0
  9825  0B52  00A7               	movwf	Two_Display@num
  9826                           
  9827                           ;ht1621.c: 142: num[1] = Dis_TAB[0];
  9828  0B53  3000               	movlw	low (_Dis_TAB| (0+32768))
  9829  0B54  0084               	movwf	4
  9830  0B55  3090               	movlw	high (_Dis_TAB| (0+32768))
  9831  0B56  0085               	movwf	5
  9832  0B57  0800               	movf	0,w	;code access
  9833  0B58  00A6               	movwf	??_Two_Display
  9834  0B59  0826               	movf	??_Two_Display,w
  9835  0B5A  00A8               	movwf	Two_Display@num+1
  9836                           
  9837                           ;ht1621.c: 143: num[2] = Dis_TAB[number];
  9838  0B5B  082B               	movf	Two_Display@number,w
  9839  0B5C  3E00               	addlw	low (_Dis_TAB| (0+32768))
  9840  0B5D  0084               	movwf	4
  9841  0B5E  3090               	movlw	high (_Dis_TAB| (0+32768))
  9842  0B5F  1803               	skipnc
  9843  0B60  3E01               	addlw	1
  9844  0B61  0085               	movwf	5
  9845  0B62  0800               	movf	0,w	;code access
  9846  0B63  00A6               	movwf	??_Two_Display
  9847  0B64  0826               	movf	??_Two_Display,w
  9848  0B65  00A9               	movwf	Two_Display@num+2
  9849                           
  9850                           ;ht1621.c: 144: WriteAll_1621(0, num, 4);
  9851  0B66  3027               	movlw	low Two_Display@num
  9852  0B67  00A0               	movwf	WriteAll_1621@p
  9853  0B68  3000               	movlw	high Two_Display@num
  9854  0B69  00A1               	movwf	WriteAll_1621@p+1
  9855  0B6A  3004               	movlw	4
  9856  0B6B  00A6               	movwf	??_Two_Display
  9857  0B6C  0826               	movf	??_Two_Display,w
  9858  0B6D  00A2               	movwf	WriteAll_1621@cnt
  9859  0B6E  3000               	movlw	0
  9860  0B6F  318B  23A5         	fcall	_WriteAll_1621
  9861  0B71  0008               	return
  9862  0B72                     __end_of_Two_Display:	
  9863                           
  9864                           	psect	text48
  9865  0BA5                     __ptext48:	
  9866 ;; *************** function _WriteAll_1621 *****************
  9867 ;; Defined at:
  9868 ;;		line 91 in file "mcc_generated_files/ht1621.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  addr            1    wreg     unsigned char 
  9871 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9872 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  9873 ;;		 -> Dis_TAB(21), 
  9874 ;;  cnt             1    2[BANK0 ] unsigned char 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  addr            1    4[BANK0 ] unsigned char 
  9877 ;;  i               1    5[BANK0 ] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        6 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    4
  9894 ;; This function calls:
  9895 ;;		_SendBit_1621
  9896 ;;		_SendDataBit_1621
  9897 ;; This function is called by:
  9898 ;;		_main
  9899 ;;		_Tc_Display
  9900 ;;		_Two_Display
  9901 ;;		_err_Display
  9902 ;;		_time_Display
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _WriteAll_1621
  9908  0BA5                     _WriteAll_1621:	
  9909                           
  9910                           ;incstack = 0
  9911                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9912                           ;WriteAll_1621@addr stored from wreg
  9913  0BA5  0020               	movlb	0	; select bank0
  9914  0BA6  00A4               	movwf	WriteAll_1621@addr
  9915                           
  9916                           ;ht1621.c: 93: unsigned char i;
  9917                           ;ht1621.c: 94: do { LATC0 = 0; } while(0);
  9918  0BA7  0022               	movlb	2	; select bank2
  9919  0BA8  100E               	bcf	14,0	;volatile
  9920                           
  9921                           ;ht1621.c: 95: SendBit_1621(0xa0,3);
  9922  0BA9  3003               	movlw	3
  9923  0BAA  0020               	movlb	0	; select bank0
  9924  0BAB  00A3               	movwf	??_WriteAll_1621
  9925  0BAC  0823               	movf	??_WriteAll_1621,w
  9926  0BAD  00F3               	movwf	SendBit_1621@cnt
  9927  0BAE  30A0               	movlw	160
  9928  0BAF  3189  21DB  318B   	fcall	_SendBit_1621
  9929                           
  9930                           ;ht1621.c: 96: SendBit_1621(addr,6);
  9931  0BB2  3006               	movlw	6
  9932  0BB3  0020               	movlb	0	; select bank0
  9933  0BB4  00A3               	movwf	??_WriteAll_1621
  9934  0BB5  0823               	movf	??_WriteAll_1621,w
  9935  0BB6  00F3               	movwf	SendBit_1621@cnt
  9936  0BB7  0824               	movf	WriteAll_1621@addr,w
  9937  0BB8  3189  21DB  318B   	fcall	_SendBit_1621
  9938                           
  9939                           ;ht1621.c: 97: for(i =0; i <cnt; i ++,p++)
  9940  0BBB  0020               	movlb	0	; select bank0
  9941  0BBC  01A5               	clrf	WriteAll_1621@i
  9942  0BBD                     l4601:	
  9943  0BBD  0822               	movf	WriteAll_1621@cnt,w
  9944  0BBE  0225               	subwf	WriteAll_1621@i,w
  9945  0BBF  1803               	btfsc	3,0
  9946  0BC0  2BD7               	goto	l634
  9947                           
  9948                           ;ht1621.c: 98: {
  9949                           ;ht1621.c: 99: SendDataBit_1621(*p,8);
  9950  0BC1  3008               	movlw	8
  9951  0BC2  00A3               	movwf	??_WriteAll_1621
  9952  0BC3  0823               	movf	??_WriteAll_1621,w
  9953  0BC4  00F3               	movwf	SendDataBit_1621@cnt
  9954  0BC5  0820               	movf	WriteAll_1621@p,w
  9955  0BC6  0084               	movwf	4
  9956  0BC7  0821               	movf	WriteAll_1621@p+1,w
  9957  0BC8  0085               	movwf	5
  9958  0BC9  0800               	movf	0,w	;code access
  9959  0BCA  3189  21FB  318B   	fcall	_SendDataBit_1621
  9960  0BCD  3001               	movlw	1
  9961  0BCE  0020               	movlb	0	; select bank0
  9962  0BCF  00A3               	movwf	??_WriteAll_1621
  9963  0BD0  0823               	movf	??_WriteAll_1621,w
  9964  0BD1  07A5               	addwf	WriteAll_1621@i,f
  9965  0BD2  3001               	movlw	1
  9966  0BD3  07A0               	addwf	WriteAll_1621@p,f
  9967  0BD4  3000               	movlw	0
  9968  0BD5  3DA1               	addwfc	WriteAll_1621@p+1,f
  9969  0BD6  2BBD               	goto	l4601
  9970  0BD7                     l634:	
  9971                           ;ht1621.c: 100: }
  9972                           ;ht1621.c: 101: do { LATC0 = 1; } while(0);
  9973                           
  9974  0BD7  0022               	movlb	2	; select bank2
  9975  0BD8  140E               	bsf	14,0	;volatile
  9976  0BD9  0008               	return
  9977  0BDA                     __end_of_WriteAll_1621:	
  9978                           
  9979                           	psect	text49
  9980  09FB                     __ptext49:	
  9981 ;; *************** function _SendDataBit_1621 *****************
  9982 ;; Defined at:
  9983 ;;		line 42 in file "mcc_generated_files/ht1621.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  data            1    wreg     unsigned char 
  9986 ;;  cnt             1    3[COMMON] unsigned char 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  data            1    6[COMMON] unsigned char 
  9989 ;;  i               1    7[COMMON] unsigned char 
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9999 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;Total ram usage:        5 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    3
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_WriteAll_1621
 10010 ;;		_Write_1621
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           
 10015                           ;psect for function _SendDataBit_1621
 10016  09FB                     _SendDataBit_1621:	
 10017                           
 10018                           ;incstack = 0
 10019                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
 10020                           ;SendDataBit_1621@data stored from wreg
 10021  09FB  00F6               	movwf	SendDataBit_1621@data
 10022                           
 10023                           ;ht1621.c: 44: unsigned char i;
 10024                           ;ht1621.c: 45: for(i =0; i <cnt; i ++)
 10025  09FC  01F7               	clrf	SendDataBit_1621@i
 10026  09FD                     l4529:	
 10027  09FD  0873               	movf	SendDataBit_1621@cnt,w
 10028  09FE  0277               	subwf	SendDataBit_1621@i,w
 10029  09FF  1803               	btfsc	3,0
 10030  0A00  0008               	return
 10031                           
 10032                           ;ht1621.c: 46: {
 10033                           ;ht1621.c: 47: if((data&0x01)==0) do { LATC2 = 0; } while(0);
 10034  0A01  1876               	btfsc	SendDataBit_1621@data,0
 10035  0A02  2A06               	goto	l605
 10036  0A03  0022               	movlb	2	; select bank2
 10037  0A04  110E               	bcf	14,2	;volatile
 10038  0A05  2A08               	goto	l607
 10039  0A06                     l605:	
 10040                           ;ht1621.c: 48: else do { LATC2 = 1; } while(0);
 10041                           
 10042  0A06  0022               	movlb	2	; select bank2
 10043  0A07  150E               	bsf	14,2	;volatile
 10044  0A08                     l607:	
 10045                           ;ht1621.c: 49: do { LATC1 = 0; } while(0);
 10046                           
 10047  0A08  108E               	bcf	14,1	;volatile
 10048                           
 10049                           ;ht1621.c: 50: _delay((unsigned long)((1)*(16000000/4000.0)));
 10050  0A09  3006               	movlw	6
 10051  0A0A  00F5               	movwf	??_SendDataBit_1621+1
 10052  0A0B  3030               	movlw	48
 10053  0A0C  00F4               	movwf	??_SendDataBit_1621
 10054  0A0D                     u5317:	
 10055  0A0D  0BF4               	decfsz	??_SendDataBit_1621,f
 10056  0A0E  2A0D               	goto	u5317
 10057  0A0F  0BF5               	decfsz	??_SendDataBit_1621+1,f
 10058  0A10  2A0D               	goto	u5317
 10059  0A11  0000               	nop
 10060                           
 10061                           ;ht1621.c: 51: do { LATC1 = 1; } while(0);
 10062  0A12  0022               	movlb	2	; select bank2
 10063  0A13  148E               	bsf	14,1	;volatile
 10064                           
 10065                           ;ht1621.c: 52: data>>=1;
 10066  0A14  1003               	clrc
 10067  0A15  0CF6               	rrf	SendDataBit_1621@data,f
 10068  0A16  3001               	movlw	1
 10069  0A17  00F4               	movwf	??_SendDataBit_1621
 10070  0A18  0874               	movf	??_SendDataBit_1621,w
 10071  0A19  07F7               	addwf	SendDataBit_1621@i,f
 10072  0A1A  29FD               	goto	l4529
 10073  0A1B                     __end_of_SendDataBit_1621:	
 10074                           
 10075                           	psect	text50
 10076  17FA                     __ptext50:	
 10077 ;; *************** function _Set_start_flag *****************
 10078 ;; Defined at:
 10079 ;;		line 18 in file "mcc_generated_files/save.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		None
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;Total ram usage:        0 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    3
 10100 ;; This function calls:
 10101 ;;		Nothing
 10102 ;; This function is called by:
 10103 ;;		_Key_Process
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           
 10108                           ;psect for function _Set_start_flag
 10109  17FA                     _Set_start_flag:	
 10110                           
 10111                           ;save.c: 20: Record_flag = 1;
 10112                           
 10113                           ;incstack = 0
 10114                           ; Regs used in _Set_start_flag: []
 10115  17FA  0020               	movlb	0	; select bank0
 10116  17FB  01EB               	clrf	_Record_flag
 10117  17FC  0AEB               	incf	_Record_flag,f
 10118                           
 10119                           ;save.c: 21: do { LATA4 = 0; } while(0);
 10120  17FD  0022               	movlb	2	; select bank2
 10121  17FE  120C               	bcf	12,4	;volatile
 10122  17FF  0008               	return
 10123  1800                     __end_of_Set_start_flag:	
 10124                           
 10125                           	psect	text51
 10126  17EA                     __ptext51:	
 10127 ;; *************** function _Set_finish_flag *****************
 10128 ;; Defined at:
 10129 ;;		line 30 in file "mcc_generated_files/save.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;		None
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		status,2
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;Total ram usage:        0 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    3
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_Key_Process
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _Set_finish_flag
 10159  17EA                     _Set_finish_flag:	
 10160                           
 10161                           ;save.c: 32: Record_flag = 0;
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _Set_finish_flag: [status,2]
 10165  17EA  0020               	movlb	0	; select bank0
 10166  17EB  01EB               	clrf	_Record_flag
 10167                           
 10168                           ;save.c: 33: do { LATA4 = 1; } while(0);
 10169  17EC  0022               	movlb	2	; select bank2
 10170  17ED  160C               	bsf	12,4	;volatile
 10171  17EE  0008               	return
 10172  17EF                     __end_of_Set_finish_flag:	
 10173                           
 10174                           	psect	text52
 10175  08BB                     __ptext52:	
 10176 ;; *************** function _SendCmd_1621 *****************
 10177 ;; Defined at:
 10178 ;;		line 62 in file "mcc_generated_files/ht1621.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  command         1    wreg     unsigned char 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  command         1    1[BANK0 ] unsigned char 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, status,2, status,0, pclath, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;Total ram usage:        2 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    4
 10199 ;; This function calls:
 10200 ;;		_SendBit_1621
 10201 ;; This function is called by:
 10202 ;;		_main
 10203 ;;		_Key_Process
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           
 10208                           ;psect for function _SendCmd_1621
 10209  08BB                     _SendCmd_1621:	
 10210                           
 10211                           ;incstack = 0
 10212                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
 10213                           ;SendCmd_1621@command stored from wreg
 10214  08BB  0020               	movlb	0	; select bank0
 10215  08BC  00A1               	movwf	SendCmd_1621@command
 10216                           
 10217                           ;ht1621.c: 64: do { LATC0 = 0; } while(0);
 10218  08BD  0022               	movlb	2	; select bank2
 10219  08BE  100E               	bcf	14,0	;volatile
 10220                           
 10221                           ;ht1621.c: 65: SendBit_1621(0x80,4);
 10222  08BF  3004               	movlw	4
 10223  08C0  0020               	movlb	0	; select bank0
 10224  08C1  00A0               	movwf	??_SendCmd_1621
 10225  08C2  0820               	movf	??_SendCmd_1621,w
 10226  08C3  00F3               	movwf	SendBit_1621@cnt
 10227  08C4  3080               	movlw	128
 10228  08C5  3189  21DB  3188   	fcall	_SendBit_1621
 10229                           
 10230                           ;ht1621.c: 66: SendBit_1621(command,8);
 10231  08C8  3008               	movlw	8
 10232  08C9  0020               	movlb	0	; select bank0
 10233  08CA  00A0               	movwf	??_SendCmd_1621
 10234  08CB  0820               	movf	??_SendCmd_1621,w
 10235  08CC  00F3               	movwf	SendBit_1621@cnt
 10236  08CD  0821               	movf	SendCmd_1621@command,w
 10237  08CE  3189  21DB         	fcall	_SendBit_1621
 10238                           
 10239                           ;ht1621.c: 67: do { LATC0 = 1; } while(0);
 10240  08D0  0022               	movlb	2	; select bank2
 10241  08D1  140E               	bsf	14,0	;volatile
 10242  08D2  0008               	return
 10243  08D3                     __end_of_SendCmd_1621:	
 10244                           
 10245                           	psect	text53
 10246  09DB                     __ptext53:	
 10247 ;; *************** function _SendBit_1621 *****************
 10248 ;; Defined at:
 10249 ;;		line 22 in file "mcc_generated_files/ht1621.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  data            1    wreg     unsigned char 
 10252 ;;  cnt             1    3[COMMON] unsigned char 
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;  data            1    6[COMMON] unsigned char 
 10255 ;;  i               1    7[COMMON] unsigned char 
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, status,2, status,0
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10265 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;Total ram usage:        5 bytes
 10270 ;; Hardware stack levels used:    1
 10271 ;; Hardware stack levels required when called:    3
 10272 ;; This function calls:
 10273 ;;		Nothing
 10274 ;; This function is called by:
 10275 ;;		_SendCmd_1621
 10276 ;;		_WriteAll_1621
 10277 ;;		_Write_1621
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           
 10282                           ;psect for function _SendBit_1621
 10283  09DB                     _SendBit_1621:	
 10284                           
 10285                           ;incstack = 0
 10286                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
 10287                           ;SendBit_1621@data stored from wreg
 10288  09DB  00F6               	movwf	SendBit_1621@data
 10289                           
 10290                           ;ht1621.c: 24: unsigned char i;
 10291                           ;ht1621.c: 25: for(i =0; i <cnt; i ++)
 10292  09DC  01F7               	clrf	SendBit_1621@i
 10293  09DD                     l4517:	
 10294  09DD  0873               	movf	SendBit_1621@cnt,w
 10295  09DE  0277               	subwf	SendBit_1621@i,w
 10296  09DF  1803               	btfsc	3,0
 10297  09E0  0008               	return
 10298                           
 10299                           ;ht1621.c: 26: {
 10300                           ;ht1621.c: 27: if((data&0x80)==0) do { LATC2 = 0; } while(0);
 10301  09E1  1BF6               	btfsc	SendBit_1621@data,7
 10302  09E2  29E6               	goto	l589
 10303  09E3  0022               	movlb	2	; select bank2
 10304  09E4  110E               	bcf	14,2	;volatile
 10305  09E5  29E8               	goto	l591
 10306  09E6                     l589:	
 10307                           ;ht1621.c: 28: else do { LATC2 = 1; } while(0);
 10308                           
 10309  09E6  0022               	movlb	2	; select bank2
 10310  09E7  150E               	bsf	14,2	;volatile
 10311  09E8                     l591:	
 10312                           ;ht1621.c: 29: do { LATC1 = 0; } while(0);
 10313                           
 10314  09E8  108E               	bcf	14,1	;volatile
 10315                           
 10316                           ;ht1621.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 10317  09E9  3006               	movlw	6
 10318  09EA  00F5               	movwf	??_SendBit_1621+1
 10319  09EB  3030               	movlw	48
 10320  09EC  00F4               	movwf	??_SendBit_1621
 10321  09ED                     u5327:	
 10322  09ED  0BF4               	decfsz	??_SendBit_1621,f
 10323  09EE  29ED               	goto	u5327
 10324  09EF  0BF5               	decfsz	??_SendBit_1621+1,f
 10325  09F0  29ED               	goto	u5327
 10326  09F1  0000               	nop
 10327                           
 10328                           ;ht1621.c: 31: do { LATC1 = 1; } while(0);
 10329  09F2  0022               	movlb	2	; select bank2
 10330  09F3  148E               	bsf	14,1	;volatile
 10331                           
 10332                           ;ht1621.c: 32: data<<=1;
 10333  09F4  1003               	clrc
 10334  09F5  0DF6               	rlf	SendBit_1621@data,f
 10335  09F6  3001               	movlw	1
 10336  09F7  00F4               	movwf	??_SendBit_1621
 10337  09F8  0874               	movf	??_SendBit_1621,w
 10338  09F9  07F7               	addwf	SendBit_1621@i,f
 10339  09FA  29DD               	goto	l4517
 10340  09FB                     __end_of_SendBit_1621:	
 10341                           
 10342                           	psect	text54
 10343  0A3D                     __ptext54:	
 10344 ;; *************** function _Key_Scan *****************
 10345 ;; Defined at:
 10346 ;;		line 20 in file "mcc_generated_files/key.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  Key_val         1    5[COMMON] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      unsigned char 
 10353 ;; Registers used:
 10354 ;;		wreg
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:        3 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    3
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_Key_Process
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           
 10375                           ;psect for function _Key_Scan
 10376  0A3D                     _Key_Scan:	
 10377                           
 10378                           ;key.c: 22: unsigned char Key_val=0xff;
 10379                           
 10380                           ;incstack = 0
 10381                           ; Regs used in _Key_Scan: [wreg]
 10382  0A3D  30FF               	movlw	255
 10383  0A3E  00F3               	movwf	??_Key_Scan
 10384  0A3F  0873               	movf	??_Key_Scan,w
 10385  0A40  00F5               	movwf	Key_Scan@Key_val
 10386                           
 10387                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
 10388  0A41  0020               	movlb	0	; select bank0
 10389  0A42  1F8C               	btfss	12,7	;volatile
 10390  0A43  2A46               	goto	l5205
 10391  0A44  1A8D               	btfsc	13,5	;volatile
 10392  0A45  2A5E               	goto	l820
 10393  0A46                     l5205:	
 10394                           
 10395                           ;key.c: 24: {
 10396                           ;key.c: 25: _delay((unsigned long)((10)*(16000000/4000.0)));
 10397  0A46  3034               	movlw	52
 10398  0A47  00F4               	movwf	??_Key_Scan+1
 10399  0A48  30F1               	movlw	241
 10400  0A49  00F3               	movwf	??_Key_Scan
 10401  0A4A                     u5337:	
 10402  0A4A  0BF3               	decfsz	??_Key_Scan,f
 10403  0A4B  2A4A               	goto	u5337
 10404  0A4C  0BF4               	decfsz	??_Key_Scan+1,f
 10405  0A4D  2A4A               	goto	u5337
 10406  0A4E  3200               	nop2
 10407                           
 10408                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
 10409  0A4F  0020               	movlb	0	; select bank0
 10410  0A50  1F8C               	btfss	12,7	;volatile
 10411  0A51  2A54               	goto	l825
 10412  0A52  1A8D               	btfsc	13,5	;volatile
 10413  0A53  2A5E               	goto	l820
 10414  0A54                     l825:	
 10415                           
 10416                           ;key.c: 27: {
 10417                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10418  0A54  1A8D               	btfsc	13,5	;volatile
 10419  0A55  2A58               	goto	l826
 10420  0A56  01F5               	clrf	Key_Scan@Key_val
 10421  0A57  0AF5               	incf	Key_Scan@Key_val,f
 10422  0A58                     l826:	
 10423                           
 10424                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10425  0A58  1B8C               	btfsc	12,7	;volatile
 10426  0A59  2A5E               	goto	l820
 10427  0A5A  3002               	movlw	2
 10428  0A5B  00F3               	movwf	??_Key_Scan
 10429  0A5C  0873               	movf	??_Key_Scan,w
 10430  0A5D  00F5               	movwf	Key_Scan@Key_val
 10431  0A5E                     l820:	
 10432                           
 10433                           ;key.c: 30: }
 10434                           ;key.c: 31: }
 10435                           ;key.c: 32: return Key_val;
 10436  0A5E  0875               	movf	Key_Scan@Key_val,w
 10437  0A5F  0008               	return
 10438  0A60                     __end_of_Key_Scan:	
 10439                           
 10440                           	psect	text55
 10441  0813                     __ptext55:	
 10442 ;; *************** function _EUSART_Write *****************
 10443 ;; Defined at:
 10444 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  txData          1    wreg     unsigned char 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  txData          1    3[COMMON] unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      void 
 10451 ;; Registers used:
 10452 ;;		wreg
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;Total ram usage:        1 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    3
 10465 ;; This function calls:
 10466 ;;		Nothing
 10467 ;; This function is called by:
 10468 ;;		_Key_Process
 10469 ;;		_EUSART_SendString
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           
 10474                           ;psect for function _EUSART_Write
 10475  0813                     _EUSART_Write:	
 10476                           
 10477                           ;incstack = 0
 10478                           ; Regs used in _EUSART_Write: [wreg]
 10479                           ;EUSART_Write@txData stored from wreg
 10480  0813  00F3               	movwf	EUSART_Write@txData
 10481  0814                     l129:	
 10482                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10483                           
 10484  0814  0020               	movlb	0	; select bank0
 10485  0815  1E11               	btfss	17,4	;volatile
 10486  0816  2814               	goto	l129
 10487                           
 10488                           ;eusart.c: 93: }
 10489                           ;eusart.c: 95: TXREG = txData;
 10490  0817  0873               	movf	EUSART_Write@txData,w
 10491  0818  0023               	movlb	3	; select bank3
 10492  0819  009A               	movwf	26	;volatile
 10493  081A  0008               	return
 10494  081B                     __end_of_EUSART_Write:	
 10495                           
 10496                           	psect	text56
 10497  096B                     __ptext56:	
 10498 ;; *************** function _Bq32k_Time_Init *****************
 10499 ;; Defined at:
 10500 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10505 ;;  time            7    0        struct bq32k_regs
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;Total ram usage:       12 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    5
 10522 ;; This function calls:
 10523 ;;		_I2C_Send_Buffer
 10524 ;; This function is called by:
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _Bq32k_Time_Init
 10531  096B                     _Bq32k_Time_Init:	
 10532                           
 10533                           ;bq32k.c: 19: bq32k_t time;
 10534                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x50,0x23,0x02,0x08,0x07,0x16 };
 10535                           
 10536                           ;incstack = 0
 10537                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10538  096B  30E5               	movlw	low Bq32k_Time_Init@F2018
 10539  096C  0086               	movwf	6
 10540  096D  3000               	movlw	high Bq32k_Time_Init@F2018
 10541  096E  0087               	movwf	7
 10542  096F  3027               	movlw	low Bq32k_Time_Init@temp
 10543  0970  0084               	movwf	4
 10544  0971  3000               	movlw	high Bq32k_Time_Init@temp
 10545  0972  0085               	movwf	5
 10546  0973  300A               	movlw	10
 10547  0974  0020               	movlb	0	; select bank0
 10548  0975  00A5               	movwf	??_Bq32k_Time_Init
 10549  0976                     u4830:	
 10550  0976  0016               	moviw fsr1++
 10551  0977  001A               	movwi fsr0++
 10552  0978  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10553  0979  2976               	goto	u4830
 10554                           
 10555                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10556  097A  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10557  097B  00A5               	movwf	??_Bq32k_Time_Init
 10558  097C  0825               	movf	??_Bq32k_Time_Init,w
 10559  097D  00F6               	movwf	I2C_Send_Buffer@buff
 10560  097E  3007               	movlw	7
 10561  097F  00A6               	movwf	??_Bq32k_Time_Init+1
 10562  0980  0826               	movf	??_Bq32k_Time_Init+1,w
 10563  0981  00F7               	movwf	I2C_Send_Buffer@Length
 10564  0982  3000               	movlw	0
 10565  0983  318C  2445         	fcall	_I2C_Send_Buffer
 10566  0985  0008               	return
 10567  0986                     __end_of_Bq32k_Time_Init:	
 10568                           
 10569                           	psect	text57
 10570  0C45                     __ptext57:	
 10571 ;; *************** function _I2C_Send_Buffer *****************
 10572 ;; Defined at:
 10573 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  ADD             1    wreg     unsigned char 
 10576 ;;  buff            1    6[COMMON] PTR unsigned char 
 10577 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10578 ;;  Length          1    7[COMMON] unsigned char 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  ADD             1    2[BANK0 ] unsigned char 
 10581 ;;  Flag            1    4[BANK0 ] unsigned char 
 10582 ;;  i               1    3[BANK0 ] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      unsigned char 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;Total ram usage:        7 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    4
 10599 ;; This function calls:
 10600 ;;		_I2C_Send_Byte
 10601 ;;		_I2C_Start
 10602 ;;		_I2C_Stop
 10603 ;; This function is called by:
 10604 ;;		_Bq32k_Time_Init
 10605 ;;		_Bq32k_Rtc_Write_Time
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function _I2C_Send_Buffer
 10611  0C45                     _I2C_Send_Buffer:	
 10612                           
 10613                           ;incstack = 0
 10614                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10615                           ;I2C_Send_Buffer@ADD stored from wreg
 10616  0C45  0020               	movlb	0	; select bank0
 10617  0C46  00A2               	movwf	I2C_Send_Buffer@ADD
 10618                           
 10619                           ;i2c.c: 175: unsigned char Flag=1;
 10620  0C47  01A4               	clrf	I2C_Send_Buffer@Flag
 10621  0C48  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10622                           
 10623                           ;i2c.c: 176: unsigned char i;
 10624                           ;i2c.c: 178: I2C_Start();
 10625  0C49  3188  20EB  318C   	fcall	_I2C_Start
 10626                           
 10627                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10628  0C4C  30D0               	movlw	208
 10629  0C4D  318D  2592  318C   	fcall	_I2C_Send_Byte
 10630  0C50  0020               	movlb	0	; select bank0
 10631  0C51  00A0               	movwf	??_I2C_Send_Buffer
 10632  0C52  0820               	movf	??_I2C_Send_Buffer,w
 10633  0C53  00A4               	movwf	I2C_Send_Buffer@Flag
 10634                           
 10635                           ;i2c.c: 181: if(Flag)
 10636  0C54  0824               	movf	I2C_Send_Buffer@Flag,w
 10637  0C55  1D03               	btfss	3,2
 10638  0C56  0008               	return
 10639                           
 10640                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10641                           
 10642                           ;i2c.c: 182: return 0x01;
 10643                           ;	Return value of _I2C_Send_Buffer is never used
 10644  0C57  0822               	movf	I2C_Send_Buffer@ADD,w
 10645  0C58  318D  2592  318C   	fcall	_I2C_Send_Byte
 10646  0C5B  0020               	movlb	0	; select bank0
 10647  0C5C  00A0               	movwf	??_I2C_Send_Buffer
 10648  0C5D  0820               	movf	??_I2C_Send_Buffer,w
 10649  0C5E  00A4               	movwf	I2C_Send_Buffer@Flag
 10650                           
 10651                           ;i2c.c: 185: if(Flag)
 10652  0C5F  0824               	movf	I2C_Send_Buffer@Flag,w
 10653  0C60  1D03               	btfss	3,2
 10654  0C61  0008               	return
 10655                           
 10656                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10657                           
 10658                           ;i2c.c: 186: return 0x01;
 10659                           ;	Return value of _I2C_Send_Buffer is never used
 10660  0C62  01A3               	clrf	I2C_Send_Buffer@i
 10661  0C63                     l5193:	
 10662  0C63  0877               	movf	I2C_Send_Buffer@Length,w
 10663  0C64  0223               	subwf	I2C_Send_Buffer@i,w
 10664  0C65  1803               	btfsc	3,0
 10665  0C66  2C7D               	goto	l5195
 10666                           
 10667                           ;i2c.c: 189: {
 10668                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10669  0C67  0823               	movf	I2C_Send_Buffer@i,w
 10670  0C68  0776               	addwf	I2C_Send_Buffer@buff,w
 10671  0C69  00A0               	movwf	??_I2C_Send_Buffer
 10672  0C6A  0820               	movf	??_I2C_Send_Buffer,w
 10673  0C6B  0086               	movwf	6
 10674  0C6C  0187               	clrf	7
 10675  0C6D  0801               	movf	1,w
 10676  0C6E  318D  2592  318C   	fcall	_I2C_Send_Byte
 10677  0C71  0020               	movlb	0	; select bank0
 10678  0C72  00A1               	movwf	??_I2C_Send_Buffer+1
 10679  0C73  0821               	movf	??_I2C_Send_Buffer+1,w
 10680  0C74  00A4               	movwf	I2C_Send_Buffer@Flag
 10681                           
 10682                           ;i2c.c: 191: if(Flag)
 10683  0C75  0824               	movf	I2C_Send_Buffer@Flag,w
 10684  0C76  1D03               	btfss	3,2
 10685  0C77  0008               	return
 10686                           
 10687                           ;i2c.c: 192: return 0x01;
 10688                           ;	Return value of _I2C_Send_Buffer is never used
 10689  0C78  3001               	movlw	1
 10690  0C79  00A0               	movwf	??_I2C_Send_Buffer
 10691  0C7A  0820               	movf	??_I2C_Send_Buffer,w
 10692  0C7B  07A3               	addwf	I2C_Send_Buffer@i,f
 10693  0C7C  2C63               	goto	l5193
 10694  0C7D                     l5195:	
 10695                           
 10696                           ;i2c.c: 193: }
 10697                           ;i2c.c: 194: I2C_Stop();
 10698  0C7D  3189  2104         	fcall	_I2C_Stop
 10699  0C7F  0008               	return
 10700  0C80                     __end_of_I2C_Send_Buffer:	
 10701                           ;i2c.c: 195: return 0x00;
 10702                           ;	Return value of _I2C_Send_Buffer is never used
 10703                           
 10704                           
 10705                           	psect	text58
 10706  0904                     __ptext58:	
 10707 ;; *************** function _I2C_Stop *****************
 10708 ;; Defined at:
 10709 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;		None
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      void 
 10716 ;; Registers used:
 10717 ;;		wreg
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;Total ram usage:        1 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    3
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_I2C_Read_Buffer
 10734 ;;		_I2C_Send_Buffer
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           
 10739                           ;psect for function _I2C_Stop
 10740  0904                     _I2C_Stop:	
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _I2C_Stop: [wreg]
 10744                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10745  0904  0022               	movlb	2	; select bank2
 10746  0905  100D               	bcf	13,0	;volatile
 10747                           
 10748                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10749  0906  300D               	movlw	13
 10750  0907  00F3               	movwf	??_I2C_Stop
 10751  0908                     u5347:	
 10752  0908  0BF3               	decfsz	??_I2C_Stop,f
 10753  0909  2908               	goto	u5347
 10754                           
 10755                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10756  090A  0022               	movlb	2	; select bank2
 10757  090B  108D               	bcf	13,1	;volatile
 10758                           
 10759                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10760  090C  300D               	movlw	13
 10761  090D  00F3               	movwf	??_I2C_Stop
 10762  090E                     u5357:	
 10763  090E  0BF3               	decfsz	??_I2C_Stop,f
 10764  090F  290E               	goto	u5357
 10765                           
 10766                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10767  0910  0022               	movlb	2	; select bank2
 10768  0911  140D               	bsf	13,0	;volatile
 10769                           
 10770                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10771  0912  300D               	movlw	13
 10772  0913  00F3               	movwf	??_I2C_Stop
 10773  0914                     u5367:	
 10774  0914  0BF3               	decfsz	??_I2C_Stop,f
 10775  0915  2914               	goto	u5367
 10776                           
 10777                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10778  0916  0022               	movlb	2	; select bank2
 10779  0917  148D               	bsf	13,1	;volatile
 10780                           
 10781                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10782  0918  300D               	movlw	13
 10783  0919  00F3               	movwf	??_I2C_Stop
 10784  091A                     u5377:	
 10785  091A  0BF3               	decfsz	??_I2C_Stop,f
 10786  091B  291A               	goto	u5377
 10787  091C  0008               	return
 10788  091D                     __end_of_I2C_Stop:	
 10789                           
 10790                           	psect	text59
 10791  08EB                     __ptext59:	
 10792 ;; *************** function _I2C_Start *****************
 10793 ;; Defined at:
 10794 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;		None
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;		None
 10799 ;; Return value:  Size  Location     Type
 10800 ;;                  1    wreg      void 
 10801 ;; Registers used:
 10802 ;;		wreg
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;Total ram usage:        1 bytes
 10813 ;; Hardware stack levels used:    1
 10814 ;; Hardware stack levels required when called:    3
 10815 ;; This function calls:
 10816 ;;		Nothing
 10817 ;; This function is called by:
 10818 ;;		_I2C_Read_Buffer
 10819 ;;		_I2C_Send_Buffer
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function _I2C_Start
 10825  08EB                     _I2C_Start:	
 10826                           
 10827                           ;incstack = 0
 10828                           ; Regs used in _I2C_Start: [wreg]
 10829                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10830  08EB  0022               	movlb	2	; select bank2
 10831  08EC  148D               	bsf	13,1	;volatile
 10832                           
 10833                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10834  08ED  300D               	movlw	13
 10835  08EE  00F3               	movwf	??_I2C_Start
 10836  08EF                     u5387:	
 10837  08EF  0BF3               	decfsz	??_I2C_Start,f
 10838  08F0  28EF               	goto	u5387
 10839                           
 10840                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10841  08F1  0022               	movlb	2	; select bank2
 10842  08F2  140D               	bsf	13,0	;volatile
 10843                           
 10844                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10845  08F3  300D               	movlw	13
 10846  08F4  00F3               	movwf	??_I2C_Start
 10847  08F5                     u5397:	
 10848  08F5  0BF3               	decfsz	??_I2C_Start,f
 10849  08F6  28F5               	goto	u5397
 10850                           
 10851                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10852  08F7  0022               	movlb	2	; select bank2
 10853  08F8  108D               	bcf	13,1	;volatile
 10854                           
 10855                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10856  08F9  300D               	movlw	13
 10857  08FA  00F3               	movwf	??_I2C_Start
 10858  08FB                     u5407:	
 10859  08FB  0BF3               	decfsz	??_I2C_Start,f
 10860  08FC  28FB               	goto	u5407
 10861                           
 10862                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10863  08FD  0022               	movlb	2	; select bank2
 10864  08FE  100D               	bcf	13,0	;volatile
 10865                           
 10866                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10867  08FF  300D               	movlw	13
 10868  0900  00F3               	movwf	??_I2C_Start
 10869  0901                     u5417:	
 10870  0901  0BF3               	decfsz	??_I2C_Start,f
 10871  0902  2901               	goto	u5417
 10872  0903  0008               	return
 10873  0904                     __end_of_I2C_Start:	
 10874                           
 10875                           	psect	text60
 10876  0D92                     __ptext60:	
 10877 ;; *************** function _I2C_Send_Byte *****************
 10878 ;; Defined at:
 10879 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  Data            1    wreg     unsigned char 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  Data            1    4[COMMON] unsigned char 
 10884 ;;  i               1    5[COMMON] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      unsigned char 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;Total ram usage:        3 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    3
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_I2C_Read_Buffer
 10905 ;;		_I2C_Send_Buffer
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           
 10910                           ;psect for function _I2C_Send_Byte
 10911  0D92                     _I2C_Send_Byte:	
 10912                           
 10913                           ;incstack = 0
 10914                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 10915                           ;I2C_Send_Byte@Data stored from wreg
 10916  0D92  00F4               	movwf	I2C_Send_Byte@Data
 10917                           
 10918                           ;i2c.c: 36: unsigned char i;
 10919                           ;i2c.c: 37: for(i=0;i<8;i++)
 10920  0D93  01F5               	clrf	I2C_Send_Byte@i
 10921  0D94  3008               	movlw	8
 10922  0D95  0275               	subwf	I2C_Send_Byte@i,w
 10923  0D96  1803               	btfsc	3,0
 10924  0D97  2DB9               	goto	l701
 10925  0D98                     l689:	
 10926                           
 10927                           ;i2c.c: 38: {
 10928                           ;i2c.c: 39: if(Data&0x80)
 10929  0D98  1FF4               	btfss	I2C_Send_Byte@Data,7
 10930  0D99  2D9D               	goto	l695
 10931                           
 10932                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 10933  0D9A  0022               	movlb	2	; select bank2
 10934  0D9B  148D               	bsf	13,1	;volatile
 10935  0D9C  2D9F               	goto	l4333
 10936  0D9D                     l695:	
 10937                           ;i2c.c: 41: else
 10938                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 10939                           
 10940  0D9D  0022               	movlb	2	; select bank2
 10941  0D9E  108D               	bcf	13,1	;volatile
 10942  0D9F                     l4333:	
 10943                           
 10944                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10945  0D9F  300D               	movlw	13
 10946  0DA0  00F3               	movwf	??_I2C_Send_Byte
 10947  0DA1                     u5427:	
 10948  0DA1  0BF3               	decfsz	??_I2C_Send_Byte,f
 10949  0DA2  2DA1               	goto	u5427
 10950                           
 10951                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 10952  0DA3  0022               	movlb	2	; select bank2
 10953  0DA4  140D               	bsf	13,0	;volatile
 10954                           
 10955                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10956  0DA5  300D               	movlw	13
 10957  0DA6  00F3               	movwf	??_I2C_Send_Byte
 10958  0DA7                     u5437:	
 10959  0DA7  0BF3               	decfsz	??_I2C_Send_Byte,f
 10960  0DA8  2DA7               	goto	u5437
 10961                           
 10962                           ;i2c.c: 46: Data<<=1;
 10963  0DA9  1003               	clrc
 10964  0DAA  0DF4               	rlf	I2C_Send_Byte@Data,f
 10965                           
 10966                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 10967  0DAB  0022               	movlb	2	; select bank2
 10968  0DAC  100D               	bcf	13,0	;volatile
 10969                           
 10970                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10971  0DAD  300D               	movlw	13
 10972  0DAE  00F3               	movwf	??_I2C_Send_Byte
 10973  0DAF                     u5447:	
 10974  0DAF  0BF3               	decfsz	??_I2C_Send_Byte,f
 10975  0DB0  2DAF               	goto	u5447
 10976  0DB1  3001               	movlw	1
 10977  0DB2  00F3               	movwf	??_I2C_Send_Byte
 10978  0DB3  0873               	movf	??_I2C_Send_Byte,w
 10979  0DB4  07F5               	addwf	I2C_Send_Byte@i,f
 10980  0DB5  3008               	movlw	8
 10981  0DB6  0275               	subwf	I2C_Send_Byte@i,w
 10982  0DB7  1C03               	skipc
 10983  0DB8  2D98               	goto	l689
 10984  0DB9                     l701:	
 10985                           ;i2c.c: 49: }
 10986                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 10987                           
 10988  0DB9  0022               	movlb	2	; select bank2
 10989  0DBA  148D               	bsf	13,1	;volatile
 10990                           
 10991                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10992  0DBB  300D               	movlw	13
 10993  0DBC  00F3               	movwf	??_I2C_Send_Byte
 10994  0DBD                     u5457:	
 10995  0DBD  0BF3               	decfsz	??_I2C_Send_Byte,f
 10996  0DBE  2DBD               	goto	u5457
 10997                           
 10998                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 10999  0DBF  0022               	movlb	2	; select bank2
 11000  0DC0  140D               	bsf	13,0	;volatile
 11001                           
 11002                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11003  0DC1  300D               	movlw	13
 11004  0DC2  00F3               	movwf	??_I2C_Send_Byte
 11005  0DC3                     u5467:	
 11006  0DC3  0BF3               	decfsz	??_I2C_Send_Byte,f
 11007  0DC4  2DC3               	goto	u5467
 11008                           
 11009                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 11010  0DC5  0021               	movlb	1	; select bank1
 11011  0DC6  148D               	bsf	13,1	;volatile
 11012                           
 11013                           ;i2c.c: 55: if(RB1)
 11014  0DC7  0020               	movlb	0	; select bank0
 11015  0DC8  1C8D               	btfss	13,1	;volatile
 11016  0DC9  2DCE               	goto	l711
 11017                           
 11018                           ;i2c.c: 56: {
 11019                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 11020  0DCA  0021               	movlb	1	; select bank1
 11021  0DCB  108D               	bcf	13,1	;volatile
 11022                           
 11023                           ;i2c.c: 58: return 0x01;
 11024  0DCC  3001               	movlw	1
 11025  0DCD  0008               	return
 11026  0DCE                     l711:	
 11027                           ;i2c.c: 59: }
 11028                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 11029                           
 11030  0DCE  0021               	movlb	1	; select bank1
 11031  0DCF  108D               	bcf	13,1	;volatile
 11032                           
 11033                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 11034  0DD0  0022               	movlb	2	; select bank2
 11035  0DD1  100D               	bcf	13,0	;volatile
 11036                           
 11037                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11038  0DD2  300D               	movlw	13
 11039  0DD3  00F3               	movwf	??_I2C_Send_Byte
 11040  0DD4                     u5477:	
 11041  0DD4  0BF3               	decfsz	??_I2C_Send_Byte,f
 11042  0DD5  2DD4               	goto	u5477
 11043                           
 11044                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 11045  0DD6  0022               	movlb	2	; select bank2
 11046  0DD7  108D               	bcf	13,1	;volatile
 11047                           
 11048                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11049  0DD8  300D               	movlw	13
 11050  0DD9  00F3               	movwf	??_I2C_Send_Byte
 11051  0DDA                     u5487:	
 11052  0DDA  0BF3               	decfsz	??_I2C_Send_Byte,f
 11053  0DDB  2DDA               	goto	u5487
 11054                           
 11055                           ;i2c.c: 65: return 0x00;
 11056  0DDC  3000               	movlw	0
 11057  0DDD  0008               	return
 11058  0DDE                     __end_of_I2C_Send_Byte:	
 11059                           
 11060                           	psect	text61
 11061  0936                     __ptext61:	
 11062 ;; *************** function _ADC_GetConversion *****************
 11063 ;; Defined at:
 11064 ;;		line 106 in file "mcc_generated_files/adc.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  channel         1    wreg     enum E1850
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  channel         1    6[COMMON] enum E1850
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  2    3[COMMON] unsigned int 
 11071 ;; Registers used:
 11072 ;;		wreg, status,2, status,0
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;Total ram usage:        4 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    3
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_main
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           
 11093                           ;psect for function _ADC_GetConversion
 11094  0936                     _ADC_GetConversion:	
 11095                           
 11096                           ;incstack = 0
 11097                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11098                           ;ADC_GetConversion@channel stored from wreg
 11099  0936  00F6               	movwf	ADC_GetConversion@channel
 11100                           
 11101                           ;adc.c: 108: ADCON0bits.CHS = channel;
 11102  0937  0876               	movf	ADC_GetConversion@channel,w
 11103  0938  00F5               	movwf	??_ADC_GetConversion
 11104  0939  0DF5               	rlf	??_ADC_GetConversion,f
 11105  093A  0DF5               	rlf	??_ADC_GetConversion,f
 11106  093B  0021               	movlb	1	; select bank1
 11107  093C  081D               	movf	29,w	;volatile
 11108  093D  0675               	xorwf	??_ADC_GetConversion,w
 11109  093E  3983               	andlw	-125
 11110  093F  0675               	xorwf	??_ADC_GetConversion,w
 11111  0940  009D               	movwf	29	;volatile
 11112                           
 11113                           ;adc.c: 111: ADCON0bits.ADON = 1;
 11114  0941  141D               	bsf	29,0	;volatile
 11115                           
 11116                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
 11117  0942  3006               	movlw	6
 11118  0943  00F5               	movwf	??_ADC_GetConversion
 11119  0944                     u5497:	
 11120  0944  0BF5               	decfsz	??_ADC_GetConversion,f
 11121  0945  2944               	goto	u5497
 11122  0946  0000               	nop
 11123                           
 11124                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 11125  0947  0021               	movlb	1	; select bank1
 11126  0948  149D               	bsf	29,1	;volatile
 11127  0949                     l197:	
 11128                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 11129                           
 11130  0949  189D               	btfsc	29,1	;volatile
 11131  094A  2949               	goto	l197
 11132                           
 11133                           ;adc.c: 121: }
 11134                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 11135  094B  081C               	movf	28,w	;volatile
 11136  094C  00F4               	movwf	?_ADC_GetConversion+1
 11137  094D  081B               	movf	27,w	;volatile
 11138  094E  00F3               	movwf	?_ADC_GetConversion
 11139  094F  0008               	return
 11140  0950                     __end_of_ADC_GetConversion:	
 11141                           
 11142                           	psect	intentry
 11143  0004                     __pintentry:	
 11144 ;; *************** function _INTERRUPT_InterruptManager *****************
 11145 ;; Defined at:
 11146 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;		None
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;		None
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg, status,2, status,0, pclath, cstack
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;Total ram usage:        1 bytes
 11165 ;; Hardware stack levels used:    1
 11166 ;; Hardware stack levels required when called:    2
 11167 ;; This function calls:
 11168 ;;		_TMR0_ISR
 11169 ;; This function is called by:
 11170 ;;		Interrupt level 1
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174  0004                     _INTERRUPT_InterruptManager:	
 11175                           
 11176                           ;incstack = 0
 11177                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 11178  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11179  0005  3180               	pagesel	$
 11180  0006  0020               	movlb	0	; select bank0
 11181  0007  087F               	movf	127,w
 11182  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 11183                           
 11184                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 11185  0009  1A8B               	btfsc	11,5	;volatile
 11186  000A  1D0B               	btfss	11,2	;volatile
 11187  000B  280E               	goto	i1l1033
 11188                           
 11189                           ;interrupt_manager.c: 55: TMR0_ISR();
 11190  000C  3189  2150         	fcall	_TMR0_ISR
 11191  000E                     i1l1033:	
 11192                           ;interrupt_manager.c: 56: } else {
 11193                           
 11194  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 11195  000F  0020               	movlb	0	; select bank0
 11196  0010  00FF               	movwf	127
 11197  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11198  0012  0009               	retfie
 11199  0013                     __end_of_INTERRUPT_InterruptManager:	
 11200                           
 11201                           	psect	text63
 11202  0950                     __ptext63:	
 11203 ;; *************** function _TMR0_ISR *****************
 11204 ;; Defined at:
 11205 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;		None
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;		None
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  1    wreg      void 
 11212 ;; Registers used:
 11213 ;;		wreg, status,2, status,0, pclath, cstack
 11214 ;; Tracked objects:
 11215 ;;		On entry : 0/0
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;Total ram usage:        1 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:    1
 11226 ;; This function calls:
 11227 ;;		_TMR0_CallBack
 11228 ;; This function is called by:
 11229 ;;		_INTERRUPT_InterruptManager
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           
 11234                           ;psect for function _TMR0_ISR
 11235  0950                     _TMR0_ISR:	
 11236                           
 11237                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 11238                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 11239                           
 11240                           ;incstack = 0
 11241                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11242  0950  110B               	bcf	11,2	;volatile
 11243                           
 11244                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 11245  0951  0021               	movlb	1	; select bank1
 11246  0952  086F               	movf	_timer0ReloadVal^(0+128),w	;volatile
 11247  0953  0020               	movlb	0	; select bank0
 11248  0954  0095               	movwf	21	;volatile
 11249                           
 11250                           ;tmr0.c: 111: MAX31856Sec++;
 11251  0955  3001               	movlw	1
 11252  0956  00F1               	movwf	??_TMR0_ISR
 11253  0957  0871               	movf	??_TMR0_ISR,w
 11254  0958  0021               	movlb	1	; select bank1
 11255  0959  07B9               	addwf	_MAX31856Sec^(0+128),f
 11256                           
 11257                           ;tmr0.c: 114: if (++CountCallBack >= 100) {
 11258  095A  3001               	movlw	1
 11259  095B  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11260  095C  3000               	movlw	0
 11261  095D  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11262  095E  3000               	movlw	0
 11263  095F  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11264  0960  3064               	movlw	100
 11265  0961  1903               	skipnz
 11266  0962  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11267  0963  1C03               	skipc
 11268  0964  0008               	return
 11269                           
 11270                           ;tmr0.c: 116: TMR0_CallBack();
 11271  0965  3197  27F4         	fcall	_TMR0_CallBack
 11272                           
 11273                           ;tmr0.c: 119: CountCallBack = 0;
 11274  0967  0021               	movlb	1	; select bank1
 11275  0968  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11276  0969  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11277  096A  0008               	return
 11278  096B                     __end_of_TMR0_ISR:	
 11279                           
 11280                           	psect	text64
 11281  17F4                     __ptext64:	
 11282 ;; *************** function _TMR0_CallBack *****************
 11283 ;; Defined at:
 11284 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;Total ram usage:        1 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_TMR0_ISR
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           
 11312                           ;psect for function _TMR0_CallBack
 11313  17F4                     _TMR0_CallBack:	
 11314                           
 11315                           ;tmr0.c: 128: LongPressSec++;
 11316                           
 11317                           ;incstack = 0
 11318                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 11319  17F4  3001               	movlw	1
 11320  17F5  00F0               	movwf	??_TMR0_CallBack
 11321  17F6  0870               	movf	??_TMR0_CallBack,w
 11322  17F7  0021               	movlb	1	; select bank1
 11323  17F8  07B8               	addwf	_LongPressSec^(0+128),f
 11324  17F9  0008               	return
 11325  17FA                     __end_of_TMR0_CallBack:	
 11326  007E                     btemp	set	126	;btemp
 11327  007E                     int$flags	set	126
 11328  007E                     wtemp	set	126
 11329  007E                     wtemp0	set	126
 11330  0080                     wtemp1	set	128
 11331  0082                     wtemp2	set	130
 11332  0084                     wtemp3	set	132
 11333  0086                     wtemp4	set	134
 11334  0088                     wtemp5	set	136
 11335  007F                     wtemp6	set	127
 11336  007E                     ttemp	set	126
 11337  007E                     ttemp0	set	126
 11338  0081                     ttemp1	set	129
 11339  0084                     ttemp2	set	132
 11340  0087                     ttemp3	set	135
 11341  007F                     ttemp4	set	127
 11342  007E                     ltemp	set	126
 11343  007E                     ltemp0	set	126
 11344  0082                     ltemp1	set	130
 11345  0086                     ltemp2	set	134
 11346  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     69      78
    BANK1            80      0      80
    BANK2            80      5      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_Write_Flash_finish
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _Calculate_Time->_Write_Flash_finish
    _Calculate_Time->_Write_Flash_head
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Save_Write_time
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  117081
                                             66 BANK0      3     3      0
                                              0 BANK2      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    6     6      0    3534
                                             19 BANK0      6     6      0
                     _FLASH_ReadWord
                 _Write_Flash_finish
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0   19272
                                             47 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   51130
                                             60 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   38200
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   28488
                                             59 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                12    12      0   20051
                                             47 BANK0     12    12      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0   14754
                                             25 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_time
                 _Write_Flash_finish
                   _Write_Flash_head
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_head                                     1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_finish                                   1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Save_Write_time                                      3     3      0    5897
                                             23 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      4     2      2    4429
                                             19 BANK0      4     2      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2904
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_time
               _Bq32k_Rtc_Read_Time
                 _I2C_Read_Buffer
                   _I2C_Receive_Byte
                   _I2C_Send_Byte
                   _I2C_Start
                   _I2C_Stop
                 _bcd2bin
                   ___bmul
               _Save_Write_word
                 _FLASH_WriteWord
                   _FLASH_ReadWord
                   _FLASH_WriteBlock
                     _FLASH_EraseBlock
             _Write_Flash_finish
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             _Write_Flash_head
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_time
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
       _Write_Flash_finish
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       _Write_Flash_head
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           _Save_Write_time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_word
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
           _Write_Flash_finish
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           _Write_Flash_head
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jul 12 14:57:06 2016

                        __end_of_I2C_Send_Buffer 0C80                                   _SPI_Initialize 0801  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 0828                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 17EA  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00EF  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 0814                                              l501 0202  
                                            l166 07DD                                              l327 03CE  
                                            l336 03FE                                              l505 0D50  
                                            l329 03D0                                              l506 0D4F  
                                            l346 046E                                              l197 0949  
                                            l701 0DB9                                              l605 0A06  
                                            l711 0DCE                                              l607 0A08  
                                            l480 0191                                              l634 0BD7  
                                            l730 0A78                                              l490 0175  
                                            l546 0BA4                                              l820 0A5E  
                                            l644 04ED                                              l645 0514  
                                            l493 01C7                                              l478 00E4  
                                            l591 09E8                                              l496 01CF  
                                            l825 0A54                                              l826 0A58  
                                            l498 01FA                                              l835 060C  
                                            l589 09E6                                              l861 0682  
                                            l853 064E                                              l695 0D9D  
                                            l847 064A                                              l848 0649  
                                            l689 0D98                                              l865 0690  
                                            l970 0F25                                              l966 0EF4  
                                            _RB1 0069                                              _RB3 006B  
                       __end_of_maxim_31856_init 1000                                              _RB5 006D  
                                            _RA7 0067                                     ?_err_Display 0070  
                                   ___awmod@sign 0021                               _Write_Flash_finish 0AE3  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                                   __CFG_IESO$ON 0000                                 ?_FLASH_WriteWord 002A  
                         _maxim_start_conversion 07E6                   FLASH_WriteBlock@flashWordArray 0022  
                                   __CFG_LVP$OFF 0000                                             l1037 09C7  
                                           l5001 0D3B                                             l5005 0D43  
                                           l5015 0D58                                             l4303 07C8  
                                           l4401 0888                                             l5041 0C91  
                                           l5019 0D60                                             l4333 0D9F  
                                           l5205 0A46                                             l5053 0CA9  
                                           l5045 0C99                                             l4423 0CEC  
                                           l5151 0B81                                             l5303 0ECD  
                                           l4601 0BBD                                             l4417 0CCE  
                                           l5049 0CA1                                             l5161 0B8C  
                                           l5321 0615                                             l5305 0ECF  
                                           l4291 07A0                                             l5163 0B8F  
                                           l5139 0B73                                             l4517 09DD  
                                           l5149 0B7E                                             l5325 0622  
                                           l5317 060D                                             l4703 0C0A  
                                           l4383 0A88                                             l4551 09C0  
                                           l5167 0B92                                             l5335 064F  
                                           l5503 0470                                             l5193 0C63  
                                           l4529 09FD                                             l4721 0AD5  
                                           l4465 06BC                                             l5505 0473  
                                           l5441 03ED                                             l5195 0C7D  
                                           l4571 0DE7                                             l4715 0ABD  
                                           l4467 06E7                                             l5363 067A  
                                           l5339 0657                                             l5435 03D8  
                                           l4581 0E15                                             l4717 0AC9  
                                           l4725 0ADE                                             l4901 04B5  
                                           l4397 0882                                             l4493 0C2D  
                                           l4645 02E0                                             l5517 048A  
                                           l5445 0400                                             l4575 0DF6  
                                           l4911 0543                                             l4903 04D0  
                                           l4807 00FC                                             l5359 0673  
                                           l5391 0F07                                             l5295 0EBC  
                                           l5287 0EAA                                             l5519 048B  
                                           l4577 0E0B                                             l4905 0529  
                                           l4649 02E9                                             l4841 0150  
                                           l4833 012D                                             l4809 0101  
                                           l5369 0687                                             l4579 0E10  
                                           l4691 0BE3                                             l4915 054D  
                                           l4659 02F8                                             l4755 006C  
                                           l5491 0447                                             l4589 0E18  
                                           l4693 0BEF                                             l4909 0534  
                                           l4669 03A7                                             l4837 013C  
                                           l4781 009C                                             l4941 0E45  
                                           l4679 098C                                             l4951 0E4D  
                                           l4935 0E3A                                             l4785 00AB  
                                           l4953 0E59                                             l4699 0C01  
                                           l4859 018D                                             l4963 0E74  
                                           l4877 01D8                                             l4789 00BF  
                                           l4967 0E7C                                             l4959 0E6B  
                                           l4991 0D1A                                             l4983 0D14  
                                           l4993 0D26                                             l4979 0D0D  
                                           l4997 0D32                              ?_Write_Flash_finish 0070  
                                           _LATA 010C                                             _LATB 010D  
                                           _LATC 010E                                             u4005 0BF0  
                                           u4015 0BFA                                             u4025 0C02  
                                           u4130 0082                                             u4140 0083  
                                           u4055 0AC0                                             u4240 0113  
                                           u4305 0142                                             u4250 0114  
                                           u4075 0ACF                                             u3515 078C  
                                           u4085 0AD6                                             u3705 089D  
                                           u4505 0E64                                             u5307 0A7E  
                                           u4195 00B1                                             u4515 0E6C  
                                           u5227 03C1                                             u5317 0A0D  
                                           u5237 06CF                                             u3805 09C8  
                                           u4605 0D33                                             u5407 08FB  
                                           u5327 09ED                                             u5247 06D6  
                                           u3815 09CD                                             u5417 0901  
                                           u5337 0A4A                                             u5257 06DD  
                                           u5427 0DA1                                             u5347 0908  
                                           u5267 06F6                                             u4475 0E50  
                                           u5437 0DA7                                             u5357 090E  
                                           u5277 06FD                                             u4830 0976  
                                           u5447 0DAF                                             u5367 0914  
                                           u5287 0704                                             u4495 0E5A  
                                           u4575 0D1D                                             u5457 0DBD  
                                           u5377 091A                                             u5297 0A6E  
                                           u5467 0DC3                                             u5387 08EF  
                                           u4595 0D2C                                             u5477 0DD4  
                                           u5397 08F5                                             u5487 0DDA  
                                           u5497 0944                                             u3985 0BE6  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                          __size_of_Set_start_flag 0006  
                         __size_of_WriteAll_1621 0035                                    ??_Key_Process 005C  
                                           _main 03A9                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 091D                                ?_FLASH_WriteBlock 0020  
                                  __CFG_BOREN$ON 0000                                             ltemp 007E  
                            SendCmd_1621@command 0021                                             start 0013  
                                           ttemp 007E                                             wtemp 007E  
                                __end_of_Dis_TAB 1015                           __end_of_SPI_Initialize 0807  
                             ??_FLASH_WriteBlock 0023                                 ?_I2C_Read_Buffer 0076  
                              ___bmul@multiplier 0076                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 0163                   __end_of_SPI_Exchange8bitBuffer 0E2F  
                                time_Display@num 0033                             ??_Write_Flash_finish 0077  
                        __end_of_TMR0_Initialize 086F                                  ?_FVR_Initialize 0070  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 0005  
                  __end_of_OSCILLATOR_Initialize 17F4                                  __end_of_bcd2bin 08A6  
                                          ?_main 0070                                  __end_of___awdiv 0E81  
                                __end_of___awmod 0D48                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0C0F  
                                __end_of___lwmod 0AE3                                  ___awdiv@counter 0020  
                                          _RCREG 0199                                            _RCSTA 019D  
                                     _Flash_buff 0120                                            u392m0 02D9  
                                          u377m0 0716                                            u378m0 0723  
                                          u395m0 03A0                          ??_one_temperature_trans 0028  
                              ?_SendDataBit_1621 0073                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TXREG 019A                                            _TXSTA 019E  
                               __end_of_TMR0_ISR 096B                               ??_SendDataBit_1621 0074  
                   __end_of_tc_temperature_trans 020B                                            main@i 0162  
                              __end_of_I2C_Start 0904                              _Bq32k_Rtc_Read_Time 0F38  
                                Tc_Display@count 002A                                WriteAll_1621@addr 0024  
                                          ltemp0 007E                                            ltemp1 0082  
                                          ltemp2 0086                                            ltemp3 0080  
                                          ttemp0 007E                                            ttemp1 0081  
                                          ttemp2 0084                                            ttemp3 0087  
                                          ttemp4 007F                                            status 0003  
                                          wtemp0 007E                                            wtemp1 0080  
                                          wtemp2 0082                                            wtemp3 0084  
                                          wtemp4 0086                                            wtemp5 0088  
                                          wtemp6 007F                           __size_of_I2C_Send_Byte 004C  
                                _Cur_temperature 00B0                                       _Tc_Display 04A0  
                                ?_SPI_Initialize 0070                      __end_of_temperature_display 0CBD  
                                __initialization 0015                              __end_of_Key_Process 0691  
                               ?_I2C_Send_Buffer 0076                                     __end_of_main 04A0  
                                 WriteAll_1621@i 0025                                   WriteAll_1621@p 0020  
                               __end_of_Key_Scan 0A60                                    main@data_temp 0160  
                                 ??_EUSART_Write 0073                             ?_Bq32k_Rtc_Read_Time 0070  
                    __end_of_temperature_process 0BA5                                   __CFG_LPBOR$OFF 0000  
   maxim_31856_write_register@uch_register_value 0074                      ?_INTERRUPT_InterruptManager 0070  
                                  _WriteAll_1621 0BA5                                           ??_main 0062  
                                   Key_Process@i 0060   maxim_31856_write_register@uch_register_address 0075  
                        __size_of_FLASH_ReadWord 0019                          Bq32k_Rtc_Read_Time@temp 0025  
                              I2C_Receive_Byte@i 0075                         __end_of_SPI_Exchange8bit 082C  
                                         _ADCON0 009D                                           _ADCON1 009E  
                      FLASH_WriteBlock@writeAddr 0020                                           _ADRESH 009C  
                                         _ADRESL 009B                                 ___awdiv@dividend 0075  
                                         _APFCON 011D                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         i1l1033 000E                                           _FVRCON 0117  
                                         _PMADRH 0192                                           _PMADRL 0191  
                                         _PMDATH 0194                                           _PMDATL 0193  
                              _temperature_value 0065                                           _PMCON2 0196  
                      __size_of_FLASH_EraseBlock 001C                                           _OSCCON 0099  
                                         _SPBRGH 019C                                           _SPBRGL 019B  
                       _Cur_temperature_time_ch1 00B6                         _Cur_temperature_time_ch2 00B7  
                                         _WDTPS0 04B9                                           _WDTPS1 04BA  
                                         _WDTPS2 04BB                                           _WDTPS3 04BC  
                                         _WDTPS4 04BD                                           _TRISB1 0469  
                                         _TRISB3 046B                                           _SSPBUF 0211  
                                  ?_SendCmd_1621 0070                                           _SWDTEN 04B8  
                                  ?_SendBit_1621 0073                                   __CFG_PWRTE$OFF 0000  
                                _Bq32k_Time_Init 096B                                 SendBit_1621@data 0076  
                                         ___bmul 0880                                        ??_bcd2bin 0020  
                                         ___wmul 09BD                    FLASH_WriteWord@blockStartAddr 0030  
                                      ??___awdiv 0077                                   __CFG_STVREN$ON 0000  
                                      ??___awmod 0077                            ??_Bq32k_Rtc_Read_Time 0023  
                                      ??___lwdiv 0025                                        ??___lwmod 0077  
                   ?_maxim_31856_read_nregisters 0023                              FLASH_WriteWord@word 002D  
                                 ?_WriteAll_1621 0020                                 ?_TMR0_Initialize 0070  
                                         _memset 0986                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 0022                                  ___awmod@divisor 0073  
                                         _uch_sr 00C3                                  ___awmod@counter 0020  
                                         _rtc_tm 00DA                                  _Set_finish_flag 17EA  
                                  _I2C_Send_Byte 0D92                               ??_I2C_Receive_Byte 0073  
                        FLASH_ReadWord@flashAddr 0073                                        ?_I2C_Stop 0070  
                   ??_maxim_31856_write_register 0075                            I2C_Read_Buffer@Length 0077  
                       ADC_GetConversion@channel 0076                             __size_of_err_Display 002C  
                          __end_of_TMR0_CallBack 17FA                                       bcd2bin@val 0077  
                     ??_maxim_clear_fault_status 0077                                   _Set_start_flag 17FA  
                              _SYSTEM_Initialize 08A6                                   ??_SendCmd_1621 0020  
                        __end_of__initialization 003B                                   ??_SendBit_1621 0074  
                                    _Key_Process 05FD                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                               Calculate_Time@temp 0043  
                            ___bmul@multiplicand 0073                                time_Display@F2129 00A8  
           tc_temperature_trans@temperature_back 0053                                   __pcstackCOMMON 0070  
           tc_temperature_trans@temperature_temp 0059                                     __pidataBANK1 082C  
                            ??_SYSTEM_Initialize 0074                             _tc_temperature_trans 003F  
                                      ?_TMR0_ISR 0070                      ??_maxim_31856_read_register 0074  
                               FLASH_WriteWord@i 0032              __size_of_maxim_31856_write_register 000D  
                                  ?_Save_process 0070                                   ?_I2C_Send_Byte 0070  
                  ??_maxim_31856_read_nregisters 0025                          ?_maxim_start_conversion 0070  
                              ?_maxim_31856_init 0070                                   _OPTION_REGbits 0095  
                          TMR0_ISR@CountCallBack 00AC                                  _temperature_int 00B2  
                                     ??_I2C_Stop 0073                                    ??_Two_Display 0026  
                             ??_maxim_31856_init 0076                      FLASH_WriteBlock@GIEBitValue 0028  
                               Two_Display@F2123 00A0                             I2C_Receive_Byte@Data 0074  
                         __end_of_Set_start_flag 1800                              I2C_Read_Buffer@Flag 0022  
                      __end_of_SYSTEM_Initialize 08BB                        __size_of_Write_Flash_head 002F  
                            I2C_Read_Buffer@buff 0076                          __end_of_Bq32k_Time_Init 0986  
                                     __pbssBANK0 0065                                       __pbssBANK1 00A0  
                                     __pbssBANK2 0120                                        ?_Key_Scan 0070  
                           __end_of_EUSART_Write 081B                                  __CFG_VCAPEN$OFF 0000  
                               ??_FVR_Initialize 0073                                       __pmaintext 03A9  
                                        ?___bmul 0073                          __end_of_Set_finish_flag 17EF  
                          ?_tc_temperature_trans 0070                                      _Record_flag 006B  
                                ??_WriteAll_1621 0023                                          ?___wmul 0073  
                                     ??_TMR0_ISR 0071                                   ??_Save_process 004F  
                                     __pintentry 0004                                          _BAUDCON 019F  
                                        ?_memset 0073                   __end_of_maxim_start_conversion 0800  
                      __size_of_FLASH_WriteBlock 006B                          __size_of_ADC_Initialize 0008  
                                 _FLASH_ReadWord 091D                              __size_of_Tc_Display 00C8  
                 __size_of_one_temperature_trans 004A                    __end_of_one_temperature_trans 0D92  
                                        _OSCSTAT 009A                         __size_of_Save_Write_time 0072  
                                        _SSP1ADD 0212                         __size_of_Save_Write_word 0036  
                      _maxim_31856_read_register 086F                                  ?_Set_start_flag 0070  
           __size_of_maxim_31856_read_nregisters 0018                                       ??_Key_Scan 0073  
                                        _Dis_TAB 1000                                 _FLASH_EraseBlock 09A1  
                               ??_SPI_Initialize 0073                         __size_of_FLASH_WriteWord 0045  
                        __size_of_Calculate_Time 019E                              __end_of_Two_Display 0B72  
                      __size_of_SendDataBit_1621 0020                                        _I2C_Start 08EB  
maxim_31856_read_nregisters@uch_register_address 0027                                        _CH1_state 00B4  
                                      _CH2_state 00B5                                          _bcd2bin 0891  
                                __size_of___bmul 0011                                    ?_time_Display 0070  
                                        ___awdiv 0E2F                                          ___awmod 0D02  
                                __size_of___wmul 001E                                          ___lwdiv 0BDA  
                                        ___lwmod 0AB6                                  ??_I2C_Send_Byte 0073  
                    __size_of_Write_Flash_finish 002F                                I2C_Send_Byte@Data 0074  
                         __end_of_FLASH_ReadWord 0936                                  __size_of_memset 001B  
                       __size_of_I2C_Read_Buffer 0078                                          __ptext1 0F9C  
                                        __ptext2 0E81                                          __ptext3 0ED5  
                                        __ptext4 08A6                                          __ptext5 085F  
                                        __ptext6 0801                                          __ptext7 0A1B  
                                        __ptext8 17EF                                          __ptext9 17E6  
                           __end_of_SendCmd_1621 08D3                             SendDataBit_1621@data 0076  
                           __end_of_SendBit_1621 09FB               __end_of_maxim_31856_write_register 084F  
                     _maxim_31856_write_register 0842                            _OSCILLATOR_Initialize 17EF  
                                 I2C_Send_Byte@i 0075                                 ___awmod@dividend 0075  
                                        _uch_cr0 007A                                          _uch_cr1 00BE  
                       ??_PIN_MANAGER_Initialize 0073                                          _uch_reg 00C4  
               __end_of_maxim_clear_fault_status 085F                                ?_SPI_Exchange8bit 0070  
                          I2C_Send_Buffer@Length 0077                       __size_of_SYSTEM_Initialize 0015  
                                        clrloop0 080E                             end_of_initialization 003B  
                             ??_SPI_Exchange8bit 0073                             SPI_Exchange8bit@data 0073  
                               ?_Bq32k_Time_Init 0070                                          init_ram 0807  
                                        memset@c 0073                                          memset@n 0075  
                                        memset@p 0021                                          initloop 0808  
                                     ?_I2C_Start 0070                                _EUSART_Initialize 0836  
                         ??_tc_temperature_trans 004F                               ?_EUSART_Initialize 0070  
                                 ??_time_Display 0030                                        _RCSTAbits 019D  
                               ?_Set_finish_flag 0070                            Serach_Flash_Head@data 0035  
                                   __pstringtext 1000                        FLASH_ReadWord@GIEBitValue 0075  
                                     _time_count 006D                                  ?_FLASH_ReadWord 0073  
                   __size_of_temperature_display 003D                              ??_EUSART_Initialize 0073  
                                   _display_buff 00E1                         __size_of_I2C_Send_Buffer 003B  
                               __CFG_FOSC$INTOSC 0000                     __size_of_temperature_process 0033  
                          __size_of_EUSART_Write 0008                                      _Two_Display 0B41  
                              __size_of_I2C_Stop 0019                                 _Write_Flash_head 0B12  
                            Bq32k_Time_Init@temp 0027                             __end_of_Save_process 0F38  
                      __size_of_I2C_Receive_Byte 002A                             Key_Process@gKeyValue 005F  
                      __end_of_EUSART_Initialize 0842                              Calculate_Time@temp1 0047  
                            Calculate_Time@temp2 004B                                ??_Save_Write_time 0037  
                                   ?_Key_Process 0070                                ??_Save_Write_word 0035  
                       ??_SPI_Exchange8bitBuffer 0020                                     ??_Tc_Display 0029  
                    __end_of_Bq32k_Rtc_Read_Time 0F9C                                FLASH_WriteBlock@i 0029  
                              ??_FLASH_WriteWord 0076                     tc_temperature_trans@var_time 0057  
      maxim_start_conversion@uch_conversion_mode 0020                                   __end_of___bmul 0891  
                                 __end_of___wmul 09DB                                     _EUSART_Write 0813  
                              __size_of_TMR0_ISR 001B                                   _ADC_Initialize 081B  
                               _FLASH_WriteBlock 077B                             Key_Process@data_temp 005D  
                         ?_OSCILLATOR_Initialize 0070                                   __end_of_memset 09A1  
                                 Tc_Display@data 002B                                 WriteAll_1621@cnt 0022  
                                  ??_err_Display 0026                              start_initialization 0015  
                       __size_of_TMR0_Initialize 0010                               __end_of_Tc_Display 0568  
                __size_of_PIN_MANAGER_Initialize 0022                                ??_I2C_Read_Buffer 0020  
                                 Two_Display@num 0027                                   _Calculate_Time 020B  
                      __size_of_maxim_31856_init 0064                                 _SendDataBit_1621 09FB  
                                    ??_I2C_Start 0073                                __size_of_Key_Scan 0023  
                               _temperature_sign 00BA               __size_of_maxim_31856_read_register 0011  
                                SendBit_1621@cnt 0073                                         ??___bmul 0074  
              __size_of_maxim_clear_fault_status 0010                        ?_maxim_clear_fault_status 0070  
                                       ??___wmul 0077                            __size_of_SendCmd_1621 0018  
                          __size_of_SendBit_1621 0020                              I2C_Send_Buffer@Flag 0024  
                         __size_of_TMR0_CallBack 0006                           __end_of_ADC_Initialize 0823  
                                    __pdataBANK1 00E5                              I2C_Send_Buffer@buff 0076  
                                       ??_memset 0077                      FLASH_EraseBlock@GIEBitValue 0075  
                       __end_of_FLASH_EraseBlock 09BD                                 ??_Set_start_flag 0073  
                                    __pbssCOMMON 0078                                  _CH1_temperature 0069  
                                      ___latbits 0003                                    __pcstackBANK0 0020  
                                  __pcstackBANK2 0160                             __end_of_time_Display 05FD  
                  SPI_Exchange8bitBuffer@dataOut 0075                           __end_of_Calculate_Time 03A9  
                              ??_I2C_Send_Buffer 0020                              __end_of_err_Display 0AB6  
                     __size_of_EUSART_Initialize 000C                               I2C_Read_Buffer@ADD 0021  
                                   _LongPressSec 00B8                                Two_Display@number 002B  
                                   _SendCmd_1621 08BB                                     _SendBit_1621 09DB  
                                      __pnvBANK1 00EF                  __size_of_SPI_Exchange8bitBuffer 0051  
                               ___lwdiv@dividend 0023                           _PIN_MANAGER_Initialize 0A1B  
                                    _MAX31856Sec 00B9                __end_of_maxim_31856_read_register 0880  
                                       ?_bcd2bin 0070                                         ?___awdiv 0073  
                                       ?___awmod 0073              __end_of_maxim_31856_read_nregisters 08EB  
                    _maxim_31856_read_nregisters 08D3                                         ?___lwdiv 0021  
                                       ?___lwmod 0073                                  ?_ADC_Initialize 0070  
                              SendDataBit_1621@i 0077                            __end_of_WriteAll_1621 0BDA  
                   ??_INTERRUPT_InterruptManager 0072                      ?_maxim_31856_write_register 0074  
                                       _I2C_Stop 0904                            __size_of_Save_process 0063  
                                _CH2_temperature 0078                                 I2C_Send_Buffer@i 0023  
                               __CFG_WDTE$SWDTEN 0000                                 ___lwdiv@quotient 0027  
                                  _TMR0_CallBack 17F4                                  ?_Calculate_Time 0070  
                            _temperature_decimal 006C                            _one_temperature_trans 0D48  
                               _I2C_Receive_Byte 0A60                              SendDataBit_1621@cnt 0073  
                       FLASH_WriteWord@flashAddr 002A                                   err_Display@num 0027  
                 FLASH_WriteBlock@blockStartAddr 0026            maxim_31856_read_nregisters@uch_nBytes 0024  
                            _temperature_display 0C80                                ??_TMR0_Initialize 0073  
                                 ___wmul@product 0020                                        clear_ram0 080D  
                                      _uch_ltcbh 00BF                                        _uch_ltcbl 00C0  
                                      _uch_ltcbm 00C1                             __size_of_Key_Process 0094  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0B72  
                                       _PIR1bits 0011                        FLASH_EraseBlock@startAddr 0073  
                               ??_FLASH_ReadWord 0075                        __size_of_SPI_Exchange8bit 0009  
                     __end_of_Write_Flash_finish 0B12                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0950                         __end_of_Write_Flash_head 0B41  
                                       _SSP1STAT 0214                                     _Save_process 0ED5  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0DDE  
                                     _ADCON0bits 009D                                ___wmul@multiplier 0073  
                        __size_of_FVR_Initialize 0004                           _SPI_Exchange8bitBuffer 0DDE  
                                 _Cur_Save_Index 00AE                                      _err_Display 0A8A  
                            Save_Write_word@data 0033                             ?_temperature_process 0070  
                                _Save_Write_time 0709                                  _Save_Write_word 0C0F  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                _FLASH_WriteWord 0CBD                                         _Key_Scan 0A3D  
            maxim_31856_read_nregisters@uch_buff 0023                         __end_of_FLASH_WriteBlock 07E6  
                               _maxim_31856_init 0F9C                                _Serach_Flash_Head 0E81  
                       __size_of_Bq32k_Time_Init 001B                               ?_Serach_Flash_Head 0070  
                              _ADC_GetConversion 0936                         ??_maxim_start_conversion 0077  
                             I2C_Send_Buffer@ADD 0022                    __size_of_tc_temperature_trans 01CC  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0037  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 005B                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 0691                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0033  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2126 00A4                         __end_of_SendDataBit_1621 0A1B  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0021                                  ___lwdiv@counter 0026  
                                       __ptext10 0836                                         __ptext11 081B  
                                       __ptext20 09BD                                         __ptext12 05FD  
                                       __ptext21 0B12                                         __ptext13 0B72  
                                       __ptext30 0891                                         __ptext22 0AE3  
                                       __ptext14 0568                                         __ptext31 0880  
                                       __ptext23 0709                                         __ptext15 0D02  
                                       __ptext40 0D48                                         __ptext32 0691  
                                       __ptext24 0C0F                                         __ptext16 0E2F  
                                       __ptext41 07E6                                         __ptext33 0A60  
                                       __ptext25 0CBD                                         __ptext17 0C80  
                                       __ptext50 17FA                                         __ptext42 0842  
                                       __ptext34 084F                                         __ptext26 077B  
                                       __ptext18 003F                                         __ptext51 17EA  
                                       __ptext43 086F                                         __ptext35 0A8A  
                                       __ptext27 09A1                                         __ptext19 020B  
                                       __ptext60 0D92                                         __ptext52 08BB  
                                       __ptext44 08D3                                         __ptext36 04A0  
                                       __ptext28 091D                                         __ptext61 0936  
                                       __ptext53 09DB                                         __ptext45 0DDE  
                                       __ptext37 0986                                         __ptext29 0F38  
                                       __ptext54 0A3D                                         __ptext46 0823  
                                       __ptext38 0AB6                                         __ptext63 0950  
                                       __ptext55 0813                                         __ptext47 0B41  
                                       __ptext39 0BDA                                         __ptext64 17F4  
                                       __ptext56 096B                                         __ptext48 0BA5  
                                       __ptext57 0C45                                         __ptext49 09FB  
                                       __ptext58 0904                                         __ptext59 08EB  
                         ?_one_temperature_trans 0070                                     _SSP1CON1bits 0215  
                          FLASH_WriteWord@ramBuf 002C                            FLASH_WriteWord@offset 002F  
                      __end_of_Serach_Flash_Head 0ED5                                    __size_of_main 00F7  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 0950  
                                       _uch_cjth 00BC                                         _uch_cjtl 00BD  
                                       _uch_mask 00C2                             Save_process@var_time 0051  
                                       int$flags 007E                                     _time_Display 0568  
                                       _tmr_flag 00BB               __end_of_INTERRUPT_InterruptManager 0013  
                     _INTERRUPT_InterruptManager 0004                     __size_of_Bq32k_Rtc_Read_Time 0064  
                                   _SSP1STATbits 0214                          __end_of_Save_Write_time 077B  
                        __end_of_Save_Write_word 0C45                                  _I2C_Send_Buffer 0C45  
                              ?_FLASH_EraseBlock 0073                               ??_FLASH_EraseBlock 0075  
                                     _INTCONbits 000B                          __end_of_FLASH_WriteWord 0D02  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0020                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 0709                                 _SPI_Exchange8bit 0823  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 0A8A  
                         Serach_Flash_Head@count 0034                                ??_Bq32k_Time_Init 0025  
                                 _FVR_Initialize 17E6                                     _rtc_save_ch1 00CC  
                                   _rtc_save_ch2 00D3                                       _OPTION_REG 0095  
                               ??_Calculate_Time 0039                                  ___lwmod@divisor 0073  
                                _TMR0_Initialize 085F                                  ___lwmod@counter 0020  
       tc_temperature_trans@temperature_absolute 0055                                ??_Set_finish_flag 0073  
                             EUSART_Write@txData 0073                             __size_of_Two_Display 0031  
                 __end_of_PIN_MANAGER_Initialize 0A3D                       __size_of_Serach_Flash_Head 0054  
                           Bq32k_Time_Init@F2018 00E5                       __size_of_ADC_GetConversion 001A  
                       _maxim_clear_fault_status 084F  
