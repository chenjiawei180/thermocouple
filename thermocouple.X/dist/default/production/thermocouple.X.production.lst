

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jul 05 10:30:30 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  018E                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020D                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0298                     	;# 
   163  0298                     	;# 
   164  0299                     	;# 
   165  029A                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  0116                     	;# 
   227  0117                     	;# 
   228  011D                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  018E                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0194                     	;# 
   238  0195                     	;# 
   239  0196                     	;# 
   240  0197                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019D                     	;# 
   250  019E                     	;# 
   251  019F                     	;# 
   252  020D                     	;# 
   253  0210                     	;# 
   254  0211                     	;# 
   255  0211                     	;# 
   256  0212                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0213                     	;# 
   260  0214                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0216                     	;# 
   266  0216                     	;# 
   267  0217                     	;# 
   268  0217                     	;# 
   269  0291                     	;# 
   270  0291                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0298                     	;# 
   274  0298                     	;# 
   275  0299                     	;# 
   276  029A                     	;# 
   277  0394                     	;# 
   278  0395                     	;# 
   279  0396                     	;# 
   280  0FE4                     	;# 
   281  0FE5                     	;# 
   282  0FE6                     	;# 
   283  0FE7                     	;# 
   284  0FE8                     	;# 
   285  0FE9                     	;# 
   286  0FEA                     	;# 
   287  0FEB                     	;# 
   288  0FED                     	;# 
   289  0FEE                     	;# 
   290  0FEF                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  008C                     	;# 
   319  008D                     	;# 
   320  008E                     	;# 
   321  0090                     	;# 
   322  0091                     	;# 
   323  0092                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0097                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009B                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  0116                     	;# 
   338  0117                     	;# 
   339  011D                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342  018E                     	;# 
   343  0191                     	;# 
   344  0191                     	;# 
   345  0192                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0197                     	;# 
   352  0199                     	;# 
   353  019A                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019C                     	;# 
   359  019C                     	;# 
   360  019D                     	;# 
   361  019E                     	;# 
   362  019F                     	;# 
   363  020D                     	;# 
   364  0210                     	;# 
   365  0211                     	;# 
   366  0211                     	;# 
   367  0212                     	;# 
   368  0212                     	;# 
   369  0213                     	;# 
   370  0213                     	;# 
   371  0214                     	;# 
   372  0214                     	;# 
   373  0215                     	;# 
   374  0215                     	;# 
   375  0215                     	;# 
   376  0216                     	;# 
   377  0216                     	;# 
   378  0217                     	;# 
   379  0217                     	;# 
   380  0291                     	;# 
   381  0291                     	;# 
   382  0292                     	;# 
   383  0293                     	;# 
   384  0298                     	;# 
   385  0298                     	;# 
   386  0299                     	;# 
   387  029A                     	;# 
   388  0394                     	;# 
   389  0395                     	;# 
   390  0396                     	;# 
   391  0FE4                     	;# 
   392  0FE5                     	;# 
   393  0FE6                     	;# 
   394  0FE7                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEB                     	;# 
   399  0FED                     	;# 
   400  0FEE                     	;# 
   401  0FEF                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  011D                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  018E                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0197                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020D                     	;# 
   475  0210                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0291                     	;# 
   492  0291                     	;# 
   493  0292                     	;# 
   494  0293                     	;# 
   495  0298                     	;# 
   496  0298                     	;# 
   497  0299                     	;# 
   498  029A                     	;# 
   499  0394                     	;# 
   500  0395                     	;# 
   501  0396                     	;# 
   502  0FE4                     	;# 
   503  0FE5                     	;# 
   504  0FE6                     	;# 
   505  0FE7                     	;# 
   506  0FE8                     	;# 
   507  0FE9                     	;# 
   508  0FEA                     	;# 
   509  0FEB                     	;# 
   510  0FED                     	;# 
   511  0FEE                     	;# 
   512  0FEF                     	;# 
   513  0000                     	;# 
   514  0001                     	;# 
   515  0002                     	;# 
   516  0003                     	;# 
   517  0004                     	;# 
   518  0005                     	;# 
   519  0006                     	;# 
   520  0007                     	;# 
   521  0008                     	;# 
   522  0009                     	;# 
   523  000A                     	;# 
   524  000B                     	;# 
   525  000C                     	;# 
   526  000D                     	;# 
   527  000E                     	;# 
   528  0010                     	;# 
   529  0011                     	;# 
   530  0012                     	;# 
   531  0015                     	;# 
   532  0016                     	;# 
   533  0016                     	;# 
   534  0017                     	;# 
   535  0018                     	;# 
   536  0019                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001C                     	;# 
   540  008C                     	;# 
   541  008D                     	;# 
   542  008E                     	;# 
   543  0090                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0095                     	;# 
   547  0096                     	;# 
   548  0097                     	;# 
   549  0099                     	;# 
   550  009A                     	;# 
   551  009B                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  011D                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  018E                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0197                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019C                     	;# 
   581  019C                     	;# 
   582  019D                     	;# 
   583  019E                     	;# 
   584  019F                     	;# 
   585  020D                     	;# 
   586  0210                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0216                     	;# 
   599  0216                     	;# 
   600  0217                     	;# 
   601  0217                     	;# 
   602  0291                     	;# 
   603  0291                     	;# 
   604  0292                     	;# 
   605  0293                     	;# 
   606  0298                     	;# 
   607  0298                     	;# 
   608  0299                     	;# 
   609  029A                     	;# 
   610  0394                     	;# 
   611  0395                     	;# 
   612  0396                     	;# 
   613  0FE4                     	;# 
   614  0FE5                     	;# 
   615  0FE6                     	;# 
   616  0FE7                     	;# 
   617  0FE8                     	;# 
   618  0FE9                     	;# 
   619  0FEA                     	;# 
   620  0FEB                     	;# 
   621  0FED                     	;# 
   622  0FEE                     	;# 
   623  0FEF                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0015                     	;# 
   643  0016                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  0019                     	;# 
   648  001A                     	;# 
   649  001B                     	;# 
   650  001C                     	;# 
   651  008C                     	;# 
   652  008D                     	;# 
   653  008E                     	;# 
   654  0090                     	;# 
   655  0091                     	;# 
   656  0092                     	;# 
   657  0095                     	;# 
   658  0096                     	;# 
   659  0097                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009B                     	;# 
   664  009C                     	;# 
   665  009D                     	;# 
   666  009E                     	;# 
   667  010C                     	;# 
   668  010D                     	;# 
   669  010E                     	;# 
   670  0116                     	;# 
   671  0117                     	;# 
   672  011D                     	;# 
   673  018C                     	;# 
   674  018D                     	;# 
   675  018E                     	;# 
   676  0191                     	;# 
   677  0191                     	;# 
   678  0192                     	;# 
   679  0193                     	;# 
   680  0193                     	;# 
   681  0194                     	;# 
   682  0195                     	;# 
   683  0196                     	;# 
   684  0197                     	;# 
   685  0199                     	;# 
   686  019A                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019B                     	;# 
   690  019B                     	;# 
   691  019C                     	;# 
   692  019C                     	;# 
   693  019D                     	;# 
   694  019E                     	;# 
   695  019F                     	;# 
   696  020D                     	;# 
   697  0210                     	;# 
   698  0211                     	;# 
   699  0211                     	;# 
   700  0212                     	;# 
   701  0212                     	;# 
   702  0213                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0215                     	;# 
   709  0216                     	;# 
   710  0216                     	;# 
   711  0217                     	;# 
   712  0217                     	;# 
   713  0291                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0293                     	;# 
   717  0298                     	;# 
   718  0298                     	;# 
   719  0299                     	;# 
   720  029A                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE9                     	;# 
   730  0FEA                     	;# 
   731  0FEB                     	;# 
   732  0FED                     	;# 
   733  0FEE                     	;# 
   734  0FEF                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0008                     	;# 
   744  0009                     	;# 
   745  000A                     	;# 
   746  000B                     	;# 
   747  000C                     	;# 
   748  000D                     	;# 
   749  000E                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0015                     	;# 
   754  0016                     	;# 
   755  0016                     	;# 
   756  0017                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  001B                     	;# 
   761  001C                     	;# 
   762  008C                     	;# 
   763  008D                     	;# 
   764  008E                     	;# 
   765  0090                     	;# 
   766  0091                     	;# 
   767  0092                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  010C                     	;# 
   779  010D                     	;# 
   780  010E                     	;# 
   781  0116                     	;# 
   782  0117                     	;# 
   783  011D                     	;# 
   784  018C                     	;# 
   785  018D                     	;# 
   786  018E                     	;# 
   787  0191                     	;# 
   788  0191                     	;# 
   789  0192                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0194                     	;# 
   793  0195                     	;# 
   794  0196                     	;# 
   795  0197                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020D                     	;# 
   808  0210                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0212                     	;# 
   813  0213                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0216                     	;# 
   821  0216                     	;# 
   822  0217                     	;# 
   823  0217                     	;# 
   824  0291                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0293                     	;# 
   828  0298                     	;# 
   829  0298                     	;# 
   830  0299                     	;# 
   831  029A                     	;# 
   832  0394                     	;# 
   833  0395                     	;# 
   834  0396                     	;# 
   835  0FE4                     	;# 
   836  0FE5                     	;# 
   837  0FE6                     	;# 
   838  0FE7                     	;# 
   839  0FE8                     	;# 
   840  0FE9                     	;# 
   841  0FEA                     	;# 
   842  0FEB                     	;# 
   843  0FED                     	;# 
   844  0FEE                     	;# 
   845  0FEF                     	;# 
   846  0000                     	;# 
   847  0001                     	;# 
   848  0002                     	;# 
   849  0003                     	;# 
   850  0004                     	;# 
   851  0005                     	;# 
   852  0006                     	;# 
   853  0007                     	;# 
   854  0008                     	;# 
   855  0009                     	;# 
   856  000A                     	;# 
   857  000B                     	;# 
   858  000C                     	;# 
   859  000D                     	;# 
   860  000E                     	;# 
   861  0010                     	;# 
   862  0011                     	;# 
   863  0012                     	;# 
   864  0015                     	;# 
   865  0016                     	;# 
   866  0016                     	;# 
   867  0017                     	;# 
   868  0018                     	;# 
   869  0019                     	;# 
   870  001A                     	;# 
   871  001B                     	;# 
   872  001C                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  0090                     	;# 
   877  0091                     	;# 
   878  0092                     	;# 
   879  0095                     	;# 
   880  0096                     	;# 
   881  0097                     	;# 
   882  0099                     	;# 
   883  009A                     	;# 
   884  009B                     	;# 
   885  009B                     	;# 
   886  009C                     	;# 
   887  009D                     	;# 
   888  009E                     	;# 
   889  010C                     	;# 
   890  010D                     	;# 
   891  010E                     	;# 
   892  0116                     	;# 
   893  0117                     	;# 
   894  011D                     	;# 
   895  018C                     	;# 
   896  018D                     	;# 
   897  018E                     	;# 
   898  0191                     	;# 
   899  0191                     	;# 
   900  0192                     	;# 
   901  0193                     	;# 
   902  0193                     	;# 
   903  0194                     	;# 
   904  0195                     	;# 
   905  0196                     	;# 
   906  0197                     	;# 
   907  0199                     	;# 
   908  019A                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019C                     	;# 
   914  019C                     	;# 
   915  019D                     	;# 
   916  019E                     	;# 
   917  019F                     	;# 
   918  020D                     	;# 
   919  0210                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0216                     	;# 
   932  0216                     	;# 
   933  0217                     	;# 
   934  0217                     	;# 
   935  0291                     	;# 
   936  0291                     	;# 
   937  0292                     	;# 
   938  0293                     	;# 
   939  0298                     	;# 
   940  0298                     	;# 
   941  0299                     	;# 
   942  029A                     	;# 
   943  0394                     	;# 
   944  0395                     	;# 
   945  0396                     	;# 
   946  0FE4                     	;# 
   947  0FE5                     	;# 
   948  0FE6                     	;# 
   949  0FE7                     	;# 
   950  0FE8                     	;# 
   951  0FE9                     	;# 
   952  0FEA                     	;# 
   953  0FEB                     	;# 
   954  0FED                     	;# 
   955  0FEE                     	;# 
   956  0FEF                     	;# 
   957  0000                     	;# 
   958  0001                     	;# 
   959  0002                     	;# 
   960  0003                     	;# 
   961  0004                     	;# 
   962  0005                     	;# 
   963  0006                     	;# 
   964  0007                     	;# 
   965  0008                     	;# 
   966  0009                     	;# 
   967  000A                     	;# 
   968  000B                     	;# 
   969  000C                     	;# 
   970  000D                     	;# 
   971  000E                     	;# 
   972  0010                     	;# 
   973  0011                     	;# 
   974  0012                     	;# 
   975  0015                     	;# 
   976  0016                     	;# 
   977  0016                     	;# 
   978  0017                     	;# 
   979  0018                     	;# 
   980  0019                     	;# 
   981  001A                     	;# 
   982  001B                     	;# 
   983  001C                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0099                     	;# 
   994  009A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  010C                     	;# 
  1001  010D                     	;# 
  1002  010E                     	;# 
  1003  0116                     	;# 
  1004  0117                     	;# 
  1005  011D                     	;# 
  1006  018C                     	;# 
  1007  018D                     	;# 
  1008  018E                     	;# 
  1009  0191                     	;# 
  1010  0191                     	;# 
  1011  0192                     	;# 
  1012  0193                     	;# 
  1013  0193                     	;# 
  1014  0194                     	;# 
  1015  0195                     	;# 
  1016  0196                     	;# 
  1017  0197                     	;# 
  1018  0199                     	;# 
  1019  019A                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019C                     	;# 
  1026  019D                     	;# 
  1027  019E                     	;# 
  1028  019F                     	;# 
  1029  020D                     	;# 
  1030  0210                     	;# 
  1031  0211                     	;# 
  1032  0211                     	;# 
  1033  0212                     	;# 
  1034  0212                     	;# 
  1035  0213                     	;# 
  1036  0213                     	;# 
  1037  0214                     	;# 
  1038  0214                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0215                     	;# 
  1042  0216                     	;# 
  1043  0216                     	;# 
  1044  0217                     	;# 
  1045  0217                     	;# 
  1046  0291                     	;# 
  1047  0291                     	;# 
  1048  0292                     	;# 
  1049  0293                     	;# 
  1050  0298                     	;# 
  1051  0298                     	;# 
  1052  0299                     	;# 
  1053  029A                     	;# 
  1054  0394                     	;# 
  1055  0395                     	;# 
  1056  0396                     	;# 
  1057  0FE4                     	;# 
  1058  0FE5                     	;# 
  1059  0FE6                     	;# 
  1060  0FE7                     	;# 
  1061  0FE8                     	;# 
  1062  0FE9                     	;# 
  1063  0FEA                     	;# 
  1064  0FEB                     	;# 
  1065  0FED                     	;# 
  1066  0FEE                     	;# 
  1067  0FEF                     	;# 
  1068  0000                     	;# 
  1069  0001                     	;# 
  1070  0002                     	;# 
  1071  0003                     	;# 
  1072  0004                     	;# 
  1073  0005                     	;# 
  1074  0006                     	;# 
  1075  0007                     	;# 
  1076  0008                     	;# 
  1077  0009                     	;# 
  1078  000A                     	;# 
  1079  000B                     	;# 
  1080  000C                     	;# 
  1081  000D                     	;# 
  1082  000E                     	;# 
  1083  0010                     	;# 
  1084  0011                     	;# 
  1085  0012                     	;# 
  1086  0015                     	;# 
  1087  0016                     	;# 
  1088  0016                     	;# 
  1089  0017                     	;# 
  1090  0018                     	;# 
  1091  0019                     	;# 
  1092  001A                     	;# 
  1093  001B                     	;# 
  1094  001C                     	;# 
  1095  008C                     	;# 
  1096  008D                     	;# 
  1097  008E                     	;# 
  1098  0090                     	;# 
  1099  0091                     	;# 
  1100  0092                     	;# 
  1101  0095                     	;# 
  1102  0096                     	;# 
  1103  0097                     	;# 
  1104  0099                     	;# 
  1105  009A                     	;# 
  1106  009B                     	;# 
  1107  009B                     	;# 
  1108  009C                     	;# 
  1109  009D                     	;# 
  1110  009E                     	;# 
  1111  010C                     	;# 
  1112  010D                     	;# 
  1113  010E                     	;# 
  1114  0116                     	;# 
  1115  0117                     	;# 
  1116  011D                     	;# 
  1117  018C                     	;# 
  1118  018D                     	;# 
  1119  018E                     	;# 
  1120  0191                     	;# 
  1121  0191                     	;# 
  1122  0192                     	;# 
  1123  0193                     	;# 
  1124  0193                     	;# 
  1125  0194                     	;# 
  1126  0195                     	;# 
  1127  0196                     	;# 
  1128  0197                     	;# 
  1129  0199                     	;# 
  1130  019A                     	;# 
  1131  019B                     	;# 
  1132  019B                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019C                     	;# 
  1136  019C                     	;# 
  1137  019D                     	;# 
  1138  019E                     	;# 
  1139  019F                     	;# 
  1140  020D                     	;# 
  1141  0210                     	;# 
  1142  0211                     	;# 
  1143  0211                     	;# 
  1144  0212                     	;# 
  1145  0212                     	;# 
  1146  0213                     	;# 
  1147  0213                     	;# 
  1148  0214                     	;# 
  1149  0214                     	;# 
  1150  0215                     	;# 
  1151  0215                     	;# 
  1152  0215                     	;# 
  1153  0216                     	;# 
  1154  0216                     	;# 
  1155  0217                     	;# 
  1156  0217                     	;# 
  1157  0291                     	;# 
  1158  0291                     	;# 
  1159  0292                     	;# 
  1160  0293                     	;# 
  1161  0298                     	;# 
  1162  0298                     	;# 
  1163  0299                     	;# 
  1164  029A                     	;# 
  1165  0394                     	;# 
  1166  0395                     	;# 
  1167  0396                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  0010                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  008C                     	;# 
  1207  008D                     	;# 
  1208  008E                     	;# 
  1209  0090                     	;# 
  1210  0091                     	;# 
  1211  0092                     	;# 
  1212  0095                     	;# 
  1213  0096                     	;# 
  1214  0097                     	;# 
  1215  0099                     	;# 
  1216  009A                     	;# 
  1217  009B                     	;# 
  1218  009B                     	;# 
  1219  009C                     	;# 
  1220  009D                     	;# 
  1221  009E                     	;# 
  1222  010C                     	;# 
  1223  010D                     	;# 
  1224  010E                     	;# 
  1225  0116                     	;# 
  1226  0117                     	;# 
  1227  011D                     	;# 
  1228  018C                     	;# 
  1229  018D                     	;# 
  1230  018E                     	;# 
  1231  0191                     	;# 
  1232  0191                     	;# 
  1233  0192                     	;# 
  1234  0193                     	;# 
  1235  0193                     	;# 
  1236  0194                     	;# 
  1237  0195                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0199                     	;# 
  1241  019A                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019B                     	;# 
  1246  019C                     	;# 
  1247  019C                     	;# 
  1248  019D                     	;# 
  1249  019E                     	;# 
  1250  019F                     	;# 
  1251  020D                     	;# 
  1252  0210                     	;# 
  1253  0211                     	;# 
  1254  0211                     	;# 
  1255  0212                     	;# 
  1256  0212                     	;# 
  1257  0213                     	;# 
  1258  0213                     	;# 
  1259  0214                     	;# 
  1260  0214                     	;# 
  1261  0215                     	;# 
  1262  0215                     	;# 
  1263  0215                     	;# 
  1264  0216                     	;# 
  1265  0216                     	;# 
  1266  0217                     	;# 
  1267  0217                     	;# 
  1268  0291                     	;# 
  1269  0291                     	;# 
  1270  0292                     	;# 
  1271  0293                     	;# 
  1272  0298                     	;# 
  1273  0298                     	;# 
  1274  0299                     	;# 
  1275  029A                     	;# 
  1276  0394                     	;# 
  1277  0395                     	;# 
  1278  0396                     	;# 
  1279  0FE4                     	;# 
  1280  0FE5                     	;# 
  1281  0FE6                     	;# 
  1282  0FE7                     	;# 
  1283  0FE8                     	;# 
  1284  0FE9                     	;# 
  1285  0FEA                     	;# 
  1286  0FEB                     	;# 
  1287  0FED                     	;# 
  1288  0FEE                     	;# 
  1289  0FEF                     	;# 
  1290  0000                     	;# 
  1291  0001                     	;# 
  1292  0002                     	;# 
  1293  0003                     	;# 
  1294  0004                     	;# 
  1295  0005                     	;# 
  1296  0006                     	;# 
  1297  0007                     	;# 
  1298  0008                     	;# 
  1299  0009                     	;# 
  1300  000A                     	;# 
  1301  000B                     	;# 
  1302  000C                     	;# 
  1303  000D                     	;# 
  1304  000E                     	;# 
  1305  0010                     	;# 
  1306  0011                     	;# 
  1307  0012                     	;# 
  1308  0015                     	;# 
  1309  0016                     	;# 
  1310  0016                     	;# 
  1311  0017                     	;# 
  1312  0018                     	;# 
  1313  0019                     	;# 
  1314  001A                     	;# 
  1315  001B                     	;# 
  1316  001C                     	;# 
  1317  008C                     	;# 
  1318  008D                     	;# 
  1319  008E                     	;# 
  1320  0090                     	;# 
  1321  0091                     	;# 
  1322  0092                     	;# 
  1323  0095                     	;# 
  1324  0096                     	;# 
  1325  0097                     	;# 
  1326  0099                     	;# 
  1327  009A                     	;# 
  1328  009B                     	;# 
  1329  009B                     	;# 
  1330  009C                     	;# 
  1331  009D                     	;# 
  1332  009E                     	;# 
  1333  010C                     	;# 
  1334  010D                     	;# 
  1335  010E                     	;# 
  1336  0116                     	;# 
  1337  0117                     	;# 
  1338  011D                     	;# 
  1339  018C                     	;# 
  1340  018D                     	;# 
  1341  018E                     	;# 
  1342  0191                     	;# 
  1343  0191                     	;# 
  1344  0192                     	;# 
  1345  0193                     	;# 
  1346  0193                     	;# 
  1347  0194                     	;# 
  1348  0195                     	;# 
  1349  0196                     	;# 
  1350  0197                     	;# 
  1351  0199                     	;# 
  1352  019A                     	;# 
  1353  019B                     	;# 
  1354  019B                     	;# 
  1355  019B                     	;# 
  1356  019B                     	;# 
  1357  019C                     	;# 
  1358  019C                     	;# 
  1359  019D                     	;# 
  1360  019E                     	;# 
  1361  019F                     	;# 
  1362  020D                     	;# 
  1363  0210                     	;# 
  1364  0211                     	;# 
  1365  0211                     	;# 
  1366  0212                     	;# 
  1367  0212                     	;# 
  1368  0213                     	;# 
  1369  0213                     	;# 
  1370  0214                     	;# 
  1371  0214                     	;# 
  1372  0215                     	;# 
  1373  0215                     	;# 
  1374  0215                     	;# 
  1375  0216                     	;# 
  1376  0216                     	;# 
  1377  0217                     	;# 
  1378  0217                     	;# 
  1379  0291                     	;# 
  1380  0291                     	;# 
  1381  0292                     	;# 
  1382  0293                     	;# 
  1383  0298                     	;# 
  1384  0298                     	;# 
  1385  0299                     	;# 
  1386  029A                     	;# 
  1387  0394                     	;# 
  1388  0395                     	;# 
  1389  0396                     	;# 
  1390  0FE4                     	;# 
  1391  0FE5                     	;# 
  1392  0FE6                     	;# 
  1393  0FE7                     	;# 
  1394  0FE8                     	;# 
  1395  0FE9                     	;# 
  1396  0FEA                     	;# 
  1397  0FEB                     	;# 
  1398  0FED                     	;# 
  1399  0FEE                     	;# 
  1400  0FEF                     	;# 
  1401  0000                     	;# 
  1402  0001                     	;# 
  1403  0002                     	;# 
  1404  0003                     	;# 
  1405  0004                     	;# 
  1406  0005                     	;# 
  1407  0006                     	;# 
  1408  0007                     	;# 
  1409  0008                     	;# 
  1410  0009                     	;# 
  1411  000A                     	;# 
  1412  000B                     	;# 
  1413  000C                     	;# 
  1414  000D                     	;# 
  1415  000E                     	;# 
  1416  0010                     	;# 
  1417  0011                     	;# 
  1418  0012                     	;# 
  1419  0015                     	;# 
  1420  0016                     	;# 
  1421  0016                     	;# 
  1422  0017                     	;# 
  1423  0018                     	;# 
  1424  0019                     	;# 
  1425  001A                     	;# 
  1426  001B                     	;# 
  1427  001C                     	;# 
  1428  008C                     	;# 
  1429  008D                     	;# 
  1430  008E                     	;# 
  1431  0090                     	;# 
  1432  0091                     	;# 
  1433  0092                     	;# 
  1434  0095                     	;# 
  1435  0096                     	;# 
  1436  0097                     	;# 
  1437  0099                     	;# 
  1438  009A                     	;# 
  1439  009B                     	;# 
  1440  009B                     	;# 
  1441  009C                     	;# 
  1442  009D                     	;# 
  1443  009E                     	;# 
  1444  010C                     	;# 
  1445  010D                     	;# 
  1446  010E                     	;# 
  1447  0116                     	;# 
  1448  0117                     	;# 
  1449  011D                     	;# 
  1450  018C                     	;# 
  1451  018D                     	;# 
  1452  018E                     	;# 
  1453  0191                     	;# 
  1454  0191                     	;# 
  1455  0192                     	;# 
  1456  0193                     	;# 
  1457  0193                     	;# 
  1458  0194                     	;# 
  1459  0195                     	;# 
  1460  0196                     	;# 
  1461  0197                     	;# 
  1462  0199                     	;# 
  1463  019A                     	;# 
  1464  019B                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019B                     	;# 
  1468  019C                     	;# 
  1469  019C                     	;# 
  1470  019D                     	;# 
  1471  019E                     	;# 
  1472  019F                     	;# 
  1473  020D                     	;# 
  1474  0210                     	;# 
  1475  0211                     	;# 
  1476  0211                     	;# 
  1477  0212                     	;# 
  1478  0212                     	;# 
  1479  0213                     	;# 
  1480  0213                     	;# 
  1481  0214                     	;# 
  1482  0214                     	;# 
  1483  0215                     	;# 
  1484  0215                     	;# 
  1485  0215                     	;# 
  1486  0216                     	;# 
  1487  0216                     	;# 
  1488  0217                     	;# 
  1489  0217                     	;# 
  1490  0291                     	;# 
  1491  0291                     	;# 
  1492  0292                     	;# 
  1493  0293                     	;# 
  1494  0298                     	;# 
  1495  0298                     	;# 
  1496  0299                     	;# 
  1497  029A                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  0FE4                     	;# 
  1502  0FE5                     	;# 
  1503  0FE6                     	;# 
  1504  0FE7                     	;# 
  1505  0FE8                     	;# 
  1506  0FE9                     	;# 
  1507  0FEA                     	;# 
  1508  0FEB                     	;# 
  1509  0FED                     	;# 
  1510  0FEE                     	;# 
  1511  0FEF                     	;# 
  1512  0000                     	;# 
  1513  0001                     	;# 
  1514  0002                     	;# 
  1515  0003                     	;# 
  1516  0004                     	;# 
  1517  0005                     	;# 
  1518  0006                     	;# 
  1519  0007                     	;# 
  1520  0008                     	;# 
  1521  0009                     	;# 
  1522  000A                     	;# 
  1523  000B                     	;# 
  1524  000C                     	;# 
  1525  000D                     	;# 
  1526  000E                     	;# 
  1527  0010                     	;# 
  1528  0011                     	;# 
  1529  0012                     	;# 
  1530  0015                     	;# 
  1531  0016                     	;# 
  1532  0016                     	;# 
  1533  0017                     	;# 
  1534  0018                     	;# 
  1535  0019                     	;# 
  1536  001A                     	;# 
  1537  001B                     	;# 
  1538  001C                     	;# 
  1539  008C                     	;# 
  1540  008D                     	;# 
  1541  008E                     	;# 
  1542  0090                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0095                     	;# 
  1546  0096                     	;# 
  1547  0097                     	;# 
  1548  0099                     	;# 
  1549  009A                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  010C                     	;# 
  1556  010D                     	;# 
  1557  010E                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  011D                     	;# 
  1561  018C                     	;# 
  1562  018D                     	;# 
  1563  018E                     	;# 
  1564  0191                     	;# 
  1565  0191                     	;# 
  1566  0192                     	;# 
  1567  0193                     	;# 
  1568  0193                     	;# 
  1569  0194                     	;# 
  1570  0195                     	;# 
  1571  0196                     	;# 
  1572  0197                     	;# 
  1573  0199                     	;# 
  1574  019A                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019C                     	;# 
  1580  019C                     	;# 
  1581  019D                     	;# 
  1582  019E                     	;# 
  1583  019F                     	;# 
  1584  020D                     	;# 
  1585  0210                     	;# 
  1586  0211                     	;# 
  1587  0211                     	;# 
  1588  0212                     	;# 
  1589  0212                     	;# 
  1590  0213                     	;# 
  1591  0213                     	;# 
  1592  0214                     	;# 
  1593  0214                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0215                     	;# 
  1597  0216                     	;# 
  1598  0216                     	;# 
  1599  0217                     	;# 
  1600  0217                     	;# 
  1601  0291                     	;# 
  1602  0291                     	;# 
  1603  0292                     	;# 
  1604  0293                     	;# 
  1605  0298                     	;# 
  1606  0298                     	;# 
  1607  0299                     	;# 
  1608  029A                     	;# 
  1609  0394                     	;# 
  1610  0395                     	;# 
  1611  0396                     	;# 
  1612  0FE4                     	;# 
  1613  0FE5                     	;# 
  1614  0FE6                     	;# 
  1615  0FE7                     	;# 
  1616  0FE8                     	;# 
  1617  0FE9                     	;# 
  1618  0FEA                     	;# 
  1619  0FEB                     	;# 
  1620  0FED                     	;# 
  1621  0FEE                     	;# 
  1622  0FEF                     	;# 
  1623  0000                     	;# 
  1624  0001                     	;# 
  1625  0002                     	;# 
  1626  0003                     	;# 
  1627  0004                     	;# 
  1628  0005                     	;# 
  1629  0006                     	;# 
  1630  0007                     	;# 
  1631  0008                     	;# 
  1632  0009                     	;# 
  1633  000A                     	;# 
  1634  000B                     	;# 
  1635  000C                     	;# 
  1636  000D                     	;# 
  1637  000E                     	;# 
  1638  0010                     	;# 
  1639  0011                     	;# 
  1640  0012                     	;# 
  1641  0015                     	;# 
  1642  0016                     	;# 
  1643  0016                     	;# 
  1644  0017                     	;# 
  1645  0018                     	;# 
  1646  0019                     	;# 
  1647  001A                     	;# 
  1648  001B                     	;# 
  1649  001C                     	;# 
  1650  008C                     	;# 
  1651  008D                     	;# 
  1652  008E                     	;# 
  1653  0090                     	;# 
  1654  0091                     	;# 
  1655  0092                     	;# 
  1656  0095                     	;# 
  1657  0096                     	;# 
  1658  0097                     	;# 
  1659  0099                     	;# 
  1660  009A                     	;# 
  1661  009B                     	;# 
  1662  009B                     	;# 
  1663  009C                     	;# 
  1664  009D                     	;# 
  1665  009E                     	;# 
  1666  010C                     	;# 
  1667  010D                     	;# 
  1668  010E                     	;# 
  1669  0116                     	;# 
  1670  0117                     	;# 
  1671  011D                     	;# 
  1672  018C                     	;# 
  1673  018D                     	;# 
  1674  018E                     	;# 
  1675  0191                     	;# 
  1676  0191                     	;# 
  1677  0192                     	;# 
  1678  0193                     	;# 
  1679  0193                     	;# 
  1680  0194                     	;# 
  1681  0195                     	;# 
  1682  0196                     	;# 
  1683  0197                     	;# 
  1684  0199                     	;# 
  1685  019A                     	;# 
  1686  019B                     	;# 
  1687  019B                     	;# 
  1688  019B                     	;# 
  1689  019B                     	;# 
  1690  019C                     	;# 
  1691  019C                     	;# 
  1692  019D                     	;# 
  1693  019E                     	;# 
  1694  019F                     	;# 
  1695  020D                     	;# 
  1696  0210                     	;# 
  1697  0211                     	;# 
  1698  0211                     	;# 
  1699  0212                     	;# 
  1700  0212                     	;# 
  1701  0213                     	;# 
  1702  0213                     	;# 
  1703  0214                     	;# 
  1704  0214                     	;# 
  1705  0215                     	;# 
  1706  0215                     	;# 
  1707  0215                     	;# 
  1708  0216                     	;# 
  1709  0216                     	;# 
  1710  0217                     	;# 
  1711  0217                     	;# 
  1712  0291                     	;# 
  1713  0291                     	;# 
  1714  0292                     	;# 
  1715  0293                     	;# 
  1716  0298                     	;# 
  1717  0298                     	;# 
  1718  0299                     	;# 
  1719  029A                     	;# 
  1720  0394                     	;# 
  1721  0395                     	;# 
  1722  0396                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  0010                     	;# 
  1750  0011                     	;# 
  1751  0012                     	;# 
  1752  0015                     	;# 
  1753  0016                     	;# 
  1754  0016                     	;# 
  1755  0017                     	;# 
  1756  0018                     	;# 
  1757  0019                     	;# 
  1758  001A                     	;# 
  1759  001B                     	;# 
  1760  001C                     	;# 
  1761  008C                     	;# 
  1762  008D                     	;# 
  1763  008E                     	;# 
  1764  0090                     	;# 
  1765  0091                     	;# 
  1766  0092                     	;# 
  1767  0095                     	;# 
  1768  0096                     	;# 
  1769  0097                     	;# 
  1770  0099                     	;# 
  1771  009A                     	;# 
  1772  009B                     	;# 
  1773  009B                     	;# 
  1774  009C                     	;# 
  1775  009D                     	;# 
  1776  009E                     	;# 
  1777  010C                     	;# 
  1778  010D                     	;# 
  1779  010E                     	;# 
  1780  0116                     	;# 
  1781  0117                     	;# 
  1782  011D                     	;# 
  1783  018C                     	;# 
  1784  018D                     	;# 
  1785  018E                     	;# 
  1786  0191                     	;# 
  1787  0191                     	;# 
  1788  0192                     	;# 
  1789  0193                     	;# 
  1790  0193                     	;# 
  1791  0194                     	;# 
  1792  0195                     	;# 
  1793  0196                     	;# 
  1794  0197                     	;# 
  1795  0199                     	;# 
  1796  019A                     	;# 
  1797  019B                     	;# 
  1798  019B                     	;# 
  1799  019B                     	;# 
  1800  019B                     	;# 
  1801  019C                     	;# 
  1802  019C                     	;# 
  1803  019D                     	;# 
  1804  019E                     	;# 
  1805  019F                     	;# 
  1806  020D                     	;# 
  1807  0210                     	;# 
  1808  0211                     	;# 
  1809  0211                     	;# 
  1810  0212                     	;# 
  1811  0212                     	;# 
  1812  0213                     	;# 
  1813  0213                     	;# 
  1814  0214                     	;# 
  1815  0214                     	;# 
  1816  0215                     	;# 
  1817  0215                     	;# 
  1818  0215                     	;# 
  1819  0216                     	;# 
  1820  0216                     	;# 
  1821  0217                     	;# 
  1822  0217                     	;# 
  1823  0291                     	;# 
  1824  0291                     	;# 
  1825  0292                     	;# 
  1826  0293                     	;# 
  1827  0298                     	;# 
  1828  0298                     	;# 
  1829  0299                     	;# 
  1830  029A                     	;# 
  1831  0394                     	;# 
  1832  0395                     	;# 
  1833  0396                     	;# 
  1834  0FE4                     	;# 
  1835  0FE5                     	;# 
  1836  0FE6                     	;# 
  1837  0FE7                     	;# 
  1838  0FE8                     	;# 
  1839  0FE9                     	;# 
  1840  0FEA                     	;# 
  1841  0FEB                     	;# 
  1842  0FED                     	;# 
  1843  0FEE                     	;# 
  1844  0FEF                     	;# 
  1845  0000                     	;# 
  1846  0001                     	;# 
  1847  0002                     	;# 
  1848  0003                     	;# 
  1849  0004                     	;# 
  1850  0005                     	;# 
  1851  0006                     	;# 
  1852  0007                     	;# 
  1853  0008                     	;# 
  1854  0009                     	;# 
  1855  000A                     	;# 
  1856  000B                     	;# 
  1857  000C                     	;# 
  1858  000D                     	;# 
  1859  000E                     	;# 
  1860  0010                     	;# 
  1861  0011                     	;# 
  1862  0012                     	;# 
  1863  0015                     	;# 
  1864  0016                     	;# 
  1865  0016                     	;# 
  1866  0017                     	;# 
  1867  0018                     	;# 
  1868  0019                     	;# 
  1869  001A                     	;# 
  1870  001B                     	;# 
  1871  001C                     	;# 
  1872  008C                     	;# 
  1873  008D                     	;# 
  1874  008E                     	;# 
  1875  0090                     	;# 
  1876  0091                     	;# 
  1877  0092                     	;# 
  1878  0095                     	;# 
  1879  0096                     	;# 
  1880  0097                     	;# 
  1881  0099                     	;# 
  1882  009A                     	;# 
  1883  009B                     	;# 
  1884  009B                     	;# 
  1885  009C                     	;# 
  1886  009D                     	;# 
  1887  009E                     	;# 
  1888  010C                     	;# 
  1889  010D                     	;# 
  1890  010E                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  011D                     	;# 
  1894  018C                     	;# 
  1895  018D                     	;# 
  1896  018E                     	;# 
  1897  0191                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  0193                     	;# 
  1901  0193                     	;# 
  1902  0194                     	;# 
  1903  0195                     	;# 
  1904  0196                     	;# 
  1905  0197                     	;# 
  1906  0199                     	;# 
  1907  019A                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019C                     	;# 
  1913  019C                     	;# 
  1914  019D                     	;# 
  1915  019E                     	;# 
  1916  019F                     	;# 
  1917  020D                     	;# 
  1918  0210                     	;# 
  1919  0211                     	;# 
  1920  0211                     	;# 
  1921  0212                     	;# 
  1922  0212                     	;# 
  1923  0213                     	;# 
  1924  0213                     	;# 
  1925  0214                     	;# 
  1926  0214                     	;# 
  1927  0215                     	;# 
  1928  0215                     	;# 
  1929  0215                     	;# 
  1930  0216                     	;# 
  1931  0216                     	;# 
  1932  0217                     	;# 
  1933  0217                     	;# 
  1934  0291                     	;# 
  1935  0291                     	;# 
  1936  0292                     	;# 
  1937  0293                     	;# 
  1938  0298                     	;# 
  1939  0298                     	;# 
  1940  0299                     	;# 
  1941  029A                     	;# 
  1942  0394                     	;# 
  1943  0395                     	;# 
  1944  0396                     	;# 
  1945  0FE4                     	;# 
  1946  0FE5                     	;# 
  1947  0FE6                     	;# 
  1948  0FE7                     	;# 
  1949  0FE8                     	;# 
  1950  0FE9                     	;# 
  1951  0FEA                     	;# 
  1952  0FEB                     	;# 
  1953  0FED                     	;# 
  1954  0FEE                     	;# 
  1955  0FEF                     	;# 
  1956  0000                     	;# 
  1957  0001                     	;# 
  1958  0002                     	;# 
  1959  0003                     	;# 
  1960  0004                     	;# 
  1961  0005                     	;# 
  1962  0006                     	;# 
  1963  0007                     	;# 
  1964  0008                     	;# 
  1965  0009                     	;# 
  1966  000A                     	;# 
  1967  000B                     	;# 
  1968  000C                     	;# 
  1969  000D                     	;# 
  1970  000E                     	;# 
  1971  0010                     	;# 
  1972  0011                     	;# 
  1973  0012                     	;# 
  1974  0015                     	;# 
  1975  0016                     	;# 
  1976  0016                     	;# 
  1977  0017                     	;# 
  1978  0018                     	;# 
  1979  0019                     	;# 
  1980  001A                     	;# 
  1981  001B                     	;# 
  1982  001C                     	;# 
  1983  008C                     	;# 
  1984  008D                     	;# 
  1985  008E                     	;# 
  1986  0090                     	;# 
  1987  0091                     	;# 
  1988  0092                     	;# 
  1989  0095                     	;# 
  1990  0096                     	;# 
  1991  0097                     	;# 
  1992  0099                     	;# 
  1993  009A                     	;# 
  1994  009B                     	;# 
  1995  009B                     	;# 
  1996  009C                     	;# 
  1997  009D                     	;# 
  1998  009E                     	;# 
  1999  010C                     	;# 
  2000  010D                     	;# 
  2001  010E                     	;# 
  2002  0116                     	;# 
  2003  0117                     	;# 
  2004  011D                     	;# 
  2005  018C                     	;# 
  2006  018D                     	;# 
  2007  018E                     	;# 
  2008  0191                     	;# 
  2009  0191                     	;# 
  2010  0192                     	;# 
  2011  0193                     	;# 
  2012  0193                     	;# 
  2013  0194                     	;# 
  2014  0195                     	;# 
  2015  0196                     	;# 
  2016  0197                     	;# 
  2017  0199                     	;# 
  2018  019A                     	;# 
  2019  019B                     	;# 
  2020  019B                     	;# 
  2021  019B                     	;# 
  2022  019B                     	;# 
  2023  019C                     	;# 
  2024  019C                     	;# 
  2025  019D                     	;# 
  2026  019E                     	;# 
  2027  019F                     	;# 
  2028  020D                     	;# 
  2029  0210                     	;# 
  2030  0211                     	;# 
  2031  0211                     	;# 
  2032  0212                     	;# 
  2033  0212                     	;# 
  2034  0213                     	;# 
  2035  0213                     	;# 
  2036  0214                     	;# 
  2037  0214                     	;# 
  2038  0215                     	;# 
  2039  0215                     	;# 
  2040  0215                     	;# 
  2041  0216                     	;# 
  2042  0216                     	;# 
  2043  0217                     	;# 
  2044  0217                     	;# 
  2045  0291                     	;# 
  2046  0291                     	;# 
  2047  0292                     	;# 
  2048  0293                     	;# 
  2049  0298                     	;# 
  2050  0298                     	;# 
  2051  0299                     	;# 
  2052  029A                     	;# 
  2053  0394                     	;# 
  2054  0395                     	;# 
  2055  0396                     	;# 
  2056  0FE4                     	;# 
  2057  0FE5                     	;# 
  2058  0FE6                     	;# 
  2059  0FE7                     	;# 
  2060  0FE8                     	;# 
  2061  0FE9                     	;# 
  2062  0FEA                     	;# 
  2063  0FEB                     	;# 
  2064  0FED                     	;# 
  2065  0FEE                     	;# 
  2066  0FEF                     	;# 
  2067                           
  2068                           	psect	idataBANK1
  2069  0E95                     __pidataBANK1:	
  2070                           
  2071                           ;initializer for Bq32k_Time_Init@F2009
  2072  0E95  3401               	retlw	1
  2073  0E96  3440               	retlw	64
  2074  0E97  3414               	retlw	20
  2075  0E98  3402               	retlw	2
  2076  0E99  3404               	retlw	4
  2077  0E9A  3407               	retlw	7
  2078  0E9B  3416               	retlw	22
  2079  0E9C  3400               	retlw	0
  2080  0E9D  3400               	retlw	0
  2081  0E9E  3400               	retlw	0
  2082                           
  2083                           	psect	stringtext
  2084  1000                     __pstringtext:	
  2085  1000                     _Dis_TAB:	
  2086  1000  34D7               	retlw	215
  2087  1001  3450               	retlw	80
  2088  1002  34B5               	retlw	181
  2089  1003  34F1               	retlw	241
  2090  1004  3472               	retlw	114
  2091  1005  34E3               	retlw	227
  2092  1006  34E7               	retlw	231
  2093  1007  3451               	retlw	81
  2094  1008  34F7               	retlw	247
  2095  1009  34F3               	retlw	243
  2096  100A  3477               	retlw	119
  2097  100B  34E6               	retlw	230
  2098  100C  3487               	retlw	135
  2099  100D  34F4               	retlw	244
  2100  100E  34A7               	retlw	167
  2101  100F  3427               	retlw	39
  2102  1010  3457               	retlw	87
  2103  1011  3420               	retlw	32
  2104  1012  3420               	retlw	32
  2105  1013  3420               	retlw	32
  2106  1014  3420               	retlw	32
  2107  1015                     __end_of_Dis_TAB:	
  2108                           
  2109                           	psect	nvBANK0
  2110  006E                     __pnvBANK0:	
  2111  006E                     _timer0ReloadVal:	
  2112  006E                     	ds	1
  2113  000B                     _INTCONbits	set	11
  2114  0011                     _PIR1bits	set	17
  2115  0015                     _TMR0	set	21
  2116  0067                     _RA7	set	103
  2117  0069                     _RB1	set	105
  2118  006B                     _RB3	set	107
  2119  006D                     _RB5	set	109
  2120  009D                     _ADCON0	set	157
  2121  009D                     _ADCON0bits	set	157
  2122  009E                     _ADCON1	set	158
  2123  009C                     _ADRESH	set	156
  2124  009B                     _ADRESL	set	155
  2125  0095                     _OPTION_REG	set	149
  2126  0095                     _OPTION_REGbits	set	149
  2127  0099                     _OSCCON	set	153
  2128  009A                     _OSCSTAT	set	154
  2129  008C                     _TRISA	set	140
  2130  008D                     _TRISB	set	141
  2131  008E                     _TRISC	set	142
  2132  0469                     _TRISB1	set	1129
  2133  046B                     _TRISB3	set	1131
  2134  011D                     _APFCON	set	285
  2135  0117                     _FVRCON	set	279
  2136  0117                     _FVRCONbits	set	279
  2137  010C                     _LATA	set	268
  2138  010D                     _LATB	set	269
  2139  010E                     _LATC	set	270
  2140  0860                     _LATA0	set	2144
  2141  0861                     _LATA1	set	2145
  2142  0862                     _LATA2	set	2146
  2143  0863                     _LATA3	set	2147
  2144  0864                     _LATA4	set	2148
  2145  0865                     _LATA5	set	2149
  2146  0868                     _LATB0	set	2152
  2147  0869                     _LATB1	set	2153
  2148  0870                     _LATC0	set	2160
  2149  0871                     _LATC1	set	2161
  2150  0872                     _LATC2	set	2162
  2151  0191                     _PMADR	set	401
  2152  0193                     _PMDAT	set	403
  2153  018C                     _ANSELA	set	396
  2154  018D                     _ANSELB	set	397
  2155  018E                     _ANSELC	set	398
  2156  019F                     _BAUDCON	set	415
  2157  0192                     _PMADRH	set	402
  2158  0191                     _PMADRL	set	401
  2159  0195                     _PMCON1bits	set	405
  2160  0196                     _PMCON2	set	406
  2161  0194                     _PMDATH	set	404
  2162  0193                     _PMDATL	set	403
  2163  0199                     _RCREG	set	409
  2164  019D                     _RCSTA	set	413
  2165  019D                     _RCSTAbits	set	413
  2166  019C                     _SPBRGH	set	412
  2167  019B                     _SPBRGL	set	411
  2168  019A                     _TXREG	set	410
  2169  019E                     _TXSTA	set	414
  2170  0212                     _SSP1ADD	set	530
  2171  0215                     _SSP1CON1	set	533
  2172  0215                     _SSP1CON1bits	set	533
  2173  0214                     _SSP1STAT	set	532
  2174  0214                     _SSP1STATbits	set	532
  2175  0211                     _SSPBUF	set	529
  2176  020D                     _WPUB	set	525
  2177  0210                     _WPUE	set	528
  2178                           
  2179                           ; #config settings
  2180  0000                     
  2181                           	psect	cinit
  2182  0015                     start_initialization:	
  2183  0015                     __initialization:	
  2184                           
  2185                           ; Clear objects allocated to COMMON
  2186  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2187  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2188  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2189                           
  2190                           ; Clear objects allocated to BANK0
  2191  0018  3020               	movlw	low __pbssBANK0
  2192  0019  0084               	movwf	4
  2193  001A  3000               	movlw	high __pbssBANK0
  2194  001B  0085               	movwf	5
  2195  001C  3032               	movlw	50
  2196  001D  318E  267E  3180   	fcall	clear_ram0
  2197                           
  2198                           ; Clear objects allocated to BANK1
  2199  0020  30AA               	movlw	low __pbssBANK1
  2200  0021  0084               	movwf	4
  2201  0022  3000               	movlw	high __pbssBANK1
  2202  0023  0085               	movwf	5
  2203  0024  3007               	movlw	7
  2204  0025  318E  267E  3180   	fcall	clear_ram0
  2205                           
  2206                           ; Clear objects allocated to BANK2
  2207  0028  3020               	movlw	low __pbssBANK2
  2208  0029  0084               	movwf	4
  2209  002A  3001               	movlw	high __pbssBANK2
  2210  002B  0085               	movwf	5
  2211  002C  3040               	movlw	64
  2212  002D  318E  267E  3180   	fcall	clear_ram0
  2213                           
  2214                           ; Initialize objects allocated to BANK1
  2215  0030  3095               	movlw	low __pidataBANK1
  2216  0031  0084               	movwf	4
  2217  0032  308E               	movlw	(high __pidataBANK1)| (0+128)
  2218  0033  0085               	movwf	5
  2219  0034  30A0               	movlw	low __pdataBANK1
  2220  0035  0086               	movwf	6
  2221  0036  3000               	movlw	high __pdataBANK1
  2222  0037  0087               	movwf	7
  2223  0038  300A               	movlw	10
  2224  0039  318E  2678         	fcall	init_ram
  2225  003B                     end_of_initialization:	
  2226                           ;End of C runtime variable initialization code
  2227                           
  2228  003B                     __end_of__initialization:	
  2229  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2230  003C  0020               	movlb	0
  2231  003D  3180  283F         	ljmp	_main	;jump to C main() function
  2232                           
  2233                           	psect	bssCOMMON
  2234  0078                     __pbssCOMMON:	
  2235  0078                     _MAX31856Sec:	
  2236  0078                     	ds	1
  2237  0079                     _uch_cr0:	
  2238  0079                     	ds	1
  2239  007A                     _uch_ltcbh:	
  2240  007A                     	ds	1
  2241                           
  2242                           	psect	bssBANK0
  2243  0020                     __pbssBANK0:	
  2244  0020                     Two_Display@F2114:	
  2245  0020                     	ds	4
  2246  0024                     _temperature_value:	
  2247  0024                     	ds	4
  2248  0028                     err_Display@F2117:	
  2249  0028                     	ds	4
  2250  002C                     time_Display@F2120:	
  2251  002C                     	ds	4
  2252  0030                     _f_cold_junction_temperature:	
  2253  0030                     	ds	3
  2254  0033                     _f_linearized_tc_temperature:	
  2255  0033                     	ds	3
  2256  0036                     TMR0_ISR@CountCallBack:	
  2257  0036                     	ds	2
  2258  0038                     _temperature_int:	
  2259  0038                     	ds	2
  2260  003A                     _LongPressSec:	
  2261  003A                     	ds	1
  2262  003B                     _temperature_decimal:	
  2263  003B                     	ds	1
  2264  003C                     _temperature_sign:	
  2265  003C                     	ds	1
  2266  003D                     _time_count:	
  2267  003D                     	ds	1
  2268  003E                     _tmr_flag:	
  2269  003E                     	ds	1
  2270  003F                     _uch_cjth:	
  2271  003F                     	ds	1
  2272  0040                     _uch_cjtl:	
  2273  0040                     	ds	1
  2274  0041                     _uch_cr1:	
  2275  0041                     	ds	1
  2276  0042                     _uch_ltcbl:	
  2277  0042                     	ds	1
  2278  0043                     _uch_ltcbm:	
  2279  0043                     	ds	1
  2280  0044                     _uch_mask:	
  2281  0044                     	ds	1
  2282  0045                     _uch_sr:	
  2283  0045                     	ds	1
  2284  0046                     _uch_reg:	
  2285  0046                     	ds	8
  2286  004E                     _display_buff:	
  2287  004E                     	ds	4
  2288                           
  2289                           	psect	bssBANK1
  2290  00AA                     __pbssBANK1:	
  2291  00AA                     _tm:	
  2292  00AA                     	ds	7
  2293                           
  2294                           	psect	dataBANK1
  2295  00A0                     __pdataBANK1:	
  2296  00A0                     Bq32k_Time_Init@F2009:	
  2297  00A0                     	ds	10
  2298                           
  2299                           	psect	bssBANK2
  2300  0120                     __pbssBANK2:	
  2301  0120                     _s:	
  2302  0120                     	ds	64
  2303                           
  2304                           	psect	clrtext
  2305  0E7E                     clear_ram0:	
  2306                           ;	Called with FSR0 containing the base address, and
  2307                           ;	WREG with the size to clear
  2308                           
  2309  0E7E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2310  0E7F                     clrloop0:	
  2311  0E7F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2312  0E80  3101               	addfsr 0,1
  2313  0E81  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2314  0E82  2E7F               	goto	clrloop0	;have we reached the end yet?
  2315  0E83  3400               	retlw	0	;all done for this memory range, return
  2316                           
  2317                           	psect	inittext
  2318  0E78                     init_ram:	
  2319  0E78  00FE               	movwf	126
  2320  0E79                     initloop:	
  2321  0E79  0012               	moviw fsr0++
  2322  0E7A  001E               	movwi fsr1++
  2323  0E7B  0BFE               	decfsz	126,f
  2324  0E7C  2E79               	goto	initloop
  2325  0E7D  3400               	retlw	0
  2326                           
  2327                           	psect	cstackBANK1
  2328  00B1                     __pcstackBANK1:	
  2329  00B1                     main@i:	
  2330                           
  2331                           ; 1 bytes @ 0x0
  2332  00B1                     	ds	1
  2333  00B2                     main@bat_data:	
  2334                           
  2335                           ; 2 bytes @ 0x1
  2336  00B2                     	ds	2
  2337                           
  2338                           	psect	cstackCOMMON
  2339  0070                     __pcstackCOMMON:	
  2340  0070                     ?_OSCILLATOR_Initialize:	
  2341  0070                     ?_SPI_Initialize:	
  2342                           ; 1 bytes @ 0x0
  2343                           
  2344  0070                     ?_EUSART_Initialize:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0070                     ?_ADC_Initialize:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0070                     ?_TMR0_Initialize:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0070                     ?_FVR_Initialize:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0070                     ?_TMR0_CallBack:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0070                     ??_TMR0_CallBack:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0070                     ?_maxim_31856_init:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0070                     ?_Bq32k_Time_Init:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0070                     ?_SendCmd_1621:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0070                     ?_temperature_process:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?_Tc_Display:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0070                     ?_err_Display:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0070                     ?_Two_Display:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0070                     ?_time_Display:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0070                     ?_Bq32k_Rtc_Read_Time:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0070                     ?_bcd2bin:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0070                     ?_PIN_MANAGER_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0070                     ?_SYSTEM_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0070                     ?_SPI_Exchange8bit:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0070                     ?_TMR0_ISR:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0070                     ?_INTERRUPT_InterruptManager:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0070                     ?_main:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0070                     ?_maxim_31856_read_register:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0070                     ?_maxim_start_conversion:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0070                     ?_maxim_clear_fault_status:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0070                     ?_tc_temperature_trans:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0070                     ?_one_temperature_trans:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0070                     ?_temperature_display:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0070                     ?_I2C_Start:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0070                     ?_I2C_Send_Byte:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0070                     ?_I2C_Receive_Byte:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0070                     ?_I2C_Stop:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0070                     ?_Key_Scan:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0070                     ?_Key_Process:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446                           
  2447                           ; 2 bytes @ 0x0
  2448  0070                     	ds	1
  2449  0071                     ??_TMR0_ISR:	
  2450                           
  2451                           ; 1 bytes @ 0x1
  2452  0071                     	ds	1
  2453  0072                     ??_INTERRUPT_InterruptManager:	
  2454                           
  2455                           ; 1 bytes @ 0x2
  2456  0072                     	ds	1
  2457  0073                     ??_OSCILLATOR_Initialize:	
  2458  0073                     ??_SPI_Initialize:	
  2459                           ; 1 bytes @ 0x3
  2460                           
  2461  0073                     ??_EUSART_Initialize:	
  2462                           ; 1 bytes @ 0x3
  2463                           
  2464  0073                     ??_ADC_Initialize:	
  2465                           ; 1 bytes @ 0x3
  2466                           
  2467  0073                     ??_TMR0_Initialize:	
  2468                           ; 1 bytes @ 0x3
  2469                           
  2470  0073                     ??_FVR_Initialize:	
  2471                           ; 1 bytes @ 0x3
  2472                           
  2473  0073                     ?_memset:	
  2474                           ; 1 bytes @ 0x3
  2475                           
  2476  0073                     ??_PIN_MANAGER_Initialize:	
  2477                           ; 1 bytes @ 0x3
  2478                           
  2479  0073                     ??_SPI_Exchange8bit:	
  2480                           ; 1 bytes @ 0x3
  2481                           
  2482  0073                     ?_SendBit_1621:	
  2483                           ; 1 bytes @ 0x3
  2484                           
  2485  0073                     ?_SendDataBit_1621:	
  2486                           ; 1 bytes @ 0x3
  2487                           
  2488  0073                     ??_I2C_Start:	
  2489                           ; 1 bytes @ 0x3
  2490                           
  2491  0073                     ??_I2C_Send_Byte:	
  2492                           ; 1 bytes @ 0x3
  2493                           
  2494  0073                     ??_I2C_Receive_Byte:	
  2495                           ; 1 bytes @ 0x3
  2496                           
  2497  0073                     ??_I2C_Stop:	
  2498                           ; 1 bytes @ 0x3
  2499                           
  2500  0073                     ??_Key_Scan:	
  2501                           ; 1 bytes @ 0x3
  2502                           
  2503  0073                     ?___bmul:	
  2504                           ; 1 bytes @ 0x3
  2505                           
  2506  0073                     ?_ADC_GetConversion:	
  2507                           ; 1 bytes @ 0x3
  2508                           
  2509  0073                     ?___awdiv:	
  2510                           ; 2 bytes @ 0x3
  2511                           
  2512  0073                     ?___awmod:	
  2513                           ; 2 bytes @ 0x3
  2514                           
  2515  0073                     ?___lwmod:	
  2516                           ; 2 bytes @ 0x3
  2517                           
  2518  0073                     SPI_Exchange8bit@data:	
  2519                           ; 2 bytes @ 0x3
  2520                           
  2521  0073                     SendBit_1621@cnt:	
  2522                           ; 1 bytes @ 0x3
  2523                           
  2524  0073                     SendDataBit_1621@cnt:	
  2525                           ; 1 bytes @ 0x3
  2526                           
  2527  0073                     ___bmul@multiplicand:	
  2528                           ; 1 bytes @ 0x3
  2529                           
  2530  0073                     ___awdiv@divisor:	
  2531                           ; 1 bytes @ 0x3
  2532                           
  2533  0073                     ___awmod@divisor:	
  2534                           ; 2 bytes @ 0x3
  2535                           
  2536  0073                     ___lwmod@divisor:	
  2537                           ; 2 bytes @ 0x3
  2538                           
  2539  0073                     memset@c:	
  2540                           ; 2 bytes @ 0x3
  2541                           
  2542                           
  2543                           ; 2 bytes @ 0x3
  2544  0073                     	ds	1
  2545  0074                     ??_SYSTEM_Initialize:	
  2546  0074                     ?_SPI_Exchange8bitBuffer:	
  2547                           ; 1 bytes @ 0x4
  2548                           
  2549  0074                     ?_maxim_31856_write_register:	
  2550                           ; 1 bytes @ 0x4
  2551                           
  2552  0074                     ??_maxim_31856_read_register:	
  2553                           ; 1 bytes @ 0x4
  2554                           
  2555  0074                     ??_SendBit_1621:	
  2556                           ; 1 bytes @ 0x4
  2557                           
  2558  0074                     ??_SendDataBit_1621:	
  2559                           ; 1 bytes @ 0x4
  2560                           
  2561  0074                     ??___bmul:	
  2562                           ; 1 bytes @ 0x4
  2563                           
  2564  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2565                           ; 1 bytes @ 0x4
  2566                           
  2567  0074                     maxim_31856_write_register@uch_register_value:	
  2568                           ; 1 bytes @ 0x4
  2569                           
  2570  0074                     I2C_Send_Byte@Data:	
  2571                           ; 1 bytes @ 0x4
  2572                           
  2573  0074                     I2C_Receive_Byte@Data:	
  2574                           ; 1 bytes @ 0x4
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0x4
  2578  0074                     	ds	1
  2579  0075                     ??_ADC_GetConversion:	
  2580  0075                     ??_maxim_31856_write_register:	
  2581                           ; 1 bytes @ 0x5
  2582                           
  2583  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2584                           ; 1 bytes @ 0x5
  2585                           
  2586  0075                     maxim_31856_write_register@uch_register_address:	
  2587                           ; 1 bytes @ 0x5
  2588                           
  2589  0075                     maxim_31856_read_register@uch_register_address:	
  2590                           ; 1 bytes @ 0x5
  2591                           
  2592  0075                     I2C_Send_Byte@i:	
  2593                           ; 1 bytes @ 0x5
  2594                           
  2595  0075                     I2C_Receive_Byte@i:	
  2596                           ; 1 bytes @ 0x5
  2597                           
  2598  0075                     Key_Scan@Key_val:	
  2599                           ; 1 bytes @ 0x5
  2600                           
  2601  0075                     ___bmul@product:	
  2602                           ; 1 bytes @ 0x5
  2603                           
  2604  0075                     ___awdiv@dividend:	
  2605                           ; 1 bytes @ 0x5
  2606                           
  2607  0075                     ___awmod@dividend:	
  2608                           ; 2 bytes @ 0x5
  2609                           
  2610  0075                     ___lwmod@dividend:	
  2611                           ; 2 bytes @ 0x5
  2612                           
  2613  0075                     memset@n:	
  2614                           ; 2 bytes @ 0x5
  2615                           
  2616                           
  2617                           ; 2 bytes @ 0x5
  2618  0075                     	ds	1
  2619  0076                     ??_maxim_31856_init:	
  2620  0076                     ?_I2C_Read_Buffer:	
  2621                           ; 1 bytes @ 0x6
  2622                           
  2623  0076                     ?_I2C_Send_Buffer:	
  2624                           ; 1 bytes @ 0x6
  2625                           
  2626  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2627                           ; 1 bytes @ 0x6
  2628                           
  2629  0076                     ADC_GetConversion@channel:	
  2630                           ; 1 bytes @ 0x6
  2631                           
  2632  0076                     maxim_31856_read_register@uch_register_data:	
  2633                           ; 1 bytes @ 0x6
  2634                           
  2635  0076                     SendBit_1621@data:	
  2636                           ; 1 bytes @ 0x6
  2637                           
  2638  0076                     SendDataBit_1621@data:	
  2639                           ; 1 bytes @ 0x6
  2640                           
  2641  0076                     I2C_Read_Buffer@buff:	
  2642                           ; 1 bytes @ 0x6
  2643                           
  2644  0076                     I2C_Send_Buffer@buff:	
  2645                           ; 1 bytes @ 0x6
  2646                           
  2647  0076                     ___bmul@multiplier:	
  2648                           ; 1 bytes @ 0x6
  2649                           
  2650                           
  2651                           ; 1 bytes @ 0x6
  2652  0076                     	ds	1
  2653  0077                     ??_memset:	
  2654  0077                     ??_maxim_start_conversion:	
  2655                           ; 1 bytes @ 0x7
  2656                           
  2657  0077                     ??_maxim_clear_fault_status:	
  2658                           ; 1 bytes @ 0x7
  2659                           
  2660  0077                     ??___awdiv:	
  2661                           ; 1 bytes @ 0x7
  2662                           
  2663  0077                     ??___awmod:	
  2664                           ; 1 bytes @ 0x7
  2665                           
  2666  0077                     ??___lwmod:	
  2667                           ; 1 bytes @ 0x7
  2668                           
  2669  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2670                           ; 1 bytes @ 0x7
  2671                           
  2672  0077                     SendBit_1621@i:	
  2673                           ; 1 bytes @ 0x7
  2674                           
  2675  0077                     SendDataBit_1621@i:	
  2676                           ; 1 bytes @ 0x7
  2677                           
  2678  0077                     I2C_Read_Buffer@Length:	
  2679                           ; 1 bytes @ 0x7
  2680                           
  2681  0077                     I2C_Send_Buffer@Length:	
  2682                           ; 1 bytes @ 0x7
  2683                           
  2684  0077                     bcd2bin@val:	
  2685                           ; 1 bytes @ 0x7
  2686                           
  2687                           
  2688                           ; 1 bytes @ 0x7
  2689  0077                     	ds	1
  2690  0078                     ??_temperature_process:	
  2691                           
  2692                           	psect	cstackBANK0
  2693  0052                     __pcstackBANK0:	
  2694                           ; 1 bytes @ 0x8
  2695                           
  2696  0052                     ??_SendCmd_1621:	
  2697  0052                     ?_WriteAll_1621:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0052                     ??_bcd2bin:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703  0052                     ??_SPI_Exchange8bitBuffer:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706  0052                     ??_tc_temperature_trans:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709  0052                     ??_I2C_Read_Buffer:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712  0052                     ??_I2C_Send_Buffer:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715  0052                     maxim_start_conversion@uch_conversion_mode:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718  0052                     ___awdiv@counter:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721  0052                     ___awmod@counter:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724  0052                     ___lwmod@counter:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0052                     memset@p1:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730  0052                     WriteAll_1621@p:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733                           
  2734                           ; 2 bytes @ 0x0
  2735  0052                     	ds	1
  2736  0053                     ?___lwdiv:	
  2737  0053                     SendCmd_1621@command:	
  2738                           ; 2 bytes @ 0x1
  2739                           
  2740  0053                     I2C_Read_Buffer@ADD:	
  2741                           ; 1 bytes @ 0x1
  2742                           
  2743  0053                     ___awdiv@sign:	
  2744                           ; 1 bytes @ 0x1
  2745                           
  2746  0053                     ___awmod@sign:	
  2747                           ; 1 bytes @ 0x1
  2748                           
  2749  0053                     memset@p:	
  2750                           ; 1 bytes @ 0x1
  2751                           
  2752  0053                     ___lwdiv@divisor:	
  2753                           ; 1 bytes @ 0x1
  2754                           
  2755                           
  2756                           ; 2 bytes @ 0x1
  2757  0053                     	ds	1
  2758  0054                     WriteAll_1621@cnt:	
  2759  0054                     I2C_Read_Buffer@Flag:	
  2760                           ; 1 bytes @ 0x2
  2761                           
  2762  0054                     I2C_Send_Buffer@ADD:	
  2763                           ; 1 bytes @ 0x2
  2764                           
  2765  0054                     ___awdiv@quotient:	
  2766                           ; 1 bytes @ 0x2
  2767                           
  2768                           
  2769                           ; 2 bytes @ 0x2
  2770  0054                     	ds	1
  2771  0055                     ??_WriteAll_1621:	
  2772  0055                     ??_Bq32k_Rtc_Read_Time:	
  2773                           ; 1 bytes @ 0x3
  2774                           
  2775  0055                     ?_maxim_31856_read_nregisters:	
  2776                           ; 1 bytes @ 0x3
  2777                           
  2778  0055                     maxim_31856_read_nregisters@uch_buff:	
  2779                           ; 1 bytes @ 0x3
  2780                           
  2781  0055                     I2C_Send_Buffer@i:	
  2782                           ; 1 bytes @ 0x3
  2783                           
  2784  0055                     ___lwdiv@dividend:	
  2785                           ; 1 bytes @ 0x3
  2786                           
  2787                           
  2788                           ; 2 bytes @ 0x3
  2789  0055                     	ds	1
  2790  0056                     maxim_31856_read_nregisters@uch_nBytes:	
  2791  0056                     WriteAll_1621@addr:	
  2792                           ; 1 bytes @ 0x4
  2793                           
  2794  0056                     I2C_Send_Buffer@Flag:	
  2795                           ; 1 bytes @ 0x4
  2796                           
  2797                           
  2798                           ; 1 bytes @ 0x4
  2799  0056                     	ds	1
  2800  0057                     ??_Bq32k_Time_Init:	
  2801  0057                     ??_maxim_31856_read_nregisters:	
  2802                           ; 1 bytes @ 0x5
  2803                           
  2804  0057                     ??___lwdiv:	
  2805                           ; 1 bytes @ 0x5
  2806                           
  2807  0057                     WriteAll_1621@i:	
  2808                           ; 1 bytes @ 0x5
  2809                           
  2810  0057                     Bq32k_Rtc_Read_Time@temp:	
  2811                           ; 1 bytes @ 0x5
  2812                           
  2813                           
  2814                           ; 10 bytes @ 0x5
  2815  0057                     	ds	1
  2816  0058                     ??_err_Display:	
  2817  0058                     ??_Two_Display:	
  2818                           ; 1 bytes @ 0x6
  2819                           
  2820  0058                     ___lwdiv@counter:	
  2821                           ; 1 bytes @ 0x6
  2822                           
  2823                           
  2824                           ; 1 bytes @ 0x6
  2825  0058                     	ds	1
  2826  0059                     maxim_31856_read_nregisters@uch_register_address:	
  2827  0059                     ___lwdiv@quotient:	
  2828                           ; 1 bytes @ 0x7
  2829                           
  2830  0059                     Two_Display@num:	
  2831                           ; 2 bytes @ 0x7
  2832                           
  2833  0059                     err_Display@num:	
  2834                           ; 4 bytes @ 0x7
  2835                           
  2836  0059                     Bq32k_Time_Init@temp:	
  2837                           ; 4 bytes @ 0x7
  2838                           
  2839                           
  2840                           ; 10 bytes @ 0x7
  2841  0059                     	ds	1
  2842  005A                     ??_one_temperature_trans:	
  2843                           
  2844                           ; 1 bytes @ 0x8
  2845  005A                     	ds	1
  2846  005B                     ??_Tc_Display:	
  2847                           
  2848                           ; 1 bytes @ 0x9
  2849  005B                     	ds	1
  2850  005C                     Tc_Display@count:	
  2851                           
  2852                           ; 1 bytes @ 0xA
  2853  005C                     	ds	1
  2854  005D                     Two_Display@number:	
  2855  005D                     Tc_Display@data:	
  2856                           ; 1 bytes @ 0xB
  2857                           
  2858                           
  2859                           ; 2 bytes @ 0xB
  2860  005D                     	ds	2
  2861  005F                     ??_temperature_display:	
  2862                           
  2863                           ; 1 bytes @ 0xD
  2864  005F                     	ds	2
  2865  0061                     Bq32k_Rtc_Read_Time@p:	
  2866                           
  2867                           ; 1 bytes @ 0xF
  2868  0061                     	ds	1
  2869  0062                     ??_time_Display:	
  2870                           
  2871                           ; 1 bytes @ 0x10
  2872  0062                     	ds	3
  2873  0065                     time_Display@num:	
  2874                           
  2875                           ; 4 bytes @ 0x13
  2876  0065                     	ds	4
  2877  0069                     ??_Key_Process:	
  2878                           
  2879                           ; 1 bytes @ 0x17
  2880  0069                     	ds	1
  2881  006A                     Key_Process@gKeyValue:	
  2882                           
  2883                           ; 1 bytes @ 0x18
  2884  006A                     	ds	1
  2885  006B                     ??_main:	
  2886                           
  2887                           ; 1 bytes @ 0x19
  2888  006B                     	ds	3
  2889                           
  2890                           	psect	maintext
  2891  003F                     __pmaintext:	
  2892 ;;
  2893 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2894 ;;
  2895 ;; *************** function _main *****************
  2896 ;; Defined at:
  2897 ;;		line 65 in file "main.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  bat_data        2    1[BANK1 ] unsigned int 
  2902 ;;  i               1    0[BANK1 ] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : B1F/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;Total ram usage:        6 bytes
  2917 ;; Hardware stack levels required when called:    9
  2918 ;; This function calls:
  2919 ;;		_ADC_GetConversion
  2920 ;;		_Bq32k_Time_Init
  2921 ;;		_Key_Process
  2922 ;;		_SYSTEM_Initialize
  2923 ;;		_SendCmd_1621
  2924 ;;		_WriteAll_1621
  2925 ;;		_maxim_31856_init
  2926 ;;		_temperature_process
  2927 ;; This function is called by:
  2928 ;;		Startup code after reset
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _main
  2934  003F                     _main:	
  2935                           
  2936                           ;main.c: 67: unsigned char i=0;
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2940  003F  0021               	movlb	1	; select bank1
  2941  0040  01B1               	clrf	main@i^(0+128)
  2942                           
  2943                           ;main.c: 69: unsigned int bat_data = 0;
  2944  0041  01B2               	clrf	main@bat_data^(0+128)
  2945  0042  01B3               	clrf	(main@bat_data+1)^(0+128)
  2946                           
  2947                           ;main.c: 71: SYSTEM_Initialize();
  2948  0043  318F  2721  3180   	fcall	_SYSTEM_Initialize
  2949                           
  2950                           ;main.c: 72: _delay((unsigned long)((3000)*(16000000/4000.0)));
  2951  0046  303D               	movlw	61
  2952  0047  0020               	movlb	0	; select bank0
  2953  0048  00ED               	movwf	??_main+2
  2954  0049  30E1               	movlw	225
  2955  004A  00EC               	movwf	??_main+1
  2956  004B  307A               	movlw	122
  2957  004C  00EB               	movwf	??_main
  2958  004D                     u3487:	
  2959  004D  0BEB               	decfsz	??_main,f
  2960  004E  284D               	goto	u3487
  2961  004F  0BEC               	decfsz	??_main+1,f
  2962  0050  284D               	goto	u3487
  2963  0051  0BED               	decfsz	??_main+2,f
  2964  0052  284D               	goto	u3487
  2965  0053  3200               	nop2
  2966                           
  2967                           ;main.c: 73: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  2968  0054  0020               	movlb	0	; select bank0
  2969  0055  1A8D               	btfsc	13,5	;volatile
  2970  0056  285A               	goto	l332
  2971  0057  0022               	movlb	2	; select bank2
  2972  0058  150C               	bsf	12,2	;volatile
  2973  0059  285C               	goto	l334
  2974  005A                     l332:	
  2975                           ;main.c: 74: else do { LATA2 = 0; } while(0);
  2976                           
  2977  005A  0022               	movlb	2	; select bank2
  2978  005B  110C               	bcf	12,2	;volatile
  2979  005C                     l334:	
  2980                           ;main.c: 75: do { LATA3 = 0; } while(0);
  2981                           
  2982  005C  118C               	bcf	12,3	;volatile
  2983                           
  2984                           ;main.c: 78: bat_data = 0;
  2985  005D  0021               	movlb	1	; select bank1
  2986  005E  01B2               	clrf	main@bat_data^(0+128)
  2987  005F  01B3               	clrf	(main@bat_data+1)^(0+128)
  2988                           
  2989                           ;main.c: 79: for(i=0;i<16;i++)
  2990  0060  01B1               	clrf	main@i^(0+128)
  2991  0061  3010               	movlw	16
  2992  0062  0231               	subwf	main@i^(0+128),w
  2993  0063  1803               	btfsc	3,0
  2994  0064  287A               	goto	l4059
  2995  0065                     l4053:	
  2996                           
  2997                           ;main.c: 80: {
  2998                           ;main.c: 81: bat_data = bat_data + ADC_GetConversion(ADC);
  2999  0065  300B               	movlw	11
  3000  0066  318F  27B1  3180   	fcall	_ADC_GetConversion
  3001  0069  0021               	movlb	1	; select bank1
  3002  006A  0832               	movf	main@bat_data^(0+128),w
  3003  006B  0773               	addwf	?_ADC_GetConversion,w
  3004  006C  00B2               	movwf	main@bat_data^(0+128)
  3005  006D  0833               	movf	(main@bat_data+1)^(0+128),w
  3006  006E  3D74               	addwfc	?_ADC_GetConversion+1,w
  3007  006F  00B3               	movwf	(main@bat_data+1)^(0+128)
  3008  0070  3001               	movlw	1
  3009  0071  0020               	movlb	0	; select bank0
  3010  0072  00EB               	movwf	??_main
  3011  0073  086B               	movf	??_main,w
  3012  0074  0021               	movlb	1	; select bank1
  3013  0075  07B1               	addwf	main@i^(0+128),f
  3014  0076  3010               	movlw	16
  3015  0077  0231               	subwf	main@i^(0+128),w
  3016  0078  1C03               	skipc
  3017  0079  2865               	goto	l4053
  3018  007A                     l4059:	
  3019                           
  3020                           ;main.c: 82: }
  3021                           ;main.c: 83: bat_data = bat_data>>4;
  3022  007A  0E32               	swapf	main@bat_data^(0+128),w
  3023  007B  390F               	andlw	15
  3024  007C  00B2               	movwf	main@bat_data^(0+128)
  3025  007D  0E33               	swapf	(main@bat_data+1)^(0+128),w
  3026  007E  39F0               	andlw	240
  3027  007F  04B2               	iorwf	main@bat_data^(0+128),f
  3028  0080  0E33               	swapf	(main@bat_data+1)^(0+128),w
  3029  0081  390F               	andlw	15
  3030  0082  00B3               	movwf	(main@bat_data^(0+128)+1)
  3031                           
  3032                           ;main.c: 84: if( bat_data < 800)
  3033  0083  3003               	movlw	3
  3034  0084  0233               	subwf	(main@bat_data+1)^(0+128),w
  3035  0085  3020               	movlw	32
  3036  0086  1903               	skipnz
  3037  0087  0232               	subwf	main@bat_data^(0+128),w
  3038  0088  1803               	skipnc
  3039  0089  288D               	goto	l4063
  3040                           
  3041                           ;main.c: 85: {
  3042                           ;main.c: 86: do { LATA2 = 0; } while(0);
  3043  008A  0022               	movlb	2	; select bank2
  3044  008B  110C               	bcf	12,2	;volatile
  3045  008C                     l341:	
  3046                           ;main.c: 87: while(1);
  3047                           
  3048  008C  288C               	goto	l341
  3049  008D                     l4063:	
  3050                           
  3051                           ;main.c: 88: }
  3052                           ;main.c: 89: i = 0 ;
  3053  008D  0021               	movlb	1	; select bank1
  3054  008E  01B1               	clrf	main@i^(0+128)
  3055                           
  3056                           ;main.c: 90: bat_data = 0 ;
  3057  008F  01B2               	clrf	main@bat_data^(0+128)
  3058  0090  01B3               	clrf	(main@bat_data+1)^(0+128)
  3059                           
  3060                           ;main.c: 93: maxim_31856_init();
  3061  0091  3183  2344  3180   	fcall	_maxim_31856_init
  3062                           
  3063                           ;main.c: 94: do { TRISB3 = 1; } while(0);
  3064  0094  0021               	movlb	1	; select bank1
  3065  0095  158D               	bsf	13,3	;volatile
  3066                           
  3067                           ;main.c: 95: Bq32k_Time_Init();
  3068  0096  318F  27E5  3180   	fcall	_Bq32k_Time_Init
  3069                           
  3070                           ;main.c: 96: SendCmd_1621(0x52);
  3071  0099  3052               	movlw	82
  3072  009A  318F  2736  3180   	fcall	_SendCmd_1621
  3073                           
  3074                           ;main.c: 97: SendCmd_1621(0X28);
  3075  009D  3028               	movlw	40
  3076  009E  318F  2736  3180   	fcall	_SendCmd_1621
  3077                           
  3078                           ;main.c: 98: SendCmd_1621(0x02);
  3079  00A1  3002               	movlw	2
  3080  00A2  318F  2736  3180   	fcall	_SendCmd_1621
  3081                           
  3082                           ;main.c: 99: SendCmd_1621(0x06);
  3083  00A5  3006               	movlw	6
  3084  00A6  318F  2736  3180   	fcall	_SendCmd_1621
  3085                           
  3086                           ;main.c: 101: WriteAll_1621(0,Dis_TAB+17,4);
  3087  00A9  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3088  00AA  0020               	movlb	0	; select bank0
  3089  00AB  00D2               	movwf	WriteAll_1621@p
  3090  00AC  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3091  00AD  00D3               	movwf	WriteAll_1621@p+1
  3092  00AE  3004               	movlw	4
  3093  00AF  00EB               	movwf	??_main
  3094  00B0  086B               	movf	??_main,w
  3095  00B1  00D4               	movwf	WriteAll_1621@cnt
  3096  00B2  3000               	movlw	0
  3097  00B3  3186  2630  3180   	fcall	_WriteAll_1621
  3098                           
  3099                           ;main.c: 103: time_count = 0;
  3100  00B6  0020               	movlb	0	; select bank0
  3101  00B7  01BD               	clrf	_time_count
  3102                           
  3103                           ;main.c: 104: bat_data = 0;
  3104  00B8  0021               	movlb	1	; select bank1
  3105  00B9  01B2               	clrf	main@bat_data^(0+128)
  3106  00BA  01B3               	clrf	(main@bat_data+1)^(0+128)
  3107                           
  3108                           ;main.c: 121: (INTCONbits.GIE = 1);
  3109  00BB  178B               	bsf	11,7	;volatile
  3110                           
  3111                           ;main.c: 124: (INTCONbits.PEIE = 1);
  3112  00BC  170B               	bsf	11,6	;volatile
  3113  00BD                     l4089:	
  3114                           ;main.c: 132: while (1)
  3115                           
  3116                           
  3117                           ;main.c: 133: {
  3118                           ;main.c: 137: bat_data = bat_data + ADC_GetConversion(ADC);
  3119  00BD  300B               	movlw	11
  3120  00BE  318F  27B1  3180   	fcall	_ADC_GetConversion
  3121  00C1  0021               	movlb	1	; select bank1
  3122  00C2  0832               	movf	main@bat_data^(0+128),w
  3123  00C3  0773               	addwf	?_ADC_GetConversion,w
  3124  00C4  00B2               	movwf	main@bat_data^(0+128)
  3125  00C5  0833               	movf	(main@bat_data+1)^(0+128),w
  3126  00C6  3D74               	addwfc	?_ADC_GetConversion+1,w
  3127  00C7  00B3               	movwf	(main@bat_data+1)^(0+128)
  3128                           
  3129                           ;main.c: 138: i++;
  3130  00C8  3001               	movlw	1
  3131  00C9  0020               	movlb	0	; select bank0
  3132  00CA  00EB               	movwf	??_main
  3133  00CB  086B               	movf	??_main,w
  3134  00CC  0021               	movlb	1	; select bank1
  3135  00CD  07B1               	addwf	main@i^(0+128),f
  3136                           
  3137                           ;main.c: 139: if(i == 16)
  3138  00CE  3010               	movlw	16
  3139  00CF  0631               	xorwf	main@i^(0+128),w
  3140  00D0  1D03               	btfss	3,2
  3141  00D1  28E9               	goto	l4103
  3142                           
  3143                           ;main.c: 140: {
  3144                           ;main.c: 141: i = 0;
  3145  00D2  01B1               	clrf	main@i^(0+128)
  3146                           
  3147                           ;main.c: 142: bat_data = bat_data>>4;
  3148  00D3  0E32               	swapf	main@bat_data^(0+128),w
  3149  00D4  390F               	andlw	15
  3150  00D5  00B2               	movwf	main@bat_data^(0+128)
  3151  00D6  0E33               	swapf	(main@bat_data+1)^(0+128),w
  3152  00D7  39F0               	andlw	240
  3153  00D8  04B2               	iorwf	main@bat_data^(0+128),f
  3154  00D9  0E33               	swapf	(main@bat_data+1)^(0+128),w
  3155  00DA  390F               	andlw	15
  3156  00DB  00B3               	movwf	(main@bat_data^(0+128)+1)
  3157                           
  3158                           ;main.c: 143: if( bat_data < 800)
  3159  00DC  3003               	movlw	3
  3160  00DD  0233               	subwf	(main@bat_data+1)^(0+128),w
  3161  00DE  3020               	movlw	32
  3162  00DF  1903               	skipnz
  3163  00E0  0232               	subwf	main@bat_data^(0+128),w
  3164  00E1  1803               	skipnc
  3165  00E2  28E6               	goto	l4101
  3166                           
  3167                           ;main.c: 144: {
  3168                           ;main.c: 145: do { LATA2 = 0; } while(0);
  3169  00E3  0022               	movlb	2	; select bank2
  3170  00E4  110C               	bcf	12,2	;volatile
  3171  00E5                     l351:	
  3172                           ;main.c: 146: while(1);
  3173                           
  3174  00E5  28E5               	goto	l351
  3175  00E6                     l4101:	
  3176                           
  3177                           ;main.c: 147: }
  3178                           ;main.c: 148: bat_data = 0;
  3179  00E6  0021               	movlb	1	; select bank1
  3180  00E7  01B2               	clrf	main@bat_data^(0+128)
  3181  00E8  01B3               	clrf	(main@bat_data+1)^(0+128)
  3182  00E9                     l4103:	
  3183                           
  3184                           ;main.c: 149: }
  3185                           ;main.c: 154: temperature_process();
  3186  00E9  3186  2665  3180   	fcall	_temperature_process
  3187                           
  3188                           ;main.c: 155: Key_Process();
  3189  00EC  3184  24FB  3180   	fcall	_Key_Process
  3190  00EF  28BD               	goto	l4089
  3191  00F0                     __end_of_main:	
  3192                           
  3193                           	psect	text1
  3194  0344                     __ptext1:	
  3195 ;; *************** function _maxim_31856_init *****************
  3196 ;; Defined at:
  3197 ;;		line 63 in file "mcc_generated_files/max31856.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;Total ram usage:        1 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    5
  3218 ;; This function calls:
  3219 ;;		_maxim_31856_write_register
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function _maxim_31856_init
  3227  0344                     _maxim_31856_init:	
  3228                           
  3229                           ;max31856.c: 66: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3233  0344  3015               	movlw	21
  3234  0345  00F6               	movwf	??_maxim_31856_init
  3235  0346  0876               	movf	??_maxim_31856_init,w
  3236  0347  00F9               	movwf	_uch_cr0
  3237                           
  3238                           ;max31856.c: 68: uch_cr1&= (uint8_t) 0x0F ;
  3239  0348  300F               	movlw	15
  3240  0349  00F6               	movwf	??_maxim_31856_init
  3241  034A  0876               	movf	??_maxim_31856_init,w
  3242  034B  0020               	movlb	0	; select bank0
  3243  034C  05C1               	andwf	_uch_cr1,f
  3244                           
  3245                           ;max31856.c: 69: uch_cr1|=(uint8_t) 0x07;
  3246  034D  3007               	movlw	7
  3247  034E  00F6               	movwf	??_maxim_31856_init
  3248  034F  0876               	movf	??_maxim_31856_init,w
  3249  0350  04C1               	iorwf	_uch_cr1,f
  3250                           
  3251                           ;max31856.c: 71: uch_mask=(uint8_t)0x00 ;
  3252  0351  01C4               	clrf	_uch_mask
  3253                           
  3254                           ;max31856.c: 73: maxim_31856_write_register(0x80, uch_cr0);
  3255  0352  0879               	movf	_uch_cr0,w
  3256  0353  00F6               	movwf	??_maxim_31856_init
  3257  0354  0876               	movf	??_maxim_31856_init,w
  3258  0355  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3259  0356  3080               	movlw	128
  3260  0357  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3261                           
  3262                           ;max31856.c: 74: maxim_31856_write_register(0x81, uch_cr1);
  3263  035A  0020               	movlb	0	; select bank0
  3264  035B  0841               	movf	_uch_cr1,w
  3265  035C  00F6               	movwf	??_maxim_31856_init
  3266  035D  0876               	movf	??_maxim_31856_init,w
  3267  035E  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3268  035F  3081               	movlw	129
  3269  0360  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3270                           
  3271                           ;max31856.c: 75: maxim_31856_write_register(0x82,uch_mask);
  3272  0363  0020               	movlb	0	; select bank0
  3273  0364  0844               	movf	_uch_mask,w
  3274  0365  00F6               	movwf	??_maxim_31856_init
  3275  0366  0876               	movf	??_maxim_31856_init,w
  3276  0367  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3277  0368  3082               	movlw	130
  3278  0369  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3279                           
  3280                           ;max31856.c: 78: maxim_31856_write_register(0x83,0x7F);
  3281  036C  307F               	movlw	127
  3282  036D  00F6               	movwf	??_maxim_31856_init
  3283  036E  0876               	movf	??_maxim_31856_init,w
  3284  036F  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3285  0370  3083               	movlw	131
  3286  0371  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3287                           
  3288                           ;max31856.c: 79: maxim_31856_write_register(0x84,0xC0);
  3289  0374  30C0               	movlw	192
  3290  0375  00F6               	movwf	??_maxim_31856_init
  3291  0376  0876               	movf	??_maxim_31856_init,w
  3292  0377  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3293  0378  3084               	movlw	132
  3294  0379  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3295                           
  3296                           ;max31856.c: 81: maxim_31856_write_register(0x85,0x7F);
  3297  037C  307F               	movlw	127
  3298  037D  00F6               	movwf	??_maxim_31856_init
  3299  037E  0876               	movf	??_maxim_31856_init,w
  3300  037F  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3301  0380  3085               	movlw	133
  3302  0381  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3303                           
  3304                           ;max31856.c: 82: maxim_31856_write_register(0x86,0xFF);
  3305  0384  30FF               	movlw	255
  3306  0385  00F6               	movwf	??_maxim_31856_init
  3307  0386  0876               	movf	??_maxim_31856_init,w
  3308  0387  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3309  0388  3086               	movlw	134
  3310  0389  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3311                           
  3312                           ;max31856.c: 83: maxim_31856_write_register(0x87,0x80);
  3313  038C  3080               	movlw	128
  3314  038D  00F6               	movwf	??_maxim_31856_init
  3315  038E  0876               	movf	??_maxim_31856_init,w
  3316  038F  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3317  0390  3087               	movlw	135
  3318  0391  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3319                           
  3320                           ;max31856.c: 84: maxim_31856_write_register(0x88,0x00);
  3321  0394  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3322  0395  3088               	movlw	136
  3323  0396  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3324                           
  3325                           ;max31856.c: 86: maxim_31856_write_register(0x89,0x00);
  3326  0399  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3327  039A  3089               	movlw	137
  3328  039B  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3329                           
  3330                           ;max31856.c: 90: maxim_31856_write_register(0x8A,0x00);
  3331  039E  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3332  039F  308A               	movlw	138
  3333  03A0  318E  26AB  3183   	fcall	_maxim_31856_write_register
  3334                           
  3335                           ;max31856.c: 91: maxim_31856_write_register(0x8B,0x00);
  3336  03A3  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3337  03A4  308B               	movlw	139
  3338  03A5  318E  26AB         	fcall	_maxim_31856_write_register
  3339  03A7  0008               	return
  3340  03A8                     __end_of_maxim_31856_init:	
  3341                           
  3342                           	psect	text2
  3343  0F21                     __ptext2:	
  3344 ;; *************** function _SYSTEM_Initialize *****************
  3345 ;; Defined at:
  3346 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    4
  3367 ;; This function calls:
  3368 ;;		_ADC_Initialize
  3369 ;;		_EUSART_Initialize
  3370 ;;		_FVR_Initialize
  3371 ;;		_OSCILLATOR_Initialize
  3372 ;;		_PIN_MANAGER_Initialize
  3373 ;;		_SPI_Initialize
  3374 ;;		_TMR0_Initialize
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _SYSTEM_Initialize
  3382  0F21                     _SYSTEM_Initialize:	
  3383                           
  3384                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3388  0F21  3187  27FB  318F   	fcall	_OSCILLATOR_Initialize
  3389                           
  3390                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3391  0F24  3187  2760  318F   	fcall	_PIN_MANAGER_Initialize
  3392                           
  3393                           ;mcc.c: 73: SPI_Initialize();
  3394  0F27  318E  2672  318F   	fcall	_SPI_Initialize
  3395                           
  3396                           ;mcc.c: 74: EUSART_Initialize();
  3397  0F2A  318E  269F  318F   	fcall	_EUSART_Initialize
  3398                           
  3399                           ;mcc.c: 75: ADC_Initialize();
  3400  0F2D  318E  2684  318F   	fcall	_ADC_Initialize
  3401                           
  3402                           ;mcc.c: 76: TMR0_Initialize();
  3403  0F30  318E  26B8  318F   	fcall	_TMR0_Initialize
  3404                           
  3405                           ;mcc.c: 77: FVR_Initialize();
  3406  0F33  318E  266E         	fcall	_FVR_Initialize
  3407  0F35  0008               	return
  3408  0F36                     __end_of_SYSTEM_Initialize:	
  3409                           
  3410                           	psect	text3
  3411  0EB8                     __ptext3:	
  3412 ;; *************** function _TMR0_Initialize *****************
  3413 ;; Defined at:
  3414 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;Total ram usage:        1 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    3
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_SYSTEM_Initialize
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _TMR0_Initialize
  3444  0EB8                     _TMR0_Initialize:	
  3445                           
  3446                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3450  0EB8  0021               	movlb	1	; select bank1
  3451  0EB9  0815               	movf	21,w	;volatile
  3452  0EBA  39C0               	andlw	192
  3453  0EBB  3817               	iorlw	23
  3454  0EBC  0095               	movwf	21	;volatile
  3455                           
  3456                           ;tmr0.c: 73: TMR0 = 0x64;
  3457  0EBD  3064               	movlw	100
  3458  0EBE  0020               	movlb	0	; select bank0
  3459  0EBF  0095               	movwf	21	;volatile
  3460                           
  3461                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3462  0EC0  3064               	movlw	100
  3463  0EC1  00F3               	movwf	??_TMR0_Initialize
  3464  0EC2  0873               	movf	??_TMR0_Initialize,w
  3465  0EC3  00EE               	movwf	_timer0ReloadVal	;volatile
  3466                           
  3467                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3468  0EC4  110B               	bcf	11,2	;volatile
  3469                           
  3470                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3471  0EC5  168B               	bsf	11,5	;volatile
  3472  0EC6  0008               	return
  3473  0EC7                     __end_of_TMR0_Initialize:	
  3474                           
  3475                           	psect	text4
  3476  0E72                     __ptext4:	
  3477 ;; *************** function _SPI_Initialize *****************
  3478 ;; Defined at:
  3479 ;;		line 64 in file "mcc_generated_files/spi.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    3
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_SYSTEM_Initialize
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _SPI_Initialize
  3509  0E72                     _SPI_Initialize:	
  3510                           
  3511                           ;spi.c: 68: SSP1STAT = 0x00;
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3515  0E72  0024               	movlb	4	; select bank4
  3516  0E73  0194               	clrf	20	;volatile
  3517                           
  3518                           ;spi.c: 71: SSP1CON1 = 0x30;
  3519  0E74  3030               	movlw	48
  3520  0E75  0095               	movwf	21	;volatile
  3521                           
  3522                           ;spi.c: 74: SSP1ADD = 0x00;
  3523  0E76  0192               	clrf	18	;volatile
  3524  0E77  0008               	return
  3525  0E78                     __end_of_SPI_Initialize:	
  3526                           
  3527                           	psect	text5
  3528  0760                     __ptext5:	
  3529 ;; *************** function _PIN_MANAGER_Initialize *****************
  3530 ;; Defined at:
  3531 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    3
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_SYSTEM_Initialize
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _PIN_MANAGER_Initialize
  3561  0760                     _PIN_MANAGER_Initialize:	
  3562                           
  3563                           ;pin_manager.c: 51: LATA = 0x7B;
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3567  0760  307B               	movlw	123
  3568  0761  0022               	movlb	2	; select bank2
  3569  0762  008C               	movwf	12	;volatile
  3570                           
  3571                           ;pin_manager.c: 52: TRISA = 0x80;
  3572  0763  3080               	movlw	128
  3573  0764  0021               	movlb	1	; select bank1
  3574  0765  008C               	movwf	12	;volatile
  3575                           
  3576                           ;pin_manager.c: 53: ANSELA = 0x00;
  3577  0766  0023               	movlb	3	; select bank3
  3578  0767  018C               	clrf	12	;volatile
  3579                           
  3580                           ;pin_manager.c: 55: LATB = 0x00;
  3581  0768  0022               	movlb	2	; select bank2
  3582  0769  018D               	clrf	13	;volatile
  3583                           
  3584                           ;pin_manager.c: 56: TRISB = 0xFC;
  3585  076A  30FC               	movlw	252
  3586  076B  0021               	movlb	1	; select bank1
  3587  076C  008D               	movwf	13	;volatile
  3588                           
  3589                           ;pin_manager.c: 57: ANSELB = 0x10;
  3590  076D  3010               	movlw	16
  3591  076E  0023               	movlb	3	; select bank3
  3592  076F  008D               	movwf	13	;volatile
  3593                           
  3594                           ;pin_manager.c: 58: WPUB = 0x2C;
  3595  0770  302C               	movlw	44
  3596  0771  0024               	movlb	4	; select bank4
  3597  0772  008D               	movwf	13	;volatile
  3598                           
  3599                           ;pin_manager.c: 60: LATC = 0x07;
  3600  0773  3007               	movlw	7
  3601  0774  0022               	movlb	2	; select bank2
  3602  0775  008E               	movwf	14	;volatile
  3603                           
  3604                           ;pin_manager.c: 61: TRISC = 0xD0;
  3605  0776  30D0               	movlw	208
  3606  0777  0021               	movlb	1	; select bank1
  3607  0778  008E               	movwf	14	;volatile
  3608                           
  3609                           ;pin_manager.c: 62: ANSELC = 0x00;
  3610  0779  0023               	movlb	3	; select bank3
  3611  077A  018E               	clrf	14	;volatile
  3612                           
  3613                           ;pin_manager.c: 64: WPUE = 0x00;
  3614  077B  0024               	movlb	4	; select bank4
  3615  077C  0190               	clrf	16	;volatile
  3616                           
  3617                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  3618  077D  0021               	movlb	1	; select bank1
  3619  077E  1395               	bcf	21,7	;volatile
  3620                           
  3621                           ;pin_manager.c: 68: APFCON = 0x00;
  3622  077F  0022               	movlb	2	; select bank2
  3623  0780  019D               	clrf	29	;volatile
  3624  0781  0008               	return
  3625  0782                     __end_of_PIN_MANAGER_Initialize:	
  3626                           
  3627                           	psect	text6
  3628  07FB                     __ptext6:	
  3629 ;; *************** function _OSCILLATOR_Initialize *****************
  3630 ;; Defined at:
  3631 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    3
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_SYSTEM_Initialize
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _OSCILLATOR_Initialize
  3661  07FB                     _OSCILLATOR_Initialize:	
  3662                           
  3663                           ;mcc.c: 82: OSCCON = 0x78;
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3667  07FB  3078               	movlw	120
  3668  07FC  0021               	movlb	1	; select bank1
  3669  07FD  0099               	movwf	25	;volatile
  3670                           
  3671                           ;mcc.c: 84: OSCSTAT = 0x00;
  3672  07FE  019A               	clrf	26	;volatile
  3673  07FF  0008               	return
  3674  0800                     __end_of_OSCILLATOR_Initialize:	
  3675                           
  3676                           	psect	text7
  3677  0E6E                     __ptext7:	
  3678 ;; *************** function _FVR_Initialize *****************
  3679 ;; Defined at:
  3680 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_SYSTEM_Initialize
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _FVR_Initialize
  3710  0E6E                     _FVR_Initialize:	
  3711                           
  3712                           ;fvr.c: 60: FVRCON = 0x82;
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _FVR_Initialize: [wreg]
  3716  0E6E  3082               	movlw	130
  3717  0E6F  0022               	movlb	2	; select bank2
  3718  0E70  0097               	movwf	23	;volatile
  3719  0E71  0008               	return
  3720  0E72                     __end_of_FVR_Initialize:	
  3721                           
  3722                           	psect	text8
  3723  0E9F                     __ptext8:	
  3724 ;; *************** function _EUSART_Initialize *****************
  3725 ;; Defined at:
  3726 ;;		line 56 in file "mcc_generated_files/eusart.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    3
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SYSTEM_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _EUSART_Initialize
  3756  0E9F                     _EUSART_Initialize:	
  3757                           
  3758                           ;eusart.c: 60: BAUDCON = 0x48;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _EUSART_Initialize: [wreg]
  3762  0E9F  3048               	movlw	72
  3763  0EA0  0023               	movlb	3	; select bank3
  3764  0EA1  009F               	movwf	31	;volatile
  3765                           
  3766                           ;eusart.c: 63: RCSTA = 0x80;
  3767  0EA2  3080               	movlw	128
  3768  0EA3  009D               	movwf	29	;volatile
  3769                           
  3770                           ;eusart.c: 66: TXSTA = 0x26;
  3771  0EA4  3026               	movlw	38
  3772  0EA5  009E               	movwf	30	;volatile
  3773                           
  3774                           ;eusart.c: 69: SPBRGL = 0xA0;
  3775  0EA6  30A0               	movlw	160
  3776  0EA7  009B               	movwf	27	;volatile
  3777                           
  3778                           ;eusart.c: 72: SPBRGH = 0x01;
  3779  0EA8  3001               	movlw	1
  3780  0EA9  009C               	movwf	28	;volatile
  3781  0EAA  0008               	return
  3782  0EAB                     __end_of_EUSART_Initialize:	
  3783                           
  3784                           	psect	text9
  3785  0E84                     __ptext9:	
  3786 ;; *************** function _ADC_Initialize *****************
  3787 ;; Defined at:
  3788 ;;		line 65 in file "mcc_generated_files/adc.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    3
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_SYSTEM_Initialize
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _ADC_Initialize
  3818  0E84                     _ADC_Initialize:	
  3819                           
  3820                           ;adc.c: 69: ADCON0 = 0x01;
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3824  0E84  3001               	movlw	1
  3825  0E85  0021               	movlb	1	; select bank1
  3826  0E86  009D               	movwf	29	;volatile
  3827                           
  3828                           ;adc.c: 72: ADCON1 = 0xE3;
  3829  0E87  30E3               	movlw	227
  3830  0E88  009E               	movwf	30	;volatile
  3831                           
  3832                           ;adc.c: 75: ADRESL = 0x00;
  3833  0E89  019B               	clrf	27	;volatile
  3834                           
  3835                           ;adc.c: 78: ADRESH = 0x00;
  3836  0E8A  019C               	clrf	28	;volatile
  3837  0E8B  0008               	return
  3838  0E8C                     __end_of_ADC_Initialize:	
  3839                           
  3840                           	psect	text10
  3841  04FB                     __ptext10:	
  3842 ;; *************** function _Key_Process *****************
  3843 ;; Defined at:
  3844 ;;		line 39 in file "mcc_generated_files/key.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  gKeyValue       1   24[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2  279[None  ] int 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;Total ram usage:        2 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    8
  3865 ;; This function calls:
  3866 ;;		_Key_Scan
  3867 ;;		_SendCmd_1621
  3868 ;;		_temperature_process
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _Key_Process
  3876  04FB                     _Key_Process:	
  3877                           
  3878                           ;key.c: 41: unsigned char gKeyValue=0;
  3879                           
  3880                           ;incstack = 0
  3881                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3882  04FB  0020               	movlb	0	; select bank0
  3883  04FC  01EA               	clrf	Key_Process@gKeyValue
  3884                           
  3885                           ;key.c: 42: LongPressSec = 0;
  3886  04FD  01BA               	clrf	_LongPressSec
  3887                           
  3888                           ;key.c: 43: gKeyValue=Key_Scan();
  3889  04FE  3187  273D  3184   	fcall	_Key_Scan
  3890  0501  0020               	movlb	0	; select bank0
  3891  0502  00E9               	movwf	??_Key_Process
  3892  0503  0869               	movf	??_Key_Process,w
  3893  0504  00EA               	movwf	Key_Process@gKeyValue
  3894                           
  3895                           ;key.c: 44: if(gKeyValue)
  3896  0505  086A               	movf	Key_Process@gKeyValue,w
  3897  0506  1903               	btfsc	3,2
  3898  0507  0008               	return
  3899  0508  2D38               	goto	l4037
  3900  0509                     l4015:	
  3901                           ;key.c: 49: while( !(LongPressSec > 2 || RB5 == 1) );
  3902                           
  3903                           ;key.c: 47: {
  3904                           ;key.c: 48: case 0x01:
  3905                           
  3906                           ;key.c: 45: {
  3907                           ;key.c: 46: switch(gKeyValue)
  3908                           
  3909  0509  3003               	movlw	3
  3910  050A  023A               	subwf	_LongPressSec,w
  3911  050B  1803               	skipnc
  3912  050C  2D0F               	goto	l4019
  3913  050D  1E8D               	btfss	13,5	;volatile
  3914  050E  2D09               	goto	l4015
  3915  050F                     l4019:	
  3916                           
  3917                           ;key.c: 50: if(LongPressSec > 2)
  3918  050F  3003               	movlw	3
  3919  0510  023A               	subwf	_LongPressSec,w
  3920  0511  1C03               	skipc
  3921  0512  2D1A               	goto	l836
  3922                           
  3923                           ;key.c: 51: {
  3924                           ;key.c: 52: do { LATA2 = 0; } while(0);
  3925  0513  0022               	movlb	2	; select bank2
  3926  0514  110C               	bcf	12,2	;volatile
  3927                           
  3928                           ;key.c: 53: do { LATA3 = 1; } while(0);
  3929  0515  158C               	bsf	12,3	;volatile
  3930                           
  3931                           ;key.c: 54: SendCmd_1621(0x04);
  3932  0516  3004               	movlw	4
  3933  0517  318F  2736  3184   	fcall	_SendCmd_1621
  3934  051A                     l836:	
  3935                           ;key.c: 55: }
  3936                           ;key.c: 56: while(RB5 == 0);
  3937                           
  3938  051A  0020               	movlb	0	; select bank0
  3939  051B  1A8D               	btfsc	13,5	;volatile
  3940  051C  0008               	return
  3941  051D  2D1A               	goto	l836
  3942  051E                     l4023:	
  3943                           ;key.c: 59: while( !(LongPressSec > 2 || RA7 == 1) );
  3944                           
  3945                           ;key.c: 58: case 0x02:
  3946                           
  3947                           ;key.c: 57: break;
  3948                           
  3949  051E  3003               	movlw	3
  3950  051F  023A               	subwf	_LongPressSec,w
  3951  0520  1803               	skipnc
  3952  0521  2D24               	goto	l4027
  3953  0522  1F8C               	btfss	12,7	;volatile
  3954  0523  2D1E               	goto	l4023
  3955  0524                     l4027:	
  3956                           
  3957                           ;key.c: 60: if(LongPressSec > 2)
  3958  0524  3003               	movlw	3
  3959  0525  023A               	subwf	_LongPressSec,w
  3960  0526  1C03               	skipc
  3961  0527  2D2C               	goto	l4031
  3962                           
  3963                           ;key.c: 61: {
  3964                           ;key.c: 62: do { LATA4 = ~LATA4; } while(0);
  3965  0528  3010               	movlw	16
  3966  0529  0022               	movlb	2	; select bank2
  3967  052A  068C               	xorwf	12,f
  3968                           
  3969                           ;key.c: 63: }
  3970  052B  2D34               	goto	l850
  3971  052C                     l4031:	
  3972                           
  3973                           ;key.c: 64: else
  3974                           ;key.c: 65: {
  3975                           ;key.c: 66: time_count = 5;
  3976  052C  3005               	movlw	5
  3977  052D  0020               	movlb	0	; select bank0
  3978  052E  00E9               	movwf	??_Key_Process
  3979  052F  0869               	movf	??_Key_Process,w
  3980  0530  00BD               	movwf	_time_count
  3981                           
  3982                           ;key.c: 67: temperature_process();
  3983  0531  3186  2665  3184   	fcall	_temperature_process
  3984  0534                     l850:	
  3985                           ;key.c: 68: }
  3986                           ;key.c: 69: while(RA7 == 0);
  3987                           
  3988  0534  0020               	movlb	0	; select bank0
  3989  0535  1B8C               	btfsc	12,7	;volatile
  3990  0536  0008               	return
  3991  0537  2D34               	goto	l850
  3992  0538                     l4037:	
  3993                           ;key.c: 72: }
  3994                           
  3995                           ;key.c: 71: default:break;
  3996                           
  3997                           ;key.c: 70: break;
  3998                           
  3999  0538  086A               	movf	Key_Process@gKeyValue,w
  4000                           
  4001                           ; Switch size 1, requested type "space"
  4002                           ; Number of cases is 2, Range of values is 1 to 2
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte            7     4 (average)
  4006                           ; direct_byte           13     9 (fixed)
  4007                           ; jumptable            263     9 (fixed)
  4008                           ;	Chosen strategy is simple_byte
  4009  0539  3A01               	xorlw	1	; case 1
  4010  053A  1903               	skipnz
  4011  053B  2D09               	goto	l4015
  4012  053C  3A03               	xorlw	3	; case 2
  4013  053D  1903               	skipnz
  4014  053E  2D1E               	goto	l4023
  4015  053F  2D41               	goto	l854
  4016  0540  0008               	return
  4017  0541                     l854:	
  4018  0541  0008               	return
  4019  0542                     __end_of_Key_Process:	
  4020                           
  4021                           	psect	text11
  4022  0665                     __ptext11:	
  4023 ;; *************** function _temperature_process *****************
  4024 ;; Defined at:
  4025 ;;		line 247 in file "mcc_generated_files/max31856.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    7
  4046 ;; This function calls:
  4047 ;;		_Two_Display
  4048 ;;		_one_temperature_trans
  4049 ;;		_temperature_display
  4050 ;;		_time_Display
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;;		_Key_Process
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _temperature_process
  4059  0665                     _temperature_process:	
  4060                           
  4061                           ;max31856.c: 249: switch(time_count)
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4065  0665  2E85               	goto	l3907
  4066  0666                     l3879:	
  4067                           ;max31856.c: 250: {
  4068                           ;max31856.c: 251: case 0: Two_Display(1);
  4069                           
  4070  0666  3001               	movlw	1
  4071  0667  3186  26EF  3186   	fcall	_Two_Display
  4072                           
  4073                           ;max31856.c: 252: do { LATA1 = 1; } while(0);
  4074  066A  0022               	movlb	2	; select bank2
  4075  066B  148C               	bsf	12,1	;volatile
  4076                           
  4077                           ;max31856.c: 253: do { LATA0 = 1; } while(0);
  4078  066C  140C               	bsf	12,0	;volatile
  4079                           
  4080                           ;max31856.c: 254: do { LATA0 = 0; } while(0);
  4081  066D  100C               	bcf	12,0	;volatile
  4082                           
  4083                           ;max31856.c: 255: one_temperature_trans();
  4084  066E  3185  25C3         	fcall	_one_temperature_trans
  4085                           
  4086                           ;max31856.c: 256: break;
  4087  0670  0008               	return
  4088  0671                     l3889:	
  4089                           ;max31856.c: 257: case 1:
  4090                           
  4091                           
  4092                           ;max31856.c: 258: temperature_display();break;
  4093  0671  3187  27C2         	fcall	_temperature_display
  4094  0673  0008               	return
  4095  0674                     l3891:	
  4096                           ;max31856.c: 259: case 2: Two_Display(2);
  4097                           
  4098  0674  3002               	movlw	2
  4099  0675  3186  26EF  3186   	fcall	_Two_Display
  4100                           
  4101                           ;max31856.c: 260: do { LATA0 = 1; } while(0);
  4102  0678  0022               	movlb	2	; select bank2
  4103  0679  140C               	bsf	12,0	;volatile
  4104                           
  4105                           ;max31856.c: 261: do { LATA1 = 1; } while(0);
  4106  067A  148C               	bsf	12,1	;volatile
  4107                           
  4108                           ;max31856.c: 262: do { LATA1 = 0; } while(0);
  4109  067B  108C               	bcf	12,1	;volatile
  4110                           
  4111                           ;max31856.c: 263: one_temperature_trans();
  4112  067C  3185  25C3         	fcall	_one_temperature_trans
  4113                           
  4114                           ;max31856.c: 264: break;
  4115  067E  0008               	return
  4116  067F                     l3901:	
  4117                           ;max31856.c: 265: case 3:
  4118                           
  4119                           
  4120                           ;max31856.c: 266: temperature_display();break;
  4121  067F  3187  27C2         	fcall	_temperature_display
  4122  0681  0008               	return
  4123  0682                     l3903:	
  4124                           ;max31856.c: 267: case 5: time_Display();break;
  4125                           
  4126  0682  3182  223F         	fcall	_time_Display
  4127                           
  4128                           ;max31856.c: 269: }
  4129                           
  4130                           ;max31856.c: 268: default:break;
  4131  0684  0008               	return
  4132  0685                     l3907:	
  4133  0685  0020               	movlb	0	; select bank0
  4134  0686  083D               	movf	_time_count,w
  4135                           
  4136                           ; Switch size 1, requested type "space"
  4137                           ; Number of cases is 5, Range of values is 0 to 5
  4138                           ; switch strategies available:
  4139                           ; Name         Instructions Cycles
  4140                           ; simple_byte           16     9 (average)
  4141                           ; direct_byte           18     6 (fixed)
  4142                           ; jumptable            260     6 (fixed)
  4143                           ;	Chosen strategy is simple_byte
  4144  0687  3A00               	xorlw	0	; case 0
  4145  0688  1903               	skipnz
  4146  0689  2E66               	goto	l3879
  4147  068A  3A01               	xorlw	1	; case 1
  4148  068B  1903               	skipnz
  4149  068C  2E71               	goto	l3889
  4150  068D  3A03               	xorlw	3	; case 2
  4151  068E  1903               	skipnz
  4152  068F  2E74               	goto	l3891
  4153  0690  3A01               	xorlw	1	; case 3
  4154  0691  1903               	skipnz
  4155  0692  2E7F               	goto	l3901
  4156  0693  3A06               	xorlw	6	; case 5
  4157  0694  1903               	skipnz
  4158  0695  2E82               	goto	l3903
  4159  0696  2E97               	goto	l499
  4160  0697                     l499:	
  4161  0697  0008               	return
  4162  0698                     __end_of_temperature_process:	
  4163                           
  4164                           	psect	text12
  4165  023F                     __ptext12:	
  4166 ;; *************** function _time_Display *****************
  4167 ;; Defined at:
  4168 ;;		line 165 in file "mcc_generated_files/ht1621.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  num             4   19[BANK0 ] unsigned char [4]
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;Total ram usage:        7 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    6
  4189 ;; This function calls:
  4190 ;;		_Bq32k_Rtc_Read_Time
  4191 ;;		_WriteAll_1621
  4192 ;;		___awdiv
  4193 ;;		___awmod
  4194 ;; This function is called by:
  4195 ;;		_temperature_process
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _time_Display
  4201  023F                     _time_Display:	
  4202                           
  4203                           ;ht1621.c: 167: unsigned char num[4]={0};
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4207  023F  0020               	movlb	0	; select bank0
  4208  0240  082F               	movf	time_Display@F2120+3,w
  4209  0241  00E8               	movwf	time_Display@num+3
  4210  0242  082E               	movf	time_Display@F2120+2,w
  4211  0243  00E7               	movwf	time_Display@num+2
  4212  0244  082D               	movf	time_Display@F2120+1,w
  4213  0245  00E6               	movwf	time_Display@num+1
  4214  0246  082C               	movf	time_Display@F2120,w
  4215  0247  00E5               	movwf	time_Display@num
  4216                           
  4217                           ;ht1621.c: 168: Bq32k_Rtc_Read_Time(&tm);
  4218  0248  30AA               	movlw	(low (_tm| 0))& (0+255)
  4219  0249  3183  23A8  3182   	fcall	_Bq32k_Rtc_Read_Time
  4220                           
  4221                           ;ht1621.c: 169: num[0] = Dis_TAB[tm.hours / 10];
  4222  024C  300A               	movlw	10
  4223  024D  00F3               	movwf	___awdiv@divisor
  4224  024E  3000               	movlw	0
  4225  024F  00F4               	movwf	___awdiv@divisor+1
  4226  0250  0021               	movlb	1	; select bank1
  4227  0251  082C               	movf	(_tm^(0+128)+2),w
  4228  0252  0020               	movlb	0	; select bank0
  4229  0253  00E2               	movwf	??_time_Display
  4230  0254  01E3               	clrf	??_time_Display+1
  4231  0255  0862               	movf	??_time_Display,w
  4232  0256  00F5               	movwf	___awdiv@dividend
  4233  0257  0863               	movf	??_time_Display+1,w
  4234  0258  00F6               	movwf	___awdiv@dividend+1
  4235  0259  3184  240C  3182   	fcall	___awdiv
  4236  025C  0874               	movf	?___awdiv+1,w
  4237  025D  0085               	movwf	5
  4238  025E  0873               	movf	?___awdiv,w
  4239  025F  0084               	movwf	4
  4240  0260  3000               	movlw	low (_Dis_TAB| (0+32768))
  4241  0261  0784               	addwf	4,f
  4242  0262  3090               	movlw	high (_Dis_TAB| (0+32768))
  4243  0263  3D85               	addwfc	5,f
  4244  0264  0800               	movf	0,w	;code access
  4245  0265  0020               	movlb	0	; select bank0
  4246  0266  00E4               	movwf	??_time_Display+2
  4247  0267  0864               	movf	??_time_Display+2,w
  4248  0268  00E5               	movwf	time_Display@num
  4249                           
  4250                           ;ht1621.c: 170: num[1] = Dis_TAB[tm.hours % 10];
  4251  0269  300A               	movlw	10
  4252  026A  00F3               	movwf	___awmod@divisor
  4253  026B  3000               	movlw	0
  4254  026C  00F4               	movwf	___awmod@divisor+1
  4255  026D  0021               	movlb	1	; select bank1
  4256  026E  082C               	movf	(_tm^(0+128)+2),w
  4257  026F  0020               	movlb	0	; select bank0
  4258  0270  00E2               	movwf	??_time_Display
  4259  0271  01E3               	clrf	??_time_Display+1
  4260  0272  0862               	movf	??_time_Display,w
  4261  0273  00F5               	movwf	___awmod@dividend
  4262  0274  0863               	movf	??_time_Display+1,w
  4263  0275  00F6               	movwf	___awmod@dividend+1
  4264  0276  3185  2542  3182   	fcall	___awmod
  4265  0279  0874               	movf	?___awmod+1,w
  4266  027A  0085               	movwf	5
  4267  027B  0873               	movf	?___awmod,w
  4268  027C  0084               	movwf	4
  4269  027D  3000               	movlw	low (_Dis_TAB| (0+32768))
  4270  027E  0784               	addwf	4,f
  4271  027F  3090               	movlw	high (_Dis_TAB| (0+32768))
  4272  0280  3D85               	addwfc	5,f
  4273  0281  0800               	movf	0,w	;code access
  4274  0282  0020               	movlb	0	; select bank0
  4275  0283  00E4               	movwf	??_time_Display+2
  4276  0284  0864               	movf	??_time_Display+2,w
  4277  0285  00E6               	movwf	time_Display@num+1
  4278                           
  4279                           ;ht1621.c: 171: num[2] = Dis_TAB[tm.minutes / 10];
  4280  0286  300A               	movlw	10
  4281  0287  00F3               	movwf	___awdiv@divisor
  4282  0288  3000               	movlw	0
  4283  0289  00F4               	movwf	___awdiv@divisor+1
  4284  028A  0021               	movlb	1	; select bank1
  4285  028B  082B               	movf	(_tm^(0+128)+1),w
  4286  028C  0020               	movlb	0	; select bank0
  4287  028D  00E2               	movwf	??_time_Display
  4288  028E  01E3               	clrf	??_time_Display+1
  4289  028F  0862               	movf	??_time_Display,w
  4290  0290  00F5               	movwf	___awdiv@dividend
  4291  0291  0863               	movf	??_time_Display+1,w
  4292  0292  00F6               	movwf	___awdiv@dividend+1
  4293  0293  3184  240C  3182   	fcall	___awdiv
  4294  0296  0874               	movf	?___awdiv+1,w
  4295  0297  0085               	movwf	5
  4296  0298  0873               	movf	?___awdiv,w
  4297  0299  0084               	movwf	4
  4298  029A  3000               	movlw	low (_Dis_TAB| (0+32768))
  4299  029B  0784               	addwf	4,f
  4300  029C  3090               	movlw	high (_Dis_TAB| (0+32768))
  4301  029D  3D85               	addwfc	5,f
  4302  029E  0800               	movf	0,w	;code access
  4303  029F  0020               	movlb	0	; select bank0
  4304  02A0  00E4               	movwf	??_time_Display+2
  4305  02A1  0864               	movf	??_time_Display+2,w
  4306  02A2  00E7               	movwf	time_Display@num+2
  4307                           
  4308                           ;ht1621.c: 172: num[3] = Dis_TAB[tm.minutes % 10];
  4309  02A3  300A               	movlw	10
  4310  02A4  00F3               	movwf	___awmod@divisor
  4311  02A5  3000               	movlw	0
  4312  02A6  00F4               	movwf	___awmod@divisor+1
  4313  02A7  0021               	movlb	1	; select bank1
  4314  02A8  082B               	movf	(_tm^(0+128)+1),w
  4315  02A9  0020               	movlb	0	; select bank0
  4316  02AA  00E2               	movwf	??_time_Display
  4317  02AB  01E3               	clrf	??_time_Display+1
  4318  02AC  0862               	movf	??_time_Display,w
  4319  02AD  00F5               	movwf	___awmod@dividend
  4320  02AE  0863               	movf	??_time_Display+1,w
  4321  02AF  00F6               	movwf	___awmod@dividend+1
  4322  02B0  3185  2542  3182   	fcall	___awmod
  4323  02B3  0874               	movf	?___awmod+1,w
  4324  02B4  0085               	movwf	5
  4325  02B5  0873               	movf	?___awmod,w
  4326  02B6  0084               	movwf	4
  4327  02B7  3000               	movlw	low (_Dis_TAB| (0+32768))
  4328  02B8  0784               	addwf	4,f
  4329  02B9  3090               	movlw	high (_Dis_TAB| (0+32768))
  4330  02BA  3D85               	addwfc	5,f
  4331  02BB  0800               	movf	0,w	;code access
  4332  02BC  0020               	movlb	0	; select bank0
  4333  02BD  00E4               	movwf	??_time_Display+2
  4334  02BE  0864               	movf	??_time_Display+2,w
  4335  02BF  00E8               	movwf	time_Display@num+3
  4336                           
  4337                           ;ht1621.c: 173: WriteAll_1621(0, num, 4);
  4338  02C0  3065               	movlw	low time_Display@num
  4339  02C1  00D2               	movwf	WriteAll_1621@p
  4340  02C2  3000               	movlw	high time_Display@num
  4341  02C3  00D3               	movwf	WriteAll_1621@p+1
  4342  02C4  3004               	movlw	4
  4343  02C5  00E2               	movwf	??_time_Display
  4344  02C6  0862               	movf	??_time_Display,w
  4345  02C7  00D4               	movwf	WriteAll_1621@cnt
  4346  02C8  3000               	movlw	0
  4347  02C9  3186  2630         	fcall	_WriteAll_1621
  4348  02CB  0008               	return
  4349  02CC                     __end_of_time_Display:	
  4350                           
  4351                           	psect	text13
  4352  0542                     __ptext13:	
  4353 ;; *************** function ___awmod *****************
  4354 ;; Defined at:
  4355 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  divisor         2    3[COMMON] int 
  4358 ;;  dividend        2    5[COMMON] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  sign            1    1[BANK0 ] unsigned char 
  4361 ;;  counter         1    0[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2    3[COMMON] int 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;Total ram usage:        7 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    3
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_time_Display
  4382 ;;		_bin2bcd
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function ___awmod
  4388  0542                     ___awmod:	
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4392  0542  0020               	movlb	0	; select bank0
  4393  0543  01D3               	clrf	___awmod@sign
  4394  0544  1FF6               	btfss	___awmod@dividend+1,7
  4395  0545  2D4D               	goto	l3739
  4396  0546  09F5               	comf	___awmod@dividend,f
  4397  0547  09F6               	comf	___awmod@dividend+1,f
  4398  0548  0AF5               	incf	___awmod@dividend,f
  4399  0549  1903               	skipnz
  4400  054A  0AF6               	incf	___awmod@dividend+1,f
  4401  054B  01D3               	clrf	___awmod@sign
  4402  054C  0AD3               	incf	___awmod@sign,f
  4403  054D                     l3739:	
  4404  054D  1FF4               	btfss	___awmod@divisor+1,7
  4405  054E  2D54               	goto	l3743
  4406  054F  09F3               	comf	___awmod@divisor,f
  4407  0550  09F4               	comf	___awmod@divisor+1,f
  4408  0551  0AF3               	incf	___awmod@divisor,f
  4409  0552  1903               	skipnz
  4410  0553  0AF4               	incf	___awmod@divisor+1,f
  4411  0554                     l3743:	
  4412  0554  0873               	movf	___awmod@divisor,w
  4413  0555  0474               	iorwf	___awmod@divisor+1,w
  4414  0556  1903               	btfsc	3,2
  4415  0557  2D7B               	goto	l3761
  4416  0558  01D2               	clrf	___awmod@counter
  4417  0559  0AD2               	incf	___awmod@counter,f
  4418  055A                     l3751:	
  4419  055A  1BF4               	btfsc	___awmod@divisor+1,7
  4420  055B  2D66               	goto	l3753
  4421  055C  3001               	movlw	1
  4422  055D                     u3105:	
  4423  055D  35F3               	lslf	___awmod@divisor,f
  4424  055E  0DF4               	rlf	___awmod@divisor+1,f
  4425  055F  0B89               	decfsz	9,f
  4426  0560  2D5D               	goto	u3105
  4427  0561  3001               	movlw	1
  4428  0562  00F7               	movwf	??___awmod
  4429  0563  0877               	movf	??___awmod,w
  4430  0564  07D2               	addwf	___awmod@counter,f
  4431  0565  2D5A               	goto	l3751
  4432  0566                     l3753:	
  4433  0566  0874               	movf	___awmod@divisor+1,w
  4434  0567  0276               	subwf	___awmod@dividend+1,w
  4435  0568  1D03               	skipz
  4436  0569  2D6C               	goto	u3125
  4437  056A  0873               	movf	___awmod@divisor,w
  4438  056B  0275               	subwf	___awmod@dividend,w
  4439  056C                     u3125:	
  4440  056C  1C03               	skipc
  4441  056D  2D72               	goto	l3757
  4442  056E  0873               	movf	___awmod@divisor,w
  4443  056F  02F5               	subwf	___awmod@dividend,f
  4444  0570  0874               	movf	___awmod@divisor+1,w
  4445  0571  3BF6               	subwfb	___awmod@dividend+1,f
  4446  0572                     l3757:	
  4447  0572  3001               	movlw	1
  4448  0573                     u3135:	
  4449  0573  36F4               	lsrf	___awmod@divisor+1,f
  4450  0574  0CF3               	rrf	___awmod@divisor,f
  4451  0575  0B89               	decfsz	9,f
  4452  0576  2D73               	goto	u3135
  4453  0577  3001               	movlw	1
  4454  0578  02D2               	subwf	___awmod@counter,f
  4455  0579  1D03               	btfss	3,2
  4456  057A  2D66               	goto	l3753
  4457  057B                     l3761:	
  4458  057B  0853               	movf	___awmod@sign,w
  4459  057C  1903               	btfsc	3,2
  4460  057D  2D83               	goto	l3765
  4461  057E  09F5               	comf	___awmod@dividend,f
  4462  057F  09F6               	comf	___awmod@dividend+1,f
  4463  0580  0AF5               	incf	___awmod@dividend,f
  4464  0581  1903               	skipnz
  4465  0582  0AF6               	incf	___awmod@dividend+1,f
  4466  0583                     l3765:	
  4467  0583  0876               	movf	___awmod@dividend+1,w
  4468  0584  00F4               	movwf	?___awmod+1
  4469  0585  0875               	movf	___awmod@dividend,w
  4470  0586  00F3               	movwf	?___awmod
  4471  0587  0008               	return
  4472  0588                     __end_of___awmod:	
  4473                           
  4474                           	psect	text14
  4475  040C                     __ptext14:	
  4476 ;; *************** function ___awdiv *****************
  4477 ;; Defined at:
  4478 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  divisor         2    3[COMMON] int 
  4481 ;;  dividend        2    5[COMMON] int 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  quotient        2    2[BANK0 ] int 
  4484 ;;  sign            1    1[BANK0 ] unsigned char 
  4485 ;;  counter         1    0[BANK0 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2    3[COMMON] int 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;Total ram usage:        9 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    3
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_time_Display
  4506 ;;		_bin2bcd
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function ___awdiv
  4512  040C                     ___awdiv:	
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4516  040C  0020               	movlb	0	; select bank0
  4517  040D  01D3               	clrf	___awdiv@sign
  4518  040E  1FF4               	btfss	___awdiv@divisor+1,7
  4519  040F  2C17               	goto	l3695
  4520  0410  09F3               	comf	___awdiv@divisor,f
  4521  0411  09F4               	comf	___awdiv@divisor+1,f
  4522  0412  0AF3               	incf	___awdiv@divisor,f
  4523  0413  1903               	skipnz
  4524  0414  0AF4               	incf	___awdiv@divisor+1,f
  4525  0415  01D3               	clrf	___awdiv@sign
  4526  0416  0AD3               	incf	___awdiv@sign,f
  4527  0417                     l3695:	
  4528  0417  1FF6               	btfss	___awdiv@dividend+1,7
  4529  0418  2C22               	goto	l3701
  4530  0419  09F5               	comf	___awdiv@dividend,f
  4531  041A  09F6               	comf	___awdiv@dividend+1,f
  4532  041B  0AF5               	incf	___awdiv@dividend,f
  4533  041C  1903               	skipnz
  4534  041D  0AF6               	incf	___awdiv@dividend+1,f
  4535  041E  3001               	movlw	1
  4536  041F  00F7               	movwf	??___awdiv
  4537  0420  0877               	movf	??___awdiv,w
  4538  0421  06D3               	xorwf	___awdiv@sign,f
  4539  0422                     l3701:	
  4540  0422  01D4               	clrf	___awdiv@quotient
  4541  0423  01D5               	clrf	___awdiv@quotient+1
  4542  0424  0873               	movf	___awdiv@divisor,w
  4543  0425  0474               	iorwf	___awdiv@divisor+1,w
  4544  0426  1903               	btfsc	3,2
  4545  0427  2C51               	goto	l3723
  4546  0428  01D2               	clrf	___awdiv@counter
  4547  0429  0AD2               	incf	___awdiv@counter,f
  4548  042A                     l3711:	
  4549  042A  1BF4               	btfsc	___awdiv@divisor+1,7
  4550  042B  2C36               	goto	l3713
  4551  042C  3001               	movlw	1
  4552  042D                     u3005:	
  4553  042D  35F3               	lslf	___awdiv@divisor,f
  4554  042E  0DF4               	rlf	___awdiv@divisor+1,f
  4555  042F  0B89               	decfsz	9,f
  4556  0430  2C2D               	goto	u3005
  4557  0431  3001               	movlw	1
  4558  0432  00F7               	movwf	??___awdiv
  4559  0433  0877               	movf	??___awdiv,w
  4560  0434  07D2               	addwf	___awdiv@counter,f
  4561  0435  2C2A               	goto	l3711
  4562  0436                     l3713:	
  4563  0436  3001               	movlw	1
  4564  0437                     u3025:	
  4565  0437  35D4               	lslf	___awdiv@quotient,f
  4566  0438  0DD5               	rlf	___awdiv@quotient+1,f
  4567  0439  0B89               	decfsz	9,f
  4568  043A  2C37               	goto	u3025
  4569  043B  0874               	movf	___awdiv@divisor+1,w
  4570  043C  0276               	subwf	___awdiv@dividend+1,w
  4571  043D  1D03               	skipz
  4572  043E  2C41               	goto	u3035
  4573  043F  0873               	movf	___awdiv@divisor,w
  4574  0440  0275               	subwf	___awdiv@dividend,w
  4575  0441                     u3035:	
  4576  0441  1C03               	skipc
  4577  0442  2C48               	goto	l3719
  4578  0443  0873               	movf	___awdiv@divisor,w
  4579  0444  02F5               	subwf	___awdiv@dividend,f
  4580  0445  0874               	movf	___awdiv@divisor+1,w
  4581  0446  3BF6               	subwfb	___awdiv@dividend+1,f
  4582  0447  1454               	bsf	___awdiv@quotient,0
  4583  0448                     l3719:	
  4584  0448  3001               	movlw	1
  4585  0449                     u3045:	
  4586  0449  36F4               	lsrf	___awdiv@divisor+1,f
  4587  044A  0CF3               	rrf	___awdiv@divisor,f
  4588  044B  0B89               	decfsz	9,f
  4589  044C  2C49               	goto	u3045
  4590  044D  3001               	movlw	1
  4591  044E  02D2               	subwf	___awdiv@counter,f
  4592  044F  1D03               	btfss	3,2
  4593  0450  2C36               	goto	l3713
  4594  0451                     l3723:	
  4595  0451  0853               	movf	___awdiv@sign,w
  4596  0452  1903               	btfsc	3,2
  4597  0453  2C59               	goto	l3727
  4598  0454  09D4               	comf	___awdiv@quotient,f
  4599  0455  09D5               	comf	___awdiv@quotient+1,f
  4600  0456  0AD4               	incf	___awdiv@quotient,f
  4601  0457  1903               	skipnz
  4602  0458  0AD5               	incf	___awdiv@quotient+1,f
  4603  0459                     l3727:	
  4604  0459  0855               	movf	___awdiv@quotient+1,w
  4605  045A  00F4               	movwf	?___awdiv+1
  4606  045B  0854               	movf	___awdiv@quotient,w
  4607  045C  00F3               	movwf	?___awdiv
  4608  045D  0008               	return
  4609  045E                     __end_of___awdiv:	
  4610                           
  4611                           	psect	text15
  4612  03A8                     __ptext15:	
  4613 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  4614 ;; Defined at:
  4615 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  p               1    wreg     PTR struct bq32k_regs
  4618 ;;		 -> tm(7), 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  4621 ;;		 -> tm(7), 
  4622 ;;  temp           10    5[BANK0 ] unsigned char [10]
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:       13 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    5
  4639 ;; This function calls:
  4640 ;;		_I2C_Read_Buffer
  4641 ;;		_bcd2bin
  4642 ;; This function is called by:
  4643 ;;		_time_Display
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _Bq32k_Rtc_Read_Time
  4649  03A8                     _Bq32k_Rtc_Read_Time:	
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4653                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  4654  03A8  0020               	movlb	0	; select bank0
  4655  03A9  00E1               	movwf	Bq32k_Rtc_Read_Time@p
  4656                           
  4657                           ;bq32k.c: 32: unsigned char temp[10] ;
  4658                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  4659  03AA  3057               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  4660  03AB  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4661  03AC  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4662  03AD  00F6               	movwf	I2C_Read_Buffer@buff
  4663  03AE  3007               	movlw	7
  4664  03AF  00D6               	movwf	??_Bq32k_Rtc_Read_Time+1
  4665  03B0  0856               	movf	??_Bq32k_Rtc_Read_Time+1,w
  4666  03B1  00F7               	movwf	I2C_Read_Buffer@Length
  4667  03B2  3000               	movlw	0
  4668  03B3  3182  22CC  3183   	fcall	_I2C_Read_Buffer
  4669                           
  4670                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  4671  03B6  0020               	movlb	0	; select bank0
  4672  03B7  0857               	movf	Bq32k_Rtc_Read_Time@temp,w
  4673  03B8  397F               	andlw	127
  4674  03B9  318F  270C  3183   	fcall	_bcd2bin
  4675  03BC  0020               	movlb	0	; select bank0
  4676  03BD  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4677  03BE  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4678  03BF  0086               	movwf	6
  4679  03C0  0187               	clrf	7
  4680  03C1  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4681  03C2  0081               	movwf	1
  4682                           
  4683                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  4684  03C3  0858               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  4685  03C4  397F               	andlw	127
  4686  03C5  318F  270C  3183   	fcall	_bcd2bin
  4687  03C8  0020               	movlb	0	; select bank0
  4688  03C9  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4689  03CA  0A61               	incf	Bq32k_Rtc_Read_Time@p,w
  4690  03CB  0086               	movwf	6
  4691  03CC  0187               	clrf	7
  4692  03CD  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4693  03CE  0081               	movwf	1
  4694                           
  4695                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  4696  03CF  0859               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  4697  03D0  393F               	andlw	63
  4698  03D1  318F  270C  3183   	fcall	_bcd2bin
  4699  03D4  0020               	movlb	0	; select bank0
  4700  03D5  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4701  03D6  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4702  03D7  3E02               	addlw	2
  4703  03D8  0086               	movwf	6
  4704  03D9  0187               	clrf	7
  4705  03DA  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4706  03DB  0081               	movwf	1
  4707                           
  4708                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  4709  03DC  085A               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  4710  03DD  318F  270C  3183   	fcall	_bcd2bin
  4711  03E0  0020               	movlb	0	; select bank0
  4712  03E1  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4713  03E2  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4714  03E3  3E03               	addlw	3
  4715  03E4  0086               	movwf	6
  4716  03E5  0187               	clrf	7
  4717  03E6  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4718  03E7  0081               	movwf	1
  4719                           
  4720                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  4721  03E8  085B               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  4722  03E9  318F  270C  3183   	fcall	_bcd2bin
  4723  03EC  0020               	movlb	0	; select bank0
  4724  03ED  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4725  03EE  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4726  03EF  3E04               	addlw	4
  4727  03F0  0086               	movwf	6
  4728  03F1  0187               	clrf	7
  4729  03F2  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4730  03F3  0081               	movwf	1
  4731                           
  4732                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  4733  03F4  085C               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  4734  03F5  318F  270C  3183   	fcall	_bcd2bin
  4735  03F8  0020               	movlb	0	; select bank0
  4736  03F9  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4737  03FA  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4738  03FB  3E05               	addlw	5
  4739  03FC  0086               	movwf	6
  4740  03FD  0187               	clrf	7
  4741  03FE  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4742  03FF  0081               	movwf	1
  4743                           
  4744                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  4745  0400  085D               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  4746  0401  318F  270C         	fcall	_bcd2bin
  4747  0403  0020               	movlb	0	; select bank0
  4748  0404  00D5               	movwf	??_Bq32k_Rtc_Read_Time
  4749  0405  0861               	movf	Bq32k_Rtc_Read_Time@p,w
  4750  0406  3E06               	addlw	6
  4751  0407  0086               	movwf	6
  4752  0408  0187               	clrf	7
  4753  0409  0855               	movf	??_Bq32k_Rtc_Read_Time,w
  4754  040A  0081               	movwf	1
  4755  040B  0008               	return
  4756  040C                     __end_of_Bq32k_Rtc_Read_Time:	
  4757                           
  4758                           	psect	text16
  4759  0F0C                     __ptext16:	
  4760 ;; *************** function _bcd2bin *****************
  4761 ;; Defined at:
  4762 ;;		line 63 in file "mcc_generated_files/bq32k.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  val             1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  val             1    7[COMMON] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      unsigned char 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;Total ram usage:        4 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    4
  4783 ;; This function calls:
  4784 ;;		___bmul
  4785 ;; This function is called by:
  4786 ;;		_Bq32k_Rtc_Read_Time
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _bcd2bin
  4792  0F0C                     _bcd2bin:	
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  4796                           ;bcd2bin@val stored from wreg
  4797  0F0C  00F7               	movwf	bcd2bin@val
  4798                           
  4799                           ;bq32k.c: 65: return (val & 0x0f) + (val >> 4) * 10;
  4800  0F0D  300F               	movlw	15
  4801  0F0E  0577               	andwf	bcd2bin@val,w
  4802  0F0F  0020               	movlb	0	; select bank0
  4803  0F10  00D2               	movwf	??_bcd2bin
  4804  0F11  300A               	movlw	10
  4805  0F12  00D3               	movwf	??_bcd2bin+1
  4806  0F13  0853               	movf	??_bcd2bin+1,w
  4807  0F14  00F3               	movwf	___bmul@multiplicand
  4808  0F15  0877               	movf	bcd2bin@val,w
  4809  0F16  00D4               	movwf	??_bcd2bin+2
  4810  0F17  3004               	movlw	4
  4811  0F18                     u2695:	
  4812  0F18  36D4               	lsrf	??_bcd2bin+2,f
  4813  0F19  0B89               	decfsz	9,f
  4814  0F1A  2F18               	goto	u2695
  4815  0F1B  0854               	movf	??_bcd2bin+2,w
  4816  0F1C  318E  26E8         	fcall	___bmul
  4817  0F1E  0020               	movlb	0	; select bank0
  4818  0F1F  0752               	addwf	??_bcd2bin,w
  4819  0F20  0008               	return
  4820  0F21                     __end_of_bcd2bin:	
  4821                           
  4822                           	psect	text17
  4823  0EE8                     __ptext17:	
  4824 ;; *************** function ___bmul *****************
  4825 ;; Defined at:
  4826 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  multiplier      1    wreg     unsigned char 
  4829 ;;  multiplicand    1    3[COMMON] unsigned char 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  multiplier      1    6[COMMON] unsigned char 
  4832 ;;  product         1    5[COMMON] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      unsigned char 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:        4 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    3
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_bcd2bin
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___bmul
  4858  0EE8                     ___bmul:	
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4862                           ;___bmul@multiplier stored from wreg
  4863  0EE8  00F6               	movwf	___bmul@multiplier
  4864  0EE9  01F5               	clrf	___bmul@product
  4865  0EEA                     l3415:	
  4866  0EEA  1C76               	btfss	___bmul@multiplier,0
  4867  0EEB  2EF0               	goto	l3419
  4868  0EEC  0873               	movf	___bmul@multiplicand,w
  4869  0EED  00F4               	movwf	??___bmul
  4870  0EEE  0874               	movf	??___bmul,w
  4871  0EEF  07F5               	addwf	___bmul@product,f
  4872  0EF0                     l3419:	
  4873  0EF0  1003               	clrc
  4874  0EF1  0DF3               	rlf	___bmul@multiplicand,f
  4875  0EF2  1003               	clrc
  4876  0EF3  0CF6               	rrf	___bmul@multiplier,f
  4877  0EF4  0876               	movf	___bmul@multiplier,w
  4878  0EF5  1D03               	btfss	3,2
  4879  0EF6  2EEA               	goto	l3415
  4880  0EF7  0875               	movf	___bmul@product,w
  4881  0EF8  0008               	return
  4882  0EF9                     __end_of___bmul:	
  4883                           
  4884                           	psect	text18
  4885  02CC                     __ptext18:	
  4886 ;; *************** function _I2C_Read_Buffer *****************
  4887 ;; Defined at:
  4888 ;;		line 120 in file "mcc_generated_files/i2c.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  ADD             1    wreg     unsigned char 
  4891 ;;  buff            1    6[COMMON] PTR unsigned char 
  4892 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  4893 ;;  Length          1    7[COMMON] unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  ADD             1    1[BANK0 ] unsigned char 
  4896 ;;  Flag            1    2[BANK0 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      unsigned char 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;Total ram usage:        5 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    4
  4913 ;; This function calls:
  4914 ;;		_I2C_Receive_Byte
  4915 ;;		_I2C_Send_Byte
  4916 ;;		_I2C_Start
  4917 ;;		_I2C_Stop
  4918 ;; This function is called by:
  4919 ;;		_Bq32k_Rtc_Read_Time
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function _I2C_Read_Buffer
  4925  02CC                     _I2C_Read_Buffer:	
  4926                           
  4927                           ;incstack = 0
  4928                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4929                           ;I2C_Read_Buffer@ADD stored from wreg
  4930  02CC  0020               	movlb	0	; select bank0
  4931  02CD  00D3               	movwf	I2C_Read_Buffer@ADD
  4932                           
  4933                           ;i2c.c: 122: unsigned char Flag=1;
  4934  02CE  01D4               	clrf	I2C_Read_Buffer@Flag
  4935  02CF  0AD4               	incf	I2C_Read_Buffer@Flag,f
  4936                           
  4937                           ;i2c.c: 124: I2C_Start();
  4938  02D0  318F  277F  3182   	fcall	_I2C_Start
  4939                           
  4940                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  4941  02D3  30D0               	movlw	208
  4942  02D4  3184  24AF  3182   	fcall	_I2C_Send_Byte
  4943  02D7  0020               	movlb	0	; select bank0
  4944  02D8  00D2               	movwf	??_I2C_Read_Buffer
  4945  02D9  0852               	movf	??_I2C_Read_Buffer,w
  4946  02DA  00D4               	movwf	I2C_Read_Buffer@Flag
  4947                           
  4948                           ;i2c.c: 127: if(Flag)
  4949  02DB  0854               	movf	I2C_Read_Buffer@Flag,w
  4950  02DC  1D03               	btfss	3,2
  4951  02DD  0008               	return
  4952                           
  4953                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  4954                           
  4955                           ;i2c.c: 128: return 0x01;
  4956                           ;	Return value of _I2C_Read_Buffer is never used
  4957  02DE  0853               	movf	I2C_Read_Buffer@ADD,w
  4958  02DF  3184  24AF  3182   	fcall	_I2C_Send_Byte
  4959  02E2  0020               	movlb	0	; select bank0
  4960  02E3  00D2               	movwf	??_I2C_Read_Buffer
  4961  02E4  0852               	movf	??_I2C_Read_Buffer,w
  4962  02E5  00D4               	movwf	I2C_Read_Buffer@Flag
  4963                           
  4964                           ;i2c.c: 131: if(Flag)
  4965  02E6  0854               	movf	I2C_Read_Buffer@Flag,w
  4966  02E7  1D03               	btfss	3,2
  4967  02E8  0008               	return
  4968                           
  4969                           ;i2c.c: 134: I2C_Start();
  4970                           
  4971                           ;i2c.c: 132: return 0x01;
  4972                           ;	Return value of _I2C_Read_Buffer is never used
  4973  02E9  318F  277F  3182   	fcall	_I2C_Start
  4974                           
  4975                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  4976  02EC  30D1               	movlw	209
  4977  02ED  3184  24AF  3182   	fcall	_I2C_Send_Byte
  4978  02F0  0020               	movlb	0	; select bank0
  4979  02F1  00D2               	movwf	??_I2C_Read_Buffer
  4980  02F2  0852               	movf	??_I2C_Read_Buffer,w
  4981  02F3  00D4               	movwf	I2C_Read_Buffer@Flag
  4982                           
  4983                           ;i2c.c: 136: if(Flag)
  4984  02F4  0854               	movf	I2C_Read_Buffer@Flag,w
  4985  02F5  1D03               	btfss	3,2
  4986  02F6  0008               	return
  4987  02F7                     l3527:	
  4988  02F7  3002               	movlw	2
  4989  02F8  0277               	subwf	I2C_Read_Buffer@Length,w
  4990  02F9  1C03               	btfss	3,0
  4991  02FA  2B22               	goto	l3529
  4992                           
  4993                           ;i2c.c: 140: {
  4994                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  4995                           
  4996                           ;i2c.c: 139: while(Length>1)
  4997                           
  4998                           ;i2c.c: 137: return 0x01;
  4999                           ;	Return value of _I2C_Read_Buffer is never used
  5000  02FB  3186  26C5  3182   	fcall	_I2C_Receive_Byte
  5001  02FE  0020               	movlb	0	; select bank0
  5002  02FF  00D2               	movwf	??_I2C_Read_Buffer
  5003  0300  0876               	movf	I2C_Read_Buffer@buff,w
  5004  0301  0086               	movwf	6
  5005  0302  0187               	clrf	7
  5006  0303  0852               	movf	??_I2C_Read_Buffer,w
  5007  0304  0081               	movwf	1
  5008                           
  5009                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  5010  0305  0022               	movlb	2	; select bank2
  5011  0306  108D               	bcf	13,1	;volatile
  5012                           
  5013                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5014  0307  300D               	movlw	13
  5015  0308  0020               	movlb	0	; select bank0
  5016  0309  00D2               	movwf	??_I2C_Read_Buffer
  5017  030A                     u3497:	
  5018  030A  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5019  030B  2B0A               	goto	u3497
  5020                           
  5021                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  5022  030C  0022               	movlb	2	; select bank2
  5023  030D  140D               	bsf	13,0	;volatile
  5024                           
  5025                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5026  030E  300D               	movlw	13
  5027  030F  0020               	movlb	0	; select bank0
  5028  0310  00D2               	movwf	??_I2C_Read_Buffer
  5029  0311                     u3507:	
  5030  0311  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5031  0312  2B11               	goto	u3507
  5032                           
  5033                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  5034  0313  0022               	movlb	2	; select bank2
  5035  0314  100D               	bcf	13,0	;volatile
  5036                           
  5037                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5038  0315  300D               	movlw	13
  5039  0316  0020               	movlb	0	; select bank0
  5040  0317  00D2               	movwf	??_I2C_Read_Buffer
  5041  0318                     u3517:	
  5042  0318  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5043  0319  2B18               	goto	u3517
  5044                           
  5045                           ;i2c.c: 150: buff++;
  5046  031A  3001               	movlw	1
  5047  031B  0020               	movlb	0	; select bank0
  5048  031C  00D2               	movwf	??_I2C_Read_Buffer
  5049  031D  0852               	movf	??_I2C_Read_Buffer,w
  5050  031E  07F6               	addwf	I2C_Read_Buffer@buff,f
  5051                           
  5052                           ;i2c.c: 151: Length--;
  5053  031F  3001               	movlw	1
  5054  0320  02F7               	subwf	I2C_Read_Buffer@Length,f
  5055  0321  2AF7               	goto	l3527
  5056  0322                     l3529:	
  5057                           
  5058                           ;i2c.c: 152: }
  5059                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  5060  0322  3186  26C5  3182   	fcall	_I2C_Receive_Byte
  5061  0325  0020               	movlb	0	; select bank0
  5062  0326  00D2               	movwf	??_I2C_Read_Buffer
  5063  0327  0876               	movf	I2C_Read_Buffer@buff,w
  5064  0328  0086               	movwf	6
  5065  0329  0187               	clrf	7
  5066  032A  0852               	movf	??_I2C_Read_Buffer,w
  5067  032B  0081               	movwf	1
  5068                           
  5069                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  5070  032C  0022               	movlb	2	; select bank2
  5071  032D  148D               	bsf	13,1	;volatile
  5072                           
  5073                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5074  032E  300D               	movlw	13
  5075  032F  0020               	movlb	0	; select bank0
  5076  0330  00D2               	movwf	??_I2C_Read_Buffer
  5077  0331                     u3527:	
  5078  0331  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5079  0332  2B31               	goto	u3527
  5080                           
  5081                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  5082  0333  0022               	movlb	2	; select bank2
  5083  0334  140D               	bsf	13,0	;volatile
  5084                           
  5085                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5086  0335  300D               	movlw	13
  5087  0336  0020               	movlb	0	; select bank0
  5088  0337  00D2               	movwf	??_I2C_Read_Buffer
  5089  0338                     u3537:	
  5090  0338  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5091  0339  2B38               	goto	u3537
  5092                           
  5093                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  5094  033A  0022               	movlb	2	; select bank2
  5095  033B  100D               	bcf	13,0	;volatile
  5096                           
  5097                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5098  033C  300D               	movlw	13
  5099  033D  0020               	movlb	0	; select bank0
  5100  033E  00D2               	movwf	??_I2C_Read_Buffer
  5101  033F                     u3547:	
  5102  033F  0BD2               	decfsz	??_I2C_Read_Buffer,f
  5103  0340  2B3F               	goto	u3547
  5104                           
  5105                           ;i2c.c: 162: I2C_Stop();
  5106  0341  318F  2798         	fcall	_I2C_Stop
  5107  0343  0008               	return
  5108  0344                     __end_of_I2C_Read_Buffer:	
  5109                           ;i2c.c: 164: return 0x00;
  5110                           ;	Return value of _I2C_Read_Buffer is never used
  5111                           
  5112                           
  5113                           	psect	text19
  5114  06C5                     __ptext19:	
  5115 ;; *************** function _I2C_Receive_Byte *****************
  5116 ;; Defined at:
  5117 ;;		line 74 in file "mcc_generated_files/i2c.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  i               1    5[COMMON] unsigned char 
  5122 ;;  Data            1    4[COMMON] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      unsigned char 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;Total ram usage:        3 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    3
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_I2C_Read_Buffer
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _I2C_Receive_Byte
  5148  06C5                     _I2C_Receive_Byte:	
  5149                           
  5150                           ;i2c.c: 76: unsigned char i,Data=0;
  5151                           
  5152                           ;incstack = 0
  5153                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  5154  06C5  01F4               	clrf	I2C_Receive_Byte@Data
  5155                           
  5156                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  5157  06C6  0022               	movlb	2	; select bank2
  5158  06C7  148D               	bsf	13,1	;volatile
  5159                           
  5160                           ;i2c.c: 78: for(i=0;i<8;i++)
  5161  06C8  01F5               	clrf	I2C_Receive_Byte@i
  5162  06C9  3008               	movlw	8
  5163  06CA  0275               	subwf	I2C_Receive_Byte@i,w
  5164  06CB  1803               	btfsc	3,0
  5165  06CC  2EED               	goto	l3401
  5166                           
  5167                           ;i2c.c: 79: {
  5168                           ;i2c.c: 80: Data <<= 1;
  5169  06CD  1003               	clrc
  5170  06CE                     L1:	
  5171  06CE  0DF4               	rlf	I2C_Receive_Byte@Data,f
  5172                           
  5173                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  5174  06CF  0022               	movlb	2	; select bank2
  5175  06D0  140D               	bsf	13,0	;volatile
  5176                           
  5177                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5178  06D1  300D               	movlw	13
  5179  06D2  00F3               	movwf	??_I2C_Receive_Byte
  5180  06D3                     u3557:	
  5181  06D3  0BF3               	decfsz	??_I2C_Receive_Byte,f
  5182  06D4  2ED3               	goto	u3557
  5183                           
  5184                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  5185  06D5  0021               	movlb	1	; select bank1
  5186  06D6  148D               	bsf	13,1	;volatile
  5187                           
  5188                           ;i2c.c: 84: if(RB1)
  5189  06D7  0020               	movlb	0	; select bank0
  5190  06D8  1C8D               	btfss	13,1	;volatile
  5191  06D9  2EDD               	goto	l744
  5192                           
  5193                           ;i2c.c: 85: {
  5194                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  5195  06DA  0021               	movlb	1	; select bank1
  5196  06DB  108D               	bcf	13,1	;volatile
  5197                           
  5198                           ;i2c.c: 87: Data |= 0x01;
  5199  06DC  1474               	bsf	I2C_Receive_Byte@Data,0
  5200  06DD                     l744:	
  5201                           ;i2c.c: 88: }
  5202                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  5203                           
  5204  06DD  0021               	movlb	1	; select bank1
  5205  06DE  108D               	bcf	13,1	;volatile
  5206                           
  5207                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  5208  06DF  0022               	movlb	2	; select bank2
  5209  06E0  100D               	bcf	13,0	;volatile
  5210                           
  5211                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  5212  06E1  300D               	movlw	13
  5213  06E2  00F3               	movwf	??_I2C_Receive_Byte
  5214  06E3                     u3567:	
  5215  06E3  0BF3               	decfsz	??_I2C_Receive_Byte,f
  5216  06E4  2EE3               	goto	u3567
  5217  06E5  3001               	movlw	1
  5218  06E6  00F3               	movwf	??_I2C_Receive_Byte
  5219  06E7  0873               	movf	??_I2C_Receive_Byte,w
  5220  06E8  07F5               	addwf	I2C_Receive_Byte@i,f
  5221  06E9  3008               	movlw	8
  5222  06EA  0275               	subwf	I2C_Receive_Byte@i,w
  5223  06EB  1C03               	skipc
  5224  06EC  2ECE               	goto	L1
  5225  06ED                     l3401:	
  5226                           
  5227                           ;i2c.c: 92: }
  5228                           ;i2c.c: 93: return Data;
  5229  06ED  0874               	movf	I2C_Receive_Byte@Data,w
  5230  06EE  0008               	return
  5231  06EF                     __end_of_I2C_Receive_Byte:	
  5232                           
  5233                           	psect	text20
  5234  07C2                     __ptext20:	
  5235 ;; *************** function _temperature_display *****************
  5236 ;; Defined at:
  5237 ;;		line 225 in file "mcc_generated_files/max31856.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;Total ram usage:        1 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    6
  5258 ;; This function calls:
  5259 ;;		_Tc_Display
  5260 ;;		_err_Display
  5261 ;;		_maxim_31856_write_register
  5262 ;;		_maxim_clear_fault_status
  5263 ;;		_tc_temperature_trans
  5264 ;; This function is called by:
  5265 ;;		_temperature_process
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           
  5270                           ;psect for function _temperature_display
  5271  07C2                     _temperature_display:	
  5272                           
  5273                           ;max31856.c: 227: if(uch_sr==(uint8_t)0x00)
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5277  07C2  0020               	movlb	0	; select bank0
  5278  07C3  0845               	movf	_uch_sr,w
  5279  07C4  1D03               	btfss	3,2
  5280  07C5  2FCC               	goto	l3799
  5281                           
  5282                           ;max31856.c: 228: {
  5283                           ;max31856.c: 229: tc_temperature_trans();
  5284  07C6  3180  20F0  3187   	fcall	_tc_temperature_trans
  5285                           
  5286                           ;max31856.c: 230: Tc_Display();
  5287  07C9  3181  2198         	fcall	_Tc_Display
  5288                           
  5289                           ;max31856.c: 231: }
  5290  07CB  0008               	return
  5291  07CC                     l3799:	
  5292                           
  5293                           ;max31856.c: 232: else
  5294                           ;max31856.c: 233: {
  5295                           ;max31856.c: 234: err_Display();
  5296  07CC  3187  2718  3187   	fcall	_err_Display
  5297                           
  5298                           ;max31856.c: 235: maxim_31856_write_register(0x82, 0xFF);
  5299  07CF  30FF               	movlw	255
  5300  07D0  0020               	movlb	0	; select bank0
  5301  07D1  00DF               	movwf	??_temperature_display
  5302  07D2  085F               	movf	??_temperature_display,w
  5303  07D3  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5304  07D4  3082               	movlw	130
  5305  07D5  318E  26AB  3187   	fcall	_maxim_31856_write_register
  5306                           
  5307                           ;max31856.c: 236: maxim_clear_fault_status();
  5308  07D8  318E  26C7  3187   	fcall	_maxim_clear_fault_status
  5309                           
  5310                           ;max31856.c: 237: maxim_31856_write_register(0x82, 0x00);
  5311  07DB  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5312  07DC  3082               	movlw	130
  5313  07DD  318E  26AB         	fcall	_maxim_31856_write_register
  5314  07DF  0008               	return
  5315  07E0                     __end_of_temperature_display:	
  5316                           
  5317                           	psect	text21
  5318  00F0                     __ptext21:	
  5319 ;; *************** function _tc_temperature_trans *****************
  5320 ;; Defined at:
  5321 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;Total ram usage:        8 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    3
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_temperature_display
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _tc_temperature_trans
  5351  00F0                     _tc_temperature_trans:	
  5352                           
  5353                           ;max31856.c: 170: temperature_value = 0;
  5354                           
  5355                           ;incstack = 0
  5356                           ; Regs used in _tc_temperature_trans: [wreg+status,2+status,0]
  5357  00F0  3000               	movlw	0
  5358  00F1  0020               	movlb	0	; select bank0
  5359  00F2  00A7               	movwf	_temperature_value+3
  5360  00F3  3000               	movlw	0
  5361  00F4  00A6               	movwf	_temperature_value+2
  5362  00F5  3000               	movlw	0
  5363  00F6  00A5               	movwf	_temperature_value+1
  5364  00F7  3000               	movlw	0
  5365  00F8  00A4               	movwf	_temperature_value
  5366                           
  5367                           ;max31856.c: 171: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5368  00F9  303F               	movlw	63
  5369  00FA  057A               	andwf	_uch_ltcbh,w
  5370  00FB  00D2               	movwf	??_tc_temperature_trans
  5371  00FC  0852               	movf	??_tc_temperature_trans,w
  5372  00FD  00D4               	movwf	??_tc_temperature_trans+2
  5373  00FE  0843               	movf	_uch_ltcbm,w
  5374  00FF  00D3               	movwf	??_tc_temperature_trans+1
  5375  0100  0D54               	rlf	??_tc_temperature_trans+2,w
  5376  0101  0CD4               	rrf	??_tc_temperature_trans+2,f
  5377  0102  0CD3               	rrf	??_tc_temperature_trans+1,f
  5378  0103  0853               	movf	??_tc_temperature_trans+1,w
  5379  0104  00A4               	movwf	_temperature_value
  5380  0105  0854               	movf	??_tc_temperature_trans+2,w
  5381  0106  00A5               	movwf	_temperature_value+1
  5382  0107  0D89               	rlf	9,f
  5383  0108  3B89               	subwfb	9,f
  5384  0109  0989               	comf	9,f
  5385  010A  00A6               	movwf	_temperature_value+2
  5386  010B  00A7               	movwf	_temperature_value+3
  5387                           
  5388                           ;max31856.c: 172: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5389  010C  1BFA               	btfsc	_uch_ltcbh,7
  5390  010D  16A5               	bsf	_temperature_value+1,5
  5391                           
  5392                           ;max31856.c: 173: if((uch_ltcbh&0x80)==0x80)
  5393  010E  1FFA               	btfss	_uch_ltcbh,7
  5394  010F  2968               	goto	l3637
  5395                           
  5396                           ;max31856.c: 174: {
  5397                           ;max31856.c: 175: temperature_sign = 1;
  5398  0110  01BC               	clrf	_temperature_sign
  5399  0111  0ABC               	incf	_temperature_sign,f
  5400                           
  5401                           ;max31856.c: 176: temperature_value=0x3FFF-temperature_value+1;
  5402  0112  3000               	movlw	0
  5403  0113  00D2               	movwf	??_tc_temperature_trans
  5404  0114  3040               	movlw	64
  5405  0115  00D3               	movwf	??_tc_temperature_trans+1
  5406  0116  3000               	movlw	0
  5407  0117  00D4               	movwf	??_tc_temperature_trans+2
  5408  0118  3000               	movlw	0
  5409  0119  00D5               	movwf	??_tc_temperature_trans+3
  5410  011A  0924               	comf	_temperature_value,w
  5411  011B  00D6               	movwf	??_tc_temperature_trans+4
  5412  011C  0925               	comf	_temperature_value+1,w
  5413  011D  00D7               	movwf	??_tc_temperature_trans+5
  5414  011E  0926               	comf	_temperature_value+2,w
  5415  011F  00D8               	movwf	??_tc_temperature_trans+6
  5416  0120  0927               	comf	_temperature_value+3,w
  5417  0121  00D9               	movwf	??_tc_temperature_trans+7
  5418  0122  0AD6               	incf	??_tc_temperature_trans+4,f
  5419  0123  1903               	skipnz
  5420  0124  0AD7               	incf	??_tc_temperature_trans+5,f
  5421  0125  1903               	skipnz
  5422  0126  0AD8               	incf	??_tc_temperature_trans+6,f
  5423  0127  1903               	skipnz
  5424  0128  0AD9               	incf	??_tc_temperature_trans+7,f
  5425  0129  0856               	movf	??_tc_temperature_trans+4,w
  5426  012A  07D2               	addwf	??_tc_temperature_trans,f
  5427  012B  0857               	movf	??_tc_temperature_trans+5,w
  5428  012C  3DD3               	addwfc	??_tc_temperature_trans+1,f
  5429  012D  0858               	movf	??_tc_temperature_trans+6,w
  5430  012E  3DD4               	addwfc	??_tc_temperature_trans+2,f
  5431  012F  0859               	movf	??_tc_temperature_trans+7,w
  5432  0130  3DD5               	addwfc	??_tc_temperature_trans+3,f
  5433  0131  0855               	movf	??_tc_temperature_trans+3,w
  5434  0132  00A7               	movwf	_temperature_value+3
  5435  0133  0854               	movf	??_tc_temperature_trans+2,w
  5436  0134  00A6               	movwf	_temperature_value+2
  5437  0135  0853               	movf	??_tc_temperature_trans+1,w
  5438  0136  00A5               	movwf	_temperature_value+1
  5439  0137  0852               	movf	??_tc_temperature_trans,w
  5440  0138  00A4               	movwf	_temperature_value
  5441                           
  5442                           ;max31856.c: 178: temperature_int = temperature_value>>3;
  5443  0139  0824               	movf	_temperature_value,w
  5444  013A  00D2               	movwf	??_tc_temperature_trans
  5445  013B  0825               	movf	_temperature_value+1,w
  5446  013C  00D3               	movwf	??_tc_temperature_trans+1
  5447  013D  0826               	movf	_temperature_value+2,w
  5448  013E  00D4               	movwf	??_tc_temperature_trans+2
  5449  013F  0827               	movf	_temperature_value+3,w
  5450  0140  00D5               	movwf	??_tc_temperature_trans+3
  5451  0141  3003               	movlw	3
  5452  0142                     u2855:	
  5453  0142  36D5               	lsrf	??_tc_temperature_trans+3,f
  5454  0143  0CD4               	rrf	??_tc_temperature_trans+2,f
  5455  0144  0CD3               	rrf	??_tc_temperature_trans+1,f
  5456  0145  0CD2               	rrf	??_tc_temperature_trans,f
  5457  0146  0B89               	decfsz	9,f
  5458  0147  2942               	goto	u2855
  5459  0148  0853               	movf	??_tc_temperature_trans+1,w
  5460  0149  00B9               	movwf	_temperature_int+1
  5461  014A  0852               	movf	??_tc_temperature_trans,w
  5462  014B  00B8               	movwf	_temperature_int
  5463                           
  5464                           ;max31856.c: 179: temperature_decimal = temperature_value & 0x07;
  5465  014C  0824               	movf	_temperature_value,w
  5466  014D  3907               	andlw	7
  5467  014E  00D2               	movwf	??_tc_temperature_trans
  5468  014F  0852               	movf	??_tc_temperature_trans,w
  5469  0150  00BB               	movwf	_temperature_decimal
  5470                           
  5471                           ;max31856.c: 180: if(temperature_decimal > 3) temperature_decimal++;
  5472  0151  3004               	movlw	4
  5473  0152  023B               	subwf	_temperature_decimal,w
  5474  0153  1C03               	skipc
  5475  0154  2959               	goto	l452
  5476  0155  3001               	movlw	1
  5477  0156  00D2               	movwf	??_tc_temperature_trans
  5478  0157  0852               	movf	??_tc_temperature_trans,w
  5479  0158  07BB               	addwf	_temperature_decimal,f
  5480  0159                     l452:	
  5481                           
  5482                           ;max31856.c: 181: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5483  0159  3003               	movlw	3
  5484  015A  063B               	xorwf	_temperature_decimal,w
  5485  015B  1903               	btfsc	3,2
  5486  015C  2961               	goto	l455
  5487  015D  3008               	movlw	8
  5488  015E  063B               	xorwf	_temperature_decimal,w
  5489  015F  1D03               	btfss	3,2
  5490  0160  0008               	return
  5491  0161                     l455:	
  5492  0161  1C38               	btfss	_temperature_int,0
  5493  0162  0008               	return
  5494  0163  3001               	movlw	1
  5495  0164  00D2               	movwf	??_tc_temperature_trans
  5496  0165  0852               	movf	??_tc_temperature_trans,w
  5497  0166  07BB               	addwf	_temperature_decimal,f
  5498                           
  5499                           ;max31856.c: 182: }
  5500  0167  0008               	return
  5501  0168                     l3637:	
  5502                           
  5503                           ;max31856.c: 183: else
  5504                           ;max31856.c: 184: {
  5505                           ;max31856.c: 185: temperature_sign = 0;
  5506  0168  01BC               	clrf	_temperature_sign
  5507                           
  5508                           ;max31856.c: 186: temperature_int = temperature_value>>3;
  5509  0169  0824               	movf	_temperature_value,w
  5510  016A  00D2               	movwf	??_tc_temperature_trans
  5511  016B  0825               	movf	_temperature_value+1,w
  5512  016C  00D3               	movwf	??_tc_temperature_trans+1
  5513  016D  0826               	movf	_temperature_value+2,w
  5514  016E  00D4               	movwf	??_tc_temperature_trans+2
  5515  016F  0827               	movf	_temperature_value+3,w
  5516  0170  00D5               	movwf	??_tc_temperature_trans+3
  5517  0171  3003               	movlw	3
  5518  0172                     u2905:	
  5519  0172  36D5               	lsrf	??_tc_temperature_trans+3,f
  5520  0173  0CD4               	rrf	??_tc_temperature_trans+2,f
  5521  0174  0CD3               	rrf	??_tc_temperature_trans+1,f
  5522  0175  0CD2               	rrf	??_tc_temperature_trans,f
  5523  0176  0B89               	decfsz	9,f
  5524  0177  2972               	goto	u2905
  5525  0178  0853               	movf	??_tc_temperature_trans+1,w
  5526  0179  00B9               	movwf	_temperature_int+1
  5527  017A  0852               	movf	??_tc_temperature_trans,w
  5528  017B  00B8               	movwf	_temperature_int
  5529                           
  5530                           ;max31856.c: 187: temperature_decimal = temperature_value & 0x07;
  5531  017C  0824               	movf	_temperature_value,w
  5532  017D  3907               	andlw	7
  5533  017E  00D2               	movwf	??_tc_temperature_trans
  5534  017F  0852               	movf	??_tc_temperature_trans,w
  5535  0180  00BB               	movwf	_temperature_decimal
  5536                           
  5537                           ;max31856.c: 188: if(temperature_decimal > 3) temperature_decimal++;
  5538  0181  3004               	movlw	4
  5539  0182  023B               	subwf	_temperature_decimal,w
  5540  0183  1C03               	skipc
  5541  0184  2989               	goto	l457
  5542  0185  3001               	movlw	1
  5543  0186  00D2               	movwf	??_tc_temperature_trans
  5544  0187  0852               	movf	??_tc_temperature_trans,w
  5545  0188  07BB               	addwf	_temperature_decimal,f
  5546  0189                     l457:	
  5547                           
  5548                           ;max31856.c: 189: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  5549  0189  3004               	movlw	4
  5550  018A  063B               	xorwf	_temperature_decimal,w
  5551  018B  1903               	btfsc	3,2
  5552  018C  2991               	goto	l460
  5553  018D  3008               	movlw	8
  5554  018E  063B               	xorwf	_temperature_decimal,w
  5555  018F  1D03               	btfss	3,2
  5556  0190  0008               	return
  5557  0191                     l460:	
  5558  0191  1C38               	btfss	_temperature_int,0
  5559  0192  0008               	return
  5560  0193  3001               	movlw	1
  5561  0194  00D2               	movwf	??_tc_temperature_trans
  5562  0195  0852               	movf	??_tc_temperature_trans,w
  5563  0196  07BB               	addwf	_temperature_decimal,f
  5564  0197  0008               	return
  5565  0198                     __end_of_tc_temperature_trans:	
  5566                           
  5567                           	psect	text22
  5568  0EC7                     __ptext22:	
  5569 ;; *************** function _maxim_clear_fault_status *****************
  5570 ;; Defined at:
  5571 ;;		line 155 in file "mcc_generated_files/max31856.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;Total ram usage:        1 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    5
  5592 ;; This function calls:
  5593 ;;		_maxim_31856_read_register
  5594 ;;		_maxim_31856_write_register
  5595 ;; This function is called by:
  5596 ;;		_temperature_display
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _maxim_clear_fault_status
  5602  0EC7                     _maxim_clear_fault_status:	
  5603                           
  5604                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  5608  0EC7  3000               	movlw	0
  5609  0EC8  318E  26D7  318E   	fcall	_maxim_31856_read_register
  5610  0ECB  00F7               	movwf	??_maxim_clear_fault_status
  5611  0ECC  0877               	movf	??_maxim_clear_fault_status,w
  5612  0ECD  00F9               	movwf	_uch_cr0
  5613                           
  5614                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  5615  0ECE  14F9               	bsf	_uch_cr0,1
  5616                           
  5617                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  5618  0ECF  0879               	movf	_uch_cr0,w
  5619  0ED0  00F7               	movwf	??_maxim_clear_fault_status
  5620  0ED1  0877               	movf	??_maxim_clear_fault_status,w
  5621  0ED2  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5622  0ED3  3080               	movlw	128
  5623  0ED4  318E  26AB         	fcall	_maxim_31856_write_register
  5624  0ED6  0008               	return
  5625  0ED7                     __end_of_maxim_clear_fault_status:	
  5626                           
  5627                           	psect	text23
  5628  0718                     __ptext23:	
  5629 ;; *************** function _err_Display *****************
  5630 ;; Defined at:
  5631 ;;		line 151 in file "mcc_generated_files/ht1621.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  num             4    7[BANK0 ] unsigned char [4]
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;Total ram usage:        5 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    5
  5652 ;; This function calls:
  5653 ;;		_WriteAll_1621
  5654 ;; This function is called by:
  5655 ;;		_temperature_display
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _err_Display
  5661  0718                     _err_Display:	
  5662                           
  5663                           ;ht1621.c: 153: unsigned char num[4]={0};
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5667  0718  0020               	movlb	0	; select bank0
  5668  0719  082B               	movf	err_Display@F2117+3,w
  5669  071A  00DC               	movwf	err_Display@num+3
  5670  071B  082A               	movf	err_Display@F2117+2,w
  5671  071C  00DB               	movwf	err_Display@num+2
  5672  071D  0829               	movf	err_Display@F2117+1,w
  5673  071E  00DA               	movwf	err_Display@num+1
  5674  071F  0828               	movf	err_Display@F2117,w
  5675  0720  00D9               	movwf	err_Display@num
  5676                           
  5677                           ;ht1621.c: 154: num[1] = Dis_TAB[0x10];
  5678  0721  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  5679  0722  0084               	movwf	4
  5680  0723  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  5681  0724  0085               	movwf	5
  5682  0725  0800               	movf	0,w	;code access
  5683  0726  00D8               	movwf	??_err_Display
  5684  0727  0858               	movf	??_err_Display,w
  5685  0728  00DA               	movwf	err_Display@num+1
  5686                           
  5687                           ;ht1621.c: 155: num[2] = Dis_TAB[0x0c];
  5688  0729  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  5689  072A  0084               	movwf	4
  5690  072B  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  5691  072C  0085               	movwf	5
  5692  072D  0800               	movf	0,w	;code access
  5693  072E  00D8               	movwf	??_err_Display
  5694  072F  0858               	movf	??_err_Display,w
  5695  0730  00DB               	movwf	err_Display@num+2
  5696                           
  5697                           ;ht1621.c: 156: WriteAll_1621(0, num, 4);
  5698  0731  3059               	movlw	low err_Display@num
  5699  0732  00D2               	movwf	WriteAll_1621@p
  5700  0733  3000               	movlw	high err_Display@num
  5701  0734  00D3               	movwf	WriteAll_1621@p+1
  5702  0735  3004               	movlw	4
  5703  0736  00D8               	movwf	??_err_Display
  5704  0737  0858               	movf	??_err_Display,w
  5705  0738  00D4               	movwf	WriteAll_1621@cnt
  5706  0739  3000               	movlw	0
  5707  073A  3186  2630         	fcall	_WriteAll_1621
  5708  073C  0008               	return
  5709  073D                     __end_of_err_Display:	
  5710                           
  5711                           	psect	text24
  5712  0198                     __ptext24:	
  5713 ;; *************** function _Tc_Display *****************
  5714 ;; Defined at:
  5715 ;;		line 109 in file "mcc_generated_files/ht1621.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  data            2   11[BANK0 ] unsigned int 
  5720 ;;  count           1   10[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;Total ram usage:        4 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    5
  5737 ;; This function calls:
  5738 ;;		_WriteAll_1621
  5739 ;;		___lwdiv
  5740 ;;		___lwmod
  5741 ;;		_memset
  5742 ;; This function is called by:
  5743 ;;		_temperature_display
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _Tc_Display
  5749  0198                     _Tc_Display:	
  5750                           
  5751                           ;ht1621.c: 111: unsigned char count = 0;
  5752                           
  5753                           ;incstack = 0
  5754                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5755  0198  0020               	movlb	0	; select bank0
  5756  0199  01DC               	clrf	Tc_Display@count
  5757                           
  5758                           ;ht1621.c: 112: unsigned int data = temperature_int;
  5759  019A  0839               	movf	_temperature_int+1,w
  5760  019B  00DE               	movwf	Tc_Display@data+1
  5761  019C  0838               	movf	_temperature_int,w
  5762  019D  00DD               	movwf	Tc_Display@data
  5763                           
  5764                           ;ht1621.c: 113: memset(display_buff,0,4);
  5765  019E  3000               	movlw	0
  5766  019F  00F3               	movwf	memset@c
  5767  01A0  00F4               	movwf	memset@c+1
  5768  01A1  3004               	movlw	4
  5769  01A2  00F5               	movwf	memset@n
  5770  01A3  3000               	movlw	0
  5771  01A4  00F6               	movwf	memset@n+1
  5772  01A5  304E               	movlw	(low (_display_buff| 0))& (0+255)
  5773  01A6  3187  27E0  3181   	fcall	_memset
  5774  01A9                     l3661:	
  5775                           ;ht1621.c: 114: while(data)
  5776                           
  5777  01A9  0020               	movlb	0	; select bank0
  5778  01AA  085D               	movf	Tc_Display@data,w
  5779  01AB  045E               	iorwf	Tc_Display@data+1,w
  5780  01AC  1903               	btfsc	3,2
  5781  01AD  2A19               	goto	l3667
  5782                           
  5783                           ;ht1621.c: 115: {
  5784                           ;ht1621.c: 116: count++;
  5785  01AE  3001               	movlw	1
  5786  01AF  0020               	movlb	0	; select bank0
  5787  01B0  00DB               	movwf	??_Tc_Display
  5788  01B1  085B               	movf	??_Tc_Display,w
  5789  01B2  07DC               	addwf	Tc_Display@count,f
  5790                           
  5791                           ;ht1621.c: 117: data /=10;
  5792  01B3  300A               	movlw	10
  5793  01B4  00D3               	movwf	___lwdiv@divisor
  5794  01B5  3000               	movlw	0
  5795  01B6  00D4               	movwf	___lwdiv@divisor+1
  5796  01B7  085E               	movf	Tc_Display@data+1,w
  5797  01B8  00D6               	movwf	___lwdiv@dividend+1
  5798  01B9  085D               	movf	Tc_Display@data,w
  5799  01BA  00D5               	movwf	___lwdiv@dividend
  5800  01BB  3185  25FB  3181   	fcall	___lwdiv
  5801  01BE  0020               	movlb	0	; select bank0
  5802  01BF  0854               	movf	?___lwdiv+1,w
  5803  01C0  00DE               	movwf	Tc_Display@data+1
  5804  01C1  0853               	movf	?___lwdiv,w
  5805  01C2  00DD               	movwf	Tc_Display@data
  5806  01C3  29A9               	goto	l3661
  5807  01C4                     l3663:	
  5808                           ;ht1621.c: 120: {
  5809                           ;ht1621.c: 121: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  5810                           
  5811                           ;ht1621.c: 118: }
  5812                           ;ht1621.c: 119: switch(count)
  5813                           
  5814  01C4  3064               	movlw	100
  5815  01C5  00D3               	movwf	___lwdiv@divisor
  5816  01C6  3000               	movlw	0
  5817  01C7  00D4               	movwf	___lwdiv@divisor+1
  5818  01C8  0839               	movf	_temperature_int+1,w
  5819  01C9  00D6               	movwf	___lwdiv@dividend+1
  5820  01CA  0838               	movf	_temperature_int,w
  5821  01CB  00D5               	movwf	___lwdiv@dividend
  5822  01CC  3185  25FB  3181   	fcall	___lwdiv
  5823  01CF  0020               	movlb	0	; select bank0
  5824  01D0  0854               	movf	?___lwdiv+1,w
  5825  01D1  0085               	movwf	5
  5826  01D2  0853               	movf	?___lwdiv,w
  5827  01D3  0084               	movwf	4
  5828  01D4  3000               	movlw	low (_Dis_TAB| (0+32768))
  5829  01D5  0784               	addwf	4,f
  5830  01D6  3090               	movlw	high (_Dis_TAB| (0+32768))
  5831  01D7  3D85               	addwfc	5,f
  5832  01D8  0800               	movf	0,w	;code access
  5833  01D9  00DB               	movwf	??_Tc_Display
  5834  01DA  085B               	movf	??_Tc_Display,w
  5835  01DB  00CE               	movwf	_display_buff
  5836  01DC                     l597:	
  5837                           ;ht1621.c: 122: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  5838                           
  5839  01DC  300A               	movlw	10
  5840  01DD  00D3               	movwf	___lwdiv@divisor
  5841  01DE  3000               	movlw	0
  5842  01DF  00D4               	movwf	___lwdiv@divisor+1
  5843  01E0  0839               	movf	_temperature_int+1,w
  5844  01E1  00F6               	movwf	___lwmod@dividend+1
  5845  01E2  0838               	movf	_temperature_int,w
  5846  01E3  00F5               	movwf	___lwmod@dividend
  5847  01E4  3064               	movlw	100
  5848  01E5  00F3               	movwf	___lwmod@divisor
  5849  01E6  3000               	movlw	0
  5850  01E7  00F4               	movwf	___lwmod@divisor+1
  5851  01E8  3186  2698  3181   	fcall	___lwmod
  5852  01EB  0874               	movf	?___lwmod+1,w
  5853  01EC  0020               	movlb	0	; select bank0
  5854  01ED  00D6               	movwf	___lwdiv@dividend+1
  5855  01EE  0873               	movf	?___lwmod,w
  5856  01EF  00D5               	movwf	___lwdiv@dividend
  5857  01F0  3185  25FB  3181   	fcall	___lwdiv
  5858  01F3  0020               	movlb	0	; select bank0
  5859  01F4  0854               	movf	?___lwdiv+1,w
  5860  01F5  0085               	movwf	5
  5861  01F6  0853               	movf	?___lwdiv,w
  5862  01F7  0084               	movwf	4
  5863  01F8  3000               	movlw	low (_Dis_TAB| (0+32768))
  5864  01F9  0784               	addwf	4,f
  5865  01FA  3090               	movlw	high (_Dis_TAB| (0+32768))
  5866  01FB  3D85               	addwfc	5,f
  5867  01FC  0800               	movf	0,w	;code access
  5868  01FD  00DB               	movwf	??_Tc_Display
  5869  01FE  085B               	movf	??_Tc_Display,w
  5870  01FF  00CF               	movwf	_display_buff+1
  5871  0200                     l598:	
  5872                           ;ht1621.c: 123: case 1:display_buff[2] = Dis_TAB[temperature_int%10];
  5873                           
  5874  0200  300A               	movlw	10
  5875  0201  00F3               	movwf	___lwmod@divisor
  5876  0202  3000               	movlw	0
  5877  0203  00F4               	movwf	___lwmod@divisor+1
  5878  0204  0839               	movf	_temperature_int+1,w
  5879  0205  00F6               	movwf	___lwmod@dividend+1
  5880  0206  0838               	movf	_temperature_int,w
  5881  0207  00F5               	movwf	___lwmod@dividend
  5882  0208  3186  2698  3181   	fcall	___lwmod
  5883  020B  0874               	movf	?___lwmod+1,w
  5884  020C  0085               	movwf	5
  5885  020D  0873               	movf	?___lwmod,w
  5886  020E  0084               	movwf	4
  5887  020F  3000               	movlw	low (_Dis_TAB| (0+32768))
  5888  0210  0784               	addwf	4,f
  5889  0211  3090               	movlw	high (_Dis_TAB| (0+32768))
  5890  0212  3D85               	addwfc	5,f
  5891  0213  0800               	movf	0,w	;code access
  5892  0214  0020               	movlb	0	; select bank0
  5893  0215  00DB               	movwf	??_Tc_Display
  5894  0216  085B               	movf	??_Tc_Display,w
  5895  0217  00D0               	movwf	_display_buff+2
  5896                           
  5897                           ;ht1621.c: 125: }
  5898                           
  5899                           ;ht1621.c: 124: default:break;
  5900  0218  2A24               	goto	l3669
  5901  0219                     l3667:	
  5902  0219  085C               	movf	Tc_Display@count,w
  5903                           
  5904                           ; Switch size 1, requested type "space"
  5905                           ; Number of cases is 3, Range of values is 1 to 3
  5906                           ; switch strategies available:
  5907                           ; Name         Instructions Cycles
  5908                           ; simple_byte           10     6 (average)
  5909                           ; direct_byte           15     9 (fixed)
  5910                           ; jumptable            263     9 (fixed)
  5911                           ;	Chosen strategy is simple_byte
  5912  021A  3A01               	xorlw	1	; case 1
  5913  021B  1903               	skipnz
  5914  021C  2A00               	goto	l598
  5915  021D  3A03               	xorlw	3	; case 2
  5916  021E  1903               	skipnz
  5917  021F  29DC               	goto	l597
  5918  0220  3A01               	xorlw	1	; case 3
  5919  0221  1903               	skipnz
  5920  0222  29C4               	goto	l3663
  5921  0223  2A24               	goto	l3669
  5922  0224                     l3669:	
  5923                           
  5924                           ;ht1621.c: 126: if(temperature_sign == 1) display_buff[0]|=0x08;
  5925  0224  033C               	decf	_temperature_sign,w
  5926  0225  1903               	btfsc	3,2
  5927  0226  15CE               	bsf	_display_buff,3
  5928                           
  5929                           ;ht1621.c: 127: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  5930  0227  083B               	movf	_temperature_decimal,w
  5931  0228  3E00               	addlw	low (_Dis_TAB| (0+32768))
  5932  0229  0084               	movwf	4
  5933  022A  3090               	movlw	high (_Dis_TAB| (0+32768))
  5934  022B  1803               	skipnc
  5935  022C  3E01               	addlw	1
  5936  022D  0085               	movwf	5
  5937  022E  0800               	movf	0,w	;code access
  5938  022F  3808               	iorlw	8
  5939  0230  00DB               	movwf	??_Tc_Display
  5940  0231  085B               	movf	??_Tc_Display,w
  5941  0232  00D1               	movwf	_display_buff+3
  5942                           
  5943                           ;ht1621.c: 128: WriteAll_1621(0,display_buff,4);
  5944  0233  304E               	movlw	low _display_buff
  5945  0234  00D2               	movwf	WriteAll_1621@p
  5946  0235  3000               	movlw	high _display_buff
  5947  0236  00D3               	movwf	WriteAll_1621@p+1
  5948  0237  3004               	movlw	4
  5949  0238  00DB               	movwf	??_Tc_Display
  5950  0239  085B               	movf	??_Tc_Display,w
  5951  023A  00D4               	movwf	WriteAll_1621@cnt
  5952  023B  3000               	movlw	0
  5953  023C  3186  2630         	fcall	_WriteAll_1621
  5954  023E  0008               	return
  5955  023F                     __end_of_Tc_Display:	
  5956                           
  5957                           	psect	text25
  5958  07E0                     __ptext25:	
  5959 ;; *************** function _memset *****************
  5960 ;; Defined at:
  5961 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  p1              1    wreg     PTR void 
  5964 ;;		 -> display_buff(4), 
  5965 ;;  c               2    3[COMMON] int 
  5966 ;;  n               2    5[COMMON] unsigned int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  p1              1    0[BANK0 ] PTR void 
  5969 ;;		 -> display_buff(4), 
  5970 ;;  p               1    1[BANK0 ] PTR unsigned char 
  5971 ;;		 -> display_buff(4), 
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      PTR void 
  5974 ;; Registers used:
  5975 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;Total ram usage:        7 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    3
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_Tc_Display
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function _memset
  5997  07E0                     _memset:	
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6001                           ;memset@p1 stored from wreg
  6002  07E0  0020               	movlb	0	; select bank0
  6003  07E1  00D2               	movwf	memset@p1
  6004  07E2  0852               	movf	memset@p1,w
  6005  07E3  00F7               	movwf	??_memset
  6006  07E4  0877               	movf	??_memset,w
  6007  07E5  00D3               	movwf	memset@p
  6008  07E6                     l3487:	
  6009  07E6  3001               	movlw	1
  6010  07E7  02F5               	subwf	memset@n,f
  6011  07E8  3000               	movlw	0
  6012  07E9  3BF6               	subwfb	memset@n+1,f
  6013  07EA  0A75               	incf	memset@n,w
  6014  07EB  1903               	btfsc	3,2
  6015  07EC  0A76               	incf	memset@n+1,w
  6016  07ED  1903               	btfsc	3,2
  6017  07EE  0008               	return
  6018  07EF  0873               	movf	memset@c,w
  6019  07F0  00F7               	movwf	??_memset
  6020  07F1  0853               	movf	memset@p,w
  6021  07F2  0086               	movwf	6
  6022  07F3  0187               	clrf	7
  6023  07F4  0877               	movf	??_memset,w
  6024  07F5  0081               	movwf	1
  6025  07F6  3001               	movlw	1
  6026  07F7  00F7               	movwf	??_memset
  6027  07F8  0877               	movf	??_memset,w
  6028  07F9  07D3               	addwf	memset@p,f
  6029  07FA  2FE6               	goto	l3487
  6030  07FB                     __end_of_memset:	
  6031                           ;	Return value of _memset is never used
  6032                           
  6033                           
  6034                           	psect	text26
  6035  0698                     __ptext26:	
  6036 ;; *************** function ___lwmod *****************
  6037 ;; Defined at:
  6038 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  divisor         2    3[COMMON] unsigned int 
  6041 ;;  dividend        2    5[COMMON] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  counter         1    0[BANK0 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2    3[COMMON] unsigned int 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        6 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    3
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_Tc_Display
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function ___lwmod
  6069  0698                     ___lwmod:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6073  0698  0873               	movf	___lwmod@divisor,w
  6074  0699  0474               	iorwf	___lwmod@divisor+1,w
  6075  069A  1903               	btfsc	3,2
  6076  069B  2EC0               	goto	l3595
  6077  069C  0020               	movlb	0	; select bank0
  6078  069D  01D2               	clrf	___lwmod@counter
  6079  069E  0AD2               	incf	___lwmod@counter,f
  6080  069F                     l3585:	
  6081  069F  1BF4               	btfsc	___lwmod@divisor+1,7
  6082  06A0  2EAB               	goto	l3587
  6083  06A1  3001               	movlw	1
  6084  06A2                     u2785:	
  6085  06A2  35F3               	lslf	___lwmod@divisor,f
  6086  06A3  0DF4               	rlf	___lwmod@divisor+1,f
  6087  06A4  0B89               	decfsz	9,f
  6088  06A5  2EA2               	goto	u2785
  6089  06A6  3001               	movlw	1
  6090  06A7  00F7               	movwf	??___lwmod
  6091  06A8  0877               	movf	??___lwmod,w
  6092  06A9  07D2               	addwf	___lwmod@counter,f
  6093  06AA  2E9F               	goto	l3585
  6094  06AB                     l3587:	
  6095  06AB  0874               	movf	___lwmod@divisor+1,w
  6096  06AC  0276               	subwf	___lwmod@dividend+1,w
  6097  06AD  1D03               	skipz
  6098  06AE  2EB1               	goto	u2805
  6099  06AF  0873               	movf	___lwmod@divisor,w
  6100  06B0  0275               	subwf	___lwmod@dividend,w
  6101  06B1                     u2805:	
  6102  06B1  1C03               	skipc
  6103  06B2  2EB7               	goto	l3591
  6104  06B3  0873               	movf	___lwmod@divisor,w
  6105  06B4  02F5               	subwf	___lwmod@dividend,f
  6106  06B5  0874               	movf	___lwmod@divisor+1,w
  6107  06B6  3BF6               	subwfb	___lwmod@dividend+1,f
  6108  06B7                     l3591:	
  6109  06B7  3001               	movlw	1
  6110  06B8                     u2815:	
  6111  06B8  36F4               	lsrf	___lwmod@divisor+1,f
  6112  06B9  0CF3               	rrf	___lwmod@divisor,f
  6113  06BA  0B89               	decfsz	9,f
  6114  06BB  2EB8               	goto	u2815
  6115  06BC  3001               	movlw	1
  6116  06BD  02D2               	subwf	___lwmod@counter,f
  6117  06BE  1D03               	btfss	3,2
  6118  06BF  2EAB               	goto	l3587
  6119  06C0                     l3595:	
  6120  06C0  0876               	movf	___lwmod@dividend+1,w
  6121  06C1  00F4               	movwf	?___lwmod+1
  6122  06C2  0875               	movf	___lwmod@dividend,w
  6123  06C3  00F3               	movwf	?___lwmod
  6124  06C4  0008               	return
  6125  06C5                     __end_of___lwmod:	
  6126                           
  6127                           	psect	text27
  6128  05FB                     __ptext27:	
  6129 ;; *************** function ___lwdiv *****************
  6130 ;; Defined at:
  6131 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  divisor         2    1[BANK0 ] unsigned int 
  6134 ;;  dividend        2    3[BANK0 ] unsigned int 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  quotient        2    7[BANK0 ] unsigned int 
  6137 ;;  counter         1    6[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  2    1[BANK0 ] unsigned int 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:        8 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    3
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_Tc_Display
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function ___lwdiv
  6163  05FB                     ___lwdiv:	
  6164                           
  6165                           ;incstack = 0
  6166                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6167  05FB  0020               	movlb	0	; select bank0
  6168  05FC  01D9               	clrf	___lwdiv@quotient
  6169  05FD  01DA               	clrf	___lwdiv@quotient+1
  6170  05FE  0853               	movf	___lwdiv@divisor,w
  6171  05FF  0454               	iorwf	___lwdiv@divisor+1,w
  6172  0600  1903               	btfsc	3,2
  6173  0601  2E2B               	goto	l3573
  6174  0602  01D8               	clrf	___lwdiv@counter
  6175  0603  0AD8               	incf	___lwdiv@counter,f
  6176  0604                     l3561:	
  6177  0604  1BD4               	btfsc	___lwdiv@divisor+1,7
  6178  0605  2E10               	goto	l3563
  6179  0606  3001               	movlw	1
  6180  0607                     u2715:	
  6181  0607  35D3               	lslf	___lwdiv@divisor,f
  6182  0608  0DD4               	rlf	___lwdiv@divisor+1,f
  6183  0609  0B89               	decfsz	9,f
  6184  060A  2E07               	goto	u2715
  6185  060B  3001               	movlw	1
  6186  060C  00D7               	movwf	??___lwdiv
  6187  060D  0857               	movf	??___lwdiv,w
  6188  060E  07D8               	addwf	___lwdiv@counter,f
  6189  060F  2E04               	goto	l3561
  6190  0610                     l3563:	
  6191  0610  3001               	movlw	1
  6192  0611                     u2735:	
  6193  0611  35D9               	lslf	___lwdiv@quotient,f
  6194  0612  0DDA               	rlf	___lwdiv@quotient+1,f
  6195  0613  0B89               	decfsz	9,f
  6196  0614  2E11               	goto	u2735
  6197  0615  0854               	movf	___lwdiv@divisor+1,w
  6198  0616  0256               	subwf	___lwdiv@dividend+1,w
  6199  0617  1D03               	skipz
  6200  0618  2E1B               	goto	u2745
  6201  0619  0853               	movf	___lwdiv@divisor,w
  6202  061A  0255               	subwf	___lwdiv@dividend,w
  6203  061B                     u2745:	
  6204  061B  1C03               	skipc
  6205  061C  2E22               	goto	l3569
  6206  061D  0853               	movf	___lwdiv@divisor,w
  6207  061E  02D5               	subwf	___lwdiv@dividend,f
  6208  061F  0854               	movf	___lwdiv@divisor+1,w
  6209  0620  3BD6               	subwfb	___lwdiv@dividend+1,f
  6210  0621  1459               	bsf	___lwdiv@quotient,0
  6211  0622                     l3569:	
  6212  0622  3001               	movlw	1
  6213  0623                     u2755:	
  6214  0623  36D4               	lsrf	___lwdiv@divisor+1,f
  6215  0624  0CD3               	rrf	___lwdiv@divisor,f
  6216  0625  0B89               	decfsz	9,f
  6217  0626  2E23               	goto	u2755
  6218  0627  3001               	movlw	1
  6219  0628  02D8               	subwf	___lwdiv@counter,f
  6220  0629  1D03               	btfss	3,2
  6221  062A  2E10               	goto	l3563
  6222  062B                     l3573:	
  6223  062B  085A               	movf	___lwdiv@quotient+1,w
  6224  062C  00D4               	movwf	?___lwdiv+1
  6225  062D  0859               	movf	___lwdiv@quotient,w
  6226  062E  00D3               	movwf	?___lwdiv
  6227  062F  0008               	return
  6228  0630                     __end_of___lwdiv:	
  6229                           
  6230                           	psect	text28
  6231  05C3                     __ptext28:	
  6232 ;; *************** function _one_temperature_trans *****************
  6233 ;; Defined at:
  6234 ;;		line 200 in file "mcc_generated_files/max31856.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        2 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    6
  6255 ;; This function calls:
  6256 ;;		_maxim_31856_read_nregisters
  6257 ;;		_maxim_start_conversion
  6258 ;; This function is called by:
  6259 ;;		_temperature_process
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _one_temperature_trans
  6265  05C3                     _one_temperature_trans:	
  6266                           
  6267                           ;max31856.c: 202: maxim_start_conversion((uint8_t) 0x40);
  6268                           
  6269                           ;incstack = 0
  6270                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6271  05C3  3040               	movlw	64
  6272  05C4  318F  27CB  3185   	fcall	_maxim_start_conversion
  6273                           
  6274                           ;max31856.c: 203: MAX31856Sec = 0;
  6275  05C7  01F8               	clrf	_MAX31856Sec
  6276  05C8                     l464:	
  6277                           ;max31856.c: 204: while( !(RB3 == 0 || MAX31856Sec > 2) ) ;
  6278                           
  6279  05C8  0020               	movlb	0	; select bank0
  6280  05C9  1D8D               	btfss	13,3	;volatile
  6281  05CA  2DCF               	goto	l3775
  6282  05CB  3003               	movlw	3
  6283  05CC  0278               	subwf	_MAX31856Sec,w
  6284  05CD  1C03               	skipc
  6285  05CE  2DC8               	goto	l464
  6286  05CF                     l3775:	
  6287                           
  6288                           ;max31856.c: 205: if( MAX31856Sec > 2)
  6289  05CF  3003               	movlw	3
  6290  05D0  0278               	subwf	_MAX31856Sec,w
  6291  05D1  1C03               	skipc
  6292  05D2  2DD6               	goto	l3779
  6293                           
  6294                           ;max31856.c: 206: {
  6295                           ;max31856.c: 207: uch_sr = 0x01;
  6296  05D3  01C5               	clrf	_uch_sr
  6297  05D4  0AC5               	incf	_uch_sr,f
  6298                           
  6299                           ;max31856.c: 208: }
  6300  05D5  0008               	return
  6301  05D6                     l3779:	
  6302                           
  6303                           ;max31856.c: 209: else
  6304                           ;max31856.c: 210: {
  6305                           ;max31856.c: 211: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  6306  05D6  3046               	movlw	(low (_uch_reg| 0))& (0+255)
  6307  05D7  00DA               	movwf	??_one_temperature_trans
  6308  05D8  085A               	movf	??_one_temperature_trans,w
  6309  05D9  00D5               	movwf	maxim_31856_read_nregisters@uch_buff
  6310  05DA  3006               	movlw	6
  6311  05DB  00DB               	movwf	??_one_temperature_trans+1
  6312  05DC  085B               	movf	??_one_temperature_trans+1,w
  6313  05DD  00D6               	movwf	maxim_31856_read_nregisters@uch_nBytes
  6314  05DE  300A               	movlw	10
  6315  05DF  318F  274E         	fcall	_maxim_31856_read_nregisters
  6316                           
  6317                           ;max31856.c: 212: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  6318  05E1  0020               	movlb	0	; select bank0
  6319  05E2  0846               	movf	_uch_reg,w
  6320  05E3  00DA               	movwf	??_one_temperature_trans
  6321  05E4  085A               	movf	??_one_temperature_trans,w
  6322  05E5  00BF               	movwf	_uch_cjth
  6323  05E6  0847               	movf	_uch_reg+1,w
  6324  05E7  00DA               	movwf	??_one_temperature_trans
  6325  05E8  085A               	movf	??_one_temperature_trans,w
  6326  05E9  00C0               	movwf	_uch_cjtl
  6327                           
  6328                           ;max31856.c: 213: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  6329  05EA  0848               	movf	_uch_reg+2,w
  6330  05EB  00DA               	movwf	??_one_temperature_trans
  6331  05EC  085A               	movf	??_one_temperature_trans,w
  6332  05ED  00FA               	movwf	_uch_ltcbh
  6333  05EE  0849               	movf	_uch_reg+3,w
  6334  05EF  00DA               	movwf	??_one_temperature_trans
  6335  05F0  085A               	movf	??_one_temperature_trans,w
  6336  05F1  00C3               	movwf	_uch_ltcbm
  6337  05F2  084A               	movf	_uch_reg+4,w
  6338  05F3  00DA               	movwf	??_one_temperature_trans
  6339  05F4  085A               	movf	??_one_temperature_trans,w
  6340  05F5  00C2               	movwf	_uch_ltcbl
  6341                           
  6342                           ;max31856.c: 214: uch_sr=uch_reg[5];
  6343  05F6  084B               	movf	_uch_reg+5,w
  6344  05F7  00DA               	movwf	??_one_temperature_trans
  6345  05F8  085A               	movf	??_one_temperature_trans,w
  6346  05F9  00C5               	movwf	_uch_sr
  6347  05FA  0008               	return
  6348  05FB                     __end_of_one_temperature_trans:	
  6349                           
  6350                           	psect	text29
  6351  0FCB                     __ptext29:	
  6352 ;; *************** function _maxim_start_conversion *****************
  6353 ;; Defined at:
  6354 ;;		line 114 in file "mcc_generated_files/max31856.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  uch_conversi    1    wreg     unsigned char 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    5
  6375 ;; This function calls:
  6376 ;;		_maxim_31856_read_register
  6377 ;;		_maxim_31856_write_register
  6378 ;; This function is called by:
  6379 ;;		_one_temperature_trans
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _maxim_start_conversion
  6385  0FCB                     _maxim_start_conversion:	
  6386                           
  6387                           ;incstack = 0
  6388                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  6389                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  6390  0FCB  0020               	movlb	0	; select bank0
  6391  0FCC  00D2               	movwf	maxim_start_conversion@uch_conversion_mode
  6392                           
  6393                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  6394  0FCD  3000               	movlw	0
  6395  0FCE  318E  26D7  318F   	fcall	_maxim_31856_read_register
  6396  0FD1  00F7               	movwf	??_maxim_start_conversion
  6397  0FD2  0877               	movf	??_maxim_start_conversion,w
  6398  0FD3  00F9               	movwf	_uch_cr0
  6399                           
  6400                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  6401  0FD4  303F               	movlw	63
  6402  0FD5  00F7               	movwf	??_maxim_start_conversion
  6403  0FD6  0877               	movf	??_maxim_start_conversion,w
  6404  0FD7  05F9               	andwf	_uch_cr0,f
  6405                           
  6406                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  6407  0FD8  0020               	movlb	0	; select bank0
  6408  0FD9  0852               	movf	maxim_start_conversion@uch_conversion_mode,w
  6409  0FDA  00F7               	movwf	??_maxim_start_conversion
  6410  0FDB  0877               	movf	??_maxim_start_conversion,w
  6411  0FDC  04F9               	iorwf	_uch_cr0,f
  6412                           
  6413                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  6414  0FDD  0879               	movf	_uch_cr0,w
  6415  0FDE  00F7               	movwf	??_maxim_start_conversion
  6416  0FDF  0877               	movf	??_maxim_start_conversion,w
  6417  0FE0  00F4               	movwf	maxim_31856_write_register@uch_register_value
  6418  0FE1  3080               	movlw	128
  6419  0FE2  318E  26AB         	fcall	_maxim_31856_write_register
  6420  0FE4  0008               	return
  6421  0FE5                     __end_of_maxim_start_conversion:	
  6422                           
  6423                           	psect	text30
  6424  0EAB                     __ptext30:	
  6425 ;; *************** function _maxim_31856_write_register *****************
  6426 ;; Defined at:
  6427 ;;		line 19 in file "mcc_generated_files/max31856.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  uch_register    1    wreg     unsigned char 
  6430 ;;  uch_register    1    4[COMMON] unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  uch_register    1    5[COMMON] unsigned char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0, pclath, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;Total ram usage:        2 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    4
  6449 ;; This function calls:
  6450 ;;		_SPI_Exchange8bit
  6451 ;; This function is called by:
  6452 ;;		_maxim_31856_init
  6453 ;;		_maxim_start_conversion
  6454 ;;		_maxim_clear_fault_status
  6455 ;;		_temperature_display
  6456 ;;		_maxim_stop_conversion
  6457 ;;		_maxim_disable_oc_fault_detection
  6458 ;;		_maxim_set_oc_fault_detection
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           
  6463                           ;psect for function _maxim_31856_write_register
  6464  0EAB                     _maxim_31856_write_register:	
  6465                           
  6466                           ;incstack = 0
  6467                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  6468                           ;maxim_31856_write_register@uch_register_address stored from wreg
  6469  0EAB  00F5               	movwf	maxim_31856_write_register@uch_register_address
  6470                           
  6471                           ;max31856.c: 21: do { LATA5 = 0; } while(0);
  6472  0EAC  0022               	movlb	2	; select bank2
  6473  0EAD  128C               	bcf	12,5	;volatile
  6474                           
  6475                           ;max31856.c: 22: SPI_Exchange8bit(uch_register_address);
  6476  0EAE  0875               	movf	maxim_31856_write_register@uch_register_address,w
  6477  0EAF  318E  268C  318E   	fcall	_SPI_Exchange8bit
  6478                           
  6479                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_value);
  6480  0EB2  0874               	movf	maxim_31856_write_register@uch_register_value,w
  6481  0EB3  318E  268C         	fcall	_SPI_Exchange8bit
  6482                           
  6483                           ;max31856.c: 24: do { LATA5 = 1; } while(0);
  6484  0EB5  0022               	movlb	2	; select bank2
  6485  0EB6  168C               	bsf	12,5	;volatile
  6486  0EB7  0008               	return
  6487  0EB8                     __end_of_maxim_31856_write_register:	
  6488                           
  6489                           	psect	text31
  6490  0ED7                     __ptext31:	
  6491 ;; *************** function _maxim_31856_read_register *****************
  6492 ;; Defined at:
  6493 ;;		line 33 in file "mcc_generated_files/max31856.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  uch_register    1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  uch_register    1    5[COMMON] unsigned char 
  6498 ;;  uch_register    1    6[COMMON] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      unsigned char 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0, pclath, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;Total ram usage:        3 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    4
  6515 ;; This function calls:
  6516 ;;		_SPI_Exchange8bit
  6517 ;; This function is called by:
  6518 ;;		_maxim_start_conversion
  6519 ;;		_maxim_clear_fault_status
  6520 ;;		_maxim_stop_conversion
  6521 ;;		_maxim_disable_oc_fault_detection
  6522 ;;		_maxim_set_oc_fault_detection
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           
  6527                           ;psect for function _maxim_31856_read_register
  6528  0ED7                     _maxim_31856_read_register:	
  6529                           
  6530                           ;incstack = 0
  6531                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  6532                           ;maxim_31856_read_register@uch_register_address stored from wreg
  6533  0ED7  00F5               	movwf	maxim_31856_read_register@uch_register_address
  6534                           
  6535                           ;max31856.c: 35: uint8_t uch_register_data;
  6536                           ;max31856.c: 36: do { LATA5 = 0; } while(0);
  6537  0ED8  0022               	movlb	2	; select bank2
  6538  0ED9  128C               	bcf	12,5	;volatile
  6539                           
  6540                           ;max31856.c: 37: SPI_Exchange8bit(uch_register_address);
  6541  0EDA  0875               	movf	maxim_31856_read_register@uch_register_address,w
  6542  0EDB  318E  268C  318E   	fcall	_SPI_Exchange8bit
  6543                           
  6544                           ;max31856.c: 38: uch_register_data=SPI_Exchange8bit(0xff);
  6545  0EDE  30FF               	movlw	255
  6546  0EDF  318E  268C         	fcall	_SPI_Exchange8bit
  6547  0EE1  00F4               	movwf	??_maxim_31856_read_register
  6548  0EE2  0874               	movf	??_maxim_31856_read_register,w
  6549  0EE3  00F6               	movwf	maxim_31856_read_register@uch_register_data
  6550                           
  6551                           ;max31856.c: 39: do { LATA5 = 1; } while(0);
  6552  0EE4  0022               	movlb	2	; select bank2
  6553  0EE5  168C               	bsf	12,5	;volatile
  6554                           
  6555                           ;max31856.c: 40: return (uch_register_data);
  6556  0EE6  0876               	movf	maxim_31856_read_register@uch_register_data,w
  6557  0EE7  0008               	return
  6558  0EE8                     __end_of_maxim_31856_read_register:	
  6559                           
  6560                           	psect	text32
  6561  0F4E                     __ptext32:	
  6562 ;; *************** function _maxim_31856_read_nregisters *****************
  6563 ;; Defined at:
  6564 ;;		line 49 in file "mcc_generated_files/max31856.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  uch_register    1    wreg     unsigned char 
  6567 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  6568 ;;		 -> uch_reg(8), 
  6569 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  uch_register    1    7[BANK0 ] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      void 
  6574 ;; Registers used:
  6575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        5 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    5
  6588 ;; This function calls:
  6589 ;;		_SPI_Exchange8bit
  6590 ;;		_SPI_Exchange8bitBuffer
  6591 ;; This function is called by:
  6592 ;;		_one_temperature_trans
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _maxim_31856_read_nregisters
  6598  0F4E                     _maxim_31856_read_nregisters:	
  6599                           
  6600                           ;incstack = 0
  6601                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6602                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  6603  0F4E  0020               	movlb	0	; select bank0
  6604  0F4F  00D9               	movwf	maxim_31856_read_nregisters@uch_register_address
  6605                           
  6606                           ;max31856.c: 51: do { LATA5 = 0; } while(0);
  6607  0F50  0022               	movlb	2	; select bank2
  6608  0F51  128C               	bcf	12,5	;volatile
  6609                           
  6610                           ;max31856.c: 52: SPI_Exchange8bit(uch_register_address);
  6611  0F52  0020               	movlb	0	; select bank0
  6612  0F53  0859               	movf	maxim_31856_read_nregisters@uch_register_address,w
  6613  0F54  318E  268C  318F   	fcall	_SPI_Exchange8bit
  6614                           
  6615                           ;max31856.c: 53: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  6616  0F57  0020               	movlb	0	; select bank0
  6617  0F58  0856               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  6618  0F59  00D7               	movwf	??_maxim_31856_read_nregisters
  6619  0F5A  0857               	movf	??_maxim_31856_read_nregisters,w
  6620  0F5B  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  6621  0F5C  0855               	movf	maxim_31856_read_nregisters@uch_buff,w
  6622  0F5D  00D8               	movwf	??_maxim_31856_read_nregisters+1
  6623  0F5E  0858               	movf	??_maxim_31856_read_nregisters+1,w
  6624  0F5F  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  6625  0F60  3000               	movlw	0
  6626  0F61  3184  245E         	fcall	_SPI_Exchange8bitBuffer
  6627                           
  6628                           ;max31856.c: 54: do { LATA5 = 1; } while(0);
  6629  0F63  0022               	movlb	2	; select bank2
  6630  0F64  168C               	bsf	12,5	;volatile
  6631  0F65  0008               	return
  6632  0F66                     __end_of_maxim_31856_read_nregisters:	
  6633                           
  6634                           	psect	text33
  6635  045E                     __ptext33:	
  6636 ;; *************** function _SPI_Exchange8bitBuffer *****************
  6637 ;; Defined at:
  6638 ;;		line 89 in file "mcc_generated_files/spi.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  dataIn          1    wreg     PTR unsigned char 
  6641 ;;		 -> NULL(0), 
  6642 ;;  bufLen          1    4[COMMON] unsigned char 
  6643 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  6644 ;;		 -> uch_reg(8), 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  6647 ;;		 -> NULL(0), 
  6648 ;;  bytesWritten    1    7[COMMON] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      unsigned char 
  6651 ;; Registers used:
  6652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;Total ram usage:        7 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    4
  6665 ;; This function calls:
  6666 ;;		_SPI_Exchange8bit
  6667 ;; This function is called by:
  6668 ;;		_maxim_31856_read_nregisters
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _SPI_Exchange8bitBuffer
  6674  045E                     _SPI_Exchange8bitBuffer:	
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6678                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  6679  045E  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  6680                           
  6681                           ;spi.c: 90: uint8_t bytesWritten = 0;
  6682  045F  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  6683                           
  6684                           ;spi.c: 92: if (bufLen != 0) {
  6685  0460  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6686  0461  1903               	btfsc	3,2
  6687  0462  0008               	return
  6688                           
  6689                           ;spi.c: 93: if (dataIn != (0)) {
  6690  0463  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  6691  0464  1D03               	btfss	3,2
  6692  0465  2C90               	goto	l3443
  6693  0466  2C95               	goto	l3445
  6694  0467                     l3435:	
  6695                           ;spi.c: 94: while (bytesWritten < bufLen) {
  6696                           
  6697                           
  6698                           ;spi.c: 95: if (dataOut == (0)) {
  6699  0467  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  6700  0468  1D03               	btfss	3,2
  6701  0469  2C76               	goto	l3439
  6702                           
  6703                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  6704  046A  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6705  046B  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6706  046C  0020               	movlb	0	; select bank0
  6707  046D  00D2               	movwf	??_SPI_Exchange8bitBuffer
  6708  046E  0852               	movf	??_SPI_Exchange8bitBuffer,w
  6709  046F  0086               	movwf	6
  6710  0470  0187               	clrf	7
  6711  0471  0801               	movf	1,w
  6712  0472  318E  268C  3184   	fcall	_SPI_Exchange8bit
  6713                           
  6714                           ;spi.c: 97: } else {
  6715  0475  2C8B               	goto	l3441
  6716  0476                     l3439:	
  6717                           
  6718                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  6719  0476  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6720  0477  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  6721  0478  0020               	movlb	0	; select bank0
  6722  0479  00D2               	movwf	??_SPI_Exchange8bitBuffer
  6723  047A  0852               	movf	??_SPI_Exchange8bitBuffer,w
  6724  047B  0086               	movwf	6
  6725  047C  0187               	clrf	7
  6726  047D  0801               	movf	1,w
  6727  047E  318E  268C  3184   	fcall	_SPI_Exchange8bit
  6728  0481  0020               	movlb	0	; select bank0
  6729  0482  00D3               	movwf	??_SPI_Exchange8bitBuffer+1
  6730  0483  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6731  0484  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  6732  0485  00D4               	movwf	??_SPI_Exchange8bitBuffer+2
  6733  0486  0854               	movf	??_SPI_Exchange8bitBuffer+2,w
  6734  0487  0086               	movwf	6
  6735  0488  0187               	clrf	7
  6736  0489  0853               	movf	??_SPI_Exchange8bitBuffer+1,w
  6737  048A  0081               	movwf	1
  6738  048B                     l3441:	
  6739                           
  6740                           ;spi.c: 99: }
  6741                           ;spi.c: 101: bytesWritten++;
  6742  048B  3001               	movlw	1
  6743  048C  0020               	movlb	0	; select bank0
  6744  048D  00D2               	movwf	??_SPI_Exchange8bitBuffer
  6745  048E  0852               	movf	??_SPI_Exchange8bitBuffer,w
  6746  048F  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  6747  0490                     l3443:	
  6748  0490  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6749  0491  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  6750  0492  1803               	btfsc	3,0
  6751  0493  0008               	return
  6752  0494  2C67               	goto	l3435
  6753  0495                     l3445:	
  6754                           ;spi.c: 102: }
  6755                           ;spi.c: 103: } else {
  6756                           
  6757                           
  6758                           ;spi.c: 104: if (dataOut != (0)) {
  6759  0495  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  6760  0496  1903               	btfsc	3,2
  6761  0497  0008               	return
  6762  0498                     l3453:	
  6763  0498  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  6764  0499  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  6765  049A  1803               	btfsc	3,0
  6766  049B  0008               	return
  6767                           
  6768                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  6769                           
  6770                           ;spi.c: 105: while (bytesWritten < bufLen) {
  6771  049C  3000               	movlw	0
  6772  049D  318E  268C  3184   	fcall	_SPI_Exchange8bit
  6773  04A0  0020               	movlb	0	; select bank0
  6774  04A1  00D2               	movwf	??_SPI_Exchange8bitBuffer
  6775  04A2  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  6776  04A3  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  6777  04A4  00D3               	movwf	??_SPI_Exchange8bitBuffer+1
  6778  04A5  0853               	movf	??_SPI_Exchange8bitBuffer+1,w
  6779  04A6  0086               	movwf	6
  6780  04A7  0187               	clrf	7
  6781  04A8  0852               	movf	??_SPI_Exchange8bitBuffer,w
  6782  04A9  0081               	movwf	1
  6783                           
  6784                           ;spi.c: 108: bytesWritten++;
  6785  04AA  3001               	movlw	1
  6786  04AB  00D2               	movwf	??_SPI_Exchange8bitBuffer
  6787  04AC  0852               	movf	??_SPI_Exchange8bitBuffer,w
  6788  04AD  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  6789  04AE  2C98               	goto	l3453
  6790  04AF                     __end_of_SPI_Exchange8bitBuffer:	
  6791                           ;spi.c: 109: }
  6792                           ;spi.c: 110: }
  6793                           ;spi.c: 111: }
  6794                           ;spi.c: 112: }
  6795                           ;spi.c: 114: return bytesWritten;
  6796                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  6797                           
  6798                           
  6799                           	psect	text34
  6800  0E8C                     __ptext34:	
  6801 ;; *************** function _SPI_Exchange8bit *****************
  6802 ;; Defined at:
  6803 ;;		line 77 in file "mcc_generated_files/spi.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  data            1    wreg     unsigned char 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  data            1    3[COMMON] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6821 ;;Total ram usage:        1 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    3
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_SPI_Exchange8bitBuffer
  6828 ;;		_maxim_31856_write_register
  6829 ;;		_maxim_31856_read_register
  6830 ;;		_maxim_31856_read_nregisters
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           
  6835                           ;psect for function _SPI_Exchange8bit
  6836  0E8C                     _SPI_Exchange8bit:	
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in _SPI_Exchange8bit: [wreg]
  6840                           ;SPI_Exchange8bit@data stored from wreg
  6841  0E8C  00F3               	movwf	SPI_Exchange8bit@data
  6842                           
  6843                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  6844  0E8D  0024               	movlb	4	; select bank4
  6845  0E8E  1395               	bcf	21,7	;volatile
  6846                           
  6847                           ;spi.c: 81: SSPBUF = data;
  6848  0E8F  0873               	movf	SPI_Exchange8bit@data,w
  6849  0E90  0091               	movwf	17	;volatile
  6850  0E91                     l71:	
  6851                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  6852                           
  6853  0E91  1C14               	btfss	20,0	;volatile
  6854  0E92  2E91               	goto	l71
  6855                           
  6856                           ;spi.c: 84: }
  6857                           ;spi.c: 86: return (SSPBUF);
  6858  0E93  0811               	movf	17,w	;volatile
  6859  0E94  0008               	return
  6860  0E95                     __end_of_SPI_Exchange8bit:	
  6861                           
  6862                           	psect	text35
  6863  06EF                     __ptext35:	
  6864 ;; *************** function _Two_Display *****************
  6865 ;; Defined at:
  6866 ;;		line 137 in file "mcc_generated_files/ht1621.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  number          1    wreg     unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  number          1   11[BANK0 ] unsigned char 
  6871 ;;  num             4    7[BANK0 ] unsigned char [4]
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;Total ram usage:        6 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    5
  6888 ;; This function calls:
  6889 ;;		_WriteAll_1621
  6890 ;; This function is called by:
  6891 ;;		_temperature_process
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _Two_Display
  6897  06EF                     _Two_Display:	
  6898                           
  6899                           ;incstack = 0
  6900                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6901                           ;Two_Display@number stored from wreg
  6902  06EF  0020               	movlb	0	; select bank0
  6903  06F0  00DD               	movwf	Two_Display@number
  6904                           
  6905                           ;ht1621.c: 139: unsigned char num[4]={0};
  6906  06F1  0823               	movf	Two_Display@F2114+3,w
  6907  06F2  00DC               	movwf	Two_Display@num+3
  6908  06F3  0822               	movf	Two_Display@F2114+2,w
  6909  06F4  00DB               	movwf	Two_Display@num+2
  6910  06F5  0821               	movf	Two_Display@F2114+1,w
  6911  06F6  00DA               	movwf	Two_Display@num+1
  6912  06F7  0820               	movf	Two_Display@F2114,w
  6913  06F8  00D9               	movwf	Two_Display@num
  6914                           
  6915                           ;ht1621.c: 140: num[1] = Dis_TAB[0];
  6916  06F9  3000               	movlw	low (_Dis_TAB| (0+32768))
  6917  06FA  0084               	movwf	4
  6918  06FB  3090               	movlw	high (_Dis_TAB| (0+32768))
  6919  06FC  0085               	movwf	5
  6920  06FD  0800               	movf	0,w	;code access
  6921  06FE  00D8               	movwf	??_Two_Display
  6922  06FF  0858               	movf	??_Two_Display,w
  6923  0700  00DA               	movwf	Two_Display@num+1
  6924                           
  6925                           ;ht1621.c: 141: num[2] = Dis_TAB[number];
  6926  0701  085D               	movf	Two_Display@number,w
  6927  0702  3E00               	addlw	low (_Dis_TAB| (0+32768))
  6928  0703  0084               	movwf	4
  6929  0704  3090               	movlw	high (_Dis_TAB| (0+32768))
  6930  0705  1803               	skipnc
  6931  0706  3E01               	addlw	1
  6932  0707  0085               	movwf	5
  6933  0708  0800               	movf	0,w	;code access
  6934  0709  00D8               	movwf	??_Two_Display
  6935  070A  0858               	movf	??_Two_Display,w
  6936  070B  00DB               	movwf	Two_Display@num+2
  6937                           
  6938                           ;ht1621.c: 142: WriteAll_1621(0, num, 4);
  6939  070C  3059               	movlw	low Two_Display@num
  6940  070D  00D2               	movwf	WriteAll_1621@p
  6941  070E  3000               	movlw	high Two_Display@num
  6942  070F  00D3               	movwf	WriteAll_1621@p+1
  6943  0710  3004               	movlw	4
  6944  0711  00D8               	movwf	??_Two_Display
  6945  0712  0858               	movf	??_Two_Display,w
  6946  0713  00D4               	movwf	WriteAll_1621@cnt
  6947  0714  3000               	movlw	0
  6948  0715  3186  2630         	fcall	_WriteAll_1621
  6949  0717  0008               	return
  6950  0718                     __end_of_Two_Display:	
  6951                           
  6952                           	psect	text36
  6953  0630                     __ptext36:	
  6954 ;; *************** function _WriteAll_1621 *****************
  6955 ;; Defined at:
  6956 ;;		line 90 in file "mcc_generated_files/ht1621.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  addr            1    wreg     unsigned char 
  6959 ;;  p               2    0[BANK0 ] PTR unsigned char 
  6960 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  6961 ;;		 -> Dis_TAB(21), 
  6962 ;;  cnt             1    2[BANK0 ] unsigned char 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  addr            1    4[BANK0 ] unsigned char 
  6965 ;;  i               1    5[BANK0 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6975 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;Total ram usage:        6 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    4
  6982 ;; This function calls:
  6983 ;;		_SendBit_1621
  6984 ;;		_SendDataBit_1621
  6985 ;; This function is called by:
  6986 ;;		_main
  6987 ;;		_Tc_Display
  6988 ;;		_Two_Display
  6989 ;;		_err_Display
  6990 ;;		_time_Display
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _WriteAll_1621
  6996  0630                     _WriteAll_1621:	
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7000                           ;WriteAll_1621@addr stored from wreg
  7001  0630  0020               	movlb	0	; select bank0
  7002  0631  00D6               	movwf	WriteAll_1621@addr
  7003                           
  7004                           ;ht1621.c: 92: unsigned char i;
  7005                           ;ht1621.c: 93: do { LATC0 = 0; } while(0);
  7006  0632  0022               	movlb	2	; select bank2
  7007  0633  100E               	bcf	14,0	;volatile
  7008                           
  7009                           ;ht1621.c: 94: SendBit_1621(0xa0,3);
  7010  0634  3003               	movlw	3
  7011  0635  0020               	movlb	0	; select bank0
  7012  0636  00D5               	movwf	??_WriteAll_1621
  7013  0637  0855               	movf	??_WriteAll_1621,w
  7014  0638  00F3               	movwf	SendBit_1621@cnt
  7015  0639  30A0               	movlw	160
  7016  063A  3187  27A2  3186   	fcall	_SendBit_1621
  7017                           
  7018                           ;ht1621.c: 95: SendBit_1621(addr,6);
  7019  063D  3006               	movlw	6
  7020  063E  0020               	movlb	0	; select bank0
  7021  063F  00D5               	movwf	??_WriteAll_1621
  7022  0640  0855               	movf	??_WriteAll_1621,w
  7023  0641  00F3               	movwf	SendBit_1621@cnt
  7024  0642  0856               	movf	WriteAll_1621@addr,w
  7025  0643  3187  27A2  3186   	fcall	_SendBit_1621
  7026                           
  7027                           ;ht1621.c: 96: for(i =0; i <cnt; i ++,p++)
  7028  0646  0020               	movlb	0	; select bank0
  7029  0647  01D7               	clrf	WriteAll_1621@i
  7030  0648                     l3465:	
  7031  0648  0854               	movf	WriteAll_1621@cnt,w
  7032  0649  0257               	subwf	WriteAll_1621@i,w
  7033  064A  1803               	btfsc	3,0
  7034  064B  2E62               	goto	l587
  7035                           
  7036                           ;ht1621.c: 97: {
  7037                           ;ht1621.c: 98: SendDataBit_1621(*p,8);
  7038  064C  3008               	movlw	8
  7039  064D  00D5               	movwf	??_WriteAll_1621
  7040  064E  0855               	movf	??_WriteAll_1621,w
  7041  064F  00F3               	movwf	SendDataBit_1621@cnt
  7042  0650  0852               	movf	WriteAll_1621@p,w
  7043  0651  0084               	movwf	4
  7044  0652  0853               	movf	WriteAll_1621@p+1,w
  7045  0653  0085               	movwf	5
  7046  0654  0800               	movf	0,w	;code access
  7047  0655  3187  2782  3186   	fcall	_SendDataBit_1621
  7048  0658  3001               	movlw	1
  7049  0659  0020               	movlb	0	; select bank0
  7050  065A  00D5               	movwf	??_WriteAll_1621
  7051  065B  0855               	movf	??_WriteAll_1621,w
  7052  065C  07D7               	addwf	WriteAll_1621@i,f
  7053  065D  3001               	movlw	1
  7054  065E  07D2               	addwf	WriteAll_1621@p,f
  7055  065F  3000               	movlw	0
  7056  0660  3DD3               	addwfc	WriteAll_1621@p+1,f
  7057  0661  2E48               	goto	l3465
  7058  0662                     l587:	
  7059                           ;ht1621.c: 99: }
  7060                           ;ht1621.c: 100: do { LATC0 = 1; } while(0);
  7061                           
  7062  0662  0022               	movlb	2	; select bank2
  7063  0663  140E               	bsf	14,0	;volatile
  7064  0664  0008               	return
  7065  0665                     __end_of_WriteAll_1621:	
  7066                           
  7067                           	psect	text37
  7068  0782                     __ptext37:	
  7069 ;; *************** function _SendDataBit_1621 *****************
  7070 ;; Defined at:
  7071 ;;		line 41 in file "mcc_generated_files/ht1621.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  data            1    wreg     unsigned char 
  7074 ;;  cnt             1    3[COMMON] unsigned char 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  data            1    6[COMMON] unsigned char 
  7077 ;;  i               1    7[COMMON] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  1    wreg      void 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;Total ram usage:        5 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    3
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_WriteAll_1621
  7098 ;;		_Write_1621
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function _SendDataBit_1621
  7104  0782                     _SendDataBit_1621:	
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  7108                           ;SendDataBit_1621@data stored from wreg
  7109  0782  00F6               	movwf	SendDataBit_1621@data
  7110                           
  7111                           ;ht1621.c: 43: unsigned char i;
  7112                           ;ht1621.c: 44: for(i =0; i <cnt; i ++)
  7113  0783  01F7               	clrf	SendDataBit_1621@i
  7114  0784                     l3335:	
  7115  0784  0873               	movf	SendDataBit_1621@cnt,w
  7116  0785  0277               	subwf	SendDataBit_1621@i,w
  7117  0786  1803               	btfsc	3,0
  7118  0787  0008               	return
  7119                           
  7120                           ;ht1621.c: 45: {
  7121                           ;ht1621.c: 46: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  7122  0788  1876               	btfsc	SendDataBit_1621@data,0
  7123  0789  2F8D               	goto	l558
  7124  078A  0022               	movlb	2	; select bank2
  7125  078B  110E               	bcf	14,2	;volatile
  7126  078C  2F8F               	goto	l560
  7127  078D                     l558:	
  7128                           ;ht1621.c: 47: else do { LATC2 = 1; } while(0);
  7129                           
  7130  078D  0022               	movlb	2	; select bank2
  7131  078E  150E               	bsf	14,2	;volatile
  7132  078F                     l560:	
  7133                           ;ht1621.c: 48: do { LATC1 = 0; } while(0);
  7134                           
  7135  078F  108E               	bcf	14,1	;volatile
  7136                           
  7137                           ;ht1621.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
  7138  0790  3006               	movlw	6
  7139  0791  00F5               	movwf	??_SendDataBit_1621+1
  7140  0792  3030               	movlw	48
  7141  0793  00F4               	movwf	??_SendDataBit_1621
  7142  0794                     u3577:	
  7143  0794  0BF4               	decfsz	??_SendDataBit_1621,f
  7144  0795  2F94               	goto	u3577
  7145  0796  0BF5               	decfsz	??_SendDataBit_1621+1,f
  7146  0797  2F94               	goto	u3577
  7147  0798  0000               	nop
  7148                           
  7149                           ;ht1621.c: 50: do { LATC1 = 1; } while(0);
  7150  0799  0022               	movlb	2	; select bank2
  7151  079A  148E               	bsf	14,1	;volatile
  7152                           
  7153                           ;ht1621.c: 51: data>>=1;
  7154  079B  1003               	clrc
  7155  079C  0CF6               	rrf	SendDataBit_1621@data,f
  7156  079D  3001               	movlw	1
  7157  079E  00F4               	movwf	??_SendDataBit_1621
  7158  079F  0874               	movf	??_SendDataBit_1621,w
  7159  07A0  07F7               	addwf	SendDataBit_1621@i,f
  7160  07A1  2F84               	goto	l3335
  7161  07A2                     __end_of_SendDataBit_1621:	
  7162                           
  7163                           	psect	text38
  7164  0F36                     __ptext38:	
  7165 ;; *************** function _SendCmd_1621 *****************
  7166 ;; Defined at:
  7167 ;;		line 61 in file "mcc_generated_files/ht1621.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  command         1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  command         1    1[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;Total ram usage:        2 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    4
  7188 ;; This function calls:
  7189 ;;		_SendBit_1621
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;;		_Key_Process
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           
  7197                           ;psect for function _SendCmd_1621
  7198  0F36                     _SendCmd_1621:	
  7199                           
  7200                           ;incstack = 0
  7201                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
  7202                           ;SendCmd_1621@command stored from wreg
  7203  0F36  0020               	movlb	0	; select bank0
  7204  0F37  00D3               	movwf	SendCmd_1621@command
  7205                           
  7206                           ;ht1621.c: 63: do { LATC0 = 0; } while(0);
  7207  0F38  0022               	movlb	2	; select bank2
  7208  0F39  100E               	bcf	14,0	;volatile
  7209                           
  7210                           ;ht1621.c: 64: SendBit_1621(0x80,4);
  7211  0F3A  3004               	movlw	4
  7212  0F3B  0020               	movlb	0	; select bank0
  7213  0F3C  00D2               	movwf	??_SendCmd_1621
  7214  0F3D  0852               	movf	??_SendCmd_1621,w
  7215  0F3E  00F3               	movwf	SendBit_1621@cnt
  7216  0F3F  3080               	movlw	128
  7217  0F40  3187  27A2  318F   	fcall	_SendBit_1621
  7218                           
  7219                           ;ht1621.c: 65: SendBit_1621(command,8);
  7220  0F43  3008               	movlw	8
  7221  0F44  0020               	movlb	0	; select bank0
  7222  0F45  00D2               	movwf	??_SendCmd_1621
  7223  0F46  0852               	movf	??_SendCmd_1621,w
  7224  0F47  00F3               	movwf	SendBit_1621@cnt
  7225  0F48  0853               	movf	SendCmd_1621@command,w
  7226  0F49  3187  27A2         	fcall	_SendBit_1621
  7227                           
  7228                           ;ht1621.c: 66: do { LATC0 = 1; } while(0);
  7229  0F4B  0022               	movlb	2	; select bank2
  7230  0F4C  140E               	bsf	14,0	;volatile
  7231  0F4D  0008               	return
  7232  0F4E                     __end_of_SendCmd_1621:	
  7233                           
  7234                           	psect	text39
  7235  07A2                     __ptext39:	
  7236 ;; *************** function _SendBit_1621 *****************
  7237 ;; Defined at:
  7238 ;;		line 21 in file "mcc_generated_files/ht1621.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  data            1    wreg     unsigned char 
  7241 ;;  cnt             1    3[COMMON] unsigned char 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  data            1    6[COMMON] unsigned char 
  7244 ;;  i               1    7[COMMON] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        5 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    3
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_SendCmd_1621
  7265 ;;		_WriteAll_1621
  7266 ;;		_Write_1621
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _SendBit_1621
  7272  07A2                     _SendBit_1621:	
  7273                           
  7274                           ;incstack = 0
  7275                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
  7276                           ;SendBit_1621@data stored from wreg
  7277  07A2  00F6               	movwf	SendBit_1621@data
  7278                           
  7279                           ;ht1621.c: 23: unsigned char i;
  7280                           ;ht1621.c: 24: for(i =0; i <cnt; i ++)
  7281  07A3  01F7               	clrf	SendBit_1621@i
  7282  07A4                     l3323:	
  7283  07A4  0873               	movf	SendBit_1621@cnt,w
  7284  07A5  0277               	subwf	SendBit_1621@i,w
  7285  07A6  1803               	btfsc	3,0
  7286  07A7  0008               	return
  7287                           
  7288                           ;ht1621.c: 25: {
  7289                           ;ht1621.c: 26: if((data&0x80)==0) do { LATC2 = 0; } while(0);
  7290  07A8  1BF6               	btfsc	SendBit_1621@data,7
  7291  07A9  2FAD               	goto	l542
  7292  07AA  0022               	movlb	2	; select bank2
  7293  07AB  110E               	bcf	14,2	;volatile
  7294  07AC  2FAF               	goto	l544
  7295  07AD                     l542:	
  7296                           ;ht1621.c: 27: else do { LATC2 = 1; } while(0);
  7297                           
  7298  07AD  0022               	movlb	2	; select bank2
  7299  07AE  150E               	bsf	14,2	;volatile
  7300  07AF                     l544:	
  7301                           ;ht1621.c: 28: do { LATC1 = 0; } while(0);
  7302                           
  7303  07AF  108E               	bcf	14,1	;volatile
  7304                           
  7305                           ;ht1621.c: 29: _delay((unsigned long)((1)*(16000000/4000.0)));
  7306  07B0  3006               	movlw	6
  7307  07B1  00F5               	movwf	??_SendBit_1621+1
  7308  07B2  3030               	movlw	48
  7309  07B3  00F4               	movwf	??_SendBit_1621
  7310  07B4                     u3587:	
  7311  07B4  0BF4               	decfsz	??_SendBit_1621,f
  7312  07B5  2FB4               	goto	u3587
  7313  07B6  0BF5               	decfsz	??_SendBit_1621+1,f
  7314  07B7  2FB4               	goto	u3587
  7315  07B8  0000               	nop
  7316                           
  7317                           ;ht1621.c: 30: do { LATC1 = 1; } while(0);
  7318  07B9  0022               	movlb	2	; select bank2
  7319  07BA  148E               	bsf	14,1	;volatile
  7320                           
  7321                           ;ht1621.c: 31: data<<=1;
  7322  07BB  1003               	clrc
  7323  07BC  0DF6               	rlf	SendBit_1621@data,f
  7324  07BD  3001               	movlw	1
  7325  07BE  00F4               	movwf	??_SendBit_1621
  7326  07BF  0874               	movf	??_SendBit_1621,w
  7327  07C0  07F7               	addwf	SendBit_1621@i,f
  7328  07C1  2FA4               	goto	l3323
  7329  07C2                     __end_of_SendBit_1621:	
  7330                           
  7331                           	psect	text40
  7332  073D                     __ptext40:	
  7333 ;; *************** function _Key_Scan *****************
  7334 ;; Defined at:
  7335 ;;		line 17 in file "mcc_generated_files/key.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;		None
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  Key_val         1    5[COMMON] unsigned char 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      unsigned char 
  7342 ;; Registers used:
  7343 ;;		wreg
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;Total ram usage:        3 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    3
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_Key_Process
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function _Key_Scan
  7365  073D                     _Key_Scan:	
  7366                           
  7367                           ;key.c: 19: unsigned char Key_val=0xff;
  7368                           
  7369                           ;incstack = 0
  7370                           ; Regs used in _Key_Scan: [wreg]
  7371  073D  30FF               	movlw	255
  7372  073E  00F3               	movwf	??_Key_Scan
  7373  073F  0873               	movf	??_Key_Scan,w
  7374  0740  00F5               	movwf	Key_Scan@Key_val
  7375                           
  7376                           ;key.c: 20: if( RA7 == 0 || RB5 == 0 )
  7377  0741  0020               	movlb	0	; select bank0
  7378  0742  1F8C               	btfss	12,7	;volatile
  7379  0743  2F46               	goto	l3945
  7380  0744  1A8D               	btfsc	13,5	;volatile
  7381  0745  2F5E               	goto	l812
  7382  0746                     l3945:	
  7383                           
  7384                           ;key.c: 21: {
  7385                           ;key.c: 22: _delay((unsigned long)((10)*(16000000/4000.0)));
  7386  0746  3034               	movlw	52
  7387  0747  00F4               	movwf	??_Key_Scan+1
  7388  0748  30F1               	movlw	241
  7389  0749  00F3               	movwf	??_Key_Scan
  7390  074A                     u3597:	
  7391  074A  0BF3               	decfsz	??_Key_Scan,f
  7392  074B  2F4A               	goto	u3597
  7393  074C  0BF4               	decfsz	??_Key_Scan+1,f
  7394  074D  2F4A               	goto	u3597
  7395  074E  3200               	nop2
  7396                           
  7397                           ;key.c: 23: if( RA7 == 0 || RB5 == 0)
  7398  074F  0020               	movlb	0	; select bank0
  7399  0750  1F8C               	btfss	12,7	;volatile
  7400  0751  2F54               	goto	l817
  7401  0752  1A8D               	btfsc	13,5	;volatile
  7402  0753  2F5E               	goto	l812
  7403  0754                     l817:	
  7404                           
  7405                           ;key.c: 24: {
  7406                           ;key.c: 25: if(RB5 == 0 ) Key_val = 0x01;
  7407  0754  1A8D               	btfsc	13,5	;volatile
  7408  0755  2F58               	goto	l818
  7409  0756  01F5               	clrf	Key_Scan@Key_val
  7410  0757  0AF5               	incf	Key_Scan@Key_val,f
  7411  0758                     l818:	
  7412                           
  7413                           ;key.c: 26: if(RA7 == 0 ) Key_val = 0x02;
  7414  0758  1B8C               	btfsc	12,7	;volatile
  7415  0759  2F5E               	goto	l812
  7416  075A  3002               	movlw	2
  7417  075B  00F3               	movwf	??_Key_Scan
  7418  075C  0873               	movf	??_Key_Scan,w
  7419  075D  00F5               	movwf	Key_Scan@Key_val
  7420  075E                     l812:	
  7421                           
  7422                           ;key.c: 27: }
  7423                           ;key.c: 28: }
  7424                           ;key.c: 29: return Key_val;
  7425  075E  0875               	movf	Key_Scan@Key_val,w
  7426  075F  0008               	return
  7427  0760                     __end_of_Key_Scan:	
  7428                           
  7429                           	psect	text41
  7430  0FE5                     __ptext41:	
  7431 ;; *************** function _Bq32k_Time_Init *****************
  7432 ;; Defined at:
  7433 ;;		line 17 in file "mcc_generated_files/bq32k.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  temp           10    7[BANK0 ] unsigned char [10]
  7438 ;;  time            7    0        struct bq32k_regs
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7452 ;;Total ram usage:       12 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    5
  7455 ;; This function calls:
  7456 ;;		_I2C_Send_Buffer
  7457 ;; This function is called by:
  7458 ;;		_main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _Bq32k_Time_Init
  7464  0FE5                     _Bq32k_Time_Init:	
  7465                           
  7466                           ;bq32k.c: 19: bq32k_t time;
  7467                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x40,0x14,0x02,0x04,0x07,0x16 };
  7468                           
  7469                           ;incstack = 0
  7470                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7471  0FE5  30A0               	movlw	low Bq32k_Time_Init@F2009
  7472  0FE6  0086               	movwf	6
  7473  0FE7  3000               	movlw	high Bq32k_Time_Init@F2009
  7474  0FE8  0087               	movwf	7
  7475  0FE9  3059               	movlw	low Bq32k_Time_Init@temp
  7476  0FEA  0084               	movwf	4
  7477  0FEB  3000               	movlw	high Bq32k_Time_Init@temp
  7478  0FEC  0085               	movwf	5
  7479  0FED  300A               	movlw	10
  7480  0FEE  0020               	movlb	0	; select bank0
  7481  0FEF  00D7               	movwf	??_Bq32k_Time_Init
  7482  0FF0                     u3310:	
  7483  0FF0  0016               	moviw fsr1++
  7484  0FF1  001A               	movwi fsr0++
  7485  0FF2  0BD7               	decfsz	??_Bq32k_Time_Init,f
  7486  0FF3  2FF0               	goto	u3310
  7487                           
  7488                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
  7489  0FF4  3059               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
  7490  0FF5  00D7               	movwf	??_Bq32k_Time_Init
  7491  0FF6  0857               	movf	??_Bq32k_Time_Init,w
  7492  0FF7  00F6               	movwf	I2C_Send_Buffer@buff
  7493  0FF8  3007               	movlw	7
  7494  0FF9  00D8               	movwf	??_Bq32k_Time_Init+1
  7495  0FFA  0858               	movf	??_Bq32k_Time_Init+1,w
  7496  0FFB  00F7               	movwf	I2C_Send_Buffer@Length
  7497  0FFC  3000               	movlw	0
  7498  0FFD  3185  2588         	fcall	_I2C_Send_Buffer
  7499  0FFF  0008               	return
  7500  1000                     __end_of_Bq32k_Time_Init:	
  7501                           
  7502                           	psect	text42
  7503  0588                     __ptext42:	
  7504 ;; *************** function _I2C_Send_Buffer *****************
  7505 ;; Defined at:
  7506 ;;		line 173 in file "mcc_generated_files/i2c.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  ADD             1    wreg     unsigned char 
  7509 ;;  buff            1    6[COMMON] PTR unsigned char 
  7510 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
  7511 ;;  Length          1    7[COMMON] unsigned char 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  ADD             1    2[BANK0 ] unsigned char 
  7514 ;;  Flag            1    4[BANK0 ] unsigned char 
  7515 ;;  i               1    3[BANK0 ] unsigned char 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      unsigned char 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;Total ram usage:        7 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    4
  7532 ;; This function calls:
  7533 ;;		_I2C_Send_Byte
  7534 ;;		_I2C_Start
  7535 ;;		_I2C_Stop
  7536 ;; This function is called by:
  7537 ;;		_Bq32k_Time_Init
  7538 ;;		_Bq32k_Rtc_Write_Time
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _I2C_Send_Buffer
  7544  0588                     _I2C_Send_Buffer:	
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7548                           ;I2C_Send_Buffer@ADD stored from wreg
  7549  0588  0020               	movlb	0	; select bank0
  7550  0589  00D4               	movwf	I2C_Send_Buffer@ADD
  7551                           
  7552                           ;i2c.c: 175: unsigned char Flag=1;
  7553  058A  01D6               	clrf	I2C_Send_Buffer@Flag
  7554  058B  0AD6               	incf	I2C_Send_Buffer@Flag,f
  7555                           
  7556                           ;i2c.c: 176: unsigned char i;
  7557                           ;i2c.c: 178: I2C_Start();
  7558  058C  318F  277F  3185   	fcall	_I2C_Start
  7559                           
  7560                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
  7561  058F  30D0               	movlw	208
  7562  0590  3184  24AF  3185   	fcall	_I2C_Send_Byte
  7563  0593  0020               	movlb	0	; select bank0
  7564  0594  00D2               	movwf	??_I2C_Send_Buffer
  7565  0595  0852               	movf	??_I2C_Send_Buffer,w
  7566  0596  00D6               	movwf	I2C_Send_Buffer@Flag
  7567                           
  7568                           ;i2c.c: 181: if(Flag)
  7569  0597  0856               	movf	I2C_Send_Buffer@Flag,w
  7570  0598  1D03               	btfss	3,2
  7571  0599  0008               	return
  7572                           
  7573                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
  7574                           
  7575                           ;i2c.c: 182: return 0x01;
  7576                           ;	Return value of _I2C_Send_Buffer is never used
  7577  059A  0854               	movf	I2C_Send_Buffer@ADD,w
  7578  059B  3184  24AF  3185   	fcall	_I2C_Send_Byte
  7579  059E  0020               	movlb	0	; select bank0
  7580  059F  00D2               	movwf	??_I2C_Send_Buffer
  7581  05A0  0852               	movf	??_I2C_Send_Buffer,w
  7582  05A1  00D6               	movwf	I2C_Send_Buffer@Flag
  7583                           
  7584                           ;i2c.c: 185: if(Flag)
  7585  05A2  0856               	movf	I2C_Send_Buffer@Flag,w
  7586  05A3  1D03               	btfss	3,2
  7587  05A4  0008               	return
  7588                           
  7589                           ;i2c.c: 188: for (i = 0; i<Length; i++)
  7590                           
  7591                           ;i2c.c: 186: return 0x01;
  7592                           ;	Return value of _I2C_Send_Buffer is never used
  7593  05A5  01D5               	clrf	I2C_Send_Buffer@i
  7594  05A6                     l3933:	
  7595  05A6  0877               	movf	I2C_Send_Buffer@Length,w
  7596  05A7  0255               	subwf	I2C_Send_Buffer@i,w
  7597  05A8  1803               	btfsc	3,0
  7598  05A9  2DC0               	goto	l3935
  7599                           
  7600                           ;i2c.c: 189: {
  7601                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
  7602  05AA  0855               	movf	I2C_Send_Buffer@i,w
  7603  05AB  0776               	addwf	I2C_Send_Buffer@buff,w
  7604  05AC  00D2               	movwf	??_I2C_Send_Buffer
  7605  05AD  0852               	movf	??_I2C_Send_Buffer,w
  7606  05AE  0086               	movwf	6
  7607  05AF  0187               	clrf	7
  7608  05B0  0801               	movf	1,w
  7609  05B1  3184  24AF  3185   	fcall	_I2C_Send_Byte
  7610  05B4  0020               	movlb	0	; select bank0
  7611  05B5  00D3               	movwf	??_I2C_Send_Buffer+1
  7612  05B6  0853               	movf	??_I2C_Send_Buffer+1,w
  7613  05B7  00D6               	movwf	I2C_Send_Buffer@Flag
  7614                           
  7615                           ;i2c.c: 191: if(Flag)
  7616  05B8  0856               	movf	I2C_Send_Buffer@Flag,w
  7617  05B9  1D03               	btfss	3,2
  7618  05BA  0008               	return
  7619                           
  7620                           ;i2c.c: 192: return 0x01;
  7621                           ;	Return value of _I2C_Send_Buffer is never used
  7622  05BB  3001               	movlw	1
  7623  05BC  00D2               	movwf	??_I2C_Send_Buffer
  7624  05BD  0852               	movf	??_I2C_Send_Buffer,w
  7625  05BE  07D5               	addwf	I2C_Send_Buffer@i,f
  7626  05BF  2DA6               	goto	l3933
  7627  05C0                     l3935:	
  7628                           
  7629                           ;i2c.c: 193: }
  7630                           ;i2c.c: 194: I2C_Stop();
  7631  05C0  318F  2798         	fcall	_I2C_Stop
  7632  05C2  0008               	return
  7633  05C3                     __end_of_I2C_Send_Buffer:	
  7634                           ;i2c.c: 195: return 0x00;
  7635                           ;	Return value of _I2C_Send_Buffer is never used
  7636                           
  7637                           
  7638                           	psect	text43
  7639  0F98                     __ptext43:	
  7640 ;; *************** function _I2C_Stop *****************
  7641 ;; Defined at:
  7642 ;;		line 102 in file "mcc_generated_files/i2c.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;		None
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;		None
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;Total ram usage:        1 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:    3
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_I2C_Read_Buffer
  7667 ;;		_I2C_Send_Buffer
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function _I2C_Stop
  7673  0F98                     _I2C_Stop:	
  7674                           
  7675                           ;incstack = 0
  7676                           ; Regs used in _I2C_Stop: [wreg]
  7677                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
  7678  0F98  0022               	movlb	2	; select bank2
  7679  0F99  100D               	bcf	13,0	;volatile
  7680                           
  7681                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7682  0F9A  300D               	movlw	13
  7683  0F9B  00F3               	movwf	??_I2C_Stop
  7684  0F9C                     u3607:	
  7685  0F9C  0BF3               	decfsz	??_I2C_Stop,f
  7686  0F9D  2F9C               	goto	u3607
  7687                           
  7688                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
  7689  0F9E  0022               	movlb	2	; select bank2
  7690  0F9F  108D               	bcf	13,1	;volatile
  7691                           
  7692                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7693  0FA0  300D               	movlw	13
  7694  0FA1  00F3               	movwf	??_I2C_Stop
  7695  0FA2                     u3617:	
  7696  0FA2  0BF3               	decfsz	??_I2C_Stop,f
  7697  0FA3  2FA2               	goto	u3617
  7698                           
  7699                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
  7700  0FA4  0022               	movlb	2	; select bank2
  7701  0FA5  140D               	bsf	13,0	;volatile
  7702                           
  7703                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7704  0FA6  300D               	movlw	13
  7705  0FA7  00F3               	movwf	??_I2C_Stop
  7706  0FA8                     u3627:	
  7707  0FA8  0BF3               	decfsz	??_I2C_Stop,f
  7708  0FA9  2FA8               	goto	u3627
  7709                           
  7710                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
  7711  0FAA  0022               	movlb	2	; select bank2
  7712  0FAB  148D               	bsf	13,1	;volatile
  7713                           
  7714                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7715  0FAC  300D               	movlw	13
  7716  0FAD  00F3               	movwf	??_I2C_Stop
  7717  0FAE                     u3637:	
  7718  0FAE  0BF3               	decfsz	??_I2C_Stop,f
  7719  0FAF  2FAE               	goto	u3637
  7720  0FB0  0008               	return
  7721  0FB1                     __end_of_I2C_Stop:	
  7722                           
  7723                           	psect	text44
  7724  0F7F                     __ptext44:	
  7725 ;; *************** function _I2C_Start *****************
  7726 ;; Defined at:
  7727 ;;		line 16 in file "mcc_generated_files/i2c.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;Total ram usage:        1 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    3
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_I2C_Read_Buffer
  7752 ;;		_I2C_Send_Buffer
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           
  7757                           ;psect for function _I2C_Start
  7758  0F7F                     _I2C_Start:	
  7759                           
  7760                           ;incstack = 0
  7761                           ; Regs used in _I2C_Start: [wreg]
  7762                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
  7763  0F7F  0022               	movlb	2	; select bank2
  7764  0F80  148D               	bsf	13,1	;volatile
  7765                           
  7766                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7767  0F81  300D               	movlw	13
  7768  0F82  00F3               	movwf	??_I2C_Start
  7769  0F83                     u3647:	
  7770  0F83  0BF3               	decfsz	??_I2C_Start,f
  7771  0F84  2F83               	goto	u3647
  7772                           
  7773                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
  7774  0F85  0022               	movlb	2	; select bank2
  7775  0F86  140D               	bsf	13,0	;volatile
  7776                           
  7777                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7778  0F87  300D               	movlw	13
  7779  0F88  00F3               	movwf	??_I2C_Start
  7780  0F89                     u3657:	
  7781  0F89  0BF3               	decfsz	??_I2C_Start,f
  7782  0F8A  2F89               	goto	u3657
  7783                           
  7784                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
  7785  0F8B  0022               	movlb	2	; select bank2
  7786  0F8C  108D               	bcf	13,1	;volatile
  7787                           
  7788                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7789  0F8D  300D               	movlw	13
  7790  0F8E  00F3               	movwf	??_I2C_Start
  7791  0F8F                     u3667:	
  7792  0F8F  0BF3               	decfsz	??_I2C_Start,f
  7793  0F90  2F8F               	goto	u3667
  7794                           
  7795                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
  7796  0F91  0022               	movlb	2	; select bank2
  7797  0F92  100D               	bcf	13,0	;volatile
  7798                           
  7799                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7800  0F93  300D               	movlw	13
  7801  0F94  00F3               	movwf	??_I2C_Start
  7802  0F95                     u3677:	
  7803  0F95  0BF3               	decfsz	??_I2C_Start,f
  7804  0F96  2F95               	goto	u3677
  7805  0F97  0008               	return
  7806  0F98                     __end_of_I2C_Start:	
  7807                           
  7808                           	psect	text45
  7809  04AF                     __ptext45:	
  7810 ;; *************** function _I2C_Send_Byte *****************
  7811 ;; Defined at:
  7812 ;;		line 34 in file "mcc_generated_files/i2c.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  Data            1    wreg     unsigned char 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  Data            1    4[COMMON] unsigned char 
  7817 ;;  i               1    5[COMMON] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      unsigned char 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;Total ram usage:        3 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    3
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_I2C_Read_Buffer
  7838 ;;		_I2C_Send_Buffer
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           
  7843                           ;psect for function _I2C_Send_Byte
  7844  04AF                     _I2C_Send_Byte:	
  7845                           
  7846                           ;incstack = 0
  7847                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
  7848                           ;I2C_Send_Byte@Data stored from wreg
  7849  04AF  00F4               	movwf	I2C_Send_Byte@Data
  7850                           
  7851                           ;i2c.c: 36: unsigned char i;
  7852                           ;i2c.c: 37: for(i=0;i<8;i++)
  7853  04B0  01F5               	clrf	I2C_Send_Byte@i
  7854  04B1  3008               	movlw	8
  7855  04B2  0275               	subwf	I2C_Send_Byte@i,w
  7856  04B3  1803               	btfsc	3,0
  7857  04B4  2CD6               	goto	l715
  7858  04B5                     l703:	
  7859                           
  7860                           ;i2c.c: 38: {
  7861                           ;i2c.c: 39: if(Data&0x80)
  7862  04B5  1FF4               	btfss	I2C_Send_Byte@Data,7
  7863  04B6  2CBA               	goto	l709
  7864                           
  7865                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
  7866  04B7  0022               	movlb	2	; select bank2
  7867  04B8  148D               	bsf	13,1	;volatile
  7868  04B9  2CBC               	goto	l3351
  7869  04BA                     l709:	
  7870                           ;i2c.c: 41: else
  7871                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
  7872                           
  7873  04BA  0022               	movlb	2	; select bank2
  7874  04BB  108D               	bcf	13,1	;volatile
  7875  04BC                     l3351:	
  7876                           
  7877                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7878  04BC  300D               	movlw	13
  7879  04BD  00F3               	movwf	??_I2C_Send_Byte
  7880  04BE                     u3687:	
  7881  04BE  0BF3               	decfsz	??_I2C_Send_Byte,f
  7882  04BF  2CBE               	goto	u3687
  7883                           
  7884                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
  7885  04C0  0022               	movlb	2	; select bank2
  7886  04C1  140D               	bsf	13,0	;volatile
  7887                           
  7888                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7889  04C2  300D               	movlw	13
  7890  04C3  00F3               	movwf	??_I2C_Send_Byte
  7891  04C4                     u3697:	
  7892  04C4  0BF3               	decfsz	??_I2C_Send_Byte,f
  7893  04C5  2CC4               	goto	u3697
  7894                           
  7895                           ;i2c.c: 46: Data<<=1;
  7896  04C6  1003               	clrc
  7897  04C7  0DF4               	rlf	I2C_Send_Byte@Data,f
  7898                           
  7899                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
  7900  04C8  0022               	movlb	2	; select bank2
  7901  04C9  100D               	bcf	13,0	;volatile
  7902                           
  7903                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7904  04CA  300D               	movlw	13
  7905  04CB  00F3               	movwf	??_I2C_Send_Byte
  7906  04CC                     u3707:	
  7907  04CC  0BF3               	decfsz	??_I2C_Send_Byte,f
  7908  04CD  2CCC               	goto	u3707
  7909  04CE  3001               	movlw	1
  7910  04CF  00F3               	movwf	??_I2C_Send_Byte
  7911  04D0  0873               	movf	??_I2C_Send_Byte,w
  7912  04D1  07F5               	addwf	I2C_Send_Byte@i,f
  7913  04D2  3008               	movlw	8
  7914  04D3  0275               	subwf	I2C_Send_Byte@i,w
  7915  04D4  1C03               	skipc
  7916  04D5  2CB5               	goto	l703
  7917  04D6                     l715:	
  7918                           ;i2c.c: 49: }
  7919                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
  7920                           
  7921  04D6  0022               	movlb	2	; select bank2
  7922  04D7  148D               	bsf	13,1	;volatile
  7923                           
  7924                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7925  04D8  300D               	movlw	13
  7926  04D9  00F3               	movwf	??_I2C_Send_Byte
  7927  04DA                     u3717:	
  7928  04DA  0BF3               	decfsz	??_I2C_Send_Byte,f
  7929  04DB  2CDA               	goto	u3717
  7930                           
  7931                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
  7932  04DC  0022               	movlb	2	; select bank2
  7933  04DD  140D               	bsf	13,0	;volatile
  7934                           
  7935                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7936  04DE  300D               	movlw	13
  7937  04DF  00F3               	movwf	??_I2C_Send_Byte
  7938  04E0                     u3727:	
  7939  04E0  0BF3               	decfsz	??_I2C_Send_Byte,f
  7940  04E1  2CE0               	goto	u3727
  7941                           
  7942                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
  7943  04E2  0021               	movlb	1	; select bank1
  7944  04E3  148D               	bsf	13,1	;volatile
  7945                           
  7946                           ;i2c.c: 55: if(RB1)
  7947  04E4  0020               	movlb	0	; select bank0
  7948  04E5  1C8D               	btfss	13,1	;volatile
  7949  04E6  2CEB               	goto	l725
  7950                           
  7951                           ;i2c.c: 56: {
  7952                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
  7953  04E7  0021               	movlb	1	; select bank1
  7954  04E8  108D               	bcf	13,1	;volatile
  7955                           
  7956                           ;i2c.c: 58: return 0x01;
  7957  04E9  3001               	movlw	1
  7958  04EA  0008               	return
  7959  04EB                     l725:	
  7960                           ;i2c.c: 59: }
  7961                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
  7962                           
  7963  04EB  0021               	movlb	1	; select bank1
  7964  04EC  108D               	bcf	13,1	;volatile
  7965                           
  7966                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
  7967  04ED  0022               	movlb	2	; select bank2
  7968  04EE  100D               	bcf	13,0	;volatile
  7969                           
  7970                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7971  04EF  300D               	movlw	13
  7972  04F0  00F3               	movwf	??_I2C_Send_Byte
  7973  04F1                     u3737:	
  7974  04F1  0BF3               	decfsz	??_I2C_Send_Byte,f
  7975  04F2  2CF1               	goto	u3737
  7976                           
  7977                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
  7978  04F3  0022               	movlb	2	; select bank2
  7979  04F4  108D               	bcf	13,1	;volatile
  7980                           
  7981                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
  7982  04F5  300D               	movlw	13
  7983  04F6  00F3               	movwf	??_I2C_Send_Byte
  7984  04F7                     u3747:	
  7985  04F7  0BF3               	decfsz	??_I2C_Send_Byte,f
  7986  04F8  2CF7               	goto	u3747
  7987                           
  7988                           ;i2c.c: 65: return 0x00;
  7989  04F9  3000               	movlw	0
  7990  04FA  0008               	return
  7991  04FB                     __end_of_I2C_Send_Byte:	
  7992                           
  7993                           	psect	text46
  7994  0FB1                     __ptext46:	
  7995 ;; *************** function _ADC_GetConversion *****************
  7996 ;; Defined at:
  7997 ;;		line 106 in file "mcc_generated_files/adc.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  channel         1    wreg     enum E1850
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  channel         1    6[COMMON] enum E1850
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  2    3[COMMON] unsigned int 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;Total ram usage:        4 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    3
  8018 ;; This function calls:
  8019 ;;		Nothing
  8020 ;; This function is called by:
  8021 ;;		_main
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           
  8026                           ;psect for function _ADC_GetConversion
  8027  0FB1                     _ADC_GetConversion:	
  8028                           
  8029                           ;incstack = 0
  8030                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8031                           ;ADC_GetConversion@channel stored from wreg
  8032  0FB1  00F6               	movwf	ADC_GetConversion@channel
  8033                           
  8034                           ;adc.c: 108: ADCON0bits.CHS = channel;
  8035  0FB2  0876               	movf	ADC_GetConversion@channel,w
  8036  0FB3  00F5               	movwf	??_ADC_GetConversion
  8037  0FB4  0DF5               	rlf	??_ADC_GetConversion,f
  8038  0FB5  0DF5               	rlf	??_ADC_GetConversion,f
  8039  0FB6  0021               	movlb	1	; select bank1
  8040  0FB7  081D               	movf	29,w	;volatile
  8041  0FB8  0675               	xorwf	??_ADC_GetConversion,w
  8042  0FB9  3983               	andlw	-125
  8043  0FBA  0675               	xorwf	??_ADC_GetConversion,w
  8044  0FBB  009D               	movwf	29	;volatile
  8045                           
  8046                           ;adc.c: 111: ADCON0bits.ADON = 1;
  8047  0FBC  141D               	bsf	29,0	;volatile
  8048                           
  8049                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
  8050  0FBD  3006               	movlw	6
  8051  0FBE  00F5               	movwf	??_ADC_GetConversion
  8052  0FBF                     u3757:	
  8053  0FBF  0BF5               	decfsz	??_ADC_GetConversion,f
  8054  0FC0  2FBF               	goto	u3757
  8055  0FC1  0000               	nop
  8056                           
  8057                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  8058  0FC2  0021               	movlb	1	; select bank1
  8059  0FC3  149D               	bsf	29,1	;volatile
  8060  0FC4                     l197:	
  8061                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
  8062                           
  8063  0FC4  189D               	btfsc	29,1	;volatile
  8064  0FC5  2FC4               	goto	l197
  8065                           
  8066                           ;adc.c: 121: }
  8067                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  8068  0FC6  081C               	movf	28,w	;volatile
  8069  0FC7  00F4               	movwf	?_ADC_GetConversion+1
  8070  0FC8  081B               	movf	27,w	;volatile
  8071  0FC9  00F3               	movwf	?_ADC_GetConversion
  8072  0FCA  0008               	return
  8073  0FCB                     __end_of_ADC_GetConversion:	
  8074                           
  8075                           	psect	intentry
  8076  0004                     __pintentry:	
  8077 ;; *************** function _INTERRUPT_InterruptManager *****************
  8078 ;; Defined at:
  8079 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      void 
  8086 ;; Registers used:
  8087 ;;		wreg, status,2, status,0, pclath, cstack
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;Total ram usage:        1 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    2
  8100 ;; This function calls:
  8101 ;;		_TMR0_ISR
  8102 ;; This function is called by:
  8103 ;;		Interrupt level 1
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107  0004                     _INTERRUPT_InterruptManager:	
  8108                           
  8109                           ;incstack = 0
  8110                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8111  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8112  0005  3180               	pagesel	$
  8113  0006  0020               	movlb	0	; select bank0
  8114  0007  087F               	movf	127,w
  8115  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  8116                           
  8117                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  8118  0009  1A8B               	btfsc	11,5	;volatile
  8119  000A  1D0B               	btfss	11,2	;volatile
  8120  000B  280E               	goto	i1l249
  8121                           
  8122                           ;interrupt_manager.c: 55: TMR0_ISR();
  8123  000C  318F  2766         	fcall	_TMR0_ISR
  8124  000E                     i1l249:	
  8125                           ;interrupt_manager.c: 56: } else {
  8126                           
  8127  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
  8128  000F  0020               	movlb	0	; select bank0
  8129  0010  00FF               	movwf	127
  8130  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8131  0012  0009               	retfie
  8132  0013                     __end_of_INTERRUPT_InterruptManager:	
  8133                           
  8134                           	psect	text48
  8135  0F66                     __ptext48:	
  8136 ;; *************** function _TMR0_ISR *****************
  8137 ;; Defined at:
  8138 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0, pclath, cstack
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;Total ram usage:        1 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    1
  8159 ;; This function calls:
  8160 ;;		_TMR0_CallBack
  8161 ;; This function is called by:
  8162 ;;		_INTERRUPT_InterruptManager
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _TMR0_ISR
  8168  0F66                     _TMR0_ISR:	
  8169                           
  8170                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
  8171                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
  8172                           
  8173                           ;incstack = 0
  8174                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8175  0F66  110B               	bcf	11,2	;volatile
  8176                           
  8177                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
  8178  0F67  0020               	movlb	0	; select bank0
  8179  0F68  086E               	movf	_timer0ReloadVal,w	;volatile
  8180  0F69  0095               	movwf	21	;volatile
  8181                           
  8182                           ;tmr0.c: 111: MAX31856Sec++;
  8183  0F6A  3001               	movlw	1
  8184  0F6B  00F1               	movwf	??_TMR0_ISR
  8185  0F6C  0871               	movf	??_TMR0_ISR,w
  8186  0F6D  07F8               	addwf	_MAX31856Sec,f
  8187                           
  8188                           ;tmr0.c: 114: if (++CountCallBack >= 100) {
  8189  0F6E  3001               	movlw	1
  8190  0F6F  07B6               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  8191  0F70  3000               	movlw	0
  8192  0F71  3DB7               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  8193  0F72  3000               	movlw	0
  8194  0F73  0237               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  8195  0F74  3064               	movlw	100
  8196  0F75  1903               	skipnz
  8197  0F76  0236               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  8198  0F77  1C03               	skipc
  8199  0F78  0008               	return
  8200                           
  8201                           ;tmr0.c: 116: TMR0_CallBack();
  8202  0F79  318E  26F9         	fcall	_TMR0_CallBack
  8203                           
  8204                           ;tmr0.c: 119: CountCallBack = 0;
  8205  0F7B  0020               	movlb	0	; select bank0
  8206  0F7C  01B6               	clrf	TMR0_ISR@CountCallBack	;volatile
  8207  0F7D  01B7               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  8208  0F7E  0008               	return
  8209  0F7F                     __end_of_TMR0_ISR:	
  8210                           
  8211                           	psect	text49
  8212  0EF9                     __ptext49:	
  8213 ;; *************** function _TMR0_CallBack *****************
  8214 ;; Defined at:
  8215 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8233 ;;Total ram usage:        1 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_TMR0_ISR
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _TMR0_CallBack
  8244  0EF9                     _TMR0_CallBack:	
  8245                           
  8246                           ;tmr0.c: 128: time_count++;
  8247                           
  8248                           ;incstack = 0
  8249                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
  8250  0EF9  3001               	movlw	1
  8251  0EFA  00F0               	movwf	??_TMR0_CallBack
  8252  0EFB  0870               	movf	??_TMR0_CallBack,w
  8253  0EFC  0020               	movlb	0	; select bank0
  8254  0EFD  07BD               	addwf	_time_count,f
  8255                           
  8256                           ;tmr0.c: 129: if(time_count == 4 || time_count > 8) time_count = 0;
  8257  0EFE  3004               	movlw	4
  8258  0EFF  063D               	xorwf	_time_count,w
  8259  0F00  1903               	btfsc	3,2
  8260  0F01  2F06               	goto	i1l3019
  8261  0F02  3009               	movlw	9
  8262  0F03  023D               	subwf	_time_count,w
  8263  0F04  1C03               	skipc
  8264  0F05  2F07               	goto	i1l3021
  8265  0F06                     i1l3019:	
  8266  0F06  01BD               	clrf	_time_count
  8267  0F07                     i1l3021:	
  8268                           
  8269                           ;tmr0.c: 130: LongPressSec++;
  8270  0F07  3001               	movlw	1
  8271  0F08  00F0               	movwf	??_TMR0_CallBack
  8272  0F09  0870               	movf	??_TMR0_CallBack,w
  8273  0F0A  07BA               	addwf	_LongPressSec,f
  8274  0F0B  0008               	return
  8275  0F0C                     __end_of_TMR0_CallBack:	
  8276  007E                     btemp	set	126	;btemp
  8277  007E                     int$flags	set	126
  8278  007E                     wtemp	set	126
  8279  007E                     wtemp0	set	126
  8280  0080                     wtemp1	set	128
  8281  0082                     wtemp2	set	130
  8282  0084                     wtemp3	set	132
  8283  0086                     wtemp4	set	134
  8284  0088                     wtemp5	set	136
  8285  007F                     wtemp6	set	127
  8286  007E                     ttemp	set	126
  8287  007E                     ttemp0	set	126
  8288  0081                     ttemp1	set	129
  8289  0084                     ttemp2	set	132
  8290  0087                     ttemp3	set	135
  8291  007F                     ttemp4	set	127
  8292  007E                     ltemp	set	126
  8293  007E                     ltemp0	set	126
  8294  0082                     ltemp1	set	130
  8295  0086                     ltemp2	set	134
  8296  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         124
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     28      79
    BANK1            80      3      20
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK0[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK0[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK0[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _SYSTEM_Initialize->_TMR0_Initialize
    _time_Display->___awdiv
    _time_Display->___awmod
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _temperature_display->_maxim_clear_fault_status
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _temperature_process->_time_Display
    _time_Display->_Bq32k_Rtc_Read_Time
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _temperature_display->_Tc_Display
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   41805
                                             25 BANK0      3     3      0
                                              0 BANK1      3     3      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _SendCmd_1621
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          2     2      0   18783
                                             23 BANK0      2     2      0
                           _Key_Scan
                       _SendCmd_1621
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   18080
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5078
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1402
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0    8437
                                             13 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                 8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _Key_Scan
     _SendCmd_1621
       _SendBit_1621
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _SendCmd_1621
     _SendBit_1621
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      14       7       25.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jul 05 10:30:30 2016

                        __end_of_I2C_Send_Buffer 05C3                                   _SPI_Initialize 0E72  
                     ?_maxim_31856_read_register 0070                                                _s 0120  
  maxim_31856_read_register@uch_register_address 0075                                   ___bmul@product 0075  
                             __size_of_I2C_Start 0019                                      __CFG_CP$OFF 0000  
                                             l71 0E91                                     ___awdiv@sign 0053  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 0E72  
                                             _tm 00AA                                  _timer0ReloadVal 006E  
                           Bq32k_Rtc_Read_Time@p 0061                                              l332 005A  
                                            l341 008C                                              l334 005C  
                                            l351 00E5                                              l460 0191  
                                            l452 0159                                              l197 0FC4  
                                            l542 07AD                                              l703 04B5  
                                            l455 0161                                              l544 07AF  
                                            l560 078F                                              l464 05C8  
                                            l457 0189                                              l715 04D6  
                                            l812 075E                                              l725 04EB  
                                            l709 04BA                                              l558 078D  
                                            l744 06DD                                              l817 0754  
                                            l818 0758                                              l850 0534  
                                            l587 0662                                              l499 0697  
                                            l836 051A                                              l597 01DC  
                                            l598 0200                                              l854 0541  
                                            _RB1 0069                                              _RB3 006B  
                       __end_of_maxim_31856_init 03A8                                              _RB5 006D  
                                            _RA7 0067                                     ?_err_Display 0070  
                                   ___awmod@sign 0053                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                         _maxim_start_conversion 0FCB                                     __CFG_LVP$OFF 0000  
                                           l4101 00E6                                             l4031 052C  
                                           l4023 051E                                             l4015 0509  
                                           l4103 00E9                                             l3401 06ED  
                                           l3323 07A4                                             l4027 0524  
                                           l4019 050F                                             l4037 0538  
                                           l4053 0065                                             l3351 04BC  
                                           l3335 0784                                             l3415 0EEA  
                                           l4063 008D                                             l3441 048B  
                                           l3435 0467                                             l3443 0490  
                                           l3419 0EF0                                             l4059 007A  
                                           l3453 0498                                             l3445 0495  
                                           l3701 0422                                             l3439 0476  
                                           l3527 02F7                                             l3711 042A  
                                           l3465 0648                                             l3561 0604  
                                           l3529 0322                                             l3713 0436  
                                           l4089 00BD                                             l3563 0610  
                                           l3723 0451                                             l3573 062B  
                                           l3661 01A9                                             l3637 0168  
                                           l3901 067F                                             l3591 06B7  
                                           l3487 07E6                                             l3663 01C4  
                                           l3727 0459                                             l3719 0448  
                                           l3751 055A                                             l3743 0554  
                                           l3903 0682                                             l3569 0622  
                                           l3585 069F                                             l3753 0566  
                                           l3761 057B                                             l3587 06AB  
                                           l3595 06C0                                             l3667 0219  
                                           l3739 054D                                             l3907 0685  
                                           l3933 05A6                                             l3669 0224  
                                           l3765 0583                                             l3757 0572  
                                           l3935 05C0                                             l3775 05CF  
                                           l3695 0417                                             l3945 0746  
                                           l3779 05D6                                             l3891 0674  
                                           l3799 07CC                                             l3879 0666  
                                           l3889 0671                                             u3005 042D  
                                           _LATA 010C                                             _LATB 010D  
                                           _LATC 010E                                             u3025 0437  
                                           u3105 055D                                             u3035 0441  
                                           u3045 0449                                             u3125 056C  
                                           u3310 0FF0                                             u3135 0573  
                                           u2715 0607                                             u3507 0311  
                                           u2805 06B1                                             u3517 0318  
                                           u3607 0F9C                                             u2735 0611  
                                           u2815 06B8                                             u3527 0331  
                                           u3617 0FA2                                             u2745 061B  
                                           u2905 0172                                             u3537 0338  
                                           u3707 04CC                                             u3627 0FA8  
                                           u2755 0623                                             u3547 033F  
                                           u3717 04DA                                             u3637 0FAE  
                                           u3557 06D3                                             u3727 04E0  
                                           u3647 0F83                                             u2855 0142  
                                           u3567 06E3                                             u2695 0F18  
                                           u3487 004D                                             u3737 04F1  
                                           u3657 0F89                                             u3577 0794  
                                           u2785 06A2                                             u3497 030A  
                                           u3747 04F7                                             u3667 0F8F  
                                           u3587 07B4                                             u3757 0FBF  
                                           u3677 0F95                                             u3597 074A  
                                           u3687 04BE                                             u3697 04C4  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                           __size_of_WriteAll_1621 0035  
                                  ??_Key_Process 0069                                             _main 003F  
                                           fsr0h 0005                                             fsr1h 0007  
                                           fsr0l 0004                                             indf0 0000  
                                           indf1 0001                                             fsr1l 0006  
                                           btemp 007E                                 __end_of_I2C_Stop 0FB1  
                                  __CFG_BOREN$ON 0000                                             ltemp 007E  
                            SendCmd_1621@command 0053                                             start 0013  
                                           ttemp 007E                                             wtemp 007E  
                                __end_of_Dis_TAB 1015                           __end_of_SPI_Initialize 0E78  
                               ?_I2C_Read_Buffer 0076                                ___bmul@multiplier 0076  
                                  __CFG_MCLRE$ON 0000                                     main@bat_data 00B2  
                 __end_of_SPI_Exchange8bitBuffer 04AF                                  time_Display@num 0065  
                        __end_of_TMR0_Initialize 0EC7                                  ?_FVR_Initialize 0070  
                 __size_of_OSCILLATOR_Initialize 0005                    __end_of_OSCILLATOR_Initialize 0800  
                                __end_of_bcd2bin 0F21                                            ?_main 0070  
                                __end_of___awdiv 045E                                    __CFG_WDTE$OFF 0000  
                                __end_of___awmod 0588                                  ___awdiv@divisor 0073  
                                          _LATA0 0860                                            _LATA1 0861  
                                          _LATB0 0868                                            _LATA2 0862  
                                          _LATB1 0869                                            _LATA3 0863  
                                          _LATC0 0870                                            _LATA4 0864  
                                          _LATC1 0871                                            _LATA5 0865  
                                          _LATC2 0872                                  __end_of___lwdiv 0630  
                                          i1l249 000E                                  __end_of___lwmod 06C5  
                                ___awdiv@counter 0052                                            _PMADR 0191  
                                          _PMDAT 0193                                            _RCREG 0199  
                                          _RCSTA 019D                          ??_one_temperature_trans 005A  
                              ?_SendDataBit_1621 0073                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TXREG 019A                                            _TXSTA 019E  
                               __end_of_TMR0_ISR 0F7F                               ??_SendDataBit_1621 0074  
                   __end_of_tc_temperature_trans 0198                                            main@i 00B1  
                              __end_of_I2C_Start 0F98                              _Bq32k_Rtc_Read_Time 03A8  
                                Tc_Display@count 005C                                WriteAll_1621@addr 0056  
                                          ltemp0 007E                                            ltemp1 0082  
                                          ltemp2 0086                                            ltemp3 0080  
                                          ttemp0 007E                                            ttemp1 0081  
                                          ttemp2 0084                                            ttemp3 0087  
                                          ttemp4 007F                                            status 0003  
                                          wtemp0 007E                                            wtemp1 0080  
                                          wtemp2 0082                                            wtemp3 0084  
                                          wtemp4 0086                                            wtemp5 0088  
                                          wtemp6 007F                           __size_of_I2C_Send_Byte 004C  
                                     _Tc_Display 0198                                  ?_SPI_Initialize 0070  
                    __end_of_temperature_display 07E0                                  __initialization 0015  
                            __end_of_Key_Process 0542                                 ?_I2C_Send_Buffer 0076  
                                   __end_of_main 00F0                                   WriteAll_1621@i 0057  
                                 WriteAll_1621@p 0052                                 __end_of_Key_Scan 0760  
                           ?_Bq32k_Rtc_Read_Time 0070                      __end_of_temperature_process 0698  
                                 __CFG_LPBOR$OFF 0000     maxim_31856_write_register@uch_register_value 0074  
                    ?_INTERRUPT_InterruptManager 0070                                    _WriteAll_1621 0630  
                                         ??_main 006B   maxim_31856_write_register@uch_register_address 0075  
                        Bq32k_Rtc_Read_Time@temp 0057                                I2C_Receive_Byte@i 0075  
                       __end_of_SPI_Exchange8bit 0E95                                           _ADCON0 009D  
                                         _ADCON1 009E                                           _ADRESH 009C  
                                         _ADRESL 009B                                 ___awdiv@dividend 0075  
                                         _APFCON 011D                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         i1l3021 0F07                                           i1l3019 0F06  
                                         _FVRCON 0117                                           _PMADRH 0192  
                                         _PMADRL 0191                                           _PMDATH 0194  
                                         _PMDATL 0193                                _temperature_value 0024  
                                         _PMCON2 0196                                           _OSCCON 0099  
                                         _SPBRGH 019C                                           _SPBRGL 019B  
                                         _TRISB1 0469                                           _TRISB3 046B  
                                         _SSPBUF 0211                                    ?_SendCmd_1621 0070  
                    _f_cold_junction_temperature 0030                                    ?_SendBit_1621 0073  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 0FE5  
                               SendBit_1621@data 0076                                           ___bmul 0EE8  
                                      ??_bcd2bin 0052                                        ??___awdiv 0077  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0077  
                          ??_Bq32k_Rtc_Read_Time 0055                                        ??___lwdiv 0057  
                                      ??___lwmod 0077                     ?_maxim_31856_read_nregisters 0055  
                                 ?_WriteAll_1621 0052                                 ?_TMR0_Initialize 0070  
                                         _memset 07E0                                ?_I2C_Receive_Byte 0070  
                               ___awdiv@quotient 0054                                  ___awmod@divisor 0073  
                                         _uch_sr 0045                                  ___awmod@counter 0052  
                                  _I2C_Send_Byte 04AF                               ??_I2C_Receive_Byte 0073  
                                      ?_I2C_Stop 0070                     ??_maxim_31856_write_register 0075  
                          I2C_Read_Buffer@Length 0077                         ADC_GetConversion@channel 0076  
                           __size_of_err_Display 0025                            __end_of_TMR0_CallBack 0F0C  
                                     bcd2bin@val 0077                       ??_maxim_clear_fault_status 0077  
                              _SYSTEM_Initialize 0F21                                   ??_SendCmd_1621 0052  
                        __end_of__initialization 003B                                   ??_SendBit_1621 0074  
                                    _Key_Process 04FB                               ?_SYSTEM_Initialize 0070  
                                    ?_Tc_Display 0070                              ___bmul@multiplicand 0073  
                              time_Display@F2120 002C                                   __pcstackCOMMON 0070  
                                   __pidataBANK1 0E95                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 00F0                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074              __size_of_maxim_31856_write_register 000D  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0057  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 0036  
                                _temperature_int 0038                                       ??_I2C_Stop 0073  
                                  ??_Two_Display 0058                               ??_maxim_31856_init 0076  
                               Two_Display@F2114 0020                      _f_linearized_tc_temperature 0033  
                           I2C_Receive_Byte@Data 0074                              I2C_Read_Buffer@Flag 0054  
                      __end_of_SYSTEM_Initialize 0F36                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 1000                                       __pbssBANK0 0020  
                                     __pbssBANK1 00AA                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                                  __CFG_VCAPEN$OFF 0000  
                               ??_FVR_Initialize 0073                                       __pmaintext 003F  
                                        ?___bmul 0073                            ?_tc_temperature_trans 0070  
                                ??_WriteAll_1621 0055                                       ??_TMR0_ISR 0071  
                                     __pintentry 0004                                          _BAUDCON 019F  
                                        ?_memset 0073                   __end_of_maxim_start_conversion 0FE5  
                        __size_of_ADC_Initialize 0008                              __size_of_Tc_Display 00A7  
                 __size_of_one_temperature_trans 0038                    __end_of_one_temperature_trans 05FB  
                                        _OSCSTAT 009A                                          _SSP1ADD 0212  
                      _maxim_31856_read_register 0ED7             __size_of_maxim_31856_read_nregisters 0018  
                                     ??_Key_Scan 0073                                          _Dis_TAB 1000  
                               ??_SPI_Initialize 0073                              __end_of_Two_Display 0718  
                      __size_of_SendDataBit_1621 0020                                        _I2C_Start 0F7F  
maxim_31856_read_nregisters@uch_register_address 0059                                          _bcd2bin 0F0C  
                                __size_of___bmul 0011                                    ?_time_Display 0070  
                                        ___awdiv 040C                                          ___awmod 0542  
                                        ___lwdiv 05FB                                          ___lwmod 0698  
                                ??_I2C_Send_Byte 0073                                I2C_Send_Byte@Data 0074  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 0344                                          __ptext2 0F21  
                                        __ptext3 0EB8                                          __ptext4 0E72  
                                        __ptext5 0760                                          __ptext6 07FB  
                                        __ptext7 0E6E                                          __ptext8 0E9F  
                                        __ptext9 0E84                             __end_of_SendCmd_1621 0F4E  
                           SendDataBit_1621@data 0076                             __end_of_SendBit_1621 07C2  
             __end_of_maxim_31856_write_register 0EB8                       _maxim_31856_write_register 0EAB  
                          _OSCILLATOR_Initialize 07FB                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 0079  
                                        _uch_cr1 0041                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 0046                 __end_of_maxim_clear_fault_status 0ED7  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 0E7F  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 0E78                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0053  
                                        initloop 0E79                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 0E9F                           ??_tc_temperature_trans 0052  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0062  
                                      _RCSTAbits 019D                                     __pstringtext 1000  
                                     _time_count 003D                     __size_of_temperature_display 001E  
                            ??_EUSART_Initialize 0073                                     _display_buff 004E  
                       __size_of_I2C_Send_Buffer 003B                                 __CFG_FOSC$INTOSC 0000  
                   __size_of_temperature_process 0033                                      _Two_Display 06EF  
                              __size_of_I2C_Stop 0019                              Bq32k_Time_Init@temp 0059  
                      __size_of_I2C_Receive_Byte 002A                             Key_Process@gKeyValue 006A  
                      __end_of_EUSART_Initialize 0EAB                                     ?_Key_Process 0070  
                       ??_SPI_Exchange8bitBuffer 0052                                     ??_Tc_Display 005B  
                    __end_of_Bq32k_Rtc_Read_Time 040C        maxim_start_conversion@uch_conversion_mode 0052  
                                 __end_of___bmul 0EF9                                __size_of_TMR0_ISR 0019  
                                 _ADC_Initialize 0E84                           ?_OSCILLATOR_Initialize 0070  
                                 __end_of_memset 07FB                                   Tc_Display@data 005D  
                               WriteAll_1621@cnt 0054                                    ??_err_Display 0058  
                            start_initialization 0015                         __size_of_TMR0_Initialize 000F  
                             __end_of_Tc_Display 023F                  __size_of_PIN_MANAGER_Initialize 0022  
                              ??_I2C_Read_Buffer 0052                                   Two_Display@num 0059  
                      __size_of_maxim_31856_init 0064                                 _SendDataBit_1621 0782  
                                    ??_I2C_Start 0073                                __size_of_Key_Scan 0023  
                               _temperature_sign 003C               __size_of_maxim_31856_read_register 0011  
                                SendBit_1621@cnt 0073                                         ??___bmul 0074  
              __size_of_maxim_clear_fault_status 0010                        ?_maxim_clear_fault_status 0070  
                          __size_of_SendCmd_1621 0018                            __size_of_SendBit_1621 0020  
                            I2C_Send_Buffer@Flag 0056                           __size_of_TMR0_CallBack 0013  
                         __end_of_ADC_Initialize 0E8C                                      __pdataBANK1 00A0  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                                    __pbssCOMMON 0078                                        ___latbits 0003  
                                  __pcstackBANK0 0052                                    __pcstackBANK1 00B1  
                           __end_of_time_Display 02CC                    SPI_Exchange8bitBuffer@dataOut 0075  
                              ??_I2C_Send_Buffer 0052                              __end_of_err_Display 073D  
                     __size_of_EUSART_Initialize 000C                               I2C_Read_Buffer@ADD 0053  
                                   _LongPressSec 003A                                Two_Display@number 005D  
                                   _SendCmd_1621 0F36                                     _SendBit_1621 07A2  
                                      __pnvBANK0 006E                  __size_of_SPI_Exchange8bitBuffer 0051  
                               ___lwdiv@dividend 0055                           _PIN_MANAGER_Initialize 0760  
                                    _MAX31856Sec 0078                __end_of_maxim_31856_read_register 0EE8  
                                       ?_bcd2bin 0070                                         ?___awdiv 0073  
                                       ?___awmod 0073              __end_of_maxim_31856_read_nregisters 0F66  
                    _maxim_31856_read_nregisters 0F4E                                         ?___lwdiv 0053  
                                       ?___lwmod 0073                                  ?_ADC_Initialize 0070  
                              SendDataBit_1621@i 0077                            __end_of_WriteAll_1621 0665  
                   ??_INTERRUPT_InterruptManager 0072                      ?_maxim_31856_write_register 0074  
                                       _I2C_Stop 0F98                                 I2C_Send_Buffer@i 0055  
                               ___lwdiv@quotient 0059                                    _TMR0_CallBack 0EF9  
                            _temperature_decimal 003B                            _one_temperature_trans 05C3  
                               _I2C_Receive_Byte 06C5                              SendDataBit_1621@cnt 0073  
                                 err_Display@num 0059            maxim_31856_read_nregisters@uch_nBytes 0056  
                            _temperature_display 07C2                                ??_TMR0_Initialize 0073  
                                      clear_ram0 0E7E                                        _uch_ltcbh 007A  
                                      _uch_ltcbl 0042                                        _uch_ltcbm 0043  
                           __size_of_Key_Process 0047              __size_of_INTERRUPT_InterruptManager 000F  
                            _temperature_process 0665                                         _PIR1bits 0011  
                      __size_of_SPI_Exchange8bit 0009                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0F66                                         _SSP1STAT 0214  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 04FB  
                                     _ADCON0bits 009D                          __size_of_FVR_Initialize 0004  
                         _SPI_Exchange8bitBuffer 045E                                      _err_Display 0718  
                           ?_temperature_process 0070                                     ?_Two_Display 0070  
                                 ?_TMR0_CallBack 0070                                         _Key_Scan 073D  
            maxim_31856_read_nregisters@uch_buff 0055                                 _maxim_31856_init 0344  
                       __size_of_Bq32k_Time_Init 001B                                _ADC_GetConversion 0FB1  
                       ??_maxim_start_conversion 0077                               I2C_Send_Buffer@ADD 0054  
                  __size_of_tc_temperature_trans 00A8                          __size_of_SPI_Initialize 0006  
                               __size_of_bcd2bin 0015                          ??_OSCILLATOR_Initialize 0073  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 005F                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 02CC                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                     SPI_Exchange8bitBuffer@dataIn 0076  
                   SPI_Exchange8bitBuffer@bufLen 0074                                 err_Display@F2117 0028  
                       __end_of_SendDataBit_1621 07A2                            __size_of_time_Display 008D  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0053                                  ___lwdiv@counter 0058  
                                       __ptext10 04FB                                         __ptext11 0665  
                                       __ptext20 07C2                                         __ptext12 023F  
                                       __ptext21 00F0                                         __ptext13 0542  
                                       __ptext30 0EAB                                         __ptext22 0EC7  
                                       __ptext14 040C                                         __ptext31 0ED7  
                                       __ptext23 0718                                         __ptext15 03A8  
                                       __ptext40 073D                                         __ptext32 0F4E  
                                       __ptext24 0198                                         __ptext16 0F0C  
                                       __ptext41 0FE5                                         __ptext33 045E  
                                       __ptext25 07E0                                         __ptext17 0EE8  
                                       __ptext42 0588                                         __ptext34 0E8C  
                                       __ptext26 0698                                         __ptext18 02CC  
                                       __ptext43 0F98                                         __ptext35 06EF  
                                       __ptext27 05FB                                         __ptext19 06C5  
                                       __ptext44 0F7F                                         __ptext36 0630  
                                       __ptext28 05C3                                         __ptext45 04AF  
                                       __ptext37 0782                                         __ptext29 0FCB  
                                       __ptext46 0FB1                                         __ptext38 0F36  
                                       __ptext39 07A2                                         __ptext48 0F66  
                                       __ptext49 0EF9                           ?_one_temperature_trans 0070  
                                   _SSP1CON1bits 0215                                    __size_of_main 00B1  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 0FCB  
                                       _uch_cjth 003F                                         _uch_cjtl 0040  
                                       _uch_mask 0044                                         int$flags 007E  
                                   _time_Display 023F                                         _tmr_flag 003E  
             __end_of_INTERRUPT_InterruptManager 0013                       _INTERRUPT_InterruptManager 0004  
                   __size_of_Bq32k_Rtc_Read_Time 0064                                     _SSP1STATbits 0214  
                                _I2C_Send_Buffer 0588                                       _INTCONbits 000B  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0052                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 0344                                 _SPI_Exchange8bit 0E8C  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 06EF  
                              ??_Bq32k_Time_Init 0057                                   _FVR_Initialize 0E6E  
                                     _OPTION_REG 0095                                  ___lwmod@divisor 0073  
                                _TMR0_Initialize 0EB8                                  ___lwmod@counter 0052  
                           __size_of_Two_Display 0029                   __end_of_PIN_MANAGER_Initialize 0782  
                           Bq32k_Time_Init@F2009 00A0                       __size_of_ADC_GetConversion 001A  
                       _maxim_clear_fault_status 0EC7  
