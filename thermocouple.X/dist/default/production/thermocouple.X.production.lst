

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Jul 11 16:57:40 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0197                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020D                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0FE4                     	;# 
   185  0FE5                     	;# 
   186  0FE6                     	;# 
   187  0FE7                     	;# 
   188  0FE8                     	;# 
   189  0FE9                     	;# 
   190  0FEA                     	;# 
   191  0FEB                     	;# 
   192  0FED                     	;# 
   193  0FEE                     	;# 
   194  0FEF                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0090                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0116                     	;# 
   242  0117                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0197                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019C                     	;# 
   263  019C                     	;# 
   264  019D                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  020D                     	;# 
   268  0210                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  0394                     	;# 
   293  0395                     	;# 
   294  0396                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  0191                     	;# 
   359  0191                     	;# 
   360  0192                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0197                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019C                     	;# 
   374  019C                     	;# 
   375  019D                     	;# 
   376  019E                     	;# 
   377  019F                     	;# 
   378  020D                     	;# 
   379  0210                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0298                     	;# 
   400  0298                     	;# 
   401  0299                     	;# 
   402  029A                     	;# 
   403  0394                     	;# 
   404  0395                     	;# 
   405  0396                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0197                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020D                     	;# 
   490  0210                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0FE4                     	;# 
   518  0FE5                     	;# 
   519  0FE6                     	;# 
   520  0FE7                     	;# 
   521  0FE8                     	;# 
   522  0FE9                     	;# 
   523  0FEA                     	;# 
   524  0FEB                     	;# 
   525  0FED                     	;# 
   526  0FEE                     	;# 
   527  0FEF                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  010D                     	;# 
   573  010E                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  011D                     	;# 
   577  018C                     	;# 
   578  018D                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  020D                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  0394                     	;# 
   626  0395                     	;# 
   627  0396                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0016                     	;# 
   660  0017                     	;# 
   661  0018                     	;# 
   662  0019                     	;# 
   663  001A                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0095                     	;# 
   673  0096                     	;# 
   674  0097                     	;# 
   675  0099                     	;# 
   676  009A                     	;# 
   677  009B                     	;# 
   678  009B                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010E                     	;# 
   685  0116                     	;# 
   686  0117                     	;# 
   687  011D                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  018E                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0194                     	;# 
   697  0195                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0212                     	;# 
   717  0213                     	;# 
   718  0213                     	;# 
   719  0214                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0216                     	;# 
   725  0216                     	;# 
   726  0217                     	;# 
   727  0217                     	;# 
   728  0291                     	;# 
   729  0291                     	;# 
   730  0292                     	;# 
   731  0293                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  029A                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0FE4                     	;# 
   740  0FE5                     	;# 
   741  0FE6                     	;# 
   742  0FE7                     	;# 
   743  0FE8                     	;# 
   744  0FE9                     	;# 
   745  0FEA                     	;# 
   746  0FEB                     	;# 
   747  0FED                     	;# 
   748  0FEE                     	;# 
   749  0FEF                     	;# 
   750  0000                     	;# 
   751  0001                     	;# 
   752  0002                     	;# 
   753  0003                     	;# 
   754  0004                     	;# 
   755  0005                     	;# 
   756  0006                     	;# 
   757  0007                     	;# 
   758  0008                     	;# 
   759  0009                     	;# 
   760  000A                     	;# 
   761  000B                     	;# 
   762  000C                     	;# 
   763  000D                     	;# 
   764  000E                     	;# 
   765  0010                     	;# 
   766  0011                     	;# 
   767  0012                     	;# 
   768  0015                     	;# 
   769  0016                     	;# 
   770  0016                     	;# 
   771  0017                     	;# 
   772  0018                     	;# 
   773  0019                     	;# 
   774  001A                     	;# 
   775  001B                     	;# 
   776  001C                     	;# 
   777  008C                     	;# 
   778  008D                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0095                     	;# 
   784  0096                     	;# 
   785  0097                     	;# 
   786  0099                     	;# 
   787  009A                     	;# 
   788  009B                     	;# 
   789  009B                     	;# 
   790  009C                     	;# 
   791  009D                     	;# 
   792  009E                     	;# 
   793  010C                     	;# 
   794  010D                     	;# 
   795  010E                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0199                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019E                     	;# 
   821  019F                     	;# 
   822  020D                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0213                     	;# 
   830  0214                     	;# 
   831  0214                     	;# 
   832  0215                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0216                     	;# 
   836  0216                     	;# 
   837  0217                     	;# 
   838  0217                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0298                     	;# 
   844  0298                     	;# 
   845  0299                     	;# 
   846  029A                     	;# 
   847  0394                     	;# 
   848  0395                     	;# 
   849  0396                     	;# 
   850  0FE4                     	;# 
   851  0FE5                     	;# 
   852  0FE6                     	;# 
   853  0FE7                     	;# 
   854  0FE8                     	;# 
   855  0FE9                     	;# 
   856  0FEA                     	;# 
   857  0FEB                     	;# 
   858  0FED                     	;# 
   859  0FEE                     	;# 
   860  0FEF                     	;# 
   861  0000                     	;# 
   862  0001                     	;# 
   863  0002                     	;# 
   864  0003                     	;# 
   865  0004                     	;# 
   866  0005                     	;# 
   867  0006                     	;# 
   868  0007                     	;# 
   869  0008                     	;# 
   870  0009                     	;# 
   871  000A                     	;# 
   872  000B                     	;# 
   873  000C                     	;# 
   874  000D                     	;# 
   875  000E                     	;# 
   876  0010                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0015                     	;# 
   880  0016                     	;# 
   881  0016                     	;# 
   882  0017                     	;# 
   883  0018                     	;# 
   884  0019                     	;# 
   885  001A                     	;# 
   886  001B                     	;# 
   887  001C                     	;# 
   888  008C                     	;# 
   889  008D                     	;# 
   890  008E                     	;# 
   891  0090                     	;# 
   892  0091                     	;# 
   893  0092                     	;# 
   894  0095                     	;# 
   895  0096                     	;# 
   896  0097                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009B                     	;# 
   901  009C                     	;# 
   902  009D                     	;# 
   903  009E                     	;# 
   904  010C                     	;# 
   905  010D                     	;# 
   906  010E                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  011D                     	;# 
   910  018C                     	;# 
   911  018D                     	;# 
   912  018E                     	;# 
   913  0191                     	;# 
   914  0191                     	;# 
   915  0192                     	;# 
   916  0193                     	;# 
   917  0193                     	;# 
   918  0194                     	;# 
   919  0195                     	;# 
   920  0196                     	;# 
   921  0197                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019E                     	;# 
   932  019F                     	;# 
   933  020D                     	;# 
   934  0210                     	;# 
   935  0211                     	;# 
   936  0211                     	;# 
   937  0212                     	;# 
   938  0212                     	;# 
   939  0213                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0214                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  0394                     	;# 
   959  0395                     	;# 
   960  0396                     	;# 
   961  0FE4                     	;# 
   962  0FE5                     	;# 
   963  0FE6                     	;# 
   964  0FE7                     	;# 
   965  0FE8                     	;# 
   966  0FE9                     	;# 
   967  0FEA                     	;# 
   968  0FEB                     	;# 
   969  0FED                     	;# 
   970  0FEE                     	;# 
   971  0FEF                     	;# 
   972  0000                     	;# 
   973  0001                     	;# 
   974  0002                     	;# 
   975  0003                     	;# 
   976  0004                     	;# 
   977  0005                     	;# 
   978  0006                     	;# 
   979  0007                     	;# 
   980  0008                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  0010                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0090                     	;# 
  1003  0091                     	;# 
  1004  0092                     	;# 
  1005  0095                     	;# 
  1006  0096                     	;# 
  1007  0097                     	;# 
  1008  0099                     	;# 
  1009  009A                     	;# 
  1010  009B                     	;# 
  1011  009B                     	;# 
  1012  009C                     	;# 
  1013  009D                     	;# 
  1014  009E                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  011D                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  018E                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0197                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0291                     	;# 
  1062  0291                     	;# 
  1063  0292                     	;# 
  1064  0293                     	;# 
  1065  0298                     	;# 
  1066  0298                     	;# 
  1067  0299                     	;# 
  1068  029A                     	;# 
  1069  0394                     	;# 
  1070  0395                     	;# 
  1071  0396                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  000D                     	;# 
  1097  000E                     	;# 
  1098  0010                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0090                     	;# 
  1114  0091                     	;# 
  1115  0092                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  0116                     	;# 
  1130  0117                     	;# 
  1131  011D                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0194                     	;# 
  1141  0195                     	;# 
  1142  0196                     	;# 
  1143  0197                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019C                     	;# 
  1151  019C                     	;# 
  1152  019D                     	;# 
  1153  019E                     	;# 
  1154  019F                     	;# 
  1155  020D                     	;# 
  1156  0210                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0298                     	;# 
  1177  0298                     	;# 
  1178  0299                     	;# 
  1179  029A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0016                     	;# 
  1215  0017                     	;# 
  1216  0018                     	;# 
  1217  0019                     	;# 
  1218  001A                     	;# 
  1219  001B                     	;# 
  1220  001C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  0116                     	;# 
  1241  0117                     	;# 
  1242  011D                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  018E                     	;# 
  1246  0191                     	;# 
  1247  0191                     	;# 
  1248  0192                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0197                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019C                     	;# 
  1262  019C                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  020D                     	;# 
  1267  0210                     	;# 
  1268  0211                     	;# 
  1269  0211                     	;# 
  1270  0212                     	;# 
  1271  0212                     	;# 
  1272  0213                     	;# 
  1273  0213                     	;# 
  1274  0214                     	;# 
  1275  0214                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0216                     	;# 
  1280  0216                     	;# 
  1281  0217                     	;# 
  1282  0217                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  0394                     	;# 
  1292  0395                     	;# 
  1293  0396                     	;# 
  1294  0FE4                     	;# 
  1295  0FE5                     	;# 
  1296  0FE6                     	;# 
  1297  0FE7                     	;# 
  1298  0FE8                     	;# 
  1299  0FE9                     	;# 
  1300  0FEA                     	;# 
  1301  0FEB                     	;# 
  1302  0FED                     	;# 
  1303  0FEE                     	;# 
  1304  0FEF                     	;# 
  1305  0000                     	;# 
  1306  0001                     	;# 
  1307  0002                     	;# 
  1308  0003                     	;# 
  1309  0004                     	;# 
  1310  0005                     	;# 
  1311  0006                     	;# 
  1312  0007                     	;# 
  1313  0008                     	;# 
  1314  0009                     	;# 
  1315  000A                     	;# 
  1316  000B                     	;# 
  1317  000C                     	;# 
  1318  000D                     	;# 
  1319  000E                     	;# 
  1320  0010                     	;# 
  1321  0011                     	;# 
  1322  0012                     	;# 
  1323  0015                     	;# 
  1324  0016                     	;# 
  1325  0016                     	;# 
  1326  0017                     	;# 
  1327  0018                     	;# 
  1328  0019                     	;# 
  1329  001A                     	;# 
  1330  001B                     	;# 
  1331  001C                     	;# 
  1332  008C                     	;# 
  1333  008D                     	;# 
  1334  008E                     	;# 
  1335  0090                     	;# 
  1336  0091                     	;# 
  1337  0092                     	;# 
  1338  0095                     	;# 
  1339  0096                     	;# 
  1340  0097                     	;# 
  1341  0099                     	;# 
  1342  009A                     	;# 
  1343  009B                     	;# 
  1344  009B                     	;# 
  1345  009C                     	;# 
  1346  009D                     	;# 
  1347  009E                     	;# 
  1348  010C                     	;# 
  1349  010D                     	;# 
  1350  010E                     	;# 
  1351  0116                     	;# 
  1352  0117                     	;# 
  1353  011D                     	;# 
  1354  018C                     	;# 
  1355  018D                     	;# 
  1356  018E                     	;# 
  1357  0191                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0193                     	;# 
  1361  0193                     	;# 
  1362  0194                     	;# 
  1363  0195                     	;# 
  1364  0196                     	;# 
  1365  0197                     	;# 
  1366  0199                     	;# 
  1367  019A                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019B                     	;# 
  1371  019B                     	;# 
  1372  019C                     	;# 
  1373  019C                     	;# 
  1374  019D                     	;# 
  1375  019E                     	;# 
  1376  019F                     	;# 
  1377  020D                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  0212                     	;# 
  1382  0212                     	;# 
  1383  0213                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0214                     	;# 
  1387  0215                     	;# 
  1388  0215                     	;# 
  1389  0215                     	;# 
  1390  0216                     	;# 
  1391  0216                     	;# 
  1392  0217                     	;# 
  1393  0217                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  0394                     	;# 
  1403  0395                     	;# 
  1404  0396                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0015                     	;# 
  1435  0016                     	;# 
  1436  0016                     	;# 
  1437  0017                     	;# 
  1438  0018                     	;# 
  1439  0019                     	;# 
  1440  001A                     	;# 
  1441  001B                     	;# 
  1442  001C                     	;# 
  1443  008C                     	;# 
  1444  008D                     	;# 
  1445  008E                     	;# 
  1446  0090                     	;# 
  1447  0091                     	;# 
  1448  0092                     	;# 
  1449  0095                     	;# 
  1450  0096                     	;# 
  1451  0097                     	;# 
  1452  0099                     	;# 
  1453  009A                     	;# 
  1454  009B                     	;# 
  1455  009B                     	;# 
  1456  009C                     	;# 
  1457  009D                     	;# 
  1458  009E                     	;# 
  1459  010C                     	;# 
  1460  010D                     	;# 
  1461  010E                     	;# 
  1462  0116                     	;# 
  1463  0117                     	;# 
  1464  011D                     	;# 
  1465  018C                     	;# 
  1466  018D                     	;# 
  1467  018E                     	;# 
  1468  0191                     	;# 
  1469  0191                     	;# 
  1470  0192                     	;# 
  1471  0193                     	;# 
  1472  0193                     	;# 
  1473  0194                     	;# 
  1474  0195                     	;# 
  1475  0196                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  019A                     	;# 
  1479  019B                     	;# 
  1480  019B                     	;# 
  1481  019B                     	;# 
  1482  019B                     	;# 
  1483  019C                     	;# 
  1484  019C                     	;# 
  1485  019D                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  020D                     	;# 
  1489  0210                     	;# 
  1490  0211                     	;# 
  1491  0211                     	;# 
  1492  0212                     	;# 
  1493  0212                     	;# 
  1494  0213                     	;# 
  1495  0213                     	;# 
  1496  0214                     	;# 
  1497  0214                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0215                     	;# 
  1501  0216                     	;# 
  1502  0216                     	;# 
  1503  0217                     	;# 
  1504  0217                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0298                     	;# 
  1510  0298                     	;# 
  1511  0299                     	;# 
  1512  029A                     	;# 
  1513  0394                     	;# 
  1514  0395                     	;# 
  1515  0396                     	;# 
  1516  0FE4                     	;# 
  1517  0FE5                     	;# 
  1518  0FE6                     	;# 
  1519  0FE7                     	;# 
  1520  0FE8                     	;# 
  1521  0FE9                     	;# 
  1522  0FEA                     	;# 
  1523  0FEB                     	;# 
  1524  0FED                     	;# 
  1525  0FEE                     	;# 
  1526  0FEF                     	;# 
  1527  0000                     	;# 
  1528  0001                     	;# 
  1529  0002                     	;# 
  1530  0003                     	;# 
  1531  0004                     	;# 
  1532  0005                     	;# 
  1533  0006                     	;# 
  1534  0007                     	;# 
  1535  0008                     	;# 
  1536  0009                     	;# 
  1537  000A                     	;# 
  1538  000B                     	;# 
  1539  000C                     	;# 
  1540  000D                     	;# 
  1541  000E                     	;# 
  1542  0010                     	;# 
  1543  0011                     	;# 
  1544  0012                     	;# 
  1545  0015                     	;# 
  1546  0016                     	;# 
  1547  0016                     	;# 
  1548  0017                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  008C                     	;# 
  1555  008D                     	;# 
  1556  008E                     	;# 
  1557  0090                     	;# 
  1558  0091                     	;# 
  1559  0092                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0099                     	;# 
  1564  009A                     	;# 
  1565  009B                     	;# 
  1566  009B                     	;# 
  1567  009C                     	;# 
  1568  009D                     	;# 
  1569  009E                     	;# 
  1570  010C                     	;# 
  1571  010D                     	;# 
  1572  010E                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  011D                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  018E                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020D                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0015                     	;# 
  1657  0016                     	;# 
  1658  0016                     	;# 
  1659  0017                     	;# 
  1660  0018                     	;# 
  1661  0019                     	;# 
  1662  001A                     	;# 
  1663  001B                     	;# 
  1664  001C                     	;# 
  1665  008C                     	;# 
  1666  008D                     	;# 
  1667  008E                     	;# 
  1668  0090                     	;# 
  1669  0091                     	;# 
  1670  0092                     	;# 
  1671  0095                     	;# 
  1672  0096                     	;# 
  1673  0097                     	;# 
  1674  0099                     	;# 
  1675  009A                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  010C                     	;# 
  1682  010D                     	;# 
  1683  010E                     	;# 
  1684  0116                     	;# 
  1685  0117                     	;# 
  1686  011D                     	;# 
  1687  018C                     	;# 
  1688  018D                     	;# 
  1689  018E                     	;# 
  1690  0191                     	;# 
  1691  0191                     	;# 
  1692  0192                     	;# 
  1693  0193                     	;# 
  1694  0193                     	;# 
  1695  0194                     	;# 
  1696  0195                     	;# 
  1697  0196                     	;# 
  1698  0197                     	;# 
  1699  0199                     	;# 
  1700  019A                     	;# 
  1701  019B                     	;# 
  1702  019B                     	;# 
  1703  019B                     	;# 
  1704  019B                     	;# 
  1705  019C                     	;# 
  1706  019C                     	;# 
  1707  019D                     	;# 
  1708  019E                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  0210                     	;# 
  1712  0211                     	;# 
  1713  0211                     	;# 
  1714  0212                     	;# 
  1715  0212                     	;# 
  1716  0213                     	;# 
  1717  0213                     	;# 
  1718  0214                     	;# 
  1719  0214                     	;# 
  1720  0215                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0216                     	;# 
  1724  0216                     	;# 
  1725  0217                     	;# 
  1726  0217                     	;# 
  1727  0291                     	;# 
  1728  0291                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0298                     	;# 
  1732  0298                     	;# 
  1733  0299                     	;# 
  1734  029A                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  0010                     	;# 
  1765  0011                     	;# 
  1766  0012                     	;# 
  1767  0015                     	;# 
  1768  0016                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001B                     	;# 
  1775  001C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  0090                     	;# 
  1780  0091                     	;# 
  1781  0092                     	;# 
  1782  0095                     	;# 
  1783  0096                     	;# 
  1784  0097                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009B                     	;# 
  1789  009C                     	;# 
  1790  009D                     	;# 
  1791  009E                     	;# 
  1792  010C                     	;# 
  1793  010D                     	;# 
  1794  010E                     	;# 
  1795  0116                     	;# 
  1796  0117                     	;# 
  1797  011D                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  0191                     	;# 
  1802  0191                     	;# 
  1803  0192                     	;# 
  1804  0193                     	;# 
  1805  0193                     	;# 
  1806  0194                     	;# 
  1807  0195                     	;# 
  1808  0196                     	;# 
  1809  0197                     	;# 
  1810  0199                     	;# 
  1811  019A                     	;# 
  1812  019B                     	;# 
  1813  019B                     	;# 
  1814  019B                     	;# 
  1815  019B                     	;# 
  1816  019C                     	;# 
  1817  019C                     	;# 
  1818  019D                     	;# 
  1819  019E                     	;# 
  1820  019F                     	;# 
  1821  020D                     	;# 
  1822  0210                     	;# 
  1823  0211                     	;# 
  1824  0211                     	;# 
  1825  0212                     	;# 
  1826  0212                     	;# 
  1827  0213                     	;# 
  1828  0213                     	;# 
  1829  0214                     	;# 
  1830  0214                     	;# 
  1831  0215                     	;# 
  1832  0215                     	;# 
  1833  0215                     	;# 
  1834  0216                     	;# 
  1835  0216                     	;# 
  1836  0217                     	;# 
  1837  0217                     	;# 
  1838  0291                     	;# 
  1839  0291                     	;# 
  1840  0292                     	;# 
  1841  0293                     	;# 
  1842  0298                     	;# 
  1843  0298                     	;# 
  1844  0299                     	;# 
  1845  029A                     	;# 
  1846  0394                     	;# 
  1847  0395                     	;# 
  1848  0396                     	;# 
  1849  0FE4                     	;# 
  1850  0FE5                     	;# 
  1851  0FE6                     	;# 
  1852  0FE7                     	;# 
  1853  0FE8                     	;# 
  1854  0FE9                     	;# 
  1855  0FEA                     	;# 
  1856  0FEB                     	;# 
  1857  0FED                     	;# 
  1858  0FEE                     	;# 
  1859  0FEF                     	;# 
  1860  0000                     	;# 
  1861  0001                     	;# 
  1862  0002                     	;# 
  1863  0003                     	;# 
  1864  0004                     	;# 
  1865  0005                     	;# 
  1866  0006                     	;# 
  1867  0007                     	;# 
  1868  0008                     	;# 
  1869  0009                     	;# 
  1870  000A                     	;# 
  1871  000B                     	;# 
  1872  000C                     	;# 
  1873  000D                     	;# 
  1874  000E                     	;# 
  1875  0010                     	;# 
  1876  0011                     	;# 
  1877  0012                     	;# 
  1878  0015                     	;# 
  1879  0016                     	;# 
  1880  0016                     	;# 
  1881  0017                     	;# 
  1882  0018                     	;# 
  1883  0019                     	;# 
  1884  001A                     	;# 
  1885  001B                     	;# 
  1886  001C                     	;# 
  1887  008C                     	;# 
  1888  008D                     	;# 
  1889  008E                     	;# 
  1890  0090                     	;# 
  1891  0091                     	;# 
  1892  0092                     	;# 
  1893  0095                     	;# 
  1894  0096                     	;# 
  1895  0097                     	;# 
  1896  0099                     	;# 
  1897  009A                     	;# 
  1898  009B                     	;# 
  1899  009B                     	;# 
  1900  009C                     	;# 
  1901  009D                     	;# 
  1902  009E                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0116                     	;# 
  1907  0117                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019E                     	;# 
  1931  019F                     	;# 
  1932  020D                     	;# 
  1933  0210                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0291                     	;# 
  1950  0291                     	;# 
  1951  0292                     	;# 
  1952  0293                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  0394                     	;# 
  1958  0395                     	;# 
  1959  0396                     	;# 
  1960  0FE4                     	;# 
  1961  0FE5                     	;# 
  1962  0FE6                     	;# 
  1963  0FE7                     	;# 
  1964  0FE8                     	;# 
  1965  0FE9                     	;# 
  1966  0FEA                     	;# 
  1967  0FEB                     	;# 
  1968  0FED                     	;# 
  1969  0FEE                     	;# 
  1970  0FEF                     	;# 
  1971                           
  1972                           	psect	idataBANK1
  1973  0858                     __pidataBANK1:	
  1974                           
  1975                           ;initializer for Bq32k_Time_Init@F2018
  1976  0858  3401               	retlw	1
  1977  0859  3450               	retlw	80
  1978  085A  3423               	retlw	35
  1979  085B  3402               	retlw	2
  1980  085C  3408               	retlw	8
  1981  085D  3407               	retlw	7
  1982  085E  3416               	retlw	22
  1983  085F  3400               	retlw	0
  1984  0860  3400               	retlw	0
  1985  0861  3400               	retlw	0
  1986                           
  1987                           	psect	stringtext
  1988  1000                     __pstringtext:	
  1989  1000                     _Dis_TAB:	
  1990  1000  34D7               	retlw	215
  1991  1001  3450               	retlw	80
  1992  1002  34B5               	retlw	181
  1993  1003  34F1               	retlw	241
  1994  1004  3472               	retlw	114
  1995  1005  34E3               	retlw	227
  1996  1006  34E7               	retlw	231
  1997  1007  3451               	retlw	81
  1998  1008  34F7               	retlw	247
  1999  1009  34F3               	retlw	243
  2000  100A  3477               	retlw	119
  2001  100B  34E6               	retlw	230
  2002  100C  3487               	retlw	135
  2003  100D  34F4               	retlw	244
  2004  100E  34A7               	retlw	167
  2005  100F  3427               	retlw	39
  2006  1010  3457               	retlw	87
  2007  1011  3420               	retlw	32
  2008  1012  3420               	retlw	32
  2009  1013  3420               	retlw	32
  2010  1014  3420               	retlw	32
  2011  1015                     __end_of_Dis_TAB:	
  2012                           
  2013                           	psect	nvBANK1
  2014  00EF                     __pnvBANK1:	
  2015  00EF                     _timer0ReloadVal:	
  2016  00EF                     	ds	1
  2017  000B                     _INTCONbits	set	11
  2018  0011                     _PIR1bits	set	17
  2019  0015                     _TMR0	set	21
  2020  0067                     _RA7	set	103
  2021  0069                     _RB1	set	105
  2022  006B                     _RB3	set	107
  2023  006D                     _RB5	set	109
  2024  009D                     _ADCON0	set	157
  2025  009D                     _ADCON0bits	set	157
  2026  009E                     _ADCON1	set	158
  2027  009C                     _ADRESH	set	156
  2028  009B                     _ADRESL	set	155
  2029  0095                     _OPTION_REG	set	149
  2030  0095                     _OPTION_REGbits	set	149
  2031  0099                     _OSCCON	set	153
  2032  009A                     _OSCSTAT	set	154
  2033  008C                     _TRISA	set	140
  2034  008D                     _TRISB	set	141
  2035  008E                     _TRISC	set	142
  2036  0469                     _TRISB1	set	1129
  2037  046B                     _TRISB3	set	1131
  2038  011D                     _APFCON	set	285
  2039  0117                     _FVRCON	set	279
  2040  0117                     _FVRCONbits	set	279
  2041  010C                     _LATA	set	268
  2042  010D                     _LATB	set	269
  2043  010E                     _LATC	set	270
  2044  0860                     _LATA0	set	2144
  2045  0861                     _LATA1	set	2145
  2046  0862                     _LATA2	set	2146
  2047  0863                     _LATA3	set	2147
  2048  0864                     _LATA4	set	2148
  2049  0865                     _LATA5	set	2149
  2050  0868                     _LATB0	set	2152
  2051  0869                     _LATB1	set	2153
  2052  0870                     _LATC0	set	2160
  2053  0871                     _LATC1	set	2161
  2054  0872                     _LATC2	set	2162
  2055  018C                     _ANSELA	set	396
  2056  018D                     _ANSELB	set	397
  2057  018E                     _ANSELC	set	398
  2058  019F                     _BAUDCON	set	415
  2059  0192                     _PMADRH	set	402
  2060  0191                     _PMADRL	set	401
  2061  0195                     _PMCON1bits	set	405
  2062  0196                     _PMCON2	set	406
  2063  0194                     _PMDATH	set	404
  2064  0193                     _PMDATL	set	403
  2065  0199                     _RCREG	set	409
  2066  019D                     _RCSTA	set	413
  2067  019D                     _RCSTAbits	set	413
  2068  019C                     _SPBRGH	set	412
  2069  019B                     _SPBRGL	set	411
  2070  019A                     _TXREG	set	410
  2071  019E                     _TXSTA	set	414
  2072  0212                     _SSP1ADD	set	530
  2073  0215                     _SSP1CON1	set	533
  2074  0215                     _SSP1CON1bits	set	533
  2075  0214                     _SSP1STAT	set	532
  2076  0214                     _SSP1STATbits	set	532
  2077  0211                     _SSPBUF	set	529
  2078  020D                     _WPUB	set	525
  2079  0210                     _WPUE	set	528
  2080                           
  2081                           ; #config settings
  2082  0000                     
  2083                           	psect	cinit
  2084  0015                     start_initialization:	
  2085  0015                     __initialization:	
  2086                           
  2087                           ; Clear objects allocated to COMMON
  2088  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  2089  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2090  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2091                           
  2092                           ; Clear objects allocated to BANK0
  2093  0018  3065               	movlw	low __pbssBANK0
  2094  0019  0084               	movwf	4
  2095  001A  3000               	movlw	high __pbssBANK0
  2096  001B  0085               	movwf	5
  2097  001C  3009               	movlw	9
  2098  001D  3188  2039  3180   	fcall	clear_ram0
  2099                           
  2100                           ; Clear objects allocated to BANK1
  2101  0020  30A0               	movlw	low __pbssBANK1
  2102  0021  0084               	movwf	4
  2103  0022  3000               	movlw	high __pbssBANK1
  2104  0023  0085               	movwf	5
  2105  0024  3045               	movlw	69
  2106  0025  3188  2039  3180   	fcall	clear_ram0
  2107                           
  2108                           ; Clear objects allocated to BANK2
  2109  0028  3020               	movlw	low __pbssBANK2
  2110  0029  0084               	movwf	4
  2111  002A  3001               	movlw	high __pbssBANK2
  2112  002B  0085               	movwf	5
  2113  002C  3040               	movlw	64
  2114  002D  3188  2039  3180   	fcall	clear_ram0
  2115                           
  2116                           ; Initialize objects allocated to BANK1
  2117  0030  3058               	movlw	low __pidataBANK1
  2118  0031  0084               	movwf	4
  2119  0032  3088               	movlw	(high __pidataBANK1)| (0+128)
  2120  0033  0085               	movwf	5
  2121  0034  30E5               	movlw	low __pdataBANK1
  2122  0035  0086               	movwf	6
  2123  0036  3000               	movlw	high __pdataBANK1
  2124  0037  0087               	movwf	7
  2125  0038  300A               	movlw	10
  2126  0039  3188  2033         	fcall	init_ram
  2127  003B                     end_of_initialization:	
  2128                           ;End of C runtime variable initialization code
  2129                           
  2130  003B                     __end_of__initialization:	
  2131  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2132  003C  0020               	movlb	0
  2133  003D  3184  2C71         	ljmp	_main	;jump to C main() function
  2134                           
  2135                           	psect	bssCOMMON
  2136  0078                     __pbssCOMMON:	
  2137  0078                     _CH2_temperature:	
  2138  0078                     	ds	2
  2139  007A                     _uch_cr0:	
  2140  007A                     	ds	1
  2141                           
  2142                           	psect	bssBANK0
  2143  0065                     __pbssBANK0:	
  2144  0065                     _temperature_value:	
  2145  0065                     	ds	4
  2146  0069                     _CH1_temperature:	
  2147  0069                     	ds	2
  2148  006B                     _Record_flag:	
  2149  006B                     	ds	1
  2150  006C                     _temperature_decimal:	
  2151  006C                     	ds	1
  2152  006D                     _time_count:	
  2153  006D                     	ds	1
  2154                           
  2155                           	psect	bssBANK1
  2156  00A0                     __pbssBANK1:	
  2157  00A0                     Two_Display@F2123:	
  2158  00A0                     	ds	4
  2159  00A4                     err_Display@F2126:	
  2160  00A4                     	ds	4
  2161  00A8                     time_Display@F2129:	
  2162  00A8                     	ds	4
  2163  00AC                     TMR0_ISR@CountCallBack:	
  2164  00AC                     	ds	2
  2165  00AE                     _Cur_Save_Index:	
  2166  00AE                     	ds	2
  2167  00B0                     _Cur_temperature:	
  2168  00B0                     	ds	2
  2169  00B2                     _temperature_int:	
  2170  00B2                     	ds	2
  2171  00B4                     _CH1_state:	
  2172  00B4                     	ds	1
  2173  00B5                     _CH2_state:	
  2174  00B5                     	ds	1
  2175  00B6                     _Cur_temperature_time_ch1:	
  2176  00B6                     	ds	1
  2177  00B7                     _Cur_temperature_time_ch2:	
  2178  00B7                     	ds	1
  2179  00B8                     _LongPressSec:	
  2180  00B8                     	ds	1
  2181  00B9                     _MAX31856Sec:	
  2182  00B9                     	ds	1
  2183  00BA                     _temperature_sign:	
  2184  00BA                     	ds	1
  2185  00BB                     _tmr_flag:	
  2186  00BB                     	ds	1
  2187  00BC                     _uch_cjth:	
  2188  00BC                     	ds	1
  2189  00BD                     _uch_cjtl:	
  2190  00BD                     	ds	1
  2191  00BE                     _uch_cr1:	
  2192  00BE                     	ds	1
  2193  00BF                     _uch_ltcbh:	
  2194  00BF                     	ds	1
  2195  00C0                     _uch_ltcbl:	
  2196  00C0                     	ds	1
  2197  00C1                     _uch_ltcbm:	
  2198  00C1                     	ds	1
  2199  00C2                     _uch_mask:	
  2200  00C2                     	ds	1
  2201  00C3                     _uch_sr:	
  2202  00C3                     	ds	1
  2203  00C4                     _uch_reg:	
  2204  00C4                     	ds	8
  2205  00CC                     _rtc_save_ch1:	
  2206  00CC                     	ds	7
  2207  00D3                     _rtc_save_ch2:	
  2208  00D3                     	ds	7
  2209  00DA                     _rtc_tm:	
  2210  00DA                     	ds	7
  2211  00E1                     _display_buff:	
  2212  00E1                     	ds	4
  2213                           
  2214                           	psect	dataBANK1
  2215  00E5                     __pdataBANK1:	
  2216  00E5                     Bq32k_Time_Init@F2018:	
  2217  00E5                     	ds	10
  2218                           
  2219                           	psect	bssBANK2
  2220  0120                     __pbssBANK2:	
  2221  0120                     _Flash_buff:	
  2222  0120                     	ds	64
  2223                           
  2224                           	psect	clrtext
  2225  0839                     clear_ram0:	
  2226                           ;	Called with FSR0 containing the base address, and
  2227                           ;	WREG with the size to clear
  2228                           
  2229  0839  0064               	clrwdt	;clear the watchdog before getting into this loop
  2230  083A                     clrloop0:	
  2231  083A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2232  083B  3101               	addfsr 0,1
  2233  083C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2234  083D  283A               	goto	clrloop0	;have we reached the end yet?
  2235  083E  3400               	retlw	0	;all done for this memory range, return
  2236                           
  2237                           	psect	inittext
  2238  0833                     init_ram:	
  2239  0833  00FE               	movwf	126
  2240  0834                     initloop:	
  2241  0834  0012               	moviw fsr0++
  2242  0835  001E               	movwi fsr1++
  2243  0836  0BFE               	decfsz	126,f
  2244  0837  2834               	goto	initloop
  2245  0838  3400               	retlw	0
  2246                           
  2247                           	psect	cstackBANK2
  2248  0160                     __pcstackBANK2:	
  2249  0160                     main@data_temp:	
  2250                           
  2251                           ; 2 bytes @ 0x0
  2252  0160                     	ds	2
  2253  0162                     main@i:	
  2254                           
  2255                           ; 1 bytes @ 0x2
  2256  0162                     	ds	1
  2257  0163                     main@bat_data:	
  2258                           
  2259                           ; 2 bytes @ 0x3
  2260  0163                     	ds	2
  2261                           
  2262                           	psect	cstackCOMMON
  2263  0070                     __pcstackCOMMON:	
  2264  0070                     ?_OSCILLATOR_Initialize:	
  2265  0070                     ?_SPI_Initialize:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_EUSART_Initialize:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_ADC_Initialize:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_TMR0_Initialize:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_FVR_Initialize:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_TMR0_CallBack:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_TMR0_CallBack:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_maxim_31856_init:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_Bq32k_Time_Init:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_SendCmd_1621:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_Serach_Flash_Head:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_temperature_process:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_Save_process:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_Calculate_Time:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_Tc_Display:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_err_Display:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_Two_Display:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_time_Display:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_Bq32k_Rtc_Read_Time:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_Set_start_flag:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_Write_Flash_head:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_Save_Write_time:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_Set_finish_flag:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_Write_Flash_finish:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_bcd2bin:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_PIN_MANAGER_Initialize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_SYSTEM_Initialize:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_SPI_Exchange8bit:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_EUSART_Write:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_TMR0_ISR:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_INTERRUPT_InterruptManager:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ?_main:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_maxim_31856_read_register:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_maxim_start_conversion:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_maxim_clear_fault_status:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_tc_temperature_trans:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_one_temperature_trans:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_temperature_display:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_I2C_Start:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_I2C_Send_Byte:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_I2C_Receive_Byte:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_I2C_Stop:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_Key_Scan:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_Key_Process:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397                           
  2398                           ; 2 bytes @ 0x0
  2399  0070                     	ds	1
  2400  0071                     ??_TMR0_ISR:	
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_INTERRUPT_InterruptManager:	
  2405                           
  2406                           ; 1 bytes @ 0x2
  2407  0072                     	ds	1
  2408  0073                     ??_OSCILLATOR_Initialize:	
  2409  0073                     ??_SPI_Initialize:	
  2410                           ; 1 bytes @ 0x3
  2411                           
  2412  0073                     ??_EUSART_Initialize:	
  2413                           ; 1 bytes @ 0x3
  2414                           
  2415  0073                     ??_ADC_Initialize:	
  2416                           ; 1 bytes @ 0x3
  2417                           
  2418  0073                     ??_TMR0_Initialize:	
  2419                           ; 1 bytes @ 0x3
  2420                           
  2421  0073                     ??_FVR_Initialize:	
  2422                           ; 1 bytes @ 0x3
  2423                           
  2424  0073                     ?_FLASH_EraseBlock:	
  2425                           ; 1 bytes @ 0x3
  2426                           
  2427  0073                     ?_memset:	
  2428                           ; 1 bytes @ 0x3
  2429                           
  2430  0073                     ??_Set_start_flag:	
  2431                           ; 1 bytes @ 0x3
  2432                           
  2433  0073                     ??_Set_finish_flag:	
  2434                           ; 1 bytes @ 0x3
  2435                           
  2436  0073                     ??_PIN_MANAGER_Initialize:	
  2437                           ; 1 bytes @ 0x3
  2438                           
  2439  0073                     ??_SPI_Exchange8bit:	
  2440                           ; 1 bytes @ 0x3
  2441                           
  2442  0073                     ??_EUSART_Write:	
  2443                           ; 1 bytes @ 0x3
  2444                           
  2445  0073                     ?_SendBit_1621:	
  2446                           ; 1 bytes @ 0x3
  2447                           
  2448  0073                     ?_SendDataBit_1621:	
  2449                           ; 1 bytes @ 0x3
  2450                           
  2451  0073                     ??_I2C_Start:	
  2452                           ; 1 bytes @ 0x3
  2453                           
  2454  0073                     ??_I2C_Send_Byte:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     ??_I2C_Receive_Byte:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     ??_I2C_Stop:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     ??_Key_Scan:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     ?___bmul:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0073                     ?_FLASH_ReadWord:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0073                     ?_ADC_GetConversion:	
  2473                           ; 2 bytes @ 0x3
  2474                           
  2475  0073                     ?___wmul:	
  2476                           ; 2 bytes @ 0x3
  2477                           
  2478  0073                     ?___awdiv:	
  2479                           ; 2 bytes @ 0x3
  2480                           
  2481  0073                     ?___awmod:	
  2482                           ; 2 bytes @ 0x3
  2483                           
  2484  0073                     ?___lwmod:	
  2485                           ; 2 bytes @ 0x3
  2486                           
  2487  0073                     SPI_Exchange8bit@data:	
  2488                           ; 2 bytes @ 0x3
  2489                           
  2490  0073                     EUSART_Write@txData:	
  2491                           ; 1 bytes @ 0x3
  2492                           
  2493  0073                     SendBit_1621@cnt:	
  2494                           ; 1 bytes @ 0x3
  2495                           
  2496  0073                     SendDataBit_1621@cnt:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0073                     ___bmul@multiplicand:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0073                     FLASH_ReadWord@flashAddr:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0073                     FLASH_EraseBlock@startAddr:	
  2506                           ; 2 bytes @ 0x3
  2507                           
  2508  0073                     ___wmul@multiplier:	
  2509                           ; 2 bytes @ 0x3
  2510                           
  2511  0073                     ___awdiv@divisor:	
  2512                           ; 2 bytes @ 0x3
  2513                           
  2514  0073                     ___awmod@divisor:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0073                     ___lwmod@divisor:	
  2518                           ; 2 bytes @ 0x3
  2519                           
  2520  0073                     memset@c:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523                           
  2524                           ; 2 bytes @ 0x3
  2525  0073                     	ds	1
  2526  0074                     ??_SYSTEM_Initialize:	
  2527  0074                     ?_SPI_Exchange8bitBuffer:	
  2528                           ; 1 bytes @ 0x4
  2529                           
  2530  0074                     ?_maxim_31856_write_register:	
  2531                           ; 1 bytes @ 0x4
  2532                           
  2533  0074                     ??_maxim_31856_read_register:	
  2534                           ; 1 bytes @ 0x4
  2535                           
  2536  0074                     ??_SendBit_1621:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  0074                     ??_SendDataBit_1621:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  0074                     ??___bmul:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545  0074                     SPI_Exchange8bitBuffer@bufLen:	
  2546                           ; 1 bytes @ 0x4
  2547                           
  2548  0074                     maxim_31856_write_register@uch_register_value:	
  2549                           ; 1 bytes @ 0x4
  2550                           
  2551  0074                     I2C_Send_Byte@Data:	
  2552                           ; 1 bytes @ 0x4
  2553                           
  2554  0074                     I2C_Receive_Byte@Data:	
  2555                           ; 1 bytes @ 0x4
  2556                           
  2557                           
  2558                           ; 1 bytes @ 0x4
  2559  0074                     	ds	1
  2560  0075                     ??_FLASH_EraseBlock:	
  2561  0075                     ??_FLASH_ReadWord:	
  2562                           ; 1 bytes @ 0x5
  2563                           
  2564  0075                     ??_ADC_GetConversion:	
  2565                           ; 1 bytes @ 0x5
  2566                           
  2567  0075                     ??_maxim_31856_write_register:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  0075                     SPI_Exchange8bitBuffer@dataOut:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  0075                     FLASH_ReadWord@GIEBitValue:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576  0075                     FLASH_EraseBlock@GIEBitValue:	
  2577                           ; 1 bytes @ 0x5
  2578                           
  2579  0075                     maxim_31856_write_register@uch_register_address:	
  2580                           ; 1 bytes @ 0x5
  2581                           
  2582  0075                     maxim_31856_read_register@uch_register_address:	
  2583                           ; 1 bytes @ 0x5
  2584                           
  2585  0075                     I2C_Send_Byte@i:	
  2586                           ; 1 bytes @ 0x5
  2587                           
  2588  0075                     I2C_Receive_Byte@i:	
  2589                           ; 1 bytes @ 0x5
  2590                           
  2591  0075                     Key_Scan@Key_val:	
  2592                           ; 1 bytes @ 0x5
  2593                           
  2594  0075                     ___bmul@product:	
  2595                           ; 1 bytes @ 0x5
  2596                           
  2597  0075                     ___wmul@multiplicand:	
  2598                           ; 1 bytes @ 0x5
  2599                           
  2600  0075                     ___awdiv@dividend:	
  2601                           ; 2 bytes @ 0x5
  2602                           
  2603  0075                     ___awmod@dividend:	
  2604                           ; 2 bytes @ 0x5
  2605                           
  2606  0075                     ___lwmod@dividend:	
  2607                           ; 2 bytes @ 0x5
  2608                           
  2609  0075                     memset@n:	
  2610                           ; 2 bytes @ 0x5
  2611                           
  2612                           
  2613                           ; 2 bytes @ 0x5
  2614  0075                     	ds	1
  2615  0076                     ??_maxim_31856_init:	
  2616  0076                     ??_FLASH_WriteWord:	
  2617                           ; 1 bytes @ 0x6
  2618                           
  2619  0076                     ?_I2C_Read_Buffer:	
  2620                           ; 1 bytes @ 0x6
  2621                           
  2622  0076                     ?_I2C_Send_Buffer:	
  2623                           ; 1 bytes @ 0x6
  2624                           
  2625  0076                     SPI_Exchange8bitBuffer@dataIn:	
  2626                           ; 1 bytes @ 0x6
  2627                           
  2628  0076                     ADC_GetConversion@channel:	
  2629                           ; 1 bytes @ 0x6
  2630                           
  2631  0076                     maxim_31856_read_register@uch_register_data:	
  2632                           ; 1 bytes @ 0x6
  2633                           
  2634  0076                     SendBit_1621@data:	
  2635                           ; 1 bytes @ 0x6
  2636                           
  2637  0076                     SendDataBit_1621@data:	
  2638                           ; 1 bytes @ 0x6
  2639                           
  2640  0076                     I2C_Read_Buffer@buff:	
  2641                           ; 1 bytes @ 0x6
  2642                           
  2643  0076                     I2C_Send_Buffer@buff:	
  2644                           ; 1 bytes @ 0x6
  2645                           
  2646  0076                     ___bmul@multiplier:	
  2647                           ; 1 bytes @ 0x6
  2648                           
  2649                           
  2650                           ; 1 bytes @ 0x6
  2651  0076                     	ds	1
  2652  0077                     ??_memset:	
  2653  0077                     ??_Write_Flash_head:	
  2654                           ; 1 bytes @ 0x7
  2655                           
  2656  0077                     ??_Write_Flash_finish:	
  2657                           ; 1 bytes @ 0x7
  2658                           
  2659  0077                     ??_maxim_start_conversion:	
  2660                           ; 1 bytes @ 0x7
  2661                           
  2662  0077                     ??_maxim_clear_fault_status:	
  2663                           ; 1 bytes @ 0x7
  2664                           
  2665  0077                     ??___wmul:	
  2666                           ; 1 bytes @ 0x7
  2667                           
  2668  0077                     ??___awdiv:	
  2669                           ; 1 bytes @ 0x7
  2670                           
  2671  0077                     ??___awmod:	
  2672                           ; 1 bytes @ 0x7
  2673                           
  2674  0077                     ??___lwmod:	
  2675                           ; 1 bytes @ 0x7
  2676                           
  2677  0077                     SPI_Exchange8bitBuffer@bytesWritten:	
  2678                           ; 1 bytes @ 0x7
  2679                           
  2680  0077                     SendBit_1621@i:	
  2681                           ; 1 bytes @ 0x7
  2682                           
  2683  0077                     SendDataBit_1621@i:	
  2684                           ; 1 bytes @ 0x7
  2685                           
  2686  0077                     I2C_Read_Buffer@Length:	
  2687                           ; 1 bytes @ 0x7
  2688                           
  2689  0077                     I2C_Send_Buffer@Length:	
  2690                           ; 1 bytes @ 0x7
  2691                           
  2692  0077                     bcd2bin@val:	
  2693                           ; 1 bytes @ 0x7
  2694                           
  2695                           
  2696                           ; 1 bytes @ 0x7
  2697  0077                     	ds	1
  2698  0078                     ??_Serach_Flash_Head:	
  2699  0078                     ??_temperature_process:	
  2700                           ; 1 bytes @ 0x8
  2701                           
  2702                           
  2703                           	psect	cstackBANK0
  2704  0020                     __pcstackBANK0:	
  2705                           ; 1 bytes @ 0x8
  2706                           
  2707  0020                     ?_FLASH_WriteBlock:	
  2708  0020                     ??_SendCmd_1621:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0020                     ?_WriteAll_1621:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0020                     ??_bcd2bin:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0020                     ??_SPI_Exchange8bitBuffer:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0020                     ??_I2C_Read_Buffer:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0020                     ??_I2C_Send_Buffer:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0020                     maxim_start_conversion@uch_conversion_mode:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0020                     ___awdiv@counter:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0020                     ___awmod@counter:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0020                     ___lwmod@counter:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0020                     memset@p1:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0020                     FLASH_WriteBlock@writeAddr:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0020                     WriteAll_1621@p:	
  2745                           ; 2 bytes @ 0x0
  2746                           
  2747  0020                     ___wmul@product:	
  2748                           ; 2 bytes @ 0x0
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x0
  2752  0020                     	ds	1
  2753  0021                     ?___lwdiv:	
  2754  0021                     SendCmd_1621@command:	
  2755                           ; 2 bytes @ 0x1
  2756                           
  2757  0021                     I2C_Read_Buffer@ADD:	
  2758                           ; 1 bytes @ 0x1
  2759                           
  2760  0021                     ___awdiv@sign:	
  2761                           ; 1 bytes @ 0x1
  2762                           
  2763  0021                     ___awmod@sign:	
  2764                           ; 1 bytes @ 0x1
  2765                           
  2766  0021                     memset@p:	
  2767                           ; 1 bytes @ 0x1
  2768                           
  2769  0021                     ___lwdiv@divisor:	
  2770                           ; 1 bytes @ 0x1
  2771                           
  2772                           
  2773                           ; 2 bytes @ 0x1
  2774  0021                     	ds	1
  2775  0022                     FLASH_WriteBlock@flashWordArray:	
  2776  0022                     WriteAll_1621@cnt:	
  2777                           ; 1 bytes @ 0x2
  2778                           
  2779  0022                     I2C_Read_Buffer@Flag:	
  2780                           ; 1 bytes @ 0x2
  2781                           
  2782  0022                     I2C_Send_Buffer@ADD:	
  2783                           ; 1 bytes @ 0x2
  2784                           
  2785  0022                     ___awdiv@quotient:	
  2786                           ; 1 bytes @ 0x2
  2787                           
  2788                           
  2789                           ; 2 bytes @ 0x2
  2790  0022                     	ds	1
  2791  0023                     ??_FLASH_WriteBlock:	
  2792  0023                     ??_WriteAll_1621:	
  2793                           ; 1 bytes @ 0x3
  2794                           
  2795  0023                     ??_Bq32k_Rtc_Read_Time:	
  2796                           ; 1 bytes @ 0x3
  2797                           
  2798  0023                     ?_maxim_31856_read_nregisters:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0023                     maxim_31856_read_nregisters@uch_buff:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0023                     I2C_Send_Buffer@i:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0023                     ___lwdiv@dividend:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810                           
  2811                           ; 2 bytes @ 0x3
  2812  0023                     	ds	1
  2813  0024                     maxim_31856_read_nregisters@uch_nBytes:	
  2814  0024                     WriteAll_1621@addr:	
  2815                           ; 1 bytes @ 0x4
  2816                           
  2817  0024                     I2C_Send_Buffer@Flag:	
  2818                           ; 1 bytes @ 0x4
  2819                           
  2820                           
  2821                           ; 1 bytes @ 0x4
  2822  0024                     	ds	1
  2823  0025                     ??_Bq32k_Time_Init:	
  2824  0025                     ??_maxim_31856_read_nregisters:	
  2825                           ; 1 bytes @ 0x5
  2826                           
  2827  0025                     ??___lwdiv:	
  2828                           ; 1 bytes @ 0x5
  2829                           
  2830  0025                     WriteAll_1621@i:	
  2831                           ; 1 bytes @ 0x5
  2832                           
  2833  0025                     Bq32k_Rtc_Read_Time@temp:	
  2834                           ; 1 bytes @ 0x5
  2835                           
  2836                           
  2837                           ; 10 bytes @ 0x5
  2838  0025                     	ds	1
  2839  0026                     ??_err_Display:	
  2840  0026                     ??_Two_Display:	
  2841                           ; 1 bytes @ 0x6
  2842                           
  2843  0026                     ___lwdiv@counter:	
  2844                           ; 1 bytes @ 0x6
  2845                           
  2846  0026                     FLASH_WriteBlock@blockStartAddr:	
  2847                           ; 1 bytes @ 0x6
  2848                           
  2849                           
  2850                           ; 2 bytes @ 0x6
  2851  0026                     	ds	1
  2852  0027                     maxim_31856_read_nregisters@uch_register_address:	
  2853  0027                     ___lwdiv@quotient:	
  2854                           ; 1 bytes @ 0x7
  2855                           
  2856  0027                     Two_Display@num:	
  2857                           ; 2 bytes @ 0x7
  2858                           
  2859  0027                     err_Display@num:	
  2860                           ; 4 bytes @ 0x7
  2861                           
  2862  0027                     Bq32k_Time_Init@temp:	
  2863                           ; 4 bytes @ 0x7
  2864                           
  2865                           
  2866                           ; 10 bytes @ 0x7
  2867  0027                     	ds	1
  2868  0028                     ??_one_temperature_trans:	
  2869  0028                     FLASH_WriteBlock@GIEBitValue:	
  2870                           ; 1 bytes @ 0x8
  2871                           
  2872                           
  2873                           ; 1 bytes @ 0x8
  2874  0028                     	ds	1
  2875  0029                     ??_Tc_Display:	
  2876  0029                     FLASH_WriteBlock@i:	
  2877                           ; 1 bytes @ 0x9
  2878                           
  2879                           
  2880                           ; 1 bytes @ 0x9
  2881  0029                     	ds	1
  2882  002A                     ?_FLASH_WriteWord:	
  2883  002A                     Tc_Display@count:	
  2884                           ; 1 bytes @ 0xA
  2885                           
  2886  002A                     FLASH_WriteWord@flashAddr:	
  2887                           ; 1 bytes @ 0xA
  2888                           
  2889                           
  2890                           ; 2 bytes @ 0xA
  2891  002A                     	ds	1
  2892  002B                     Two_Display@number:	
  2893  002B                     Tc_Display@data:	
  2894                           ; 1 bytes @ 0xB
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0xB
  2898  002B                     	ds	1
  2899  002C                     FLASH_WriteWord@ramBuf:	
  2900                           
  2901                           ; 1 bytes @ 0xC
  2902  002C                     	ds	1
  2903  002D                     FLASH_WriteWord@word:	
  2904                           
  2905                           ; 2 bytes @ 0xD
  2906  002D                     	ds	2
  2907  002F                     FLASH_WriteWord@offset:	
  2908  002F                     Bq32k_Rtc_Read_Time@p:	
  2909                           ; 1 bytes @ 0xF
  2910                           
  2911                           
  2912                           ; 1 bytes @ 0xF
  2913  002F                     	ds	1
  2914  0030                     ??_time_Display:	
  2915  0030                     FLASH_WriteWord@blockStartAddr:	
  2916                           ; 1 bytes @ 0x10
  2917                           
  2918                           
  2919                           ; 2 bytes @ 0x10
  2920  0030                     	ds	2
  2921  0032                     FLASH_WriteWord@i:	
  2922                           
  2923                           ; 1 bytes @ 0x12
  2924  0032                     	ds	1
  2925  0033                     ?_Save_Write_word:	
  2926  0033                     Serach_Flash_Head@count:	
  2927                           ; 1 bytes @ 0x13
  2928                           
  2929  0033                     Save_Write_word@data:	
  2930                           ; 1 bytes @ 0x13
  2931                           
  2932  0033                     time_Display@num:	
  2933                           ; 2 bytes @ 0x13
  2934                           
  2935                           
  2936                           ; 4 bytes @ 0x13
  2937  0033                     	ds	1
  2938  0034                     Serach_Flash_Head@data:	
  2939                           
  2940                           ; 2 bytes @ 0x14
  2941  0034                     	ds	1
  2942  0035                     ??_Save_Write_word:	
  2943                           
  2944                           ; 1 bytes @ 0x15
  2945  0035                     	ds	1
  2946  0036                     Serach_Flash_Head@i:	
  2947                           
  2948                           ; 2 bytes @ 0x16
  2949  0036                     	ds	1
  2950  0037                     ??_Save_Write_time:	
  2951                           
  2952                           ; 1 bytes @ 0x17
  2953  0037                     	ds	2
  2954  0039                     ??_Calculate_Time:	
  2955                           
  2956                           ; 1 bytes @ 0x19
  2957  0039                     	ds	10
  2958  0043                     Calculate_Time@temp:	
  2959                           
  2960                           ; 4 bytes @ 0x23
  2961  0043                     	ds	4
  2962  0047                     Calculate_Time@temp1:	
  2963                           
  2964                           ; 4 bytes @ 0x27
  2965  0047                     	ds	4
  2966  004B                     Calculate_Time@temp2:	
  2967                           
  2968                           ; 4 bytes @ 0x2B
  2969  004B                     	ds	4
  2970  004F                     ??_Save_process:	
  2971  004F                     ??_tc_temperature_trans:	
  2972                           ; 1 bytes @ 0x2F
  2973                           
  2974                           
  2975                           ; 1 bytes @ 0x2F
  2976  004F                     	ds	2
  2977  0051                     Save_process@var_time:	
  2978                           
  2979                           ; 2 bytes @ 0x31
  2980  0051                     	ds	2
  2981  0053                     tc_temperature_trans@temperature_back:	
  2982                           
  2983                           ; 2 bytes @ 0x33
  2984  0053                     	ds	2
  2985  0055                     tc_temperature_trans@temperature_absolute:	
  2986                           
  2987                           ; 2 bytes @ 0x35
  2988  0055                     	ds	2
  2989  0057                     tc_temperature_trans@var_time:	
  2990                           
  2991                           ; 2 bytes @ 0x37
  2992  0057                     	ds	2
  2993  0059                     tc_temperature_trans@temperature_temp:	
  2994                           
  2995                           ; 2 bytes @ 0x39
  2996  0059                     	ds	2
  2997  005B                     ??_temperature_display:	
  2998                           
  2999                           ; 1 bytes @ 0x3B
  3000  005B                     	ds	1
  3001  005C                     ??_Key_Process:	
  3002                           
  3003                           ; 1 bytes @ 0x3C
  3004  005C                     	ds	1
  3005  005D                     Key_Process@data_temp:	
  3006                           
  3007                           ; 2 bytes @ 0x3D
  3008  005D                     	ds	2
  3009  005F                     Key_Process@gKeyValue:	
  3010                           
  3011                           ; 1 bytes @ 0x3F
  3012  005F                     	ds	1
  3013  0060                     Key_Process@i:	
  3014                           
  3015                           ; 2 bytes @ 0x40
  3016  0060                     	ds	2
  3017  0062                     ??_main:	
  3018                           
  3019                           ; 1 bytes @ 0x42
  3020  0062                     	ds	3
  3021                           
  3022                           	psect	maintext
  3023  0471                     __pmaintext:	
  3024 ;;
  3025 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3026 ;;
  3027 ;; *************** function _main *****************
  3028 ;; Defined at:
  3029 ;;		line 65 in file "main.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  bat_data        2    3[BANK2 ] unsigned int 
  3034 ;;  data_temp       2    0[BANK2 ] unsigned int 
  3035 ;;  i               1    2[BANK2 ] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : B1F/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Totals:         0       3       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;Total ram usage:        8 bytes
  3050 ;; Hardware stack levels required when called:   13
  3051 ;; This function calls:
  3052 ;;		_ADC_GetConversion
  3053 ;;		_Bq32k_Time_Init
  3054 ;;		_Key_Process
  3055 ;;		_SYSTEM_Initialize
  3056 ;;		_Save_process
  3057 ;;		_SendCmd_1621
  3058 ;;		_Serach_Flash_Head
  3059 ;;		_WriteAll_1621
  3060 ;;		_maxim_31856_init
  3061 ;;		_temperature_process
  3062 ;; This function is called by:
  3063 ;;		Startup code after reset
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _main
  3069  0471                     _main:	
  3070                           
  3071                           ;main.c: 67: unsigned char i=0;
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3075  0471  0022               	movlb	2	; select bank2
  3076  0472  01E2               	clrf	main@i^(0+256)
  3077                           
  3078                           ;main.c: 69: unsigned int bat_data = 0;
  3079  0473  01E3               	clrf	main@bat_data^(0+256)
  3080  0474  01E4               	clrf	(main@bat_data+1)^(0+256)
  3081                           
  3082                           ;main.c: 70: unsigned int data_temp = 0;
  3083  0475  01E0               	clrf	main@data_temp^(0+256)
  3084  0476  01E1               	clrf	(main@data_temp+1)^(0+256)
  3085                           
  3086                           ;main.c: 72: SYSTEM_Initialize();
  3087  0477  3188  20D2  3184   	fcall	_SYSTEM_Initialize
  3088                           
  3089                           ;main.c: 73: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3090  047A  303D               	movlw	61
  3091  047B  0020               	movlb	0	; select bank0
  3092  047C  00E4               	movwf	??_main+2
  3093  047D  30E1               	movlw	225
  3094  047E  00E3               	movwf	??_main+1
  3095  047F  307A               	movlw	122
  3096  0480  00E2               	movwf	??_main
  3097  0481                     u5097:	
  3098  0481  0BE2               	decfsz	??_main,f
  3099  0482  2C81               	goto	u5097
  3100  0483  0BE3               	decfsz	??_main+1,f
  3101  0484  2C81               	goto	u5097
  3102  0485  0BE4               	decfsz	??_main+2,f
  3103  0486  2C81               	goto	u5097
  3104  0487  3200               	nop2
  3105                           
  3106                           ;main.c: 74: if(RB5 == 0 ) do { LATA2 = 1; } while(0);
  3107  0488  0020               	movlb	0	; select bank0
  3108  0489  1A8D               	btfsc	13,5	;volatile
  3109  048A  2C8E               	goto	l370
  3110  048B  0022               	movlb	2	; select bank2
  3111  048C  150C               	bsf	12,2	;volatile
  3112  048D  2C90               	goto	l372
  3113  048E                     l370:	
  3114                           ;main.c: 75: else do { LATA2 = 0; } while(0);
  3115                           
  3116  048E  0022               	movlb	2	; select bank2
  3117  048F  110C               	bcf	12,2	;volatile
  3118  0490                     l372:	
  3119                           ;main.c: 76: do { LATA3 = 0; } while(0);
  3120                           
  3121  0490  118C               	bcf	12,3	;volatile
  3122                           
  3123                           ;main.c: 79: bat_data = 0;
  3124  0491  01E3               	clrf	main@bat_data^(0+256)
  3125  0492  01E4               	clrf	(main@bat_data+1)^(0+256)
  3126                           
  3127                           ;main.c: 80: for(i=0;i<16;i++)
  3128  0493  01E2               	clrf	main@i^(0+256)
  3129  0494  3010               	movlw	16
  3130  0495  0262               	subwf	main@i^(0+256),w
  3131  0496  1803               	btfsc	3,0
  3132  0497  2CAD               	goto	l5332
  3133  0498                     l5326:	
  3134                           
  3135                           ;main.c: 81: {
  3136                           ;main.c: 82: bat_data = bat_data + ADC_GetConversion(ADC);
  3137  0498  300B               	movlw	11
  3138  0499  3189  2162  3184   	fcall	_ADC_GetConversion
  3139  049C  0022               	movlb	2	; select bank2
  3140  049D  0863               	movf	main@bat_data^(0+256),w
  3141  049E  0773               	addwf	?_ADC_GetConversion,w
  3142  049F  00E3               	movwf	main@bat_data^(0+256)
  3143  04A0  0864               	movf	(main@bat_data+1)^(0+256),w
  3144  04A1  3D74               	addwfc	?_ADC_GetConversion+1,w
  3145  04A2  00E4               	movwf	(main@bat_data+1)^(0+256)
  3146  04A3  3001               	movlw	1
  3147  04A4  0020               	movlb	0	; select bank0
  3148  04A5  00E2               	movwf	??_main
  3149  04A6  0862               	movf	??_main,w
  3150  04A7  0022               	movlb	2	; select bank2
  3151  04A8  07E2               	addwf	main@i^(0+256),f
  3152  04A9  3010               	movlw	16
  3153  04AA  0262               	subwf	main@i^(0+256),w
  3154  04AB  1C03               	skipc
  3155  04AC  2C98               	goto	l5326
  3156  04AD                     l5332:	
  3157                           
  3158                           ;main.c: 83: }
  3159                           ;main.c: 84: bat_data = bat_data>>4;
  3160  04AD  0E63               	swapf	main@bat_data^(0+256),w
  3161  04AE  390F               	andlw	15
  3162  04AF  00E3               	movwf	main@bat_data^(0+256)
  3163  04B0  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3164  04B1  39F0               	andlw	240
  3165  04B2  04E3               	iorwf	main@bat_data^(0+256),f
  3166  04B3  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3167  04B4  390F               	andlw	15
  3168  04B5  00E4               	movwf	(main@bat_data^(0+256)+1)
  3169                           
  3170                           ;main.c: 85: if( bat_data < 800)
  3171  04B6  3003               	movlw	3
  3172  04B7  0264               	subwf	(main@bat_data+1)^(0+256),w
  3173  04B8  3020               	movlw	32
  3174  04B9  1903               	skipnz
  3175  04BA  0263               	subwf	main@bat_data^(0+256),w
  3176  04BB  1803               	skipnc
  3177  04BC  2CBF               	goto	l5336
  3178                           
  3179                           ;main.c: 86: {
  3180                           ;main.c: 87: do { LATA2 = 0; } while(0);
  3181  04BD  110C               	bcf	12,2	;volatile
  3182  04BE                     l379:	
  3183                           ;main.c: 88: while(1);
  3184                           
  3185  04BE  2CBE               	goto	l379
  3186  04BF                     l5336:	
  3187                           
  3188                           ;main.c: 89: }
  3189                           ;main.c: 90: i = 0 ;
  3190  04BF  0022               	movlb	2	; select bank2
  3191  04C0  01E2               	clrf	main@i^(0+256)
  3192                           
  3193                           ;main.c: 91: bat_data = 0 ;
  3194  04C1  01E3               	clrf	main@bat_data^(0+256)
  3195  04C2  01E4               	clrf	(main@bat_data+1)^(0+256)
  3196                           
  3197                           ;main.c: 94: maxim_31856_init();
  3198  04C3  318F  279C  3184   	fcall	_maxim_31856_init
  3199                           
  3200                           ;main.c: 95: do { TRISB3 = 1; } while(0);
  3201  04C6  0021               	movlb	1	; select bank1
  3202  04C7  158D               	bsf	13,3	;volatile
  3203                           
  3204                           ;main.c: 96: Bq32k_Time_Init();
  3205  04C8  3189  21B1  3184   	fcall	_Bq32k_Time_Init
  3206                           
  3207                           ;main.c: 97: SendCmd_1621(0x52);
  3208  04CB  3052               	movlw	82
  3209  04CC  3188  20E7  3184   	fcall	_SendCmd_1621
  3210                           
  3211                           ;main.c: 98: SendCmd_1621(0X28);
  3212  04CF  3028               	movlw	40
  3213  04D0  3188  20E7  3184   	fcall	_SendCmd_1621
  3214                           
  3215                           ;main.c: 99: SendCmd_1621(0x02);
  3216  04D3  3002               	movlw	2
  3217  04D4  3188  20E7  3184   	fcall	_SendCmd_1621
  3218                           
  3219                           ;main.c: 100: SendCmd_1621(0x06);
  3220  04D7  3006               	movlw	6
  3221  04D8  3188  20E7  3184   	fcall	_SendCmd_1621
  3222                           
  3223                           ;main.c: 102: WriteAll_1621(0,Dis_TAB+17,4);
  3224  04DB  3011               	movlw	low ((_Dis_TAB| (0+32768)+17))
  3225  04DC  0020               	movlb	0	; select bank0
  3226  04DD  00A0               	movwf	WriteAll_1621@p
  3227  04DE  3090               	movlw	high ((_Dis_TAB| (0+32768)+17))
  3228  04DF  00A1               	movwf	WriteAll_1621@p+1
  3229  04E0  3004               	movlw	4
  3230  04E1  00E2               	movwf	??_main
  3231  04E2  0862               	movf	??_main,w
  3232  04E3  00A2               	movwf	WriteAll_1621@cnt
  3233  04E4  3000               	movlw	0
  3234  04E5  318C  2443  3184   	fcall	_WriteAll_1621
  3235                           
  3236                           ;main.c: 104: time_count = 0;
  3237  04E8  0020               	movlb	0	; select bank0
  3238  04E9  01ED               	clrf	_time_count
  3239                           
  3240                           ;main.c: 105: Record_flag = 0;
  3241  04EA  01EB               	clrf	_Record_flag
  3242                           
  3243                           ;main.c: 106: Cur_temperature_time_ch1 = 0;
  3244  04EB  0021               	movlb	1	; select bank1
  3245  04EC  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3246                           
  3247                           ;main.c: 107: Cur_temperature_time_ch2 = 0;
  3248  04ED  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3249                           
  3250                           ;main.c: 108: CH1_temperature = 0;
  3251  04EE  0020               	movlb	0	; select bank0
  3252  04EF  01E9               	clrf	_CH1_temperature
  3253  04F0  01EA               	clrf	_CH1_temperature+1
  3254                           
  3255                           ;main.c: 109: CH2_temperature = 0;
  3256  04F1  01F8               	clrf	_CH2_temperature
  3257  04F2  01F9               	clrf	_CH2_temperature+1
  3258                           
  3259                           ;main.c: 110: CH1_state = 0;
  3260  04F3  0021               	movlb	1	; select bank1
  3261  04F4  01B4               	clrf	_CH1_state^(0+128)
  3262                           
  3263                           ;main.c: 111: CH2_state = 0;
  3264  04F5  01B5               	clrf	_CH2_state^(0+128)
  3265                           
  3266                           ;main.c: 112: bat_data = 0;
  3267  04F6  0022               	movlb	2	; select bank2
  3268  04F7  01E3               	clrf	main@bat_data^(0+256)
  3269  04F8  01E4               	clrf	(main@bat_data+1)^(0+256)
  3270                           
  3271                           ;main.c: 113: Cur_Save_Index = 0x2000;
  3272  04F9  3000               	movlw	0
  3273  04FA  0021               	movlb	1	; select bank1
  3274  04FB  00AE               	movwf	_Cur_Save_Index^(0+128)
  3275  04FC  3020               	movlw	32
  3276  04FD  00AF               	movwf	(_Cur_Save_Index^(0+128)+1)
  3277                           
  3278                           ;main.c: 114: Serach_Flash_Head();
  3279  04FE  318C  2410  3184   	fcall	_Serach_Flash_Head
  3280                           
  3281                           ;main.c: 139: (INTCONbits.GIE = 1);
  3282  0501  178B               	bsf	11,7	;volatile
  3283                           
  3284                           ;main.c: 142: (INTCONbits.PEIE = 1);
  3285  0502  170B               	bsf	11,6	;volatile
  3286  0503                     l5380:	
  3287                           ;main.c: 150: while (1)
  3288                           
  3289                           
  3290                           ;main.c: 151: {
  3291                           ;main.c: 156: bat_data = bat_data + ADC_GetConversion(ADC);
  3292  0503  300B               	movlw	11
  3293  0504  3189  2162  3184   	fcall	_ADC_GetConversion
  3294  0507  0022               	movlb	2	; select bank2
  3295  0508  0863               	movf	main@bat_data^(0+256),w
  3296  0509  0773               	addwf	?_ADC_GetConversion,w
  3297  050A  00E3               	movwf	main@bat_data^(0+256)
  3298  050B  0864               	movf	(main@bat_data+1)^(0+256),w
  3299  050C  3D74               	addwfc	?_ADC_GetConversion+1,w
  3300  050D  00E4               	movwf	(main@bat_data+1)^(0+256)
  3301                           
  3302                           ;main.c: 157: i++;
  3303  050E  3001               	movlw	1
  3304  050F  0020               	movlb	0	; select bank0
  3305  0510  00E2               	movwf	??_main
  3306  0511  0862               	movf	??_main,w
  3307  0512  0022               	movlb	2	; select bank2
  3308  0513  07E2               	addwf	main@i^(0+256),f
  3309                           
  3310                           ;main.c: 158: if(i == 16)
  3311  0514  3010               	movlw	16
  3312  0515  0662               	xorwf	main@i^(0+256),w
  3313  0516  1D03               	btfss	3,2
  3314  0517  2D2E               	goto	l5394
  3315                           
  3316                           ;main.c: 159: {
  3317                           ;main.c: 160: i = 0;
  3318  0518  01E2               	clrf	main@i^(0+256)
  3319                           
  3320                           ;main.c: 161: bat_data = bat_data>>4;
  3321  0519  0E63               	swapf	main@bat_data^(0+256),w
  3322  051A  390F               	andlw	15
  3323  051B  00E3               	movwf	main@bat_data^(0+256)
  3324  051C  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3325  051D  39F0               	andlw	240
  3326  051E  04E3               	iorwf	main@bat_data^(0+256),f
  3327  051F  0E64               	swapf	(main@bat_data+1)^(0+256),w
  3328  0520  390F               	andlw	15
  3329  0521  00E4               	movwf	(main@bat_data^(0+256)+1)
  3330                           
  3331                           ;main.c: 162: if( bat_data < 800)
  3332  0522  3003               	movlw	3
  3333  0523  0264               	subwf	(main@bat_data+1)^(0+256),w
  3334  0524  3020               	movlw	32
  3335  0525  1903               	skipnz
  3336  0526  0263               	subwf	main@bat_data^(0+256),w
  3337  0527  1803               	skipnc
  3338  0528  2D2B               	goto	l5392
  3339                           
  3340                           ;main.c: 163: {
  3341                           ;main.c: 164: do { LATA2 = 0; } while(0);
  3342  0529  110C               	bcf	12,2	;volatile
  3343  052A                     l389:	
  3344                           ;main.c: 165: while(1);
  3345                           
  3346  052A  2D2A               	goto	l389
  3347  052B                     l5392:	
  3348                           
  3349                           ;main.c: 166: }
  3350                           ;main.c: 167: bat_data = 0;
  3351  052B  0022               	movlb	2	; select bank2
  3352  052C  01E3               	clrf	main@bat_data^(0+256)
  3353  052D  01E4               	clrf	(main@bat_data+1)^(0+256)
  3354  052E                     l5394:	
  3355                           
  3356                           ;main.c: 168: }
  3357                           ;main.c: 173: temperature_process();
  3358  052E  318B  23DD  3184   	fcall	_temperature_process
  3359                           
  3360                           ;main.c: 174: Key_Process();
  3361  0531  3185  2538  3184   	fcall	_Key_Process
  3362                           
  3363                           ;main.c: 175: Save_process();
  3364  0534  318E  26D5  3184   	fcall	_Save_process
  3365  0537  2D03               	goto	l5380
  3366  0538                     __end_of_main:	
  3367                           
  3368                           	psect	text1
  3369  0F9C                     __ptext1:	
  3370 ;; *************** function _maxim_31856_init *****************
  3371 ;; Defined at:
  3372 ;;		line 64 in file "mcc_generated_files/max31856.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    5
  3393 ;; This function calls:
  3394 ;;		_maxim_31856_write_register
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _maxim_31856_init
  3402  0F9C                     _maxim_31856_init:	
  3403                           
  3404                           ;max31856.c: 67: uch_cr0= (uint8_t) 0x10|(uint8_t) 0x01| (uint8_t) 0x04;
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _maxim_31856_init: [wreg+status,2+status,0+pclath+cstack]
  3408  0F9C  3015               	movlw	21
  3409  0F9D  00F6               	movwf	??_maxim_31856_init
  3410  0F9E  0876               	movf	??_maxim_31856_init,w
  3411  0F9F  00FA               	movwf	_uch_cr0
  3412                           
  3413                           ;max31856.c: 69: uch_cr1&= (uint8_t) 0x0F ;
  3414  0FA0  300F               	movlw	15
  3415  0FA1  00F6               	movwf	??_maxim_31856_init
  3416  0FA2  0876               	movf	??_maxim_31856_init,w
  3417  0FA3  0021               	movlb	1	; select bank1
  3418  0FA4  05BE               	andwf	_uch_cr1^(0+128),f
  3419                           
  3420                           ;max31856.c: 70: uch_cr1|=(uint8_t) 0x07;
  3421  0FA5  3007               	movlw	7
  3422  0FA6  00F6               	movwf	??_maxim_31856_init
  3423  0FA7  0876               	movf	??_maxim_31856_init,w
  3424  0FA8  04BE               	iorwf	_uch_cr1^(0+128),f
  3425                           
  3426                           ;max31856.c: 72: uch_mask=(uint8_t)0x00 ;
  3427  0FA9  01C2               	clrf	_uch_mask^(0+128)
  3428                           
  3429                           ;max31856.c: 74: maxim_31856_write_register(0x80, uch_cr0);
  3430  0FAA  087A               	movf	_uch_cr0,w
  3431  0FAB  00F6               	movwf	??_maxim_31856_init
  3432  0FAC  0876               	movf	??_maxim_31856_init,w
  3433  0FAD  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3434  0FAE  3080               	movlw	128
  3435  0FAF  3188  206E  318F   	fcall	_maxim_31856_write_register
  3436                           
  3437                           ;max31856.c: 75: maxim_31856_write_register(0x81, uch_cr1);
  3438  0FB2  0021               	movlb	1	; select bank1
  3439  0FB3  083E               	movf	_uch_cr1^(0+128),w
  3440  0FB4  00F6               	movwf	??_maxim_31856_init
  3441  0FB5  0876               	movf	??_maxim_31856_init,w
  3442  0FB6  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3443  0FB7  3081               	movlw	129
  3444  0FB8  3188  206E  318F   	fcall	_maxim_31856_write_register
  3445                           
  3446                           ;max31856.c: 76: maxim_31856_write_register(0x82,uch_mask);
  3447  0FBB  0021               	movlb	1	; select bank1
  3448  0FBC  0842               	movf	_uch_mask^(0+128),w
  3449  0FBD  00F6               	movwf	??_maxim_31856_init
  3450  0FBE  0876               	movf	??_maxim_31856_init,w
  3451  0FBF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3452  0FC0  3082               	movlw	130
  3453  0FC1  3188  206E  318F   	fcall	_maxim_31856_write_register
  3454                           
  3455                           ;max31856.c: 79: maxim_31856_write_register(0x83,0x7F);
  3456  0FC4  307F               	movlw	127
  3457  0FC5  00F6               	movwf	??_maxim_31856_init
  3458  0FC6  0876               	movf	??_maxim_31856_init,w
  3459  0FC7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3460  0FC8  3083               	movlw	131
  3461  0FC9  3188  206E  318F   	fcall	_maxim_31856_write_register
  3462                           
  3463                           ;max31856.c: 80: maxim_31856_write_register(0x84,0xC0);
  3464  0FCC  30C0               	movlw	192
  3465  0FCD  00F6               	movwf	??_maxim_31856_init
  3466  0FCE  0876               	movf	??_maxim_31856_init,w
  3467  0FCF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3468  0FD0  3084               	movlw	132
  3469  0FD1  3188  206E  318F   	fcall	_maxim_31856_write_register
  3470                           
  3471                           ;max31856.c: 82: maxim_31856_write_register(0x85,0x7F);
  3472  0FD4  307F               	movlw	127
  3473  0FD5  00F6               	movwf	??_maxim_31856_init
  3474  0FD6  0876               	movf	??_maxim_31856_init,w
  3475  0FD7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3476  0FD8  3085               	movlw	133
  3477  0FD9  3188  206E  318F   	fcall	_maxim_31856_write_register
  3478                           
  3479                           ;max31856.c: 83: maxim_31856_write_register(0x86,0xFF);
  3480  0FDC  30FF               	movlw	255
  3481  0FDD  00F6               	movwf	??_maxim_31856_init
  3482  0FDE  0876               	movf	??_maxim_31856_init,w
  3483  0FDF  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3484  0FE0  3086               	movlw	134
  3485  0FE1  3188  206E  318F   	fcall	_maxim_31856_write_register
  3486                           
  3487                           ;max31856.c: 84: maxim_31856_write_register(0x87,0x80);
  3488  0FE4  3080               	movlw	128
  3489  0FE5  00F6               	movwf	??_maxim_31856_init
  3490  0FE6  0876               	movf	??_maxim_31856_init,w
  3491  0FE7  00F4               	movwf	maxim_31856_write_register@uch_register_value
  3492  0FE8  3087               	movlw	135
  3493  0FE9  3188  206E  318F   	fcall	_maxim_31856_write_register
  3494                           
  3495                           ;max31856.c: 85: maxim_31856_write_register(0x88,0x00);
  3496  0FEC  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3497  0FED  3088               	movlw	136
  3498  0FEE  3188  206E  318F   	fcall	_maxim_31856_write_register
  3499                           
  3500                           ;max31856.c: 87: maxim_31856_write_register(0x89,0x00);
  3501  0FF1  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3502  0FF2  3089               	movlw	137
  3503  0FF3  3188  206E  318F   	fcall	_maxim_31856_write_register
  3504                           
  3505                           ;max31856.c: 91: maxim_31856_write_register(0x8A,0x00);
  3506  0FF6  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3507  0FF7  308A               	movlw	138
  3508  0FF8  3188  206E  318F   	fcall	_maxim_31856_write_register
  3509                           
  3510                           ;max31856.c: 92: maxim_31856_write_register(0x8B,0x00);
  3511  0FFB  01F4               	clrf	maxim_31856_write_register@uch_register_value
  3512  0FFC  308B               	movlw	139
  3513  0FFD  3188  206E         	fcall	_maxim_31856_write_register
  3514  0FFF  0008               	return
  3515  1000                     __end_of_maxim_31856_init:	
  3516                           
  3517                           	psect	text2
  3518  0C10                     __ptext2:	
  3519 ;; *************** function _Serach_Flash_Head *****************
  3520 ;; Defined at:
  3521 ;;		line 42 in file "mcc_generated_files/save.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  i               2   22[BANK0 ] unsigned int 
  3526 ;;  data            2   20[BANK0 ] unsigned int 
  3527 ;;  count           1   19[BANK0 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3541 ;;Total ram usage:        5 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    7
  3544 ;; This function calls:
  3545 ;;		_FLASH_ReadWord
  3546 ;;		_Write_Flash_finish
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           
  3553                           ;psect for function _Serach_Flash_Head
  3554  0C10                     _Serach_Flash_Head:	
  3555                           
  3556                           ;save.c: 44: unsigned int i=0;
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _Serach_Flash_Head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3560  0C10  0020               	movlb	0	; select bank0
  3561  0C11  01B6               	clrf	Serach_Flash_Head@i
  3562  0C12  01B7               	clrf	Serach_Flash_Head@i+1
  3563                           
  3564                           ;save.c: 45: unsigned int data=0;
  3565  0C13  01B4               	clrf	Serach_Flash_Head@data
  3566  0C14  01B5               	clrf	Serach_Flash_Head@data+1
  3567                           
  3568                           ;save.c: 46: unsigned char count =0;
  3569  0C15  01B3               	clrf	Serach_Flash_Head@count
  3570                           
  3571                           ;save.c: 47: for(i = 0x2000; i<16384;i++ )
  3572  0C16  3000               	movlw	0
  3573  0C17  00B6               	movwf	Serach_Flash_Head@i
  3574  0C18  3020               	movlw	32
  3575  0C19  00B7               	movwf	Serach_Flash_Head@i+1
  3576  0C1A                     L1:	
  3577  0C1A  3040               	movlw	64
  3578  0C1B  0237               	subwf	Serach_Flash_Head@i+1,w
  3579  0C1C  3000               	movlw	0
  3580  0C1D  1903               	skipnz
  3581  0C1E  0236               	subwf	Serach_Flash_Head@i,w
  3582  0C1F  1803               	btfsc	3,0
  3583  0C20  0008               	return
  3584                           
  3585                           ;save.c: 48: {
  3586                           ;save.c: 49: data = FLASH_ReadWord(i);
  3587  0C21  0837               	movf	Serach_Flash_Head@i+1,w
  3588  0C22  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  3589  0C23  0836               	movf	Serach_Flash_Head@i,w
  3590  0C24  00F3               	movwf	FLASH_ReadWord@flashAddr
  3591  0C25  3189  2149  318C   	fcall	_FLASH_ReadWord
  3592  0C28  0874               	movf	?_FLASH_ReadWord+1,w
  3593  0C29  0020               	movlb	0	; select bank0
  3594  0C2A  00B5               	movwf	Serach_Flash_Head@data+1
  3595  0C2B  0873               	movf	?_FLASH_ReadWord,w
  3596  0C2C  00B4               	movwf	Serach_Flash_Head@data
  3597                           
  3598                           ;save.c: 77: if( data == 0x3fff)
  3599  0C2D  0A34               	incf	Serach_Flash_Head@data,w
  3600  0C2E  303F               	movlw	63
  3601  0C2F  1903               	skipnz
  3602  0C30  0635               	xorwf	Serach_Flash_Head@data+1,w
  3603  0C31  1D03               	btfss	3,2
  3604  0C32  2C3D               	goto	l5210
  3605                           
  3606                           ;save.c: 78: {
  3607                           ;save.c: 79: Cur_Save_Index = i;
  3608  0C33  0837               	movf	Serach_Flash_Head@i+1,w
  3609  0C34  0021               	movlb	1	; select bank1
  3610  0C35  00AF               	movwf	(_Cur_Save_Index+1)^(0+128)
  3611  0C36  0020               	movlb	0	; select bank0
  3612  0C37  0836               	movf	Serach_Flash_Head@i,w
  3613  0C38  0021               	movlb	1	; select bank1
  3614  0C39  00AE               	movwf	_Cur_Save_Index^(0+128)
  3615                           
  3616                           ;save.c: 80: Write_Flash_finish();
  3617  0C3A  318B  234E         	fcall	_Write_Flash_finish
  3618                           
  3619                           ;save.c: 81: break;
  3620  0C3C  0008               	return
  3621  0C3D                     l5210:	
  3622  0C3D  3001               	movlw	1
  3623  0C3E  0020               	movlb	0	; select bank0
  3624  0C3F  07B6               	addwf	Serach_Flash_Head@i,f
  3625  0C40  3000               	movlw	0
  3626  0C41  3DB7               	addwfc	Serach_Flash_Head@i+1,f
  3627  0C42  2C1A               	goto	L1
  3628  0C43                     __end_of_Serach_Flash_Head:	
  3629                           
  3630                           	psect	text3
  3631  0ED5                     __ptext3:	
  3632 ;; *************** function _Save_process *****************
  3633 ;; Defined at:
  3634 ;;		line 121 in file "mcc_generated_files/save.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  var_time        2   49[BANK0 ] unsigned int 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;Total ram usage:        4 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    9
  3655 ;; This function calls:
  3656 ;;		_Calculate_Time
  3657 ;;		_Save_Write_word
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _Save_process
  3665  0ED5                     _Save_process:	
  3666                           
  3667                           ;save.c: 123: unsigned int var_time=0;
  3668                           
  3669                           ;incstack = 0
  3670                           ; Regs used in _Save_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3671  0ED5  0020               	movlb	0	; select bank0
  3672  0ED6  01D1               	clrf	Save_process@var_time
  3673  0ED7  01D2               	clrf	Save_process@var_time+1
  3674                           
  3675                           ;save.c: 124: if( time_count == 1 && Record_flag == 1 )
  3676  0ED8  036D               	decf	_time_count,w
  3677  0ED9  1D03               	btfss	3,2
  3678  0EDA  2F07               	goto	l5294
  3679  0EDB  036B               	decf	_Record_flag,w
  3680  0EDC  1D03               	btfss	3,2
  3681  0EDD  2F07               	goto	l5294
  3682                           
  3683                           ;save.c: 125: {
  3684                           ;save.c: 126: if(Cur_temperature_time_ch1 > 120)
  3685  0EDE  3079               	movlw	121
  3686  0EDF  0021               	movlb	1	; select bank1
  3687  0EE0  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
  3688  0EE1  1C03               	skipc
  3689  0EE2  0008               	return
  3690                           
  3691                           ;save.c: 127: {
  3692                           ;save.c: 128: var_time = Calculate_Time();
  3693  0EE3  3182  220B  318E   	fcall	_Calculate_Time
  3694  0EE6  0020               	movlb	0	; select bank0
  3695  0EE7  00CF               	movwf	??_Save_process
  3696  0EE8  01D0               	clrf	??_Save_process+1
  3697  0EE9  084F               	movf	??_Save_process,w
  3698  0EEA  00D1               	movwf	Save_process@var_time
  3699  0EEB  0850               	movf	??_Save_process+1,w
  3700  0EEC  00D2               	movwf	Save_process@var_time+1
  3701                           
  3702                           ;save.c: 129: var_time |= 0x100;
  3703  0EED  1452               	bsf	Save_process@var_time+1,0
  3704                           
  3705                           ;save.c: 130: if(CH1_state == 1) var_time |= 0x400;
  3706  0EEE  0021               	movlb	1	; select bank1
  3707  0EEF  0334               	decf	_CH1_state^(0+128),w
  3708  0EF0  1D03               	btfss	3,2
  3709  0EF1  2EF4               	goto	l999
  3710  0EF2  0020               	movlb	0	; select bank0
  3711  0EF3  1552               	bsf	Save_process@var_time+1,2
  3712  0EF4                     l999:	
  3713                           
  3714                           ;save.c: 132: var_time |= 0x1000;
  3715  0EF4  0020               	movlb	0	; select bank0
  3716  0EF5  1652               	bsf	Save_process@var_time+1,4
  3717                           
  3718                           ;save.c: 134: Save_Write_word(var_time);
  3719  0EF6  0852               	movf	Save_process@var_time+1,w
  3720  0EF7  00B4               	movwf	Save_Write_word@data+1
  3721  0EF8  0851               	movf	Save_process@var_time,w
  3722  0EF9  00B3               	movwf	Save_Write_word@data
  3723  0EFA  318C  24AD  318E   	fcall	_Save_Write_word
  3724                           
  3725                           ;save.c: 135: Save_Write_word(CH1_temperature);
  3726  0EFD  0020               	movlb	0	; select bank0
  3727  0EFE  086A               	movf	_CH1_temperature+1,w
  3728  0EFF  00B4               	movwf	Save_Write_word@data+1
  3729  0F00  0869               	movf	_CH1_temperature,w
  3730  0F01  00B3               	movwf	Save_Write_word@data
  3731  0F02  318C  24AD         	fcall	_Save_Write_word
  3732                           
  3733                           ;save.c: 137: Cur_temperature_time_ch1 = 0;
  3734  0F04  0021               	movlb	1	; select bank1
  3735  0F05  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  3736                           
  3737                           ;save.c: 138: }
  3738                           ;save.c: 139: }
  3739  0F06  0008               	return
  3740  0F07                     l5294:	
  3741                           
  3742                           ;save.c: 140: else if(time_count == 3 && Record_flag == 1)
  3743  0F07  3003               	movlw	3
  3744  0F08  0020               	movlb	0	; select bank0
  3745  0F09  066D               	xorwf	_time_count,w
  3746  0F0A  1D03               	btfss	3,2
  3747  0F0B  0008               	return
  3748  0F0C  036B               	decf	_Record_flag,w
  3749  0F0D  1D03               	btfss	3,2
  3750  0F0E  0008               	return
  3751                           
  3752                           ;save.c: 141: {
  3753                           ;save.c: 142: if(Cur_temperature_time_ch2 > 120)
  3754  0F0F  3079               	movlw	121
  3755  0F10  0021               	movlb	1	; select bank1
  3756  0F11  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
  3757  0F12  1C03               	skipc
  3758  0F13  0008               	return
  3759                           
  3760                           ;save.c: 143: {
  3761                           ;save.c: 144: var_time = Calculate_Time();
  3762  0F14  3182  220B  318E   	fcall	_Calculate_Time
  3763  0F17  0020               	movlb	0	; select bank0
  3764  0F18  00CF               	movwf	??_Save_process
  3765  0F19  01D0               	clrf	??_Save_process+1
  3766  0F1A  084F               	movf	??_Save_process,w
  3767  0F1B  00D1               	movwf	Save_process@var_time
  3768  0F1C  0850               	movf	??_Save_process+1,w
  3769  0F1D  00D2               	movwf	Save_process@var_time+1
  3770                           
  3771                           ;save.c: 145: var_time |= 0x200;
  3772  0F1E  14D2               	bsf	Save_process@var_time+1,1
  3773                           
  3774                           ;save.c: 146: if(CH2_state == 1) var_time |= 0x800;
  3775  0F1F  0021               	movlb	1	; select bank1
  3776  0F20  0335               	decf	_CH2_state^(0+128),w
  3777  0F21  1D03               	btfss	3,2
  3778  0F22  2F25               	goto	l1003
  3779  0F23  0020               	movlb	0	; select bank0
  3780  0F24  15D2               	bsf	Save_process@var_time+1,3
  3781  0F25                     l1003:	
  3782                           
  3783                           ;save.c: 148: var_time |= 0x1000;
  3784  0F25  0020               	movlb	0	; select bank0
  3785  0F26  1652               	bsf	Save_process@var_time+1,4
  3786                           
  3787                           ;save.c: 150: Save_Write_word(var_time);
  3788  0F27  0852               	movf	Save_process@var_time+1,w
  3789  0F28  00B4               	movwf	Save_Write_word@data+1
  3790  0F29  0851               	movf	Save_process@var_time,w
  3791  0F2A  00B3               	movwf	Save_Write_word@data
  3792  0F2B  318C  24AD  318E   	fcall	_Save_Write_word
  3793                           
  3794                           ;save.c: 151: Save_Write_word(CH2_temperature);
  3795  0F2E  0879               	movf	_CH2_temperature+1,w
  3796  0F2F  0020               	movlb	0	; select bank0
  3797  0F30  00B4               	movwf	Save_Write_word@data+1
  3798  0F31  0878               	movf	_CH2_temperature,w
  3799  0F32  00B3               	movwf	Save_Write_word@data
  3800  0F33  318C  24AD         	fcall	_Save_Write_word
  3801                           
  3802                           ;save.c: 153: Cur_temperature_time_ch2 = 0;
  3803  0F35  0021               	movlb	1	; select bank1
  3804  0F36  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  3805  0F37  0008               	return
  3806  0F38                     __end_of_Save_process:	
  3807                           
  3808                           	psect	text4
  3809  08D2                     __ptext4:	
  3810 ;; *************** function _SYSTEM_Initialize *****************
  3811 ;; Defined at:
  3812 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0, pclath, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    4
  3833 ;; This function calls:
  3834 ;;		_ADC_Initialize
  3835 ;;		_EUSART_Initialize
  3836 ;;		_FVR_Initialize
  3837 ;;		_OSCILLATOR_Initialize
  3838 ;;		_PIN_MANAGER_Initialize
  3839 ;;		_SPI_Initialize
  3840 ;;		_TMR0_Initialize
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _SYSTEM_Initialize
  3848  08D2                     _SYSTEM_Initialize:	
  3849                           
  3850                           ;mcc.c: 71: OSCILLATOR_Initialize();
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3854  08D2  3188  2022  3188   	fcall	_OSCILLATOR_Initialize
  3855                           
  3856                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3857  08D5  318A  2261  3188   	fcall	_PIN_MANAGER_Initialize
  3858                           
  3859                           ;mcc.c: 73: SPI_Initialize();
  3860  08D8  3188  202D  3188   	fcall	_SPI_Initialize
  3861                           
  3862                           ;mcc.c: 74: EUSART_Initialize();
  3863  08DB  3188  2062  3188   	fcall	_EUSART_Initialize
  3864                           
  3865                           ;mcc.c: 75: ADC_Initialize();
  3866  08DE  3188  2047  3188   	fcall	_ADC_Initialize
  3867                           
  3868                           ;mcc.c: 76: TMR0_Initialize();
  3869  08E1  3188  208B  3188   	fcall	_TMR0_Initialize
  3870                           
  3871                           ;mcc.c: 77: FVR_Initialize();
  3872  08E4  3188  2019         	fcall	_FVR_Initialize
  3873  08E6  0008               	return
  3874  08E7                     __end_of_SYSTEM_Initialize:	
  3875                           
  3876                           	psect	text5
  3877  088B                     __ptext5:	
  3878 ;; *************** function _TMR0_Initialize *****************
  3879 ;; Defined at:
  3880 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    3
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_SYSTEM_Initialize
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _TMR0_Initialize
  3910  088B                     _TMR0_Initialize:	
  3911                           
  3912                           ;tmr0.c: 70: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  3913                           
  3914                           ;incstack = 0
  3915                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3916  088B  0021               	movlb	1	; select bank1
  3917  088C  0815               	movf	21,w	;volatile
  3918  088D  39C0               	andlw	192
  3919  088E  3817               	iorlw	23
  3920  088F  0095               	movwf	21	;volatile
  3921                           
  3922                           ;tmr0.c: 73: TMR0 = 0x64;
  3923  0890  3064               	movlw	100
  3924  0891  0020               	movlb	0	; select bank0
  3925  0892  0095               	movwf	21	;volatile
  3926                           
  3927                           ;tmr0.c: 76: timer0ReloadVal = 100;
  3928  0893  3064               	movlw	100
  3929  0894  00F3               	movwf	??_TMR0_Initialize
  3930  0895  0873               	movf	??_TMR0_Initialize,w
  3931  0896  0021               	movlb	1	; select bank1
  3932  0897  00EF               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3933                           
  3934                           ;tmr0.c: 79: INTCONbits.TMR0IF = 0;
  3935  0898  110B               	bcf	11,2	;volatile
  3936                           
  3937                           ;tmr0.c: 82: INTCONbits.TMR0IE = 1;
  3938  0899  168B               	bsf	11,5	;volatile
  3939  089A  0008               	return
  3940  089B                     __end_of_TMR0_Initialize:	
  3941                           
  3942                           	psect	text6
  3943  082D                     __ptext6:	
  3944 ;; *************** function _SPI_Initialize *****************
  3945 ;; Defined at:
  3946 ;;		line 64 in file "mcc_generated_files/spi.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    3
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_SYSTEM_Initialize
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function _SPI_Initialize
  3976  082D                     _SPI_Initialize:	
  3977                           
  3978                           ;spi.c: 68: SSP1STAT = 0x00;
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  3982  082D  0024               	movlb	4	; select bank4
  3983  082E  0194               	clrf	20	;volatile
  3984                           
  3985                           ;spi.c: 71: SSP1CON1 = 0x30;
  3986  082F  3030               	movlw	48
  3987  0830  0095               	movwf	21	;volatile
  3988                           
  3989                           ;spi.c: 74: SSP1ADD = 0x00;
  3990  0831  0192               	clrf	18	;volatile
  3991  0832  0008               	return
  3992  0833                     __end_of_SPI_Initialize:	
  3993                           
  3994                           	psect	text7
  3995  0A61                     __ptext7:	
  3996 ;; *************** function _PIN_MANAGER_Initialize *****************
  3997 ;; Defined at:
  3998 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;Total ram usage:        0 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    3
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_SYSTEM_Initialize
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           
  4027                           ;psect for function _PIN_MANAGER_Initialize
  4028  0A61                     _PIN_MANAGER_Initialize:	
  4029                           
  4030                           ;pin_manager.c: 51: LATA = 0x7B;
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4034  0A61  307B               	movlw	123
  4035  0A62  0022               	movlb	2	; select bank2
  4036  0A63  008C               	movwf	12	;volatile
  4037                           
  4038                           ;pin_manager.c: 52: TRISA = 0x80;
  4039  0A64  3080               	movlw	128
  4040  0A65  0021               	movlb	1	; select bank1
  4041  0A66  008C               	movwf	12	;volatile
  4042                           
  4043                           ;pin_manager.c: 53: ANSELA = 0x00;
  4044  0A67  0023               	movlb	3	; select bank3
  4045  0A68  018C               	clrf	12	;volatile
  4046                           
  4047                           ;pin_manager.c: 55: LATB = 0x00;
  4048  0A69  0022               	movlb	2	; select bank2
  4049  0A6A  018D               	clrf	13	;volatile
  4050                           
  4051                           ;pin_manager.c: 56: TRISB = 0xFC;
  4052  0A6B  30FC               	movlw	252
  4053  0A6C  0021               	movlb	1	; select bank1
  4054  0A6D  008D               	movwf	13	;volatile
  4055                           
  4056                           ;pin_manager.c: 57: ANSELB = 0x10;
  4057  0A6E  3010               	movlw	16
  4058  0A6F  0023               	movlb	3	; select bank3
  4059  0A70  008D               	movwf	13	;volatile
  4060                           
  4061                           ;pin_manager.c: 58: WPUB = 0x2C;
  4062  0A71  302C               	movlw	44
  4063  0A72  0024               	movlb	4	; select bank4
  4064  0A73  008D               	movwf	13	;volatile
  4065                           
  4066                           ;pin_manager.c: 60: LATC = 0x07;
  4067  0A74  3007               	movlw	7
  4068  0A75  0022               	movlb	2	; select bank2
  4069  0A76  008E               	movwf	14	;volatile
  4070                           
  4071                           ;pin_manager.c: 61: TRISC = 0xD0;
  4072  0A77  30D0               	movlw	208
  4073  0A78  0021               	movlb	1	; select bank1
  4074  0A79  008E               	movwf	14	;volatile
  4075                           
  4076                           ;pin_manager.c: 62: ANSELC = 0x00;
  4077  0A7A  0023               	movlb	3	; select bank3
  4078  0A7B  018E               	clrf	14	;volatile
  4079                           
  4080                           ;pin_manager.c: 64: WPUE = 0x00;
  4081  0A7C  0024               	movlb	4	; select bank4
  4082  0A7D  0190               	clrf	16	;volatile
  4083                           
  4084                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x00;
  4085  0A7E  0021               	movlb	1	; select bank1
  4086  0A7F  1395               	bcf	21,7	;volatile
  4087                           
  4088                           ;pin_manager.c: 68: APFCON = 0x00;
  4089  0A80  0022               	movlb	2	; select bank2
  4090  0A81  019D               	clrf	29	;volatile
  4091  0A82  0008               	return
  4092  0A83                     __end_of_PIN_MANAGER_Initialize:	
  4093                           
  4094                           	psect	text8
  4095  0822                     __ptext8:	
  4096 ;; *************** function _OSCILLATOR_Initialize *****************
  4097 ;; Defined at:
  4098 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    3
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_SYSTEM_Initialize
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function _OSCILLATOR_Initialize
  4128  0822                     _OSCILLATOR_Initialize:	
  4129                           
  4130                           ;mcc.c: 82: OSCCON = 0x78;
  4131                           
  4132                           ;incstack = 0
  4133                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4134  0822  3078               	movlw	120
  4135  0823  0021               	movlb	1	; select bank1
  4136  0824  0099               	movwf	25	;volatile
  4137                           
  4138                           ;mcc.c: 84: OSCSTAT = 0x00;
  4139  0825  019A               	clrf	26	;volatile
  4140  0826  0008               	return
  4141  0827                     __end_of_OSCILLATOR_Initialize:	
  4142                           
  4143                           	psect	text9
  4144  0819                     __ptext9:	
  4145 ;; *************** function _FVR_Initialize *****************
  4146 ;; Defined at:
  4147 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    3
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_SYSTEM_Initialize
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _FVR_Initialize
  4177  0819                     _FVR_Initialize:	
  4178                           
  4179                           ;fvr.c: 60: FVRCON = 0x82;
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in _FVR_Initialize: [wreg]
  4183  0819  3082               	movlw	130
  4184  081A  0022               	movlb	2	; select bank2
  4185  081B  0097               	movwf	23	;volatile
  4186  081C  0008               	return
  4187  081D                     __end_of_FVR_Initialize:	
  4188                           
  4189                           	psect	text10
  4190  0862                     __ptext10:	
  4191 ;; *************** function _EUSART_Initialize *****************
  4192 ;; Defined at:
  4193 ;;		line 56 in file "mcc_generated_files/eusart.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    3
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_SYSTEM_Initialize
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _EUSART_Initialize
  4223  0862                     _EUSART_Initialize:	
  4224                           
  4225                           ;eusart.c: 60: BAUDCON = 0x48;
  4226                           
  4227                           ;incstack = 0
  4228                           ; Regs used in _EUSART_Initialize: [wreg]
  4229  0862  3048               	movlw	72
  4230  0863  0023               	movlb	3	; select bank3
  4231  0864  009F               	movwf	31	;volatile
  4232                           
  4233                           ;eusart.c: 63: RCSTA = 0x80;
  4234  0865  3080               	movlw	128
  4235  0866  009D               	movwf	29	;volatile
  4236                           
  4237                           ;eusart.c: 66: TXSTA = 0x26;
  4238  0867  3026               	movlw	38
  4239  0868  009E               	movwf	30	;volatile
  4240                           
  4241                           ;eusart.c: 69: SPBRGL = 0xA0;
  4242  0869  30A0               	movlw	160
  4243  086A  009B               	movwf	27	;volatile
  4244                           
  4245                           ;eusart.c: 72: SPBRGH = 0x01;
  4246  086B  3001               	movlw	1
  4247  086C  009C               	movwf	28	;volatile
  4248  086D  0008               	return
  4249  086E                     __end_of_EUSART_Initialize:	
  4250                           
  4251                           	psect	text11
  4252  0847                     __ptext11:	
  4253 ;; *************** function _ADC_Initialize *****************
  4254 ;; Defined at:
  4255 ;;		line 65 in file "mcc_generated_files/adc.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    3
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_SYSTEM_Initialize
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _ADC_Initialize
  4285  0847                     _ADC_Initialize:	
  4286                           
  4287                           ;adc.c: 69: ADCON0 = 0x01;
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4291  0847  3001               	movlw	1
  4292  0848  0021               	movlb	1	; select bank1
  4293  0849  009D               	movwf	29	;volatile
  4294                           
  4295                           ;adc.c: 72: ADCON1 = 0xE3;
  4296  084A  30E3               	movlw	227
  4297  084B  009E               	movwf	30	;volatile
  4298                           
  4299                           ;adc.c: 75: ADRESL = 0x00;
  4300  084C  019B               	clrf	27	;volatile
  4301                           
  4302                           ;adc.c: 78: ADRESH = 0x00;
  4303  084D  019C               	clrf	28	;volatile
  4304  084E  0008               	return
  4305  084F                     __end_of_ADC_Initialize:	
  4306                           
  4307                           	psect	text12
  4308  0538                     __ptext12:	
  4309 ;; *************** function _Key_Process *****************
  4310 ;; Defined at:
  4311 ;;		line 42 in file "mcc_generated_files/key.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  i               2   64[BANK0 ] unsigned int 
  4316 ;;  data_temp       2   61[BANK0 ] unsigned int 
  4317 ;;  gKeyValue       1   63[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2  297[None  ] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;Total ram usage:        6 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:   12
  4334 ;; This function calls:
  4335 ;;		_EUSART_Write
  4336 ;;		_FLASH_ReadWord
  4337 ;;		_Key_Scan
  4338 ;;		_Save_Write_time
  4339 ;;		_SendCmd_1621
  4340 ;;		_Set_finish_flag
  4341 ;;		_Set_start_flag
  4342 ;;		_Write_Flash_finish
  4343 ;;		_Write_Flash_head
  4344 ;;		_temperature_process
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           
  4351                           ;psect for function _Key_Process
  4352  0538                     _Key_Process:	
  4353                           
  4354                           ;key.c: 44: unsigned char gKeyValue=0;
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _Key_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4358  0538  0020               	movlb	0	; select bank0
  4359  0539  01DF               	clrf	Key_Process@gKeyValue
  4360                           
  4361                           ;key.c: 46: unsigned int i;
  4362                           ;key.c: 47: unsigned int data_temp;
  4363                           ;key.c: 49: LongPressSec = 0;
  4364  053A  0021               	movlb	1	; select bank1
  4365  053B  01B8               	clrf	_LongPressSec^(0+128)
  4366                           
  4367                           ;key.c: 50: gKeyValue=Key_Scan();
  4368  053C  318A  2283  3185   	fcall	_Key_Scan
  4369  053F  0020               	movlb	0	; select bank0
  4370  0540  00DC               	movwf	??_Key_Process
  4371  0541  085C               	movf	??_Key_Process,w
  4372  0542  00DF               	movwf	Key_Process@gKeyValue
  4373                           
  4374                           ;key.c: 51: if(gKeyValue)
  4375  0543  085F               	movf	Key_Process@gKeyValue,w
  4376  0544  1903               	btfsc	3,2
  4377  0545  0008               	return
  4378  0546  2DC4               	goto	l5272
  4379  0547                     l5220:	
  4380                           ;key.c: 56: while( !(LongPressSec > 2 || RB5 == 1) );
  4381                           
  4382                           ;key.c: 54: {
  4383                           ;key.c: 55: case 0x01:
  4384                           
  4385                           ;key.c: 52: {
  4386                           ;key.c: 53: switch(gKeyValue)
  4387                           
  4388  0547  3003               	movlw	3
  4389  0548  0021               	movlb	1	; select bank1
  4390  0549  0238               	subwf	_LongPressSec^(0+128),w
  4391  054A  1803               	skipnc
  4392  054B  2D4F               	goto	l5224
  4393  054C  0020               	movlb	0	; select bank0
  4394  054D  1E8D               	btfss	13,5	;volatile
  4395  054E  2D47               	goto	l5220
  4396  054F                     l5224:	
  4397                           
  4398                           ;key.c: 57: if(LongPressSec > 2)
  4399  054F  3003               	movlw	3
  4400  0550  0021               	movlb	1	; select bank1
  4401  0551  0238               	subwf	_LongPressSec^(0+128),w
  4402  0552  1C03               	skipc
  4403  0553  2D5C               	goto	l5228
  4404                           
  4405                           ;key.c: 58: {
  4406                           ;key.c: 59: do { LATA2 = 0; } while(0);
  4407  0554  0022               	movlb	2	; select bank2
  4408  0555  110C               	bcf	12,2	;volatile
  4409                           
  4410                           ;key.c: 60: do { LATA3 = 1; } while(0);
  4411  0556  158C               	bsf	12,3	;volatile
  4412                           
  4413                           ;key.c: 61: SendCmd_1621(0x04);
  4414  0557  3004               	movlw	4
  4415  0558  3188  20E7  3185   	fcall	_SendCmd_1621
  4416                           
  4417                           ;key.c: 62: }
  4418  055B  2D89               	goto	l885
  4419  055C                     l5228:	
  4420                           
  4421                           ;key.c: 64: else
  4422                           ;key.c: 65: {
  4423                           ;key.c: 66: for(i=0x2000;i<0x2000+1000;i++)
  4424  055C  3000               	movlw	0
  4425  055D  0020               	movlb	0	; select bank0
  4426  055E  00E0               	movwf	Key_Process@i
  4427  055F  3020               	movlw	32
  4428  0560  00E1               	movwf	Key_Process@i+1
  4429  0561  3023               	movlw	35
  4430  0562  0261               	subwf	Key_Process@i+1,w
  4431  0563  30E8               	movlw	232
  4432  0564  1903               	skipnz
  4433  0565  0260               	subwf	Key_Process@i,w
  4434  0566  1803               	btfsc	3,0
  4435  0567  2D89               	goto	l885
  4436  0568                     l5232:	
  4437                           
  4438                           ;key.c: 67: {
  4439                           ;key.c: 68: data_temp = FLASH_ReadWord(i);
  4440  0568  0861               	movf	Key_Process@i+1,w
  4441  0569  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  4442  056A  0860               	movf	Key_Process@i,w
  4443  056B  00F3               	movwf	FLASH_ReadWord@flashAddr
  4444  056C  3189  2149  3185   	fcall	_FLASH_ReadWord
  4445  056F  0874               	movf	?_FLASH_ReadWord+1,w
  4446  0570  0020               	movlb	0	; select bank0
  4447  0571  00DE               	movwf	Key_Process@data_temp+1
  4448  0572  0873               	movf	?_FLASH_ReadWord,w
  4449  0573  00DD               	movwf	Key_Process@data_temp
  4450                           
  4451                           ;key.c: 69: EUSART_Write(data_temp>>8);
  4452  0574  085E               	movf	Key_Process@data_temp+1,w
  4453  0575  3188  203F  3185   	fcall	_EUSART_Write
  4454                           
  4455                           ;key.c: 70: EUSART_Write(data_temp&0xff);
  4456  0578  0020               	movlb	0	; select bank0
  4457  0579  085D               	movf	Key_Process@data_temp,w
  4458  057A  3188  203F  3185   	fcall	_EUSART_Write
  4459  057D  3001               	movlw	1
  4460  057E  0020               	movlb	0	; select bank0
  4461  057F  07E0               	addwf	Key_Process@i,f
  4462  0580  3000               	movlw	0
  4463  0581  3DE1               	addwfc	Key_Process@i+1,f
  4464  0582  3023               	movlw	35
  4465  0583  0261               	subwf	Key_Process@i+1,w
  4466  0584  30E8               	movlw	232
  4467  0585  1903               	skipnz
  4468  0586  0260               	subwf	Key_Process@i,w
  4469  0587  1C03               	skipc
  4470  0588  2D68               	goto	l5232
  4471  0589                     l885:	
  4472                           ;key.c: 71: }
  4473                           ;key.c: 72: }
  4474                           ;key.c: 74: while(RB5 == 0);
  4475                           
  4476  0589  0020               	movlb	0	; select bank0
  4477  058A  1A8D               	btfsc	13,5	;volatile
  4478  058B  0008               	return
  4479  058C  2D89               	goto	l885
  4480  058D                     l5238:	
  4481                           ;key.c: 77: while( !(LongPressSec > 2 || RA7 == 1) );
  4482                           
  4483                           ;key.c: 76: case 0x02:
  4484                           
  4485                           ;key.c: 75: break;
  4486                           
  4487  058D  3003               	movlw	3
  4488  058E  0021               	movlb	1	; select bank1
  4489  058F  0238               	subwf	_LongPressSec^(0+128),w
  4490  0590  1803               	skipnc
  4491  0591  2D95               	goto	l5242
  4492  0592  0020               	movlb	0	; select bank0
  4493  0593  1F8C               	btfss	12,7	;volatile
  4494  0594  2D8D               	goto	l5238
  4495  0595                     l5242:	
  4496                           
  4497                           ;key.c: 78: if(LongPressSec > 2)
  4498  0595  3003               	movlw	3
  4499  0596  0021               	movlb	1	; select bank1
  4500  0597  0238               	subwf	_LongPressSec^(0+128),w
  4501  0598  1C03               	skipc
  4502  0599  2DB8               	goto	l5266
  4503                           
  4504                           ;key.c: 79: {
  4505                           ;key.c: 80: if(Record_flag == 0)
  4506  059A  0020               	movlb	0	; select bank0
  4507  059B  086B               	movf	_Record_flag,w
  4508  059C  1D03               	btfss	3,2
  4509  059D  2DB1               	goto	l5262
  4510                           
  4511                           ;key.c: 81: {
  4512                           ;key.c: 82: Set_start_flag();
  4513  059E  3188  2027  3185   	fcall	_Set_start_flag
  4514                           
  4515                           ;key.c: 83: Write_Flash_head();
  4516  05A1  318B  237D  3185   	fcall	_Write_Flash_head
  4517                           
  4518                           ;key.c: 84: Save_Write_time();
  4519  05A4  3186  26DB  3185   	fcall	_Save_Write_time
  4520                           
  4521                           ;key.c: 85: Cur_temperature_time_ch1 = 0;
  4522  05A7  0021               	movlb	1	; select bank1
  4523  05A8  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  4524                           
  4525                           ;key.c: 86: Cur_temperature_time_ch2 = 0;
  4526  05A9  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  4527                           
  4528                           ;key.c: 87: CH1_temperature = 0;
  4529  05AA  0020               	movlb	0	; select bank0
  4530  05AB  01E9               	clrf	_CH1_temperature
  4531  05AC  01EA               	clrf	_CH1_temperature+1
  4532                           
  4533                           ;key.c: 88: CH2_temperature = 0;
  4534  05AD  01F8               	clrf	_CH2_temperature
  4535  05AE  01F9               	clrf	_CH2_temperature+1
  4536                           
  4537                           ;key.c: 89: time_count = 0;
  4538  05AF  01ED               	clrf	_time_count
  4539                           
  4540                           ;key.c: 90: }
  4541  05B0  2DC0               	goto	l899
  4542  05B1                     l5262:	
  4543                           
  4544                           ;key.c: 91: else
  4545                           ;key.c: 92: {
  4546                           ;key.c: 93: Set_finish_flag();
  4547  05B1  3188  201D  3185   	fcall	_Set_finish_flag
  4548                           
  4549                           ;key.c: 94: Write_Flash_finish();
  4550  05B4  318B  234E  3185   	fcall	_Write_Flash_finish
  4551                           
  4552                           ;key.c: 95: }
  4553                           ;key.c: 96: }
  4554  05B7  2DC0               	goto	l899
  4555  05B8                     l5266:	
  4556                           
  4557                           ;key.c: 97: else
  4558                           ;key.c: 98: {
  4559                           ;key.c: 99: time_count = 5;
  4560  05B8  3005               	movlw	5
  4561  05B9  0020               	movlb	0	; select bank0
  4562  05BA  00DC               	movwf	??_Key_Process
  4563  05BB  085C               	movf	??_Key_Process,w
  4564  05BC  00ED               	movwf	_time_count
  4565                           
  4566                           ;key.c: 100: temperature_process();
  4567  05BD  318B  23DD  3185   	fcall	_temperature_process
  4568  05C0                     l899:	
  4569                           ;key.c: 101: }
  4570                           ;key.c: 102: while(RA7 == 0);
  4571                           
  4572  05C0  0020               	movlb	0	; select bank0
  4573  05C1  1B8C               	btfsc	12,7	;volatile
  4574  05C2  0008               	return
  4575  05C3  2DC0               	goto	l899
  4576  05C4                     l5272:	
  4577                           ;key.c: 105: }
  4578                           
  4579                           ;key.c: 104: default:break;
  4580                           
  4581                           ;key.c: 103: break;
  4582                           
  4583  05C4  085F               	movf	Key_Process@gKeyValue,w
  4584                           
  4585                           ; Switch size 1, requested type "space"
  4586                           ; Number of cases is 2, Range of values is 1 to 2
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte            7     4 (average)
  4590                           ; direct_byte           13     9 (fixed)
  4591                           ; jumptable            263     9 (fixed)
  4592                           ;	Chosen strategy is simple_byte
  4593  05C5  3A01               	xorlw	1	; case 1
  4594  05C6  1903               	skipnz
  4595  05C7  2D47               	goto	l5220
  4596  05C8  3A03               	xorlw	3	; case 2
  4597  05C9  1903               	skipnz
  4598  05CA  2D8D               	goto	l5238
  4599  05CB  2DCD               	goto	l903
  4600  05CC  0008               	return
  4601  05CD                     l903:	
  4602  05CD  0008               	return
  4603  05CE                     __end_of_Key_Process:	
  4604                           
  4605                           	psect	text13
  4606  0BDD                     __ptext13:	
  4607 ;; *************** function _temperature_process *****************
  4608 ;; Defined at:
  4609 ;;		line 354 in file "mcc_generated_files/max31856.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:   11
  4630 ;; This function calls:
  4631 ;;		_Two_Display
  4632 ;;		_one_temperature_trans
  4633 ;;		_temperature_display
  4634 ;;		_time_Display
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;;		_Key_Process
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function _temperature_process
  4643  0BDD                     _temperature_process:	
  4644                           
  4645                           ;max31856.c: 356: switch(time_count)
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _temperature_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4649  0BDD  2BFD               	goto	l5088
  4650  0BDE                     l5060:	
  4651                           ;max31856.c: 357: {
  4652                           ;max31856.c: 358: case 0:
  4653                           
  4654                           
  4655                           ;max31856.c: 359: Two_Display(1);
  4656  0BDE  3001               	movlw	1
  4657  0BDF  318B  23AC  318B   	fcall	_Two_Display
  4658                           
  4659                           ;max31856.c: 360: do { LATA1 = 1; } while(0);
  4660  0BE2  0022               	movlb	2	; select bank2
  4661  0BE3  148C               	bsf	12,1	;volatile
  4662                           
  4663                           ;max31856.c: 361: do { LATA0 = 1; } while(0);
  4664  0BE4  140C               	bsf	12,0	;volatile
  4665                           
  4666                           ;max31856.c: 362: do { LATA0 = 0; } while(0);
  4667  0BE5  100C               	bcf	12,0	;volatile
  4668                           
  4669                           ;max31856.c: 363: one_temperature_trans();
  4670  0BE6  3187  27B8         	fcall	_one_temperature_trans
  4671                           
  4672                           ;max31856.c: 364: break;
  4673  0BE8  0008               	return
  4674  0BE9                     l5070:	
  4675                           ;max31856.c: 365: case 1:
  4676                           
  4677                           
  4678                           ;max31856.c: 366: temperature_display();
  4679  0BE9  318D  251E         	fcall	_temperature_display
  4680                           
  4681                           ;max31856.c: 367: break;
  4682  0BEB  0008               	return
  4683  0BEC                     l5072:	
  4684                           ;max31856.c: 368: case 2:
  4685                           
  4686                           
  4687                           ;max31856.c: 369: Two_Display(2);
  4688  0BEC  3002               	movlw	2
  4689  0BED  318B  23AC  318B   	fcall	_Two_Display
  4690                           
  4691                           ;max31856.c: 370: do { LATA0 = 1; } while(0);
  4692  0BF0  0022               	movlb	2	; select bank2
  4693  0BF1  140C               	bsf	12,0	;volatile
  4694                           
  4695                           ;max31856.c: 371: do { LATA1 = 1; } while(0);
  4696  0BF2  148C               	bsf	12,1	;volatile
  4697                           
  4698                           ;max31856.c: 372: do { LATA1 = 0; } while(0);
  4699  0BF3  108C               	bcf	12,1	;volatile
  4700                           
  4701                           ;max31856.c: 373: one_temperature_trans();
  4702  0BF4  3187  27B8         	fcall	_one_temperature_trans
  4703                           
  4704                           ;max31856.c: 374: break;
  4705  0BF6  0008               	return
  4706  0BF7                     l5082:	
  4707                           ;max31856.c: 375: case 3:
  4708                           
  4709                           
  4710                           ;max31856.c: 376: temperature_display();
  4711  0BF7  318D  251E         	fcall	_temperature_display
  4712                           
  4713                           ;max31856.c: 377: break;
  4714  0BF9  0008               	return
  4715  0BFA                     l5084:	
  4716                           ;max31856.c: 378: case 5:
  4717                           
  4718                           
  4719                           ;max31856.c: 379: time_Display();
  4720  0BFA  3185  25CE         	fcall	_time_Display
  4721                           
  4722                           ;max31856.c: 382: }
  4723                           
  4724                           ;max31856.c: 381: default:break;
  4725                           
  4726                           ;max31856.c: 380: break;
  4727  0BFC  0008               	return
  4728  0BFD                     l5088:	
  4729  0BFD  0020               	movlb	0	; select bank0
  4730  0BFE  086D               	movf	_time_count,w
  4731                           
  4732                           ; Switch size 1, requested type "space"
  4733                           ; Number of cases is 5, Range of values is 0 to 5
  4734                           ; switch strategies available:
  4735                           ; Name         Instructions Cycles
  4736                           ; simple_byte           16     9 (average)
  4737                           ; direct_byte           18     6 (fixed)
  4738                           ; jumptable            260     6 (fixed)
  4739                           ;	Chosen strategy is simple_byte
  4740  0BFF  3A00               	xorlw	0	; case 0
  4741  0C00  1903               	skipnz
  4742  0C01  2BDE               	goto	l5060
  4743  0C02  3A01               	xorlw	1	; case 1
  4744  0C03  1903               	skipnz
  4745  0C04  2BE9               	goto	l5070
  4746  0C05  3A03               	xorlw	3	; case 2
  4747  0C06  1903               	skipnz
  4748  0C07  2BEC               	goto	l5072
  4749  0C08  3A01               	xorlw	1	; case 3
  4750  0C09  1903               	skipnz
  4751  0C0A  2BF7               	goto	l5082
  4752  0C0B  3A06               	xorlw	6	; case 5
  4753  0C0C  1903               	skipnz
  4754  0C0D  2BFA               	goto	l5084
  4755  0C0E  2C0F               	goto	l584
  4756  0C0F                     l584:	
  4757  0C0F  0008               	return
  4758  0C10                     __end_of_temperature_process:	
  4759                           
  4760                           	psect	text14
  4761  05CE                     __ptext14:	
  4762 ;; *************** function _time_Display *****************
  4763 ;; Defined at:
  4764 ;;		line 167 in file "mcc_generated_files/ht1621.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  num             4   19[BANK0 ] unsigned char [4]
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;Total ram usage:        7 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    6
  4785 ;; This function calls:
  4786 ;;		_Bq32k_Rtc_Read_Time
  4787 ;;		_WriteAll_1621
  4788 ;;		___awdiv
  4789 ;;		___awmod
  4790 ;; This function is called by:
  4791 ;;		_temperature_process
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _time_Display
  4797  05CE                     _time_Display:	
  4798                           
  4799                           ;ht1621.c: 169: unsigned char num[4]={0};
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _time_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4803  05CE  0021               	movlb	1	; select bank1
  4804  05CF  082B               	movf	(time_Display@F2129+3)^(0+128),w
  4805  05D0  0020               	movlb	0	; select bank0
  4806  05D1  00B6               	movwf	time_Display@num+3
  4807  05D2  0021               	movlb	1	; select bank1
  4808  05D3  082A               	movf	(time_Display@F2129+2)^(0+128),w
  4809  05D4  0020               	movlb	0	; select bank0
  4810  05D5  00B5               	movwf	time_Display@num+2
  4811  05D6  0021               	movlb	1	; select bank1
  4812  05D7  0829               	movf	(time_Display@F2129+1)^(0+128),w
  4813  05D8  0020               	movlb	0	; select bank0
  4814  05D9  00B4               	movwf	time_Display@num+1
  4815  05DA  0021               	movlb	1	; select bank1
  4816  05DB  0828               	movf	time_Display@F2129^(0+128),w
  4817  05DC  0020               	movlb	0	; select bank0
  4818  05DD  00B3               	movwf	time_Display@num
  4819                           
  4820                           ;ht1621.c: 170: Bq32k_Rtc_Read_Time(&rtc_tm);
  4821  05DE  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  4822  05DF  318F  2738  3185   	fcall	_Bq32k_Rtc_Read_Time
  4823                           
  4824                           ;ht1621.c: 171: num[0] = Dis_TAB[rtc_tm.hours / 10];
  4825  05E2  300A               	movlw	10
  4826  05E3  00F3               	movwf	___awdiv@divisor
  4827  05E4  3000               	movlw	0
  4828  05E5  00F4               	movwf	___awdiv@divisor+1
  4829  05E6  0021               	movlb	1	; select bank1
  4830  05E7  085C               	movf	(_rtc_tm^(0+128)+2),w
  4831  05E8  0020               	movlb	0	; select bank0
  4832  05E9  00B0               	movwf	??_time_Display
  4833  05EA  01B1               	clrf	??_time_Display+1
  4834  05EB  0830               	movf	??_time_Display,w
  4835  05EC  00F5               	movwf	___awdiv@dividend
  4836  05ED  0831               	movf	??_time_Display+1,w
  4837  05EE  00F6               	movwf	___awdiv@dividend+1
  4838  05EF  318E  2683  3185   	fcall	___awdiv
  4839  05F2  0874               	movf	?___awdiv+1,w
  4840  05F3  0085               	movwf	5
  4841  05F4  0873               	movf	?___awdiv,w
  4842  05F5  0084               	movwf	4
  4843  05F6  3000               	movlw	low (_Dis_TAB| (0+32768))
  4844  05F7  0784               	addwf	4,f
  4845  05F8  3090               	movlw	high (_Dis_TAB| (0+32768))
  4846  05F9  3D85               	addwfc	5,f
  4847  05FA  0800               	movf	0,w	;code access
  4848  05FB  0020               	movlb	0	; select bank0
  4849  05FC  00B2               	movwf	??_time_Display+2
  4850  05FD  0832               	movf	??_time_Display+2,w
  4851  05FE  00B3               	movwf	time_Display@num
  4852                           
  4853                           ;ht1621.c: 172: num[0] |= 0x08;
  4854  05FF  15B3               	bsf	time_Display@num,3
  4855                           
  4856                           ;ht1621.c: 173: num[1] = Dis_TAB[rtc_tm.hours % 10];
  4857  0600  300A               	movlw	10
  4858  0601  00F3               	movwf	___awmod@divisor
  4859  0602  3000               	movlw	0
  4860  0603  00F4               	movwf	___awmod@divisor+1
  4861  0604  0021               	movlb	1	; select bank1
  4862  0605  085C               	movf	(_rtc_tm^(0+128)+2),w
  4863  0606  0020               	movlb	0	; select bank0
  4864  0607  00B0               	movwf	??_time_Display
  4865  0608  01B1               	clrf	??_time_Display+1
  4866  0609  0830               	movf	??_time_Display,w
  4867  060A  00F5               	movwf	___awmod@dividend
  4868  060B  0831               	movf	??_time_Display+1,w
  4869  060C  00F6               	movwf	___awmod@dividend+1
  4870  060D  318D  25A0  3185   	fcall	___awmod
  4871  0610  0874               	movf	?___awmod+1,w
  4872  0611  0085               	movwf	5
  4873  0612  0873               	movf	?___awmod,w
  4874  0613  0084               	movwf	4
  4875  0614  3000               	movlw	low (_Dis_TAB| (0+32768))
  4876  0615  0784               	addwf	4,f
  4877  0616  3090               	movlw	high (_Dis_TAB| (0+32768))
  4878  0617  3D85               	addwfc	5,f
  4879  0618  0800               	movf	0,w	;code access
  4880  0619  0020               	movlb	0	; select bank0
  4881  061A  00B2               	movwf	??_time_Display+2
  4882  061B  0832               	movf	??_time_Display+2,w
  4883  061C  00B4               	movwf	time_Display@num+1
  4884                           
  4885                           ;ht1621.c: 174: num[2] = Dis_TAB[rtc_tm.minutes / 10];
  4886  061D  300A               	movlw	10
  4887  061E  00F3               	movwf	___awdiv@divisor
  4888  061F  3000               	movlw	0
  4889  0620  00F4               	movwf	___awdiv@divisor+1
  4890  0621  0021               	movlb	1	; select bank1
  4891  0622  085B               	movf	(_rtc_tm^(0+128)+1),w
  4892  0623  0020               	movlb	0	; select bank0
  4893  0624  00B0               	movwf	??_time_Display
  4894  0625  01B1               	clrf	??_time_Display+1
  4895  0626  0830               	movf	??_time_Display,w
  4896  0627  00F5               	movwf	___awdiv@dividend
  4897  0628  0831               	movf	??_time_Display+1,w
  4898  0629  00F6               	movwf	___awdiv@dividend+1
  4899  062A  318E  2683  3185   	fcall	___awdiv
  4900  062D  0874               	movf	?___awdiv+1,w
  4901  062E  0085               	movwf	5
  4902  062F  0873               	movf	?___awdiv,w
  4903  0630  0084               	movwf	4
  4904  0631  3000               	movlw	low (_Dis_TAB| (0+32768))
  4905  0632  0784               	addwf	4,f
  4906  0633  3090               	movlw	high (_Dis_TAB| (0+32768))
  4907  0634  3D85               	addwfc	5,f
  4908  0635  0800               	movf	0,w	;code access
  4909  0636  0020               	movlb	0	; select bank0
  4910  0637  00B2               	movwf	??_time_Display+2
  4911  0638  0832               	movf	??_time_Display+2,w
  4912  0639  00B5               	movwf	time_Display@num+2
  4913                           
  4914                           ;ht1621.c: 175: num[3] = Dis_TAB[rtc_tm.minutes % 10];
  4915  063A  300A               	movlw	10
  4916  063B  00F3               	movwf	___awmod@divisor
  4917  063C  3000               	movlw	0
  4918  063D  00F4               	movwf	___awmod@divisor+1
  4919  063E  0021               	movlb	1	; select bank1
  4920  063F  085B               	movf	(_rtc_tm^(0+128)+1),w
  4921  0640  0020               	movlb	0	; select bank0
  4922  0641  00B0               	movwf	??_time_Display
  4923  0642  01B1               	clrf	??_time_Display+1
  4924  0643  0830               	movf	??_time_Display,w
  4925  0644  00F5               	movwf	___awmod@dividend
  4926  0645  0831               	movf	??_time_Display+1,w
  4927  0646  00F6               	movwf	___awmod@dividend+1
  4928  0647  318D  25A0  3185   	fcall	___awmod
  4929  064A  0874               	movf	?___awmod+1,w
  4930  064B  0085               	movwf	5
  4931  064C  0873               	movf	?___awmod,w
  4932  064D  0084               	movwf	4
  4933  064E  3000               	movlw	low (_Dis_TAB| (0+32768))
  4934  064F  0784               	addwf	4,f
  4935  0650  3090               	movlw	high (_Dis_TAB| (0+32768))
  4936  0651  3D85               	addwfc	5,f
  4937  0652  0800               	movf	0,w	;code access
  4938  0653  0020               	movlb	0	; select bank0
  4939  0654  00B2               	movwf	??_time_Display+2
  4940  0655  0832               	movf	??_time_Display+2,w
  4941  0656  00B6               	movwf	time_Display@num+3
  4942                           
  4943                           ;ht1621.c: 176: WriteAll_1621(0, num, 4);
  4944  0657  3033               	movlw	low time_Display@num
  4945  0658  00A0               	movwf	WriteAll_1621@p
  4946  0659  3000               	movlw	high time_Display@num
  4947  065A  00A1               	movwf	WriteAll_1621@p+1
  4948  065B  3004               	movlw	4
  4949  065C  00B0               	movwf	??_time_Display
  4950  065D  0830               	movf	??_time_Display,w
  4951  065E  00A2               	movwf	WriteAll_1621@cnt
  4952  065F  3000               	movlw	0
  4953  0660  318C  2443         	fcall	_WriteAll_1621
  4954  0662  0008               	return
  4955  0663                     __end_of_time_Display:	
  4956                           
  4957                           	psect	text15
  4958  0DA0                     __ptext15:	
  4959 ;; *************** function ___awmod *****************
  4960 ;; Defined at:
  4961 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  divisor         2    3[COMMON] int 
  4964 ;;  dividend        2    5[COMMON] int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  sign            1    1[BANK0 ] unsigned char 
  4967 ;;  counter         1    0[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  2    3[COMMON] int 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;Total ram usage:        7 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    3
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_time_Display
  4988 ;;		_bin2bcd
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           
  4993                           ;psect for function ___awmod
  4994  0DA0                     ___awmod:	
  4995                           
  4996                           ;incstack = 0
  4997                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4998  0DA0  0020               	movlb	0	; select bank0
  4999  0DA1  01A1               	clrf	___awmod@sign
  5000  0DA2  1FF6               	btfss	___awmod@dividend+1,7
  5001  0DA3  2DAB               	goto	l4900
  5002  0DA4  09F5               	comf	___awmod@dividend,f
  5003  0DA5  09F6               	comf	___awmod@dividend+1,f
  5004  0DA6  0AF5               	incf	___awmod@dividend,f
  5005  0DA7  1903               	skipnz
  5006  0DA8  0AF6               	incf	___awmod@dividend+1,f
  5007  0DA9  01A1               	clrf	___awmod@sign
  5008  0DAA  0AA1               	incf	___awmod@sign,f
  5009  0DAB                     l4900:	
  5010  0DAB  1FF4               	btfss	___awmod@divisor+1,7
  5011  0DAC  2DB2               	goto	l4904
  5012  0DAD  09F3               	comf	___awmod@divisor,f
  5013  0DAE  09F4               	comf	___awmod@divisor+1,f
  5014  0DAF  0AF3               	incf	___awmod@divisor,f
  5015  0DB0  1903               	skipnz
  5016  0DB1  0AF4               	incf	___awmod@divisor+1,f
  5017  0DB2                     l4904:	
  5018  0DB2  0873               	movf	___awmod@divisor,w
  5019  0DB3  0474               	iorwf	___awmod@divisor+1,w
  5020  0DB4  1903               	btfsc	3,2
  5021  0DB5  2DD9               	goto	l4922
  5022  0DB6  01A0               	clrf	___awmod@counter
  5023  0DB7  0AA0               	incf	___awmod@counter,f
  5024  0DB8                     l4912:	
  5025  0DB8  1BF4               	btfsc	___awmod@divisor+1,7
  5026  0DB9  2DC4               	goto	l4914
  5027  0DBA  3001               	movlw	1
  5028  0DBB                     u4515:	
  5029  0DBB  35F3               	lslf	___awmod@divisor,f
  5030  0DBC  0DF4               	rlf	___awmod@divisor+1,f
  5031  0DBD  0B89               	decfsz	9,f
  5032  0DBE  2DBB               	goto	u4515
  5033  0DBF  3001               	movlw	1
  5034  0DC0  00F7               	movwf	??___awmod
  5035  0DC1  0877               	movf	??___awmod,w
  5036  0DC2  07A0               	addwf	___awmod@counter,f
  5037  0DC3  2DB8               	goto	l4912
  5038  0DC4                     l4914:	
  5039  0DC4  0874               	movf	___awmod@divisor+1,w
  5040  0DC5  0276               	subwf	___awmod@dividend+1,w
  5041  0DC6  1D03               	skipz
  5042  0DC7  2DCA               	goto	u4535
  5043  0DC8  0873               	movf	___awmod@divisor,w
  5044  0DC9  0275               	subwf	___awmod@dividend,w
  5045  0DCA                     u4535:	
  5046  0DCA  1C03               	skipc
  5047  0DCB  2DD0               	goto	l4918
  5048  0DCC  0873               	movf	___awmod@divisor,w
  5049  0DCD  02F5               	subwf	___awmod@dividend,f
  5050  0DCE  0874               	movf	___awmod@divisor+1,w
  5051  0DCF  3BF6               	subwfb	___awmod@dividend+1,f
  5052  0DD0                     l4918:	
  5053  0DD0  3001               	movlw	1
  5054  0DD1                     u4545:	
  5055  0DD1  36F4               	lsrf	___awmod@divisor+1,f
  5056  0DD2  0CF3               	rrf	___awmod@divisor,f
  5057  0DD3  0B89               	decfsz	9,f
  5058  0DD4  2DD1               	goto	u4545
  5059  0DD5  3001               	movlw	1
  5060  0DD6  02A0               	subwf	___awmod@counter,f
  5061  0DD7  1D03               	btfss	3,2
  5062  0DD8  2DC4               	goto	l4914
  5063  0DD9                     l4922:	
  5064  0DD9  0821               	movf	___awmod@sign,w
  5065  0DDA  1903               	btfsc	3,2
  5066  0DDB  2DE1               	goto	l4926
  5067  0DDC  09F5               	comf	___awmod@dividend,f
  5068  0DDD  09F6               	comf	___awmod@dividend+1,f
  5069  0DDE  0AF5               	incf	___awmod@dividend,f
  5070  0DDF  1903               	skipnz
  5071  0DE0  0AF6               	incf	___awmod@dividend+1,f
  5072  0DE1                     l4926:	
  5073  0DE1  0876               	movf	___awmod@dividend+1,w
  5074  0DE2  00F4               	movwf	?___awmod+1
  5075  0DE3  0875               	movf	___awmod@dividend,w
  5076  0DE4  00F3               	movwf	?___awmod
  5077  0DE5  0008               	return
  5078  0DE6                     __end_of___awmod:	
  5079                           
  5080                           	psect	text16
  5081  0E83                     __ptext16:	
  5082 ;; *************** function ___awdiv *****************
  5083 ;; Defined at:
  5084 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  divisor         2    3[COMMON] int 
  5087 ;;  dividend        2    5[COMMON] int 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  quotient        2    2[BANK0 ] int 
  5090 ;;  sign            1    1[BANK0 ] unsigned char 
  5091 ;;  counter         1    0[BANK0 ] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  2    3[COMMON] int 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        9 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    3
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_time_Display
  5112 ;;		_bin2bcd
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function ___awdiv
  5118  0E83                     ___awdiv:	
  5119                           
  5120                           ;incstack = 0
  5121                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5122  0E83  0020               	movlb	0	; select bank0
  5123  0E84  01A1               	clrf	___awdiv@sign
  5124  0E85  1FF4               	btfss	___awdiv@divisor+1,7
  5125  0E86  2E8E               	goto	l4856
  5126  0E87  09F3               	comf	___awdiv@divisor,f
  5127  0E88  09F4               	comf	___awdiv@divisor+1,f
  5128  0E89  0AF3               	incf	___awdiv@divisor,f
  5129  0E8A  1903               	skipnz
  5130  0E8B  0AF4               	incf	___awdiv@divisor+1,f
  5131  0E8C  01A1               	clrf	___awdiv@sign
  5132  0E8D  0AA1               	incf	___awdiv@sign,f
  5133  0E8E                     l4856:	
  5134  0E8E  1FF6               	btfss	___awdiv@dividend+1,7
  5135  0E8F  2E99               	goto	l4862
  5136  0E90  09F5               	comf	___awdiv@dividend,f
  5137  0E91  09F6               	comf	___awdiv@dividend+1,f
  5138  0E92  0AF5               	incf	___awdiv@dividend,f
  5139  0E93  1903               	skipnz
  5140  0E94  0AF6               	incf	___awdiv@dividend+1,f
  5141  0E95  3001               	movlw	1
  5142  0E96  00F7               	movwf	??___awdiv
  5143  0E97  0877               	movf	??___awdiv,w
  5144  0E98  06A1               	xorwf	___awdiv@sign,f
  5145  0E99                     l4862:	
  5146  0E99  01A2               	clrf	___awdiv@quotient
  5147  0E9A  01A3               	clrf	___awdiv@quotient+1
  5148  0E9B  0873               	movf	___awdiv@divisor,w
  5149  0E9C  0474               	iorwf	___awdiv@divisor+1,w
  5150  0E9D  1903               	btfsc	3,2
  5151  0E9E  2EC8               	goto	l4884
  5152  0E9F  01A0               	clrf	___awdiv@counter
  5153  0EA0  0AA0               	incf	___awdiv@counter,f
  5154  0EA1                     l4872:	
  5155  0EA1  1BF4               	btfsc	___awdiv@divisor+1,7
  5156  0EA2  2EAD               	goto	l4874
  5157  0EA3  3001               	movlw	1
  5158  0EA4                     u4415:	
  5159  0EA4  35F3               	lslf	___awdiv@divisor,f
  5160  0EA5  0DF4               	rlf	___awdiv@divisor+1,f
  5161  0EA6  0B89               	decfsz	9,f
  5162  0EA7  2EA4               	goto	u4415
  5163  0EA8  3001               	movlw	1
  5164  0EA9  00F7               	movwf	??___awdiv
  5165  0EAA  0877               	movf	??___awdiv,w
  5166  0EAB  07A0               	addwf	___awdiv@counter,f
  5167  0EAC  2EA1               	goto	l4872
  5168  0EAD                     l4874:	
  5169  0EAD  3001               	movlw	1
  5170  0EAE                     u4435:	
  5171  0EAE  35A2               	lslf	___awdiv@quotient,f
  5172  0EAF  0DA3               	rlf	___awdiv@quotient+1,f
  5173  0EB0  0B89               	decfsz	9,f
  5174  0EB1  2EAE               	goto	u4435
  5175  0EB2  0874               	movf	___awdiv@divisor+1,w
  5176  0EB3  0276               	subwf	___awdiv@dividend+1,w
  5177  0EB4  1D03               	skipz
  5178  0EB5  2EB8               	goto	u4445
  5179  0EB6  0873               	movf	___awdiv@divisor,w
  5180  0EB7  0275               	subwf	___awdiv@dividend,w
  5181  0EB8                     u4445:	
  5182  0EB8  1C03               	skipc
  5183  0EB9  2EBF               	goto	l4880
  5184  0EBA  0873               	movf	___awdiv@divisor,w
  5185  0EBB  02F5               	subwf	___awdiv@dividend,f
  5186  0EBC  0874               	movf	___awdiv@divisor+1,w
  5187  0EBD  3BF6               	subwfb	___awdiv@dividend+1,f
  5188  0EBE  1422               	bsf	___awdiv@quotient,0
  5189  0EBF                     l4880:	
  5190  0EBF  3001               	movlw	1
  5191  0EC0                     u4455:	
  5192  0EC0  36F4               	lsrf	___awdiv@divisor+1,f
  5193  0EC1  0CF3               	rrf	___awdiv@divisor,f
  5194  0EC2  0B89               	decfsz	9,f
  5195  0EC3  2EC0               	goto	u4455
  5196  0EC4  3001               	movlw	1
  5197  0EC5  02A0               	subwf	___awdiv@counter,f
  5198  0EC6  1D03               	btfss	3,2
  5199  0EC7  2EAD               	goto	l4874
  5200  0EC8                     l4884:	
  5201  0EC8  0821               	movf	___awdiv@sign,w
  5202  0EC9  1903               	btfsc	3,2
  5203  0ECA  2ED0               	goto	l4888
  5204  0ECB  09A2               	comf	___awdiv@quotient,f
  5205  0ECC  09A3               	comf	___awdiv@quotient+1,f
  5206  0ECD  0AA2               	incf	___awdiv@quotient,f
  5207  0ECE  1903               	skipnz
  5208  0ECF  0AA3               	incf	___awdiv@quotient+1,f
  5209  0ED0                     l4888:	
  5210  0ED0  0823               	movf	___awdiv@quotient+1,w
  5211  0ED1  00F4               	movwf	?___awdiv+1
  5212  0ED2  0822               	movf	___awdiv@quotient,w
  5213  0ED3  00F3               	movwf	?___awdiv
  5214  0ED4  0008               	return
  5215  0ED5                     __end_of___awdiv:	
  5216                           
  5217                           	psect	text17
  5218  0D1E                     __ptext17:	
  5219 ;; *************** function _temperature_display *****************
  5220 ;; Defined at:
  5221 ;;		line 316 in file "mcc_generated_files/max31856.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:   10
  5242 ;; This function calls:
  5243 ;;		_Tc_Display
  5244 ;;		_err_Display
  5245 ;;		_maxim_31856_write_register
  5246 ;;		_maxim_clear_fault_status
  5247 ;;		_tc_temperature_trans
  5248 ;; This function is called by:
  5249 ;;		_temperature_process
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           
  5254                           ;psect for function _temperature_display
  5255  0D1E                     _temperature_display:	
  5256                           
  5257                           ;max31856.c: 318: if(uch_sr==(uint8_t)0x00)
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in _temperature_display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5261  0D1E  0021               	movlb	1	; select bank1
  5262  0D1F  0843               	movf	_uch_sr^(0+128),w
  5263  0D20  1D03               	btfss	3,2
  5264  0D21  2D37               	goto	l4966
  5265                           
  5266                           ;max31856.c: 319: {
  5267                           ;max31856.c: 320: tc_temperature_trans();
  5268  0D22  3180  203F  318D   	fcall	_tc_temperature_trans
  5269                           
  5270                           ;max31856.c: 321: Tc_Display();
  5271  0D25  3183  23A9  318D   	fcall	_Tc_Display
  5272                           
  5273                           ;max31856.c: 322: if(time_count == 1)
  5274  0D28  0020               	movlb	0	; select bank0
  5275  0D29  036D               	decf	_time_count,w
  5276  0D2A  1D03               	btfss	3,2
  5277  0D2B  2D2F               	goto	l4962
  5278                           
  5279                           ;max31856.c: 323: {
  5280                           ;max31856.c: 324: CH1_state = 0;
  5281  0D2C  0021               	movlb	1	; select bank1
  5282  0D2D  01B4               	clrf	_CH1_state^(0+128)
  5283                           
  5284                           ;max31856.c: 325: }
  5285  0D2E  0008               	return
  5286  0D2F                     l4962:	
  5287                           
  5288                           ;max31856.c: 326: else if(time_count == 3)
  5289  0D2F  3003               	movlw	3
  5290  0D30  0020               	movlb	0	; select bank0
  5291  0D31  066D               	xorwf	_time_count,w
  5292  0D32  1D03               	btfss	3,2
  5293  0D33  0008               	return
  5294                           
  5295                           ;max31856.c: 327: {
  5296                           ;max31856.c: 328: CH2_state = 0;
  5297  0D34  0021               	movlb	1	; select bank1
  5298  0D35  01B5               	clrf	_CH2_state^(0+128)
  5299                           
  5300                           ;max31856.c: 329: }
  5301                           ;max31856.c: 330: }
  5302  0D36  0008               	return
  5303  0D37                     l4966:	
  5304                           
  5305                           ;max31856.c: 331: else
  5306                           ;max31856.c: 332: {
  5307                           ;max31856.c: 333: if(time_count == 1)
  5308  0D37  0020               	movlb	0	; select bank0
  5309  0D38  036D               	decf	_time_count,w
  5310  0D39  1D03               	btfss	3,2
  5311  0D3A  2D3F               	goto	l4970
  5312                           
  5313                           ;max31856.c: 334: {
  5314                           ;max31856.c: 335: CH1_state = 1;
  5315  0D3B  0021               	movlb	1	; select bank1
  5316  0D3C  01B4               	clrf	_CH1_state^(0+128)
  5317  0D3D  0AB4               	incf	_CH1_state^(0+128),f
  5318                           
  5319                           ;max31856.c: 336: }
  5320  0D3E  2D47               	goto	l4974
  5321  0D3F                     l4970:	
  5322                           
  5323                           ;max31856.c: 337: else if(time_count == 3)
  5324  0D3F  3003               	movlw	3
  5325  0D40  0020               	movlb	0	; select bank0
  5326  0D41  066D               	xorwf	_time_count,w
  5327  0D42  1D03               	btfss	3,2
  5328  0D43  2D47               	goto	l4974
  5329                           
  5330                           ;max31856.c: 338: {
  5331                           ;max31856.c: 339: CH2_state = 1;
  5332  0D44  0021               	movlb	1	; select bank1
  5333  0D45  01B5               	clrf	_CH2_state^(0+128)
  5334  0D46  0AB5               	incf	_CH2_state^(0+128),f
  5335  0D47                     l4974:	
  5336                           
  5337                           ;max31856.c: 340: }
  5338                           ;max31856.c: 341: err_Display();
  5339  0D47  318A  22F5  318D   	fcall	_err_Display
  5340                           
  5341                           ;max31856.c: 342: maxim_31856_write_register(0x82, 0xFF);
  5342  0D4A  30FF               	movlw	255
  5343  0D4B  0020               	movlb	0	; select bank0
  5344  0D4C  00DB               	movwf	??_temperature_display
  5345  0D4D  085B               	movf	??_temperature_display,w
  5346  0D4E  00F4               	movwf	maxim_31856_write_register@uch_register_value
  5347  0D4F  3082               	movlw	130
  5348  0D50  3188  206E  318D   	fcall	_maxim_31856_write_register
  5349                           
  5350                           ;max31856.c: 343: maxim_clear_fault_status();
  5351  0D53  3188  207B  318D   	fcall	_maxim_clear_fault_status
  5352                           
  5353                           ;max31856.c: 344: maxim_31856_write_register(0x82, 0x00);
  5354  0D56  01F4               	clrf	maxim_31856_write_register@uch_register_value
  5355  0D57  3082               	movlw	130
  5356  0D58  3188  206E         	fcall	_maxim_31856_write_register
  5357  0D5A  0008               	return
  5358  0D5B                     __end_of_temperature_display:	
  5359                           
  5360                           	psect	text18
  5361  003F                     __ptext18:	
  5362 ;; *************** function _tc_temperature_trans *****************
  5363 ;; Defined at:
  5364 ;;		line 168 in file "mcc_generated_files/max31856.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  temperature_    2   57[BANK0 ] unsigned int 
  5369 ;;  var_time        2   55[BANK0 ] unsigned int 
  5370 ;;  temperature_    2   53[BANK0 ] unsigned int 
  5371 ;;  temperature_    2   51[BANK0 ] unsigned int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;Total ram usage:       12 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    9
  5388 ;; This function calls:
  5389 ;;		_Calculate_Time
  5390 ;;		_Save_Write_word
  5391 ;; This function is called by:
  5392 ;;		_temperature_display
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _tc_temperature_trans
  5398  003F                     _tc_temperature_trans:	
  5399                           
  5400                           ;max31856.c: 170: unsigned int temperature_absolute = 0;
  5401                           
  5402                           ;incstack = 0
  5403                           ; Regs used in _tc_temperature_trans: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5404  003F  0020               	movlb	0	; select bank0
  5405  0040  01D5               	clrf	tc_temperature_trans@temperature_absolute
  5406  0041  01D6               	clrf	tc_temperature_trans@temperature_absolute+1
  5407                           
  5408                           ;max31856.c: 171: unsigned int temperature_temp = 0;
  5409  0042  01D9               	clrf	tc_temperature_trans@temperature_temp
  5410  0043  01DA               	clrf	tc_temperature_trans@temperature_temp+1
  5411                           
  5412                           ;max31856.c: 172: unsigned int temperature_back = 0;
  5413  0044  01D3               	clrf	tc_temperature_trans@temperature_back
  5414  0045  01D4               	clrf	tc_temperature_trans@temperature_back+1
  5415                           
  5416                           ;max31856.c: 173: unsigned int var_time=0;
  5417  0046  01D7               	clrf	tc_temperature_trans@var_time
  5418  0047  01D8               	clrf	tc_temperature_trans@var_time+1
  5419                           
  5420                           ;max31856.c: 174: temperature_value = 0;
  5421  0048  3000               	movlw	0
  5422  0049  00E8               	movwf	_temperature_value+3
  5423  004A  3000               	movlw	0
  5424  004B  00E7               	movwf	_temperature_value+2
  5425  004C  3000               	movlw	0
  5426  004D  00E6               	movwf	_temperature_value+1
  5427  004E  3000               	movlw	0
  5428  004F  00E5               	movwf	_temperature_value
  5429                           
  5430                           ;max31856.c: 175: temperature_value = (((uch_ltcbh&0x3f)<<8) | (uch_ltcbm) )>>1;
  5431  0050  303F               	movlw	63
  5432  0051  0021               	movlb	1	; select bank1
  5433  0052  053F               	andwf	_uch_ltcbh^(0+128),w
  5434  0053  0020               	movlb	0	; select bank0
  5435  0054  00CF               	movwf	??_tc_temperature_trans
  5436  0055  084F               	movf	??_tc_temperature_trans,w
  5437  0056  00D1               	movwf	??_tc_temperature_trans+2
  5438  0057  0021               	movlb	1	; select bank1
  5439  0058  0841               	movf	_uch_ltcbm^(0+128),w
  5440  0059  0020               	movlb	0	; select bank0
  5441  005A  00D0               	movwf	??_tc_temperature_trans+1
  5442  005B  0D51               	rlf	??_tc_temperature_trans+2,w
  5443  005C  0CD1               	rrf	??_tc_temperature_trans+2,f
  5444  005D  0CD0               	rrf	??_tc_temperature_trans+1,f
  5445  005E  0850               	movf	??_tc_temperature_trans+1,w
  5446  005F  00E5               	movwf	_temperature_value
  5447  0060  0851               	movf	??_tc_temperature_trans+2,w
  5448  0061  00E6               	movwf	_temperature_value+1
  5449  0062  0D89               	rlf	9,f
  5450  0063  3B89               	subwfb	9,f
  5451  0064  0989               	comf	9,f
  5452  0065  00E7               	movwf	_temperature_value+2
  5453  0066  00E8               	movwf	_temperature_value+3
  5454                           
  5455                           ;max31856.c: 176: if(uch_ltcbh & 0x80) temperature_value |=0x2000;
  5456  0067  0021               	movlb	1	; select bank1
  5457  0068  1FBF               	btfss	_uch_ltcbh^(0+128),7
  5458  0069  286C               	goto	l4676
  5459  006A  0020               	movlb	0	; select bank0
  5460  006B  16E6               	bsf	_temperature_value+1,5
  5461  006C                     l4676:	
  5462                           
  5463                           ;max31856.c: 177: temperature_temp = temperature_value;
  5464  006C  0020               	movlb	0	; select bank0
  5465  006D  0866               	movf	_temperature_value+1,w
  5466  006E  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5467  006F  0865               	movf	_temperature_value,w
  5468  0070  00D9               	movwf	tc_temperature_trans@temperature_temp
  5469                           
  5470                           ;max31856.c: 180: if(time_count == 1 && Record_flag == 1)
  5471  0071  036D               	decf	_time_count,w
  5472  0072  1D03               	btfss	3,2
  5473  0073  2901               	goto	l4730
  5474  0074  036B               	decf	_Record_flag,w
  5475  0075  1D03               	btfss	3,2
  5476  0076  2901               	goto	l4730
  5477                           
  5478                           ;max31856.c: 181: {
  5479                           ;max31856.c: 182: temperature_back = CH1_temperature;
  5480  0077  086A               	movf	_CH1_temperature+1,w
  5481  0078  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5482  0079  0869               	movf	_CH1_temperature,w
  5483  007A  00D3               	movwf	tc_temperature_trans@temperature_back
  5484                           
  5485                           ;max31856.c: 183: if( CH1_temperature & 0x2000 != temperature_temp & 0x2000)
  5486  007B  3020               	movlw	32
  5487  007C  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5488  007D  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5489  007E  1903               	btfsc	3,2
  5490  007F  2882               	goto	u4070
  5491  0080  3001               	movlw	1
  5492  0081  2883               	goto	u4080
  5493  0082                     u4070:	
  5494  0082  3000               	movlw	0
  5495  0083                     u4080:	
  5496  0083  00CF               	movwf	??_tc_temperature_trans
  5497  0084  01D0               	clrf	??_tc_temperature_trans+1
  5498  0085  0869               	movf	_CH1_temperature,w
  5499  0086  054F               	andwf	??_tc_temperature_trans,w
  5500  0087  00D1               	movwf	??_tc_temperature_trans+2
  5501  0088  086A               	movf	_CH1_temperature+1,w
  5502  0089  0550               	andwf	??_tc_temperature_trans+1,w
  5503  008A  00D2               	movwf	??_tc_temperature_trans+3
  5504  008B  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5505  008C  28D3               	goto	L6
  5506                           
  5507                           ;max31856.c: 196: else
  5508                           ;max31856.c: 197: {
  5509                           ;max31856.c: 198: if(CH1_temperature & 0x2000) CH1_temperature=0x3FFF-CH1_temperature + 
      +                          1 ;
  5510                           
  5511                           ;max31856.c: 195: }
  5512                           
  5513                           ;max31856.c: 194: CH1_temperature = temperature_value;
  5514                           
  5515                           ;max31856.c: 193: Cur_temperature_time_ch1 = 0;
  5516                           
  5517                           ;max31856.c: 192: Save_Write_word(temperature_value);
  5518                           
  5519                           ;max31856.c: 191: Save_Write_word(var_time);
  5520                           
  5521                           ;max31856.c: 189: var_time |= 0x2000;
  5522                           
  5523                           ;max31856.c: 187: if(CH1_state == 1) var_time |= 0x400;
  5524                           
  5525                           ;max31856.c: 186: var_time |= 0x100;
  5526                           
  5527                           ;max31856.c: 184: {
  5528                           ;max31856.c: 185: var_time = Calculate_Time();
  5529  008D  1EEA               	btfss	_CH1_temperature+1,5
  5530  008E  289C               	goto	l4702
  5531  008F  0969               	comf	_CH1_temperature,w
  5532  0090  00CF               	movwf	??_tc_temperature_trans
  5533  0091  096A               	comf	_CH1_temperature+1,w
  5534  0092  00D0               	movwf	??_tc_temperature_trans+1
  5535  0093  0ACF               	incf	??_tc_temperature_trans,f
  5536  0094  1903               	skipnz
  5537  0095  0AD0               	incf	??_tc_temperature_trans+1,f
  5538  0096  084F               	movf	??_tc_temperature_trans,w
  5539  0097  3E00               	addlw	0
  5540  0098  00E9               	movwf	_CH1_temperature
  5541  0099  3040               	movlw	64
  5542  009A  3D50               	addwfc	??_tc_temperature_trans+1,w
  5543  009B  00EA               	movwf	_CH1_temperature+1
  5544  009C                     l4702:	
  5545                           
  5546                           ;max31856.c: 199: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5547  009C  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  5548  009D  28AB               	goto	l4706
  5549  009E  0959               	comf	tc_temperature_trans@temperature_temp,w
  5550  009F  00CF               	movwf	??_tc_temperature_trans
  5551  00A0  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5552  00A1  00D0               	movwf	??_tc_temperature_trans+1
  5553  00A2  0ACF               	incf	??_tc_temperature_trans,f
  5554  00A3  1903               	skipnz
  5555  00A4  0AD0               	incf	??_tc_temperature_trans+1,f
  5556  00A5  084F               	movf	??_tc_temperature_trans,w
  5557  00A6  3E00               	addlw	0
  5558  00A7  00D9               	movwf	tc_temperature_trans@temperature_temp
  5559  00A8  3040               	movlw	64
  5560  00A9  3D50               	addwfc	??_tc_temperature_trans+1,w
  5561  00AA  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5562  00AB                     l4706:	
  5563                           
  5564                           ;max31856.c: 200: if( temperature_temp > CH1_temperature ) temperature_absolute = temper
      +                          ature_temp - CH1_temperature;
  5565  00AB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5566  00AC  026A               	subwf	_CH1_temperature+1,w
  5567  00AD  1D03               	skipz
  5568  00AE  28B1               	goto	u4135
  5569  00AF  0859               	movf	tc_temperature_trans@temperature_temp,w
  5570  00B0  0269               	subwf	_CH1_temperature,w
  5571  00B1                     u4135:	
  5572  00B1  1803               	skipnc
  5573  00B2  28BF               	goto	l4710
  5574  00B3  0969               	comf	_CH1_temperature,w
  5575  00B4  00CF               	movwf	??_tc_temperature_trans
  5576  00B5  096A               	comf	_CH1_temperature+1,w
  5577  00B6  00D0               	movwf	??_tc_temperature_trans+1
  5578  00B7  0ACF               	incf	??_tc_temperature_trans,f
  5579  00B8  1903               	skipnz
  5580  00B9  0AD0               	incf	??_tc_temperature_trans+1,f
  5581  00BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  5582  00BB  074F               	addwf	??_tc_temperature_trans,w
  5583  00BC  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5584  00BD  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5585  00BE  28CA               	goto	L2
  5586  00BF                     l4710:	
  5587                           
  5588                           ;max31856.c: 201: else temperature_absolute = CH1_temperature - temperature_temp;
  5589  00BF  0959               	comf	tc_temperature_trans@temperature_temp,w
  5590  00C0  00CF               	movwf	??_tc_temperature_trans
  5591  00C1  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5592  00C2  00D0               	movwf	??_tc_temperature_trans+1
  5593  00C3  0ACF               	incf	??_tc_temperature_trans,f
  5594  00C4  1903               	skipnz
  5595  00C5  0AD0               	incf	??_tc_temperature_trans+1,f
  5596  00C6  0869               	movf	_CH1_temperature,w
  5597  00C7  074F               	addwf	??_tc_temperature_trans,w
  5598  00C8  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5599  00C9  086A               	movf	_CH1_temperature+1,w
  5600  00CA                     L2:	
  5601  00CA  3D50               	addwfc	??_tc_temperature_trans+1,w
  5602  00CB  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  5603                           
  5604                           ;max31856.c: 202: if( temperature_absolute > 4)
  5605  00CC  3000               	movlw	0
  5606  00CD  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5607  00CE  3005               	movlw	5
  5608  00CF  1903               	skipnz
  5609  00D0  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  5610  00D1  1C03               	skipc
  5611  00D2  28FC               	goto	l4728
  5612  00D3                     L6:	
  5613                           
  5614                           ;max31856.c: 203: {
  5615                           ;max31856.c: 204: var_time = Calculate_Time();
  5616  00D3  3182  220B  3180   	fcall	_Calculate_Time
  5617  00D6  0020               	movlb	0	; select bank0
  5618  00D7  00CF               	movwf	??_tc_temperature_trans
  5619  00D8  01D0               	clrf	??_tc_temperature_trans+1
  5620  00D9  084F               	movf	??_tc_temperature_trans,w
  5621  00DA  00D7               	movwf	tc_temperature_trans@var_time
  5622  00DB  0850               	movf	??_tc_temperature_trans+1,w
  5623  00DC  00D8               	movwf	tc_temperature_trans@var_time+1
  5624                           
  5625                           ;max31856.c: 205: var_time |= 0x100;
  5626  00DD  1458               	bsf	tc_temperature_trans@var_time+1,0
  5627                           
  5628                           ;max31856.c: 206: if(CH1_state == 1) var_time |= 0x400;
  5629  00DE  0021               	movlb	1	; select bank1
  5630  00DF  0334               	decf	_CH1_state^(0+128),w
  5631  00E0  1D03               	btfss	3,2
  5632  00E1  28E4               	goto	l516
  5633  00E2  0020               	movlb	0	; select bank0
  5634  00E3  1558               	bsf	tc_temperature_trans@var_time+1,2
  5635  00E4                     l516:	
  5636                           
  5637                           ;max31856.c: 208: var_time |= 0x2000;
  5638  00E4  0020               	movlb	0	; select bank0
  5639  00E5  16D8               	bsf	tc_temperature_trans@var_time+1,5
  5640                           
  5641                           ;max31856.c: 210: Save_Write_word(var_time);
  5642  00E6  0858               	movf	tc_temperature_trans@var_time+1,w
  5643  00E7  00B4               	movwf	Save_Write_word@data+1
  5644  00E8  0857               	movf	tc_temperature_trans@var_time,w
  5645  00E9  00B3               	movwf	Save_Write_word@data
  5646  00EA  318C  24AD  3180   	fcall	_Save_Write_word
  5647                           
  5648                           ;max31856.c: 211: Save_Write_word(temperature_value);
  5649  00ED  0020               	movlb	0	; select bank0
  5650  00EE  0866               	movf	_temperature_value+1,w
  5651  00EF  00B4               	movwf	Save_Write_word@data+1
  5652  00F0  0865               	movf	_temperature_value,w
  5653  00F1  00B3               	movwf	Save_Write_word@data
  5654  00F2  318C  24AD  3180   	fcall	_Save_Write_word
  5655                           
  5656                           ;max31856.c: 212: Cur_temperature_time_ch1 = 0;
  5657  00F5  0021               	movlb	1	; select bank1
  5658  00F6  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  5659                           
  5660                           ;max31856.c: 213: CH1_temperature = temperature_value;
  5661  00F7  0020               	movlb	0	; select bank0
  5662  00F8  0866               	movf	_temperature_value+1,w
  5663  00F9  00EA               	movwf	_CH1_temperature+1
  5664  00FA  0865               	movf	_temperature_value,w
  5665  00FB  28FF               	goto	L3
  5666  00FC                     l4728:	
  5667                           ;max31856.c: 214: }
  5668                           
  5669                           
  5670                           ;max31856.c: 215: else
  5671                           ;max31856.c: 216: {
  5672                           ;max31856.c: 217: CH1_temperature = temperature_back;
  5673  00FC  0854               	movf	tc_temperature_trans@temperature_back+1,w
  5674  00FD  00EA               	movwf	_CH1_temperature+1
  5675  00FE  0853               	movf	tc_temperature_trans@temperature_back,w
  5676  00FF                     L3:	
  5677  00FF  00E9               	movwf	_CH1_temperature
  5678                           
  5679                           ;max31856.c: 218: }
  5680                           ;max31856.c: 219: }
  5681                           ;max31856.c: 221: }
  5682  0100  2991               	goto	l518
  5683  0101                     l4730:	
  5684                           
  5685                           ;max31856.c: 222: else if( time_count == 3 && Record_flag == 1)
  5686  0101  3003               	movlw	3
  5687  0102  066D               	xorwf	_time_count,w
  5688  0103  1D03               	btfss	3,2
  5689  0104  2991               	goto	l518
  5690  0105  036B               	decf	_Record_flag,w
  5691  0106  1D03               	btfss	3,2
  5692  0107  2991               	goto	l518
  5693                           
  5694                           ;max31856.c: 223: {
  5695                           ;max31856.c: 224: temperature_back = CH2_temperature;
  5696  0108  0879               	movf	_CH2_temperature+1,w
  5697  0109  00D4               	movwf	tc_temperature_trans@temperature_back+1
  5698  010A  0878               	movf	_CH2_temperature,w
  5699  010B  00D3               	movwf	tc_temperature_trans@temperature_back
  5700                           
  5701                           ;max31856.c: 225: if( CH2_temperature & 0x2000 != temperature_temp & 0x2000)
  5702  010C  3020               	movlw	32
  5703  010D  065A               	xorwf	tc_temperature_trans@temperature_temp+1,w
  5704  010E  0459               	iorwf	tc_temperature_trans@temperature_temp,w
  5705  010F  1903               	btfsc	3,2
  5706  0110  2913               	goto	u4180
  5707  0111  3001               	movlw	1
  5708  0112  2914               	goto	u4190
  5709  0113                     u4180:	
  5710  0113  3000               	movlw	0
  5711  0114                     u4190:	
  5712  0114  00CF               	movwf	??_tc_temperature_trans
  5713  0115  01D0               	clrf	??_tc_temperature_trans+1
  5714  0116  0878               	movf	_CH2_temperature,w
  5715  0117  054F               	andwf	??_tc_temperature_trans,w
  5716  0118  00D1               	movwf	??_tc_temperature_trans+2
  5717  0119  0879               	movf	_CH2_temperature+1,w
  5718  011A  0550               	andwf	??_tc_temperature_trans+1,w
  5719  011B  00D2               	movwf	??_tc_temperature_trans+3
  5720  011C  1AD2               	btfsc	??_tc_temperature_trans+3,5
  5721  011D  2964               	goto	L7
  5722                           
  5723                           ;max31856.c: 238: else
  5724                           ;max31856.c: 239: {
  5725                           ;max31856.c: 240: if(CH2_temperature & 0x2000) CH2_temperature=0x3FFF-CH2_temperature + 
      +                          1 ;
  5726                           
  5727                           ;max31856.c: 237: }
  5728                           
  5729                           ;max31856.c: 236: CH2_temperature = temperature_value;
  5730                           
  5731                           ;max31856.c: 235: Cur_temperature_time_ch2 = 0;
  5732                           
  5733                           ;max31856.c: 234: Save_Write_word(temperature_value);
  5734                           
  5735                           ;max31856.c: 233: Save_Write_word(var_time);
  5736                           
  5737                           ;max31856.c: 231: var_time |= 0x2000;
  5738                           
  5739                           ;max31856.c: 229: if(CH2_state == 1) var_time |= 0x800;
  5740                           
  5741                           ;max31856.c: 228: var_time |= 0x200;
  5742                           
  5743                           ;max31856.c: 226: {
  5744                           ;max31856.c: 227: var_time = Calculate_Time();
  5745  011E  1EF9               	btfss	_CH2_temperature+1,5
  5746  011F  292D               	goto	l4754
  5747  0120  0978               	comf	_CH2_temperature,w
  5748  0121  00CF               	movwf	??_tc_temperature_trans
  5749  0122  0979               	comf	_CH2_temperature+1,w
  5750  0123  00D0               	movwf	??_tc_temperature_trans+1
  5751  0124  0ACF               	incf	??_tc_temperature_trans,f
  5752  0125  1903               	skipnz
  5753  0126  0AD0               	incf	??_tc_temperature_trans+1,f
  5754  0127  084F               	movf	??_tc_temperature_trans,w
  5755  0128  3E00               	addlw	0
  5756  0129  00F8               	movwf	_CH2_temperature
  5757  012A  3040               	movlw	64
  5758  012B  3D50               	addwfc	??_tc_temperature_trans+1,w
  5759  012C  00F9               	movwf	_CH2_temperature+1
  5760  012D                     l4754:	
  5761                           
  5762                           ;max31856.c: 241: if(temperature_temp & 0x2000) temperature_temp=0x3FFF-temperature_temp
      +                           + 1 ;
  5763  012D  1EDA               	btfss	tc_temperature_trans@temperature_temp+1,5
  5764  012E  293C               	goto	l4758
  5765  012F  0959               	comf	tc_temperature_trans@temperature_temp,w
  5766  0130  00CF               	movwf	??_tc_temperature_trans
  5767  0131  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5768  0132  00D0               	movwf	??_tc_temperature_trans+1
  5769  0133  0ACF               	incf	??_tc_temperature_trans,f
  5770  0134  1903               	skipnz
  5771  0135  0AD0               	incf	??_tc_temperature_trans+1,f
  5772  0136  084F               	movf	??_tc_temperature_trans,w
  5773  0137  3E00               	addlw	0
  5774  0138  00D9               	movwf	tc_temperature_trans@temperature_temp
  5775  0139  3040               	movlw	64
  5776  013A  3D50               	addwfc	??_tc_temperature_trans+1,w
  5777  013B  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5778  013C                     l4758:	
  5779                           
  5780                           ;max31856.c: 242: if( temperature_temp > CH2_temperature ) temperature_absolute = temper
      +                          ature_temp - CH2_temperature;
  5781  013C  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5782  013D  0279               	subwf	_CH2_temperature+1,w
  5783  013E  1D03               	skipz
  5784  013F  2942               	goto	u4245
  5785  0140  0859               	movf	tc_temperature_trans@temperature_temp,w
  5786  0141  0278               	subwf	_CH2_temperature,w
  5787  0142                     u4245:	
  5788  0142  1803               	skipnc
  5789  0143  2950               	goto	l4762
  5790  0144  0978               	comf	_CH2_temperature,w
  5791  0145  00CF               	movwf	??_tc_temperature_trans
  5792  0146  0979               	comf	_CH2_temperature+1,w
  5793  0147  00D0               	movwf	??_tc_temperature_trans+1
  5794  0148  0ACF               	incf	??_tc_temperature_trans,f
  5795  0149  1903               	skipnz
  5796  014A  0AD0               	incf	??_tc_temperature_trans+1,f
  5797  014B  0859               	movf	tc_temperature_trans@temperature_temp,w
  5798  014C  074F               	addwf	??_tc_temperature_trans,w
  5799  014D  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5800  014E  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5801  014F  295B               	goto	L4
  5802  0150                     l4762:	
  5803                           
  5804                           ;max31856.c: 243: else temperature_absolute = CH2_temperature - temperature_temp;
  5805  0150  0959               	comf	tc_temperature_trans@temperature_temp,w
  5806  0151  00CF               	movwf	??_tc_temperature_trans
  5807  0152  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5808  0153  00D0               	movwf	??_tc_temperature_trans+1
  5809  0154  0ACF               	incf	??_tc_temperature_trans,f
  5810  0155  1903               	skipnz
  5811  0156  0AD0               	incf	??_tc_temperature_trans+1,f
  5812  0157  0878               	movf	_CH2_temperature,w
  5813  0158  074F               	addwf	??_tc_temperature_trans,w
  5814  0159  00D5               	movwf	tc_temperature_trans@temperature_absolute
  5815  015A  0879               	movf	_CH2_temperature+1,w
  5816  015B                     L4:	
  5817  015B  3D50               	addwfc	??_tc_temperature_trans+1,w
  5818  015C  00D6               	movwf	tc_temperature_trans@temperature_absolute+1
  5819                           
  5820                           ;max31856.c: 244: if( temperature_absolute > 4)
  5821  015D  3000               	movlw	0
  5822  015E  0256               	subwf	tc_temperature_trans@temperature_absolute+1,w
  5823  015F  3005               	movlw	5
  5824  0160  1903               	skipnz
  5825  0161  0255               	subwf	tc_temperature_trans@temperature_absolute,w
  5826  0162  1C03               	skipc
  5827  0163  298D               	goto	l4780
  5828  0164                     L7:	
  5829                           
  5830                           ;max31856.c: 245: {
  5831                           ;max31856.c: 246: var_time = Calculate_Time();
  5832  0164  3182  220B  3180   	fcall	_Calculate_Time
  5833  0167  0020               	movlb	0	; select bank0
  5834  0168  00CF               	movwf	??_tc_temperature_trans
  5835  0169  01D0               	clrf	??_tc_temperature_trans+1
  5836  016A  084F               	movf	??_tc_temperature_trans,w
  5837  016B  00D7               	movwf	tc_temperature_trans@var_time
  5838  016C  0850               	movf	??_tc_temperature_trans+1,w
  5839  016D  00D8               	movwf	tc_temperature_trans@var_time+1
  5840                           
  5841                           ;max31856.c: 247: var_time |= 0x200;
  5842  016E  14D8               	bsf	tc_temperature_trans@var_time+1,1
  5843                           
  5844                           ;max31856.c: 248: if(CH2_state == 1) var_time |= 0x800;
  5845  016F  0021               	movlb	1	; select bank1
  5846  0170  0335               	decf	_CH2_state^(0+128),w
  5847  0171  1D03               	btfss	3,2
  5848  0172  2975               	goto	l528
  5849  0173  0020               	movlb	0	; select bank0
  5850  0174  15D8               	bsf	tc_temperature_trans@var_time+1,3
  5851  0175                     l528:	
  5852                           
  5853                           ;max31856.c: 250: var_time |= 0x2000;
  5854  0175  0020               	movlb	0	; select bank0
  5855  0176  16D8               	bsf	tc_temperature_trans@var_time+1,5
  5856                           
  5857                           ;max31856.c: 252: Save_Write_word(var_time);
  5858  0177  0858               	movf	tc_temperature_trans@var_time+1,w
  5859  0178  00B4               	movwf	Save_Write_word@data+1
  5860  0179  0857               	movf	tc_temperature_trans@var_time,w
  5861  017A  00B3               	movwf	Save_Write_word@data
  5862  017B  318C  24AD  3180   	fcall	_Save_Write_word
  5863                           
  5864                           ;max31856.c: 253: Save_Write_word(temperature_value);
  5865  017E  0020               	movlb	0	; select bank0
  5866  017F  0866               	movf	_temperature_value+1,w
  5867  0180  00B4               	movwf	Save_Write_word@data+1
  5868  0181  0865               	movf	_temperature_value,w
  5869  0182  00B3               	movwf	Save_Write_word@data
  5870  0183  318C  24AD  3180   	fcall	_Save_Write_word
  5871                           
  5872                           ;max31856.c: 254: Cur_temperature_time_ch2 = 0;
  5873  0186  0021               	movlb	1	; select bank1
  5874  0187  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  5875                           
  5876                           ;max31856.c: 255: CH2_temperature = temperature_value;
  5877  0188  0020               	movlb	0	; select bank0
  5878  0189  0866               	movf	_temperature_value+1,w
  5879  018A  00F9               	movwf	_CH2_temperature+1
  5880  018B  0865               	movf	_temperature_value,w
  5881  018C  2990               	goto	L5
  5882  018D                     l4780:	
  5883                           ;max31856.c: 256: }
  5884                           
  5885                           
  5886                           ;max31856.c: 257: else
  5887                           ;max31856.c: 258: {
  5888                           ;max31856.c: 259: CH2_temperature = temperature_back;
  5889  018D  0854               	movf	tc_temperature_trans@temperature_back+1,w
  5890  018E  00F9               	movwf	_CH2_temperature+1
  5891  018F  0853               	movf	tc_temperature_trans@temperature_back,w
  5892  0190                     L5:	
  5893  0190  00F8               	movwf	_CH2_temperature
  5894  0191                     l518:	
  5895                           
  5896                           ;max31856.c: 260: }
  5897                           ;max31856.c: 261: }
  5898                           ;max31856.c: 263: }
  5899                           ;max31856.c: 265: temperature_temp = temperature_value;
  5900  0191  0866               	movf	_temperature_value+1,w
  5901  0192  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5902  0193  0865               	movf	_temperature_value,w
  5903  0194  00D9               	movwf	tc_temperature_trans@temperature_temp
  5904                           
  5905                           ;max31856.c: 266: if((uch_ltcbh&0x80)==0x80)
  5906  0195  0021               	movlb	1	; select bank1
  5907  0196  1FBF               	btfss	_uch_ltcbh^(0+128),7
  5908  0197  29D8               	goto	l4798
  5909                           
  5910                           ;max31856.c: 267: {
  5911                           ;max31856.c: 268: temperature_sign = 1;
  5912  0198  01BA               	clrf	_temperature_sign^(0+128)
  5913  0199  0ABA               	incf	_temperature_sign^(0+128),f
  5914                           
  5915                           ;max31856.c: 269: temperature_temp=0x3FFF-temperature_temp + 1 ;
  5916  019A  0020               	movlb	0	; select bank0
  5917  019B  0959               	comf	tc_temperature_trans@temperature_temp,w
  5918  019C  00CF               	movwf	??_tc_temperature_trans
  5919  019D  095A               	comf	tc_temperature_trans@temperature_temp+1,w
  5920  019E  00D0               	movwf	??_tc_temperature_trans+1
  5921  019F  0ACF               	incf	??_tc_temperature_trans,f
  5922  01A0  1903               	skipnz
  5923  01A1  0AD0               	incf	??_tc_temperature_trans+1,f
  5924  01A2  084F               	movf	??_tc_temperature_trans,w
  5925  01A3  3E00               	addlw	0
  5926  01A4  00D9               	movwf	tc_temperature_trans@temperature_temp
  5927  01A5  3040               	movlw	64
  5928  01A6  3D50               	addwfc	??_tc_temperature_trans+1,w
  5929  01A7  00DA               	movwf	tc_temperature_trans@temperature_temp+1
  5930                           
  5931                           ;max31856.c: 271: temperature_int = temperature_temp>>3;
  5932  01A8  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  5933  01A9  00D0               	movwf	??_tc_temperature_trans+1
  5934  01AA  0859               	movf	tc_temperature_trans@temperature_temp,w
  5935  01AB  00CF               	movwf	??_tc_temperature_trans
  5936  01AC  36D0               	lsrf	??_tc_temperature_trans+1,f
  5937  01AD  0CCF               	rrf	??_tc_temperature_trans,f
  5938  01AE  36D0               	lsrf	??_tc_temperature_trans+1,f
  5939  01AF  0CCF               	rrf	??_tc_temperature_trans,f
  5940  01B0  36D0               	lsrf	??_tc_temperature_trans+1,f
  5941  01B1  0CCF               	rrf	??_tc_temperature_trans,f
  5942  01B2  084F               	movf	??_tc_temperature_trans,w
  5943  01B3  0021               	movlb	1	; select bank1
  5944  01B4  00B2               	movwf	_temperature_int^(0+128)
  5945  01B5  0020               	movlb	0	; select bank0
  5946  01B6  0850               	movf	??_tc_temperature_trans+1,w
  5947  01B7  0021               	movlb	1	; select bank1
  5948  01B8  00B3               	movwf	(_temperature_int+1)^(0+128)
  5949                           
  5950                           ;max31856.c: 272: temperature_decimal = temperature_temp & 0x07;
  5951  01B9  0020               	movlb	0	; select bank0
  5952  01BA  0859               	movf	tc_temperature_trans@temperature_temp,w
  5953  01BB  3907               	andlw	7
  5954  01BC  00CF               	movwf	??_tc_temperature_trans
  5955  01BD  084F               	movf	??_tc_temperature_trans,w
  5956  01BE  00EC               	movwf	_temperature_decimal
  5957                           
  5958                           ;max31856.c: 273: if(temperature_decimal > 3) temperature_decimal++;
  5959  01BF  3004               	movlw	4
  5960  01C0  026C               	subwf	_temperature_decimal,w
  5961  01C1  1C03               	skipc
  5962  01C2  29C7               	goto	l531
  5963  01C3  3001               	movlw	1
  5964  01C4  00CF               	movwf	??_tc_temperature_trans
  5965  01C5  084F               	movf	??_tc_temperature_trans,w
  5966  01C6  07EC               	addwf	_temperature_decimal,f
  5967  01C7                     l531:	
  5968                           
  5969                           ;max31856.c: 274: if(( temperature_decimal == 3 || temperature_decimal == 8 ) && (temper
      +                          ature_int & 0x01)) temperature_decimal++;
  5970  01C7  3003               	movlw	3
  5971  01C8  066C               	xorwf	_temperature_decimal,w
  5972  01C9  1903               	btfsc	3,2
  5973  01CA  29CF               	goto	l534
  5974  01CB  3008               	movlw	8
  5975  01CC  066C               	xorwf	_temperature_decimal,w
  5976  01CD  1D03               	btfss	3,2
  5977  01CE  0008               	return
  5978  01CF                     l534:	
  5979  01CF  0021               	movlb	1	; select bank1
  5980  01D0  1C32               	btfss	_temperature_int^(0+128),0
  5981  01D1  0008               	return
  5982  01D2  3001               	movlw	1
  5983  01D3  0020               	movlb	0	; select bank0
  5984  01D4  00CF               	movwf	??_tc_temperature_trans
  5985  01D5  084F               	movf	??_tc_temperature_trans,w
  5986  01D6  07EC               	addwf	_temperature_decimal,f
  5987                           
  5988                           ;max31856.c: 275: }
  5989  01D7  0008               	return
  5990  01D8                     l4798:	
  5991                           
  5992                           ;max31856.c: 276: else
  5993                           ;max31856.c: 277: {
  5994                           ;max31856.c: 278: temperature_sign = 0;
  5995  01D8  0021               	movlb	1	; select bank1
  5996  01D9  01BA               	clrf	_temperature_sign^(0+128)
  5997                           
  5998                           ;max31856.c: 279: temperature_int = temperature_temp>>3;
  5999  01DA  0020               	movlb	0	; select bank0
  6000  01DB  085A               	movf	tc_temperature_trans@temperature_temp+1,w
  6001  01DC  00D0               	movwf	??_tc_temperature_trans+1
  6002  01DD  0859               	movf	tc_temperature_trans@temperature_temp,w
  6003  01DE  00CF               	movwf	??_tc_temperature_trans
  6004  01DF  36D0               	lsrf	??_tc_temperature_trans+1,f
  6005  01E0  0CCF               	rrf	??_tc_temperature_trans,f
  6006  01E1  36D0               	lsrf	??_tc_temperature_trans+1,f
  6007  01E2  0CCF               	rrf	??_tc_temperature_trans,f
  6008  01E3  36D0               	lsrf	??_tc_temperature_trans+1,f
  6009  01E4  0CCF               	rrf	??_tc_temperature_trans,f
  6010  01E5  084F               	movf	??_tc_temperature_trans,w
  6011  01E6  0021               	movlb	1	; select bank1
  6012  01E7  00B2               	movwf	_temperature_int^(0+128)
  6013  01E8  0020               	movlb	0	; select bank0
  6014  01E9  0850               	movf	??_tc_temperature_trans+1,w
  6015  01EA  0021               	movlb	1	; select bank1
  6016  01EB  00B3               	movwf	(_temperature_int+1)^(0+128)
  6017                           
  6018                           ;max31856.c: 280: temperature_decimal = temperature_temp & 0x07;
  6019  01EC  0020               	movlb	0	; select bank0
  6020  01ED  0859               	movf	tc_temperature_trans@temperature_temp,w
  6021  01EE  3907               	andlw	7
  6022  01EF  00CF               	movwf	??_tc_temperature_trans
  6023  01F0  084F               	movf	??_tc_temperature_trans,w
  6024  01F1  00EC               	movwf	_temperature_decimal
  6025                           
  6026                           ;max31856.c: 281: if(temperature_decimal > 3) temperature_decimal++;
  6027  01F2  3004               	movlw	4
  6028  01F3  026C               	subwf	_temperature_decimal,w
  6029  01F4  1C03               	skipc
  6030  01F5  29FA               	goto	l536
  6031  01F6  3001               	movlw	1
  6032  01F7  00CF               	movwf	??_tc_temperature_trans
  6033  01F8  084F               	movf	??_tc_temperature_trans,w
  6034  01F9  07EC               	addwf	_temperature_decimal,f
  6035  01FA                     l536:	
  6036                           
  6037                           ;max31856.c: 282: if((temperature_decimal == 4 || temperature_decimal == 8) && (temperat
      +                          ure_int & 0x01)) temperature_decimal++;
  6038  01FA  3004               	movlw	4
  6039  01FB  066C               	xorwf	_temperature_decimal,w
  6040  01FC  1903               	btfsc	3,2
  6041  01FD  2A02               	goto	l539
  6042  01FE  3008               	movlw	8
  6043  01FF  066C               	xorwf	_temperature_decimal,w
  6044  0200  1D03               	btfss	3,2
  6045  0201  0008               	return
  6046  0202                     l539:	
  6047  0202  0021               	movlb	1	; select bank1
  6048  0203  1C32               	btfss	_temperature_int^(0+128),0
  6049  0204  0008               	return
  6050  0205  3001               	movlw	1
  6051  0206  0020               	movlb	0	; select bank0
  6052  0207  00CF               	movwf	??_tc_temperature_trans
  6053  0208  084F               	movf	??_tc_temperature_trans,w
  6054  0209  07EC               	addwf	_temperature_decimal,f
  6055  020A  0008               	return
  6056  020B                     __end_of_tc_temperature_trans:	
  6057                           
  6058                           	psect	text19
  6059  020B                     __ptext19:	
  6060 ;; *************** function _Calculate_Time *****************
  6061 ;; Defined at:
  6062 ;;		line 164 in file "mcc_generated_files/save.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  temp2           4   43[BANK0 ] unsigned long 
  6067 ;;  temp1           4   39[BANK0 ] unsigned long 
  6068 ;;  temp            4   35[BANK0 ] unsigned long 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      unsigned char 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;Total ram usage:       22 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    8
  6085 ;; This function calls:
  6086 ;;		_Bq32k_Rtc_Read_Time
  6087 ;;		_Save_Write_time
  6088 ;;		_Write_Flash_finish
  6089 ;;		_Write_Flash_head
  6090 ;;		___wmul
  6091 ;; This function is called by:
  6092 ;;		_tc_temperature_trans
  6093 ;;		_Save_process
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _Calculate_Time
  6099  020B                     _Calculate_Time:	
  6100                           
  6101                           ;save.c: 166: unsigned long temp = 0 ;
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in _Calculate_Time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6105  020B  3000               	movlw	0
  6106  020C  0020               	movlb	0	; select bank0
  6107  020D  00C6               	movwf	Calculate_Time@temp+3
  6108  020E  3000               	movlw	0
  6109  020F  00C5               	movwf	Calculate_Time@temp+2
  6110  0210  3000               	movlw	0
  6111  0211  00C4               	movwf	Calculate_Time@temp+1
  6112  0212  3000               	movlw	0
  6113  0213  00C3               	movwf	Calculate_Time@temp
  6114                           
  6115                           ;save.c: 167: unsigned long temp1 = 0 ;
  6116  0214  3000               	movlw	0
  6117  0215  00CA               	movwf	Calculate_Time@temp1+3
  6118  0216  3000               	movlw	0
  6119  0217  00C9               	movwf	Calculate_Time@temp1+2
  6120  0218  3000               	movlw	0
  6121  0219  00C8               	movwf	Calculate_Time@temp1+1
  6122  021A  3000               	movlw	0
  6123  021B  00C7               	movwf	Calculate_Time@temp1
  6124                           
  6125                           ;save.c: 168: unsigned long temp2 = 0 ;
  6126  021C  3000               	movlw	0
  6127  021D  00CE               	movwf	Calculate_Time@temp2+3
  6128  021E  3000               	movlw	0
  6129  021F  00CD               	movwf	Calculate_Time@temp2+2
  6130  0220  3000               	movlw	0
  6131  0221  00CC               	movwf	Calculate_Time@temp2+1
  6132  0222  3000               	movlw	0
  6133  0223  00CB               	movwf	Calculate_Time@temp2
  6134                           
  6135                           ;save.c: 169: Bq32k_Rtc_Read_Time(&rtc_tm);
  6136  0224  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  6137  0225  318F  2738  3182   	fcall	_Bq32k_Rtc_Read_Time
  6138                           
  6139                           ;save.c: 170: if( time_count == 1 )
  6140  0228  0020               	movlb	0	; select bank0
  6141  0229  036D               	decf	_time_count,w
  6142  022A  1D03               	btfss	3,2
  6143  022B  2AE0               	goto	l4566
  6144                           
  6145                           ;save.c: 171: {
  6146                           ;save.c: 172: if(rtc_tm.date != rtc_save_ch1.date)
  6147  022C  0021               	movlb	1	; select bank1
  6148  022D  085E               	movf	(_rtc_tm^(0+128)+4),w
  6149  022E  0650               	xorwf	(_rtc_save_ch1^(0+128)+4),w
  6150  022F  1D03               	btfss	3,2
  6151  0230  2AE9               	goto	l4570
  6152                           
  6153                           ;save.c: 184: else
  6154                           ;save.c: 185: {
  6155                           ;save.c: 186: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6156                           
  6157                           ;save.c: 183: }
  6158                           
  6159                           ;save.c: 182: time_count = 0;
  6160                           
  6161                           ;save.c: 179: Cur_temperature_time_ch2 = 0;
  6162                           
  6163                           ;save.c: 178: Cur_temperature_time_ch1 = 0;
  6164                           
  6165                           ;save.c: 177: Save_Write_time();
  6166                           
  6167                           ;save.c: 176: Write_Flash_head();
  6168                           
  6169                           ;save.c: 173: {
  6170                           ;save.c: 175: Write_Flash_finish();
  6171  0231  0021               	movlb	1	; select bank1
  6172  0232  085A               	movf	_rtc_tm^(0+128),w
  6173  0233  0020               	movlb	0	; select bank0
  6174  0234  00B9               	movwf	??_Calculate_Time
  6175  0235  01BA               	clrf	??_Calculate_Time+1
  6176  0236  0021               	movlb	1	; select bank1
  6177  0237  085C               	movf	(_rtc_tm^(0+128)+2),w
  6178  0238  0020               	movlb	0	; select bank0
  6179  0239  00BB               	movwf	??_Calculate_Time+2
  6180  023A  01BC               	clrf	??_Calculate_Time+3
  6181  023B  083B               	movf	??_Calculate_Time+2,w
  6182  023C  00F3               	movwf	___wmul@multiplier
  6183  023D  083C               	movf	??_Calculate_Time+3,w
  6184  023E  00F4               	movwf	___wmul@multiplier+1
  6185  023F  3010               	movlw	16
  6186  0240  00F5               	movwf	___wmul@multiplicand
  6187  0241  300E               	movlw	14
  6188  0242  00F6               	movwf	___wmul@multiplicand+1
  6189  0243  318A  2203  3182   	fcall	___wmul
  6190  0246  0873               	movf	?___wmul,w
  6191  0247  0020               	movlb	0	; select bank0
  6192  0248  00BD               	movwf	??_Calculate_Time+4
  6193  0249  0874               	movf	?___wmul+1,w
  6194  024A  00BE               	movwf	??_Calculate_Time+5
  6195  024B  0021               	movlb	1	; select bank1
  6196  024C  085B               	movf	(_rtc_tm^(0+128)+1),w
  6197  024D  0020               	movlb	0	; select bank0
  6198  024E  00BF               	movwf	??_Calculate_Time+6
  6199  024F  01C0               	clrf	??_Calculate_Time+7
  6200  0250  083F               	movf	??_Calculate_Time+6,w
  6201  0251  00F3               	movwf	___wmul@multiplier
  6202  0252  0840               	movf	??_Calculate_Time+7,w
  6203  0253  00F4               	movwf	___wmul@multiplier+1
  6204  0254  303C               	movlw	60
  6205  0255  00F5               	movwf	___wmul@multiplicand
  6206  0256  3000               	movlw	0
  6207  0257  00F6               	movwf	___wmul@multiplicand+1
  6208  0258  318A  2203  3182   	fcall	___wmul
  6209  025B  0873               	movf	?___wmul,w
  6210  025C  0020               	movlb	0	; select bank0
  6211  025D  073D               	addwf	??_Calculate_Time+4,w
  6212  025E  00C1               	movwf	??_Calculate_Time+8
  6213  025F  0874               	movf	?___wmul+1,w
  6214  0260  3D3E               	addwfc	??_Calculate_Time+5,w
  6215  0261  00C2               	movwf	??_Calculate_Time+9
  6216  0262  0839               	movf	??_Calculate_Time,w
  6217  0263  0741               	addwf	??_Calculate_Time+8,w
  6218  0264  00C7               	movwf	Calculate_Time@temp1
  6219  0265  083A               	movf	??_Calculate_Time+1,w
  6220  0266  3D42               	addwfc	??_Calculate_Time+9,w
  6221  0267  00C8               	movwf	Calculate_Time@temp1+1
  6222  0268  01C9               	clrf	Calculate_Time@temp1+2
  6223  0269  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6224  026A  03C9               	decf	Calculate_Time@temp1+2,f
  6225  026B  0849               	movf	Calculate_Time@temp1+2,w
  6226  026C  00CA               	movwf	Calculate_Time@temp1+3
  6227                           
  6228                           ;save.c: 187: temp2 = rtc_save_ch1.hours*3600+rtc_save_ch1.minutes*60+rtc_save_ch1.secon
      +                          ds;
  6229  026D  0021               	movlb	1	; select bank1
  6230  026E  084C               	movf	_rtc_save_ch1^(0+128),w
  6231  026F  0020               	movlb	0	; select bank0
  6232  0270  00B9               	movwf	??_Calculate_Time
  6233  0271  01BA               	clrf	??_Calculate_Time+1
  6234  0272  0021               	movlb	1	; select bank1
  6235  0273  084E               	movf	(_rtc_save_ch1^(0+128)+2),w
  6236  0274  0020               	movlb	0	; select bank0
  6237  0275  00BB               	movwf	??_Calculate_Time+2
  6238  0276  01BC               	clrf	??_Calculate_Time+3
  6239  0277  083B               	movf	??_Calculate_Time+2,w
  6240  0278  00F3               	movwf	___wmul@multiplier
  6241  0279  083C               	movf	??_Calculate_Time+3,w
  6242  027A  00F4               	movwf	___wmul@multiplier+1
  6243  027B  3010               	movlw	16
  6244  027C  00F5               	movwf	___wmul@multiplicand
  6245  027D  300E               	movlw	14
  6246  027E  00F6               	movwf	___wmul@multiplicand+1
  6247  027F  318A  2203  3182   	fcall	___wmul
  6248  0282  0873               	movf	?___wmul,w
  6249  0283  0020               	movlb	0	; select bank0
  6250  0284  00BD               	movwf	??_Calculate_Time+4
  6251  0285  0874               	movf	?___wmul+1,w
  6252  0286  00BE               	movwf	??_Calculate_Time+5
  6253  0287  0021               	movlb	1	; select bank1
  6254  0288  084D               	movf	(_rtc_save_ch1^(0+128)+1),w
  6255  0289  0020               	movlb	0	; select bank0
  6256  028A  00BF               	movwf	??_Calculate_Time+6
  6257  028B  01C0               	clrf	??_Calculate_Time+7
  6258  028C  083F               	movf	??_Calculate_Time+6,w
  6259  028D  00F3               	movwf	___wmul@multiplier
  6260  028E  0840               	movf	??_Calculate_Time+7,w
  6261  028F  00F4               	movwf	___wmul@multiplier+1
  6262  0290  303C               	movlw	60
  6263  0291  00F5               	movwf	___wmul@multiplicand
  6264  0292  3000               	movlw	0
  6265  0293  00F6               	movwf	___wmul@multiplicand+1
  6266  0294  318A  2203  3182   	fcall	___wmul
  6267  0297  0873               	movf	?___wmul,w
  6268  0298  0020               	movlb	0	; select bank0
  6269  0299  073D               	addwf	??_Calculate_Time+4,w
  6270  029A  00C1               	movwf	??_Calculate_Time+8
  6271  029B  0874               	movf	?___wmul+1,w
  6272  029C  3D3E               	addwfc	??_Calculate_Time+5,w
  6273  029D  00C2               	movwf	??_Calculate_Time+9
  6274  029E  0839               	movf	??_Calculate_Time,w
  6275  029F  0741               	addwf	??_Calculate_Time+8,w
  6276  02A0  00CB               	movwf	Calculate_Time@temp2
  6277  02A1  083A               	movf	??_Calculate_Time+1,w
  6278  02A2  3D42               	addwfc	??_Calculate_Time+9,w
  6279  02A3  00CC               	movwf	Calculate_Time@temp2+1
  6280  02A4  01CD               	clrf	Calculate_Time@temp2+2
  6281  02A5  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6282  02A6  03CD               	decf	Calculate_Time@temp2+2,f
  6283  02A7  084D               	movf	Calculate_Time@temp2+2,w
  6284  02A8  00CE               	movwf	Calculate_Time@temp2+3
  6285                           
  6286                           ;save.c: 188: temp = temp1 - temp2;
  6287  02A9  0847               	movf	Calculate_Time@temp1,w
  6288  02AA  00B9               	movwf	??_Calculate_Time
  6289  02AB  0848               	movf	Calculate_Time@temp1+1,w
  6290  02AC  00BA               	movwf	??_Calculate_Time+1
  6291  02AD  0849               	movf	Calculate_Time@temp1+2,w
  6292  02AE  00BB               	movwf	??_Calculate_Time+2
  6293  02AF  084A               	movf	Calculate_Time@temp1+3,w
  6294  02B0  00BC               	movwf	??_Calculate_Time+3
  6295  02B1  094B               	comf	Calculate_Time@temp2,w
  6296  02B2  00BD               	movwf	??_Calculate_Time+4
  6297  02B3  094C               	comf	Calculate_Time@temp2+1,w
  6298  02B4  00BE               	movwf	??_Calculate_Time+5
  6299  02B5  094D               	comf	Calculate_Time@temp2+2,w
  6300  02B6  00BF               	movwf	??_Calculate_Time+6
  6301  02B7  094E               	comf	Calculate_Time@temp2+3,w
  6302  02B8  00C0               	movwf	??_Calculate_Time+7
  6303  02B9  0ABD               	incf	??_Calculate_Time+4,f
  6304  02BA  1903               	skipnz
  6305  02BB  0ABE               	incf	??_Calculate_Time+5,f
  6306  02BC  1903               	skipnz
  6307  02BD  0ABF               	incf	??_Calculate_Time+6,f
  6308  02BE  1903               	skipnz
  6309  02BF  0AC0               	incf	??_Calculate_Time+7,f
  6310  02C0  083D               	movf	??_Calculate_Time+4,w
  6311  02C1  07B9               	addwf	??_Calculate_Time,f
  6312  02C2  083E               	movf	??_Calculate_Time+5,w
  6313  02C3  3DBA               	addwfc	??_Calculate_Time+1,f
  6314  02C4  083F               	movf	??_Calculate_Time+6,w
  6315  02C5  3DBB               	addwfc	??_Calculate_Time+2,f
  6316  02C6  0840               	movf	??_Calculate_Time+7,w
  6317  02C7  3DBC               	addwfc	??_Calculate_Time+3,f
  6318  02C8  083C               	movf	??_Calculate_Time+3,w
  6319  02C9  00C6               	movwf	Calculate_Time@temp+3
  6320  02CA  083B               	movf	??_Calculate_Time+2,w
  6321  02CB  00C5               	movwf	Calculate_Time@temp+2
  6322  02CC  083A               	movf	??_Calculate_Time+1,w
  6323  02CD  00C4               	movwf	Calculate_Time@temp+1
  6324  02CE  0839               	movf	??_Calculate_Time,w
  6325  02CF  00C3               	movwf	Calculate_Time@temp
  6326                           
  6327                           ;save.c: 189: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6328  02D0  30CC               	movlw	low (_rtc_save_ch1| 0)
  6329  02D1  0086               	movwf	6
  6330  02D2  0187               	clrf	7
  6331  02D3  30DA               	movlw	low (_rtc_tm| 0)
  6332  02D4  0084               	movwf	4
  6333  02D5  0185               	clrf	5
  6334  02D6  3007               	movlw	7
  6335  02D7  0020               	movlb	0	; select bank0
  6336  02D8  00B9               	movwf	??_Calculate_Time
  6337  02D9                     u386m0:	
  6338  02D9  0012               	moviw fsr0++
  6339  02DA  001E               	movwi fsr1++
  6340  02DB  0BB9               	decfsz	??_Calculate_Time,f
  6341  02DC  2AD9               	goto	u386m0
  6342                           
  6343                           ;save.c: 190: return temp;
  6344  02DD  0020               	movlb	0	; select bank0
  6345  02DE  0843               	movf	Calculate_Time@temp,w
  6346  02DF  0008               	return
  6347  02E0                     l4566:	
  6348                           ;save.c: 191: }
  6349                           ;save.c: 192: }
  6350                           
  6351                           
  6352                           ;save.c: 193: else if( time_count == 3 )
  6353  02E0  3003               	movlw	3
  6354  02E1  066D               	xorwf	_time_count,w
  6355  02E2  1D03               	btfss	3,2
  6356  02E3  2BA7               	goto	l4590
  6357                           
  6358                           ;save.c: 194: {
  6359                           ;save.c: 195: if(rtc_tm.date != rtc_save_ch2.date)
  6360  02E4  0021               	movlb	1	; select bank1
  6361  02E5  085E               	movf	(_rtc_tm^(0+128)+4),w
  6362  02E6  0657               	xorwf	(_rtc_save_ch2^(0+128)+4),w
  6363  02E7  1903               	skipnz
  6364  02E8  2AF8               	goto	l4580
  6365  02E9                     l4570:	
  6366                           
  6367                           ;save.c: 196: {
  6368                           ;save.c: 198: Write_Flash_finish();
  6369  02E9  318B  234E  3182   	fcall	_Write_Flash_finish
  6370                           
  6371                           ;save.c: 199: Write_Flash_head();
  6372  02EC  318B  237D  3182   	fcall	_Write_Flash_head
  6373                           
  6374                           ;save.c: 200: Save_Write_time();
  6375  02EF  3186  26DB  3182   	fcall	_Save_Write_time
  6376                           
  6377                           ;save.c: 201: Cur_temperature_time_ch1 = 0;
  6378  02F2  0021               	movlb	1	; select bank1
  6379  02F3  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
  6380                           
  6381                           ;save.c: 202: Cur_temperature_time_ch2 = 0;
  6382  02F4  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
  6383                           
  6384                           ;save.c: 205: time_count = 0;
  6385  02F5  0020               	movlb	0	; select bank0
  6386  02F6  01ED               	clrf	_time_count
  6387                           
  6388                           ;save.c: 206: }
  6389  02F7  2BA7               	goto	l4590
  6390  02F8                     l4580:	
  6391                           
  6392                           ;save.c: 207: else
  6393                           ;save.c: 208: {
  6394                           ;save.c: 209: temp1 = rtc_tm.hours*3600+rtc_tm.minutes*60+rtc_tm.seconds;
  6395  02F8  0021               	movlb	1	; select bank1
  6396  02F9  085A               	movf	_rtc_tm^(0+128),w
  6397  02FA  0020               	movlb	0	; select bank0
  6398  02FB  00B9               	movwf	??_Calculate_Time
  6399  02FC  01BA               	clrf	??_Calculate_Time+1
  6400  02FD  0021               	movlb	1	; select bank1
  6401  02FE  085C               	movf	(_rtc_tm^(0+128)+2),w
  6402  02FF  0020               	movlb	0	; select bank0
  6403  0300  00BB               	movwf	??_Calculate_Time+2
  6404  0301  01BC               	clrf	??_Calculate_Time+3
  6405  0302  083B               	movf	??_Calculate_Time+2,w
  6406  0303  00F3               	movwf	___wmul@multiplier
  6407  0304  083C               	movf	??_Calculate_Time+3,w
  6408  0305  00F4               	movwf	___wmul@multiplier+1
  6409  0306  3010               	movlw	16
  6410  0307  00F5               	movwf	___wmul@multiplicand
  6411  0308  300E               	movlw	14
  6412  0309  00F6               	movwf	___wmul@multiplicand+1
  6413  030A  318A  2203  3182   	fcall	___wmul
  6414  030D  0873               	movf	?___wmul,w
  6415  030E  0020               	movlb	0	; select bank0
  6416  030F  00BD               	movwf	??_Calculate_Time+4
  6417  0310  0874               	movf	?___wmul+1,w
  6418  0311  00BE               	movwf	??_Calculate_Time+5
  6419  0312  0021               	movlb	1	; select bank1
  6420  0313  085B               	movf	(_rtc_tm^(0+128)+1),w
  6421  0314  0020               	movlb	0	; select bank0
  6422  0315  00BF               	movwf	??_Calculate_Time+6
  6423  0316  01C0               	clrf	??_Calculate_Time+7
  6424  0317  083F               	movf	??_Calculate_Time+6,w
  6425  0318  00F3               	movwf	___wmul@multiplier
  6426  0319  0840               	movf	??_Calculate_Time+7,w
  6427  031A  00F4               	movwf	___wmul@multiplier+1
  6428  031B  303C               	movlw	60
  6429  031C  00F5               	movwf	___wmul@multiplicand
  6430  031D  3000               	movlw	0
  6431  031E  00F6               	movwf	___wmul@multiplicand+1
  6432  031F  318A  2203  3182   	fcall	___wmul
  6433  0322  0873               	movf	?___wmul,w
  6434  0323  0020               	movlb	0	; select bank0
  6435  0324  073D               	addwf	??_Calculate_Time+4,w
  6436  0325  00C1               	movwf	??_Calculate_Time+8
  6437  0326  0874               	movf	?___wmul+1,w
  6438  0327  3D3E               	addwfc	??_Calculate_Time+5,w
  6439  0328  00C2               	movwf	??_Calculate_Time+9
  6440  0329  0839               	movf	??_Calculate_Time,w
  6441  032A  0741               	addwf	??_Calculate_Time+8,w
  6442  032B  00C7               	movwf	Calculate_Time@temp1
  6443  032C  083A               	movf	??_Calculate_Time+1,w
  6444  032D  3D42               	addwfc	??_Calculate_Time+9,w
  6445  032E  00C8               	movwf	Calculate_Time@temp1+1
  6446  032F  01C9               	clrf	Calculate_Time@temp1+2
  6447  0330  1BC8               	btfsc	Calculate_Time@temp1+1,7
  6448  0331  03C9               	decf	Calculate_Time@temp1+2,f
  6449  0332  0849               	movf	Calculate_Time@temp1+2,w
  6450  0333  00CA               	movwf	Calculate_Time@temp1+3
  6451                           
  6452                           ;save.c: 210: temp2 = rtc_save_ch2.hours*3600+rtc_save_ch2.minutes*60+rtc_save_ch2.secon
      +                          ds;
  6453  0334  0021               	movlb	1	; select bank1
  6454  0335  0853               	movf	_rtc_save_ch2^(0+128),w
  6455  0336  0020               	movlb	0	; select bank0
  6456  0337  00B9               	movwf	??_Calculate_Time
  6457  0338  01BA               	clrf	??_Calculate_Time+1
  6458  0339  0021               	movlb	1	; select bank1
  6459  033A  0855               	movf	(_rtc_save_ch2^(0+128)+2),w
  6460  033B  0020               	movlb	0	; select bank0
  6461  033C  00BB               	movwf	??_Calculate_Time+2
  6462  033D  01BC               	clrf	??_Calculate_Time+3
  6463  033E  083B               	movf	??_Calculate_Time+2,w
  6464  033F  00F3               	movwf	___wmul@multiplier
  6465  0340  083C               	movf	??_Calculate_Time+3,w
  6466  0341  00F4               	movwf	___wmul@multiplier+1
  6467  0342  3010               	movlw	16
  6468  0343  00F5               	movwf	___wmul@multiplicand
  6469  0344  300E               	movlw	14
  6470  0345  00F6               	movwf	___wmul@multiplicand+1
  6471  0346  318A  2203  3182   	fcall	___wmul
  6472  0349  0873               	movf	?___wmul,w
  6473  034A  0020               	movlb	0	; select bank0
  6474  034B  00BD               	movwf	??_Calculate_Time+4
  6475  034C  0874               	movf	?___wmul+1,w
  6476  034D  00BE               	movwf	??_Calculate_Time+5
  6477  034E  0021               	movlb	1	; select bank1
  6478  034F  0854               	movf	(_rtc_save_ch2^(0+128)+1),w
  6479  0350  0020               	movlb	0	; select bank0
  6480  0351  00BF               	movwf	??_Calculate_Time+6
  6481  0352  01C0               	clrf	??_Calculate_Time+7
  6482  0353  083F               	movf	??_Calculate_Time+6,w
  6483  0354  00F3               	movwf	___wmul@multiplier
  6484  0355  0840               	movf	??_Calculate_Time+7,w
  6485  0356  00F4               	movwf	___wmul@multiplier+1
  6486  0357  303C               	movlw	60
  6487  0358  00F5               	movwf	___wmul@multiplicand
  6488  0359  3000               	movlw	0
  6489  035A  00F6               	movwf	___wmul@multiplicand+1
  6490  035B  318A  2203  3182   	fcall	___wmul
  6491  035E  0873               	movf	?___wmul,w
  6492  035F  0020               	movlb	0	; select bank0
  6493  0360  073D               	addwf	??_Calculate_Time+4,w
  6494  0361  00C1               	movwf	??_Calculate_Time+8
  6495  0362  0874               	movf	?___wmul+1,w
  6496  0363  3D3E               	addwfc	??_Calculate_Time+5,w
  6497  0364  00C2               	movwf	??_Calculate_Time+9
  6498  0365  0839               	movf	??_Calculate_Time,w
  6499  0366  0741               	addwf	??_Calculate_Time+8,w
  6500  0367  00CB               	movwf	Calculate_Time@temp2
  6501  0368  083A               	movf	??_Calculate_Time+1,w
  6502  0369  3D42               	addwfc	??_Calculate_Time+9,w
  6503  036A  00CC               	movwf	Calculate_Time@temp2+1
  6504  036B  01CD               	clrf	Calculate_Time@temp2+2
  6505  036C  1BCC               	btfsc	Calculate_Time@temp2+1,7
  6506  036D  03CD               	decf	Calculate_Time@temp2+2,f
  6507  036E  084D               	movf	Calculate_Time@temp2+2,w
  6508  036F  00CE               	movwf	Calculate_Time@temp2+3
  6509                           
  6510                           ;save.c: 211: temp = temp1 - temp2;
  6511  0370  0847               	movf	Calculate_Time@temp1,w
  6512  0371  00B9               	movwf	??_Calculate_Time
  6513  0372  0848               	movf	Calculate_Time@temp1+1,w
  6514  0373  00BA               	movwf	??_Calculate_Time+1
  6515  0374  0849               	movf	Calculate_Time@temp1+2,w
  6516  0375  00BB               	movwf	??_Calculate_Time+2
  6517  0376  084A               	movf	Calculate_Time@temp1+3,w
  6518  0377  00BC               	movwf	??_Calculate_Time+3
  6519  0378  094B               	comf	Calculate_Time@temp2,w
  6520  0379  00BD               	movwf	??_Calculate_Time+4
  6521  037A  094C               	comf	Calculate_Time@temp2+1,w
  6522  037B  00BE               	movwf	??_Calculate_Time+5
  6523  037C  094D               	comf	Calculate_Time@temp2+2,w
  6524  037D  00BF               	movwf	??_Calculate_Time+6
  6525  037E  094E               	comf	Calculate_Time@temp2+3,w
  6526  037F  00C0               	movwf	??_Calculate_Time+7
  6527  0380  0ABD               	incf	??_Calculate_Time+4,f
  6528  0381  1903               	skipnz
  6529  0382  0ABE               	incf	??_Calculate_Time+5,f
  6530  0383  1903               	skipnz
  6531  0384  0ABF               	incf	??_Calculate_Time+6,f
  6532  0385  1903               	skipnz
  6533  0386  0AC0               	incf	??_Calculate_Time+7,f
  6534  0387  083D               	movf	??_Calculate_Time+4,w
  6535  0388  07B9               	addwf	??_Calculate_Time,f
  6536  0389  083E               	movf	??_Calculate_Time+5,w
  6537  038A  3DBA               	addwfc	??_Calculate_Time+1,f
  6538  038B  083F               	movf	??_Calculate_Time+6,w
  6539  038C  3DBB               	addwfc	??_Calculate_Time+2,f
  6540  038D  0840               	movf	??_Calculate_Time+7,w
  6541  038E  3DBC               	addwfc	??_Calculate_Time+3,f
  6542  038F  083C               	movf	??_Calculate_Time+3,w
  6543  0390  00C6               	movwf	Calculate_Time@temp+3
  6544  0391  083B               	movf	??_Calculate_Time+2,w
  6545  0392  00C5               	movwf	Calculate_Time@temp+2
  6546  0393  083A               	movf	??_Calculate_Time+1,w
  6547  0394  00C4               	movwf	Calculate_Time@temp+1
  6548  0395  0839               	movf	??_Calculate_Time,w
  6549  0396  00C3               	movwf	Calculate_Time@temp
  6550                           
  6551                           ;save.c: 212: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6552  0397  30D3               	movlw	low (_rtc_save_ch2| 0)
  6553  0398  0086               	movwf	6
  6554  0399  0187               	clrf	7
  6555  039A  30DA               	movlw	low (_rtc_tm| 0)
  6556  039B  0084               	movwf	4
  6557  039C  0185               	clrf	5
  6558  039D  3007               	movlw	7
  6559  039E  0020               	movlb	0	; select bank0
  6560  039F  00B9               	movwf	??_Calculate_Time
  6561  03A0                     u389m0:	
  6562  03A0  0012               	moviw fsr0++
  6563  03A1  001E               	movwi fsr1++
  6564  03A2  0BB9               	decfsz	??_Calculate_Time,f
  6565  03A3  2BA0               	goto	u389m0
  6566                           
  6567                           ;save.c: 213: return temp;
  6568  03A4  0020               	movlb	0	; select bank0
  6569  03A5  0843               	movf	Calculate_Time@temp,w
  6570  03A6  0008               	return
  6571  03A7                     l4590:	
  6572                           
  6573                           ;save.c: 214: }
  6574                           ;save.c: 215: }
  6575                           ;save.c: 216: return 0;
  6576  03A7  3000               	movlw	0
  6577  03A8  0008               	return
  6578  03A9                     __end_of_Calculate_Time:	
  6579                           
  6580                           	psect	text20
  6581  0A03                     __ptext20:	
  6582 ;; *************** function ___wmul *****************
  6583 ;; Defined at:
  6584 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  multiplier      2    3[COMMON] unsigned int 
  6587 ;;  multiplicand    2    5[COMMON] unsigned int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  product         2    0[BANK0 ] unsigned int 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    3[COMMON] unsigned int 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;Total ram usage:        6 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    3
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_Calculate_Time
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           
  6614                           ;psect for function ___wmul
  6615  0A03                     ___wmul:	
  6616                           
  6617                           ;incstack = 0
  6618                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6619  0A03  0020               	movlb	0	; select bank0
  6620  0A04  01A0               	clrf	___wmul@product
  6621  0A05  01A1               	clrf	___wmul@product+1
  6622  0A06                     l4472:	
  6623  0A06  1C73               	btfss	___wmul@multiplier,0
  6624  0A07  2A0D               	goto	l1026
  6625  0A08  0875               	movf	___wmul@multiplicand,w
  6626  0A09  0020               	movlb	0	; select bank0
  6627  0A0A  07A0               	addwf	___wmul@product,f
  6628  0A0B  0876               	movf	___wmul@multiplicand+1,w
  6629  0A0C  3DA1               	addwfc	___wmul@product+1,f
  6630  0A0D                     l1026:	
  6631  0A0D  3001               	movlw	1
  6632  0A0E                     u3745:	
  6633  0A0E  35F5               	lslf	___wmul@multiplicand,f
  6634  0A0F  0DF6               	rlf	___wmul@multiplicand+1,f
  6635  0A10  0B89               	decfsz	9,f
  6636  0A11  2A0E               	goto	u3745
  6637  0A12  3001               	movlw	1
  6638  0A13                     u3755:	
  6639  0A13  36F4               	lsrf	___wmul@multiplier+1,f
  6640  0A14  0CF3               	rrf	___wmul@multiplier,f
  6641  0A15  0B89               	decfsz	9,f
  6642  0A16  2A13               	goto	u3755
  6643  0A17  0873               	movf	___wmul@multiplier,w
  6644  0A18  0474               	iorwf	___wmul@multiplier+1,w
  6645  0A19  1D03               	btfss	3,2
  6646  0A1A  2A06               	goto	l4472
  6647  0A1B  0020               	movlb	0	; select bank0
  6648  0A1C  0821               	movf	___wmul@product+1,w
  6649  0A1D  00F4               	movwf	?___wmul+1
  6650  0A1E  0820               	movf	___wmul@product,w
  6651  0A1F  00F3               	movwf	?___wmul
  6652  0A20  0008               	return
  6653  0A21                     __end_of___wmul:	
  6654                           
  6655                           	psect	text21
  6656  0B7D                     __ptext21:	
  6657 ;; *************** function _Write_Flash_head *****************
  6658 ;; Defined at:
  6659 ;;		line 93 in file "mcc_generated_files/save.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;Total ram usage:        1 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    6
  6680 ;; This function calls:
  6681 ;;		_FLASH_WriteWord
  6682 ;; This function is called by:
  6683 ;;		_Key_Process
  6684 ;;		_Calculate_Time
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           
  6689                           ;psect for function _Write_Flash_head
  6690  0B7D                     _Write_Flash_head:	
  6691                           
  6692                           ;save.c: 95: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6693                           
  6694                           ;incstack = 0
  6695                           ; Regs used in _Write_Flash_head: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6696  0B7D  0021               	movlb	1	; select bank1
  6697  0B7E  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6698  0B7F  0020               	movlb	0	; select bank0
  6699  0B80  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6700  0B81  0021               	movlb	1	; select bank1
  6701  0B82  082E               	movf	_Cur_Save_Index^(0+128),w
  6702  0B83  0020               	movlb	0	; select bank0
  6703  0B84  00AA               	movwf	FLASH_WriteWord@flashAddr
  6704  0B85  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6705  0B86  00F7               	movwf	??_Write_Flash_head
  6706  0B87  0877               	movf	??_Write_Flash_head,w
  6707  0B88  00AC               	movwf	FLASH_WriteWord@ramBuf
  6708  0B89  30AA               	movlw	170
  6709  0B8A  00AD               	movwf	FLASH_WriteWord@word
  6710  0B8B  30AA               	movlw	170
  6711  0B8C  00AE               	movwf	FLASH_WriteWord@word+1
  6712  0B8D  318D  255B  318B   	fcall	_FLASH_WriteWord
  6713                           
  6714                           ;save.c: 96: Cur_Save_Index++;
  6715  0B90  3001               	movlw	1
  6716  0B91  0021               	movlb	1	; select bank1
  6717  0B92  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6718  0B93  3000               	movlw	0
  6719  0B94  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6720                           
  6721                           ;save.c: 97: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0xAAAA);
  6722  0B95  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6723  0B96  0020               	movlb	0	; select bank0
  6724  0B97  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6725  0B98  0021               	movlb	1	; select bank1
  6726  0B99  082E               	movf	_Cur_Save_Index^(0+128),w
  6727  0B9A  0020               	movlb	0	; select bank0
  6728  0B9B  00AA               	movwf	FLASH_WriteWord@flashAddr
  6729  0B9C  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6730  0B9D  00F7               	movwf	??_Write_Flash_head
  6731  0B9E  0877               	movf	??_Write_Flash_head,w
  6732  0B9F  00AC               	movwf	FLASH_WriteWord@ramBuf
  6733  0BA0  30AA               	movlw	170
  6734  0BA1  00AD               	movwf	FLASH_WriteWord@word
  6735  0BA2  30AA               	movlw	170
  6736  0BA3  00AE               	movwf	FLASH_WriteWord@word+1
  6737  0BA4  318D  255B         	fcall	_FLASH_WriteWord
  6738                           
  6739                           ;save.c: 98: Cur_Save_Index++;
  6740  0BA6  3001               	movlw	1
  6741  0BA7  0021               	movlb	1	; select bank1
  6742  0BA8  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6743  0BA9  3000               	movlw	0
  6744  0BAA  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6745  0BAB  0008               	return
  6746  0BAC                     __end_of_Write_Flash_head:	
  6747                           
  6748                           	psect	text22
  6749  0B4E                     __ptext22:	
  6750 ;; *************** function _Write_Flash_finish *****************
  6751 ;; Defined at:
  6752 ;;		line 107 in file "mcc_generated_files/save.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;Total ram usage:        1 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    6
  6773 ;; This function calls:
  6774 ;;		_FLASH_WriteWord
  6775 ;; This function is called by:
  6776 ;;		_Key_Process
  6777 ;;		_Serach_Flash_Head
  6778 ;;		_Calculate_Time
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           
  6783                           ;psect for function _Write_Flash_finish
  6784  0B4E                     _Write_Flash_finish:	
  6785                           
  6786                           ;save.c: 109: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6787                           
  6788                           ;incstack = 0
  6789                           ; Regs used in _Write_Flash_finish: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6790  0B4E  0021               	movlb	1	; select bank1
  6791  0B4F  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6792  0B50  0020               	movlb	0	; select bank0
  6793  0B51  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6794  0B52  0021               	movlb	1	; select bank1
  6795  0B53  082E               	movf	_Cur_Save_Index^(0+128),w
  6796  0B54  0020               	movlb	0	; select bank0
  6797  0B55  00AA               	movwf	FLASH_WriteWord@flashAddr
  6798  0B56  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6799  0B57  00F7               	movwf	??_Write_Flash_finish
  6800  0B58  0877               	movf	??_Write_Flash_finish,w
  6801  0B59  00AC               	movwf	FLASH_WriteWord@ramBuf
  6802  0B5A  3055               	movlw	85
  6803  0B5B  00AD               	movwf	FLASH_WriteWord@word
  6804  0B5C  3055               	movlw	85
  6805  0B5D  00AE               	movwf	FLASH_WriteWord@word+1
  6806  0B5E  318D  255B  318B   	fcall	_FLASH_WriteWord
  6807                           
  6808                           ;save.c: 110: Cur_Save_Index++;
  6809  0B61  3001               	movlw	1
  6810  0B62  0021               	movlb	1	; select bank1
  6811  0B63  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6812  0B64  3000               	movlw	0
  6813  0B65  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6814                           
  6815                           ;save.c: 111: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x5555);
  6816  0B66  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  6817  0B67  0020               	movlb	0	; select bank0
  6818  0B68  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  6819  0B69  0021               	movlb	1	; select bank1
  6820  0B6A  082E               	movf	_Cur_Save_Index^(0+128),w
  6821  0B6B  0020               	movlb	0	; select bank0
  6822  0B6C  00AA               	movwf	FLASH_WriteWord@flashAddr
  6823  0B6D  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  6824  0B6E  00F7               	movwf	??_Write_Flash_finish
  6825  0B6F  0877               	movf	??_Write_Flash_finish,w
  6826  0B70  00AC               	movwf	FLASH_WriteWord@ramBuf
  6827  0B71  3055               	movlw	85
  6828  0B72  00AD               	movwf	FLASH_WriteWord@word
  6829  0B73  3055               	movlw	85
  6830  0B74  00AE               	movwf	FLASH_WriteWord@word+1
  6831  0B75  318D  255B         	fcall	_FLASH_WriteWord
  6832                           
  6833                           ;save.c: 112: Cur_Save_Index++;
  6834  0B77  3001               	movlw	1
  6835  0B78  0021               	movlb	1	; select bank1
  6836  0B79  07AE               	addwf	_Cur_Save_Index^(0+128),f
  6837  0B7A  3000               	movlw	0
  6838  0B7B  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  6839  0B7C  0008               	return
  6840  0B7D                     __end_of_Write_Flash_finish:	
  6841                           
  6842                           	psect	text23
  6843  06DB                     __ptext23:	
  6844 ;; *************** function _Save_Write_time *****************
  6845 ;; Defined at:
  6846 ;;		line 240 in file "mcc_generated_files/save.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;		None
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  i               1    0        unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;Total ram usage:        2 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    7
  6867 ;; This function calls:
  6868 ;;		_Bq32k_Rtc_Read_Time
  6869 ;;		_Save_Write_word
  6870 ;; This function is called by:
  6871 ;;		_Key_Process
  6872 ;;		_Calculate_Time
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           
  6877                           ;psect for function _Save_Write_time
  6878  06DB                     _Save_Write_time:	
  6879                           
  6880                           ;save.c: 242: unsigned char i;
  6881                           ;save.c: 243: Bq32k_Rtc_Read_Time(&rtc_tm);
  6882                           
  6883                           ;incstack = 0
  6884                           ; Regs used in _Save_Write_time: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6885  06DB  30DA               	movlw	(low (_rtc_tm| 0))& (0+255)
  6886  06DC  318F  2738  3186   	fcall	_Bq32k_Rtc_Read_Time
  6887                           
  6888                           ;save.c: 244: __builtin_memcpy(&rtc_save_ch1,&rtc_tm,7);
  6889  06DF  30CC               	movlw	low (_rtc_save_ch1| 0)
  6890  06E0  0086               	movwf	6
  6891  06E1  0187               	clrf	7
  6892  06E2  30DA               	movlw	low (_rtc_tm| 0)
  6893  06E3  0084               	movwf	4
  6894  06E4  0185               	clrf	5
  6895  06E5  3007               	movlw	7
  6896  06E6  0020               	movlb	0	; select bank0
  6897  06E7  00B7               	movwf	??_Save_Write_time
  6898  06E8                     u371m0:	
  6899  06E8  0012               	moviw fsr0++
  6900  06E9  001E               	movwi fsr1++
  6901  06EA  0BB7               	decfsz	??_Save_Write_time,f
  6902  06EB  2EE8               	goto	u371m0
  6903                           
  6904                           ;save.c: 245: __builtin_memcpy(&rtc_save_ch2,&rtc_tm,7);
  6905  06EC  30D3               	movlw	low (_rtc_save_ch2| 0)
  6906  06ED  0086               	movwf	6
  6907  06EE  0187               	clrf	7
  6908  06EF  30DA               	movlw	low (_rtc_tm| 0)
  6909  06F0  0084               	movwf	4
  6910  06F1  0185               	clrf	5
  6911  06F2  3007               	movlw	7
  6912  06F3  0020               	movlb	0	; select bank0
  6913  06F4  00B7               	movwf	??_Save_Write_time
  6914  06F5                     u372m0:	
  6915  06F5  0012               	moviw fsr0++
  6916  06F6  001E               	movwi fsr1++
  6917  06F7  0BB7               	decfsz	??_Save_Write_time,f
  6918  06F8  2EF5               	goto	u372m0
  6919                           
  6920                           ;save.c: 246: Save_Write_word( rtc_tm.years);
  6921  06F9  0021               	movlb	1	; select bank1
  6922  06FA  0860               	movf	(_rtc_tm^(0+128)+6),w
  6923  06FB  0020               	movlb	0	; select bank0
  6924  06FC  00B7               	movwf	??_Save_Write_time
  6925  06FD  01B8               	clrf	??_Save_Write_time+1
  6926  06FE  0837               	movf	??_Save_Write_time,w
  6927  06FF  00B3               	movwf	Save_Write_word@data
  6928  0700  0838               	movf	??_Save_Write_time+1,w
  6929  0701  00B4               	movwf	Save_Write_word@data+1
  6930  0702  318C  24AD  3186   	fcall	_Save_Write_word
  6931                           
  6932                           ;save.c: 247: Save_Write_word( rtc_tm.month);
  6933  0705  0021               	movlb	1	; select bank1
  6934  0706  085F               	movf	(_rtc_tm^(0+128)+5),w
  6935  0707  0020               	movlb	0	; select bank0
  6936  0708  00B7               	movwf	??_Save_Write_time
  6937  0709  01B8               	clrf	??_Save_Write_time+1
  6938  070A  0837               	movf	??_Save_Write_time,w
  6939  070B  00B3               	movwf	Save_Write_word@data
  6940  070C  0838               	movf	??_Save_Write_time+1,w
  6941  070D  00B4               	movwf	Save_Write_word@data+1
  6942  070E  318C  24AD  3186   	fcall	_Save_Write_word
  6943                           
  6944                           ;save.c: 248: Save_Write_word( rtc_tm.date);
  6945  0711  0021               	movlb	1	; select bank1
  6946  0712  085E               	movf	(_rtc_tm^(0+128)+4),w
  6947  0713  0020               	movlb	0	; select bank0
  6948  0714  00B7               	movwf	??_Save_Write_time
  6949  0715  01B8               	clrf	??_Save_Write_time+1
  6950  0716  0837               	movf	??_Save_Write_time,w
  6951  0717  00B3               	movwf	Save_Write_word@data
  6952  0718  0838               	movf	??_Save_Write_time+1,w
  6953  0719  00B4               	movwf	Save_Write_word@data+1
  6954  071A  318C  24AD  3186   	fcall	_Save_Write_word
  6955                           
  6956                           ;save.c: 249: Save_Write_word( rtc_tm.hours);
  6957  071D  0021               	movlb	1	; select bank1
  6958  071E  085C               	movf	(_rtc_tm^(0+128)+2),w
  6959  071F  0020               	movlb	0	; select bank0
  6960  0720  00B7               	movwf	??_Save_Write_time
  6961  0721  01B8               	clrf	??_Save_Write_time+1
  6962  0722  0837               	movf	??_Save_Write_time,w
  6963  0723  00B3               	movwf	Save_Write_word@data
  6964  0724  0838               	movf	??_Save_Write_time+1,w
  6965  0725  00B4               	movwf	Save_Write_word@data+1
  6966  0726  318C  24AD  3186   	fcall	_Save_Write_word
  6967                           
  6968                           ;save.c: 250: Save_Write_word( rtc_tm.minutes);
  6969  0729  0021               	movlb	1	; select bank1
  6970  072A  085B               	movf	(_rtc_tm^(0+128)+1),w
  6971  072B  0020               	movlb	0	; select bank0
  6972  072C  00B7               	movwf	??_Save_Write_time
  6973  072D  01B8               	clrf	??_Save_Write_time+1
  6974  072E  0837               	movf	??_Save_Write_time,w
  6975  072F  00B3               	movwf	Save_Write_word@data
  6976  0730  0838               	movf	??_Save_Write_time+1,w
  6977  0731  00B4               	movwf	Save_Write_word@data+1
  6978  0732  318C  24AD  3186   	fcall	_Save_Write_word
  6979                           
  6980                           ;save.c: 251: Save_Write_word( rtc_tm.seconds);
  6981  0735  0021               	movlb	1	; select bank1
  6982  0736  085A               	movf	_rtc_tm^(0+128),w
  6983  0737  0020               	movlb	0	; select bank0
  6984  0738  00B7               	movwf	??_Save_Write_time
  6985  0739  01B8               	clrf	??_Save_Write_time+1
  6986  073A  0837               	movf	??_Save_Write_time,w
  6987  073B  00B3               	movwf	Save_Write_word@data
  6988  073C  0838               	movf	??_Save_Write_time+1,w
  6989  073D  00B4               	movwf	Save_Write_word@data+1
  6990  073E  318C  24AD  3186   	fcall	_Save_Write_word
  6991                           
  6992                           ;save.c: 252: Save_Write_word( rtc_tm.wday);
  6993  0741  0021               	movlb	1	; select bank1
  6994  0742  085D               	movf	(_rtc_tm^(0+128)+3),w
  6995  0743  0020               	movlb	0	; select bank0
  6996  0744  00B7               	movwf	??_Save_Write_time
  6997  0745  01B8               	clrf	??_Save_Write_time+1
  6998  0746  0837               	movf	??_Save_Write_time,w
  6999  0747  00B3               	movwf	Save_Write_word@data
  7000  0748  0838               	movf	??_Save_Write_time+1,w
  7001  0749  00B4               	movwf	Save_Write_word@data+1
  7002  074A  318C  24AD         	fcall	_Save_Write_word
  7003  074C  0008               	return
  7004  074D                     __end_of_Save_Write_time:	
  7005                           
  7006                           	psect	text24
  7007  0CAD                     __ptext24:	
  7008 ;; *************** function _Save_Write_word *****************
  7009 ;; Defined at:
  7010 ;;		line 225 in file "mcc_generated_files/save.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  data            2   19[BANK0 ] unsigned int 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;Total ram usage:        4 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    6
  7031 ;; This function calls:
  7032 ;;		_FLASH_WriteWord
  7033 ;; This function is called by:
  7034 ;;		_tc_temperature_trans
  7035 ;;		_Save_process
  7036 ;;		_Save_Write_time
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           
  7041                           ;psect for function _Save_Write_word
  7042  0CAD                     _Save_Write_word:	
  7043                           
  7044                           ;save.c: 227: if( (data & 0x3fff) == 0x3fff)
  7045                           
  7046                           ;incstack = 0
  7047                           ; Regs used in _Save_Write_word: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7048  0CAD  30FF               	movlw	255
  7049  0CAE  0020               	movlb	0	; select bank0
  7050  0CAF  0533               	andwf	Save_Write_word@data,w
  7051  0CB0  00B5               	movwf	??_Save_Write_word
  7052  0CB1  303F               	movlw	63
  7053  0CB2  0534               	andwf	Save_Write_word@data+1,w
  7054  0CB3  00B6               	movwf	??_Save_Write_word+1
  7055  0CB4  0A35               	incf	??_Save_Write_word,w
  7056  0CB5  303F               	movlw	63
  7057  0CB6  1903               	skipnz
  7058  0CB7  0636               	xorwf	??_Save_Write_word+1,w
  7059  0CB8  1D03               	btfss	3,2
  7060  0CB9  2CCB               	goto	l4414
  7061                           
  7062                           ;save.c: 228: FLASH_WriteWord(Cur_Save_Index, Flash_buff, 0x3ffe);
  7063  0CBA  0021               	movlb	1	; select bank1
  7064  0CBB  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7065  0CBC  0020               	movlb	0	; select bank0
  7066  0CBD  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7067  0CBE  0021               	movlb	1	; select bank1
  7068  0CBF  082E               	movf	_Cur_Save_Index^(0+128),w
  7069  0CC0  0020               	movlb	0	; select bank0
  7070  0CC1  00AA               	movwf	FLASH_WriteWord@flashAddr
  7071  0CC2  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7072  0CC3  00B5               	movwf	??_Save_Write_word
  7073  0CC4  0835               	movf	??_Save_Write_word,w
  7074  0CC5  00AC               	movwf	FLASH_WriteWord@ramBuf
  7075  0CC6  30FE               	movlw	254
  7076  0CC7  00AD               	movwf	FLASH_WriteWord@word
  7077  0CC8  303F               	movlw	63
  7078  0CC9  00AE               	movwf	FLASH_WriteWord@word+1
  7079  0CCA  2CDB               	goto	L8
  7080  0CCB                     l4414:	
  7081                           
  7082                           ;save.c: 229: else
  7083                           ;save.c: 230: FLASH_WriteWord(Cur_Save_Index, Flash_buff, data);
  7084  0CCB  0021               	movlb	1	; select bank1
  7085  0CCC  082F               	movf	(_Cur_Save_Index+1)^(0+128),w
  7086  0CCD  0020               	movlb	0	; select bank0
  7087  0CCE  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  7088  0CCF  0021               	movlb	1	; select bank1
  7089  0CD0  082E               	movf	_Cur_Save_Index^(0+128),w
  7090  0CD1  0020               	movlb	0	; select bank0
  7091  0CD2  00AA               	movwf	FLASH_WriteWord@flashAddr
  7092  0CD3  3020               	movlw	(low (_Flash_buff| (0+256)))& (0+255)
  7093  0CD4  00B5               	movwf	??_Save_Write_word
  7094  0CD5  0835               	movf	??_Save_Write_word,w
  7095  0CD6  00AC               	movwf	FLASH_WriteWord@ramBuf
  7096  0CD7  0834               	movf	Save_Write_word@data+1,w
  7097  0CD8  00AE               	movwf	FLASH_WriteWord@word+1
  7098  0CD9  0833               	movf	Save_Write_word@data,w
  7099  0CDA  00AD               	movwf	FLASH_WriteWord@word
  7100  0CDB                     L8:	
  7101  0CDB  318D  255B         	fcall	_FLASH_WriteWord
  7102                           
  7103                           ;save.c: 231: Cur_Save_Index++;
  7104  0CDD  3001               	movlw	1
  7105  0CDE  0021               	movlb	1	; select bank1
  7106  0CDF  07AE               	addwf	_Cur_Save_Index^(0+128),f
  7107  0CE0  3000               	movlw	0
  7108  0CE1  3DAF               	addwfc	(_Cur_Save_Index+1)^(0+128),f
  7109  0CE2  0008               	return
  7110  0CE3                     __end_of_Save_Write_word:	
  7111                           
  7112                           	psect	text25
  7113  0D5B                     __ptext25:	
  7114 ;; *************** function _FLASH_WriteWord *****************
  7115 ;; Defined at:
  7116 ;;		line 74 in file "mcc_generated_files/memory.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  flashAddr       2   10[BANK0 ] unsigned int 
  7119 ;;  ramBuf          1   12[BANK0 ] PTR unsigned int 
  7120 ;;		 -> Flash_buff(64), 
  7121 ;;  word            2   13[BANK0 ] unsigned int 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  blockStartAd    2   16[BANK0 ] unsigned int 
  7124 ;;  i               1   18[BANK0 ] unsigned char 
  7125 ;;  offset          1   15[BANK0 ] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7135 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7136 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;Total ram usage:       10 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    5
  7142 ;; This function calls:
  7143 ;;		_FLASH_ReadWord
  7144 ;;		_FLASH_WriteBlock
  7145 ;; This function is called by:
  7146 ;;		_Write_Flash_head
  7147 ;;		_Write_Flash_finish
  7148 ;;		_Save_Write_word
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _FLASH_WriteWord
  7154  0D5B                     _FLASH_WriteWord:	
  7155                           
  7156                           ;memory.c: 75: uint16_t blockStartAddr = (uint16_t) (flashAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7160  0D5B  30E0               	movlw	224
  7161  0D5C  0020               	movlb	0	; select bank0
  7162  0D5D  052A               	andwf	FLASH_WriteWord@flashAddr,w
  7163  0D5E  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  7164  0D5F  303F               	movlw	63
  7165  0D60  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  7166  0D61  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  7167                           
  7168                           ;memory.c: 76: uint8_t offset = (uint8_t) (flashAddr & (32 - 1));
  7169  0D62  082A               	movf	FLASH_WriteWord@flashAddr,w
  7170  0D63  391F               	andlw	31
  7171  0D64  00F6               	movwf	??_FLASH_WriteWord
  7172  0D65  0876               	movf	??_FLASH_WriteWord,w
  7173  0D66  00AF               	movwf	FLASH_WriteWord@offset
  7174                           
  7175                           ;memory.c: 77: uint8_t i;
  7176                           ;memory.c: 80: for (i = 0; i < 32; i++) {
  7177  0D67  01B2               	clrf	FLASH_WriteWord@i
  7178  0D68  3020               	movlw	32
  7179  0D69  0232               	subwf	FLASH_WriteWord@i,w
  7180  0D6A  1803               	btfsc	3,0
  7181  0D6B  2D8A               	goto	l4344
  7182  0D6C                     l4338:	
  7183                           
  7184                           ;memory.c: 81: ramBuf[i] = FLASH_ReadWord((blockStartAddr + i));
  7185  0D6C  0832               	movf	FLASH_WriteWord@i,w
  7186  0D6D  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  7187  0D6E  00F3               	movwf	FLASH_ReadWord@flashAddr
  7188  0D6F  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7189  0D70  1803               	skipnc
  7190  0D71  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  7191  0D72  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  7192  0D73  3189  2149  318D   	fcall	_FLASH_ReadWord
  7193  0D76  0020               	movlb	0	; select bank0
  7194  0D77  3532               	lslf	FLASH_WriteWord@i,w
  7195  0D78  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7196  0D79  00F6               	movwf	??_FLASH_WriteWord
  7197  0D7A  0876               	movf	??_FLASH_WriteWord,w
  7198  0D7B  0086               	movwf	6
  7199  0D7C  3001               	movlw	1	; select bank2/3
  7200  0D7D  0087               	movwf	7
  7201  0D7E  0873               	movf	?_FLASH_ReadWord,w
  7202  0D7F  3FC0               	movwi [0]fsr1
  7203  0D80  0874               	movf	?_FLASH_ReadWord+1,w
  7204  0D81  3FC1               	movwi [1]fsr1
  7205  0D82  3001               	movlw	1
  7206  0D83  00F6               	movwf	??_FLASH_WriteWord
  7207  0D84  0876               	movf	??_FLASH_WriteWord,w
  7208  0D85  07B2               	addwf	FLASH_WriteWord@i,f
  7209  0D86  3020               	movlw	32
  7210  0D87  0232               	subwf	FLASH_WriteWord@i,w
  7211  0D88  1C03               	skipc
  7212  0D89  2D6C               	goto	l4338
  7213  0D8A                     l4344:	
  7214                           
  7215                           ;memory.c: 82: }
  7216                           ;memory.c: 85: ramBuf[offset] = word;
  7217  0D8A  352F               	lslf	FLASH_WriteWord@offset,w
  7218  0D8B  072C               	addwf	FLASH_WriteWord@ramBuf,w
  7219  0D8C  00F6               	movwf	??_FLASH_WriteWord
  7220  0D8D  0876               	movf	??_FLASH_WriteWord,w
  7221  0D8E  0086               	movwf	6
  7222  0D8F  3001               	movlw	1	; select bank2/3
  7223  0D90  0087               	movwf	7
  7224  0D91  082D               	movf	FLASH_WriteWord@word,w
  7225  0D92  3FC0               	movwi [0]fsr1
  7226  0D93  082E               	movf	FLASH_WriteWord@word+1,w
  7227  0D94  3FC1               	movwi [1]fsr1
  7228                           
  7229                           ;memory.c: 88: FLASH_WriteBlock(blockStartAddr, ramBuf);
  7230  0D95  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  7231  0D96  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  7232  0D97  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  7233  0D98  00A0               	movwf	FLASH_WriteBlock@writeAddr
  7234  0D99  082C               	movf	FLASH_WriteWord@ramBuf,w
  7235  0D9A  00F6               	movwf	??_FLASH_WriteWord
  7236  0D9B  0876               	movf	??_FLASH_WriteWord,w
  7237  0D9C  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  7238  0D9D  3187  274D         	fcall	_FLASH_WriteBlock
  7239  0D9F  0008               	return
  7240  0DA0                     __end_of_FLASH_WriteWord:	
  7241                           
  7242                           	psect	text26
  7243  074D                     __ptext26:	
  7244 ;; *************** function _FLASH_WriteBlock *****************
  7245 ;; Defined at:
  7246 ;;		line 91 in file "mcc_generated_files/memory.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  writeAddr       2    0[BANK0 ] unsigned int 
  7249 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned int 
  7250 ;;		 -> Flash_buff(64), 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  blockStartAd    2    6[BANK0 ] unsigned int 
  7253 ;;  i               1    9[BANK0 ] unsigned char 
  7254 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      char 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7264 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;Total ram usage:       10 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    4
  7271 ;; This function calls:
  7272 ;;		_FLASH_EraseBlock
  7273 ;; This function is called by:
  7274 ;;		_FLASH_WriteWord
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           
  7279                           ;psect for function _FLASH_WriteBlock
  7280  074D                     _FLASH_WriteBlock:	
  7281                           
  7282                           ;memory.c: 92: uint16_t blockStartAddr = (uint16_t) (writeAddr & ((16384 - 1) ^ (32 - 1)
      +                          ));
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7286  074D  30E0               	movlw	224
  7287  074E  0020               	movlb	0	; select bank0
  7288  074F  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  7289  0750  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  7290  0751  303F               	movlw	63
  7291  0752  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  7292  0753  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  7293                           
  7294                           ;memory.c: 93: uint8_t GIEBitValue = INTCONbits.GIE;
  7295  0754  3000               	movlw	0
  7296  0755  1B8B               	btfsc	11,7	;volatile
  7297  0756  3001               	movlw	1
  7298  0757  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  7299                           
  7300                           ;memory.c: 94: uint8_t i;
  7301                           ;memory.c: 97: if (writeAddr != blockStartAddr) {
  7302  0758  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  7303  0759  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  7304  075A  1D03               	skipz
  7305  075B  2F5E               	goto	u3455
  7306  075C  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  7307  075D  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  7308  075E                     u3455:	
  7309  075E  1D03               	btfss	3,2
  7310  075F  0008               	return
  7311                           
  7312                           ;memory.c: 99: }
  7313                           ;memory.c: 101: INTCONbits.GIE = 0;
  7314                           
  7315                           ;memory.c: 98: return -1;
  7316                           ;	Return value of _FLASH_WriteBlock is never used
  7317  0760  138B               	bcf	11,7	;volatile
  7318                           
  7319                           ;memory.c: 104: FLASH_EraseBlock(writeAddr);
  7320  0761  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7321  0762  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  7322  0763  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7323  0764  00F3               	movwf	FLASH_EraseBlock@startAddr
  7324  0765  3189  21E7  3187   	fcall	_FLASH_EraseBlock
  7325                           
  7326                           ;memory.c: 107: PMCON1bits.CFGS = 0;
  7327  0768  0023               	movlb	3	; select bank3
  7328  0769  1315               	bcf	21,6	;volatile
  7329                           
  7330                           ;memory.c: 108: PMCON1bits.WREN = 1;
  7331  076A  1515               	bsf	21,2	;volatile
  7332                           
  7333                           ;memory.c: 109: PMCON1bits.LWLO = 1;
  7334  076B  1695               	bsf	21,5	;volatile
  7335                           
  7336                           ;memory.c: 111: for (i = 0; i < 32; i++) {
  7337  076C  0020               	movlb	0	; select bank0
  7338  076D  01A9               	clrf	FLASH_WriteBlock@i
  7339  076E  3020               	movlw	32
  7340  076F  0229               	subwf	FLASH_WriteBlock@i,w
  7341  0770  1803               	btfsc	3,0
  7342  0771  2FAF               	goto	l166
  7343  0772                     l4212:	
  7344                           
  7345                           ;memory.c: 113: PMADRL = (writeAddr & 0xFF);
  7346  0772  0820               	movf	FLASH_WriteBlock@writeAddr,w
  7347  0773  0023               	movlb	3	; select bank3
  7348  0774  0091               	movwf	17	;volatile
  7349                           
  7350                           ;memory.c: 115: PMADRH = ((writeAddr & 0xFF00) >> 8);
  7351  0775  0020               	movlb	0	; select bank0
  7352  0776  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  7353  0777  0023               	movlb	3	; select bank3
  7354  0778  0092               	movwf	18	;volatile
  7355                           
  7356                           ;memory.c: 118: PMDATL = flashWordArray[i];
  7357  0779  0020               	movlb	0	; select bank0
  7358  077A  3529               	lslf	FLASH_WriteBlock@i,w
  7359  077B  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7360  077C  00A3               	movwf	??_FLASH_WriteBlock
  7361  077D  0823               	movf	??_FLASH_WriteBlock,w
  7362  077E  0086               	movwf	6
  7363  077F  3001               	movlw	1	; select bank2/3
  7364  0780  0087               	movwf	7
  7365  0781  0801               	movf	1,w
  7366  0782  0023               	movlb	3	; select bank3
  7367  0783  0093               	movwf	19	;volatile
  7368                           
  7369                           ;memory.c: 119: PMDATH = ((flashWordArray[i] & 0xFF00) >> 8);
  7370  0784  0020               	movlb	0	; select bank0
  7371  0785  3529               	lslf	FLASH_WriteBlock@i,w
  7372  0786  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  7373  0787  00A3               	movwf	??_FLASH_WriteBlock
  7374  0788  0823               	movf	??_FLASH_WriteBlock,w
  7375  0789  0086               	movwf	6
  7376  078A  3001               	movlw	1	; select bank2/3
  7377  078B  0087               	movwf	7
  7378  078C  3F40               	moviw [0]fsr1
  7379  078D  00A4               	movwf	??_FLASH_WriteBlock+1
  7380  078E  3F41               	moviw [1]fsr1
  7381  078F  00A5               	movwf	??_FLASH_WriteBlock+2
  7382  0790  0825               	movf	??_FLASH_WriteBlock+2,w
  7383  0791  0023               	movlb	3	; select bank3
  7384  0792  0094               	movwf	20	;volatile
  7385                           
  7386                           ;memory.c: 121: if (i == (32 - 1)) {
  7387  0793  301F               	movlw	31
  7388  0794  0020               	movlb	0	; select bank0
  7389  0795  0629               	xorwf	FLASH_WriteBlock@i,w
  7390  0796  1D03               	btfss	3,2
  7391  0797  2F9A               	goto	l4224
  7392                           
  7393                           ;memory.c: 123: PMCON1bits.LWLO = 0;
  7394  0798  0023               	movlb	3	; select bank3
  7395  0799  1295               	bcf	21,5	;volatile
  7396  079A                     l4224:	
  7397                           
  7398                           ;memory.c: 124: }
  7399                           ;memory.c: 126: PMCON2 = 0x55;
  7400  079A  3055               	movlw	85
  7401  079B  0023               	movlb	3	; select bank3
  7402  079C  0096               	movwf	22	;volsfr
  7403                           
  7404                           ;memory.c: 127: PMCON2 = 0xAA;
  7405  079D  30AA               	movlw	170
  7406  079E  0096               	movwf	22	;volsfr
  7407                           
  7408                           ;memory.c: 128: PMCON1bits.WR = 1;
  7409  079F  1495               	bsf	21,1	;volatile
  7410                           
  7411                           ;memory.c: 129: __nop();
  7412  07A0  0000               	nop
  7413                           
  7414                           ;memory.c: 130: __nop();
  7415  07A1  0000               	nop
  7416                           
  7417                           ;memory.c: 132: writeAddr++;
  7418  07A2  3001               	movlw	1
  7419  07A3  0020               	movlb	0	; select bank0
  7420  07A4  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  7421  07A5  3000               	movlw	0
  7422  07A6  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  7423  07A7  3001               	movlw	1
  7424  07A8  00A3               	movwf	??_FLASH_WriteBlock
  7425  07A9  0823               	movf	??_FLASH_WriteBlock,w
  7426  07AA  07A9               	addwf	FLASH_WriteBlock@i,f
  7427  07AB  3020               	movlw	32
  7428  07AC  0229               	subwf	FLASH_WriteBlock@i,w
  7429  07AD  1C03               	skipc
  7430  07AE  2F72               	goto	l4212
  7431  07AF                     l166:	
  7432                           
  7433                           ;memory.c: 133: }
  7434                           ;memory.c: 135: PMCON1bits.WREN = 0;
  7435  07AF  0023               	movlb	3	; select bank3
  7436  07B0  1115               	bcf	21,2	;volatile
  7437                           
  7438                           ;memory.c: 136: INTCONbits.GIE = GIEBitValue;
  7439  07B1  0020               	movlb	0	; select bank0
  7440  07B2  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  7441  07B3  1C03               	skipc
  7442  07B4  138B               	bcf	11,7	;volatile
  7443  07B5  1803               	skipnc
  7444  07B6  178B               	bsf	11,7	;volatile
  7445  07B7  0008               	return
  7446  07B8                     __end_of_FLASH_WriteBlock:	
  7447                           ;memory.c: 138: return 0;
  7448                           ;	Return value of _FLASH_WriteBlock is never used
  7449                           
  7450                           
  7451                           	psect	text27
  7452  09E7                     __ptext27:	
  7453 ;; *************** function _FLASH_EraseBlock *****************
  7454 ;; Defined at:
  7455 ;;		line 141 in file "mcc_generated_files/memory.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  startAddr       2    3[COMMON] unsigned int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:        3 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    3
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_FLASH_WriteBlock
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _FLASH_EraseBlock
  7485  09E7                     _FLASH_EraseBlock:	
  7486                           
  7487                           ;memory.c: 142: uint8_t GIEBitValue = INTCONbits.GIE;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  7491  09E7  3000               	movlw	0
  7492  09E8  1B8B               	btfsc	11,7	;volatile
  7493  09E9  3001               	movlw	1
  7494  09EA  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  7495                           
  7496                           ;memory.c: 145: INTCONbits.GIE = 0;
  7497  09EB  138B               	bcf	11,7	;volatile
  7498                           
  7499                           ;memory.c: 147: PMADRL = (startAddr & 0xFF);
  7500  09EC  0873               	movf	FLASH_EraseBlock@startAddr,w
  7501  09ED  0023               	movlb	3	; select bank3
  7502  09EE  0091               	movwf	17	;volatile
  7503                           
  7504                           ;memory.c: 149: PMADRH = ((startAddr & 0xFF00) >> 8);
  7505  09EF  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  7506  09F0  0092               	movwf	18	;volatile
  7507                           
  7508                           ;memory.c: 152: PMCON1bits.CFGS = 0;
  7509  09F1  1315               	bcf	21,6	;volatile
  7510                           
  7511                           ;memory.c: 153: PMCON1bits.FREE = 1;
  7512  09F2  1615               	bsf	21,4	;volatile
  7513                           
  7514                           ;memory.c: 154: PMCON1bits.WREN = 1;
  7515  09F3  1515               	bsf	21,2	;volatile
  7516                           
  7517                           ;memory.c: 157: PMCON2 = 0x55;
  7518  09F4  3055               	movlw	85
  7519  09F5  0096               	movwf	22	;volsfr
  7520                           
  7521                           ;memory.c: 158: PMCON2 = 0xAA;
  7522  09F6  30AA               	movlw	170
  7523  09F7  0096               	movwf	22	;volsfr
  7524                           
  7525                           ;memory.c: 159: PMCON1bits.WR = 1;
  7526  09F8  1495               	bsf	21,1	;volatile
  7527                           
  7528                           ;memory.c: 160: __nop();
  7529  09F9  0000               	nop
  7530                           
  7531                           ;memory.c: 161: __nop();
  7532  09FA  0000               	nop
  7533                           
  7534                           ;memory.c: 163: PMCON1bits.WREN = 0;
  7535  09FB  0023               	movlb	3	; select bank3
  7536  09FC  1115               	bcf	21,2	;volatile
  7537                           
  7538                           ;memory.c: 164: INTCONbits.GIE = GIEBitValue;
  7539  09FD  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  7540  09FE  1C03               	skipc
  7541  09FF  138B               	bcf	11,7	;volatile
  7542  0A00  1803               	skipnc
  7543  0A01  178B               	bsf	11,7	;volatile
  7544  0A02  0008               	return
  7545  0A03                     __end_of_FLASH_EraseBlock:	
  7546                           
  7547                           	psect	text28
  7548  0949                     __ptext28:	
  7549 ;; *************** function _FLASH_ReadWord *****************
  7550 ;; Defined at:
  7551 ;;		line 58 in file "mcc_generated_files/memory.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  flashAddr       2    3[COMMON] unsigned int 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    3[COMMON] unsigned int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;Total ram usage:        3 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    3
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_FLASH_WriteWord
  7576 ;;		_Key_Process
  7577 ;;		_Serach_Flash_Head
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _FLASH_ReadWord
  7583  0949                     _FLASH_ReadWord:	
  7584                           
  7585                           ;memory.c: 59: uint8_t GIEBitValue = INTCONbits.GIE;
  7586                           
  7587                           ;incstack = 0
  7588                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  7589  0949  3000               	movlw	0
  7590  094A  1B8B               	btfsc	11,7	;volatile
  7591  094B  3001               	movlw	1
  7592  094C  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  7593                           
  7594                           ;memory.c: 61: INTCONbits.GIE = 0;
  7595  094D  138B               	bcf	11,7	;volatile
  7596                           
  7597                           ;memory.c: 62: PMADRL = (flashAddr & 0x00FF);
  7598  094E  0873               	movf	FLASH_ReadWord@flashAddr,w
  7599  094F  0023               	movlb	3	; select bank3
  7600  0950  0091               	movwf	17	;volatile
  7601                           
  7602                           ;memory.c: 63: PMADRH = ((flashAddr & 0xFF00) >> 8);
  7603  0951  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  7604  0952  0092               	movwf	18	;volatile
  7605                           
  7606                           ;memory.c: 65: PMCON1bits.CFGS = 0;
  7607  0953  1315               	bcf	21,6	;volatile
  7608                           
  7609                           ;memory.c: 66: PMCON1bits.RD = 1;
  7610  0954  1415               	bsf	21,0	;volatile
  7611                           
  7612                           ;memory.c: 67: __nop();
  7613  0955  0000               	nop
  7614                           
  7615                           ;memory.c: 68: __nop();
  7616  0956  0000               	nop
  7617                           
  7618                           ;memory.c: 69: INTCONbits.GIE = GIEBitValue;
  7619  0957  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  7620  0958  1C03               	skipc
  7621  0959  138B               	bcf	11,7	;volatile
  7622  095A  1803               	skipnc
  7623  095B  178B               	bsf	11,7	;volatile
  7624                           
  7625                           ;memory.c: 71: return ((PMDATH << 8) | PMDATL);
  7626  095C  0023               	movlb	3	; select bank3
  7627  095D  0814               	movf	20,w	;volatile
  7628  095E  00F4               	movwf	?_FLASH_ReadWord+1
  7629  095F  0813               	movf	19,w	;volatile
  7630  0960  00F3               	movwf	?_FLASH_ReadWord
  7631  0961  0008               	return
  7632  0962                     __end_of_FLASH_ReadWord:	
  7633                           
  7634                           	psect	text29
  7635  0F38                     __ptext29:	
  7636 ;; *************** function _Bq32k_Rtc_Read_Time *****************
  7637 ;; Defined at:
  7638 ;;		line 30 in file "mcc_generated_files/bq32k.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  p               1    wreg     PTR struct bq32k_regs
  7641 ;;		 -> rtc_tm(7), 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  p               1   15[BANK0 ] PTR struct bq32k_regs
  7644 ;;		 -> rtc_tm(7), 
  7645 ;;  temp           10    5[BANK0 ] unsigned char [10]
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;Total ram usage:       13 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    5
  7662 ;; This function calls:
  7663 ;;		_I2C_Read_Buffer
  7664 ;;		_bcd2bin
  7665 ;; This function is called by:
  7666 ;;		_time_Display
  7667 ;;		_Calculate_Time
  7668 ;;		_Save_Write_time
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function _Bq32k_Rtc_Read_Time
  7674  0F38                     _Bq32k_Rtc_Read_Time:	
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in _Bq32k_Rtc_Read_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7678                           ;Bq32k_Rtc_Read_Time@p stored from wreg
  7679  0F38  0020               	movlb	0	; select bank0
  7680  0F39  00AF               	movwf	Bq32k_Rtc_Read_Time@p
  7681                           
  7682                           ;bq32k.c: 32: unsigned char temp[10] ;
  7683                           ;bq32k.c: 33: I2C_Read_Buffer( 0 , temp , 7);
  7684  0F3A  3025               	movlw	(low (Bq32k_Rtc_Read_Time@temp| 0))& (0+255)
  7685  0F3B  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7686  0F3C  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7687  0F3D  00F6               	movwf	I2C_Read_Buffer@buff
  7688  0F3E  3007               	movlw	7
  7689  0F3F  00A4               	movwf	??_Bq32k_Rtc_Read_Time+1
  7690  0F40  0824               	movf	??_Bq32k_Rtc_Read_Time+1,w
  7691  0F41  00F7               	movwf	I2C_Read_Buffer@Length
  7692  0F42  3000               	movlw	0
  7693  0F43  3186  2663  318F   	fcall	_I2C_Read_Buffer
  7694                           
  7695                           ;bq32k.c: 34: p->seconds = bcd2bin(temp[0] & 0x7F);
  7696  0F46  0020               	movlb	0	; select bank0
  7697  0F47  0825               	movf	Bq32k_Rtc_Read_Time@temp,w
  7698  0F48  397F               	andlw	127
  7699  0F49  3188  20BD  318F   	fcall	_bcd2bin
  7700  0F4C  0020               	movlb	0	; select bank0
  7701  0F4D  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7702  0F4E  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7703  0F4F  0086               	movwf	6
  7704  0F50  0187               	clrf	7
  7705  0F51  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7706  0F52  0081               	movwf	1
  7707                           
  7708                           ;bq32k.c: 35: p->minutes = bcd2bin(temp[1] & 0x7F);
  7709  0F53  0826               	movf	Bq32k_Rtc_Read_Time@temp+1,w
  7710  0F54  397F               	andlw	127
  7711  0F55  3188  20BD  318F   	fcall	_bcd2bin
  7712  0F58  0020               	movlb	0	; select bank0
  7713  0F59  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7714  0F5A  0A2F               	incf	Bq32k_Rtc_Read_Time@p,w
  7715  0F5B  0086               	movwf	6
  7716  0F5C  0187               	clrf	7
  7717  0F5D  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7718  0F5E  0081               	movwf	1
  7719                           
  7720                           ;bq32k.c: 36: p->hours = bcd2bin(temp[2] & 0x3F);
  7721  0F5F  0827               	movf	Bq32k_Rtc_Read_Time@temp+2,w
  7722  0F60  393F               	andlw	63
  7723  0F61  3188  20BD  318F   	fcall	_bcd2bin
  7724  0F64  0020               	movlb	0	; select bank0
  7725  0F65  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7726  0F66  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7727  0F67  3E02               	addlw	2
  7728  0F68  0086               	movwf	6
  7729  0F69  0187               	clrf	7
  7730  0F6A  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7731  0F6B  0081               	movwf	1
  7732                           
  7733                           ;bq32k.c: 37: p->wday = bcd2bin(temp[3]);
  7734  0F6C  0828               	movf	Bq32k_Rtc_Read_Time@temp+3,w
  7735  0F6D  3188  20BD  318F   	fcall	_bcd2bin
  7736  0F70  0020               	movlb	0	; select bank0
  7737  0F71  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7738  0F72  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7739  0F73  3E03               	addlw	3
  7740  0F74  0086               	movwf	6
  7741  0F75  0187               	clrf	7
  7742  0F76  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7743  0F77  0081               	movwf	1
  7744                           
  7745                           ;bq32k.c: 38: p->date = bcd2bin(temp[4]);
  7746  0F78  0829               	movf	Bq32k_Rtc_Read_Time@temp+4,w
  7747  0F79  3188  20BD  318F   	fcall	_bcd2bin
  7748  0F7C  0020               	movlb	0	; select bank0
  7749  0F7D  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7750  0F7E  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7751  0F7F  3E04               	addlw	4
  7752  0F80  0086               	movwf	6
  7753  0F81  0187               	clrf	7
  7754  0F82  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7755  0F83  0081               	movwf	1
  7756                           
  7757                           ;bq32k.c: 39: p->month = bcd2bin(temp[5]);
  7758  0F84  082A               	movf	Bq32k_Rtc_Read_Time@temp+5,w
  7759  0F85  3188  20BD  318F   	fcall	_bcd2bin
  7760  0F88  0020               	movlb	0	; select bank0
  7761  0F89  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7762  0F8A  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7763  0F8B  3E05               	addlw	5
  7764  0F8C  0086               	movwf	6
  7765  0F8D  0187               	clrf	7
  7766  0F8E  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7767  0F8F  0081               	movwf	1
  7768                           
  7769                           ;bq32k.c: 40: p->years= bcd2bin(temp[6]);
  7770  0F90  082B               	movf	Bq32k_Rtc_Read_Time@temp+6,w
  7771  0F91  3188  20BD         	fcall	_bcd2bin
  7772  0F93  0020               	movlb	0	; select bank0
  7773  0F94  00A3               	movwf	??_Bq32k_Rtc_Read_Time
  7774  0F95  082F               	movf	Bq32k_Rtc_Read_Time@p,w
  7775  0F96  3E06               	addlw	6
  7776  0F97  0086               	movwf	6
  7777  0F98  0187               	clrf	7
  7778  0F99  0823               	movf	??_Bq32k_Rtc_Read_Time,w
  7779  0F9A  0081               	movwf	1
  7780  0F9B  0008               	return
  7781  0F9C                     __end_of_Bq32k_Rtc_Read_Time:	
  7782                           
  7783                           	psect	text30
  7784  08BD                     __ptext30:	
  7785 ;; *************** function _bcd2bin *****************
  7786 ;; Defined at:
  7787 ;;		line 68 in file "mcc_generated_files/bq32k.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  val             1    wreg     unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  val             1    7[COMMON] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      unsigned char 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, pclath, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;Total ram usage:        4 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    4
  7808 ;; This function calls:
  7809 ;;		___bmul
  7810 ;; This function is called by:
  7811 ;;		_Bq32k_Rtc_Read_Time
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           
  7816                           ;psect for function _bcd2bin
  7817  08BD                     _bcd2bin:	
  7818                           
  7819                           ;incstack = 0
  7820                           ; Regs used in _bcd2bin: [wreg+status,2+status,0+pclath+cstack]
  7821                           ;bcd2bin@val stored from wreg
  7822  08BD  00F7               	movwf	bcd2bin@val
  7823                           
  7824                           ;bq32k.c: 70: return (val & 0x0f) + (val >> 4) * 10;
  7825  08BE  300F               	movlw	15
  7826  08BF  0577               	andwf	bcd2bin@val,w
  7827  08C0  0020               	movlb	0	; select bank0
  7828  08C1  00A0               	movwf	??_bcd2bin
  7829  08C2  300A               	movlw	10
  7830  08C3  00A1               	movwf	??_bcd2bin+1
  7831  08C4  0821               	movf	??_bcd2bin+1,w
  7832  08C5  00F3               	movwf	___bmul@multiplicand
  7833  08C6  0877               	movf	bcd2bin@val,w
  7834  08C7  00A2               	movwf	??_bcd2bin+2
  7835  08C8  3004               	movlw	4
  7836  08C9                     u3645:	
  7837  08C9  36A2               	lsrf	??_bcd2bin+2,f
  7838  08CA  0B89               	decfsz	9,f
  7839  08CB  28C9               	goto	u3645
  7840  08CC  0822               	movf	??_bcd2bin+2,w
  7841  08CD  3188  20AC         	fcall	___bmul
  7842  08CF  0020               	movlb	0	; select bank0
  7843  08D0  0720               	addwf	??_bcd2bin,w
  7844  08D1  0008               	return
  7845  08D2                     __end_of_bcd2bin:	
  7846                           
  7847                           	psect	text31
  7848  08AC                     __ptext31:	
  7849 ;; *************** function ___bmul *****************
  7850 ;; Defined at:
  7851 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  multiplier      1    wreg     unsigned char 
  7854 ;;  multiplicand    1    3[COMMON] unsigned char 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;  multiplier      1    6[COMMON] unsigned char 
  7857 ;;  product         1    5[COMMON] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      unsigned char 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;Total ram usage:        4 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    3
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_bcd2bin
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function ___bmul
  7883  08AC                     ___bmul:	
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7887                           ;___bmul@multiplier stored from wreg
  7888  08AC  00F6               	movwf	___bmul@multiplier
  7889  08AD  01F5               	clrf	___bmul@product
  7890  08AE                     l4318:	
  7891  08AE  1C76               	btfss	___bmul@multiplier,0
  7892  08AF  28B4               	goto	l4322
  7893  08B0  0873               	movf	___bmul@multiplicand,w
  7894  08B1  00F4               	movwf	??___bmul
  7895  08B2  0874               	movf	??___bmul,w
  7896  08B3  07F5               	addwf	___bmul@product,f
  7897  08B4                     l4322:	
  7898  08B4  1003               	clrc
  7899  08B5  0DF3               	rlf	___bmul@multiplicand,f
  7900  08B6  1003               	clrc
  7901  08B7  0CF6               	rrf	___bmul@multiplier,f
  7902  08B8  0876               	movf	___bmul@multiplier,w
  7903  08B9  1D03               	btfss	3,2
  7904  08BA  28AE               	goto	l4318
  7905  08BB  0875               	movf	___bmul@product,w
  7906  08BC  0008               	return
  7907  08BD                     __end_of___bmul:	
  7908                           
  7909                           	psect	text32
  7910  0663                     __ptext32:	
  7911 ;; *************** function _I2C_Read_Buffer *****************
  7912 ;; Defined at:
  7913 ;;		line 120 in file "mcc_generated_files/i2c.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  ADD             1    wreg     unsigned char 
  7916 ;;  buff            1    6[COMMON] PTR unsigned char 
  7917 ;;		 -> Bq32k_Rtc_Read_Time@temp(10), 
  7918 ;;  Length          1    7[COMMON] unsigned char 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  ADD             1    1[BANK0 ] unsigned char 
  7921 ;;  Flag            1    2[BANK0 ] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      unsigned char 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:        5 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    4
  7938 ;; This function calls:
  7939 ;;		_I2C_Receive_Byte
  7940 ;;		_I2C_Send_Byte
  7941 ;;		_I2C_Start
  7942 ;;		_I2C_Stop
  7943 ;; This function is called by:
  7944 ;;		_Bq32k_Rtc_Read_Time
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function _I2C_Read_Buffer
  7950  0663                     _I2C_Read_Buffer:	
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _I2C_Read_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7954                           ;I2C_Read_Buffer@ADD stored from wreg
  7955  0663  0020               	movlb	0	; select bank0
  7956  0664  00A1               	movwf	I2C_Read_Buffer@ADD
  7957                           
  7958                           ;i2c.c: 122: unsigned char Flag=1;
  7959  0665  01A2               	clrf	I2C_Read_Buffer@Flag
  7960  0666  0AA2               	incf	I2C_Read_Buffer@Flag,f
  7961                           
  7962                           ;i2c.c: 124: I2C_Start();
  7963  0667  3189  2117  3186   	fcall	_I2C_Start
  7964                           
  7965                           ;i2c.c: 126: Flag=I2C_Send_Byte(0XD0);
  7966  066A  30D0               	movlw	208
  7967  066B  318D  25E6  3186   	fcall	_I2C_Send_Byte
  7968  066E  0020               	movlb	0	; select bank0
  7969  066F  00A0               	movwf	??_I2C_Read_Buffer
  7970  0670  0820               	movf	??_I2C_Read_Buffer,w
  7971  0671  00A2               	movwf	I2C_Read_Buffer@Flag
  7972                           
  7973                           ;i2c.c: 127: if(Flag)
  7974  0672  0822               	movf	I2C_Read_Buffer@Flag,w
  7975  0673  1D03               	btfss	3,2
  7976  0674  0008               	return
  7977                           
  7978                           ;i2c.c: 130: Flag=I2C_Send_Byte(ADD);
  7979                           
  7980                           ;i2c.c: 128: return 0x01;
  7981                           ;	Return value of _I2C_Read_Buffer is never used
  7982  0675  0821               	movf	I2C_Read_Buffer@ADD,w
  7983  0676  318D  25E6  3186   	fcall	_I2C_Send_Byte
  7984  0679  0020               	movlb	0	; select bank0
  7985  067A  00A0               	movwf	??_I2C_Read_Buffer
  7986  067B  0820               	movf	??_I2C_Read_Buffer,w
  7987  067C  00A2               	movwf	I2C_Read_Buffer@Flag
  7988                           
  7989                           ;i2c.c: 131: if(Flag)
  7990  067D  0822               	movf	I2C_Read_Buffer@Flag,w
  7991  067E  1D03               	btfss	3,2
  7992  067F  0008               	return
  7993                           
  7994                           ;i2c.c: 134: I2C_Start();
  7995                           
  7996                           ;i2c.c: 132: return 0x01;
  7997                           ;	Return value of _I2C_Read_Buffer is never used
  7998  0680  3189  2117  3186   	fcall	_I2C_Start
  7999                           
  8000                           ;i2c.c: 135: Flag=I2C_Send_Byte(0XD0+1);
  8001  0683  30D1               	movlw	209
  8002  0684  318D  25E6  3186   	fcall	_I2C_Send_Byte
  8003  0687  0020               	movlb	0	; select bank0
  8004  0688  00A0               	movwf	??_I2C_Read_Buffer
  8005  0689  0820               	movf	??_I2C_Read_Buffer,w
  8006  068A  00A2               	movwf	I2C_Read_Buffer@Flag
  8007                           
  8008                           ;i2c.c: 136: if(Flag)
  8009  068B  0822               	movf	I2C_Read_Buffer@Flag,w
  8010  068C  1D03               	btfss	3,2
  8011  068D  0008               	return
  8012  068E                     l4386:	
  8013  068E  3002               	movlw	2
  8014  068F  0277               	subwf	I2C_Read_Buffer@Length,w
  8015  0690  1C03               	btfss	3,0
  8016  0691  2EB9               	goto	l4388
  8017                           
  8018                           ;i2c.c: 140: {
  8019                           ;i2c.c: 141: *buff = I2C_Receive_Byte();
  8020                           
  8021                           ;i2c.c: 139: while(Length>1)
  8022                           
  8023                           ;i2c.c: 137: return 0x01;
  8024                           ;	Return value of _I2C_Read_Buffer is never used
  8025  0692  318A  22CB  3186   	fcall	_I2C_Receive_Byte
  8026  0695  0020               	movlb	0	; select bank0
  8027  0696  00A0               	movwf	??_I2C_Read_Buffer
  8028  0697  0876               	movf	I2C_Read_Buffer@buff,w
  8029  0698  0086               	movwf	6
  8030  0699  0187               	clrf	7
  8031  069A  0820               	movf	??_I2C_Read_Buffer,w
  8032  069B  0081               	movwf	1
  8033                           
  8034                           ;i2c.c: 143: do { LATB1 = 0; } while(0);
  8035  069C  0022               	movlb	2	; select bank2
  8036  069D  108D               	bcf	13,1	;volatile
  8037                           
  8038                           ;i2c.c: 144: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8039  069E  300D               	movlw	13
  8040  069F  0020               	movlb	0	; select bank0
  8041  06A0  00A0               	movwf	??_I2C_Read_Buffer
  8042  06A1                     u5107:	
  8043  06A1  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8044  06A2  2EA1               	goto	u5107
  8045                           
  8046                           ;i2c.c: 145: do { LATB0 = 1; } while(0);
  8047  06A3  0022               	movlb	2	; select bank2
  8048  06A4  140D               	bsf	13,0	;volatile
  8049                           
  8050                           ;i2c.c: 146: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8051  06A5  300D               	movlw	13
  8052  06A6  0020               	movlb	0	; select bank0
  8053  06A7  00A0               	movwf	??_I2C_Read_Buffer
  8054  06A8                     u5117:	
  8055  06A8  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8056  06A9  2EA8               	goto	u5117
  8057                           
  8058                           ;i2c.c: 147: do { LATB0 = 0; } while(0);
  8059  06AA  0022               	movlb	2	; select bank2
  8060  06AB  100D               	bcf	13,0	;volatile
  8061                           
  8062                           ;i2c.c: 148: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8063  06AC  300D               	movlw	13
  8064  06AD  0020               	movlb	0	; select bank0
  8065  06AE  00A0               	movwf	??_I2C_Read_Buffer
  8066  06AF                     u5127:	
  8067  06AF  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8068  06B0  2EAF               	goto	u5127
  8069                           
  8070                           ;i2c.c: 150: buff++;
  8071  06B1  3001               	movlw	1
  8072  06B2  0020               	movlb	0	; select bank0
  8073  06B3  00A0               	movwf	??_I2C_Read_Buffer
  8074  06B4  0820               	movf	??_I2C_Read_Buffer,w
  8075  06B5  07F6               	addwf	I2C_Read_Buffer@buff,f
  8076                           
  8077                           ;i2c.c: 151: Length--;
  8078  06B6  3001               	movlw	1
  8079  06B7  02F7               	subwf	I2C_Read_Buffer@Length,f
  8080  06B8  2E8E               	goto	l4386
  8081  06B9                     l4388:	
  8082                           
  8083                           ;i2c.c: 152: }
  8084                           ;i2c.c: 153: *buff = I2C_Receive_Byte();
  8085  06B9  318A  22CB  3186   	fcall	_I2C_Receive_Byte
  8086  06BC  0020               	movlb	0	; select bank0
  8087  06BD  00A0               	movwf	??_I2C_Read_Buffer
  8088  06BE  0876               	movf	I2C_Read_Buffer@buff,w
  8089  06BF  0086               	movwf	6
  8090  06C0  0187               	clrf	7
  8091  06C1  0820               	movf	??_I2C_Read_Buffer,w
  8092  06C2  0081               	movwf	1
  8093                           
  8094                           ;i2c.c: 155: do { LATB1 = 1; } while(0);
  8095  06C3  0022               	movlb	2	; select bank2
  8096  06C4  148D               	bsf	13,1	;volatile
  8097                           
  8098                           ;i2c.c: 156: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8099  06C5  300D               	movlw	13
  8100  06C6  0020               	movlb	0	; select bank0
  8101  06C7  00A0               	movwf	??_I2C_Read_Buffer
  8102  06C8                     u5137:	
  8103  06C8  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8104  06C9  2EC8               	goto	u5137
  8105                           
  8106                           ;i2c.c: 157: do { LATB0 = 1; } while(0);
  8107  06CA  0022               	movlb	2	; select bank2
  8108  06CB  140D               	bsf	13,0	;volatile
  8109                           
  8110                           ;i2c.c: 158: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8111  06CC  300D               	movlw	13
  8112  06CD  0020               	movlb	0	; select bank0
  8113  06CE  00A0               	movwf	??_I2C_Read_Buffer
  8114  06CF                     u5147:	
  8115  06CF  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8116  06D0  2ECF               	goto	u5147
  8117                           
  8118                           ;i2c.c: 159: do { LATB0 = 0; } while(0);
  8119  06D1  0022               	movlb	2	; select bank2
  8120  06D2  100D               	bcf	13,0	;volatile
  8121                           
  8122                           ;i2c.c: 160: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8123  06D3  300D               	movlw	13
  8124  06D4  0020               	movlb	0	; select bank0
  8125  06D5  00A0               	movwf	??_I2C_Read_Buffer
  8126  06D6                     u5157:	
  8127  06D6  0BA0               	decfsz	??_I2C_Read_Buffer,f
  8128  06D7  2ED6               	goto	u5157
  8129                           
  8130                           ;i2c.c: 162: I2C_Stop();
  8131  06D8  3189  2130         	fcall	_I2C_Stop
  8132  06DA  0008               	return
  8133  06DB                     __end_of_I2C_Read_Buffer:	
  8134                           ;i2c.c: 164: return 0x00;
  8135                           ;	Return value of _I2C_Read_Buffer is never used
  8136                           
  8137                           
  8138                           	psect	text33
  8139  0ACB                     __ptext33:	
  8140 ;; *************** function _I2C_Receive_Byte *****************
  8141 ;; Defined at:
  8142 ;;		line 74 in file "mcc_generated_files/i2c.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  i               1    5[COMMON] unsigned char 
  8147 ;;  Data            1    4[COMMON] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      unsigned char 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;Total ram usage:        3 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; Hardware stack levels required when called:    3
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_I2C_Read_Buffer
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           
  8172                           ;psect for function _I2C_Receive_Byte
  8173  0ACB                     _I2C_Receive_Byte:	
  8174                           
  8175                           ;i2c.c: 76: unsigned char i,Data=0;
  8176                           
  8177                           ;incstack = 0
  8178                           ; Regs used in _I2C_Receive_Byte: [wreg+status,2+status,0]
  8179  0ACB  01F4               	clrf	I2C_Receive_Byte@Data
  8180                           
  8181                           ;i2c.c: 77: do { LATB1 = 1; } while(0);
  8182  0ACC  0022               	movlb	2	; select bank2
  8183  0ACD  148D               	bsf	13,1	;volatile
  8184                           
  8185                           ;i2c.c: 78: for(i=0;i<8;i++)
  8186  0ACE  01F5               	clrf	I2C_Receive_Byte@i
  8187  0ACF  3008               	movlw	8
  8188  0AD0  0275               	subwf	I2C_Receive_Byte@i,w
  8189  0AD1  1803               	btfsc	3,0
  8190  0AD2  2AF3               	goto	l4304
  8191                           
  8192                           ;i2c.c: 79: {
  8193                           ;i2c.c: 80: Data <<= 1;
  8194  0AD3  1003               	clrc
  8195  0AD4                     L9:	
  8196  0AD4  0DF4               	rlf	I2C_Receive_Byte@Data,f
  8197                           
  8198                           ;i2c.c: 81: do { LATB0 = 1; } while(0);
  8199  0AD5  0022               	movlb	2	; select bank2
  8200  0AD6  140D               	bsf	13,0	;volatile
  8201                           
  8202                           ;i2c.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8203  0AD7  300D               	movlw	13
  8204  0AD8  00F3               	movwf	??_I2C_Receive_Byte
  8205  0AD9                     u5167:	
  8206  0AD9  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8207  0ADA  2AD9               	goto	u5167
  8208                           
  8209                           ;i2c.c: 83: do { TRISB1 = 1; } while(0);
  8210  0ADB  0021               	movlb	1	; select bank1
  8211  0ADC  148D               	bsf	13,1	;volatile
  8212                           
  8213                           ;i2c.c: 84: if(RB1)
  8214  0ADD  0020               	movlb	0	; select bank0
  8215  0ADE  1C8D               	btfss	13,1	;volatile
  8216  0ADF  2AE3               	goto	l768
  8217                           
  8218                           ;i2c.c: 85: {
  8219                           ;i2c.c: 86: do { TRISB1 = 0; } while(0);
  8220  0AE0  0021               	movlb	1	; select bank1
  8221  0AE1  108D               	bcf	13,1	;volatile
  8222                           
  8223                           ;i2c.c: 87: Data |= 0x01;
  8224  0AE2  1474               	bsf	I2C_Receive_Byte@Data,0
  8225  0AE3                     l768:	
  8226                           ;i2c.c: 88: }
  8227                           ;i2c.c: 89: do { TRISB1 = 0; } while(0);
  8228                           
  8229  0AE3  0021               	movlb	1	; select bank1
  8230  0AE4  108D               	bcf	13,1	;volatile
  8231                           
  8232                           ;i2c.c: 90: do { LATB0 = 0; } while(0);
  8233  0AE5  0022               	movlb	2	; select bank2
  8234  0AE6  100D               	bcf	13,0	;volatile
  8235                           
  8236                           ;i2c.c: 91: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8237  0AE7  300D               	movlw	13
  8238  0AE8  00F3               	movwf	??_I2C_Receive_Byte
  8239  0AE9                     u5177:	
  8240  0AE9  0BF3               	decfsz	??_I2C_Receive_Byte,f
  8241  0AEA  2AE9               	goto	u5177
  8242  0AEB  3001               	movlw	1
  8243  0AEC  00F3               	movwf	??_I2C_Receive_Byte
  8244  0AED  0873               	movf	??_I2C_Receive_Byte,w
  8245  0AEE  07F5               	addwf	I2C_Receive_Byte@i,f
  8246  0AEF  3008               	movlw	8
  8247  0AF0  0275               	subwf	I2C_Receive_Byte@i,w
  8248  0AF1  1C03               	skipc
  8249  0AF2  2AD4               	goto	L9
  8250  0AF3                     l4304:	
  8251                           
  8252                           ;i2c.c: 92: }
  8253                           ;i2c.c: 93: return Data;
  8254  0AF3  0874               	movf	I2C_Receive_Byte@Data,w
  8255  0AF4  0008               	return
  8256  0AF5                     __end_of_I2C_Receive_Byte:	
  8257                           
  8258                           	psect	text34
  8259  087B                     __ptext34:	
  8260 ;; *************** function _maxim_clear_fault_status *****************
  8261 ;; Defined at:
  8262 ;;		line 155 in file "mcc_generated_files/max31856.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:        1 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    5
  8283 ;; This function calls:
  8284 ;;		_maxim_31856_read_register
  8285 ;;		_maxim_31856_write_register
  8286 ;; This function is called by:
  8287 ;;		_temperature_display
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _maxim_clear_fault_status
  8293  087B                     _maxim_clear_fault_status:	
  8294                           
  8295                           ;max31856.c: 157: uch_cr0= maxim_31856_read_register(0x00);
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _maxim_clear_fault_status: [wreg+status,2+status,0+pclath+cstack]
  8299  087B  3000               	movlw	0
  8300  087C  3188  209B  3188   	fcall	_maxim_31856_read_register
  8301  087F  00F7               	movwf	??_maxim_clear_fault_status
  8302  0880  0877               	movf	??_maxim_clear_fault_status,w
  8303  0881  00FA               	movwf	_uch_cr0
  8304                           
  8305                           ;max31856.c: 158: uch_cr0|= (uint8_t) 0x02 ;
  8306  0882  14FA               	bsf	_uch_cr0,1
  8307                           
  8308                           ;max31856.c: 159: maxim_31856_write_register(0x80, uch_cr0);
  8309  0883  087A               	movf	_uch_cr0,w
  8310  0884  00F7               	movwf	??_maxim_clear_fault_status
  8311  0885  0877               	movf	??_maxim_clear_fault_status,w
  8312  0886  00F4               	movwf	maxim_31856_write_register@uch_register_value
  8313  0887  3080               	movlw	128
  8314  0888  3188  206E         	fcall	_maxim_31856_write_register
  8315  088A  0008               	return
  8316  088B                     __end_of_maxim_clear_fault_status:	
  8317                           
  8318                           	psect	text35
  8319  0AF5                     __ptext35:	
  8320 ;; *************** function _err_Display *****************
  8321 ;; Defined at:
  8322 ;;		line 153 in file "mcc_generated_files/ht1621.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  num             4    7[BANK0 ] unsigned char [4]
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;Total ram usage:        5 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:    5
  8343 ;; This function calls:
  8344 ;;		_WriteAll_1621
  8345 ;; This function is called by:
  8346 ;;		_temperature_display
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           
  8351                           ;psect for function _err_Display
  8352  0AF5                     _err_Display:	
  8353                           
  8354                           ;ht1621.c: 155: unsigned char num[4]={0};
  8355                           
  8356                           ;incstack = 0
  8357                           ; Regs used in _err_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8358  0AF5  0021               	movlb	1	; select bank1
  8359  0AF6  0827               	movf	(err_Display@F2126+3)^(0+128),w
  8360  0AF7  0020               	movlb	0	; select bank0
  8361  0AF8  00AA               	movwf	err_Display@num+3
  8362  0AF9  0021               	movlb	1	; select bank1
  8363  0AFA  0826               	movf	(err_Display@F2126+2)^(0+128),w
  8364  0AFB  0020               	movlb	0	; select bank0
  8365  0AFC  00A9               	movwf	err_Display@num+2
  8366  0AFD  0021               	movlb	1	; select bank1
  8367  0AFE  0825               	movf	(err_Display@F2126+1)^(0+128),w
  8368  0AFF  0020               	movlb	0	; select bank0
  8369  0B00  00A8               	movwf	err_Display@num+1
  8370  0B01  0021               	movlb	1	; select bank1
  8371  0B02  0824               	movf	err_Display@F2126^(0+128),w
  8372  0B03  0020               	movlb	0	; select bank0
  8373  0B04  00A7               	movwf	err_Display@num
  8374                           
  8375                           ;ht1621.c: 156: num[1] = Dis_TAB[0x10];
  8376  0B05  3010               	movlw	low ((_Dis_TAB+16)| (0+32768))
  8377  0B06  0084               	movwf	4
  8378  0B07  3090               	movlw	high ((_Dis_TAB+16)| (0+32768))
  8379  0B08  0085               	movwf	5
  8380  0B09  0800               	movf	0,w	;code access
  8381  0B0A  00A6               	movwf	??_err_Display
  8382  0B0B  0826               	movf	??_err_Display,w
  8383  0B0C  00A8               	movwf	err_Display@num+1
  8384                           
  8385                           ;ht1621.c: 157: num[2] = Dis_TAB[0x0c];
  8386  0B0D  300C               	movlw	low ((_Dis_TAB+12)| (0+32768))
  8387  0B0E  0084               	movwf	4
  8388  0B0F  3090               	movlw	high ((_Dis_TAB+12)| (0+32768))
  8389  0B10  0085               	movwf	5
  8390  0B11  0800               	movf	0,w	;code access
  8391  0B12  00A6               	movwf	??_err_Display
  8392  0B13  0826               	movf	??_err_Display,w
  8393  0B14  00A9               	movwf	err_Display@num+2
  8394                           
  8395                           ;ht1621.c: 158: WriteAll_1621(0, num, 4);
  8396  0B15  3027               	movlw	low err_Display@num
  8397  0B16  00A0               	movwf	WriteAll_1621@p
  8398  0B17  3000               	movlw	high err_Display@num
  8399  0B18  00A1               	movwf	WriteAll_1621@p+1
  8400  0B19  3004               	movlw	4
  8401  0B1A  00A6               	movwf	??_err_Display
  8402  0B1B  0826               	movf	??_err_Display,w
  8403  0B1C  00A2               	movwf	WriteAll_1621@cnt
  8404  0B1D  3000               	movlw	0
  8405  0B1E  318C  2443         	fcall	_WriteAll_1621
  8406  0B20  0008               	return
  8407  0B21                     __end_of_err_Display:	
  8408                           
  8409                           	psect	text36
  8410  03A9                     __ptext36:	
  8411 ;; *************** function _Tc_Display *****************
  8412 ;; Defined at:
  8413 ;;		line 110 in file "mcc_generated_files/ht1621.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;		None
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  data            2   11[BANK0 ] unsigned int 
  8418 ;;  count           1   10[BANK0 ] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;Total ram usage:        4 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    5
  8435 ;; This function calls:
  8436 ;;		_WriteAll_1621
  8437 ;;		___lwdiv
  8438 ;;		___lwmod
  8439 ;;		_memset
  8440 ;; This function is called by:
  8441 ;;		_temperature_display
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           
  8446                           ;psect for function _Tc_Display
  8447  03A9                     _Tc_Display:	
  8448                           
  8449                           ;ht1621.c: 112: unsigned char count = 0;
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in _Tc_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8453  03A9  0020               	movlb	0	; select bank0
  8454  03AA  01AA               	clrf	Tc_Display@count
  8455                           
  8456                           ;ht1621.c: 113: unsigned int data = temperature_int;
  8457  03AB  0021               	movlb	1	; select bank1
  8458  03AC  0833               	movf	(_temperature_int+1)^(0+128),w
  8459  03AD  0020               	movlb	0	; select bank0
  8460  03AE  00AC               	movwf	Tc_Display@data+1
  8461  03AF  0021               	movlb	1	; select bank1
  8462  03B0  0832               	movf	_temperature_int^(0+128),w
  8463  03B1  0020               	movlb	0	; select bank0
  8464  03B2  00AB               	movwf	Tc_Display@data
  8465                           
  8466                           ;ht1621.c: 114: memset(display_buff,0,4);
  8467  03B3  3000               	movlw	0
  8468  03B4  00F3               	movwf	memset@c
  8469  03B5  00F4               	movwf	memset@c+1
  8470  03B6  3004               	movlw	4
  8471  03B7  00F5               	movwf	memset@n
  8472  03B8  3000               	movlw	0
  8473  03B9  00F6               	movwf	memset@n+1
  8474  03BA  30E1               	movlw	(low (_display_buff| 0))& (0+255)
  8475  03BB  3189  21CC  3183   	fcall	_memset
  8476  03BE                     l4822:	
  8477                           ;ht1621.c: 115: while(data)
  8478                           
  8479  03BE  0020               	movlb	0	; select bank0
  8480  03BF  082B               	movf	Tc_Display@data,w
  8481  03C0  042C               	iorwf	Tc_Display@data+1,w
  8482  03C1  1903               	btfsc	3,2
  8483  03C2  2C3D               	goto	l4830
  8484                           
  8485                           ;ht1621.c: 116: {
  8486                           ;ht1621.c: 117: count++;
  8487  03C3  3001               	movlw	1
  8488  03C4  0020               	movlb	0	; select bank0
  8489  03C5  00A9               	movwf	??_Tc_Display
  8490  03C6  0829               	movf	??_Tc_Display,w
  8491  03C7  07AA               	addwf	Tc_Display@count,f
  8492                           
  8493                           ;ht1621.c: 118: data /=10;
  8494  03C8  300A               	movlw	10
  8495  03C9  00A1               	movwf	___lwdiv@divisor
  8496  03CA  3000               	movlw	0
  8497  03CB  00A2               	movwf	___lwdiv@divisor+1
  8498  03CC  082C               	movf	Tc_Display@data+1,w
  8499  03CD  00A4               	movwf	___lwdiv@dividend+1
  8500  03CE  082B               	movf	Tc_Display@data,w
  8501  03CF  00A3               	movwf	___lwdiv@dividend
  8502  03D0  318C  2478  3183   	fcall	___lwdiv
  8503  03D3  0020               	movlb	0	; select bank0
  8504  03D4  0822               	movf	?___lwdiv+1,w
  8505  03D5  00AC               	movwf	Tc_Display@data+1
  8506  03D6  0821               	movf	?___lwdiv,w
  8507  03D7  00AB               	movwf	Tc_Display@data
  8508  03D8  2BBE               	goto	l4822
  8509  03D9                     l4824:	
  8510                           ;ht1621.c: 121: {
  8511                           ;ht1621.c: 122: case 3:display_buff[0] = Dis_TAB[temperature_int/100];
  8512                           
  8513                           ;ht1621.c: 119: }
  8514                           ;ht1621.c: 120: switch(count)
  8515                           
  8516  03D9  3064               	movlw	100
  8517  03DA  00A1               	movwf	___lwdiv@divisor
  8518  03DB  3000               	movlw	0
  8519  03DC  00A2               	movwf	___lwdiv@divisor+1
  8520  03DD  0021               	movlb	1	; select bank1
  8521  03DE  0833               	movf	(_temperature_int+1)^(0+128),w
  8522  03DF  0020               	movlb	0	; select bank0
  8523  03E0  00A4               	movwf	___lwdiv@dividend+1
  8524  03E1  0021               	movlb	1	; select bank1
  8525  03E2  0832               	movf	_temperature_int^(0+128),w
  8526  03E3  0020               	movlb	0	; select bank0
  8527  03E4  00A3               	movwf	___lwdiv@dividend
  8528  03E5  318C  2478  3183   	fcall	___lwdiv
  8529  03E8  0020               	movlb	0	; select bank0
  8530  03E9  0822               	movf	?___lwdiv+1,w
  8531  03EA  0085               	movwf	5
  8532  03EB  0821               	movf	?___lwdiv,w
  8533  03EC  0084               	movwf	4
  8534  03ED  3000               	movlw	low (_Dis_TAB| (0+32768))
  8535  03EE  0784               	addwf	4,f
  8536  03EF  3090               	movlw	high (_Dis_TAB| (0+32768))
  8537  03F0  3D85               	addwfc	5,f
  8538  03F1  0800               	movf	0,w	;code access
  8539  03F2  00A9               	movwf	??_Tc_Display
  8540  03F3  0829               	movf	??_Tc_Display,w
  8541  03F4  0021               	movlb	1	; select bank1
  8542  03F5  00E1               	movwf	_display_buff^(0+128)
  8543  03F6                     l682:	
  8544                           ;ht1621.c: 123: case 2:display_buff[1] = Dis_TAB[temperature_int%100/10];
  8545                           
  8546  03F6  300A               	movlw	10
  8547  03F7  0020               	movlb	0	; select bank0
  8548  03F8  00A1               	movwf	___lwdiv@divisor
  8549  03F9  3000               	movlw	0
  8550  03FA  00A2               	movwf	___lwdiv@divisor+1
  8551  03FB  0021               	movlb	1	; select bank1
  8552  03FC  0833               	movf	(_temperature_int+1)^(0+128),w
  8553  03FD  00F6               	movwf	___lwmod@dividend+1
  8554  03FE  0832               	movf	_temperature_int^(0+128),w
  8555  03FF  00F5               	movwf	___lwmod@dividend
  8556  0400  3064               	movlw	100
  8557  0401  00F3               	movwf	___lwmod@divisor
  8558  0402  3000               	movlw	0
  8559  0403  00F4               	movwf	___lwmod@divisor+1
  8560  0404  318B  2321  3183   	fcall	___lwmod
  8561  0407  0874               	movf	?___lwmod+1,w
  8562  0408  0020               	movlb	0	; select bank0
  8563  0409  00A4               	movwf	___lwdiv@dividend+1
  8564  040A  0873               	movf	?___lwmod,w
  8565  040B  00A3               	movwf	___lwdiv@dividend
  8566  040C  318C  2478  3183   	fcall	___lwdiv
  8567  040F  0020               	movlb	0	; select bank0
  8568  0410  0822               	movf	?___lwdiv+1,w
  8569  0411  0085               	movwf	5
  8570  0412  0821               	movf	?___lwdiv,w
  8571  0413  0084               	movwf	4
  8572  0414  3000               	movlw	low (_Dis_TAB| (0+32768))
  8573  0415  0784               	addwf	4,f
  8574  0416  3090               	movlw	high (_Dis_TAB| (0+32768))
  8575  0417  3D85               	addwfc	5,f
  8576  0418  0800               	movf	0,w	;code access
  8577  0419  00A9               	movwf	??_Tc_Display
  8578  041A  0829               	movf	??_Tc_Display,w
  8579  041B  0021               	movlb	1	; select bank1
  8580  041C  00E2               	movwf	(_display_buff^(0+128)+1)
  8581  041D                     l683:	
  8582                           ;ht1621.c: 124: case 1:display_buff[2] = Dis_TAB[temperature_int%10]; break;
  8583                           
  8584  041D  300A               	movlw	10
  8585  041E  00F3               	movwf	___lwmod@divisor
  8586  041F  3000               	movlw	0
  8587  0420  00F4               	movwf	___lwmod@divisor+1
  8588  0421  0021               	movlb	1	; select bank1
  8589  0422  0833               	movf	(_temperature_int+1)^(0+128),w
  8590  0423  00F6               	movwf	___lwmod@dividend+1
  8591  0424  0832               	movf	_temperature_int^(0+128),w
  8592  0425  00F5               	movwf	___lwmod@dividend
  8593  0426  318B  2321  3183   	fcall	___lwmod
  8594  0429  0874               	movf	?___lwmod+1,w
  8595  042A  0085               	movwf	5
  8596  042B  0873               	movf	?___lwmod,w
  8597  042C  0084               	movwf	4
  8598  042D  3000               	movlw	low (_Dis_TAB| (0+32768))
  8599  042E  0784               	addwf	4,f
  8600  042F  3090               	movlw	high (_Dis_TAB| (0+32768))
  8601  0430  3D85               	addwfc	5,f
  8602  0431  2C36               	goto	L10
  8603  0432                     l4826:	
  8604                           ;ht1621.c: 125: case 0:display_buff[2] = Dis_TAB[0];
  8605                           
  8606  0432  3000               	movlw	low (_Dis_TAB| (0+32768))
  8607  0433  0084               	movwf	4
  8608  0434  3090               	movlw	high (_Dis_TAB| (0+32768))
  8609  0435  0085               	movwf	5
  8610  0436                     L10:	
  8611  0436  0800               	movf	0,w	;code access
  8612  0437  0020               	movlb	0	; select bank0
  8613  0438  00A9               	movwf	??_Tc_Display
  8614  0439  0829               	movf	??_Tc_Display,w
  8615  043A  0021               	movlb	1	; select bank1
  8616  043B  00E3               	movwf	(_display_buff^(0+128)+2)
  8617                           
  8618                           ;ht1621.c: 127: }
  8619                           
  8620                           ;ht1621.c: 126: default:break;
  8621  043C  2C4C               	goto	l4832
  8622  043D                     l4830:	
  8623  043D  0020               	movlb	0	; select bank0
  8624  043E  082A               	movf	Tc_Display@count,w
  8625                           
  8626                           ; Switch size 1, requested type "space"
  8627                           ; Number of cases is 4, Range of values is 0 to 3
  8628                           ; switch strategies available:
  8629                           ; Name         Instructions Cycles
  8630                           ; simple_byte           13     7 (average)
  8631                           ; direct_byte           14     6 (fixed)
  8632                           ; jumptable            260     6 (fixed)
  8633                           ;	Chosen strategy is simple_byte
  8634  043F  3A00               	xorlw	0	; case 0
  8635  0440  1903               	skipnz
  8636  0441  2C32               	goto	l4826
  8637  0442  3A01               	xorlw	1	; case 1
  8638  0443  1903               	skipnz
  8639  0444  2C1D               	goto	l683
  8640  0445  3A03               	xorlw	3	; case 2
  8641  0446  1903               	skipnz
  8642  0447  2BF6               	goto	l682
  8643  0448  3A01               	xorlw	1	; case 3
  8644  0449  1903               	skipnz
  8645  044A  2BD9               	goto	l4824
  8646  044B  2C4C               	goto	l4832
  8647  044C                     l4832:	
  8648                           
  8649                           ;ht1621.c: 128: if(temperature_sign == 1) display_buff[0]=0x20;
  8650  044C  0021               	movlb	1	; select bank1
  8651  044D  033A               	decf	_temperature_sign^(0+128),w
  8652  044E  1D03               	btfss	3,2
  8653  044F  2C56               	goto	l4836
  8654  0450  3020               	movlw	32
  8655  0451  0020               	movlb	0	; select bank0
  8656  0452  00A9               	movwf	??_Tc_Display
  8657  0453  0829               	movf	??_Tc_Display,w
  8658  0454  0021               	movlb	1	; select bank1
  8659  0455  00E1               	movwf	_display_buff^(0+128)
  8660  0456                     l4836:	
  8661                           
  8662                           ;ht1621.c: 129: display_buff[3] = Dis_TAB[temperature_decimal] | 0x08;
  8663  0456  0020               	movlb	0	; select bank0
  8664  0457  086C               	movf	_temperature_decimal,w
  8665  0458  3E00               	addlw	low (_Dis_TAB| (0+32768))
  8666  0459  0084               	movwf	4
  8667  045A  3090               	movlw	high (_Dis_TAB| (0+32768))
  8668  045B  1803               	skipnc
  8669  045C  3E01               	addlw	1
  8670  045D  0085               	movwf	5
  8671  045E  0800               	movf	0,w	;code access
  8672  045F  3808               	iorlw	8
  8673  0460  00A9               	movwf	??_Tc_Display
  8674  0461  0829               	movf	??_Tc_Display,w
  8675  0462  0021               	movlb	1	; select bank1
  8676  0463  00E4               	movwf	(_display_buff^(0+128)+3)
  8677                           
  8678                           ;ht1621.c: 130: WriteAll_1621(0,display_buff,4);
  8679  0464  30E1               	movlw	low _display_buff
  8680  0465  0020               	movlb	0	; select bank0
  8681  0466  00A0               	movwf	WriteAll_1621@p
  8682  0467  3000               	movlw	high _display_buff
  8683  0468  00A1               	movwf	WriteAll_1621@p+1
  8684  0469  3004               	movlw	4
  8685  046A  00A9               	movwf	??_Tc_Display
  8686  046B  0829               	movf	??_Tc_Display,w
  8687  046C  00A2               	movwf	WriteAll_1621@cnt
  8688  046D  3000               	movlw	0
  8689  046E  318C  2443         	fcall	_WriteAll_1621
  8690  0470  0008               	return
  8691  0471                     __end_of_Tc_Display:	
  8692                           
  8693                           	psect	text37
  8694  09CC                     __ptext37:	
  8695 ;; *************** function _memset *****************
  8696 ;; Defined at:
  8697 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  p1              1    wreg     PTR void 
  8700 ;;		 -> display_buff(4), 
  8701 ;;  c               2    3[COMMON] int 
  8702 ;;  n               2    5[COMMON] unsigned int 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  p1              1    0[BANK0 ] PTR void 
  8705 ;;		 -> display_buff(4), 
  8706 ;;  p               1    1[BANK0 ] PTR unsigned char 
  8707 ;;		 -> display_buff(4), 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      PTR void 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;Total ram usage:        7 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    3
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_Tc_Display
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           
  8732                           ;psect for function _memset
  8733  09CC                     _memset:	
  8734                           
  8735                           ;incstack = 0
  8736                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8737                           ;memset@p1 stored from wreg
  8738  09CC  0020               	movlb	0	; select bank0
  8739  09CD  00A0               	movwf	memset@p1
  8740  09CE  0820               	movf	memset@p1,w
  8741  09CF  00F7               	movwf	??_memset
  8742  09D0  0877               	movf	??_memset,w
  8743  09D1  00A1               	movwf	memset@p
  8744  09D2                     l4600:	
  8745  09D2  3001               	movlw	1
  8746  09D3  02F5               	subwf	memset@n,f
  8747  09D4  3000               	movlw	0
  8748  09D5  3BF6               	subwfb	memset@n+1,f
  8749  09D6  0A75               	incf	memset@n,w
  8750  09D7  1903               	btfsc	3,2
  8751  09D8  0A76               	incf	memset@n+1,w
  8752  09D9  1903               	btfsc	3,2
  8753  09DA  0008               	return
  8754  09DB  0873               	movf	memset@c,w
  8755  09DC  00F7               	movwf	??_memset
  8756  09DD  0821               	movf	memset@p,w
  8757  09DE  0086               	movwf	6
  8758  09DF  0187               	clrf	7
  8759  09E0  0877               	movf	??_memset,w
  8760  09E1  0081               	movwf	1
  8761  09E2  3001               	movlw	1
  8762  09E3  00F7               	movwf	??_memset
  8763  09E4  0877               	movf	??_memset,w
  8764  09E5  07A1               	addwf	memset@p,f
  8765  09E6  29D2               	goto	l4600
  8766  09E7                     __end_of_memset:	
  8767                           ;	Return value of _memset is never used
  8768                           
  8769                           
  8770                           	psect	text38
  8771  0B21                     __ptext38:	
  8772 ;; *************** function ___lwmod *****************
  8773 ;; Defined at:
  8774 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  divisor         2    3[COMMON] unsigned int 
  8777 ;;  dividend        2    5[COMMON] unsigned int 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  counter         1    0[BANK0 ] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  2    3[COMMON] unsigned int 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;Total ram usage:        6 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    3
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_Tc_Display
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function ___lwmod
  8805  0B21                     ___lwmod:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8809  0B21  0873               	movf	___lwmod@divisor,w
  8810  0B22  0474               	iorwf	___lwmod@divisor+1,w
  8811  0B23  1903               	btfsc	3,2
  8812  0B24  2B49               	goto	l4646
  8813  0B25  0020               	movlb	0	; select bank0
  8814  0B26  01A0               	clrf	___lwmod@counter
  8815  0B27  0AA0               	incf	___lwmod@counter,f
  8816  0B28                     l4636:	
  8817  0B28  1BF4               	btfsc	___lwmod@divisor+1,7
  8818  0B29  2B34               	goto	l4638
  8819  0B2A  3001               	movlw	1
  8820  0B2B                     u3995:	
  8821  0B2B  35F3               	lslf	___lwmod@divisor,f
  8822  0B2C  0DF4               	rlf	___lwmod@divisor+1,f
  8823  0B2D  0B89               	decfsz	9,f
  8824  0B2E  2B2B               	goto	u3995
  8825  0B2F  3001               	movlw	1
  8826  0B30  00F7               	movwf	??___lwmod
  8827  0B31  0877               	movf	??___lwmod,w
  8828  0B32  07A0               	addwf	___lwmod@counter,f
  8829  0B33  2B28               	goto	l4636
  8830  0B34                     l4638:	
  8831  0B34  0874               	movf	___lwmod@divisor+1,w
  8832  0B35  0276               	subwf	___lwmod@dividend+1,w
  8833  0B36  1D03               	skipz
  8834  0B37  2B3A               	goto	u4015
  8835  0B38  0873               	movf	___lwmod@divisor,w
  8836  0B39  0275               	subwf	___lwmod@dividend,w
  8837  0B3A                     u4015:	
  8838  0B3A  1C03               	skipc
  8839  0B3B  2B40               	goto	l4642
  8840  0B3C  0873               	movf	___lwmod@divisor,w
  8841  0B3D  02F5               	subwf	___lwmod@dividend,f
  8842  0B3E  0874               	movf	___lwmod@divisor+1,w
  8843  0B3F  3BF6               	subwfb	___lwmod@dividend+1,f
  8844  0B40                     l4642:	
  8845  0B40  3001               	movlw	1
  8846  0B41                     u4025:	
  8847  0B41  36F4               	lsrf	___lwmod@divisor+1,f
  8848  0B42  0CF3               	rrf	___lwmod@divisor,f
  8849  0B43  0B89               	decfsz	9,f
  8850  0B44  2B41               	goto	u4025
  8851  0B45  3001               	movlw	1
  8852  0B46  02A0               	subwf	___lwmod@counter,f
  8853  0B47  1D03               	btfss	3,2
  8854  0B48  2B34               	goto	l4638
  8855  0B49                     l4646:	
  8856  0B49  0876               	movf	___lwmod@dividend+1,w
  8857  0B4A  00F4               	movwf	?___lwmod+1
  8858  0B4B  0875               	movf	___lwmod@dividend,w
  8859  0B4C  00F3               	movwf	?___lwmod
  8860  0B4D  0008               	return
  8861  0B4E                     __end_of___lwmod:	
  8862                           
  8863                           	psect	text39
  8864  0C78                     __ptext39:	
  8865 ;; *************** function ___lwdiv *****************
  8866 ;; Defined at:
  8867 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  divisor         2    1[BANK0 ] unsigned int 
  8870 ;;  dividend        2    3[BANK0 ] unsigned int 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  quotient        2    7[BANK0 ] unsigned int 
  8873 ;;  counter         1    6[BANK0 ] unsigned char 
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  2    1[BANK0 ] unsigned int 
  8876 ;; Registers used:
  8877 ;;		wreg, status,2, status,0
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8886 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;Total ram usage:        8 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:    3
  8890 ;; This function calls:
  8891 ;;		Nothing
  8892 ;; This function is called by:
  8893 ;;		_Tc_Display
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           
  8898                           ;psect for function ___lwdiv
  8899  0C78                     ___lwdiv:	
  8900                           
  8901                           ;incstack = 0
  8902                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8903  0C78  0020               	movlb	0	; select bank0
  8904  0C79  01A7               	clrf	___lwdiv@quotient
  8905  0C7A  01A8               	clrf	___lwdiv@quotient+1
  8906  0C7B  0821               	movf	___lwdiv@divisor,w
  8907  0C7C  0422               	iorwf	___lwdiv@divisor+1,w
  8908  0C7D  1903               	btfsc	3,2
  8909  0C7E  2CA8               	goto	l4624
  8910  0C7F  01A6               	clrf	___lwdiv@counter
  8911  0C80  0AA6               	incf	___lwdiv@counter,f
  8912  0C81                     l4612:	
  8913  0C81  1BA2               	btfsc	___lwdiv@divisor+1,7
  8914  0C82  2C8D               	goto	l4614
  8915  0C83  3001               	movlw	1
  8916  0C84                     u3925:	
  8917  0C84  35A1               	lslf	___lwdiv@divisor,f
  8918  0C85  0DA2               	rlf	___lwdiv@divisor+1,f
  8919  0C86  0B89               	decfsz	9,f
  8920  0C87  2C84               	goto	u3925
  8921  0C88  3001               	movlw	1
  8922  0C89  00A5               	movwf	??___lwdiv
  8923  0C8A  0825               	movf	??___lwdiv,w
  8924  0C8B  07A6               	addwf	___lwdiv@counter,f
  8925  0C8C  2C81               	goto	l4612
  8926  0C8D                     l4614:	
  8927  0C8D  3001               	movlw	1
  8928  0C8E                     u3945:	
  8929  0C8E  35A7               	lslf	___lwdiv@quotient,f
  8930  0C8F  0DA8               	rlf	___lwdiv@quotient+1,f
  8931  0C90  0B89               	decfsz	9,f
  8932  0C91  2C8E               	goto	u3945
  8933  0C92  0822               	movf	___lwdiv@divisor+1,w
  8934  0C93  0224               	subwf	___lwdiv@dividend+1,w
  8935  0C94  1D03               	skipz
  8936  0C95  2C98               	goto	u3955
  8937  0C96  0821               	movf	___lwdiv@divisor,w
  8938  0C97  0223               	subwf	___lwdiv@dividend,w
  8939  0C98                     u3955:	
  8940  0C98  1C03               	skipc
  8941  0C99  2C9F               	goto	l4620
  8942  0C9A  0821               	movf	___lwdiv@divisor,w
  8943  0C9B  02A3               	subwf	___lwdiv@dividend,f
  8944  0C9C  0822               	movf	___lwdiv@divisor+1,w
  8945  0C9D  3BA4               	subwfb	___lwdiv@dividend+1,f
  8946  0C9E  1427               	bsf	___lwdiv@quotient,0
  8947  0C9F                     l4620:	
  8948  0C9F  3001               	movlw	1
  8949  0CA0                     u3965:	
  8950  0CA0  36A2               	lsrf	___lwdiv@divisor+1,f
  8951  0CA1  0CA1               	rrf	___lwdiv@divisor,f
  8952  0CA2  0B89               	decfsz	9,f
  8953  0CA3  2CA0               	goto	u3965
  8954  0CA4  3001               	movlw	1
  8955  0CA5  02A6               	subwf	___lwdiv@counter,f
  8956  0CA6  1D03               	btfss	3,2
  8957  0CA7  2C8D               	goto	l4614
  8958  0CA8                     l4624:	
  8959  0CA8  0828               	movf	___lwdiv@quotient+1,w
  8960  0CA9  00A2               	movwf	?___lwdiv+1
  8961  0CAA  0827               	movf	___lwdiv@quotient,w
  8962  0CAB  00A1               	movwf	?___lwdiv
  8963  0CAC  0008               	return
  8964  0CAD                     __end_of___lwdiv:	
  8965                           
  8966                           	psect	text40
  8967  07B8                     __ptext40:	
  8968 ;; *************** function _one_temperature_trans *****************
  8969 ;; Defined at:
  8970 ;;		line 292 in file "mcc_generated_files/max31856.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        2 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    6
  8991 ;; This function calls:
  8992 ;;		_maxim_31856_read_nregisters
  8993 ;;		_maxim_start_conversion
  8994 ;; This function is called by:
  8995 ;;		_temperature_process
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           
  9000                           ;psect for function _one_temperature_trans
  9001  07B8                     _one_temperature_trans:	
  9002                           
  9003                           ;max31856.c: 294: maxim_start_conversion((uint8_t) 0x40);
  9004                           
  9005                           ;incstack = 0
  9006                           ; Regs used in _one_temperature_trans: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9007  07B8  3040               	movlw	64
  9008  07B9  3189  217C  3187   	fcall	_maxim_start_conversion
  9009                           
  9010                           ;max31856.c: 295: MAX31856Sec = 0;
  9011  07BC  0021               	movlb	1	; select bank1
  9012  07BD  01B9               	clrf	_MAX31856Sec^(0+128)
  9013  07BE                     l543:	
  9014                           ;max31856.c: 296: while( !(RB3 == 0 || MAX31856Sec > 30) ) ;
  9015                           
  9016  07BE  0020               	movlb	0	; select bank0
  9017  07BF  1D8D               	btfss	13,3	;volatile
  9018  07C0  2FC6               	goto	l4936
  9019  07C1  301F               	movlw	31
  9020  07C2  0021               	movlb	1	; select bank1
  9021  07C3  0239               	subwf	_MAX31856Sec^(0+128),w
  9022  07C4  1C03               	skipc
  9023  07C5  2FBE               	goto	l543
  9024  07C6                     l4936:	
  9025                           
  9026                           ;max31856.c: 297: if( MAX31856Sec > 30)
  9027  07C6  301F               	movlw	31
  9028  07C7  0021               	movlb	1	; select bank1
  9029  07C8  0239               	subwf	_MAX31856Sec^(0+128),w
  9030  07C9  1C03               	skipc
  9031  07CA  2FCE               	goto	l4940
  9032                           
  9033                           ;max31856.c: 298: {
  9034                           ;max31856.c: 299: uch_sr = 0x01;
  9035  07CB  01C3               	clrf	_uch_sr^(0+128)
  9036  07CC  0AC3               	incf	_uch_sr^(0+128),f
  9037                           
  9038                           ;max31856.c: 300: }
  9039  07CD  0008               	return
  9040  07CE                     l4940:	
  9041                           
  9042                           ;max31856.c: 301: else
  9043                           ;max31856.c: 302: {
  9044                           ;max31856.c: 303: maxim_31856_read_nregisters(0x0A, uch_reg,6);
  9045  07CE  30C4               	movlw	(low (_uch_reg| 0))& (0+255)
  9046  07CF  0020               	movlb	0	; select bank0
  9047  07D0  00A8               	movwf	??_one_temperature_trans
  9048  07D1  0828               	movf	??_one_temperature_trans,w
  9049  07D2  00A3               	movwf	maxim_31856_read_nregisters@uch_buff
  9050  07D3  3006               	movlw	6
  9051  07D4  00A9               	movwf	??_one_temperature_trans+1
  9052  07D5  0829               	movf	??_one_temperature_trans+1,w
  9053  07D6  00A4               	movwf	maxim_31856_read_nregisters@uch_nBytes
  9054  07D7  300A               	movlw	10
  9055  07D8  3188  20FF         	fcall	_maxim_31856_read_nregisters
  9056                           
  9057                           ;max31856.c: 304: uch_cjth=uch_reg[0];uch_cjtl=uch_reg[1];
  9058  07DA  0021               	movlb	1	; select bank1
  9059  07DB  0844               	movf	_uch_reg^(0+128),w
  9060  07DC  0020               	movlb	0	; select bank0
  9061  07DD  00A8               	movwf	??_one_temperature_trans
  9062  07DE  0828               	movf	??_one_temperature_trans,w
  9063  07DF  0021               	movlb	1	; select bank1
  9064  07E0  00BC               	movwf	_uch_cjth^(0+128)
  9065  07E1  0845               	movf	(_uch_reg^(0+128)+1),w
  9066  07E2  0020               	movlb	0	; select bank0
  9067  07E3  00A8               	movwf	??_one_temperature_trans
  9068  07E4  0828               	movf	??_one_temperature_trans,w
  9069  07E5  0021               	movlb	1	; select bank1
  9070  07E6  00BD               	movwf	_uch_cjtl^(0+128)
  9071                           
  9072                           ;max31856.c: 305: uch_ltcbh=uch_reg[2];uch_ltcbm=uch_reg[3];uch_ltcbl=uch_reg[4];
  9073  07E7  0846               	movf	(_uch_reg^(0+128)+2),w
  9074  07E8  0020               	movlb	0	; select bank0
  9075  07E9  00A8               	movwf	??_one_temperature_trans
  9076  07EA  0828               	movf	??_one_temperature_trans,w
  9077  07EB  0021               	movlb	1	; select bank1
  9078  07EC  00BF               	movwf	_uch_ltcbh^(0+128)
  9079  07ED  0847               	movf	(_uch_reg^(0+128)+3),w
  9080  07EE  0020               	movlb	0	; select bank0
  9081  07EF  00A8               	movwf	??_one_temperature_trans
  9082  07F0  0828               	movf	??_one_temperature_trans,w
  9083  07F1  0021               	movlb	1	; select bank1
  9084  07F2  00C1               	movwf	_uch_ltcbm^(0+128)
  9085  07F3  0848               	movf	(_uch_reg^(0+128)+4),w
  9086  07F4  0020               	movlb	0	; select bank0
  9087  07F5  00A8               	movwf	??_one_temperature_trans
  9088  07F6  0828               	movf	??_one_temperature_trans,w
  9089  07F7  0021               	movlb	1	; select bank1
  9090  07F8  00C0               	movwf	_uch_ltcbl^(0+128)
  9091                           
  9092                           ;max31856.c: 306: uch_sr=uch_reg[5];
  9093  07F9  0849               	movf	(_uch_reg^(0+128)+5),w
  9094  07FA  0020               	movlb	0	; select bank0
  9095  07FB  00A8               	movwf	??_one_temperature_trans
  9096  07FC  0828               	movf	??_one_temperature_trans,w
  9097  07FD  0021               	movlb	1	; select bank1
  9098  07FE  00C3               	movwf	_uch_sr^(0+128)
  9099  07FF  0008               	return
  9100  0800                     __end_of_one_temperature_trans:	
  9101                           
  9102                           	psect	text41
  9103  097C                     __ptext41:	
  9104 ;; *************** function _maxim_start_conversion *****************
  9105 ;; Defined at:
  9106 ;;		line 114 in file "mcc_generated_files/max31856.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  uch_conversi    1    wreg     unsigned char 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  uch_conversi    1    0[BANK0 ] unsigned char 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1    wreg      void 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0, pclath, cstack
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;Total ram usage:        2 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    5
  9127 ;; This function calls:
  9128 ;;		_maxim_31856_read_register
  9129 ;;		_maxim_31856_write_register
  9130 ;; This function is called by:
  9131 ;;		_one_temperature_trans
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _maxim_start_conversion
  9137  097C                     _maxim_start_conversion:	
  9138                           
  9139                           ;incstack = 0
  9140                           ; Regs used in _maxim_start_conversion: [wreg+status,2+status,0+pclath+cstack]
  9141                           ;maxim_start_conversion@uch_conversion_mode stored from wreg
  9142  097C  0020               	movlb	0	; select bank0
  9143  097D  00A0               	movwf	maxim_start_conversion@uch_conversion_mode
  9144                           
  9145                           ;max31856.c: 116: uch_cr0=maxim_31856_read_register(0x00);
  9146  097E  3000               	movlw	0
  9147  097F  3188  209B  3189   	fcall	_maxim_31856_read_register
  9148  0982  00F7               	movwf	??_maxim_start_conversion
  9149  0983  0877               	movf	??_maxim_start_conversion,w
  9150  0984  00FA               	movwf	_uch_cr0
  9151                           
  9152                           ;max31856.c: 117: uch_cr0&=(uint8_t) 0x3F;
  9153  0985  303F               	movlw	63
  9154  0986  00F7               	movwf	??_maxim_start_conversion
  9155  0987  0877               	movf	??_maxim_start_conversion,w
  9156  0988  05FA               	andwf	_uch_cr0,f
  9157                           
  9158                           ;max31856.c: 118: uch_cr0|=uch_conversion_mode;
  9159  0989  0020               	movlb	0	; select bank0
  9160  098A  0820               	movf	maxim_start_conversion@uch_conversion_mode,w
  9161  098B  00F7               	movwf	??_maxim_start_conversion
  9162  098C  0877               	movf	??_maxim_start_conversion,w
  9163  098D  04FA               	iorwf	_uch_cr0,f
  9164                           
  9165                           ;max31856.c: 119: maxim_31856_write_register(0x80, uch_cr0);
  9166  098E  087A               	movf	_uch_cr0,w
  9167  098F  00F7               	movwf	??_maxim_start_conversion
  9168  0990  0877               	movf	??_maxim_start_conversion,w
  9169  0991  00F4               	movwf	maxim_31856_write_register@uch_register_value
  9170  0992  3080               	movlw	128
  9171  0993  3188  206E         	fcall	_maxim_31856_write_register
  9172  0995  0008               	return
  9173  0996                     __end_of_maxim_start_conversion:	
  9174                           
  9175                           	psect	text42
  9176  086E                     __ptext42:	
  9177 ;; *************** function _maxim_31856_write_register *****************
  9178 ;; Defined at:
  9179 ;;		line 20 in file "mcc_generated_files/max31856.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  uch_register    1    wreg     unsigned char 
  9182 ;;  uch_register    1    4[COMMON] unsigned char 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  uch_register    1    5[COMMON] unsigned char 
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  1    wreg      void 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0, pclath, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;Total ram usage:        2 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    4
  9201 ;; This function calls:
  9202 ;;		_SPI_Exchange8bit
  9203 ;; This function is called by:
  9204 ;;		_maxim_31856_init
  9205 ;;		_maxim_start_conversion
  9206 ;;		_maxim_clear_fault_status
  9207 ;;		_temperature_display
  9208 ;;		_maxim_stop_conversion
  9209 ;;		_maxim_disable_oc_fault_detection
  9210 ;;		_maxim_set_oc_fault_detection
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _maxim_31856_write_register
  9216  086E                     _maxim_31856_write_register:	
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _maxim_31856_write_register: [wreg+status,2+status,0+pclath+cstack]
  9220                           ;maxim_31856_write_register@uch_register_address stored from wreg
  9221  086E  00F5               	movwf	maxim_31856_write_register@uch_register_address
  9222                           
  9223                           ;max31856.c: 22: do { LATA5 = 0; } while(0);
  9224  086F  0022               	movlb	2	; select bank2
  9225  0870  128C               	bcf	12,5	;volatile
  9226                           
  9227                           ;max31856.c: 23: SPI_Exchange8bit(uch_register_address);
  9228  0871  0875               	movf	maxim_31856_write_register@uch_register_address,w
  9229  0872  3188  204F  3188   	fcall	_SPI_Exchange8bit
  9230                           
  9231                           ;max31856.c: 24: SPI_Exchange8bit(uch_register_value);
  9232  0875  0874               	movf	maxim_31856_write_register@uch_register_value,w
  9233  0876  3188  204F         	fcall	_SPI_Exchange8bit
  9234                           
  9235                           ;max31856.c: 25: do { LATA5 = 1; } while(0);
  9236  0878  0022               	movlb	2	; select bank2
  9237  0879  168C               	bsf	12,5	;volatile
  9238  087A  0008               	return
  9239  087B                     __end_of_maxim_31856_write_register:	
  9240                           
  9241                           	psect	text43
  9242  089B                     __ptext43:	
  9243 ;; *************** function _maxim_31856_read_register *****************
  9244 ;; Defined at:
  9245 ;;		line 34 in file "mcc_generated_files/max31856.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  uch_register    1    wreg     unsigned char 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  uch_register    1    5[COMMON] unsigned char 
  9250 ;;  uch_register    1    6[COMMON] unsigned char 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1    wreg      unsigned char 
  9253 ;; Registers used:
  9254 ;;		wreg, status,2, status,0, pclath, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;Total ram usage:        3 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    4
  9267 ;; This function calls:
  9268 ;;		_SPI_Exchange8bit
  9269 ;; This function is called by:
  9270 ;;		_maxim_start_conversion
  9271 ;;		_maxim_clear_fault_status
  9272 ;;		_maxim_stop_conversion
  9273 ;;		_maxim_disable_oc_fault_detection
  9274 ;;		_maxim_set_oc_fault_detection
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _maxim_31856_read_register
  9280  089B                     _maxim_31856_read_register:	
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _maxim_31856_read_register: [wreg+status,2+status,0+pclath+cstack]
  9284                           ;maxim_31856_read_register@uch_register_address stored from wreg
  9285  089B  00F5               	movwf	maxim_31856_read_register@uch_register_address
  9286                           
  9287                           ;max31856.c: 36: uint8_t uch_register_data;
  9288                           ;max31856.c: 37: do { LATA5 = 0; } while(0);
  9289  089C  0022               	movlb	2	; select bank2
  9290  089D  128C               	bcf	12,5	;volatile
  9291                           
  9292                           ;max31856.c: 38: SPI_Exchange8bit(uch_register_address);
  9293  089E  0875               	movf	maxim_31856_read_register@uch_register_address,w
  9294  089F  3188  204F  3188   	fcall	_SPI_Exchange8bit
  9295                           
  9296                           ;max31856.c: 39: uch_register_data=SPI_Exchange8bit(0xff);
  9297  08A2  30FF               	movlw	255
  9298  08A3  3188  204F         	fcall	_SPI_Exchange8bit
  9299  08A5  00F4               	movwf	??_maxim_31856_read_register
  9300  08A6  0874               	movf	??_maxim_31856_read_register,w
  9301  08A7  00F6               	movwf	maxim_31856_read_register@uch_register_data
  9302                           
  9303                           ;max31856.c: 40: do { LATA5 = 1; } while(0);
  9304  08A8  0022               	movlb	2	; select bank2
  9305  08A9  168C               	bsf	12,5	;volatile
  9306                           
  9307                           ;max31856.c: 41: return (uch_register_data);
  9308  08AA  0876               	movf	maxim_31856_read_register@uch_register_data,w
  9309  08AB  0008               	return
  9310  08AC                     __end_of_maxim_31856_read_register:	
  9311                           
  9312                           	psect	text44
  9313  08FF                     __ptext44:	
  9314 ;; *************** function _maxim_31856_read_nregisters *****************
  9315 ;; Defined at:
  9316 ;;		line 50 in file "mcc_generated_files/max31856.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  uch_register    1    wreg     unsigned char 
  9319 ;;  uch_buff        1    3[BANK0 ] PTR unsigned char 
  9320 ;;		 -> uch_reg(8), 
  9321 ;;  uch_nBytes      1    4[BANK0 ] unsigned char 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  uch_register    1    7[BANK0 ] unsigned char 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;Total ram usage:        5 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    5
  9340 ;; This function calls:
  9341 ;;		_SPI_Exchange8bit
  9342 ;;		_SPI_Exchange8bitBuffer
  9343 ;; This function is called by:
  9344 ;;		_one_temperature_trans
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _maxim_31856_read_nregisters
  9350  08FF                     _maxim_31856_read_nregisters:	
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _maxim_31856_read_nregisters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9354                           ;maxim_31856_read_nregisters@uch_register_address stored from wreg
  9355  08FF  0020               	movlb	0	; select bank0
  9356  0900  00A7               	movwf	maxim_31856_read_nregisters@uch_register_address
  9357                           
  9358                           ;max31856.c: 52: do { LATA5 = 0; } while(0);
  9359  0901  0022               	movlb	2	; select bank2
  9360  0902  128C               	bcf	12,5	;volatile
  9361                           
  9362                           ;max31856.c: 53: SPI_Exchange8bit(uch_register_address);
  9363  0903  0020               	movlb	0	; select bank0
  9364  0904  0827               	movf	maxim_31856_read_nregisters@uch_register_address,w
  9365  0905  3188  204F  3188   	fcall	_SPI_Exchange8bit
  9366                           
  9367                           ;max31856.c: 54: SPI_Exchange8bitBuffer((0), uch_nBytes, uch_buff);
  9368  0908  0020               	movlb	0	; select bank0
  9369  0909  0824               	movf	maxim_31856_read_nregisters@uch_nBytes,w
  9370  090A  00A5               	movwf	??_maxim_31856_read_nregisters
  9371  090B  0825               	movf	??_maxim_31856_read_nregisters,w
  9372  090C  00F4               	movwf	SPI_Exchange8bitBuffer@bufLen
  9373  090D  0823               	movf	maxim_31856_read_nregisters@uch_buff,w
  9374  090E  00A6               	movwf	??_maxim_31856_read_nregisters+1
  9375  090F  0826               	movf	??_maxim_31856_read_nregisters+1,w
  9376  0910  00F5               	movwf	SPI_Exchange8bitBuffer@dataOut
  9377  0911  3000               	movlw	0
  9378  0912  318E  2632         	fcall	_SPI_Exchange8bitBuffer
  9379                           
  9380                           ;max31856.c: 55: do { LATA5 = 1; } while(0);
  9381  0914  0022               	movlb	2	; select bank2
  9382  0915  168C               	bsf	12,5	;volatile
  9383  0916  0008               	return
  9384  0917                     __end_of_maxim_31856_read_nregisters:	
  9385                           
  9386                           	psect	text45
  9387  0E32                     __ptext45:	
  9388 ;; *************** function _SPI_Exchange8bitBuffer *****************
  9389 ;; Defined at:
  9390 ;;		line 89 in file "mcc_generated_files/spi.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  dataIn          1    wreg     PTR unsigned char 
  9393 ;;		 -> NULL(0), 
  9394 ;;  bufLen          1    4[COMMON] unsigned char 
  9395 ;;  dataOut         1    5[COMMON] PTR unsigned char 
  9396 ;;		 -> uch_reg(8), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  dataIn          1    6[COMMON] PTR unsigned char 
  9399 ;;		 -> NULL(0), 
  9400 ;;  bytesWritten    1    7[COMMON] unsigned char 
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      unsigned char 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;Total ram usage:        7 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    4
  9417 ;; This function calls:
  9418 ;;		_SPI_Exchange8bit
  9419 ;; This function is called by:
  9420 ;;		_maxim_31856_read_nregisters
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           
  9425                           ;psect for function _SPI_Exchange8bitBuffer
  9426  0E32                     _SPI_Exchange8bitBuffer:	
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _SPI_Exchange8bitBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  9430                           ;SPI_Exchange8bitBuffer@dataIn stored from wreg
  9431  0E32  00F6               	movwf	SPI_Exchange8bitBuffer@dataIn
  9432                           
  9433                           ;spi.c: 90: uint8_t bytesWritten = 0;
  9434  0E33  01F7               	clrf	SPI_Exchange8bitBuffer@bytesWritten
  9435                           
  9436                           ;spi.c: 92: if (bufLen != 0) {
  9437  0E34  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9438  0E35  1903               	btfsc	3,2
  9439  0E36  0008               	return
  9440                           
  9441                           ;spi.c: 93: if (dataIn != (0)) {
  9442  0E37  0876               	movf	SPI_Exchange8bitBuffer@dataIn,w
  9443  0E38  1D03               	btfss	3,2
  9444  0E39  2E64               	goto	l4500
  9445  0E3A  2E69               	goto	l4502
  9446  0E3B                     l4492:	
  9447                           ;spi.c: 94: while (bytesWritten < bufLen) {
  9448                           
  9449                           
  9450                           ;spi.c: 95: if (dataOut == (0)) {
  9451  0E3B  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9452  0E3C  1D03               	btfss	3,2
  9453  0E3D  2E4A               	goto	l4496
  9454                           
  9455                           ;spi.c: 96: SPI_Exchange8bit(dataIn[bytesWritten]);
  9456  0E3E  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9457  0E3F  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9458  0E40  0020               	movlb	0	; select bank0
  9459  0E41  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9460  0E42  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9461  0E43  0086               	movwf	6
  9462  0E44  0187               	clrf	7
  9463  0E45  0801               	movf	1,w
  9464  0E46  3188  204F  318E   	fcall	_SPI_Exchange8bit
  9465                           
  9466                           ;spi.c: 97: } else {
  9467  0E49  2E5F               	goto	l4498
  9468  0E4A                     l4496:	
  9469                           
  9470                           ;spi.c: 98: dataOut[bytesWritten] = SPI_Exchange8bit(dataIn[bytesWritten]);
  9471  0E4A  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9472  0E4B  0776               	addwf	SPI_Exchange8bitBuffer@dataIn,w
  9473  0E4C  0020               	movlb	0	; select bank0
  9474  0E4D  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9475  0E4E  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9476  0E4F  0086               	movwf	6
  9477  0E50  0187               	clrf	7
  9478  0E51  0801               	movf	1,w
  9479  0E52  3188  204F  318E   	fcall	_SPI_Exchange8bit
  9480  0E55  0020               	movlb	0	; select bank0
  9481  0E56  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9482  0E57  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9483  0E58  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9484  0E59  00A2               	movwf	??_SPI_Exchange8bitBuffer+2
  9485  0E5A  0822               	movf	??_SPI_Exchange8bitBuffer+2,w
  9486  0E5B  0086               	movwf	6
  9487  0E5C  0187               	clrf	7
  9488  0E5D  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9489  0E5E  0081               	movwf	1
  9490  0E5F                     l4498:	
  9491                           
  9492                           ;spi.c: 99: }
  9493                           ;spi.c: 101: bytesWritten++;
  9494  0E5F  3001               	movlw	1
  9495  0E60  0020               	movlb	0	; select bank0
  9496  0E61  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9497  0E62  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9498  0E63  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9499  0E64                     l4500:	
  9500  0E64  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9501  0E65  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9502  0E66  1803               	btfsc	3,0
  9503  0E67  0008               	return
  9504  0E68  2E3B               	goto	l4492
  9505  0E69                     l4502:	
  9506                           ;spi.c: 102: }
  9507                           ;spi.c: 103: } else {
  9508                           
  9509                           
  9510                           ;spi.c: 104: if (dataOut != (0)) {
  9511  0E69  0875               	movf	SPI_Exchange8bitBuffer@dataOut,w
  9512  0E6A  1903               	btfsc	3,2
  9513  0E6B  0008               	return
  9514  0E6C                     l4510:	
  9515  0E6C  0874               	movf	SPI_Exchange8bitBuffer@bufLen,w
  9516  0E6D  0277               	subwf	SPI_Exchange8bitBuffer@bytesWritten,w
  9517  0E6E  1803               	btfsc	3,0
  9518  0E6F  0008               	return
  9519                           
  9520                           ;spi.c: 106: dataOut[bytesWritten] = SPI_Exchange8bit(0x0);
  9521                           
  9522                           ;spi.c: 105: while (bytesWritten < bufLen) {
  9523  0E70  3000               	movlw	0
  9524  0E71  3188  204F  318E   	fcall	_SPI_Exchange8bit
  9525  0E74  0020               	movlb	0	; select bank0
  9526  0E75  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9527  0E76  0877               	movf	SPI_Exchange8bitBuffer@bytesWritten,w
  9528  0E77  0775               	addwf	SPI_Exchange8bitBuffer@dataOut,w
  9529  0E78  00A1               	movwf	??_SPI_Exchange8bitBuffer+1
  9530  0E79  0821               	movf	??_SPI_Exchange8bitBuffer+1,w
  9531  0E7A  0086               	movwf	6
  9532  0E7B  0187               	clrf	7
  9533  0E7C  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9534  0E7D  0081               	movwf	1
  9535                           
  9536                           ;spi.c: 108: bytesWritten++;
  9537  0E7E  3001               	movlw	1
  9538  0E7F  00A0               	movwf	??_SPI_Exchange8bitBuffer
  9539  0E80  0820               	movf	??_SPI_Exchange8bitBuffer,w
  9540  0E81  07F7               	addwf	SPI_Exchange8bitBuffer@bytesWritten,f
  9541  0E82  2E6C               	goto	l4510
  9542  0E83                     __end_of_SPI_Exchange8bitBuffer:	
  9543                           ;spi.c: 109: }
  9544                           ;spi.c: 110: }
  9545                           ;spi.c: 111: }
  9546                           ;spi.c: 112: }
  9547                           ;spi.c: 114: return bytesWritten;
  9548                           ;	Return value of _SPI_Exchange8bitBuffer is never used
  9549                           
  9550                           
  9551                           	psect	text46
  9552  084F                     __ptext46:	
  9553 ;; *************** function _SPI_Exchange8bit *****************
  9554 ;; Defined at:
  9555 ;;		line 77 in file "mcc_generated_files/spi.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  data            1    wreg     unsigned char 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  data            1    3[COMMON] unsigned char 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      unsigned char 
  9562 ;; Registers used:
  9563 ;;		wreg
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;Total ram usage:        1 bytes
  9574 ;; Hardware stack levels used:    1
  9575 ;; Hardware stack levels required when called:    3
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_SPI_Exchange8bitBuffer
  9580 ;;		_maxim_31856_write_register
  9581 ;;		_maxim_31856_read_register
  9582 ;;		_maxim_31856_read_nregisters
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           
  9587                           ;psect for function _SPI_Exchange8bit
  9588  084F                     _SPI_Exchange8bit:	
  9589                           
  9590                           ;incstack = 0
  9591                           ; Regs used in _SPI_Exchange8bit: [wreg]
  9592                           ;SPI_Exchange8bit@data stored from wreg
  9593  084F  00F3               	movwf	SPI_Exchange8bit@data
  9594                           
  9595                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  9596  0850  0024               	movlb	4	; select bank4
  9597  0851  1395               	bcf	21,7	;volatile
  9598                           
  9599                           ;spi.c: 81: SSPBUF = data;
  9600  0852  0873               	movf	SPI_Exchange8bit@data,w
  9601  0853  0091               	movwf	17	;volatile
  9602  0854                     l71:	
  9603                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  9604                           
  9605  0854  1C14               	btfss	20,0	;volatile
  9606  0855  2854               	goto	l71
  9607                           
  9608                           ;spi.c: 84: }
  9609                           ;spi.c: 86: return (SSPBUF);
  9610  0856  0811               	movf	17,w	;volatile
  9611  0857  0008               	return
  9612  0858                     __end_of_SPI_Exchange8bit:	
  9613                           
  9614                           	psect	text47
  9615  0BAC                     __ptext47:	
  9616 ;; *************** function _Two_Display *****************
  9617 ;; Defined at:
  9618 ;;		line 139 in file "mcc_generated_files/ht1621.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  number          1    wreg     unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  number          1   11[BANK0 ] unsigned char 
  9623 ;;  num             4    7[BANK0 ] unsigned char [4]
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;Total ram usage:        6 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    5
  9640 ;; This function calls:
  9641 ;;		_WriteAll_1621
  9642 ;; This function is called by:
  9643 ;;		_temperature_process
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _Two_Display
  9649  0BAC                     _Two_Display:	
  9650                           
  9651                           ;incstack = 0
  9652                           ; Regs used in _Two_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9653                           ;Two_Display@number stored from wreg
  9654  0BAC  0020               	movlb	0	; select bank0
  9655  0BAD  00AB               	movwf	Two_Display@number
  9656                           
  9657                           ;ht1621.c: 141: unsigned char num[4]={0};
  9658  0BAE  0021               	movlb	1	; select bank1
  9659  0BAF  0823               	movf	(Two_Display@F2123+3)^(0+128),w
  9660  0BB0  0020               	movlb	0	; select bank0
  9661  0BB1  00AA               	movwf	Two_Display@num+3
  9662  0BB2  0021               	movlb	1	; select bank1
  9663  0BB3  0822               	movf	(Two_Display@F2123+2)^(0+128),w
  9664  0BB4  0020               	movlb	0	; select bank0
  9665  0BB5  00A9               	movwf	Two_Display@num+2
  9666  0BB6  0021               	movlb	1	; select bank1
  9667  0BB7  0821               	movf	(Two_Display@F2123+1)^(0+128),w
  9668  0BB8  0020               	movlb	0	; select bank0
  9669  0BB9  00A8               	movwf	Two_Display@num+1
  9670  0BBA  0021               	movlb	1	; select bank1
  9671  0BBB  0820               	movf	Two_Display@F2123^(0+128),w
  9672  0BBC  0020               	movlb	0	; select bank0
  9673  0BBD  00A7               	movwf	Two_Display@num
  9674                           
  9675                           ;ht1621.c: 142: num[1] = Dis_TAB[0];
  9676  0BBE  3000               	movlw	low (_Dis_TAB| (0+32768))
  9677  0BBF  0084               	movwf	4
  9678  0BC0  3090               	movlw	high (_Dis_TAB| (0+32768))
  9679  0BC1  0085               	movwf	5
  9680  0BC2  0800               	movf	0,w	;code access
  9681  0BC3  00A6               	movwf	??_Two_Display
  9682  0BC4  0826               	movf	??_Two_Display,w
  9683  0BC5  00A8               	movwf	Two_Display@num+1
  9684                           
  9685                           ;ht1621.c: 143: num[2] = Dis_TAB[number];
  9686  0BC6  082B               	movf	Two_Display@number,w
  9687  0BC7  3E00               	addlw	low (_Dis_TAB| (0+32768))
  9688  0BC8  0084               	movwf	4
  9689  0BC9  3090               	movlw	high (_Dis_TAB| (0+32768))
  9690  0BCA  1803               	skipnc
  9691  0BCB  3E01               	addlw	1
  9692  0BCC  0085               	movwf	5
  9693  0BCD  0800               	movf	0,w	;code access
  9694  0BCE  00A6               	movwf	??_Two_Display
  9695  0BCF  0826               	movf	??_Two_Display,w
  9696  0BD0  00A9               	movwf	Two_Display@num+2
  9697                           
  9698                           ;ht1621.c: 144: WriteAll_1621(0, num, 4);
  9699  0BD1  3027               	movlw	low Two_Display@num
  9700  0BD2  00A0               	movwf	WriteAll_1621@p
  9701  0BD3  3000               	movlw	high Two_Display@num
  9702  0BD4  00A1               	movwf	WriteAll_1621@p+1
  9703  0BD5  3004               	movlw	4
  9704  0BD6  00A6               	movwf	??_Two_Display
  9705  0BD7  0826               	movf	??_Two_Display,w
  9706  0BD8  00A2               	movwf	WriteAll_1621@cnt
  9707  0BD9  3000               	movlw	0
  9708  0BDA  318C  2443         	fcall	_WriteAll_1621
  9709  0BDC  0008               	return
  9710  0BDD                     __end_of_Two_Display:	
  9711                           
  9712                           	psect	text48
  9713  0C43                     __ptext48:	
  9714 ;; *************** function _WriteAll_1621 *****************
  9715 ;; Defined at:
  9716 ;;		line 91 in file "mcc_generated_files/ht1621.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  addr            1    wreg     unsigned char 
  9719 ;;  p               2    0[BANK0 ] PTR unsigned char 
  9720 ;;		 -> time_Display@num(4), err_Display@num(4), Two_Display@num(4), display_buff(4), 
  9721 ;;		 -> Dis_TAB(21), 
  9722 ;;  cnt             1    2[BANK0 ] unsigned char 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  addr            1    4[BANK0 ] unsigned char 
  9725 ;;  i               1    5[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        6 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    4
  9742 ;; This function calls:
  9743 ;;		_SendBit_1621
  9744 ;;		_SendDataBit_1621
  9745 ;; This function is called by:
  9746 ;;		_main
  9747 ;;		_Tc_Display
  9748 ;;		_Two_Display
  9749 ;;		_err_Display
  9750 ;;		_time_Display
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _WriteAll_1621
  9756  0C43                     _WriteAll_1621:	
  9757                           
  9758                           ;incstack = 0
  9759                           ; Regs used in _WriteAll_1621: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9760                           ;WriteAll_1621@addr stored from wreg
  9761  0C43  0020               	movlb	0	; select bank0
  9762  0C44  00A4               	movwf	WriteAll_1621@addr
  9763                           
  9764                           ;ht1621.c: 93: unsigned char i;
  9765                           ;ht1621.c: 94: do { LATC0 = 0; } while(0);
  9766  0C45  0022               	movlb	2	; select bank2
  9767  0C46  100E               	bcf	14,0	;volatile
  9768                           
  9769                           ;ht1621.c: 95: SendBit_1621(0xa0,3);
  9770  0C47  3003               	movlw	3
  9771  0C48  0020               	movlb	0	; select bank0
  9772  0C49  00A3               	movwf	??_WriteAll_1621
  9773  0C4A  0823               	movf	??_WriteAll_1621,w
  9774  0C4B  00F3               	movwf	SendBit_1621@cnt
  9775  0C4C  30A0               	movlw	160
  9776  0C4D  318A  2221  318C   	fcall	_SendBit_1621
  9777                           
  9778                           ;ht1621.c: 96: SendBit_1621(addr,6);
  9779  0C50  3006               	movlw	6
  9780  0C51  0020               	movlb	0	; select bank0
  9781  0C52  00A3               	movwf	??_WriteAll_1621
  9782  0C53  0823               	movf	??_WriteAll_1621,w
  9783  0C54  00F3               	movwf	SendBit_1621@cnt
  9784  0C55  0824               	movf	WriteAll_1621@addr,w
  9785  0C56  318A  2221  318C   	fcall	_SendBit_1621
  9786                           
  9787                           ;ht1621.c: 97: for(i =0; i <cnt; i ++,p++)
  9788  0C59  0020               	movlb	0	; select bank0
  9789  0C5A  01A5               	clrf	WriteAll_1621@i
  9790  0C5B                     l4522:	
  9791  0C5B  0822               	movf	WriteAll_1621@cnt,w
  9792  0C5C  0225               	subwf	WriteAll_1621@i,w
  9793  0C5D  1803               	btfsc	3,0
  9794  0C5E  2C75               	goto	l672
  9795                           
  9796                           ;ht1621.c: 98: {
  9797                           ;ht1621.c: 99: SendDataBit_1621(*p,8);
  9798  0C5F  3008               	movlw	8
  9799  0C60  00A3               	movwf	??_WriteAll_1621
  9800  0C61  0823               	movf	??_WriteAll_1621,w
  9801  0C62  00F3               	movwf	SendDataBit_1621@cnt
  9802  0C63  0820               	movf	WriteAll_1621@p,w
  9803  0C64  0084               	movwf	4
  9804  0C65  0821               	movf	WriteAll_1621@p+1,w
  9805  0C66  0085               	movwf	5
  9806  0C67  0800               	movf	0,w	;code access
  9807  0C68  318A  2241  318C   	fcall	_SendDataBit_1621
  9808  0C6B  3001               	movlw	1
  9809  0C6C  0020               	movlb	0	; select bank0
  9810  0C6D  00A3               	movwf	??_WriteAll_1621
  9811  0C6E  0823               	movf	??_WriteAll_1621,w
  9812  0C6F  07A5               	addwf	WriteAll_1621@i,f
  9813  0C70  3001               	movlw	1
  9814  0C71  07A0               	addwf	WriteAll_1621@p,f
  9815  0C72  3000               	movlw	0
  9816  0C73  3DA1               	addwfc	WriteAll_1621@p+1,f
  9817  0C74  2C5B               	goto	l4522
  9818  0C75                     l672:	
  9819                           ;ht1621.c: 100: }
  9820                           ;ht1621.c: 101: do { LATC0 = 1; } while(0);
  9821                           
  9822  0C75  0022               	movlb	2	; select bank2
  9823  0C76  140E               	bsf	14,0	;volatile
  9824  0C77  0008               	return
  9825  0C78                     __end_of_WriteAll_1621:	
  9826                           
  9827                           	psect	text49
  9828  0A41                     __ptext49:	
  9829 ;; *************** function _SendDataBit_1621 *****************
  9830 ;; Defined at:
  9831 ;;		line 42 in file "mcc_generated_files/ht1621.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  data            1    wreg     unsigned char 
  9834 ;;  cnt             1    3[COMMON] unsigned char 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  data            1    6[COMMON] unsigned char 
  9837 ;;  i               1    7[COMMON] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;Total ram usage:        5 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    3
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_WriteAll_1621
  9858 ;;		_Write_1621
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _SendDataBit_1621
  9864  0A41                     _SendDataBit_1621:	
  9865                           
  9866                           ;incstack = 0
  9867                           ; Regs used in _SendDataBit_1621: [wreg+status,2+status,0]
  9868                           ;SendDataBit_1621@data stored from wreg
  9869  0A41  00F6               	movwf	SendDataBit_1621@data
  9870                           
  9871                           ;ht1621.c: 44: unsigned char i;
  9872                           ;ht1621.c: 45: for(i =0; i <cnt; i ++)
  9873  0A42  01F7               	clrf	SendDataBit_1621@i
  9874  0A43                     l4450:	
  9875  0A43  0873               	movf	SendDataBit_1621@cnt,w
  9876  0A44  0277               	subwf	SendDataBit_1621@i,w
  9877  0A45  1803               	btfsc	3,0
  9878  0A46  0008               	return
  9879                           
  9880                           ;ht1621.c: 46: {
  9881                           ;ht1621.c: 47: if((data&0x01)==0) do { LATC2 = 0; } while(0);
  9882  0A47  1876               	btfsc	SendDataBit_1621@data,0
  9883  0A48  2A4C               	goto	l643
  9884  0A49  0022               	movlb	2	; select bank2
  9885  0A4A  110E               	bcf	14,2	;volatile
  9886  0A4B  2A4E               	goto	l645
  9887  0A4C                     l643:	
  9888                           ;ht1621.c: 48: else do { LATC2 = 1; } while(0);
  9889                           
  9890  0A4C  0022               	movlb	2	; select bank2
  9891  0A4D  150E               	bsf	14,2	;volatile
  9892  0A4E                     l645:	
  9893                           ;ht1621.c: 49: do { LATC1 = 0; } while(0);
  9894                           
  9895  0A4E  108E               	bcf	14,1	;volatile
  9896                           
  9897                           ;ht1621.c: 50: _delay((unsigned long)((1)*(16000000/4000.0)));
  9898  0A4F  3006               	movlw	6
  9899  0A50  00F5               	movwf	??_SendDataBit_1621+1
  9900  0A51  3030               	movlw	48
  9901  0A52  00F4               	movwf	??_SendDataBit_1621
  9902  0A53                     u5187:	
  9903  0A53  0BF4               	decfsz	??_SendDataBit_1621,f
  9904  0A54  2A53               	goto	u5187
  9905  0A55  0BF5               	decfsz	??_SendDataBit_1621+1,f
  9906  0A56  2A53               	goto	u5187
  9907  0A57  0000               	nop
  9908                           
  9909                           ;ht1621.c: 51: do { LATC1 = 1; } while(0);
  9910  0A58  0022               	movlb	2	; select bank2
  9911  0A59  148E               	bsf	14,1	;volatile
  9912                           
  9913                           ;ht1621.c: 52: data>>=1;
  9914  0A5A  1003               	clrc
  9915  0A5B  0CF6               	rrf	SendDataBit_1621@data,f
  9916  0A5C  3001               	movlw	1
  9917  0A5D  00F4               	movwf	??_SendDataBit_1621
  9918  0A5E  0874               	movf	??_SendDataBit_1621,w
  9919  0A5F  07F7               	addwf	SendDataBit_1621@i,f
  9920  0A60  2A43               	goto	l4450
  9921  0A61                     __end_of_SendDataBit_1621:	
  9922                           
  9923                           	psect	text50
  9924  0827                     __ptext50:	
  9925 ;; *************** function _Set_start_flag *****************
  9926 ;; Defined at:
  9927 ;;		line 18 in file "mcc_generated_files/save.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		None
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    3
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_Key_Process
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _Set_start_flag
  9957  0827                     _Set_start_flag:	
  9958                           
  9959                           ;save.c: 20: Record_flag = 1;
  9960                           
  9961                           ;incstack = 0
  9962                           ; Regs used in _Set_start_flag: []
  9963  0827  0020               	movlb	0	; select bank0
  9964  0828  01EB               	clrf	_Record_flag
  9965  0829  0AEB               	incf	_Record_flag,f
  9966                           
  9967                           ;save.c: 21: do { LATA4 = 0; } while(0);
  9968  082A  0022               	movlb	2	; select bank2
  9969  082B  120C               	bcf	12,4	;volatile
  9970  082C  0008               	return
  9971  082D                     __end_of_Set_start_flag:	
  9972                           
  9973                           	psect	text51
  9974  081D                     __ptext51:	
  9975 ;; *************** function _Set_finish_flag *****************
  9976 ;; Defined at:
  9977 ;;		line 30 in file "mcc_generated_files/save.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		status,2
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    3
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_Key_Process
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           
 10006                           ;psect for function _Set_finish_flag
 10007  081D                     _Set_finish_flag:	
 10008                           
 10009                           ;save.c: 32: Record_flag = 0;
 10010                           
 10011                           ;incstack = 0
 10012                           ; Regs used in _Set_finish_flag: [status,2]
 10013  081D  0020               	movlb	0	; select bank0
 10014  081E  01EB               	clrf	_Record_flag
 10015                           
 10016                           ;save.c: 33: do { LATA4 = 1; } while(0);
 10017  081F  0022               	movlb	2	; select bank2
 10018  0820  160C               	bsf	12,4	;volatile
 10019  0821  0008               	return
 10020  0822                     __end_of_Set_finish_flag:	
 10021                           
 10022                           	psect	text52
 10023  08E7                     __ptext52:	
 10024 ;; *************** function _SendCmd_1621 *****************
 10025 ;; Defined at:
 10026 ;;		line 62 in file "mcc_generated_files/ht1621.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  command         1    wreg     unsigned char 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  command         1    1[BANK0 ] unsigned char 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg, status,2, status,0, pclath, cstack
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;Total ram usage:        2 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:    4
 10047 ;; This function calls:
 10048 ;;		_SendBit_1621
 10049 ;; This function is called by:
 10050 ;;		_main
 10051 ;;		_Key_Process
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           
 10056                           ;psect for function _SendCmd_1621
 10057  08E7                     _SendCmd_1621:	
 10058                           
 10059                           ;incstack = 0
 10060                           ; Regs used in _SendCmd_1621: [wreg+status,2+status,0+pclath+cstack]
 10061                           ;SendCmd_1621@command stored from wreg
 10062  08E7  0020               	movlb	0	; select bank0
 10063  08E8  00A1               	movwf	SendCmd_1621@command
 10064                           
 10065                           ;ht1621.c: 64: do { LATC0 = 0; } while(0);
 10066  08E9  0022               	movlb	2	; select bank2
 10067  08EA  100E               	bcf	14,0	;volatile
 10068                           
 10069                           ;ht1621.c: 65: SendBit_1621(0x80,4);
 10070  08EB  3004               	movlw	4
 10071  08EC  0020               	movlb	0	; select bank0
 10072  08ED  00A0               	movwf	??_SendCmd_1621
 10073  08EE  0820               	movf	??_SendCmd_1621,w
 10074  08EF  00F3               	movwf	SendBit_1621@cnt
 10075  08F0  3080               	movlw	128
 10076  08F1  318A  2221  3188   	fcall	_SendBit_1621
 10077                           
 10078                           ;ht1621.c: 66: SendBit_1621(command,8);
 10079  08F4  3008               	movlw	8
 10080  08F5  0020               	movlb	0	; select bank0
 10081  08F6  00A0               	movwf	??_SendCmd_1621
 10082  08F7  0820               	movf	??_SendCmd_1621,w
 10083  08F8  00F3               	movwf	SendBit_1621@cnt
 10084  08F9  0821               	movf	SendCmd_1621@command,w
 10085  08FA  318A  2221         	fcall	_SendBit_1621
 10086                           
 10087                           ;ht1621.c: 67: do { LATC0 = 1; } while(0);
 10088  08FC  0022               	movlb	2	; select bank2
 10089  08FD  140E               	bsf	14,0	;volatile
 10090  08FE  0008               	return
 10091  08FF                     __end_of_SendCmd_1621:	
 10092                           
 10093                           	psect	text53
 10094  0A21                     __ptext53:	
 10095 ;; *************** function _SendBit_1621 *****************
 10096 ;; Defined at:
 10097 ;;		line 22 in file "mcc_generated_files/ht1621.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  data            1    wreg     unsigned char 
 10100 ;;  cnt             1    3[COMMON] unsigned char 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  data            1    6[COMMON] unsigned char 
 10103 ;;  i               1    7[COMMON] unsigned char 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;Total ram usage:        5 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    3
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_SendCmd_1621
 10124 ;;		_WriteAll_1621
 10125 ;;		_Write_1621
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _SendBit_1621
 10131  0A21                     _SendBit_1621:	
 10132                           
 10133                           ;incstack = 0
 10134                           ; Regs used in _SendBit_1621: [wreg+status,2+status,0]
 10135                           ;SendBit_1621@data stored from wreg
 10136  0A21  00F6               	movwf	SendBit_1621@data
 10137                           
 10138                           ;ht1621.c: 24: unsigned char i;
 10139                           ;ht1621.c: 25: for(i =0; i <cnt; i ++)
 10140  0A22  01F7               	clrf	SendBit_1621@i
 10141  0A23                     l4438:	
 10142  0A23  0873               	movf	SendBit_1621@cnt,w
 10143  0A24  0277               	subwf	SendBit_1621@i,w
 10144  0A25  1803               	btfsc	3,0
 10145  0A26  0008               	return
 10146                           
 10147                           ;ht1621.c: 26: {
 10148                           ;ht1621.c: 27: if((data&0x80)==0) do { LATC2 = 0; } while(0);
 10149  0A27  1BF6               	btfsc	SendBit_1621@data,7
 10150  0A28  2A2C               	goto	l627
 10151  0A29  0022               	movlb	2	; select bank2
 10152  0A2A  110E               	bcf	14,2	;volatile
 10153  0A2B  2A2E               	goto	l629
 10154  0A2C                     l627:	
 10155                           ;ht1621.c: 28: else do { LATC2 = 1; } while(0);
 10156                           
 10157  0A2C  0022               	movlb	2	; select bank2
 10158  0A2D  150E               	bsf	14,2	;volatile
 10159  0A2E                     l629:	
 10160                           ;ht1621.c: 29: do { LATC1 = 0; } while(0);
 10161                           
 10162  0A2E  108E               	bcf	14,1	;volatile
 10163                           
 10164                           ;ht1621.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 10165  0A2F  3006               	movlw	6
 10166  0A30  00F5               	movwf	??_SendBit_1621+1
 10167  0A31  3030               	movlw	48
 10168  0A32  00F4               	movwf	??_SendBit_1621
 10169  0A33                     u5197:	
 10170  0A33  0BF4               	decfsz	??_SendBit_1621,f
 10171  0A34  2A33               	goto	u5197
 10172  0A35  0BF5               	decfsz	??_SendBit_1621+1,f
 10173  0A36  2A33               	goto	u5197
 10174  0A37  0000               	nop
 10175                           
 10176                           ;ht1621.c: 31: do { LATC1 = 1; } while(0);
 10177  0A38  0022               	movlb	2	; select bank2
 10178  0A39  148E               	bsf	14,1	;volatile
 10179                           
 10180                           ;ht1621.c: 32: data<<=1;
 10181  0A3A  1003               	clrc
 10182  0A3B  0DF6               	rlf	SendBit_1621@data,f
 10183  0A3C  3001               	movlw	1
 10184  0A3D  00F4               	movwf	??_SendBit_1621
 10185  0A3E  0874               	movf	??_SendBit_1621,w
 10186  0A3F  07F7               	addwf	SendBit_1621@i,f
 10187  0A40  2A23               	goto	l4438
 10188  0A41                     __end_of_SendBit_1621:	
 10189                           
 10190                           	psect	text54
 10191  0A83                     __ptext54:	
 10192 ;; *************** function _Key_Scan *****************
 10193 ;; Defined at:
 10194 ;;		line 20 in file "mcc_generated_files/key.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  Key_val         1    5[COMMON] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      unsigned char 
 10201 ;; Registers used:
 10202 ;;		wreg
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;Total ram usage:        3 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    3
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_Key_Process
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function _Key_Scan
 10224  0A83                     _Key_Scan:	
 10225                           
 10226                           ;key.c: 22: unsigned char Key_val=0xff;
 10227                           
 10228                           ;incstack = 0
 10229                           ; Regs used in _Key_Scan: [wreg]
 10230  0A83  30FF               	movlw	255
 10231  0A84  00F3               	movwf	??_Key_Scan
 10232  0A85  0873               	movf	??_Key_Scan,w
 10233  0A86  00F5               	movwf	Key_Scan@Key_val
 10234                           
 10235                           ;key.c: 23: if( RA7 == 0 || RB5 == 0 )
 10236  0A87  0020               	movlb	0	; select bank0
 10237  0A88  1F8C               	btfss	12,7	;volatile
 10238  0A89  2A8C               	goto	l5126
 10239  0A8A  1A8D               	btfsc	13,5	;volatile
 10240  0A8B  2AA4               	goto	l858
 10241  0A8C                     l5126:	
 10242                           
 10243                           ;key.c: 24: {
 10244                           ;key.c: 25: _delay((unsigned long)((10)*(16000000/4000.0)));
 10245  0A8C  3034               	movlw	52
 10246  0A8D  00F4               	movwf	??_Key_Scan+1
 10247  0A8E  30F1               	movlw	241
 10248  0A8F  00F3               	movwf	??_Key_Scan
 10249  0A90                     u5207:	
 10250  0A90  0BF3               	decfsz	??_Key_Scan,f
 10251  0A91  2A90               	goto	u5207
 10252  0A92  0BF4               	decfsz	??_Key_Scan+1,f
 10253  0A93  2A90               	goto	u5207
 10254  0A94  3200               	nop2
 10255                           
 10256                           ;key.c: 26: if( RA7 == 0 || RB5 == 0)
 10257  0A95  0020               	movlb	0	; select bank0
 10258  0A96  1F8C               	btfss	12,7	;volatile
 10259  0A97  2A9A               	goto	l863
 10260  0A98  1A8D               	btfsc	13,5	;volatile
 10261  0A99  2AA4               	goto	l858
 10262  0A9A                     l863:	
 10263                           
 10264                           ;key.c: 27: {
 10265                           ;key.c: 28: if(RB5 == 0 ) Key_val = 0x01;
 10266  0A9A  1A8D               	btfsc	13,5	;volatile
 10267  0A9B  2A9E               	goto	l864
 10268  0A9C  01F5               	clrf	Key_Scan@Key_val
 10269  0A9D  0AF5               	incf	Key_Scan@Key_val,f
 10270  0A9E                     l864:	
 10271                           
 10272                           ;key.c: 29: if(RA7 == 0 ) Key_val = 0x02;
 10273  0A9E  1B8C               	btfsc	12,7	;volatile
 10274  0A9F  2AA4               	goto	l858
 10275  0AA0  3002               	movlw	2
 10276  0AA1  00F3               	movwf	??_Key_Scan
 10277  0AA2  0873               	movf	??_Key_Scan,w
 10278  0AA3  00F5               	movwf	Key_Scan@Key_val
 10279  0AA4                     l858:	
 10280                           
 10281                           ;key.c: 30: }
 10282                           ;key.c: 31: }
 10283                           ;key.c: 32: return Key_val;
 10284  0AA4  0875               	movf	Key_Scan@Key_val,w
 10285  0AA5  0008               	return
 10286  0AA6                     __end_of_Key_Scan:	
 10287                           
 10288                           	psect	text55
 10289  083F                     __ptext55:	
 10290 ;; *************** function _EUSART_Write *****************
 10291 ;; Defined at:
 10292 ;;		line 91 in file "mcc_generated_files/eusart.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  txData          1    wreg     unsigned char 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  txData          1    3[COMMON] unsigned char 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10310 ;;Total ram usage:        1 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    3
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_Key_Process
 10317 ;;		_EUSART_SendString
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           
 10322                           ;psect for function _EUSART_Write
 10323  083F                     _EUSART_Write:	
 10324                           
 10325                           ;incstack = 0
 10326                           ; Regs used in _EUSART_Write: [wreg]
 10327                           ;EUSART_Write@txData stored from wreg
 10328  083F  00F3               	movwf	EUSART_Write@txData
 10329  0840                     l129:	
 10330                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
 10331                           
 10332  0840  0020               	movlb	0	; select bank0
 10333  0841  1E11               	btfss	17,4	;volatile
 10334  0842  2840               	goto	l129
 10335                           
 10336                           ;eusart.c: 93: }
 10337                           ;eusart.c: 95: TXREG = txData;
 10338  0843  0873               	movf	EUSART_Write@txData,w
 10339  0844  0023               	movlb	3	; select bank3
 10340  0845  009A               	movwf	26	;volatile
 10341  0846  0008               	return
 10342  0847                     __end_of_EUSART_Write:	
 10343                           
 10344                           	psect	text56
 10345  09B1                     __ptext56:	
 10346 ;; *************** function _Bq32k_Time_Init *****************
 10347 ;; Defined at:
 10348 ;;		line 17 in file "mcc_generated_files/bq32k.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;		None
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;  temp           10    7[BANK0 ] unsigned char [10]
 10353 ;;  time            7    0        struct bq32k_regs
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:       12 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    5
 10370 ;; This function calls:
 10371 ;;		_I2C_Send_Buffer
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           
 10378                           ;psect for function _Bq32k_Time_Init
 10379  09B1                     _Bq32k_Time_Init:	
 10380                           
 10381                           ;bq32k.c: 19: bq32k_t time;
 10382                           ;bq32k.c: 20: unsigned char temp[10] = { 0x01,0x50,0x23,0x02,0x08,0x07,0x16 };
 10383                           
 10384                           ;incstack = 0
 10385                           ; Regs used in _Bq32k_Time_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10386  09B1  30E5               	movlw	low Bq32k_Time_Init@F2018
 10387  09B2  0086               	movwf	6
 10388  09B3  3000               	movlw	high Bq32k_Time_Init@F2018
 10389  09B4  0087               	movwf	7
 10390  09B5  3027               	movlw	low Bq32k_Time_Init@temp
 10391  09B6  0084               	movwf	4
 10392  09B7  3000               	movlw	high Bq32k_Time_Init@temp
 10393  09B8  0085               	movwf	5
 10394  09B9  300A               	movlw	10
 10395  09BA  0020               	movlb	0	; select bank0
 10396  09BB  00A5               	movwf	??_Bq32k_Time_Init
 10397  09BC                     u4770:	
 10398  09BC  0016               	moviw fsr1++
 10399  09BD  001A               	movwi fsr0++
 10400  09BE  0BA5               	decfsz	??_Bq32k_Time_Init,f
 10401  09BF  29BC               	goto	u4770
 10402                           
 10403                           ;bq32k.c: 21: I2C_Send_Buffer(0, temp, 7);
 10404  09C0  3027               	movlw	(low (Bq32k_Time_Init@temp| 0))& (0+255)
 10405  09C1  00A5               	movwf	??_Bq32k_Time_Init
 10406  09C2  0825               	movf	??_Bq32k_Time_Init,w
 10407  09C3  00F6               	movwf	I2C_Send_Buffer@buff
 10408  09C4  3007               	movlw	7
 10409  09C5  00A6               	movwf	??_Bq32k_Time_Init+1
 10410  09C6  0826               	movf	??_Bq32k_Time_Init+1,w
 10411  09C7  00F7               	movwf	I2C_Send_Buffer@Length
 10412  09C8  3000               	movlw	0
 10413  09C9  318C  24E3         	fcall	_I2C_Send_Buffer
 10414  09CB  0008               	return
 10415  09CC                     __end_of_Bq32k_Time_Init:	
 10416                           
 10417                           	psect	text57
 10418  0CE3                     __ptext57:	
 10419 ;; *************** function _I2C_Send_Buffer *****************
 10420 ;; Defined at:
 10421 ;;		line 173 in file "mcc_generated_files/i2c.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;  ADD             1    wreg     unsigned char 
 10424 ;;  buff            1    6[COMMON] PTR unsigned char 
 10425 ;;		 -> Bq32k_Rtc_Write_Time@temp(10), Bq32k_Time_Init@temp(10), 
 10426 ;;  Length          1    7[COMMON] unsigned char 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  ADD             1    2[BANK0 ] unsigned char 
 10429 ;;  Flag            1    4[BANK0 ] unsigned char 
 10430 ;;  i               1    3[BANK0 ] unsigned char 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      unsigned char 
 10433 ;; Registers used:
 10434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        7 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    4
 10447 ;; This function calls:
 10448 ;;		_I2C_Send_Byte
 10449 ;;		_I2C_Start
 10450 ;;		_I2C_Stop
 10451 ;; This function is called by:
 10452 ;;		_Bq32k_Time_Init
 10453 ;;		_Bq32k_Rtc_Write_Time
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _I2C_Send_Buffer
 10459  0CE3                     _I2C_Send_Buffer:	
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _I2C_Send_Buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10463                           ;I2C_Send_Buffer@ADD stored from wreg
 10464  0CE3  0020               	movlb	0	; select bank0
 10465  0CE4  00A2               	movwf	I2C_Send_Buffer@ADD
 10466                           
 10467                           ;i2c.c: 175: unsigned char Flag=1;
 10468  0CE5  01A4               	clrf	I2C_Send_Buffer@Flag
 10469  0CE6  0AA4               	incf	I2C_Send_Buffer@Flag,f
 10470                           
 10471                           ;i2c.c: 176: unsigned char i;
 10472                           ;i2c.c: 178: I2C_Start();
 10473  0CE7  3189  2117  318C   	fcall	_I2C_Start
 10474                           
 10475                           ;i2c.c: 180: Flag=I2C_Send_Byte(0XD0);
 10476  0CEA  30D0               	movlw	208
 10477  0CEB  318D  25E6  318C   	fcall	_I2C_Send_Byte
 10478  0CEE  0020               	movlb	0	; select bank0
 10479  0CEF  00A0               	movwf	??_I2C_Send_Buffer
 10480  0CF0  0820               	movf	??_I2C_Send_Buffer,w
 10481  0CF1  00A4               	movwf	I2C_Send_Buffer@Flag
 10482                           
 10483                           ;i2c.c: 181: if(Flag)
 10484  0CF2  0824               	movf	I2C_Send_Buffer@Flag,w
 10485  0CF3  1D03               	btfss	3,2
 10486  0CF4  0008               	return
 10487                           
 10488                           ;i2c.c: 184: Flag=I2C_Send_Byte( ADD );
 10489                           
 10490                           ;i2c.c: 182: return 0x01;
 10491                           ;	Return value of _I2C_Send_Buffer is never used
 10492  0CF5  0822               	movf	I2C_Send_Buffer@ADD,w
 10493  0CF6  318D  25E6  318C   	fcall	_I2C_Send_Byte
 10494  0CF9  0020               	movlb	0	; select bank0
 10495  0CFA  00A0               	movwf	??_I2C_Send_Buffer
 10496  0CFB  0820               	movf	??_I2C_Send_Buffer,w
 10497  0CFC  00A4               	movwf	I2C_Send_Buffer@Flag
 10498                           
 10499                           ;i2c.c: 185: if(Flag)
 10500  0CFD  0824               	movf	I2C_Send_Buffer@Flag,w
 10501  0CFE  1D03               	btfss	3,2
 10502  0CFF  0008               	return
 10503                           
 10504                           ;i2c.c: 188: for (i = 0; i<Length; i++)
 10505                           
 10506                           ;i2c.c: 186: return 0x01;
 10507                           ;	Return value of _I2C_Send_Buffer is never used
 10508  0D00  01A3               	clrf	I2C_Send_Buffer@i
 10509  0D01                     l5114:	
 10510  0D01  0877               	movf	I2C_Send_Buffer@Length,w
 10511  0D02  0223               	subwf	I2C_Send_Buffer@i,w
 10512  0D03  1803               	btfsc	3,0
 10513  0D04  2D1B               	goto	l5116
 10514                           
 10515                           ;i2c.c: 189: {
 10516                           ;i2c.c: 190: Flag=I2C_Send_Byte(*(buff+i));
 10517  0D05  0823               	movf	I2C_Send_Buffer@i,w
 10518  0D06  0776               	addwf	I2C_Send_Buffer@buff,w
 10519  0D07  00A0               	movwf	??_I2C_Send_Buffer
 10520  0D08  0820               	movf	??_I2C_Send_Buffer,w
 10521  0D09  0086               	movwf	6
 10522  0D0A  0187               	clrf	7
 10523  0D0B  0801               	movf	1,w
 10524  0D0C  318D  25E6  318C   	fcall	_I2C_Send_Byte
 10525  0D0F  0020               	movlb	0	; select bank0
 10526  0D10  00A1               	movwf	??_I2C_Send_Buffer+1
 10527  0D11  0821               	movf	??_I2C_Send_Buffer+1,w
 10528  0D12  00A4               	movwf	I2C_Send_Buffer@Flag
 10529                           
 10530                           ;i2c.c: 191: if(Flag)
 10531  0D13  0824               	movf	I2C_Send_Buffer@Flag,w
 10532  0D14  1D03               	btfss	3,2
 10533  0D15  0008               	return
 10534                           
 10535                           ;i2c.c: 192: return 0x01;
 10536                           ;	Return value of _I2C_Send_Buffer is never used
 10537  0D16  3001               	movlw	1
 10538  0D17  00A0               	movwf	??_I2C_Send_Buffer
 10539  0D18  0820               	movf	??_I2C_Send_Buffer,w
 10540  0D19  07A3               	addwf	I2C_Send_Buffer@i,f
 10541  0D1A  2D01               	goto	l5114
 10542  0D1B                     l5116:	
 10543                           
 10544                           ;i2c.c: 193: }
 10545                           ;i2c.c: 194: I2C_Stop();
 10546  0D1B  3189  2130         	fcall	_I2C_Stop
 10547  0D1D  0008               	return
 10548  0D1E                     __end_of_I2C_Send_Buffer:	
 10549                           ;i2c.c: 195: return 0x00;
 10550                           ;	Return value of _I2C_Send_Buffer is never used
 10551                           
 10552                           
 10553                           	psect	text58
 10554  0930                     __ptext58:	
 10555 ;; *************** function _I2C_Stop *****************
 10556 ;; Defined at:
 10557 ;;		line 102 in file "mcc_generated_files/i2c.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;		None
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;Total ram usage:        1 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    3
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_I2C_Read_Buffer
 10582 ;;		_I2C_Send_Buffer
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function _I2C_Stop
 10588  0930                     _I2C_Stop:	
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _I2C_Stop: [wreg]
 10592                           ;i2c.c: 104: do { LATB0 = 0; } while(0);
 10593  0930  0022               	movlb	2	; select bank2
 10594  0931  100D               	bcf	13,0	;volatile
 10595                           
 10596                           ;i2c.c: 105: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10597  0932  300D               	movlw	13
 10598  0933  00F3               	movwf	??_I2C_Stop
 10599  0934                     u5217:	
 10600  0934  0BF3               	decfsz	??_I2C_Stop,f
 10601  0935  2934               	goto	u5217
 10602                           
 10603                           ;i2c.c: 106: do { LATB1 = 0; } while(0);
 10604  0936  0022               	movlb	2	; select bank2
 10605  0937  108D               	bcf	13,1	;volatile
 10606                           
 10607                           ;i2c.c: 107: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10608  0938  300D               	movlw	13
 10609  0939  00F3               	movwf	??_I2C_Stop
 10610  093A                     u5227:	
 10611  093A  0BF3               	decfsz	??_I2C_Stop,f
 10612  093B  293A               	goto	u5227
 10613                           
 10614                           ;i2c.c: 108: do { LATB0 = 1; } while(0);
 10615  093C  0022               	movlb	2	; select bank2
 10616  093D  140D               	bsf	13,0	;volatile
 10617                           
 10618                           ;i2c.c: 109: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10619  093E  300D               	movlw	13
 10620  093F  00F3               	movwf	??_I2C_Stop
 10621  0940                     u5237:	
 10622  0940  0BF3               	decfsz	??_I2C_Stop,f
 10623  0941  2940               	goto	u5237
 10624                           
 10625                           ;i2c.c: 110: do { LATB1 = 1; } while(0);
 10626  0942  0022               	movlb	2	; select bank2
 10627  0943  148D               	bsf	13,1	;volatile
 10628                           
 10629                           ;i2c.c: 111: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10630  0944  300D               	movlw	13
 10631  0945  00F3               	movwf	??_I2C_Stop
 10632  0946                     u5247:	
 10633  0946  0BF3               	decfsz	??_I2C_Stop,f
 10634  0947  2946               	goto	u5247
 10635  0948  0008               	return
 10636  0949                     __end_of_I2C_Stop:	
 10637                           
 10638                           	psect	text59
 10639  0917                     __ptext59:	
 10640 ;; *************** function _I2C_Start *****************
 10641 ;; Defined at:
 10642 ;;		line 16 in file "mcc_generated_files/i2c.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;Total ram usage:        1 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    3
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		_I2C_Read_Buffer
 10667 ;;		_I2C_Send_Buffer
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           
 10672                           ;psect for function _I2C_Start
 10673  0917                     _I2C_Start:	
 10674                           
 10675                           ;incstack = 0
 10676                           ; Regs used in _I2C_Start: [wreg]
 10677                           ;i2c.c: 18: do { LATB1 = 1; } while(0);
 10678  0917  0022               	movlb	2	; select bank2
 10679  0918  148D               	bsf	13,1	;volatile
 10680                           
 10681                           ;i2c.c: 19: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10682  0919  300D               	movlw	13
 10683  091A  00F3               	movwf	??_I2C_Start
 10684  091B                     u5257:	
 10685  091B  0BF3               	decfsz	??_I2C_Start,f
 10686  091C  291B               	goto	u5257
 10687                           
 10688                           ;i2c.c: 20: do { LATB0 = 1; } while(0);
 10689  091D  0022               	movlb	2	; select bank2
 10690  091E  140D               	bsf	13,0	;volatile
 10691                           
 10692                           ;i2c.c: 21: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10693  091F  300D               	movlw	13
 10694  0920  00F3               	movwf	??_I2C_Start
 10695  0921                     u5267:	
 10696  0921  0BF3               	decfsz	??_I2C_Start,f
 10697  0922  2921               	goto	u5267
 10698                           
 10699                           ;i2c.c: 22: do { LATB1 = 0; } while(0);
 10700  0923  0022               	movlb	2	; select bank2
 10701  0924  108D               	bcf	13,1	;volatile
 10702                           
 10703                           ;i2c.c: 23: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10704  0925  300D               	movlw	13
 10705  0926  00F3               	movwf	??_I2C_Start
 10706  0927                     u5277:	
 10707  0927  0BF3               	decfsz	??_I2C_Start,f
 10708  0928  2927               	goto	u5277
 10709                           
 10710                           ;i2c.c: 24: do { LATB0 = 0; } while(0);
 10711  0929  0022               	movlb	2	; select bank2
 10712  092A  100D               	bcf	13,0	;volatile
 10713                           
 10714                           ;i2c.c: 25: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10715  092B  300D               	movlw	13
 10716  092C  00F3               	movwf	??_I2C_Start
 10717  092D                     u5287:	
 10718  092D  0BF3               	decfsz	??_I2C_Start,f
 10719  092E  292D               	goto	u5287
 10720  092F  0008               	return
 10721  0930                     __end_of_I2C_Start:	
 10722                           
 10723                           	psect	text60
 10724  0DE6                     __ptext60:	
 10725 ;; *************** function _I2C_Send_Byte *****************
 10726 ;; Defined at:
 10727 ;;		line 34 in file "mcc_generated_files/i2c.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  Data            1    wreg     unsigned char 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  Data            1    4[COMMON] unsigned char 
 10732 ;;  i               1    5[COMMON] unsigned char 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      unsigned char 
 10735 ;; Registers used:
 10736 ;;		wreg, status,2, status,0
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;Total ram usage:        3 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    3
 10749 ;; This function calls:
 10750 ;;		Nothing
 10751 ;; This function is called by:
 10752 ;;		_I2C_Read_Buffer
 10753 ;;		_I2C_Send_Buffer
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           
 10758                           ;psect for function _I2C_Send_Byte
 10759  0DE6                     _I2C_Send_Byte:	
 10760                           
 10761                           ;incstack = 0
 10762                           ; Regs used in _I2C_Send_Byte: [wreg+status,2+status,0]
 10763                           ;I2C_Send_Byte@Data stored from wreg
 10764  0DE6  00F4               	movwf	I2C_Send_Byte@Data
 10765                           
 10766                           ;i2c.c: 36: unsigned char i;
 10767                           ;i2c.c: 37: for(i=0;i<8;i++)
 10768  0DE7  01F5               	clrf	I2C_Send_Byte@i
 10769  0DE8  3008               	movlw	8
 10770  0DE9  0275               	subwf	I2C_Send_Byte@i,w
 10771  0DEA  1803               	btfsc	3,0
 10772  0DEB  2E0D               	goto	l739
 10773  0DEC                     l727:	
 10774                           
 10775                           ;i2c.c: 38: {
 10776                           ;i2c.c: 39: if(Data&0x80)
 10777  0DEC  1FF4               	btfss	I2C_Send_Byte@Data,7
 10778  0DED  2DF1               	goto	l733
 10779                           
 10780                           ;i2c.c: 40: do { LATB1 = 1; } while(0);
 10781  0DEE  0022               	movlb	2	; select bank2
 10782  0DEF  148D               	bsf	13,1	;volatile
 10783  0DF0  2DF3               	goto	l4254
 10784  0DF1                     l733:	
 10785                           ;i2c.c: 41: else
 10786                           ;i2c.c: 42: do { LATB1 = 0; } while(0);
 10787                           
 10788  0DF1  0022               	movlb	2	; select bank2
 10789  0DF2  108D               	bcf	13,1	;volatile
 10790  0DF3                     l4254:	
 10791                           
 10792                           ;i2c.c: 43: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10793  0DF3  300D               	movlw	13
 10794  0DF4  00F3               	movwf	??_I2C_Send_Byte
 10795  0DF5                     u5297:	
 10796  0DF5  0BF3               	decfsz	??_I2C_Send_Byte,f
 10797  0DF6  2DF5               	goto	u5297
 10798                           
 10799                           ;i2c.c: 44: do { LATB0 = 1; } while(0);
 10800  0DF7  0022               	movlb	2	; select bank2
 10801  0DF8  140D               	bsf	13,0	;volatile
 10802                           
 10803                           ;i2c.c: 45: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10804  0DF9  300D               	movlw	13
 10805  0DFA  00F3               	movwf	??_I2C_Send_Byte
 10806  0DFB                     u5307:	
 10807  0DFB  0BF3               	decfsz	??_I2C_Send_Byte,f
 10808  0DFC  2DFB               	goto	u5307
 10809                           
 10810                           ;i2c.c: 46: Data<<=1;
 10811  0DFD  1003               	clrc
 10812  0DFE  0DF4               	rlf	I2C_Send_Byte@Data,f
 10813                           
 10814                           ;i2c.c: 47: do { LATB0 = 0; } while(0);
 10815  0DFF  0022               	movlb	2	; select bank2
 10816  0E00  100D               	bcf	13,0	;volatile
 10817                           
 10818                           ;i2c.c: 48: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10819  0E01  300D               	movlw	13
 10820  0E02  00F3               	movwf	??_I2C_Send_Byte
 10821  0E03                     u5317:	
 10822  0E03  0BF3               	decfsz	??_I2C_Send_Byte,f
 10823  0E04  2E03               	goto	u5317
 10824  0E05  3001               	movlw	1
 10825  0E06  00F3               	movwf	??_I2C_Send_Byte
 10826  0E07  0873               	movf	??_I2C_Send_Byte,w
 10827  0E08  07F5               	addwf	I2C_Send_Byte@i,f
 10828  0E09  3008               	movlw	8
 10829  0E0A  0275               	subwf	I2C_Send_Byte@i,w
 10830  0E0B  1C03               	skipc
 10831  0E0C  2DEC               	goto	l727
 10832  0E0D                     l739:	
 10833                           ;i2c.c: 49: }
 10834                           ;i2c.c: 50: do { LATB1 = 1; } while(0);
 10835                           
 10836  0E0D  0022               	movlb	2	; select bank2
 10837  0E0E  148D               	bsf	13,1	;volatile
 10838                           
 10839                           ;i2c.c: 51: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10840  0E0F  300D               	movlw	13
 10841  0E10  00F3               	movwf	??_I2C_Send_Byte
 10842  0E11                     u5327:	
 10843  0E11  0BF3               	decfsz	??_I2C_Send_Byte,f
 10844  0E12  2E11               	goto	u5327
 10845                           
 10846                           ;i2c.c: 52: do { LATB0 = 1; } while(0);
 10847  0E13  0022               	movlb	2	; select bank2
 10848  0E14  140D               	bsf	13,0	;volatile
 10849                           
 10850                           ;i2c.c: 53: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10851  0E15  300D               	movlw	13
 10852  0E16  00F3               	movwf	??_I2C_Send_Byte
 10853  0E17                     u5337:	
 10854  0E17  0BF3               	decfsz	??_I2C_Send_Byte,f
 10855  0E18  2E17               	goto	u5337
 10856                           
 10857                           ;i2c.c: 54: do { TRISB1 = 1; } while(0);
 10858  0E19  0021               	movlb	1	; select bank1
 10859  0E1A  148D               	bsf	13,1	;volatile
 10860                           
 10861                           ;i2c.c: 55: if(RB1)
 10862  0E1B  0020               	movlb	0	; select bank0
 10863  0E1C  1C8D               	btfss	13,1	;volatile
 10864  0E1D  2E22               	goto	l749
 10865                           
 10866                           ;i2c.c: 56: {
 10867                           ;i2c.c: 57: do { TRISB1 = 0; } while(0);
 10868  0E1E  0021               	movlb	1	; select bank1
 10869  0E1F  108D               	bcf	13,1	;volatile
 10870                           
 10871                           ;i2c.c: 58: return 0x01;
 10872  0E20  3001               	movlw	1
 10873  0E21  0008               	return
 10874  0E22                     l749:	
 10875                           ;i2c.c: 59: }
 10876                           ;i2c.c: 60: do { TRISB1 = 0; } while(0);
 10877                           
 10878  0E22  0021               	movlb	1	; select bank1
 10879  0E23  108D               	bcf	13,1	;volatile
 10880                           
 10881                           ;i2c.c: 61: do { LATB0 = 0; } while(0);
 10882  0E24  0022               	movlb	2	; select bank2
 10883  0E25  100D               	bcf	13,0	;volatile
 10884                           
 10885                           ;i2c.c: 62: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10886  0E26  300D               	movlw	13
 10887  0E27  00F3               	movwf	??_I2C_Send_Byte
 10888  0E28                     u5347:	
 10889  0E28  0BF3               	decfsz	??_I2C_Send_Byte,f
 10890  0E29  2E28               	goto	u5347
 10891                           
 10892                           ;i2c.c: 63: do { LATB1 = 0; } while(0);
 10893  0E2A  0022               	movlb	2	; select bank2
 10894  0E2B  108D               	bcf	13,1	;volatile
 10895                           
 10896                           ;i2c.c: 64: _delay((unsigned long)((10)*(16000000/4000000.0)));
 10897  0E2C  300D               	movlw	13
 10898  0E2D  00F3               	movwf	??_I2C_Send_Byte
 10899  0E2E                     u5357:	
 10900  0E2E  0BF3               	decfsz	??_I2C_Send_Byte,f
 10901  0E2F  2E2E               	goto	u5357
 10902                           
 10903                           ;i2c.c: 65: return 0x00;
 10904  0E30  3000               	movlw	0
 10905  0E31  0008               	return
 10906  0E32                     __end_of_I2C_Send_Byte:	
 10907                           
 10908                           	psect	text61
 10909  0962                     __ptext61:	
 10910 ;; *************** function _ADC_GetConversion *****************
 10911 ;; Defined at:
 10912 ;;		line 106 in file "mcc_generated_files/adc.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  channel         1    wreg     enum E1850
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  channel         1    6[COMMON] enum E1850
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  2    3[COMMON] unsigned int 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;Total ram usage:        4 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    3
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_main
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           
 10941                           ;psect for function _ADC_GetConversion
 10942  0962                     _ADC_GetConversion:	
 10943                           
 10944                           ;incstack = 0
 10945                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10946                           ;ADC_GetConversion@channel stored from wreg
 10947  0962  00F6               	movwf	ADC_GetConversion@channel
 10948                           
 10949                           ;adc.c: 108: ADCON0bits.CHS = channel;
 10950  0963  0876               	movf	ADC_GetConversion@channel,w
 10951  0964  00F5               	movwf	??_ADC_GetConversion
 10952  0965  0DF5               	rlf	??_ADC_GetConversion,f
 10953  0966  0DF5               	rlf	??_ADC_GetConversion,f
 10954  0967  0021               	movlb	1	; select bank1
 10955  0968  081D               	movf	29,w	;volatile
 10956  0969  0675               	xorwf	??_ADC_GetConversion,w
 10957  096A  3983               	andlw	-125
 10958  096B  0675               	xorwf	??_ADC_GetConversion,w
 10959  096C  009D               	movwf	29	;volatile
 10960                           
 10961                           ;adc.c: 111: ADCON0bits.ADON = 1;
 10962  096D  141D               	bsf	29,0	;volatile
 10963                           
 10964                           ;adc.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
 10965  096E  3006               	movlw	6
 10966  096F  00F5               	movwf	??_ADC_GetConversion
 10967  0970                     u5367:	
 10968  0970  0BF5               	decfsz	??_ADC_GetConversion,f
 10969  0971  2970               	goto	u5367
 10970  0972  0000               	nop
 10971                           
 10972                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
 10973  0973  0021               	movlb	1	; select bank1
 10974  0974  149D               	bsf	29,1	;volatile
 10975  0975                     l197:	
 10976                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
 10977                           
 10978  0975  189D               	btfsc	29,1	;volatile
 10979  0976  2975               	goto	l197
 10980                           
 10981                           ;adc.c: 121: }
 10982                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
 10983  0977  081C               	movf	28,w	;volatile
 10984  0978  00F4               	movwf	?_ADC_GetConversion+1
 10985  0979  081B               	movf	27,w	;volatile
 10986  097A  00F3               	movwf	?_ADC_GetConversion
 10987  097B  0008               	return
 10988  097C                     __end_of_ADC_GetConversion:	
 10989                           
 10990                           	psect	intentry
 10991  0004                     __pintentry:	
 10992 ;; *************** function _INTERRUPT_InterruptManager *****************
 10993 ;; Defined at:
 10994 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;Total ram usage:        1 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    2
 11015 ;; This function calls:
 11016 ;;		_TMR0_ISR
 11017 ;; This function is called by:
 11018 ;;		Interrupt level 1
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022  0004                     _INTERRUPT_InterruptManager:	
 11023                           
 11024                           ;incstack = 0
 11025                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 11026  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11027  0005  3180               	pagesel	$
 11028  0006  0020               	movlb	0	; select bank0
 11029  0007  087F               	movf	127,w
 11030  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 11031                           
 11032                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 11033  0009  1A8B               	btfsc	11,5	;volatile
 11034  000A  1D0B               	btfss	11,2	;volatile
 11035  000B  280E               	goto	i1l255
 11036                           
 11037                           ;interrupt_manager.c: 55: TMR0_ISR();
 11038  000C  3189  2196         	fcall	_TMR0_ISR
 11039  000E                     i1l255:	
 11040                           ;interrupt_manager.c: 56: } else {
 11041                           
 11042  000E  0872               	movf	??_INTERRUPT_InterruptManager,w
 11043  000F  0020               	movlb	0	; select bank0
 11044  0010  00FF               	movwf	127
 11045  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11046  0012  0009               	retfie
 11047  0013                     __end_of_INTERRUPT_InterruptManager:	
 11048                           
 11049                           	psect	text63
 11050  0996                     __ptext63:	
 11051 ;; *************** function _TMR0_ISR *****************
 11052 ;; Defined at:
 11053 ;;		line 103 in file "mcc_generated_files/tmr0.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      void 
 11060 ;; Registers used:
 11061 ;;		wreg, status,2, status,0, pclath, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11071 ;;Total ram usage:        1 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    1
 11074 ;; This function calls:
 11075 ;;		_TMR0_CallBack
 11076 ;; This function is called by:
 11077 ;;		_INTERRUPT_InterruptManager
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           
 11082                           ;psect for function _TMR0_ISR
 11083  0996                     _TMR0_ISR:	
 11084                           
 11085                           ;tmr0.c: 104: static volatile unsigned int CountCallBack = 0;
 11086                           ;tmr0.c: 107: INTCONbits.TMR0IF = 0;
 11087                           
 11088                           ;incstack = 0
 11089                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11090  0996  110B               	bcf	11,2	;volatile
 11091                           
 11092                           ;tmr0.c: 109: TMR0 = timer0ReloadVal;
 11093  0997  0021               	movlb	1	; select bank1
 11094  0998  086F               	movf	_timer0ReloadVal^(0+128),w	;volatile
 11095  0999  0020               	movlb	0	; select bank0
 11096  099A  0095               	movwf	21	;volatile
 11097                           
 11098                           ;tmr0.c: 111: MAX31856Sec++;
 11099  099B  3001               	movlw	1
 11100  099C  00F1               	movwf	??_TMR0_ISR
 11101  099D  0871               	movf	??_TMR0_ISR,w
 11102  099E  0021               	movlb	1	; select bank1
 11103  099F  07B9               	addwf	_MAX31856Sec^(0+128),f
 11104                           
 11105                           ;tmr0.c: 114: if (++CountCallBack >= 50) {
 11106  09A0  3001               	movlw	1
 11107  09A1  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11108  09A2  3000               	movlw	0
 11109  09A3  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11110  09A4  3000               	movlw	0
 11111  09A5  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11112  09A6  3032               	movlw	50
 11113  09A7  1903               	skipnz
 11114  09A8  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11115  09A9  1C03               	skipc
 11116  09AA  0008               	return
 11117                           
 11118                           ;tmr0.c: 116: TMR0_CallBack();
 11119  09AB  318A  22A6         	fcall	_TMR0_CallBack
 11120                           
 11121                           ;tmr0.c: 119: CountCallBack = 0;
 11122  09AD  0021               	movlb	1	; select bank1
 11123  09AE  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11124  09AF  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11125  09B0  0008               	return
 11126  09B1                     __end_of_TMR0_ISR:	
 11127                           
 11128                           	psect	text64
 11129  0AA6                     __ptext64:	
 11130 ;; *************** function _TMR0_CallBack *****************
 11131 ;; Defined at:
 11132 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      void 
 11139 ;; Registers used:
 11140 ;;		wreg, status,2, status,0
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;Total ram usage:        1 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_TMR0_ISR
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           
 11160                           ;psect for function _TMR0_CallBack
 11161  0AA6                     _TMR0_CallBack:	
 11162                           
 11163                           ;tmr0.c: 128: time_count++;
 11164                           
 11165                           ;incstack = 0
 11166                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0]
 11167  0AA6  3001               	movlw	1
 11168  0AA7  00F0               	movwf	??_TMR0_CallBack
 11169  0AA8  0870               	movf	??_TMR0_CallBack,w
 11170  0AA9  0020               	movlb	0	; select bank0
 11171  0AAA  07ED               	addwf	_time_count,f
 11172                           
 11173                           ;tmr0.c: 129: if(time_count == 4 || time_count > 12) time_count = 0;
 11174  0AAB  3004               	movlw	4
 11175  0AAC  066D               	xorwf	_time_count,w
 11176  0AAD  1903               	btfsc	3,2
 11177  0AAE  2AB3               	goto	i1l3718
 11178  0AAF  300D               	movlw	13
 11179  0AB0  026D               	subwf	_time_count,w
 11180  0AB1  1C03               	skipc
 11181  0AB2  2AB4               	goto	i1l3720
 11182  0AB3                     i1l3718:	
 11183  0AB3  01ED               	clrf	_time_count
 11184  0AB4                     i1l3720:	
 11185                           
 11186                           ;tmr0.c: 130: LongPressSec++;
 11187  0AB4  3001               	movlw	1
 11188  0AB5  00F0               	movwf	??_TMR0_CallBack
 11189  0AB6  0870               	movf	??_TMR0_CallBack,w
 11190  0AB7  0021               	movlb	1	; select bank1
 11191  0AB8  07B8               	addwf	_LongPressSec^(0+128),f
 11192                           
 11193                           ;tmr0.c: 132: Cur_temperature_time_ch1++;
 11194  0AB9  3001               	movlw	1
 11195  0ABA  00F0               	movwf	??_TMR0_CallBack
 11196  0ABB  0870               	movf	??_TMR0_CallBack,w
 11197  0ABC  07B6               	addwf	_Cur_temperature_time_ch1^(0+128),f
 11198                           
 11199                           ;tmr0.c: 133: if(Cur_temperature_time_ch1 > 130)
 11200  0ABD  3083               	movlw	131
 11201  0ABE  0236               	subwf	_Cur_temperature_time_ch1^(0+128),w
 11202  0ABF  1803               	btfsc	3,0
 11203                           
 11204                           ;tmr0.c: 134: {
 11205                           ;tmr0.c: 135: Cur_temperature_time_ch1 = 0;
 11206  0AC0  01B6               	clrf	_Cur_temperature_time_ch1^(0+128)
 11207                           
 11208                           ;tmr0.c: 136: }
 11209                           ;tmr0.c: 138: Cur_temperature_time_ch2++;
 11210  0AC1  3001               	movlw	1
 11211  0AC2  00F0               	movwf	??_TMR0_CallBack
 11212  0AC3  0870               	movf	??_TMR0_CallBack,w
 11213  0AC4  07B7               	addwf	_Cur_temperature_time_ch2^(0+128),f
 11214                           
 11215                           ;tmr0.c: 139: if(Cur_temperature_time_ch2 > 130)
 11216  0AC5  3083               	movlw	131
 11217  0AC6  0237               	subwf	_Cur_temperature_time_ch2^(0+128),w
 11218  0AC7  1C03               	skipc
 11219  0AC8  0008               	return
 11220                           
 11221                           ;tmr0.c: 140: {
 11222                           ;tmr0.c: 141: Cur_temperature_time_ch2= 0;
 11223  0AC9  01B7               	clrf	_Cur_temperature_time_ch2^(0+128)
 11224  0ACA  0008               	return
 11225  0ACB                     __end_of_TMR0_CallBack:	
 11226  007E                     btemp	set	126	;btemp
 11227  007E                     int$flags	set	126
 11228  007E                     wtemp	set	126
 11229  007E                     wtemp0	set	126
 11230  0080                     wtemp1	set	128
 11231  0082                     wtemp2	set	130
 11232  0084                     wtemp3	set	132
 11233  0086                     wtemp4	set	134
 11234  0088                     wtemp5	set	136
 11235  007F                     wtemp6	set	127
 11236  007E                     ttemp	set	126
 11237  007E                     ttemp0	set	126
 11238  0081                     ttemp1	set	129
 11239  0084                     ttemp2	set	132
 11240  0087                     ttemp3	set	135
 11241  007F                     ttemp4	set	127
 11242  007E                     ltemp	set	126
 11243  007E                     ltemp0	set	126
 11244  0082                     ltemp1	set	130
 11245  0086                     ltemp2	set	134
 11246  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    21
    Data        10
    BSS         145
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     69      78
    BANK1            80      0      80
    BANK2            80      5      69
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 7
		 -> rtc_save_ch2(BANK1[7]), rtc_save_ch1(BANK1[7]), 

    memset@p1	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    memset@p	PTR unsigned char  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    Bq32k_Rtc_Read_Time@p	PTR struct bq32k_regs size(1) Largest target is 7
		 -> rtc_tm(BANK1[7]), 

    I2C_Send_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Write_Time@temp(COMMON[10]), Bq32k_Time_Init@temp(BANK0[10]), 

    I2C_Read_Buffer@buff	PTR unsigned char  size(1) Largest target is 10
		 -> Bq32k_Rtc_Read_Time@temp(BANK0[10]), 

    sp__memset	PTR void  size(1) Largest target is 4
		 -> display_buff(BANK1[4]), 

    WriteAll_1621@p	PTR unsigned char  size(2) Largest target is 21
		 -> time_Display@num(BANK0[4]), err_Display@num(BANK0[4]), Two_Display@num(BANK0[4]), display_buff(BANK1[4]), 
		 -> Dis_TAB(CODE[21]), 

    maxim_31856_read_nregisters@uch_buff	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned int  size(1) Largest target is 64
		 -> Flash_buff(BANK2[64]), 

    SPI_Exchange8bitBuffer@dataOut	PTR unsigned char  size(1) Largest target is 8
		 -> uch_reg(BANK1[8]), 

    SPI_Exchange8bitBuffer@dataIn	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _maxim_31856_init->_maxim_31856_write_register
    _Serach_Flash_Head->_Write_Flash_finish
    _SYSTEM_Initialize->_TMR0_Initialize
    _Key_Process->_Write_Flash_finish
    _Key_Process->_Write_Flash_head
    _time_Display->___awdiv
    _time_Display->___awmod
    _temperature_display->_maxim_clear_fault_status
    _Calculate_Time->_Write_Flash_finish
    _Calculate_Time->_Write_Flash_head
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _bcd2bin->___bmul
    _I2C_Read_Buffer->_I2C_Receive_Byte
    _I2C_Read_Buffer->_I2C_Send_Byte
    _maxim_clear_fault_status->_maxim_31856_read_register
    _Tc_Display->___lwmod
    _Tc_Display->_memset
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_start_conversion
    _maxim_start_conversion->_maxim_31856_read_register
    _maxim_31856_write_register->_SPI_Exchange8bit
    _maxim_31856_read_register->_SPI_Exchange8bit
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _SPI_Exchange8bitBuffer->_SPI_Exchange8bit
    _WriteAll_1621->_SendBit_1621
    _WriteAll_1621->_SendDataBit_1621
    _SendCmd_1621->_SendBit_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer
    _I2C_Send_Buffer->_I2C_Send_Byte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_TMR0_CallBack

Critical Paths under _main in BANK0

    _main->_Key_Process
    _Save_process->_Calculate_Time
    _temperature_process->_temperature_display
    _time_Display->_Bq32k_Rtc_Read_Time
    _temperature_display->_tc_temperature_trans
    _tc_temperature_trans->_Calculate_Time
    _Calculate_Time->_Save_Write_time
    _Write_Flash_head->_FLASH_WriteWord
    _Write_Flash_finish->_FLASH_WriteWord
    _Save_Write_time->_Save_Write_word
    _Save_Write_word->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _Bq32k_Rtc_Read_Time->_I2C_Read_Buffer
    _Bq32k_Rtc_Read_Time->_bcd2bin
    _err_Display->_WriteAll_1621
    _Tc_Display->___lwdiv
    ___lwdiv->___lwmod
    _one_temperature_trans->_maxim_31856_read_nregisters
    _maxim_31856_read_nregisters->_SPI_Exchange8bitBuffer
    _Two_Display->_WriteAll_1621
    _Bq32k_Time_Init->_I2C_Send_Buffer

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  116951
                                             66 BANK0      3     3      0
                                              0 BANK2      5     5      0
                  _ADC_GetConversion
                    _Bq32k_Time_Init
                        _Key_Process
                  _SYSTEM_Initialize
                       _Save_process
                       _SendCmd_1621
                  _Serach_Flash_Head
                      _WriteAll_1621
                   _maxim_31856_init
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _maxim_31856_init                                     1     1      0    1556
                                              6 COMMON     1     1      0
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (1) _Serach_Flash_Head                                    5     5      0    3404
                                             19 BANK0      5     5      0
                     _FLASH_ReadWord
                 _Write_Flash_finish
 ---------------------------------------------------------------------------------
 (1) _Save_process                                         4     4      0   19272
                                             47 BANK0      4     4      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Process                                          6     6      0   51130
                                             60 BANK0      6     6      0
                       _EUSART_Write
                     _FLASH_ReadWord
                           _Key_Scan
                    _Save_Write_time
                       _SendCmd_1621
                    _Set_finish_flag
                     _Set_start_flag
                 _Write_Flash_finish
                   _Write_Flash_head
                _temperature_process
 ---------------------------------------------------------------------------------
 (1) _temperature_process                                  0     0      0   38200
                        _Two_Display
              _one_temperature_trans
                _temperature_display
                       _time_Display
 ---------------------------------------------------------------------------------
 (2) _time_Display                                         7     7      0    5147
                                             16 BANK0      7     7      0
                _Bq32k_Rtc_Read_Time
                      _WriteAll_1621
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     895
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     907
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _temperature_display                                  1     1      0   28488
                                             59 BANK0      1     1      0
                         _Tc_Display
                        _err_Display
         _maxim_31856_write_register
           _maxim_clear_fault_status
               _tc_temperature_trans
 ---------------------------------------------------------------------------------
 (3) _tc_temperature_trans                                12    12      0   20051
                                             47 BANK0     12    12      0
                     _Calculate_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Calculate_Time                                      22    22      0   14754
                                             25 BANK0     22    22      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_time
                 _Write_Flash_finish
                   _Write_Flash_head
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1368
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_head                                     1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Write_Flash_finish                                   1     1      0    2904
                                              7 COMMON     1     1      0
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _Save_Write_time                                      3     3      0    5897
                                             23 BANK0      2     2      0
                _Bq32k_Rtc_Read_Time
                    _Save_Write_word
 ---------------------------------------------------------------------------------
 (4) _Save_Write_word                                      4     2      2    4429
                                             19 BANK0      4     2      2
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (5) _FLASH_WriteWord                                     10     5      5    2904
                                              6 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (6) _FLASH_WriteBlock                                    10     7      3     776
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (7) _FLASH_EraseBlock                                     3     1      2     173
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (6) _FLASH_ReadWord                                       3     1      2     327
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _Bq32k_Rtc_Read_Time                                 13    13      0    1468
                                              3 BANK0     13    13      0
                    _I2C_Read_Buffer
                            _bcd2bin
 ---------------------------------------------------------------------------------
 (4) _bcd2bin                                              4     4      0     275
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     213
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _I2C_Read_Buffer                                      5     3      2     599
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                   _I2C_Receive_Byte
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Receive_Byte                                     3     3      0     108
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _maxim_clear_fault_status                             1     1      0    1652
                                              7 COMMON     1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (3) _err_Display                                          5     5      0    1834
                                              6 BANK0      5     5      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _Tc_Display                                           4     4      0    3395
                                              9 BANK0      4     4      0
                      _WriteAll_1621
                            ___lwdiv
                            ___lwmod
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     324
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     540
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     703
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _one_temperature_trans                                2     2      0    2700
                                              8 BANK0      2     2      0
        _maxim_31856_read_nregisters
             _maxim_start_conversion
 ---------------------------------------------------------------------------------
 (3) _maxim_start_conversion                               2     2      0    1683
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
          _maxim_31856_read_register
         _maxim_31856_write_register
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_write_register                           2     1      1    1556
                                              4 COMMON     2     1      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _maxim_31856_read_register                            3     3      0      96
                                              4 COMMON     3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _maxim_31856_read_nregisters                          5     3      2    1017
                                              3 BANK0      5     3      2
                   _SPI_Exchange8bit
             _SPI_Exchange8bitBuffer
 ---------------------------------------------------------------------------------
 (4) _SPI_Exchange8bitBuffer                               7     5      2     739
                                              4 COMMON     4     2      2
                                              0 BANK0      3     3      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _SPI_Exchange8bit                                     1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Two_Display                                          6     6      0    1865
                                              6 BANK0      6     6      0
                      _WriteAll_1621
 ---------------------------------------------------------------------------------
 (3) _WriteAll_1621                                        6     3      3    1723
                                              0 BANK0      6     3      3
                       _SendBit_1621
                   _SendDataBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendDataBit_1621                                     5     4      1     256
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Set_start_flag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_finish_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendCmd_1621                                         2     2      0     595
                                              0 BANK0      2     2      0
                       _SendBit_1621
 ---------------------------------------------------------------------------------
 (4) _SendBit_1621                                         5     4      1     564
                                              3 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _Key_Scan                                             3     3      0      40
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Bq32k_Time_Init                                     19    19      0     713
                                              5 BANK0     12    12      0
                    _I2C_Send_Buffer
 ---------------------------------------------------------------------------------
 (2) _I2C_Send_Buffer                                      7     5      2     676
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                      _I2C_Send_Byte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Send_Byte                                        3     3      0     102
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          1     1      0       0
                                              2 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                              1 COMMON     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _Bq32k_Time_Init
     _I2C_Send_Buffer
       _I2C_Send_Byte
       _I2C_Start
       _I2C_Stop
   _Key_Process
     _EUSART_Write
     _FLASH_ReadWord
     _Key_Scan
     _Save_Write_time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_word
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
     _SendCmd_1621
       _SendBit_1621
     _Set_finish_flag
     _Set_start_flag
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _Write_Flash_head
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
     _temperature_process
       _Two_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _one_temperature_trans
         _maxim_31856_read_nregisters
           _SPI_Exchange8bit
           _SPI_Exchange8bitBuffer
             _SPI_Exchange8bit
         _maxim_start_conversion
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
       _temperature_display
         _Tc_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
           _memset
         _err_Display
           _WriteAll_1621
             _SendBit_1621
             _SendDataBit_1621
         _maxim_31856_write_register
           _SPI_Exchange8bit
         _maxim_clear_fault_status
           _maxim_31856_read_register
             _SPI_Exchange8bit
           _maxim_31856_write_register
             _SPI_Exchange8bit
         _tc_temperature_trans
           _Calculate_Time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_time
               _Bq32k_Rtc_Read_Time
                 _I2C_Read_Buffer
                   _I2C_Receive_Byte
                   _I2C_Send_Byte
                   _I2C_Start
                   _I2C_Stop
                 _bcd2bin
                   ___bmul
               _Save_Write_word
                 _FLASH_WriteWord
                   _FLASH_ReadWord
                   _FLASH_WriteBlock
                     _FLASH_EraseBlock
             _Write_Flash_finish
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             _Write_Flash_head
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
             ___wmul
           _Save_Write_word
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
       _time_Display
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
   _Save_process
     _Calculate_Time
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _Save_Write_time
         _Bq32k_Rtc_Read_Time
           _I2C_Read_Buffer
             _I2C_Receive_Byte
             _I2C_Send_Byte
             _I2C_Start
             _I2C_Stop
           _bcd2bin
             ___bmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
       _Write_Flash_finish
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       _Write_Flash_head
         _FLASH_WriteWord
           _FLASH_ReadWord
           _FLASH_WriteBlock
             _FLASH_EraseBlock
       ___wmul
     _Save_Write_word
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _SendCmd_1621
     _SendBit_1621
   _Serach_Flash_Head
     _FLASH_ReadWord
     _Write_Flash_finish
       _FLASH_WriteWord
         _FLASH_ReadWord
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _WriteAll_1621
     _SendBit_1621
     _SendDataBit_1621
   _maxim_31856_init
     _maxim_31856_write_register
       _SPI_Exchange8bit
   _temperature_process
     _Two_Display
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
     _one_temperature_trans
       _maxim_31856_read_nregisters
         _SPI_Exchange8bit
         _SPI_Exchange8bitBuffer
           _SPI_Exchange8bit
       _maxim_start_conversion
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
     _temperature_display
       _Tc_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         _memset
       _err_Display
         _WriteAll_1621
           _SendBit_1621
           _SendDataBit_1621
       _maxim_31856_write_register
         _SPI_Exchange8bit
       _maxim_clear_fault_status
         _maxim_31856_read_register
           _SPI_Exchange8bit
         _maxim_31856_write_register
           _SPI_Exchange8bit
       _tc_temperature_trans
         _Calculate_Time
           _Bq32k_Rtc_Read_Time
             _I2C_Read_Buffer
               _I2C_Receive_Byte
               _I2C_Send_Byte
               _I2C_Start
               _I2C_Stop
             _bcd2bin
               ___bmul
           _Save_Write_time
             _Bq32k_Rtc_Read_Time
               _I2C_Read_Buffer
                 _I2C_Receive_Byte
                 _I2C_Send_Byte
                 _I2C_Start
                 _I2C_Stop
               _bcd2bin
                 ___bmul
             _Save_Write_word
               _FLASH_WriteWord
                 _FLASH_ReadWord
                 _FLASH_WriteBlock
                   _FLASH_EraseBlock
           _Write_Flash_finish
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           _Write_Flash_head
             _FLASH_WriteWord
               _FLASH_ReadWord
               _FLASH_WriteBlock
                 _FLASH_EraseBlock
           ___wmul
         _Save_Write_word
           _FLASH_WriteWord
             _FLASH_ReadWord
             _FLASH_WriteBlock
               _FLASH_EraseBlock
     _time_Display
       _Bq32k_Rtc_Read_Time
         _I2C_Read_Buffer
           _I2C_Receive_Byte
           _I2C_Send_Byte
           _I2C_Start
           _I2C_Stop
         _bcd2bin
           ___bmul
       _WriteAll_1621
         _SendBit_1621
         _SendDataBit_1621
       ___awdiv
       ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      45       9       86.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Jul 11 16:57:40 2016

                        __end_of_I2C_Send_Buffer 0D1E                                   _SPI_Initialize 082D  
                     ?_maxim_31856_read_register 0070    maxim_31856_read_register@uch_register_address 0075  
                                 ___bmul@product 0075                               __size_of_I2C_Start 0019  
                                    __CFG_CP$OFF 0000                                ?_Write_Flash_head 0070  
                                             l71 0854                                     ___awdiv@sign 0021  
                        ?_SPI_Exchange8bitBuffer 0074                           __end_of_FVR_Initialize 081D  
                            ___wmul@multiplicand 0075                                 ?_Save_Write_time 0070  
                               ?_Save_Write_word 0033                                  _timer0ReloadVal 00EF  
                             ??_Write_Flash_head 0077                             Bq32k_Rtc_Read_Time@p 002F  
                                            l129 0840                                              l166 07AF  
                                            l370 048E                                              l531 01C7  
                                            l516 00E4                                              l372 0490  
                                            l197 0975                                              l534 01CF  
                                            l518 0191                                              l543 07BE  
                                            l536 01FA                                              l528 0175  
                                            l627 0A2C                                              l643 0A4C  
                                            l539 0202                                              l379 04BE  
                                            l733 0DF1                                              l629 0A2E  
                                            l645 0A4E                                              l389 052A  
                                            l727 0DEC                                              l903 05CD  
                                            l672 0C75                                              l584 0C0F  
                                            l682 03F6                                              l739 0E0D  
                                            l683 041D                                              l749 0E22  
                                            l863 0A9A                                              l864 0A9E  
                                            l768 0AE3                                              l858 0AA4  
                                            l885 0589                                              l899 05C0  
                                            l999 0EF4                                              _RB1 0069  
                                            _RB3 006B                         __end_of_maxim_31856_init 1000  
                                            _RB5 006D                                              _RA7 0067  
                                   ?_err_Display 0070                                     ___awmod@sign 0021  
                             _Write_Flash_finish 0B4E                                     __CFG_BORV$LO 0000  
                                            wreg 0009                                     __CFG_IESO$ON 0000  
                               ?_FLASH_WriteWord 002A                           _maxim_start_conversion 097C  
                 FLASH_WriteBlock@flashWordArray 0022                                     __CFG_LVP$OFF 0000  
                                           l1003 0F25                                             l1026 0A0D  
                                           l4212 0772                                             l4304 0AF3  
                                           l4224 079A                                             l5114 0D01  
                                           l4322 08B4                                             l5210 0C3D  
                                           l5116 0D1B                                             l4500 0E64  
                                           l5060 0BDE                                             l5220 0547  
                                           l4254 0DF3                                             l5126 0A8C  
                                           l4510 0E6C                                             l4502 0E69  
                                           l4318 08AE                                             l4414 0CCB  
                                           l5070 0BE9                                             l4600 09D2  
                                           l4344 0D8A                                             l5072 0BEC  
                                           l5232 0568                                             l5224 054F  
                                           l4450 0A43                                             l4522 0C5B  
                                           l4338 0D6C                                             l5082 0BF7  
                                           l5242 0595                                             l4620 0C9F  
                                           l4612 0C81                                             l5084 0BFA  
                                           l5228 055C                                             l5332 04AD  
                                           l4438 0A23                                             l4614 0C8D  
                                           l4710 00BF                                             l4702 009C  
                                           l5262 05B1                                             l5238 058D  
                                           l5326 0498                                             l4624 0CA8  
                                           l4472 0A06                                             l5088 0BFD  
                                           l5272 05C4                                             l5336 04BF  
                                           l4642 0B40                                             l4386 068E  
                                           l4570 02E9                                             l4706 00AB  
                                           l4730 0101                                             l5266 05B8  
                                           l4492 0E3B                                             l4636 0B28  
                                           l4388 06B9                                             l4580 02F8  
                                           l4900 0DAB                                             l5380 0503  
                                           l4638 0B34                                             l4646 0B49  
                                           l4830 043D                                             l4822 03BE  
                                           l4590 03A7                                             l4566 02E0  
                                           l5294 0F07                                             l4496 0E4A  
                                           l4832 044C                                             l4824 03D9  
                                           l4728 00FC                                             l4912 0DB8  
                                           l4904 0DB2                                             l5392 052B  
                                           l4498 0E5F                                             l4826 0432  
                                           l4762 0150                                             l4754 012D  
                                           l4914 0DC4                                             l4922 0DD9  
                                           l5394 052E                                             l4940 07CE  
                                           l4836 0456                                             l4780 018D  
                                           l4676 006C                                             l4758 013C  
                                           l4862 0E99                                             l4926 0DE1  
                                           l4918 0DD0                                             l4936 07C6  
                                           l4880 0EBF                                             l4872 0EA1  
                                           l4856 0E8E                                             l4970 0D3F  
                                           l4962 0D2F                                             l4874 0EAD  
                                           l4884 0EC8                                             l4798 01D8  
                                           l4974 0D47                                             l4966 0D37  
                                           l4888 0ED0                              ?_Write_Flash_finish 0070  
                                           _LATA 010C                                             _LATB 010D  
                                           _LATC 010E                                             u4015 0B3A  
                                           u4025 0B41                                             u4070 0082  
                                           u4135 00B1                                             u4080 0083  
                                           u5107 06A1                                             u4180 0113  
                                           u5117 06A8                                             u4245 0142  
                                           u4190 0114                                             u5207 0A90  
                                           u5127 06AF                                             u3455 075E  
                                           u4415 0EA4                                             u5217 0934  
                                           u5137 06C8                                             u5307 0DFB  
                                           u5227 093A                                             u5147 06CF  
                                           u4435 0EAE                                             u4515 0DBB  
                                           u5317 0E03                                             u5237 0940  
                                           u5157 06D6                                             u3645 08C9  
                                           u4445 0EB8                                             u5327 0E11  
                                           u5247 0946                                             u5167 0AD9  
                                           u4455 0EC0                                             u4535 0DCA  
                                           u5337 0E17                                             u5257 091B  
                                           u5177 0AE9                                             u3745 0A0E  
                                           u4545 0DD1                                             u5097 0481  
                                           u5347 0E28                                             u5267 0921  
                                           u5187 0A53                                             u3755 0A13  
                                           u5357 0E2E                                             u5277 0927  
                                           u5197 0A33                                             u3925 0C84  
                                           u5367 0970                                             u5287 092D  
                                           u5297 0DF5                                             u3945 0C8E  
                                           u4770 09BC                                             u3955 0C98  
                                           u3965 0CA0                                             u3995 0B2B  
                                           _TMR0 0015                                             _WPUB 020D  
                                           _WPUE 0210                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                          __size_of_Set_start_flag 0006  
                         __size_of_WriteAll_1621 0035                                    ??_Key_Process 005C  
                                           _main 0471                                             fsr0h 0005  
                                           fsr1h 0007                                             fsr0l 0004  
                                           indf0 0000                                             indf1 0001  
                                           fsr1l 0006                                             btemp 007E  
                               __end_of_I2C_Stop 0949                                ?_FLASH_WriteBlock 0020  
                                  __CFG_BOREN$ON 0000                                             ltemp 007E  
                            SendCmd_1621@command 0021                                             start 0013  
                                           ttemp 007E                                             wtemp 007E  
                                __end_of_Dis_TAB 1015                           __end_of_SPI_Initialize 0833  
                             ??_FLASH_WriteBlock 0023                                 ?_I2C_Read_Buffer 0076  
                              ___bmul@multiplier 0076                                    __CFG_MCLRE$ON 0000  
                                   main@bat_data 0163                   __end_of_SPI_Exchange8bitBuffer 0E83  
                                time_Display@num 0033                             ??_Write_Flash_finish 0077  
                        __end_of_TMR0_Initialize 089B                                  ?_FVR_Initialize 0070  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 0005  
                  __end_of_OSCILLATOR_Initialize 0827                                  __end_of_bcd2bin 08D2  
                                          ?_main 0070                                  __end_of___awdiv 0ED5  
                                  __CFG_WDTE$OFF 0000                                  __end_of___awmod 0DE6  
                                ___awdiv@divisor 0073                                            _LATA0 0860  
                                          _LATA1 0861                                            _LATB0 0868  
                                          _LATA2 0862                                            _LATB1 0869  
                                          _LATA3 0863                                            _LATC0 0870  
                                          _LATA4 0864                                            _LATC1 0871  
                                          _LATA5 0865                                            _LATC2 0872  
                                __end_of___lwdiv 0CAD                                            i1l255 000E  
                                __end_of___lwmod 0B4E                                  ___awdiv@counter 0020  
                                          _RCREG 0199                                            _RCSTA 019D  
                                          u371m0 06E8                                            u372m0 06F5  
                                     _Flash_buff 0120                                            u386m0 02D9  
                                          u389m0 03A0                          ??_one_temperature_trans 0028  
                              ?_SendDataBit_1621 0073                                            _TRISA 008C  
                                          _TRISB 008D                                            _TRISC 008E  
                                          _TXREG 019A                                            _TXSTA 019E  
                               __end_of_TMR0_ISR 09B1                               ??_SendDataBit_1621 0074  
                   __end_of_tc_temperature_trans 020B                                            main@i 0162  
                              __end_of_I2C_Start 0930                              _Bq32k_Rtc_Read_Time 0F38  
                                Tc_Display@count 002A                                WriteAll_1621@addr 0024  
                                          ltemp0 007E                                            ltemp1 0082  
                                          ltemp2 0086                                            ltemp3 0080  
                                          ttemp0 007E                                            ttemp1 0081  
                                          ttemp2 0084                                            ttemp3 0087  
                                          ttemp4 007F                                            status 0003  
                                          wtemp0 007E                                            wtemp1 0080  
                                          wtemp2 0082                                            wtemp3 0084  
                                          wtemp4 0086                                            wtemp5 0088  
                                          wtemp6 007F                           __size_of_I2C_Send_Byte 004C  
                                _Cur_temperature 00B0                                       _Tc_Display 03A9  
                                ?_SPI_Initialize 0070                      __end_of_temperature_display 0D5B  
                                __initialization 0015                              __end_of_Key_Process 05CE  
                               ?_I2C_Send_Buffer 0076                                     __end_of_main 0538  
                                 WriteAll_1621@i 0025                                   WriteAll_1621@p 0020  
                               __end_of_Key_Scan 0AA6                                    main@data_temp 0160  
                                 ??_EUSART_Write 0073                             ?_Bq32k_Rtc_Read_Time 0070  
                    __end_of_temperature_process 0C10                                   __CFG_LPBOR$OFF 0000  
   maxim_31856_write_register@uch_register_value 0074                      ?_INTERRUPT_InterruptManager 0070  
                                  _WriteAll_1621 0C43                                           ??_main 0062  
                                   Key_Process@i 0060   maxim_31856_write_register@uch_register_address 0075  
                        __size_of_FLASH_ReadWord 0019                          Bq32k_Rtc_Read_Time@temp 0025  
                              I2C_Receive_Byte@i 0075                         __end_of_SPI_Exchange8bit 0858  
                                         _ADCON0 009D                                           _ADCON1 009E  
                      FLASH_WriteBlock@writeAddr 0020                                           _ADRESH 009C  
                                         _ADRESL 009B                                 ___awdiv@dividend 0075  
                                         _APFCON 011D                                           _ANSELA 018C  
                                         _ANSELB 018D                                           _ANSELC 018E  
                                         i1l3720 0AB4                                           i1l3718 0AB3  
                                         _FVRCON 0117                                           _PMADRH 0192  
                                         _PMADRL 0191                                           _PMDATH 0194  
                                         _PMDATL 0193                                _temperature_value 0065  
                                         _PMCON2 0196                        __size_of_FLASH_EraseBlock 001C  
                                         _OSCCON 0099                                           _SPBRGH 019C  
                                         _SPBRGL 019B                         _Cur_temperature_time_ch1 00B6  
                       _Cur_temperature_time_ch2 00B7                                           _TRISB1 0469  
                                         _TRISB3 046B                                           _SSPBUF 0211  
                                  ?_SendCmd_1621 0070                                    ?_SendBit_1621 0073  
                                 __CFG_PWRTE$OFF 0000                                  _Bq32k_Time_Init 09B1  
                               SendBit_1621@data 0076                                           ___bmul 08AC  
                                      ??_bcd2bin 0020                                           ___wmul 0A03  
                  FLASH_WriteWord@blockStartAddr 0030                                        ??___awdiv 0077  
                                 __CFG_STVREN$ON 0000                                        ??___awmod 0077  
                          ??_Bq32k_Rtc_Read_Time 0023                                        ??___lwdiv 0025  
                                      ??___lwmod 0077                     ?_maxim_31856_read_nregisters 0023  
                            FLASH_WriteWord@word 002D                                   ?_WriteAll_1621 0020  
                               ?_TMR0_Initialize 0070                                           _memset 09CC  
                              ?_I2C_Receive_Byte 0070                                 ___awdiv@quotient 0022  
                                ___awmod@divisor 0073                                           _uch_sr 00C3  
                                ___awmod@counter 0020                                           _rtc_tm 00DA  
                                _Set_finish_flag 081D                                    _I2C_Send_Byte 0DE6  
                             ??_I2C_Receive_Byte 0073                          FLASH_ReadWord@flashAddr 0073  
                                      ?_I2C_Stop 0070                     ??_maxim_31856_write_register 0075  
                          I2C_Read_Buffer@Length 0077                         ADC_GetConversion@channel 0076  
                           __size_of_err_Display 002C                            __end_of_TMR0_CallBack 0ACB  
                                     bcd2bin@val 0077                       ??_maxim_clear_fault_status 0077  
                                 _Set_start_flag 0827                                _SYSTEM_Initialize 08D2  
                                 ??_SendCmd_1621 0020                          __end_of__initialization 003B  
                                 ??_SendBit_1621 0074                                      _Key_Process 0538  
                             ?_SYSTEM_Initialize 0070                                      ?_Tc_Display 0070  
                             Calculate_Time@temp 0043                              ___bmul@multiplicand 0073  
                              time_Display@F2129 00A8             tc_temperature_trans@temperature_back 0053  
                                 __pcstackCOMMON 0070             tc_temperature_trans@temperature_temp 0059  
                                   __pidataBANK1 0858                              ??_SYSTEM_Initialize 0074  
                           _tc_temperature_trans 003F                                        ?_TMR0_ISR 0070  
                    ??_maxim_31856_read_register 0074                                 FLASH_WriteWord@i 0032  
            __size_of_maxim_31856_write_register 000D                                    ?_Save_process 0070  
                                 ?_I2C_Send_Byte 0070                    ??_maxim_31856_read_nregisters 0025  
                        ?_maxim_start_conversion 0070                                ?_maxim_31856_init 0070  
                                 _OPTION_REGbits 0095                            TMR0_ISR@CountCallBack 00AC  
                                _temperature_int 00B2                                       ??_I2C_Stop 0073  
                                  ??_Two_Display 0026                               ??_maxim_31856_init 0076  
                    FLASH_WriteBlock@GIEBitValue 0028                                 Two_Display@F2123 00A0  
                           I2C_Receive_Byte@Data 0074                           __end_of_Set_start_flag 082D  
                            I2C_Read_Buffer@Flag 0022                        __end_of_SYSTEM_Initialize 08E7  
                      __size_of_Write_Flash_head 002F                              I2C_Read_Buffer@buff 0076  
                        __end_of_Bq32k_Time_Init 09CC                                       __pbssBANK0 0065  
                                     __pbssBANK1 00A0                                       __pbssBANK2 0120  
                                      ?_Key_Scan 0070                             __end_of_EUSART_Write 0847  
                                __CFG_VCAPEN$OFF 0000                                 ??_FVR_Initialize 0073  
                                     __pmaintext 0471                                          ?___bmul 0073  
                        __end_of_Set_finish_flag 0822                            ?_tc_temperature_trans 0070  
                                    _Record_flag 006B                                  ??_WriteAll_1621 0023  
                                        ?___wmul 0073                                       ??_TMR0_ISR 0071  
                                 ??_Save_process 004F                                       __pintentry 0004  
                                        _BAUDCON 019F                                          ?_memset 0073  
                 __end_of_maxim_start_conversion 0996                        __size_of_FLASH_WriteBlock 006B  
                        __size_of_ADC_Initialize 0008                                   _FLASH_ReadWord 0949  
                            __size_of_Tc_Display 00C8                   __size_of_one_temperature_trans 0048  
                  __end_of_one_temperature_trans 0800                                          _OSCSTAT 009A  
                       __size_of_Save_Write_time 0072                                          _SSP1ADD 0212  
                       __size_of_Save_Write_word 0036                        _maxim_31856_read_register 089B  
                                ?_Set_start_flag 0070             __size_of_maxim_31856_read_nregisters 0018  
                                     ??_Key_Scan 0073                                          _Dis_TAB 1000  
                               _FLASH_EraseBlock 09E7                                 ??_SPI_Initialize 0073  
                       __size_of_FLASH_WriteWord 0045                          __size_of_Calculate_Time 019E  
                            __end_of_Two_Display 0BDD                        __size_of_SendDataBit_1621 0020  
                                      _I2C_Start 0917  maxim_31856_read_nregisters@uch_register_address 0027  
                                      _CH1_state 00B4                                        _CH2_state 00B5  
                                        _bcd2bin 08BD                                  __size_of___bmul 0011  
                                  ?_time_Display 0070                                          ___awdiv 0E83  
                                        ___awmod 0DA0                                  __size_of___wmul 001E  
                                        ___lwdiv 0C78                                          ___lwmod 0B21  
                                ??_I2C_Send_Byte 0073                      __size_of_Write_Flash_finish 002F  
                              I2C_Send_Byte@Data 0074                           __end_of_FLASH_ReadWord 0962  
                                __size_of_memset 001B                         __size_of_I2C_Read_Buffer 0078  
                                        __ptext1 0F9C                                          __ptext2 0C10  
                                        __ptext3 0ED5                                          __ptext4 08D2  
                                        __ptext5 088B                                          __ptext6 082D  
                                        __ptext7 0A61                                          __ptext8 0822  
                                        __ptext9 0819                             __end_of_SendCmd_1621 08FF  
                           SendDataBit_1621@data 0076                             __end_of_SendBit_1621 0A41  
             __end_of_maxim_31856_write_register 087B                       _maxim_31856_write_register 086E  
                          _OSCILLATOR_Initialize 0822                                   I2C_Send_Byte@i 0075  
                               ___awmod@dividend 0075                                          _uch_cr0 007A  
                                        _uch_cr1 00BE                         ??_PIN_MANAGER_Initialize 0073  
                                        _uch_reg 00C4                 __end_of_maxim_clear_fault_status 088B  
                              ?_SPI_Exchange8bit 0070                            I2C_Send_Buffer@Length 0077  
                     __size_of_SYSTEM_Initialize 0015                                          clrloop0 083A  
                           end_of_initialization 003B                               ??_SPI_Exchange8bit 0073  
                           SPI_Exchange8bit@data 0073                                 ?_Bq32k_Time_Init 0070  
                                        init_ram 0833                                          memset@c 0073  
                                        memset@n 0075                                          memset@p 0021  
                                        initloop 0834                                       ?_I2C_Start 0070  
                              _EUSART_Initialize 0862                           ??_tc_temperature_trans 004F  
                             ?_EUSART_Initialize 0070                                   ??_time_Display 0030  
                                      _RCSTAbits 019D                                 ?_Set_finish_flag 0070  
                          Serach_Flash_Head@data 0034                                     __pstringtext 1000  
                      FLASH_ReadWord@GIEBitValue 0075                                       _time_count 006D  
                                ?_FLASH_ReadWord 0073                     __size_of_temperature_display 003D  
                            ??_EUSART_Initialize 0073                                     _display_buff 00E1  
                       __size_of_I2C_Send_Buffer 003B                                 __CFG_FOSC$INTOSC 0000  
                   __size_of_temperature_process 0033                            __size_of_EUSART_Write 0008  
                                    _Two_Display 0BAC                                __size_of_I2C_Stop 0019  
                               _Write_Flash_head 0B7D                              Bq32k_Time_Init@temp 0027  
                           __end_of_Save_process 0F38                        __size_of_I2C_Receive_Byte 002A  
                           Key_Process@gKeyValue 005F                        __end_of_EUSART_Initialize 086E  
                            Calculate_Time@temp1 0047                              Calculate_Time@temp2 004B  
                              ??_Save_Write_time 0037                                     ?_Key_Process 0070  
                              ??_Save_Write_word 0035                         ??_SPI_Exchange8bitBuffer 0020  
                                   ??_Tc_Display 0029                      __end_of_Bq32k_Rtc_Read_Time 0F9C  
                              FLASH_WriteBlock@i 0029                                ??_FLASH_WriteWord 0076  
                   tc_temperature_trans@var_time 0057        maxim_start_conversion@uch_conversion_mode 0020  
                                 __end_of___bmul 08BD                                   __end_of___wmul 0A21  
                                   _EUSART_Write 083F                                __size_of_TMR0_ISR 001B  
                                 _ADC_Initialize 0847                                 _FLASH_WriteBlock 074D  
                           Key_Process@data_temp 005D                           ?_OSCILLATOR_Initialize 0070  
                                 __end_of_memset 09E7                                   Tc_Display@data 002B  
                               WriteAll_1621@cnt 0022                                    ??_err_Display 0026  
                            start_initialization 0015                         __size_of_TMR0_Initialize 0010  
                             __end_of_Tc_Display 0471                  __size_of_PIN_MANAGER_Initialize 0022  
                              ??_I2C_Read_Buffer 0020                                   Two_Display@num 0027  
                                 _Calculate_Time 020B                        __size_of_maxim_31856_init 0064  
                               _SendDataBit_1621 0A41                                      ??_I2C_Start 0073  
                              __size_of_Key_Scan 0023                                 _temperature_sign 00BA  
             __size_of_maxim_31856_read_register 0011                                  SendBit_1621@cnt 0073  
                                       ??___bmul 0074                __size_of_maxim_clear_fault_status 0010  
                      ?_maxim_clear_fault_status 0070                                         ??___wmul 0077  
                          __size_of_SendCmd_1621 0018                            __size_of_SendBit_1621 0020  
                            I2C_Send_Buffer@Flag 0024                           __size_of_TMR0_CallBack 0025  
                         __end_of_ADC_Initialize 084F                                      __pdataBANK1 00E5  
                            I2C_Send_Buffer@buff 0076                                         ??_memset 0077  
                    FLASH_EraseBlock@GIEBitValue 0075                         __end_of_FLASH_EraseBlock 0A03  
                               ??_Set_start_flag 0073                                      __pbssCOMMON 0078  
                                _CH1_temperature 0069                                        ___latbits 0003  
                                  __pcstackBANK0 0020                                    __pcstackBANK2 0160  
                           __end_of_time_Display 0663                    SPI_Exchange8bitBuffer@dataOut 0075  
                         __end_of_Calculate_Time 03A9                                ??_I2C_Send_Buffer 0020  
                            __end_of_err_Display 0B21                       __size_of_EUSART_Initialize 000C  
                             I2C_Read_Buffer@ADD 0021                                     _LongPressSec 00B8  
                              Two_Display@number 002B                                     _SendCmd_1621 08E7  
                                   _SendBit_1621 0A21                                        __pnvBANK1 00EF  
                __size_of_SPI_Exchange8bitBuffer 0051                                 ___lwdiv@dividend 0023  
                         _PIN_MANAGER_Initialize 0A61                                      _MAX31856Sec 00B9  
              __end_of_maxim_31856_read_register 08AC                                         ?_bcd2bin 0070  
                                       ?___awdiv 0073                                         ?___awmod 0073  
            __end_of_maxim_31856_read_nregisters 0917                      _maxim_31856_read_nregisters 08FF  
                                       ?___lwdiv 0021                                         ?___lwmod 0073  
                                ?_ADC_Initialize 0070                                SendDataBit_1621@i 0077  
                          __end_of_WriteAll_1621 0C78                     ??_INTERRUPT_InterruptManager 0072  
                    ?_maxim_31856_write_register 0074                                         _I2C_Stop 0930  
                          __size_of_Save_process 0063                                  _CH2_temperature 0078  
                               I2C_Send_Buffer@i 0023                                 ___lwdiv@quotient 0027  
                                  _TMR0_CallBack 0AA6                                  ?_Calculate_Time 0070  
                            _temperature_decimal 006C                            _one_temperature_trans 07B8  
                               _I2C_Receive_Byte 0ACB                              SendDataBit_1621@cnt 0073  
                       FLASH_WriteWord@flashAddr 002A                                   err_Display@num 0027  
                 FLASH_WriteBlock@blockStartAddr 0026            maxim_31856_read_nregisters@uch_nBytes 0024  
                            _temperature_display 0D1E                                ??_TMR0_Initialize 0073  
                                 ___wmul@product 0020                                        clear_ram0 0839  
                                      _uch_ltcbh 00BF                                        _uch_ltcbl 00C0  
                                      _uch_ltcbm 00C1                             __size_of_Key_Process 0096  
            __size_of_INTERRUPT_InterruptManager 000F                              _temperature_process 0BDD  
                                       _PIR1bits 0011                        FLASH_EraseBlock@startAddr 0073  
                               ??_FLASH_ReadWord 0075                        __size_of_SPI_Exchange8bit 0009  
                     __end_of_Write_Flash_finish 0B7D                                         _SSP1CON1 0215  
                                       _TMR0_ISR 0996                         __end_of_Write_Flash_head 0BAC  
                                       _SSP1STAT 0214                                     _Save_process 0ED5  
                           ?_temperature_display 0070                            __end_of_I2C_Send_Byte 0E32  
                                     _ADCON0bits 009D                                ___wmul@multiplier 0073  
                        __size_of_FVR_Initialize 0004                           _SPI_Exchange8bitBuffer 0E32  
                                 _Cur_Save_Index 00AE                                      _err_Display 0AF5  
                            Save_Write_word@data 0033                             ?_temperature_process 0070  
                                _Save_Write_time 06DB                                  _Save_Write_word 0CAD  
                                   ?_Two_Display 0070                                   ?_TMR0_CallBack 0070  
                                _FLASH_WriteWord 0D5B                                         _Key_Scan 0A83  
            maxim_31856_read_nregisters@uch_buff 0023                         __end_of_FLASH_WriteBlock 07B8  
                               _maxim_31856_init 0F9C                                _Serach_Flash_Head 0C10  
                       __size_of_Bq32k_Time_Init 001B                               ?_Serach_Flash_Head 0070  
                              _ADC_GetConversion 0962                         ??_maxim_start_conversion 0077  
                             I2C_Send_Buffer@ADD 0022                    __size_of_tc_temperature_trans 01CC  
                        __size_of_SPI_Initialize 0006                                 __size_of_bcd2bin 0015  
                        ??_OSCILLATOR_Initialize 0073                               Serach_Flash_Head@i 0036  
                             ?_ADC_GetConversion 0073                                 __size_of___awdiv 0052  
                          ??_temperature_display 005B                                 __size_of___awmod 0046  
                                _I2C_Read_Buffer 0663                                 __size_of___lwdiv 0035  
                               __size_of___lwmod 002D                              ??_Serach_Flash_Head 0078  
                   SPI_Exchange8bitBuffer@dataIn 0076                     SPI_Exchange8bitBuffer@bufLen 0074  
                               err_Display@F2126 00A4                         __end_of_SendDataBit_1621 0A61  
                       __size_of_Set_finish_flag 0005                            __size_of_time_Display 0095  
                            ??_ADC_GetConversion 0075                            ??_temperature_process 0078  
                                ___lwdiv@divisor 0021                                  ___lwdiv@counter 0026  
                                       __ptext10 0862                                         __ptext11 0847  
                                       __ptext20 0A03                                         __ptext12 0538  
                                       __ptext21 0B7D                                         __ptext13 0BDD  
                                       __ptext30 08BD                                         __ptext22 0B4E  
                                       __ptext14 05CE                                         __ptext31 08AC  
                                       __ptext23 06DB                                         __ptext15 0DA0  
                                       __ptext40 07B8                                         __ptext32 0663  
                                       __ptext24 0CAD                                         __ptext16 0E83  
                                       __ptext41 097C                                         __ptext33 0ACB  
                                       __ptext25 0D5B                                         __ptext17 0D1E  
                                       __ptext50 0827                                         __ptext42 086E  
                                       __ptext34 087B                                         __ptext26 074D  
                                       __ptext18 003F                                         __ptext51 081D  
                                       __ptext43 089B                                         __ptext35 0AF5  
                                       __ptext27 09E7                                         __ptext19 020B  
                                       __ptext60 0DE6                                         __ptext52 08E7  
                                       __ptext44 08FF                                         __ptext36 03A9  
                                       __ptext28 0949                                         __ptext61 0962  
                                       __ptext53 0A21                                         __ptext45 0E32  
                                       __ptext37 09CC                                         __ptext29 0F38  
                                       __ptext54 0A83                                         __ptext46 084F  
                                       __ptext38 0B21                                         __ptext63 0996  
                                       __ptext55 083F                                         __ptext47 0BAC  
                                       __ptext39 0C78                                         __ptext64 0AA6  
                                       __ptext56 09B1                                         __ptext48 0C43  
                                       __ptext57 0CE3                                         __ptext49 0A41  
                                       __ptext58 0930                                         __ptext59 0917  
                         ?_one_temperature_trans 0070                                     _SSP1CON1bits 0215  
                          FLASH_WriteWord@ramBuf 002C                            FLASH_WriteWord@offset 002F  
                      __end_of_Serach_Flash_Head 0C43                                    __size_of_main 00C7  
     maxim_31856_read_register@uch_register_data 0076                        __end_of_ADC_GetConversion 097C  
                                       _uch_cjth 00BC                                         _uch_cjtl 00BD  
                                       _uch_mask 00C2                             Save_process@var_time 0051  
                                       int$flags 007E                                     _time_Display 05CE  
                                       _tmr_flag 00BB               __end_of_INTERRUPT_InterruptManager 0013  
                     _INTERRUPT_InterruptManager 0004                     __size_of_Bq32k_Rtc_Read_Time 0064  
                                   _SSP1STATbits 0214                          __end_of_Save_Write_time 074D  
                        __end_of_Save_Write_word 0CE3                                  _I2C_Send_Buffer 0CE3  
                              ?_FLASH_EraseBlock 0073                               ??_FLASH_EraseBlock 0075  
                                     _INTCONbits 000B                          __end_of_FLASH_WriteWord 0DA0  
                                ??_TMR0_CallBack 0070                                       _FVRCONbits 0117  
                                Key_Scan@Key_val 0075                                    SendBit_1621@i 0077  
                                       memset@p1 0020                                         intlevel1 0000  
                                     _PMCON1bits 0195                                 ___lwmod@dividend 0075  
                        ?_PIN_MANAGER_Initialize 0070                                __CFG_CLKOUTEN$OFF 0000  
             SPI_Exchange8bitBuffer@bytesWritten 0077                                 ??_ADC_Initialize 0073  
                        __end_of_I2C_Read_Buffer 06DB                                 _SPI_Exchange8bit 084F  
                __size_of_maxim_start_conversion 001A                         __end_of_I2C_Receive_Byte 0AF5  
                         Serach_Flash_Head@count 0033                                ??_Bq32k_Time_Init 0025  
                                 _FVR_Initialize 0819                                     _rtc_save_ch1 00CC  
                                   _rtc_save_ch2 00D3                                       _OPTION_REG 0095  
                               ??_Calculate_Time 0039                                  ___lwmod@divisor 0073  
                                _TMR0_Initialize 088B                                  ___lwmod@counter 0020  
       tc_temperature_trans@temperature_absolute 0055                                ??_Set_finish_flag 0073  
                             EUSART_Write@txData 0073                             __size_of_Two_Display 0031  
                 __end_of_PIN_MANAGER_Initialize 0A83                       __size_of_Serach_Flash_Head 0033  
                           Bq32k_Time_Init@F2018 00E5                       __size_of_ADC_GetConversion 001A  
                       _maxim_clear_fault_status 087B  
